

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Mar 09 23:08:42 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	18F26K42
     2                           	fnconf	param0,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec,minocg
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec,minocg
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec,minocg
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec,minocg
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec,minocg
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec,minocg
    20                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec,minocg
    21                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec,minocg
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec,minocg
    23                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec,minocg
    24                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec,minocg
    25                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec,minocg
    26                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec,minocg
    27                           	psect	bssBANK10,global,class=BANK10,space=1,delta=1,lowdata,noexec,minocg
    28                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec,minocg
    29                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec,minocg
    30                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    31                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    32                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text2,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text3,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text4,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text6,global,reloc=2,class=CODE,delta=1,inline,minocg
    39                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    45                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline,minocg
    46                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    47                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    48                           	psect	text16,global,reloc=2,class=CODE,delta=1,inline,minocg
    49                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    50                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    51                           	psect	text19,global,reloc=2,class=CODE,delta=1,inline,minocg
    52                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    53                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    54                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    55                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    56                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    57                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    58                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    59                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    60                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    61                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    62                           	psect	text30,global,reloc=2,class=CODE,delta=1,minocg
    63                           	psect	text31,global,reloc=2,class=CODE,delta=1,minocg
    64                           	psect	text32,global,reloc=2,class=CODE,delta=1,minocg
    65                           	psect	text33,global,reloc=2,class=CODE,delta=1,minocg
    66                           	psect	text34,global,reloc=2,class=CODE,delta=1,minocg
    67                           	psect	text35,global,reloc=2,class=CODE,delta=1,minocg
    68                           	psect	text36,global,reloc=2,class=CODE,delta=1,minocg
    69                           	psect	text37,global,reloc=2,class=CODE,delta=1,minocg
    70                           	psect	text38,global,reloc=2,class=CODE,delta=1,inline,minocg
    71                           	psect	text39,global,reloc=2,class=CODE,delta=1,minocg
    72                           	psect	text40,global,reloc=2,class=CODE,delta=1,minocg
    73                           	psect	text41,global,reloc=2,class=CODE,delta=1,minocg
    74                           	psect	text42,global,reloc=2,class=CODE,delta=1,minocg
    75                           	psect	text43,global,reloc=2,class=CODE,delta=1,minocg
    76                           	psect	text44,global,reloc=2,class=CODE,delta=1,minocg
    77                           	psect	text45,global,reloc=2,class=CODE,delta=1,minocg
    78                           	psect	text46,global,reloc=2,class=CODE,delta=1,minocg
    79                           	psect	text47,global,reloc=2,class=CODE,delta=1,minocg
    80                           	psect	text48,global,reloc=2,class=CODE,delta=1,minocg
    81                           	psect	text49,global,reloc=2,class=CODE,delta=1,minocg
    82                           	psect	text50,global,reloc=2,class=CODE,delta=1,minocg
    83                           	psect	text51,global,reloc=2,class=CODE,delta=1,minocg
    84                           	psect	text52,global,reloc=2,class=CODE,delta=1,minocg
    85                           	psect	text53,global,reloc=2,class=CODE,delta=1,minocg
    86                           	psect	text54,global,reloc=2,class=CODE,delta=1,minocg
    87                           	psect	text55,global,reloc=2,class=CODE,delta=1,minocg
    88                           	psect	text56,global,reloc=2,class=CODE,delta=1,minocg
    89                           	psect	text57,global,reloc=2,class=CODE,delta=1,minocg
    90                           	psect	text58,global,reloc=2,class=CODE,delta=1,minocg
    91                           	psect	text59,global,reloc=2,class=CODE,delta=1,minocg
    92                           	psect	text60,global,reloc=2,class=CODE,delta=1,minocg
    93                           	psect	text61,global,reloc=2,class=CODE,delta=1,minocg
    94                           	psect	text62,global,reloc=2,class=CODE,delta=1,minocg
    95                           	psect	text63,global,reloc=2,class=CODE,delta=1,minocg
    96                           	psect	text64,global,reloc=2,class=CODE,delta=1,minocg
    97                           	psect	text65,global,reloc=2,class=CODE,delta=1,inline,minocg
    98                           	psect	text66,global,reloc=2,class=CODE,delta=1,inline,minocg
    99                           	psect	text67,global,reloc=2,class=CODE,delta=1,minocg
   100                           	psect	text68,global,reloc=2,class=CODE,delta=1,minocg
   101                           	psect	text69,global,reloc=2,class=CODE,delta=1,minocg
   102                           	psect	text70,global,reloc=2,class=CODE,delta=1,minocg
   103                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline,minocg
   104                           	psect	text72,global,reloc=2,class=CODE,delta=1,minocg
   105                           	psect	text73,global,reloc=2,class=CODE,delta=1,minocg
   106                           	psect	text74,global,reloc=2,class=CODE,delta=1,minocg
   107                           	psect	text75,global,reloc=2,class=CODE,delta=1,minocg
   108                           	psect	text76,global,reloc=2,class=CODE,delta=1,minocg
   109                           	psect	text77,global,reloc=2,class=CODE,delta=1,minocg
   110                           	psect	text78,global,reloc=2,class=CODE,delta=1,minocg
   111                           	psect	text79,global,reloc=2,class=CODE,delta=1,minocg
   112                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=3,minocg
   113                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1,minocg
   114                           	psect	text82,global,reloc=2,class=CODE,delta=1,minocg
   115                           	psect	text83,global,reloc=2,class=CODE,delta=1,minocg
   116                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2,minocg
   117                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=2,minocg
   118                           	psect	text86,global,reloc=2,class=CODE,delta=1,minocg
   119                           	psect	text87,global,reloc=2,class=CODE,delta=1,minocg
   120                           	psect	text88,global,reloc=2,class=CODE,delta=1,minocg
   121                           	psect	text89,global,reloc=2,class=CODE,delta=1,minocg
   122                           	psect	text90,global,reloc=2,class=CODE,delta=1,minocg
   123                           	psect	text91,global,reloc=2,class=CODE,delta=1,minocg
   124                           	psect	text92,global,reloc=2,class=CODE,delta=1,minocg
   125                           	psect	text93,global,reloc=2,class=CODE,delta=1,minocg
   126                           	psect	text94,global,reloc=2,class=CODE,delta=1,inline,minocg
   127                           	psect	text95,global,reloc=2,class=CODE,delta=1,minocg
   128                           	psect	text96,global,reloc=2,class=CODE,delta=1,minocg
   129                           	psect	text97,global,reloc=2,class=CODE,delta=1,minocg
   130                           	psect	text98,global,reloc=2,class=CODE,delta=1,minocg
   131                           	psect	text99,global,reloc=2,class=CODE,delta=1,minocg
   132                           	psect	text100,global,reloc=2,class=CODE,delta=1,minocg
   133                           	psect	text101,global,reloc=2,class=CODE,delta=1,minocg
   134                           	psect	text102,global,reloc=2,class=CODE,delta=1,minocg
   135                           	psect	text103,global,reloc=2,class=CODE,delta=1,minocg
   136                           	psect	text104,global,reloc=2,class=CODE,delta=1,minocg
   137                           	psect	text105,global,reloc=2,class=CODE,delta=1,minocg
   138                           	psect	text106,global,reloc=2,class=CODE,delta=1,minocg
   139                           	psect	text107,global,reloc=2,class=CODE,delta=1,minocg
   140                           	psect	text108,global,reloc=2,class=CODE,delta=1,minocg
   141                           	psect	text109,global,reloc=2,class=CODE,delta=1,minocg
   142                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=3,minocg
   143                           	psect	text111,global,reloc=2,class=CODE,delta=1,minocg
   144                           	psect	text112,global,reloc=2,class=CODE,delta=1,minocg
   145                           	psect	text113,global,reloc=2,class=CODE,delta=1,minocg
   146                           	psect	text114,global,reloc=2,class=CODE,delta=1,minocg
   147                           	psect	text115,global,reloc=2,class=CODE,delta=1,minocg
   148                           	psect	text116,global,reloc=2,class=CODE,delta=1,minocg
   149                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=2,minocg
   150                           	psect	text118,global,reloc=2,class=CODE,delta=1,minocg
   151                           	psect	text119,global,reloc=2,class=CODE,delta=1,minocg
   152                           	psect	text120,global,reloc=2,class=CODE,delta=1,minocg
   153                           	psect	text121,global,reloc=2,class=CODE,delta=1,minocg
   154                           	psect	text122,global,reloc=2,class=CODE,delta=1,minocg
   155                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2,minocg
   156                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=2,minocg
   157                           	psect	text125,global,reloc=2,class=CODE,delta=1,minocg
   158                           	psect	text126,global,reloc=2,class=CODE,delta=1,minocg
   159                           	psect	text127,global,reloc=2,class=CODE,delta=1,minocg
   160                           	psect	text128,global,reloc=2,class=CODE,delta=1,inline,minocg
   161                           	psect	text129,global,reloc=2,class=CODE,delta=1,inline,minocg
   162                           	psect	text130,global,reloc=2,class=CODE,delta=1,minocg
   163                           	psect	text131,global,reloc=2,class=CODE,delta=1,minocg
   164                           	psect	text132,global,reloc=2,class=CODE,delta=1,minocg
   165                           	psect	text133,global,reloc=2,class=CODE,delta=1,minocg
   166                           	psect	text134,global,reloc=2,class=CODE,delta=1,minocg
   167                           	psect	text135,global,reloc=2,class=CODE,delta=1,minocg
   168                           	psect	text136,global,reloc=2,class=CODE,delta=1,minocg
   169                           	psect	text137,global,reloc=2,class=CODE,delta=1,minocg
   170                           	psect	text138,global,reloc=2,class=CODE,delta=1,minocg
   171                           	psect	text139,global,reloc=2,class=CODE,delta=1,minocg
   172                           	psect	text140,global,reloc=2,class=CODE,delta=1,minocg
   173                           	psect	text141,global,reloc=2,class=CODE,delta=1,minocg
   174                           	psect	text142,global,reloc=2,class=CODE,delta=1,minocg
   175                           	psect	text143,global,reloc=2,class=CODE,delta=1,minocg
   176                           	psect	text144,global,reloc=2,class=CODE,delta=1,minocg
   177                           	psect	text145,global,reloc=2,class=CODE,delta=1,minocg
   178                           	psect	text146,global,reloc=2,class=CODE,delta=1,minocg
   179                           	psect	text147,global,reloc=2,class=CODE,delta=1,minocg
   180                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=2,minocg
   181                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=2,minocg
   182                           	psect	text150,global,reloc=2,class=CODE,delta=1,group=2,minocg
   183                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=2,minocg
   184                           	psect	text152,global,reloc=2,class=CODE,delta=1,minocg
   185                           	psect	text153,global,reloc=2,class=CODE,delta=1,minocg
   186                           	psect	text154,global,reloc=2,class=CODE,delta=1,minocg
   187                           	psect	text155,global,reloc=2,class=CODE,delta=1,minocg
   188                           	psect	text156,global,reloc=2,class=CODE,delta=1,minocg
   189                           	psect	text157,global,reloc=2,class=CODE,delta=1,minocg
   190                           	psect	text158,global,reloc=2,class=CODE,delta=1,minocg
   191                           	psect	text159,global,reloc=2,class=CODE,delta=1,minocg
   192                           	psect	text160,global,reloc=2,class=CODE,delta=1,minocg
   193                           	psect	text161,global,reloc=2,class=CODE,delta=1,minocg
   194                           	psect	text162,global,reloc=2,class=CODE,delta=1,minocg
   195                           	psect	text163,global,reloc=2,class=CODE,delta=1,minocg
   196                           	psect	text164,global,reloc=2,class=CODE,delta=1,minocg
   197                           	psect	text165,global,reloc=2,class=CODE,delta=1,minocg
   198                           	psect	text166,global,reloc=2,class=CODE,delta=1,minocg
   199                           	psect	text167,global,reloc=2,class=CODE,delta=1,minocg
   200                           	psect	text168,global,reloc=2,class=CODE,delta=1,minocg
   201                           	psect	text169,global,reloc=2,class=CODE,delta=1,minocg
   202                           	psect	text170,global,reloc=2,class=CODE,delta=1,minocg
   203                           	psect	text171,global,reloc=2,class=CODE,delta=1,minocg
   204                           	psect	text172,global,reloc=2,class=CODE,delta=1,minocg
   205                           	psect	text173,global,reloc=2,class=CODE,delta=1,minocg
   206                           	psect	text174,global,reloc=2,class=CODE,delta=1,minocg
   207                           	psect	text175,global,reloc=2,class=CODE,delta=1,minocg
   208                           	psect	text176,global,reloc=2,class=CODE,delta=1,minocg
   209                           	psect	text177,global,reloc=2,class=CODE,delta=1,minocg
   210                           	psect	text178,global,reloc=2,class=CODE,delta=1,minocg
   211                           	psect	text179,global,reloc=2,class=CODE,delta=1,inline,minocg
   212                           	psect	text180,global,reloc=2,class=CODE,delta=1,minocg
   213                           	psect	text181,global,reloc=2,class=CODE,delta=1,group=3,minocg
   214                           	psect	text182,global,reloc=2,class=CODE,delta=1,group=3,minocg
   215                           	psect	text183,global,reloc=2,class=CODE,delta=1,group=3,minocg
   216                           	psect	text184,global,reloc=2,class=CODE,delta=1,group=3,minocg
   217                           	psect	text185,global,reloc=2,class=CODE,delta=1,group=3,minocg
   218                           	psect	text186,global,reloc=2,class=CODE,delta=1,group=3,minocg
   219                           	psect	text187,global,reloc=2,class=CODE,delta=1,group=3,minocg
   220                           	psect	text188,global,reloc=2,class=CODE,delta=1,group=3,minocg
   221                           	psect	text189,global,reloc=2,class=CODE,delta=1,group=3,minocg
   222                           	psect	text190,global,reloc=2,class=CODE,delta=1,group=3,minocg
   223                           	psect	text191,global,reloc=2,class=CODE,delta=1,minocg
   224                           	psect	text192,global,reloc=2,class=CODE,delta=1,minocg
   225                           	psect	text193,global,reloc=2,class=CODE,delta=1,minocg
   226                           	psect	text194,global,reloc=2,class=CODE,delta=1,minocg
   227                           	psect	text195,global,reloc=2,class=CODE,delta=1,minocg
   228                           	psect	text196,global,reloc=2,class=CODE,delta=1,minocg
   229                           	psect	text197,global,reloc=2,class=CODE,delta=1,minocg
   230                           	psect	text198,global,reloc=2,class=CODE,delta=1,minocg
   231                           	psect	text199,global,reloc=2,class=CODE,delta=1,minocg
   232                           	psect	text200,global,reloc=2,class=CODE,delta=1,minocg
   233                           	psect	text201,global,reloc=2,class=CODE,delta=1,minocg
   234                           	psect	text202,global,reloc=2,class=CODE,delta=1,minocg
   235                           	psect	text203,global,reloc=2,class=CODE,delta=1,minocg
   236                           	psect	text204,global,reloc=2,class=CODE,delta=1,minocg
   237                           	psect	text205,global,reloc=2,class=CODE,delta=1,minocg
   238                           	psect	text206,global,reloc=2,class=CODE,delta=1,minocg
   239                           	psect	text207,global,reloc=2,class=CODE,delta=1,minocg
   240                           	psect	text208,global,reloc=2,class=CODE,delta=1,minocg
   241                           	psect	text209,global,reloc=2,class=CODE,delta=1,minocg
   242                           	psect	text210,global,reloc=2,class=CODE,delta=1,minocg
   243                           	psect	text211,global,reloc=2,class=CODE,delta=1,minocg
   244                           	psect	text212,global,reloc=2,class=CODE,delta=1,minocg
   245                           	psect	text213,global,reloc=2,class=CODE,delta=1,minocg
   246                           	psect	text214,global,reloc=2,class=CODE,delta=1,minocg
   247                           	psect	text215,global,reloc=2,class=CODE,delta=1,minocg
   248                           	psect	text216,global,reloc=2,class=CODE,delta=1,minocg
   249                           	psect	text217,global,reloc=2,class=CODE,delta=1,minocg
   250                           	psect	text218,global,reloc=2,class=CODE,delta=1,group=3,minocg
   251                           	psect	text219,global,reloc=2,class=CODE,delta=1,group=2,minocg
   252                           	psect	text220,global,reloc=2,class=CODE,delta=1,minocg
   253                           	psect	text221,global,reloc=2,class=CODE,delta=1,minocg
   254                           	psect	text222,global,reloc=2,class=CODE,delta=1,minocg
   255                           	psect	text223,global,reloc=2,class=CODE,delta=1,minocg
   256                           	psect	text224,global,reloc=2,class=CODE,delta=1,minocg
   257                           	psect	text225,global,reloc=2,class=CODE,delta=1,minocg
   258                           	psect	text226,global,reloc=2,class=CODE,delta=1,group=3,minocg
   259                           	psect	text227,global,reloc=2,class=CODE,delta=1,minocg
   260                           	psect	text228,global,reloc=2,class=CODE,delta=1,minocg
   261                           	psect	text229,global,reloc=2,class=CODE,delta=1,minocg
   262                           	psect	text230,global,reloc=2,class=CODE,delta=1,minocg
   263                           	psect	text231,global,reloc=2,class=CODE,delta=1,group=3,minocg
   264                           	psect	text232,global,reloc=2,class=CODE,delta=1,group=2,minocg
   265                           	psect	text233,global,reloc=2,class=CODE,delta=1,minocg
   266                           	psect	text234,global,reloc=2,class=CODE,delta=1,minocg
   267                           	psect	text235,global,reloc=2,class=CODE,delta=1,minocg
   268                           	psect	text236,global,reloc=2,class=CODE,delta=1,minocg
   269                           	psect	text237,global,reloc=2,class=CODE,delta=1,minocg
   270                           	psect	text238,global,reloc=2,class=CODE,delta=1,minocg
   271                           	psect	text239,global,reloc=2,class=CODE,delta=1,minocg
   272                           	psect	text240,global,reloc=2,class=CODE,delta=1,minocg
   273                           	psect	text241,global,reloc=2,class=CODE,delta=1,minocg
   274                           	psect	text242,global,reloc=2,class=CODE,delta=1,minocg
   275                           	psect	text243,global,reloc=2,class=CODE,delta=1,minocg
   276                           	psect	text244,global,reloc=2,class=CODE,delta=1,minocg
   277                           	psect	text245,global,reloc=2,class=CODE,delta=1,minocg
   278                           	psect	text246,global,reloc=2,class=CODE,delta=1,minocg
   279                           	psect	text247,global,reloc=2,class=CODE,delta=1,minocg
   280                           	psect	text248,global,reloc=2,class=CODE,delta=1,minocg
   281                           	psect	text249,global,reloc=2,class=CODE,delta=1,minocg
   282                           	psect	text250,global,reloc=2,class=CODE,delta=1,minocg
   283                           	psect	text251,global,reloc=2,class=CODE,delta=1,minocg
   284                           	psect	text252,global,reloc=2,class=CODE,delta=1,minocg
   285                           	psect	text253,global,reloc=2,class=CODE,delta=1,minocg
   286                           	psect	text254,global,reloc=2,class=CODE,delta=1,minocg
   287                           	psect	text255,global,reloc=2,class=CODE,delta=1,minocg
   288                           	psect	text256,global,reloc=2,class=CODE,delta=1,minocg
   289                           	psect	text257,global,reloc=2,class=CODE,delta=1,minocg
   290                           	psect	text258,global,reloc=2,class=CODE,delta=1,minocg
   291                           	psect	text259,global,reloc=2,class=CODE,delta=1,minocg
   292                           	psect	text260,global,reloc=2,class=CODE,delta=1,minocg
   293                           	psect	text261,global,reloc=2,class=CODE,delta=1,minocg
   294                           	psect	text262,global,reloc=4,class=CODE,delta=1,minocg
   295                           	psect	text263,global,reloc=2,class=CODE,delta=1,minocg
   296                           	psect	text264,global,reloc=2,class=CODE,delta=1,minocg
   297                           	psect	text265,global,reloc=2,class=CODE,delta=1,minocg
   298                           	psect	text266,global,reloc=4,class=CODE,delta=1,minocg
   299                           	psect	text267,global,reloc=4,class=CODE,delta=1,minocg
   300                           	psect	text268,global,reloc=2,class=CODE,delta=1,minocg
   301                           	psect	text269,global,reloc=4,class=CODE,delta=1,minocg
   302                           	psect	text270,global,reloc=2,class=CODE,delta=1,minocg
   303                           	psect	text271,global,reloc=2,class=CODE,delta=1,minocg
   304                           	psect	text272,global,reloc=2,class=CODE,delta=1,minocg
   305                           	psect	text273,global,reloc=2,class=CODE,delta=1,minocg
   306                           	psect	text274,global,reloc=2,class=CODE,delta=1,minocg
   307                           	psect	text275,global,reloc=4,class=CODE,delta=1,minocg
   308                           	psect	text276,global,reloc=2,class=CODE,delta=1,minocg
   309                           	psect	text277,global,reloc=2,class=CODE,delta=1,minocg
   310                           	psect	text278,global,reloc=2,class=CODE,delta=1,minocg
   311                           	psect	text279,global,reloc=2,class=CODE,delta=1,minocg
   312                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,minocg,optim=
   313                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   314                           	psect	text280,global,reloc=2,class=CODE,delta=1,minocg
   315                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
   316                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   317                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   318                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   319  0000                     
   320                           ; Version 2.20
   321                           ; Generated 05/05/2020 GMT
   322                           ; 
   323                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   324                           ; All rights reserved.
   325                           ; 
   326                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   327                           ; 
   328                           ; Redistribution and use in source and binary forms, with or without modification, are
   329                           ; permitted provided that the following conditions are met:
   330                           ; 
   331                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   332                           ;        conditions and the following disclaimer.
   333                           ; 
   334                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   335                           ;        of conditions and the following disclaimer in the documentation and/or other
   336                           ;        materials provided with the distribution.
   337                           ; 
   338                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   339                           ;        software without specific prior written permission.
   340                           ; 
   341                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   342                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   343                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   344                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   345                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   346                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   347                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   348                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   349                           ; 
   350                           ; 
   351                           ; Code-generator required, PIC18F26K42 Definitions
   352                           ; 
   353                           ; SFR Addresses
   354  0000                     
   355 ;;TMR3_WriteTimer@timerVal	offset=-2 (param)
   356 ;;xMBPortEventPost@eEvent	offset=-1 (param)
   357 ;;__fassert@line	offset=-2 (param)
   358 ;;__fassert@file	offset=-4 (param)
   359 ;;__fassert@exp	offset=-6 (param)
   360 ;;printf@cp	offset	0
   361 ;;printf@val	offset	3
   362 ;;printf@ap	offset	5
   363 ;;printf@c	offset	7
   364 ;;printf@prec	offset	8
   365 ;;printf@flag	offset	9
   366 ;;printf@f	offset=-3 (param)
   367 ;;putch@txData	offset=-1 (param)
   368 ;;UART1_Write@txData	offset=-1 (param)
   369 ;;___lwmod@counter	offset	0
   370 ;;___lwmod@dividend	offset=-2 (param)
   371 ;;___lwmod@divisor	offset=-4 (param)
   372 ;;___lwdiv@quotient	offset	0
   373 ;;___lwdiv@counter	offset	2
   374 ;;___lwdiv@dividend	offset=-2 (param)
   375 ;;___lwdiv@divisor	offset=-4 (param)
   376 ;;UART_error_handler@temp	offset	0
   377 ;;UART1_Read@readValue	offset	0
   378 ;;UART_error_handler@temp	offset	0
   379 ;;UART1_Read@readValue	offset	0
   380 ;;TMR3_WriteTimer@timerVal	offset=-2 (param)
   381 ;;xMBPortEventPost@eEvent	offset=-1 (param)
   382 ;;__fassert@line	offset=-2 (param)
   383 ;;__fassert@file	offset=-4 (param)
   384 ;;__fassert@exp	offset=-6 (param)
   385 ;;printf@cp	offset	0
   386 ;;printf@val	offset	3
   387 ;;printf@ap	offset	5
   388 ;;printf@c	offset	7
   389 ;;printf@prec	offset	8
   390 ;;printf@flag	offset	9
   391 ;;printf@f	offset=-3 (param)
   392 ;;putch@txData	offset=-1 (param)
   393 ;;UART1_Write@txData	offset=-1 (param)
   394 ;;___lwmod@counter	offset	0
   395 ;;___lwmod@dividend	offset=-2 (param)
   396 ;;___lwmod@divisor	offset=-4 (param)
   397 ;;___lwdiv@quotient	offset	0
   398 ;;___lwdiv@counter	offset	2
   399 ;;___lwdiv@dividend	offset=-2 (param)
   400 ;;___lwdiv@divisor	offset=-4 (param)
   401                           
   402                           	psect	idataBANK0
   403  00BD70                     __pidataBANK0:
   404                           	callstack 0
   405                           
   406                           ;initializer for _RSSITarget
   407  00BD70  B0                 	db	176
   408                           
   409                           ;initializer for _mb_rtu_addr
   410  00BD71  F7                 	db	247
   411                           
   412                           ;initializer for _currentAddr1
   413  00BD72  34                 	db	52
   414                           
   415                           ;initializer for _currentAddr0
   416  00BD73  12                 	db	18
   417                           
   418                           	psect	idataBANK1
   419  00BD74                     __pidataBANK1:
   420                           	callstack 0
   421                           
   422                           ;initializer for _eMBState
   423  00BD74  02                 	db	2
   424                           
   425                           ;initializer for _radio_state_var
   426  00BD75  04                 	db	4
   427                           
   428                           ;initializer for _rssi_debug
   429  00BD76  BF                 	db	191
   430                           
   431                           ;initializer for _currentNetID
   432  00BD77  55                 	db	85
   433                           
   434                           	psect	idataBANK2
   435  00BCD6                     __pidataBANK2:
   436                           	callstack 0
   437                           
   438                           ;initializer for _randx
   439  00BCD6  0001               	dw	1
   440  00BCD8  0000               	dw	0
   441                           
   442                           ;initializer for _min_loop_time
   443  00BCDA  FFFF               	dw	65535
   444                           
   445                           ;initializer for _test_timer
   446  00BCDC  1388               	dw	5000
   447                           
   448                           ;initializer for _ATTimeoutTimer
   449  00BCDE  03E8               	dw	1000
   450                           
   451                           	psect	idataBANK3
   452  00B9F2                     __pidataBANK3:
   453                           	callstack 0
   454                           
   455                           ;initializer for _xFuncHandlers
   456  00B9F2  03                 	db	3
   457  00B9F3  B4                 	db	low _eMBFuncReadHoldingRegister
   458  00B9F4  5C                 	db	high _eMBFuncReadHoldingRegister
   459  00B9F5  10                 	db	16
   460  00B9F6  A8                 	db	low _eMBFuncWriteMultipleHoldingRegister
   461  00B9F7  6A                 	db	high _eMBFuncWriteMultipleHoldingRegister
   462  00B9F8  06                 	db	6
   463  00B9F9  08                 	db	low _eMBFuncWriteHoldingRegister
   464  00B9FA  90                 	db	high _eMBFuncWriteHoldingRegister
   465  00B9FB  17                 	db	23
   466  00B9FC  A6                 	db	low _eMBFuncReadWriteMultipleHoldingRegister
   467  00B9FD  3F                 	db	high _eMBFuncReadWriteMultipleHoldingRegister
   468  00B9FE  00                 	db	0
   469  00B9FF  00                 	db	0
   470  00BA00  00                 	db	0
   471  00BA01  00                 	db	0
   472  00BA02  00                 	db	0
   473  00BA03  00                 	db	0
   474                           
   475                           ;initializer for _syncList
   476  00BA04  12                 	db	18
   477  00BA05  23                 	db	35
   478  00BA06  45                 	db	69
   479  00BA07  56                 	db	86
   480  00BA08  67                 	db	103
   481  00BA09  78                 	db	120
   482  00BA0A  89                 	db	137
   483  00BA0B  9A                 	db	154
   484  00BA0C  AB                 	db	171
   485  00BA0D  BC                 	db	188
   486                           
   487                           	psect	mediumconst
   488  00FA54                     __pmediumconst:
   489                           	callstack 0
   490  00FA54  00                 	db	0
   491  00FA55                     _aucCRCLo:
   492                           	callstack 0
   493  00FA55  00                 	db	0
   494  00FA56  C0                 	db	192
   495  00FA57  C1                 	db	193
   496  00FA58  01                 	db	1
   497  00FA59  C3                 	db	195
   498  00FA5A  03                 	db	3
   499  00FA5B  02                 	db	2
   500  00FA5C  C2                 	db	194
   501  00FA5D  C6                 	db	198
   502  00FA5E  06                 	db	6
   503  00FA5F  07                 	db	7
   504  00FA60  C7                 	db	199
   505  00FA61  05                 	db	5
   506  00FA62  C5                 	db	197
   507  00FA63  C4                 	db	196
   508  00FA64  04                 	db	4
   509  00FA65  CC                 	db	204
   510  00FA66  0C                 	db	12
   511  00FA67  0D                 	db	13
   512  00FA68  CD                 	db	205
   513  00FA69  0F                 	db	15
   514  00FA6A  CF                 	db	207
   515  00FA6B  CE                 	db	206
   516  00FA6C  0E                 	db	14
   517  00FA6D  0A                 	db	10
   518  00FA6E  CA                 	db	202
   519  00FA6F  CB                 	db	203
   520  00FA70  0B                 	db	11
   521  00FA71  C9                 	db	201
   522  00FA72  09                 	db	9
   523  00FA73  08                 	db	8
   524  00FA74  C8                 	db	200
   525  00FA75  D8                 	db	216
   526  00FA76  18                 	db	24
   527  00FA77  19                 	db	25
   528  00FA78  D9                 	db	217
   529  00FA79  1B                 	db	27
   530  00FA7A  DB                 	db	219
   531  00FA7B  DA                 	db	218
   532  00FA7C  1A                 	db	26
   533  00FA7D  1E                 	db	30
   534  00FA7E  DE                 	db	222
   535  00FA7F  DF                 	db	223
   536  00FA80  1F                 	db	31
   537  00FA81  DD                 	db	221
   538  00FA82  1D                 	db	29
   539  00FA83  1C                 	db	28
   540  00FA84  DC                 	db	220
   541  00FA85  14                 	db	20
   542  00FA86  D4                 	db	212
   543  00FA87  D5                 	db	213
   544  00FA88  15                 	db	21
   545  00FA89  D7                 	db	215
   546  00FA8A  17                 	db	23
   547  00FA8B  16                 	db	22
   548  00FA8C  D6                 	db	214
   549  00FA8D  D2                 	db	210
   550  00FA8E  12                 	db	18
   551  00FA8F  13                 	db	19
   552  00FA90  D3                 	db	211
   553  00FA91  11                 	db	17
   554  00FA92  D1                 	db	209
   555  00FA93  D0                 	db	208
   556  00FA94  10                 	db	16
   557  00FA95  F0                 	db	240
   558  00FA96  30                 	db	48
   559  00FA97  31                 	db	49
   560  00FA98  F1                 	db	241
   561  00FA99  33                 	db	51
   562  00FA9A  F3                 	db	243
   563  00FA9B  F2                 	db	242
   564  00FA9C  32                 	db	50
   565  00FA9D  36                 	db	54
   566  00FA9E  F6                 	db	246
   567  00FA9F  F7                 	db	247
   568  00FAA0  37                 	db	55
   569  00FAA1  F5                 	db	245
   570  00FAA2  35                 	db	53
   571  00FAA3  34                 	db	52
   572  00FAA4  F4                 	db	244
   573  00FAA5  3C                 	db	60
   574  00FAA6  FC                 	db	252
   575  00FAA7  FD                 	db	253
   576  00FAA8  3D                 	db	61
   577  00FAA9  FF                 	db	255
   578  00FAAA  3F                 	db	63
   579  00FAAB  3E                 	db	62
   580  00FAAC  FE                 	db	254
   581  00FAAD  FA                 	db	250
   582  00FAAE  3A                 	db	58
   583  00FAAF  3B                 	db	59
   584  00FAB0  FB                 	db	251
   585  00FAB1  39                 	db	57
   586  00FAB2  F9                 	db	249
   587  00FAB3  F8                 	db	248
   588  00FAB4  38                 	db	56
   589  00FAB5  28                 	db	40
   590  00FAB6  E8                 	db	232
   591  00FAB7  E9                 	db	233
   592  00FAB8  29                 	db	41
   593  00FAB9  EB                 	db	235
   594  00FABA  2B                 	db	43
   595  00FABB  2A                 	db	42
   596  00FABC  EA                 	db	234
   597  00FABD  EE                 	db	238
   598  00FABE  2E                 	db	46
   599  00FABF  2F                 	db	47
   600  00FAC0  EF                 	db	239
   601  00FAC1  2D                 	db	45
   602  00FAC2  ED                 	db	237
   603  00FAC3  EC                 	db	236
   604  00FAC4  2C                 	db	44
   605  00FAC5  E4                 	db	228
   606  00FAC6  24                 	db	36
   607  00FAC7  25                 	db	37
   608  00FAC8  E5                 	db	229
   609  00FAC9  27                 	db	39
   610  00FACA  E7                 	db	231
   611  00FACB  E6                 	db	230
   612  00FACC  26                 	db	38
   613  00FACD  22                 	db	34
   614  00FACE  E2                 	db	226
   615  00FACF  E3                 	db	227
   616  00FAD0  23                 	db	35
   617  00FAD1  E1                 	db	225
   618  00FAD2  21                 	db	33
   619  00FAD3  20                 	db	32
   620  00FAD4  E0                 	db	224
   621  00FAD5  A0                 	db	160
   622  00FAD6  60                 	db	96
   623  00FAD7  61                 	db	97
   624  00FAD8  A1                 	db	161
   625  00FAD9  63                 	db	99
   626  00FADA  A3                 	db	163
   627  00FADB  A2                 	db	162
   628  00FADC  62                 	db	98
   629  00FADD  66                 	db	102
   630  00FADE  A6                 	db	166
   631  00FADF  A7                 	db	167
   632  00FAE0  67                 	db	103
   633  00FAE1  A5                 	db	165
   634  00FAE2  65                 	db	101
   635  00FAE3  64                 	db	100
   636  00FAE4  A4                 	db	164
   637  00FAE5  6C                 	db	108
   638  00FAE6  AC                 	db	172
   639  00FAE7  AD                 	db	173
   640  00FAE8  6D                 	db	109
   641  00FAE9  AF                 	db	175
   642  00FAEA  6F                 	db	111
   643  00FAEB  6E                 	db	110
   644  00FAEC  AE                 	db	174
   645  00FAED  AA                 	db	170
   646  00FAEE  6A                 	db	106
   647  00FAEF  6B                 	db	107
   648  00FAF0  AB                 	db	171
   649  00FAF1  69                 	db	105
   650  00FAF2  A9                 	db	169
   651  00FAF3  A8                 	db	168
   652  00FAF4  68                 	db	104
   653  00FAF5  78                 	db	120
   654  00FAF6  B8                 	db	184
   655  00FAF7  B9                 	db	185
   656  00FAF8  79                 	db	121
   657  00FAF9  BB                 	db	187
   658  00FAFA  7B                 	db	123
   659  00FAFB  7A                 	db	122
   660  00FAFC  BA                 	db	186
   661  00FAFD  BE                 	db	190
   662  00FAFE  7E                 	db	126
   663  00FAFF  7F                 	db	127
   664  00FB00  BF                 	db	191
   665  00FB01  7D                 	db	125
   666  00FB02  BD                 	db	189
   667  00FB03  BC                 	db	188
   668  00FB04  7C                 	db	124
   669  00FB05  B4                 	db	180
   670  00FB06  74                 	db	116
   671  00FB07  75                 	db	117
   672  00FB08  B5                 	db	181
   673  00FB09  77                 	db	119
   674  00FB0A  B7                 	db	183
   675  00FB0B  B6                 	db	182
   676  00FB0C  76                 	db	118
   677  00FB0D  72                 	db	114
   678  00FB0E  B2                 	db	178
   679  00FB0F  B3                 	db	179
   680  00FB10  73                 	db	115
   681  00FB11  B1                 	db	177
   682  00FB12  71                 	db	113
   683  00FB13  70                 	db	112
   684  00FB14  B0                 	db	176
   685  00FB15  50                 	db	80
   686  00FB16  90                 	db	144
   687  00FB17  91                 	db	145
   688  00FB18  51                 	db	81
   689  00FB19  93                 	db	147
   690  00FB1A  53                 	db	83
   691  00FB1B  52                 	db	82
   692  00FB1C  92                 	db	146
   693  00FB1D  96                 	db	150
   694  00FB1E  56                 	db	86
   695  00FB1F  57                 	db	87
   696  00FB20  97                 	db	151
   697  00FB21  55                 	db	85
   698  00FB22  95                 	db	149
   699  00FB23  94                 	db	148
   700  00FB24  54                 	db	84
   701  00FB25  9C                 	db	156
   702  00FB26  5C                 	db	92
   703  00FB27  5D                 	db	93
   704  00FB28  9D                 	db	157
   705  00FB29  5F                 	db	95
   706  00FB2A  9F                 	db	159
   707  00FB2B  9E                 	db	158
   708  00FB2C  5E                 	db	94
   709  00FB2D  5A                 	db	90
   710  00FB2E  9A                 	db	154
   711  00FB2F  9B                 	db	155
   712  00FB30  5B                 	db	91
   713  00FB31  99                 	db	153
   714  00FB32  59                 	db	89
   715  00FB33  58                 	db	88
   716  00FB34  98                 	db	152
   717  00FB35  88                 	db	136
   718  00FB36  48                 	db	72
   719  00FB37  49                 	db	73
   720  00FB38  89                 	db	137
   721  00FB39  4B                 	db	75
   722  00FB3A  8B                 	db	139
   723  00FB3B  8A                 	db	138
   724  00FB3C  4A                 	db	74
   725  00FB3D  4E                 	db	78
   726  00FB3E  8E                 	db	142
   727  00FB3F  8F                 	db	143
   728  00FB40  4F                 	db	79
   729  00FB41  8D                 	db	141
   730  00FB42  4D                 	db	77
   731  00FB43  4C                 	db	76
   732  00FB44  8C                 	db	140
   733  00FB45  44                 	db	68
   734  00FB46  84                 	db	132
   735  00FB47  85                 	db	133
   736  00FB48  45                 	db	69
   737  00FB49  87                 	db	135
   738  00FB4A  47                 	db	71
   739  00FB4B  46                 	db	70
   740  00FB4C  86                 	db	134
   741  00FB4D  82                 	db	130
   742  00FB4E  42                 	db	66
   743  00FB4F  43                 	db	67
   744  00FB50  83                 	db	131
   745  00FB51  41                 	db	65
   746  00FB52  81                 	db	129
   747  00FB53  80                 	db	128
   748  00FB54  40                 	db	64
   749  00FB55                     __end_of_aucCRCLo:
   750                           	callstack 0
   751  00FB55                     _aucCRCHi:
   752                           	callstack 0
   753  00FB55  00                 	db	0
   754  00FB56  C1                 	db	193
   755  00FB57  81                 	db	129
   756  00FB58  40                 	db	64
   757  00FB59  01                 	db	1
   758  00FB5A  C0                 	db	192
   759  00FB5B  80                 	db	128
   760  00FB5C  41                 	db	65
   761  00FB5D  01                 	db	1
   762  00FB5E  C0                 	db	192
   763  00FB5F  80                 	db	128
   764  00FB60  41                 	db	65
   765  00FB61  00                 	db	0
   766  00FB62  C1                 	db	193
   767  00FB63  81                 	db	129
   768  00FB64  40                 	db	64
   769  00FB65  01                 	db	1
   770  00FB66  C0                 	db	192
   771  00FB67  80                 	db	128
   772  00FB68  41                 	db	65
   773  00FB69  00                 	db	0
   774  00FB6A  C1                 	db	193
   775  00FB6B  81                 	db	129
   776  00FB6C  40                 	db	64
   777  00FB6D  00                 	db	0
   778  00FB6E  C1                 	db	193
   779  00FB6F  81                 	db	129
   780  00FB70  40                 	db	64
   781  00FB71  01                 	db	1
   782  00FB72  C0                 	db	192
   783  00FB73  80                 	db	128
   784  00FB74  41                 	db	65
   785  00FB75  01                 	db	1
   786  00FB76  C0                 	db	192
   787  00FB77  80                 	db	128
   788  00FB78  41                 	db	65
   789  00FB79  00                 	db	0
   790  00FB7A  C1                 	db	193
   791  00FB7B  81                 	db	129
   792  00FB7C  40                 	db	64
   793  00FB7D  00                 	db	0
   794  00FB7E  C1                 	db	193
   795  00FB7F  81                 	db	129
   796  00FB80  40                 	db	64
   797  00FB81  01                 	db	1
   798  00FB82  C0                 	db	192
   799  00FB83  80                 	db	128
   800  00FB84  41                 	db	65
   801  00FB85  00                 	db	0
   802  00FB86  C1                 	db	193
   803  00FB87  81                 	db	129
   804  00FB88  40                 	db	64
   805  00FB89  01                 	db	1
   806  00FB8A  C0                 	db	192
   807  00FB8B  80                 	db	128
   808  00FB8C  41                 	db	65
   809  00FB8D  01                 	db	1
   810  00FB8E  C0                 	db	192
   811  00FB8F  80                 	db	128
   812  00FB90  41                 	db	65
   813  00FB91  00                 	db	0
   814  00FB92  C1                 	db	193
   815  00FB93  81                 	db	129
   816  00FB94  40                 	db	64
   817  00FB95  01                 	db	1
   818  00FB96  C0                 	db	192
   819  00FB97  80                 	db	128
   820  00FB98  41                 	db	65
   821  00FB99  00                 	db	0
   822  00FB9A  C1                 	db	193
   823  00FB9B  81                 	db	129
   824  00FB9C  40                 	db	64
   825  00FB9D  00                 	db	0
   826  00FB9E  C1                 	db	193
   827  00FB9F  81                 	db	129
   828  00FBA0  40                 	db	64
   829  00FBA1  01                 	db	1
   830  00FBA2  C0                 	db	192
   831  00FBA3  80                 	db	128
   832  00FBA4  41                 	db	65
   833  00FBA5  00                 	db	0
   834  00FBA6  C1                 	db	193
   835  00FBA7  81                 	db	129
   836  00FBA8  40                 	db	64
   837  00FBA9  01                 	db	1
   838  00FBAA  C0                 	db	192
   839  00FBAB  80                 	db	128
   840  00FBAC  41                 	db	65
   841  00FBAD  01                 	db	1
   842  00FBAE  C0                 	db	192
   843  00FBAF  80                 	db	128
   844  00FBB0  41                 	db	65
   845  00FBB1  00                 	db	0
   846  00FBB2  C1                 	db	193
   847  00FBB3  81                 	db	129
   848  00FBB4  40                 	db	64
   849  00FBB5  00                 	db	0
   850  00FBB6  C1                 	db	193
   851  00FBB7  81                 	db	129
   852  00FBB8  40                 	db	64
   853  00FBB9  01                 	db	1
   854  00FBBA  C0                 	db	192
   855  00FBBB  80                 	db	128
   856  00FBBC  41                 	db	65
   857  00FBBD  01                 	db	1
   858  00FBBE  C0                 	db	192
   859  00FBBF  80                 	db	128
   860  00FBC0  41                 	db	65
   861  00FBC1  00                 	db	0
   862  00FBC2  C1                 	db	193
   863  00FBC3  81                 	db	129
   864  00FBC4  40                 	db	64
   865  00FBC5  01                 	db	1
   866  00FBC6  C0                 	db	192
   867  00FBC7  80                 	db	128
   868  00FBC8  41                 	db	65
   869  00FBC9  00                 	db	0
   870  00FBCA  C1                 	db	193
   871  00FBCB  81                 	db	129
   872  00FBCC  40                 	db	64
   873  00FBCD  00                 	db	0
   874  00FBCE  C1                 	db	193
   875  00FBCF  81                 	db	129
   876  00FBD0  40                 	db	64
   877  00FBD1  01                 	db	1
   878  00FBD2  C0                 	db	192
   879  00FBD3  80                 	db	128
   880  00FBD4  41                 	db	65
   881  00FBD5  01                 	db	1
   882  00FBD6  C0                 	db	192
   883  00FBD7  80                 	db	128
   884  00FBD8  41                 	db	65
   885  00FBD9  00                 	db	0
   886  00FBDA  C1                 	db	193
   887  00FBDB  81                 	db	129
   888  00FBDC  40                 	db	64
   889  00FBDD  00                 	db	0
   890  00FBDE  C1                 	db	193
   891  00FBDF  81                 	db	129
   892  00FBE0  40                 	db	64
   893  00FBE1  01                 	db	1
   894  00FBE2  C0                 	db	192
   895  00FBE3  80                 	db	128
   896  00FBE4  41                 	db	65
   897  00FBE5  00                 	db	0
   898  00FBE6  C1                 	db	193
   899  00FBE7  81                 	db	129
   900  00FBE8  40                 	db	64
   901  00FBE9  01                 	db	1
   902  00FBEA  C0                 	db	192
   903  00FBEB  80                 	db	128
   904  00FBEC  41                 	db	65
   905  00FBED  01                 	db	1
   906  00FBEE  C0                 	db	192
   907  00FBEF  80                 	db	128
   908  00FBF0  41                 	db	65
   909  00FBF1  00                 	db	0
   910  00FBF2  C1                 	db	193
   911  00FBF3  81                 	db	129
   912  00FBF4  40                 	db	64
   913  00FBF5  00                 	db	0
   914  00FBF6  C1                 	db	193
   915  00FBF7  81                 	db	129
   916  00FBF8  40                 	db	64
   917  00FBF9  01                 	db	1
   918  00FBFA  C0                 	db	192
   919  00FBFB  80                 	db	128
   920  00FBFC  41                 	db	65
   921  00FBFD  01                 	db	1
   922  00FBFE  C0                 	db	192
   923  00FBFF  80                 	db	128
   924  00FC00  41                 	db	65
   925  00FC01  00                 	db	0
   926  00FC02  C1                 	db	193
   927  00FC03  81                 	db	129
   928  00FC04  40                 	db	64
   929  00FC05  01                 	db	1
   930  00FC06  C0                 	db	192
   931  00FC07  80                 	db	128
   932  00FC08  41                 	db	65
   933  00FC09  00                 	db	0
   934  00FC0A  C1                 	db	193
   935  00FC0B  81                 	db	129
   936  00FC0C  40                 	db	64
   937  00FC0D  00                 	db	0
   938  00FC0E  C1                 	db	193
   939  00FC0F  81                 	db	129
   940  00FC10  40                 	db	64
   941  00FC11  01                 	db	1
   942  00FC12  C0                 	db	192
   943  00FC13  80                 	db	128
   944  00FC14  41                 	db	65
   945  00FC15  00                 	db	0
   946  00FC16  C1                 	db	193
   947  00FC17  81                 	db	129
   948  00FC18  40                 	db	64
   949  00FC19  01                 	db	1
   950  00FC1A  C0                 	db	192
   951  00FC1B  80                 	db	128
   952  00FC1C  41                 	db	65
   953  00FC1D  01                 	db	1
   954  00FC1E  C0                 	db	192
   955  00FC1F  80                 	db	128
   956  00FC20  41                 	db	65
   957  00FC21  00                 	db	0
   958  00FC22  C1                 	db	193
   959  00FC23  81                 	db	129
   960  00FC24  40                 	db	64
   961  00FC25  01                 	db	1
   962  00FC26  C0                 	db	192
   963  00FC27  80                 	db	128
   964  00FC28  41                 	db	65
   965  00FC29  00                 	db	0
   966  00FC2A  C1                 	db	193
   967  00FC2B  81                 	db	129
   968  00FC2C  40                 	db	64
   969  00FC2D  00                 	db	0
   970  00FC2E  C1                 	db	193
   971  00FC2F  81                 	db	129
   972  00FC30  40                 	db	64
   973  00FC31  01                 	db	1
   974  00FC32  C0                 	db	192
   975  00FC33  80                 	db	128
   976  00FC34  41                 	db	65
   977  00FC35  01                 	db	1
   978  00FC36  C0                 	db	192
   979  00FC37  80                 	db	128
   980  00FC38  41                 	db	65
   981  00FC39  00                 	db	0
   982  00FC3A  C1                 	db	193
   983  00FC3B  81                 	db	129
   984  00FC3C  40                 	db	64
   985  00FC3D  00                 	db	0
   986  00FC3E  C1                 	db	193
   987  00FC3F  81                 	db	129
   988  00FC40  40                 	db	64
   989  00FC41  01                 	db	1
   990  00FC42  C0                 	db	192
   991  00FC43  80                 	db	128
   992  00FC44  41                 	db	65
   993  00FC45  00                 	db	0
   994  00FC46  C1                 	db	193
   995  00FC47  81                 	db	129
   996  00FC48  40                 	db	64
   997  00FC49  01                 	db	1
   998  00FC4A  C0                 	db	192
   999  00FC4B  80                 	db	128
  1000  00FC4C  41                 	db	65
  1001  00FC4D  01                 	db	1
  1002  00FC4E  C0                 	db	192
  1003  00FC4F  80                 	db	128
  1004  00FC50  41                 	db	65
  1005  00FC51  00                 	db	0
  1006  00FC52  C1                 	db	193
  1007  00FC53  81                 	db	129
  1008  00FC54  40                 	db	64
  1009  00FC55                     __end_of_aucCRCHi:
  1010                           	callstack 0
  1011  00FC55                     _rsbox:
  1012                           	callstack 0
  1013  00FC55  52                 	db	82
  1014  00FC56  09                 	db	9
  1015  00FC57  6A                 	db	106
  1016  00FC58  D5                 	db	213
  1017  00FC59  30                 	db	48
  1018  00FC5A  36                 	db	54
  1019  00FC5B  A5                 	db	165
  1020  00FC5C  38                 	db	56
  1021  00FC5D  BF                 	db	191
  1022  00FC5E  40                 	db	64
  1023  00FC5F  A3                 	db	163
  1024  00FC60  9E                 	db	158
  1025  00FC61  81                 	db	129
  1026  00FC62  F3                 	db	243
  1027  00FC63  D7                 	db	215
  1028  00FC64  FB                 	db	251
  1029  00FC65  7C                 	db	124
  1030  00FC66  E3                 	db	227
  1031  00FC67  39                 	db	57
  1032  00FC68  82                 	db	130
  1033  00FC69  9B                 	db	155
  1034  00FC6A  2F                 	db	47
  1035  00FC6B  FF                 	db	255
  1036  00FC6C  87                 	db	135
  1037  00FC6D  34                 	db	52
  1038  00FC6E  8E                 	db	142
  1039  00FC6F  43                 	db	67
  1040  00FC70  44                 	db	68
  1041  00FC71  C4                 	db	196
  1042  00FC72  DE                 	db	222
  1043  00FC73  E9                 	db	233
  1044  00FC74  CB                 	db	203
  1045  00FC75  54                 	db	84
  1046  00FC76  7B                 	db	123
  1047  00FC77  94                 	db	148
  1048  00FC78  32                 	db	50
  1049  00FC79  A6                 	db	166
  1050  00FC7A  C2                 	db	194
  1051  00FC7B  23                 	db	35
  1052  00FC7C  3D                 	db	61
  1053  00FC7D  EE                 	db	238
  1054  00FC7E  4C                 	db	76
  1055  00FC7F  95                 	db	149
  1056  00FC80  0B                 	db	11
  1057  00FC81  42                 	db	66
  1058  00FC82  FA                 	db	250
  1059  00FC83  C3                 	db	195
  1060  00FC84  4E                 	db	78
  1061  00FC85  08                 	db	8
  1062  00FC86  2E                 	db	46
  1063  00FC87  A1                 	db	161
  1064  00FC88  66                 	db	102
  1065  00FC89  28                 	db	40
  1066  00FC8A  D9                 	db	217
  1067  00FC8B  24                 	db	36
  1068  00FC8C  B2                 	db	178
  1069  00FC8D  76                 	db	118
  1070  00FC8E  5B                 	db	91
  1071  00FC8F  A2                 	db	162
  1072  00FC90  49                 	db	73
  1073  00FC91  6D                 	db	109
  1074  00FC92  8B                 	db	139
  1075  00FC93  D1                 	db	209
  1076  00FC94  25                 	db	37
  1077  00FC95  72                 	db	114
  1078  00FC96  F8                 	db	248
  1079  00FC97  F6                 	db	246
  1080  00FC98  64                 	db	100
  1081  00FC99  86                 	db	134
  1082  00FC9A  68                 	db	104
  1083  00FC9B  98                 	db	152
  1084  00FC9C  16                 	db	22
  1085  00FC9D  D4                 	db	212
  1086  00FC9E  A4                 	db	164
  1087  00FC9F  5C                 	db	92
  1088  00FCA0  CC                 	db	204
  1089  00FCA1  5D                 	db	93
  1090  00FCA2  65                 	db	101
  1091  00FCA3  B6                 	db	182
  1092  00FCA4  92                 	db	146
  1093  00FCA5  6C                 	db	108
  1094  00FCA6  70                 	db	112
  1095  00FCA7  48                 	db	72
  1096  00FCA8  50                 	db	80
  1097  00FCA9  FD                 	db	253
  1098  00FCAA  ED                 	db	237
  1099  00FCAB  B9                 	db	185
  1100  00FCAC  DA                 	db	218
  1101  00FCAD  5E                 	db	94
  1102  00FCAE  15                 	db	21
  1103  00FCAF  46                 	db	70
  1104  00FCB0  57                 	db	87
  1105  00FCB1  A7                 	db	167
  1106  00FCB2  8D                 	db	141
  1107  00FCB3  9D                 	db	157
  1108  00FCB4  84                 	db	132
  1109  00FCB5  90                 	db	144
  1110  00FCB6  D8                 	db	216
  1111  00FCB7  AB                 	db	171
  1112  00FCB8  00                 	db	0
  1113  00FCB9  8C                 	db	140
  1114  00FCBA  BC                 	db	188
  1115  00FCBB  D3                 	db	211
  1116  00FCBC  0A                 	db	10
  1117  00FCBD  F7                 	db	247
  1118  00FCBE  E4                 	db	228
  1119  00FCBF  58                 	db	88
  1120  00FCC0  05                 	db	5
  1121  00FCC1  B8                 	db	184
  1122  00FCC2  B3                 	db	179
  1123  00FCC3  45                 	db	69
  1124  00FCC4  06                 	db	6
  1125  00FCC5  D0                 	db	208
  1126  00FCC6  2C                 	db	44
  1127  00FCC7  1E                 	db	30
  1128  00FCC8  8F                 	db	143
  1129  00FCC9  CA                 	db	202
  1130  00FCCA  3F                 	db	63
  1131  00FCCB  0F                 	db	15
  1132  00FCCC  02                 	db	2
  1133  00FCCD  C1                 	db	193
  1134  00FCCE  AF                 	db	175
  1135  00FCCF  BD                 	db	189
  1136  00FCD0  03                 	db	3
  1137  00FCD1  01                 	db	1
  1138  00FCD2  13                 	db	19
  1139  00FCD3  8A                 	db	138
  1140  00FCD4  6B                 	db	107
  1141  00FCD5  3A                 	db	58
  1142  00FCD6  91                 	db	145
  1143  00FCD7  11                 	db	17
  1144  00FCD8  41                 	db	65
  1145  00FCD9  4F                 	db	79
  1146  00FCDA  67                 	db	103
  1147  00FCDB  DC                 	db	220
  1148  00FCDC  EA                 	db	234
  1149  00FCDD  97                 	db	151
  1150  00FCDE  F2                 	db	242
  1151  00FCDF  CF                 	db	207
  1152  00FCE0  CE                 	db	206
  1153  00FCE1  F0                 	db	240
  1154  00FCE2  B4                 	db	180
  1155  00FCE3  E6                 	db	230
  1156  00FCE4  73                 	db	115
  1157  00FCE5  96                 	db	150
  1158  00FCE6  AC                 	db	172
  1159  00FCE7  74                 	db	116
  1160  00FCE8  22                 	db	34
  1161  00FCE9  E7                 	db	231
  1162  00FCEA  AD                 	db	173
  1163  00FCEB  35                 	db	53
  1164  00FCEC  85                 	db	133
  1165  00FCED  E2                 	db	226
  1166  00FCEE  F9                 	db	249
  1167  00FCEF  37                 	db	55
  1168  00FCF0  E8                 	db	232
  1169  00FCF1  1C                 	db	28
  1170  00FCF2  75                 	db	117
  1171  00FCF3  DF                 	db	223
  1172  00FCF4  6E                 	db	110
  1173  00FCF5  47                 	db	71
  1174  00FCF6  F1                 	db	241
  1175  00FCF7  1A                 	db	26
  1176  00FCF8  71                 	db	113
  1177  00FCF9  1D                 	db	29
  1178  00FCFA  29                 	db	41
  1179  00FCFB  C5                 	db	197
  1180  00FCFC  89                 	db	137
  1181  00FCFD  6F                 	db	111
  1182  00FCFE  B7                 	db	183
  1183  00FCFF  62                 	db	98
  1184  00FD00  0E                 	db	14
  1185  00FD01  AA                 	db	170
  1186  00FD02  18                 	db	24
  1187  00FD03  BE                 	db	190
  1188  00FD04  1B                 	db	27
  1189  00FD05  FC                 	db	252
  1190  00FD06  56                 	db	86
  1191  00FD07  3E                 	db	62
  1192  00FD08  4B                 	db	75
  1193  00FD09  C6                 	db	198
  1194  00FD0A  D2                 	db	210
  1195  00FD0B  79                 	db	121
  1196  00FD0C  20                 	db	32
  1197  00FD0D  9A                 	db	154
  1198  00FD0E  DB                 	db	219
  1199  00FD0F  C0                 	db	192
  1200  00FD10  FE                 	db	254
  1201  00FD11  78                 	db	120
  1202  00FD12  CD                 	db	205
  1203  00FD13  5A                 	db	90
  1204  00FD14  F4                 	db	244
  1205  00FD15  1F                 	db	31
  1206  00FD16  DD                 	db	221
  1207  00FD17  A8                 	db	168
  1208  00FD18  33                 	db	51
  1209  00FD19  88                 	db	136
  1210  00FD1A  07                 	db	7
  1211  00FD1B  C7                 	db	199
  1212  00FD1C  31                 	db	49
  1213  00FD1D  B1                 	db	177
  1214  00FD1E  12                 	db	18
  1215  00FD1F  10                 	db	16
  1216  00FD20  59                 	db	89
  1217  00FD21  27                 	db	39
  1218  00FD22  80                 	db	128
  1219  00FD23  EC                 	db	236
  1220  00FD24  5F                 	db	95
  1221  00FD25  60                 	db	96
  1222  00FD26  51                 	db	81
  1223  00FD27  7F                 	db	127
  1224  00FD28  A9                 	db	169
  1225  00FD29  19                 	db	25
  1226  00FD2A  B5                 	db	181
  1227  00FD2B  4A                 	db	74
  1228  00FD2C  0D                 	db	13
  1229  00FD2D  2D                 	db	45
  1230  00FD2E  E5                 	db	229
  1231  00FD2F  7A                 	db	122
  1232  00FD30  9F                 	db	159
  1233  00FD31  93                 	db	147
  1234  00FD32  C9                 	db	201
  1235  00FD33  9C                 	db	156
  1236  00FD34  EF                 	db	239
  1237  00FD35  A0                 	db	160
  1238  00FD36  E0                 	db	224
  1239  00FD37  3B                 	db	59
  1240  00FD38  4D                 	db	77
  1241  00FD39  AE                 	db	174
  1242  00FD3A  2A                 	db	42
  1243  00FD3B  F5                 	db	245
  1244  00FD3C  B0                 	db	176
  1245  00FD3D  C8                 	db	200
  1246  00FD3E  EB                 	db	235
  1247  00FD3F  BB                 	db	187
  1248  00FD40  3C                 	db	60
  1249  00FD41  83                 	db	131
  1250  00FD42  53                 	db	83
  1251  00FD43  99                 	db	153
  1252  00FD44  61                 	db	97
  1253  00FD45  17                 	db	23
  1254  00FD46  2B                 	db	43
  1255  00FD47  04                 	db	4
  1256  00FD48  7E                 	db	126
  1257  00FD49  BA                 	db	186
  1258  00FD4A  77                 	db	119
  1259  00FD4B  D6                 	db	214
  1260  00FD4C  26                 	db	38
  1261  00FD4D  E1                 	db	225
  1262  00FD4E  69                 	db	105
  1263  00FD4F  14                 	db	20
  1264  00FD50  63                 	db	99
  1265  00FD51  55                 	db	85
  1266  00FD52  21                 	db	33
  1267  00FD53  0C                 	db	12
  1268  00FD54  7D                 	db	125
  1269  00FD55                     __end_of_rsbox:
  1270                           	callstack 0
  1271  00FD55                     _sbox:
  1272                           	callstack 0
  1273  00FD55  63                 	db	99
  1274  00FD56  7C                 	db	124
  1275  00FD57  77                 	db	119
  1276  00FD58  7B                 	db	123
  1277  00FD59  F2                 	db	242
  1278  00FD5A  6B                 	db	107
  1279  00FD5B  6F                 	db	111
  1280  00FD5C  C5                 	db	197
  1281  00FD5D  30                 	db	48
  1282  00FD5E  01                 	db	1
  1283  00FD5F  67                 	db	103
  1284  00FD60  2B                 	db	43
  1285  00FD61  FE                 	db	254
  1286  00FD62  D7                 	db	215
  1287  00FD63  AB                 	db	171
  1288  00FD64  76                 	db	118
  1289  00FD65  CA                 	db	202
  1290  00FD66  82                 	db	130
  1291  00FD67  C9                 	db	201
  1292  00FD68  7D                 	db	125
  1293  00FD69  FA                 	db	250
  1294  00FD6A  59                 	db	89
  1295  00FD6B  47                 	db	71
  1296  00FD6C  F0                 	db	240
  1297  00FD6D  AD                 	db	173
  1298  00FD6E  D4                 	db	212
  1299  00FD6F  A2                 	db	162
  1300  00FD70  AF                 	db	175
  1301  00FD71  9C                 	db	156
  1302  00FD72  A4                 	db	164
  1303  00FD73  72                 	db	114
  1304  00FD74  C0                 	db	192
  1305  00FD75  B7                 	db	183
  1306  00FD76  FD                 	db	253
  1307  00FD77  93                 	db	147
  1308  00FD78  26                 	db	38
  1309  00FD79  36                 	db	54
  1310  00FD7A  3F                 	db	63
  1311  00FD7B  F7                 	db	247
  1312  00FD7C  CC                 	db	204
  1313  00FD7D  34                 	db	52
  1314  00FD7E  A5                 	db	165
  1315  00FD7F  E5                 	db	229
  1316  00FD80  F1                 	db	241
  1317  00FD81  71                 	db	113
  1318  00FD82  D8                 	db	216
  1319  00FD83  31                 	db	49
  1320  00FD84  15                 	db	21
  1321  00FD85  04                 	db	4
  1322  00FD86  C7                 	db	199
  1323  00FD87  23                 	db	35
  1324  00FD88  C3                 	db	195
  1325  00FD89  18                 	db	24
  1326  00FD8A  96                 	db	150
  1327  00FD8B  05                 	db	5
  1328  00FD8C  9A                 	db	154
  1329  00FD8D  07                 	db	7
  1330  00FD8E  12                 	db	18
  1331  00FD8F  80                 	db	128
  1332  00FD90  E2                 	db	226
  1333  00FD91  EB                 	db	235
  1334  00FD92  27                 	db	39
  1335  00FD93  B2                 	db	178
  1336  00FD94  75                 	db	117
  1337  00FD95  09                 	db	9
  1338  00FD96  83                 	db	131
  1339  00FD97  2C                 	db	44
  1340  00FD98  1A                 	db	26
  1341  00FD99  1B                 	db	27
  1342  00FD9A  6E                 	db	110
  1343  00FD9B  5A                 	db	90
  1344  00FD9C  A0                 	db	160
  1345  00FD9D  52                 	db	82
  1346  00FD9E  3B                 	db	59
  1347  00FD9F  D6                 	db	214
  1348  00FDA0  B3                 	db	179
  1349  00FDA1  29                 	db	41
  1350  00FDA2  E3                 	db	227
  1351  00FDA3  2F                 	db	47
  1352  00FDA4  84                 	db	132
  1353  00FDA5  53                 	db	83
  1354  00FDA6  D1                 	db	209
  1355  00FDA7  00                 	db	0
  1356  00FDA8  ED                 	db	237
  1357  00FDA9  20                 	db	32
  1358  00FDAA  FC                 	db	252
  1359  00FDAB  B1                 	db	177
  1360  00FDAC  5B                 	db	91
  1361  00FDAD  6A                 	db	106
  1362  00FDAE  CB                 	db	203
  1363  00FDAF  BE                 	db	190
  1364  00FDB0  39                 	db	57
  1365  00FDB1  4A                 	db	74
  1366  00FDB2  4C                 	db	76
  1367  00FDB3  58                 	db	88
  1368  00FDB4  CF                 	db	207
  1369  00FDB5  D0                 	db	208
  1370  00FDB6  EF                 	db	239
  1371  00FDB7  AA                 	db	170
  1372  00FDB8  FB                 	db	251
  1373  00FDB9  43                 	db	67
  1374  00FDBA  4D                 	db	77
  1375  00FDBB  33                 	db	51
  1376  00FDBC  85                 	db	133
  1377  00FDBD  45                 	db	69
  1378  00FDBE  F9                 	db	249
  1379  00FDBF  02                 	db	2
  1380  00FDC0  7F                 	db	127
  1381  00FDC1  50                 	db	80
  1382  00FDC2  3C                 	db	60
  1383  00FDC3  9F                 	db	159
  1384  00FDC4  A8                 	db	168
  1385  00FDC5  51                 	db	81
  1386  00FDC6  A3                 	db	163
  1387  00FDC7  40                 	db	64
  1388  00FDC8  8F                 	db	143
  1389  00FDC9  92                 	db	146
  1390  00FDCA  9D                 	db	157
  1391  00FDCB  38                 	db	56
  1392  00FDCC  F5                 	db	245
  1393  00FDCD  BC                 	db	188
  1394  00FDCE  B6                 	db	182
  1395  00FDCF  DA                 	db	218
  1396  00FDD0  21                 	db	33
  1397  00FDD1  10                 	db	16
  1398  00FDD2  FF                 	db	255
  1399  00FDD3  F3                 	db	243
  1400  00FDD4  D2                 	db	210
  1401  00FDD5  CD                 	db	205
  1402  00FDD6  0C                 	db	12
  1403  00FDD7  13                 	db	19
  1404  00FDD8  EC                 	db	236
  1405  00FDD9  5F                 	db	95
  1406  00FDDA  97                 	db	151
  1407  00FDDB  44                 	db	68
  1408  00FDDC  17                 	db	23
  1409  00FDDD  C4                 	db	196
  1410  00FDDE  A7                 	db	167
  1411  00FDDF  7E                 	db	126
  1412  00FDE0  3D                 	db	61
  1413  00FDE1  64                 	db	100
  1414  00FDE2  5D                 	db	93
  1415  00FDE3  19                 	db	25
  1416  00FDE4  73                 	db	115
  1417  00FDE5  60                 	db	96
  1418  00FDE6  81                 	db	129
  1419  00FDE7  4F                 	db	79
  1420  00FDE8  DC                 	db	220
  1421  00FDE9  22                 	db	34
  1422  00FDEA  2A                 	db	42
  1423  00FDEB  90                 	db	144
  1424  00FDEC  88                 	db	136
  1425  00FDED  46                 	db	70
  1426  00FDEE  EE                 	db	238
  1427  00FDEF  B8                 	db	184
  1428  00FDF0  14                 	db	20
  1429  00FDF1  DE                 	db	222
  1430  00FDF2  5E                 	db	94
  1431  00FDF3  0B                 	db	11
  1432  00FDF4  DB                 	db	219
  1433  00FDF5  E0                 	db	224
  1434  00FDF6  32                 	db	50
  1435  00FDF7  3A                 	db	58
  1436  00FDF8  0A                 	db	10
  1437  00FDF9  49                 	db	73
  1438  00FDFA  06                 	db	6
  1439  00FDFB  24                 	db	36
  1440  00FDFC  5C                 	db	92
  1441  00FDFD  C2                 	db	194
  1442  00FDFE  D3                 	db	211
  1443  00FDFF  AC                 	db	172
  1444  00FE00  62                 	db	98
  1445  00FE01  91                 	db	145
  1446  00FE02  95                 	db	149
  1447  00FE03  E4                 	db	228
  1448  00FE04  79                 	db	121
  1449  00FE05  E7                 	db	231
  1450  00FE06  C8                 	db	200
  1451  00FE07  37                 	db	55
  1452  00FE08  6D                 	db	109
  1453  00FE09  8D                 	db	141
  1454  00FE0A  D5                 	db	213
  1455  00FE0B  4E                 	db	78
  1456  00FE0C  A9                 	db	169
  1457  00FE0D  6C                 	db	108
  1458  00FE0E  56                 	db	86
  1459  00FE0F  F4                 	db	244
  1460  00FE10  EA                 	db	234
  1461  00FE11  65                 	db	101
  1462  00FE12  7A                 	db	122
  1463  00FE13  AE                 	db	174
  1464  00FE14  08                 	db	8
  1465  00FE15  BA                 	db	186
  1466  00FE16  78                 	db	120
  1467  00FE17  25                 	db	37
  1468  00FE18  2E                 	db	46
  1469  00FE19  1C                 	db	28
  1470  00FE1A  A6                 	db	166
  1471  00FE1B  B4                 	db	180
  1472  00FE1C  C6                 	db	198
  1473  00FE1D  E8                 	db	232
  1474  00FE1E  DD                 	db	221
  1475  00FE1F  74                 	db	116
  1476  00FE20  1F                 	db	31
  1477  00FE21  4B                 	db	75
  1478  00FE22  BD                 	db	189
  1479  00FE23  8B                 	db	139
  1480  00FE24  8A                 	db	138
  1481  00FE25  70                 	db	112
  1482  00FE26  3E                 	db	62
  1483  00FE27  B5                 	db	181
  1484  00FE28  66                 	db	102
  1485  00FE29  48                 	db	72
  1486  00FE2A  03                 	db	3
  1487  00FE2B  F6                 	db	246
  1488  00FE2C  0E                 	db	14
  1489  00FE2D  61                 	db	97
  1490  00FE2E  35                 	db	53
  1491  00FE2F  57                 	db	87
  1492  00FE30  B9                 	db	185
  1493  00FE31  86                 	db	134
  1494  00FE32  C1                 	db	193
  1495  00FE33  1D                 	db	29
  1496  00FE34  9E                 	db	158
  1497  00FE35  E1                 	db	225
  1498  00FE36  F8                 	db	248
  1499  00FE37  98                 	db	152
  1500  00FE38  11                 	db	17
  1501  00FE39  69                 	db	105
  1502  00FE3A  D9                 	db	217
  1503  00FE3B  8E                 	db	142
  1504  00FE3C  94                 	db	148
  1505  00FE3D  9B                 	db	155
  1506  00FE3E  1E                 	db	30
  1507  00FE3F  87                 	db	135
  1508  00FE40  E9                 	db	233
  1509  00FE41  CE                 	db	206
  1510  00FE42  55                 	db	85
  1511  00FE43  28                 	db	40
  1512  00FE44  DF                 	db	223
  1513  00FE45  8C                 	db	140
  1514  00FE46  A1                 	db	161
  1515  00FE47  89                 	db	137
  1516  00FE48  0D                 	db	13
  1517  00FE49  BF                 	db	191
  1518  00FE4A  E6                 	db	230
  1519  00FE4B  42                 	db	66
  1520  00FE4C  68                 	db	104
  1521  00FE4D  41                 	db	65
  1522  00FE4E  99                 	db	153
  1523  00FE4F  2D                 	db	45
  1524  00FE50  0F                 	db	15
  1525  00FE51  B0                 	db	176
  1526  00FE52  54                 	db	84
  1527  00FE53  BB                 	db	187
  1528  00FE54  16                 	db	22
  1529  00FE55                     __end_of_sbox:
  1530                           	callstack 0
  1531  00FE55                     _fhssList:
  1532                           	callstack 0
  1533  00FE55  7680               	dw	30336
  1534  00FE57  3600               	dw	13824
  1535  00FE59  FB00               	dw	64256
  1536  00FE5B  361E               	dw	13854
  1537  00FE5D  7F80               	dw	32640
  1538  00FE5F  363D               	dw	13885
  1539  00FE61  0400               	dw	1024
  1540  00FE63  365C               	dw	13916
  1541  00FE65  8880               	dw	34944
  1542  00FE67  367A               	dw	13946
  1543  00FE69  0D00               	dw	3328
  1544  00FE6B  3699               	dw	13977
  1545  00FE6D  9180               	dw	37248
  1546  00FE6F  36B7               	dw	14007
  1547  00FE71  1600               	dw	5632
  1548  00FE73  36D6               	dw	14038
  1549  00FE75  9A80               	dw	39552
  1550  00FE77  36F4               	dw	14068
  1551  00FE79  1F00               	dw	7936
  1552  00FE7B  3713               	dw	14099
  1553  00FE7D                     __end_of_fhssList:
  1554                           	callstack 0
  1555  00FE7D                     _ascii_lut:
  1556                           	callstack 0
  1557  00FE7D  30                 	db	48
  1558  00FE7E  31                 	db	49
  1559  00FE7F  32                 	db	50
  1560  00FE80  33                 	db	51
  1561  00FE81  34                 	db	52
  1562  00FE82  35                 	db	53
  1563  00FE83  36                 	db	54
  1564  00FE84  37                 	db	55
  1565  00FE85  38                 	db	56
  1566  00FE86  39                 	db	57
  1567  00FE87  41                 	db	65
  1568  00FE88  42                 	db	66
  1569  00FE89  43                 	db	67
  1570  00FE8A  44                 	db	68
  1571  00FE8B  45                 	db	69
  1572  00FE8C  46                 	db	70
  1573  00FE8D                     __end_of_ascii_lut:
  1574                           	callstack 0
  1575  00FE8D                     _Rcon:
  1576                           	callstack 0
  1577  00FE8D  8D                 	db	141
  1578  00FE8E  01                 	db	1
  1579  00FE8F  02                 	db	2
  1580  00FE90  04                 	db	4
  1581  00FE91  08                 	db	8
  1582  00FE92  10                 	db	16
  1583  00FE93  20                 	db	32
  1584  00FE94  40                 	db	64
  1585  00FE95  80                 	db	128
  1586  00FE96  1B                 	db	27
  1587  00FE97  36                 	db	54
  1588  00FE98                     __end_of_Rcon:
  1589                           	callstack 0
  1590  00FE98                     _dpowers:
  1591                           	callstack 0
  1592  00FE98  0001               	dw	1
  1593  00FE9A  000A               	dw	10
  1594  00FE9C  0064               	dw	100
  1595  00FE9E  03E8               	dw	1000
  1596  00FEA0  2710               	dw	10000
  1597  00FEA2                     __end_of_dpowers:
  1598                           	callstack 0
  1599  00FEA2  03                 	db	3
  1600  00FEA3  08                 	db	8
  1601  00FEA4  1A                 	db	26
  1602  00FEA5  40                 	db	64
  1603  00FEA6  80                 	db	128
  1604  00FEA7  BE                 	db	190
  1605  00FEA8  E6                 	db	230
  1606  00FEA9  F7                 	db	247
  1607  00FEAA  FC                 	db	252
  1608  00FEAB                     __end_ofNWK_LinearizeLqi@F16058:
  1609                           	callstack 0
  1610  00FEAB  82                 	db	130
  1611  00FEAC  C0                 	db	192
  1612  00FEAD  03                 	db	3
  1613  00FEAE  03                 	db	3
  1614  00FEAF  00                 	db	0
  1615  00FEB0                     __end_of_spi1_configuration:
  1616                           	callstack 0
  1617  00FEB0                     _FirmwareVersionMinor:
  1618                           	callstack 0
  1619  00FEB0  01                 	db	1
  1620  00FEB1                     __end_of_FirmwareVersionMinor:
  1621                           	callstack 0
  1622  00FEB1                     _FirmwareVersionMajor:
  1623                           	callstack 0
  1624  00FEB1  01                 	db	1
  1625  00FEB2                     __end_of_FirmwareVersionMajor:
  1626                           	callstack 0
  1627  00FEB2                     _ATVersionMinor:
  1628                           	callstack 0
  1629  00FEB2  00                 	db	0
  1630  00FEB3                     __end_of_ATVersionMinor:
  1631                           	callstack 0
  1632  00FEB3                     _ATVersionMajor:
  1633                           	callstack 0
  1634  00FEB3  01                 	db	1
  1635  00FEB4                     __end_of_ATVersionMajor:
  1636                           	callstack 0
  1637  00FEB4                     STR_16:
  1638  00FEB4  28                 	db	40
  1639  00FEB5  20                 	db	32
  1640  00FEB6  65                 	db	101	;'e'
  1641  00FEB7  52                 	db	82	;'R'
  1642  00FEB8  63                 	db	99	;'c'
  1643  00FEB9  76                 	db	118	;'v'
  1644  00FEBA  53                 	db	83	;'S'
  1645  00FEBB  74                 	db	116	;'t'
  1646  00FEBC  61                 	db	97	;'a'
  1647  00FEBD  74                 	db	116	;'t'
  1648  00FEBE  65                 	db	101	;'e'
  1649  00FEBF  20                 	db	32
  1650  00FEC0  3D                 	db	61	;'='
  1651  00FEC1  3D                 	db	61	;'='
  1652  00FEC2  20                 	db	32
  1653  00FEC3  53                 	db	83	;'S'
  1654  00FEC4  54                 	db	84	;'T'
  1655  00FEC5  41                 	db	65	;'A'
  1656  00FEC6  54                 	db	84	;'T'
  1657  00FEC7  45                 	db	69	;'E'
  1658  00FEC8  5F                 	db	95	;'_'
  1659  00FEC9  52                 	db	82	;'R'
  1660  00FECA  58                 	db	88	;'X'
  1661  00FECB  5F                 	db	95	;'_'
  1662  00FECC  49                 	db	73	;'I'
  1663  00FECD  4E                 	db	78	;'N'
  1664  00FECE  49                 	db	73	;'I'
  1665  00FECF  54                 	db	84	;'T'
  1666  00FED0  20                 	db	32
  1667  00FED1  29                 	db	41
  1668  00FED2  20                 	db	32
  1669  00FED3  7C                 	db	124
  1670  00FED4  7C                 	db	124
  1671  00FED5  20                 	db	32
  1672  00FED6  28                 	db	40
  1673  00FED7  20                 	db	32
  1674  00FED8  65                 	db	101	;'e'
  1675  00FED9  52                 	db	82	;'R'
  1676  00FEDA  63                 	db	99	;'c'
  1677  00FEDB  76                 	db	118	;'v'
  1678  00FEDC  53                 	db	83	;'S'
  1679  00FEDD  74                 	db	116	;'t'
  1680  00FEDE  61                 	db	97	;'a'
  1681  00FEDF  74                 	db	116	;'t'
  1682  00FEE0  65                 	db	101	;'e'
  1683  00FEE1  20                 	db	32
  1684  00FEE2  3D                 	db	61	;'='
  1685  00FEE3  3D                 	db	61	;'='
  1686  00FEE4  20                 	db	32
  1687  00FEE5  53                 	db	83	;'S'
  1688  00FEE6  54                 	db	84	;'T'
  1689  00FEE7  41                 	db	65	;'A'
  1690  00FEE8  54                 	db	84	;'T'
  1691  00FEE9  45                 	db	69	;'E'
  1692  00FEEA  5F                 	db	95	;'_'
  1693  00FEEB  52                 	db	82	;'R'
  1694  00FEEC  58                 	db	88	;'X'
  1695  00FEED  5F                 	db	95	;'_'
  1696  00FEEE  52                 	db	82	;'R'
  1697  00FEEF  43                 	db	67	;'C'
  1698  00FEF0  56                 	db	86	;'V'
  1699  00FEF1  20                 	db	32
  1700  00FEF2  29                 	db	41
  1701  00FEF3  20                 	db	32
  1702  00FEF4  7C                 	db	124
  1703  00FEF5  7C                 	db	124
  1704  00FEF6  20                 	db	32
  1705  00FEF7  28                 	db	40
  1706  00FEF8  20                 	db	32
  1707  00FEF9  65                 	db	101	;'e'
  1708  00FEFA  52                 	db	82	;'R'
  1709  00FEFB  63                 	db	99	;'c'
  1710  00FEFC  76                 	db	118	;'v'
  1711  00FEFD  53                 	db	83	;'S'
  1712  00FEFE  74                 	db	116	;'t'
  1713  00FEFF  61                 	db	97	;'a'
  1714  00FF00  74                 	db	116	;'t'
  1715  00FF01  65                 	db	101	;'e'
  1716  00FF02  20                 	db	32
  1717  00FF03  3D                 	db	61	;'='
  1718  00FF04  3D                 	db	61	;'='
  1719  00FF05  20                 	db	32
  1720  00FF06  53                 	db	83	;'S'
  1721  00FF07  54                 	db	84	;'T'
  1722  00FF08  41                 	db	65	;'A'
  1723  00FF09  54                 	db	84	;'T'
  1724  00FF0A  45                 	db	69	;'E'
  1725  00FF0B  5F                 	db	95	;'_'
  1726  00FF0C  52                 	db	82	;'R'
  1727  00FF0D  58                 	db	88	;'X'
  1728  00FF0E  5F                 	db	95	;'_'
  1729  00FF0F  45                 	db	69	;'E'
  1730  00FF10  52                 	db	82	;'R'
  1731  00FF11  52                 	db	82	;'R'
  1732  00FF12  4F                 	db	79	;'O'
  1733  00FF13  52                 	db	82	;'R'
  1734  00FF14  20                 	db	32
  1735  00FF15  29                 	db	41
  1736  00FF16  00                 	db	0
  1737  00FF17                     STR_17:
  1738  00FF17  41                 	db	65	;'A'
  1739  00FF18  73                 	db	115	;'s'
  1740  00FF19  73                 	db	115	;'s'
  1741  00FF1A  65                 	db	101	;'e'
  1742  00FF1B  72                 	db	114	;'r'
  1743  00FF1C  74                 	db	116	;'t'
  1744  00FF1D  69                 	db	105	;'i'
  1745  00FF1E  6F                 	db	111	;'o'
  1746  00FF1F  6E                 	db	110	;'n'
  1747  00FF20  20                 	db	32
  1748  00FF21  66                 	db	102	;'f'
  1749  00FF22  61                 	db	97	;'a'
  1750  00FF23  69                 	db	105	;'i'
  1751  00FF24  6C                 	db	108	;'l'
  1752  00FF25  65                 	db	101	;'e'
  1753  00FF26  64                 	db	100	;'d'
  1754  00FF27  3A                 	db	58	;':'
  1755  00FF28  20                 	db	32
  1756  00FF29  25                 	db	37
  1757  00FF2A  73                 	db	115	;'s'
  1758  00FF2B  20                 	db	32
  1759  00FF2C  6C                 	db	108	;'l'
  1760  00FF2D  69                 	db	105	;'i'
  1761  00FF2E  6E                 	db	110	;'n'
  1762  00FF2F  65                 	db	101	;'e'
  1763  00FF30  20                 	db	32
  1764  00FF31  25                 	db	37
  1765  00FF32  64                 	db	100	;'d'
  1766  00FF33  3A                 	db	58	;':'
  1767  00FF34  20                 	db	32
  1768  00FF35  22                 	db	34
  1769  00FF36  25                 	db	37
  1770  00FF37  73                 	db	115	;'s'
  1771  00FF38  22                 	db	34
  1772  00FF39  0A                 	db	10
  1773  00FF3A  00                 	db	0
  1774  00FF3B  28                 	db	40
  1775  00FF3C  20                 	db	32
  1776  00FF3D  73                 	db	115	;'s'
  1777  00FF3E  69                 	db	105	;'i'
  1778  00FF3F  7A                 	db	122	;'z'
  1779  00FF40  65                 	db	101	;'e'
  1780  00FF41  5F                 	db	95	;'_'
  1781  00FF42  74                 	db	116	;'t'
  1782  00FF43  20                 	db	32
  1783  00FF44  29                 	db	41
  1784  00FF45  38                 	db	56	;'8'
  1785  00FF46  55                 	db	85	;'U'
  1786  00FF47  20                 	db	32
  1787  00FF48  3D                 	db	61	;'='
  1788  00FF49  3D                 	db	61	;'='
  1789  00FF4A  20                 	db	32
  1790  00FF4B  73                 	db	115	;'s'
  1791  00FF4C  69                 	db	105	;'i'
  1792  00FF4D  7A                 	db	122	;'z'
  1793  00FF4E  65                 	db	101	;'e'
  1794  00FF4F  6F                 	db	111	;'o'
  1795  00FF50  66                 	db	102	;'f'
  1796  00FF51  28                 	db	40
  1797  00FF52  20                 	db	32
  1798  00FF53  55                 	db	85	;'U'
  1799  00FF54  43                 	db	67	;'C'
  1800  00FF55  48                 	db	72	;'H'
  1801  00FF56  41                 	db	65	;'A'
  1802  00FF57  52                 	db	82	;'R'
  1803  00FF58  20                 	db	32
  1804  00FF59  29                 	db	41
  1805  00FF5A  20                 	db	32
  1806  00FF5B  2A                 	db	42
  1807  00FF5C  20                 	db	32
  1808  00FF5D  38                 	db	56	;'8'
  1809  00FF5E  00                 	db	0
  1810  00FF5F                     STR_5:
  1811  00FF5F  2E                 	db	46
  1812  00FF60  2E                 	db	46
  1813  00FF61  2F                 	db	47
  1814  00FF62  6D                 	db	109	;'m'
  1815  00FF63  6F                 	db	111	;'o'
  1816  00FF64  64                 	db	100	;'d'
  1817  00FF65  62                 	db	98	;'b'
  1818  00FF66  75                 	db	117	;'u'
  1819  00FF67  73                 	db	115	;'s'
  1820  00FF68  2F                 	db	47
  1821  00FF69  66                 	db	102	;'f'
  1822  00FF6A  75                 	db	117	;'u'
  1823  00FF6B  6E                 	db	110	;'n'
  1824  00FF6C  63                 	db	99	;'c'
  1825  00FF6D  74                 	db	116	;'t'
  1826  00FF6E  69                 	db	105	;'i'
  1827  00FF6F  6F                 	db	111	;'o'
  1828  00FF70  6E                 	db	110	;'n'
  1829  00FF71  73                 	db	115	;'s'
  1830  00FF72  2F                 	db	47
  1831  00FF73  6D                 	db	109	;'m'
  1832  00FF74  62                 	db	98	;'b'
  1833  00FF75  75                 	db	117	;'u'
  1834  00FF76  74                 	db	116	;'t'
  1835  00FF77  69                 	db	105	;'i'
  1836  00FF78  6C                 	db	108	;'l'
  1837  00FF79  73                 	db	115	;'s'
  1838  00FF7A  2E                 	db	46
  1839  00FF7B  63                 	db	99	;'c'
  1840  00FF7C  00                 	db	0
  1841  00FF7D                     STR_14:
  1842  00FF7D  65                 	db	101	;'e'
  1843  00FF7E  52                 	db	82	;'R'
  1844  00FF7F  63                 	db	99	;'c'
  1845  00FF80  76                 	db	118	;'v'
  1846  00FF81  53                 	db	83	;'S'
  1847  00FF82  74                 	db	116	;'t'
  1848  00FF83  61                 	db	97	;'a'
  1849  00FF84  74                 	db	116	;'t'
  1850  00FF85  65                 	db	101	;'e'
  1851  00FF86  20                 	db	32
  1852  00FF87  3D                 	db	61	;'='
  1853  00FF88  3D                 	db	61	;'='
  1854  00FF89  20                 	db	32
  1855  00FF8A  53                 	db	83	;'S'
  1856  00FF8B  54                 	db	84	;'T'
  1857  00FF8C  41                 	db	65	;'A'
  1858  00FF8D  54                 	db	84	;'T'
  1859  00FF8E  45                 	db	69	;'E'
  1860  00FF8F  5F                 	db	95	;'_'
  1861  00FF90  52                 	db	82	;'R'
  1862  00FF91  58                 	db	88	;'X'
  1863  00FF92  5F                 	db	95	;'_'
  1864  00FF93  49                 	db	73	;'I'
  1865  00FF94  44                 	db	68	;'D'
  1866  00FF95  4C                 	db	76	;'L'
  1867  00FF96  45                 	db	69	;'E'
  1868  00FF97  00                 	db	0
  1869  00FF98                     STR_12:
  1870  00FF98  65                 	db	101	;'e'
  1871  00FF99  53                 	db	83	;'S'
  1872  00FF9A  6E                 	db	110	;'n'
  1873  00FF9B  64                 	db	100	;'d'
  1874  00FF9C  53                 	db	83	;'S'
  1875  00FF9D  74                 	db	116	;'t'
  1876  00FF9E  61                 	db	97	;'a'
  1877  00FF9F  74                 	db	116	;'t'
  1878  00FFA0  65                 	db	101	;'e'
  1879  00FFA1  20                 	db	32
  1880  00FFA2  3D                 	db	61	;'='
  1881  00FFA3  3D                 	db	61	;'='
  1882  00FFA4  20                 	db	32
  1883  00FFA5  53                 	db	83	;'S'
  1884  00FFA6  54                 	db	84	;'T'
  1885  00FFA7  41                 	db	65	;'A'
  1886  00FFA8  54                 	db	84	;'T'
  1887  00FFA9  45                 	db	69	;'E'
  1888  00FFAA  5F                 	db	95	;'_'
  1889  00FFAB  54                 	db	84	;'T'
  1890  00FFAC  58                 	db	88	;'X'
  1891  00FFAD  5F                 	db	95	;'_'
  1892  00FFAE  49                 	db	73	;'I'
  1893  00FFAF  44                 	db	68	;'D'
  1894  00FFB0  4C                 	db	76	;'L'
  1895  00FFB1  45                 	db	69	;'E'
  1896  00FFB2  00                 	db	0
  1897  00FFB3                     STR_9:
  1898  00FFB3  2E                 	db	46
  1899  00FFB4  2E                 	db	46
  1900  00FFB5  2F                 	db	47
  1901  00FFB6  6D                 	db	109	;'m'
  1902  00FFB7  6F                 	db	111	;'o'
  1903  00FFB8  64                 	db	100	;'d'
  1904  00FFB9  62                 	db	98	;'b'
  1905  00FFBA  75                 	db	117	;'u'
  1906  00FFBB  73                 	db	115	;'s'
  1907  00FFBC  2F                 	db	47
  1908  00FFBD  72                 	db	114	;'r'
  1909  00FFBE  74                 	db	116	;'t'
  1910  00FFBF  75                 	db	117	;'u'
  1911  00FFC0  2F                 	db	47
  1912  00FFC1  6D                 	db	109	;'m'
  1913  00FFC2  62                 	db	98	;'b'
  1914  00FFC3  72                 	db	114	;'r'
  1915  00FFC4  74                 	db	116	;'t'
  1916  00FFC5  75                 	db	117	;'u'
  1917  00FFC6  2E                 	db	46
  1918  00FFC7  63                 	db	99	;'c'
  1919  00FFC8  00                 	db	0
  1920  00FFC9                     STR_10:
  1921  00FFC9  75                 	db	117	;'u'
  1922  00FFCA  73                 	db	115	;'s'
  1923  00FFCB  52                 	db	82	;'R'
  1924  00FFCC  63                 	db	99	;'c'
  1925  00FFCD  76                 	db	118	;'v'
  1926  00FFCE  42                 	db	66	;'B'
  1927  00FFCF  75                 	db	117	;'u'
  1928  00FFD0  66                 	db	102	;'f'
  1929  00FFD1  66                 	db	102	;'f'
  1930  00FFD2  65                 	db	101	;'e'
  1931  00FFD3  72                 	db	114	;'r'
  1932  00FFD4  50                 	db	80	;'P'
  1933  00FFD5  6F                 	db	111	;'o'
  1934  00FFD6  73                 	db	115	;'s'
  1935  00FFD7  20                 	db	32
  1936  00FFD8  3C                 	db	60	;'<'
  1937  00FFD9  20                 	db	32
  1938  00FFDA  32                 	db	50	;'2'
  1939  00FFDB  35                 	db	53	;'5'
  1940  00FFDC  36                 	db	54	;'6'
  1941  00FFDD  00                 	db	0
  1942  00FFDE  75                 	db	117	;'u'
  1943  00FFDF  63                 	db	99	;'c'
  1944  00FFE0  4E                 	db	78	;'N'
  1945  00FFE1  42                 	db	66	;'B'
  1946  00FFE2  69                 	db	105	;'i'
  1947  00FFE3  74                 	db	116	;'t'
  1948  00FFE4  73                 	db	115	;'s'
  1949  00FFE5  20                 	db	32
  1950  00FFE6  3C                 	db	60	;'<'
  1951  00FFE7  3D                 	db	61	;'='
  1952  00FFE8  20                 	db	32
  1953  00FFE9  38                 	db	56	;'8'
  1954  00FFEA  00                 	db	0
  1955  00FFEB                     STR_18:
  1956  00FFEB  28                 	db	40
  1957  00FFEC  6E                 	db	110	;'n'
  1958  00FFED  75                 	db	117	;'u'
  1959  00FFEE  6C                 	db	108	;'l'
  1960  00FFEF  6C                 	db	108	;'l'
  1961  00FFF0  29                 	db	41
  1962  00FFF1  00                 	db	0
  1963  00FFF2                     STR_2:
  1964  00FFF2  50                 	db	80	;'P'
  1965  00FFF3  49                 	db	73	;'I'
  1966  00FFF4  4E                 	db	78	;'N'
  1967  00FFF5  47                 	db	71	;'G'
  1968  00FFF6  00                 	db	0
  1969  00FFF7                     STR_1:
  1970  00FFF7  53                 	db	83	;'S'
  1971  00FFF8  49                 	db	73	;'I'
  1972  00FFF9  4E                 	db	78	;'N'
  1973  00FFFA  4B                 	db	75	;'K'
  1974  00FFFB  00                 	db	0
  1975  00FFFC                     STR_4:
  1976  00FFFC  3D                 	db	61	;'='
  1977  00FFFD  00                 	db	0
  1978  00FFFE  00                 	db	0	; dummy byte at the end
  1979  0000                     
  1980                           	psect	nvBANK2
  1981  0002E6                     __pnvBANK2:
  1982                           	callstack 0
  1983  0002E6                     _TMR3_InterruptHandler:
  1984                           	callstack 0
  1985  0002E6                     	ds	2
  1986  0002E8                     _timer3ReloadVal:
  1987                           	callstack 0
  1988  0002E8                     	ds	2
  1989  0002EA                     _UART1_FramingErrorHandler:
  1990                           	callstack 0
  1991  0002EA                     	ds	2
  1992  0002EC                     _TMR0_InterruptHandler:
  1993                           	callstack 0
  1994  0002EC                     	ds	2
  1995  0002EE                     _timer0ReloadVal16bit:
  1996                           	callstack 0
  1997  0002EE                     	ds	2
  1998  0002F0                     _UART1_TxInterruptHandler:
  1999                           	callstack 0
  2000  0002F0                     	ds	2
  2001  0002F2                     _UART1_RxInterruptHandler:
  2002                           	callstack 0
  2003  0002F2                     	ds	2
  2004  0002F4                     _uart1TxBufferRemaining:
  2005                           	callstack 0
  2006  0002F4                     	ds	1
  2007                           
  2008                           	psect	nvBANK3
  2009  0003F9                     __pnvBANK3:
  2010                           	callstack 0
  2011  0003F9                     _UART1_ErrorHandler:
  2012                           	callstack 0
  2013  0003F9                     	ds	2
  2014  0003FB                     _UART1_OverrunErrorHandler:
  2015                           	callstack 0
  2016  0003FB                     	ds	2
  2017  0000                     _IVTADL	set	14493
  2018  0000                     _IVTADH	set	14494
  2019  0000                     _IVTADU	set	14495
  2020  0000                     _PIE6bits	set	14742
  2021  0000                     _PIR6bits	set	14758
  2022  0000                     _CRCDATH	set	14689
  2023  0000                     _CRCDATL	set	14688
  2024  0000                     _CRCCON1bits	set	14697
  2025  0000                     _CRCXORL	set	14694
  2026  0000                     _CRCXORH	set	14695
  2027  0000                     _SCANTRIG	set	14717
  2028  0000                     _SCANHADRL	set	14713
  2029  0000                     _SCANHADRH	set	14714
  2030  0000                     _SCANHADRU	set	14715
  2031  0000                     _SCANLADRL	set	14710
  2032  0000                     _SCANLADRH	set	14711
  2033  0000                     _SCANLADRU	set	14712
  2034  0000                     _SCANCON0	set	14716
  2035  0000                     _CRCCON1	set	14697
  2036  0000                     _CRCCON0	set	14696
  2037  0000                     _PRLOCKbits	set	14831
  2038  0000                     _PRLOCK	set	14831
  2039  0000                     _PMD7	set	14791
  2040  0000                     _PMD6	set	14790
  2041  0000                     _PMD5	set	14789
  2042  0000                     _PMD4	set	14788
  2043  0000                     _PMD3	set	14787
  2044  0000                     _PMD2	set	14786
  2045  0000                     _PMD1	set	14785
  2046  0000                     _PMD0	set	14784
  2047  0000                     _OSCTUNE	set	14814
  2048  0000                     _OSCFRQ	set	14815
  2049  0000                     _OSCEN	set	14813
  2050  0000                     _OSCCON3	set	14811
  2051  0000                     _OSCCON1	set	14809
  2052  0000                     _IPR4bits	set	14724
  2053  0000                     _IPR6bits	set	14726
  2054  0000                     _IPR3bits	set	14723
  2055  0000                     _PIR0bits	set	14752
  2056  0000                     _NVMCON2	set	14822
  2057  0000                     _NVMDAT	set	14819
  2058  0000                     _NVMADRL	set	14816
  2059  0000                     _NVMADRH	set	14817
  2060  0000                     _NVMCON1bits	set	14821
  2061  0000                     _PIR3bits	set	14755
  2062  0000                     _PIR2bits	set	14754
  2063  0000                     _PIE3bits	set	14739
  2064  0000                     _CRCCON0bits	set	14696
  2065  0000                     _CRCACCH	set	14691
  2066  0000                     _CRCACCL	set	14690
  2067  0000                     _SPI1SDIPPS	set	15071
  2068  0000                     _RC7PPS	set	14871
  2069  0000                     _U1CTSPPS	set	15078
  2070  0000                     _U1RXPPS	set	15077
  2071  0000                     _RC1PPS	set	14865
  2072  0000                     _RB0PPS	set	14856
  2073  0000                     _SPI1SSPPS	set	15072
  2074  0000                     _SPI1SCKPPS	set	15070
  2075  0000                     _RC0PPS	set	14864
  2076  0000                     _INLVLE	set	14980
  2077  0000                     _INLVLC	set	14948
  2078  0000                     _INLVLB	set	14932
  2079  0000                     _INLVLA	set	14916
  2080  0000                     _SLRCONC	set	14947
  2081  0000                     _SLRCONB	set	14931
  2082  0000                     _SLRCONA	set	14915
  2083  0000                     _ODCONC	set	14946
  2084  0000                     _ODCONB	set	14930
  2085  0000                     _ODCONA	set	14914
  2086  0000                     _RC4I2C	set	14955
  2087  0000                     _RC3I2C	set	14954
  2088  0000                     _RB2I2C	set	14939
  2089  0000                     _RB1I2C	set	14938
  2090  0000                     _WPUC	set	14945
  2091  0000                     _WPUA	set	14913
  2092  0000                     _WPUB	set	14929
  2093  0000                     _WPUE	set	14977
  2094  0000                     _ANSELA	set	14912
  2095  0000                     _ANSELB	set	14928
  2096  0000                     _ANSELC	set	14944
  2097  0000                     _U1TXB	set	15850
  2098  0000                     _U1ERRIE	set	15866
  2099  0000                     _U1UIR	set	15864
  2100  0000                     _U1P3H	set	15857
  2101  0000                     _U1P3L	set	15856
  2102  0000                     _U1P2H	set	15855
  2103  0000                     _U1P2L	set	15854
  2104  0000                     _U1P1H	set	15853
  2105  0000                     _U1P1L	set	15852
  2106  0000                     _SPI1RXB	set	15632
  2107  0000                     _SPI1TXB	set	15633
  2108  0000                     _SPI1TCNTL	set	15634
  2109  0000                     _SPI1BAUD	set	15641
  2110  0000                     _SPI1CLK	set	15644
  2111  0000                     _SPI1CON2	set	15638
  2112  0000                     _SPI1CON1	set	15637
  2113  0000                     _SPI1CON0	set	15636
  2114  0000                     _U1ERRIR	set	15865
  2115  0000                     _U1FIFO	set	15863
  2116  0000                     _U1BRGH	set	15862
  2117  0000                     _U1BRGL	set	15861
  2118  0000                     _U1CON2	set	15860
  2119  0000                     _U1CON0	set	15858
  2120  0000                     _U1CON1	set	15859
  2121  0000                     _U1ERRIRbits	set	15865
  2122  0000                     _U1RXB	set	15848
  2123  0000                     _PORTBbits	set	16331
  2124  0000                     _LATCbits	set	16316
  2125  0000                     _T5CONbits	set	16282
  2126  0000                     _TMR5L	set	16280
  2127  0000                     _TMR5H	set	16281
  2128  0000                     _T3CONbits	set	16294
  2129  0000                     _T3CON	set	16294
  2130  0000                     _TMR3L	set	16292
  2131  0000                     _TMR3H	set	16293
  2132  0000                     _T3CLK	set	16297
  2133  0000                     _T3GATE	set	16296
  2134  0000                     _T3GCON	set	16295
  2135  0000                     _TRISC	set	16324
  2136  0000                     _TRISB	set	16323
  2137  0000                     _TRISA	set	16322
  2138  0000                     _LATC	set	16316
  2139  0000                     _LATB	set	16315
  2140  0000                     _LATA	set	16314
  2141  0000                     _IVTLOCKbits	set	16340
  2142  0000                     _IVTLOCK	set	16340
  2143  0000                     _INTCON0bits	set	16338
  2144  0000                     _TABLAT	set	16373
  2145  0000                     _TBLPTRL	set	16374
  2146  0000                     _TBLPTRH	set	16375
  2147  0000                     _TBLPTRU	set	16376
  2148  0000                     _T0CON0	set	16312
  2149  0000                     _TMR0L	set	16310
  2150  0000                     _TMR0H	set	16311
  2151  0000                     _T0CON1	set	16313
  2152  0000                     _TRISCbits	set	16324
  2153  0000                     _LATAbits	set	16314
  2154  0000                     _PORTAbits	set	16330
  2155  0000                     _GIE	set	130711
  2156                           
  2157                           ; #config settings
  2158                           
  2159                           	psect	cinit
  2160  0065D2                     __pcinit:
  2161                           	callstack 0
  2162  0065D2                     start_initialization:
  2163                           	callstack 0
  2164  0065D2                     __initialization:
  2165                           	callstack 0
  2166                           
  2167                           ; Initialize objects allocated to BANK3 (28 bytes)
  2168                           ; load TBLPTR registers with __pidataBANK3
  2169  0065D2  0EF2               	movlw	low __pidataBANK3
  2170  0065D4  6EF6               	movwf	tblptrl,c
  2171  0065D6  0EB9               	movlw	high __pidataBANK3
  2172  0065D8  6EF7               	movwf	tblptrh,c
  2173  0065DA  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  2174  0065DC  6EF8               	movwf	tblptru,c
  2175  0065DE  EE00  F3C9         	lfsr	0,__pdataBANK3
  2176  0065E2  EE20 F01C          	lfsr	2,28
  2177  0065E6                     copy_data0:
  2178  0065E6  0009               	tblrd		*+
  2179  0065E8  006F FFD7 FFEE     	movff	tablat,postinc0
  2180  0065EE  50DD               	movf	postdec2,w,c
  2181  0065F0  50D9               	movf	fsr2l,w,c
  2182  0065F2  E1F9               	bnz	copy_data0
  2183                           
  2184                           ; Initialize objects allocated to BANK2 (10 bytes)
  2185                           ; load TBLPTR registers with __pidataBANK2
  2186  0065F4  0ED6               	movlw	low __pidataBANK2
  2187  0065F6  6EF6               	movwf	tblptrl,c
  2188  0065F8  0EBC               	movlw	high __pidataBANK2
  2189  0065FA  6EF7               	movwf	tblptrh,c
  2190  0065FC  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  2191  0065FE  6EF8               	movwf	tblptru,c
  2192  006600  EE00  F2F5         	lfsr	0,__pdataBANK2
  2193  006604  EE20 F00A          	lfsr	2,10
  2194  006608                     copy_data1:
  2195  006608  0009               	tblrd		*+
  2196  00660A  006F FFD7 FFEE     	movff	tablat,postinc0
  2197  006610  50DD               	movf	postdec2,w,c
  2198  006612  50D9               	movf	fsr2l,w,c
  2199  006614  E1F9               	bnz	copy_data1
  2200                           
  2201                           ; Initialize objects allocated to BANK1 (4 bytes)
  2202                           ; load TBLPTR registers with __pidataBANK1
  2203  006616  0E74               	movlw	low __pidataBANK1
  2204  006618  6EF6               	movwf	tblptrl,c
  2205  00661A  0EBD               	movlw	high __pidataBANK1
  2206  00661C  6EF7               	movwf	tblptrh,c
  2207  00661E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  2208  006620  6EF8               	movwf	tblptru,c
  2209  006622  EE00  F1FC         	lfsr	0,__pdataBANK1
  2210  006626  EE20 F004          	lfsr	2,4
  2211  00662A                     copy_data2:
  2212  00662A  0009               	tblrd		*+
  2213  00662C  006F FFD7 FFEE     	movff	tablat,postinc0
  2214  006632  50DD               	movf	postdec2,w,c
  2215  006634  50D9               	movf	fsr2l,w,c
  2216  006636  E1F9               	bnz	copy_data2
  2217                           
  2218                           ; Initialize objects allocated to BANK0 (4 bytes)
  2219                           ; load TBLPTR registers with __pidataBANK0
  2220  006638  0E70               	movlw	low __pidataBANK0
  2221  00663A  6EF6               	movwf	tblptrl,c
  2222  00663C  0EBD               	movlw	high __pidataBANK0
  2223  00663E  6EF7               	movwf	tblptrh,c
  2224  006640  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  2225  006642  6EF8               	movwf	tblptru,c
  2226  006644  EE00  F0E8         	lfsr	0,__pdataBANK0
  2227  006648  EE20 F004          	lfsr	2,4
  2228  00664C                     copy_data3:
  2229  00664C  0009               	tblrd		*+
  2230  00664E  006F FFD7 FFEE     	movff	tablat,postinc0
  2231  006654  50DD               	movf	postdec2,w,c
  2232  006656  50D9               	movf	fsr2l,w,c
  2233  006658  E1F9               	bnz	copy_data3
  2234                           
  2235                           ; Clear objects allocated to BIGRAM (1323 bytes)
  2236  00665A  EE02  F2A0         	lfsr	0,__pbssBIGRAM
  2237  00665E  EE21 F12B          	lfsr	2,1323
  2238  006662                     clear_0:
  2239  006662  6AEE               	clrf	postinc0,c
  2240  006664  50DD               	movf	postdec2,w,c
  2241  006666  50D9               	movf	fsr2l,w,c
  2242  006668  E1FC               	bnz	clear_0
  2243  00666A  50DA               	movf	fsr2h,w,c
  2244  00666C  E1FA               	bnz	clear_0
  2245                           
  2246                           ; Clear objects allocated to BANK10 (160 bytes)
  2247  00666E  EE02  F200         	lfsr	0,__pbssBANK10
  2248  006672  0EA0               	movlw	160
  2249  006674                     clear_1:
  2250  006674  6AEE               	clrf	postinc0,c
  2251  006676  06E8               	decf	wreg,f,c
  2252  006678  E1FD               	bnz	clear_1
  2253                           
  2254                           ; Clear objects allocated to BANK9 (128 bytes)
  2255  00667A  EE02  F100         	lfsr	0,__pbssBANK9
  2256  00667E  0E80               	movlw	128
  2257  006680                     clear_2:
  2258  006680  6AEE               	clrf	postinc0,c
  2259  006682  06E8               	decf	wreg,f,c
  2260  006684  E1FD               	bnz	clear_2
  2261                           
  2262                           ; Clear objects allocated to BANK8 (224 bytes)
  2263  006686  EE02  F000         	lfsr	0,__pbssBANK8
  2264  00668A  0EE0               	movlw	224
  2265  00668C                     clear_3:
  2266  00668C  6AEE               	clrf	postinc0,c
  2267  00668E  06E8               	decf	wreg,f,c
  2268  006690  E1FD               	bnz	clear_3
  2269                           
  2270                           ; Clear objects allocated to BANK7 (224 bytes)
  2271  006692  EE01  F300         	lfsr	0,__pbssBANK7
  2272  006696  0EE0               	movlw	224
  2273  006698                     clear_4:
  2274  006698  6AEE               	clrf	postinc0,c
  2275  00669A  06E8               	decf	wreg,f,c
  2276  00669C  E1FD               	bnz	clear_4
  2277                           
  2278                           ; Clear objects allocated to BANK6 (256 bytes)
  2279  00669E  EE01  F200         	lfsr	0,__pbssBANK6
  2280  0066A2  EE20 F100          	lfsr	2,256
  2281  0066A6                     clear_5:
  2282  0066A6  6AEE               	clrf	postinc0,c
  2283  0066A8  50DD               	movf	postdec2,w,c
  2284  0066AA  50D9               	movf	fsr2l,w,c
  2285  0066AC  E1FC               	bnz	clear_5
  2286  0066AE  50DA               	movf	fsr2h,w,c
  2287  0066B0  E1FA               	bnz	clear_5
  2288                           
  2289                           ; Clear objects allocated to BANK5 (248 bytes)
  2290  0066B2  EE01  F100         	lfsr	0,__pbssBANK5
  2291  0066B6  0EF8               	movlw	248
  2292  0066B8                     clear_6:
  2293  0066B8  6AEE               	clrf	postinc0,c
  2294  0066BA  06E8               	decf	wreg,f,c
  2295  0066BC  E1FD               	bnz	clear_6
  2296                           
  2297                           ; Clear objects allocated to BANK4 (244 bytes)
  2298  0066BE  EE01  F000         	lfsr	0,__pbssBANK4
  2299  0066C2  0EF4               	movlw	244
  2300  0066C4                     clear_7:
  2301  0066C4  6AEE               	clrf	postinc0,c
  2302  0066C6  06E8               	decf	wreg,f,c
  2303  0066C8  E1FD               	bnz	clear_7
  2304                           
  2305                           ; Clear objects allocated to BANK3 (201 bytes)
  2306  0066CA  EE00  F300         	lfsr	0,__pbssBANK3
  2307  0066CE  0EC9               	movlw	201
  2308  0066D0                     clear_8:
  2309  0066D0  6AEE               	clrf	postinc0,c
  2310  0066D2  06E8               	decf	wreg,f,c
  2311  0066D4  E1FD               	bnz	clear_8
  2312                           
  2313                           ; Clear objects allocated to BANK2 (230 bytes)
  2314  0066D6  EE00  F200         	lfsr	0,__pbssBANK2
  2315  0066DA  0EE6               	movlw	230
  2316  0066DC                     clear_9:
  2317  0066DC  6AEE               	clrf	postinc0,c
  2318  0066DE  06E8               	decf	wreg,f,c
  2319  0066E0  E1FD               	bnz	clear_9
  2320                           
  2321                           ; Clear objects allocated to BANK1 (37 bytes)
  2322  0066E2  EE00  F1D7         	lfsr	0,__pbssBANK1
  2323  0066E6  0E25               	movlw	37
  2324  0066E8                     clear_10:
  2325  0066E8  6AEE               	clrf	postinc0,c
  2326  0066EA  06E8               	decf	wreg,f,c
  2327  0066EC  E1FD               	bnz	clear_10
  2328                           
  2329                           ; Clear objects allocated to BANK0 (23 bytes)
  2330  0066EE  EE00  F0D1         	lfsr	0,__pbssBANK0
  2331  0066F2  0E17               	movlw	23
  2332  0066F4                     clear_11:
  2333  0066F4  6AEE               	clrf	postinc0,c
  2334  0066F6  06E8               	decf	wreg,f,c
  2335  0066F8  E1FD               	bnz	clear_11
  2336                           
  2337                           ;
  2338                           ; Setup IVTBASE
  2339                           ;
  2340  0066FA  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2341  0066FC  6ED5               	movwf	213,c
  2342  0066FE  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2343  006700  6ED6               	movwf	214,c
  2344  006702  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2345  006704  6ED7               	movwf	215,c
  2346  006706                     end_of_initialization:
  2347                           	callstack 0
  2348  006706                     __end_of__initialization:
  2349                           	callstack 0
  2350  006706  0100               	movlb	0
  2351  006708  EF0F  F05B         	goto	_main	;jump to C main() function
  2352                           
  2353                           	psect	bssBANK0
  2354  0000D1                     __pbssBANK0:
  2355                           	callstack 0
  2356  0000D1                     _timers:
  2357                           	callstack 0
  2358  0000D1                     	ds	2
  2359  0000D3                     _usRcvBufferPos:
  2360                           	callstack 0
  2361  0000D3                     	ds	2
  2362  0000D5                     _usSndBufferCount:
  2363                           	callstack 0
  2364  0000D5                     	ds	2
  2365  0000D7                     _eeprom_write_flags:
  2366                           	callstack 0
  2367  0000D7                     	ds	2
  2368  0000D9                     _eRcvState:
  2369                           	callstack 0
  2370  0000D9                     	ds	1
  2371  0000DA                     _uart1RxTail:
  2372                           	callstack 0
  2373  0000DA                     	ds	1
  2374  0000DB                     _uart1RxHead:
  2375                           	callstack 0
  2376  0000DB                     	ds	1
  2377  0000DC                     _TXPower:
  2378                           	callstack 0
  2379  0000DC                     	ds	1
  2380  0000DD                     _channel:
  2381                           	callstack 0
  2382  0000DD                     	ds	1
  2383  0000DE                     _current_sf:
  2384                           	callstack 0
  2385  0000DE                     	ds	1
  2386  0000DF                     _sinkAddr1:
  2387                           	callstack 0
  2388  0000DF                     	ds	1
  2389  0000E0                     _sinkAddr0:
  2390                           	callstack 0
  2391  0000E0                     	ds	1
  2392  0000E1                     _curent_parity:
  2393                           	callstack 0
  2394  0000E1                     	ds	1
  2395  0000E2                     _txTimeOut:
  2396                           	callstack 0
  2397  0000E2                     	ds	2
  2398  0000E4                     _cadTimeOut:
  2399                           	callstack 0
  2400  0000E4                     	ds	2
  2401  0000E6                     __cadBackoffTimer:
  2402                           	callstack 0
  2403  0000E6                     	ds	2
  2404                           
  2405                           	psect	dataBANK0
  2406  0000E8                     __pdataBANK0:
  2407                           	callstack 0
  2408  0000E8                     _RSSITarget:
  2409                           	callstack 0
  2410  0000E8                     	ds	1
  2411  0000E9                     _mb_rtu_addr:
  2412                           	callstack 0
  2413  0000E9                     	ds	1
  2414  0000EA                     _currentAddr1:
  2415                           	callstack 0
  2416  0000EA                     	ds	1
  2417  0000EB                     _currentAddr0:
  2418                           	callstack 0
  2419  0000EB                     	ds	1
  2420                           
  2421                           	psect	bssBANK1
  2422  0001D7                     __pbssBANK1:
  2423                           	callstack 0
  2424  0001D7                     _nwkDataReqQueue:
  2425                           	callstack 0
  2426  0001D7                     	ds	2
  2427  0001D9                     _halTimerIrqCount:
  2428                           	callstack 0
  2429  0001D9                     	ds	2
  2430  0001DB                     _pan_id:
  2431                           	callstack 0
  2432  0001DB                     	ds	2
  2433  0001DD                     eMBPoll@eException:
  2434                           	callstack 0
  2435  0001DD                     	ds	1
  2436  0001DE                     eMBPoll@ucFunctionCode:
  2437                           	callstack 0
  2438  0001DE                     	ds	1
  2439  0001DF                     _ucMBAddress:
  2440                           	callstack 0
  2441  0001DF                     	ds	1
  2442  0001E0                     _eSndState:
  2443                           	callstack 0
  2444  0001E0                     	ds	1
  2445  0001E1                     _uart1RxCount:
  2446                           	callstack 0
  2447  0001E1                     	ds	1
  2448  0001E2                     _uart1TxTail:
  2449                           	callstack 0
  2450  0001E2                     	ds	1
  2451  0001E3                     _uart1TxHead:
  2452                           	callstack 0
  2453  0001E3                     	ds	1
  2454  0001E4                     reset_handler@reset_state_var:
  2455                           	callstack 0
  2456  0001E4                     	ds	1
  2457  0001E5                     _need_reset:
  2458                           	callstack 0
  2459  0001E5                     	ds	1
  2460  0001E6                     _rx_ctl_mb_regs_upadte:
  2461                           	callstack 0
  2462  0001E6                     	ds	1
  2463  0001E7                     _tx_ctl_mb_regs_upadte:
  2464                           	callstack 0
  2465  0001E7                     	ds	1
  2466  0001E8                     _read_write_mb_regs_update:
  2467                           	callstack 0
  2468  0001E8                     	ds	1
  2469  0001E9                     _write_only_mb_regs_update:
  2470                           	callstack 0
  2471  0001E9                     	ds	1
  2472  0001EA                     _phyTxSize:
  2473                           	callstack 0
  2474  0001EA                     	ds	1
  2475  0001EB                     _packetRSSI:
  2476                           	callstack 0
  2477  0001EB                     	ds	1
  2478  0001EC                     _need_radio_reset:
  2479                           	callstack 0
  2480  0001EC                     	ds	1
  2481  0001ED                     _cadCounter:
  2482                           	callstack 0
  2483  0001ED                     	ds	1
  2484  0001EE                     _cadDone:
  2485                           	callstack 0
  2486  0001EE                     	ds	1
  2487  0001EF                     _uartmode:
  2488                           	callstack 0
  2489  0001EF                     	ds	1
  2490  0001F0                     _msgIDCounter:
  2491                           	callstack 0
  2492  0001F0                     	ds	1
  2493  0001F1                     _uart_parity:
  2494                           	callstack 0
  2495  0001F1                     	ds	1
  2496  0001F2                     _uart_baud_rate:
  2497                           	callstack 0
  2498  0001F2                     	ds	1
  2499  0001F3                     eMBPoll@usLength:
  2500                           	callstack 0
  2501  0001F3                     	ds	2
  2502  0001F5                     eMBPoll@ucMBFrame:
  2503                           	callstack 0
  2504  0001F5                     	ds	2
  2505  0001F7                     _blen_sample_timer:
  2506                           	callstack 0
  2507  0001F7                     	ds	2
  2508  0001F9                     _ledtimer:
  2509                           	callstack 0
  2510  0001F9                     	ds	2
  2511  0001FB                     eMBPoll@ucRcvAddress:
  2512                           	callstack 0
  2513  0001FB                     	ds	1
  2514                           
  2515                           	psect	dataBANK1
  2516  0001FC                     __pdataBANK1:
  2517                           	callstack 0
  2518  0001FC                     _eMBState:
  2519                           	callstack 0
  2520  0001FC                     	ds	1
  2521  0001FD                     _radio_state_var:
  2522                           	callstack 0
  2523  0001FD                     	ds	1
  2524  0001FE                     _rssi_debug:
  2525                           	callstack 0
  2526  0001FE                     	ds	1
  2527  0001FF                     _currentNetID:
  2528                           	callstack 0
  2529  0001FF                     	ds	1
  2530                           
  2531                           	psect	bssBANK2
  2532  000200                     __pbssBANK2:
  2533                           	callstack 0
  2534  000200                     _nwkIb:
  2535                           	callstack 0
  2536  000200                     	ds	40
  2537  000228                     _distanceData:
  2538                           	callstack 0
  2539  000228                     	ds	3
  2540  00022B                     _current_baud_rate:
  2541                           	callstack 0
  2542  00022B                     	ds	3
  2543  00022E                     _pxMBFrameCBTransmitFSMCur:
  2544                           	callstack 0
  2545  00022E                     	ds	2
  2546  000230                     _pxMBFrameCBReceiveFSMCur:
  2547                           	callstack 0
  2548  000230                     	ds	2
  2549  000232                     _pvMBFrameCloseCur:
  2550                           	callstack 0
  2551  000232                     	ds	2
  2552  000234                     _peMBFrameReceiveCur:
  2553                           	callstack 0
  2554  000234                     	ds	2
  2555  000236                     _pvMBFrameStopCur:
  2556                           	callstack 0
  2557  000236                     	ds	2
  2558  000238                     _pvMBFrameStartCur:
  2559                           	callstack 0
  2560  000238                     	ds	2
  2561  00023A                     _peMBFrameSendCur:
  2562                           	callstack 0
  2563  00023A                     	ds	2
  2564  00023C                     _max_loop_time:
  2565                           	callstack 0
  2566  00023C                     	ds	2
  2567  00023E                     _nwkTxPhyActiveFrame:
  2568                           	callstack 0
  2569  00023E                     	ds	2
  2570  000240                     _pucSndBufferCur:
  2571                           	callstack 0
  2572  000240                     	ds	2
  2573  000242                     _timerval:
  2574                           	callstack 0
  2575  000242                     	ds	2
  2576  000244                     _pxMBPortCBTimerExpired:
  2577                           	callstack 0
  2578  000244                     	ds	2
  2579  000246                     _pxMBFrameCBByteReceived:
  2580                           	callstack 0
  2581  000246                     	ds	2
  2582  000248                     _pxMBFrameCBTransmitterEmpty:
  2583                           	callstack 0
  2584  000248                     	ds	2
  2585  00024A                     _timer5ReloadVal:
  2586                           	callstack 0
  2587  00024A                     	ds	2
  2588  00024C                     _ledTimerVar:
  2589                           	callstack 0
  2590  00024C                     	ds	2
  2591  00024E                     _reset_timer:
  2592                           	callstack 0
  2593  00024E                     	ds	2
  2594  000250                     _mcast_id:
  2595                           	callstack 0
  2596  000250                     	ds	2
  2597  000252                     _eMBCurrentMode:
  2598                           	callstack 0
  2599  000252                     	ds	1
  2600  000253                     	ds	1
  2601  000254                     _nwkRxAckControl:
  2602                           	callstack 0
  2603  000254                     	ds	1
  2604  000255                     _nwk_RoutingEnabled:
  2605                           	callstack 0
  2606  000255                     	ds	1
  2607  000256                     _xEventInQueue:
  2608                           	callstack 0
  2609  000256                     	ds	1
  2610  000257                     _eQueuedEvent:
  2611                           	callstack 0
  2612  000257                     	ds	1
  2613  000258                     _uart1RxLastError:
  2614                           	callstack 0
  2615  000258                     	ds	1
  2616  000259                     _sensorStateVar:
  2617                           	callstack 0
  2618  000259                     	ds	1
  2619  00025A                     _distanceDataCounter:
  2620                           	callstack 0
  2621  00025A                     	ds	1
  2622  00025B                     _uart_default_state_var:
  2623                           	callstack 0
  2624  00025B                     	ds	1
  2625  00025C                     _ledStateVar:
  2626                           	callstack 0
  2627  00025C                     	ds	1
  2628  00025D                     _dwellTimer:
  2629                           	callstack 0
  2630  00025D                     	ds	1
  2631  00025E                     _fhssdebug:
  2632                           	callstack 0
  2633  00025E                     	ds	1
  2634  00025F                     _SNR:
  2635                           	callstack 0
  2636  00025F                     	ds	1
  2637  000260                     _RSSI:
  2638                           	callstack 0
  2639  000260                     	ds	1
  2640  000261                     __packetIndex:
  2641                           	callstack 0
  2642  000261                     	ds	1
  2643  000262                     __implicitHeaderMode:
  2644                           	callstack 0
  2645  000262                     	ds	1
  2646  000263                     _user_application_state:
  2647                           	callstack 0
  2648  000263                     	ds	1
  2649  000264                     _REGION_CODE:
  2650                           	callstack 0
  2651  000264                     	ds	1
  2652  000265                     _MB_RX_REGS:
  2653                           	callstack 0
  2654  000265                     	ds	1
  2655  000266                     _MB_TX_REGS:
  2656                           	callstack 0
  2657  000266                     	ds	1
  2658  000267                     _MB_RW_REGS:
  2659                           	callstack 0
  2660  000267                     	ds	1
  2661  000268                     _MB_WO_REGS:
  2662                           	callstack 0
  2663  000268                     	ds	1
  2664  000269                     _MB_RO_REGS:
  2665                           	callstack 0
  2666  000269                     	ds	1
  2667  00026A                     _MB_TX_TYPE_ENCODING:
  2668                           	callstack 0
  2669  00026A                     	ds	1
  2670  00026B                     _atStateVar:
  2671                           	callstack 0
  2672  00026B                     	ds	1
  2673  00026C                     _commandByteCounter:
  2674                           	callstack 0
  2675  00026C                     	ds	1
  2676  00026D                     _currentMode:
  2677                           	callstack 0
  2678  00026D                     	ds	1
  2679  00026E                     _currentMsgID:
  2680                           	callstack 0
  2681  00026E                     	ds	1
  2682  00026F                     _eeprom_write_flags_enum:
  2683                           	callstack 0
  2684  00026F                     	ds	1
  2685  000270                     _read_write_mb_regs:
  2686                           	callstack 0
  2687  000270                     	ds	66
  2688  0002B2                     _nwkTxAckWaitTimer:
  2689                           	callstack 0
  2690  0002B2                     	ds	13
  2691  0002BF                     _nwkRxDuplicateRejectionTimer:
  2692                           	callstack 0
  2693  0002BF                     	ds	13
  2694  0002CC                     _ledtasksbuf:
  2695                           	callstack 0
  2696  0002CC                     	ds	10
  2697  0002D6                     _rx_buffer_queue_context:
  2698                           	callstack 0
  2699  0002D6                     	ds	10
  2700  0002E0                     _crcObj:
  2701                           	callstack 0
  2702  0002E0                     	ds	3
  2703  0002E3                     _rx_buffer_queue:
  2704                           	callstack 0
  2705  0002E3                     	ds	3
  2706                           
  2707                           	psect	dataBANK2
  2708  0002F5                     __pdataBANK2:
  2709                           	callstack 0
  2710  0002F5                     _randx:
  2711                           	callstack 0
  2712  0002F5                     	ds	4
  2713  0002F9                     _min_loop_time:
  2714                           	callstack 0
  2715  0002F9                     	ds	2
  2716  0002FB                     _test_timer:
  2717                           	callstack 0
  2718  0002FB                     	ds	2
  2719  0002FD                     _ATTimeoutTimer:
  2720                           	callstack 0
  2721  0002FD                     	ds	2
  2722                           
  2723                           	psect	bssBANK3
  2724  000300                     __pbssBANK3:
  2725                           	callstack 0
  2726  000300                     _DstVarName0:
  2727                           	callstack 0
  2728  000300                     	ds	20
  2729  000314                     _SrcVarName0:
  2730                           	callstack 0
  2731  000314                     	ds	20
  2732  000328                     _symbolDuration:
  2733                           	callstack 0
  2734  000328                     	ds	4
  2735  00032C                     _write_only_mb_regs:
  2736                           	callstack 0
  2737  00032C                     	ds	36
  2738  000350                     _read_only_mb_regs:
  2739                           	callstack 0
  2740  000350                     	ds	34
  2741  000372                     _nwkGroups:
  2742                           	callstack 0
  2743  000372                     	ds	20
  2744  000386                     _net_key:
  2745                           	callstack 0
  2746  000386                     	ds	16
  2747  000396                     _aes_key:
  2748                           	callstack 0
  2749  000396                     	ds	16
  2750  0003A6                     _nwkTxDelayTimer:
  2751                           	callstack 0
  2752  0003A6                     	ds	13
  2753  0003B3                     _EUIDbyte:
  2754                           	callstack 0
  2755  0003B3                     	ds	12
  2756  0003BF                     _msg_ack_queue_context:
  2757                           	callstack 0
  2758  0003BF                     	ds	10
  2759                           
  2760                           	psect	dataBANK3
  2761  0003C9                     __pdataBANK3:
  2762                           	callstack 0
  2763  0003C9                     _xFuncHandlers:
  2764                           	callstack 0
  2765  0003C9                     	ds	18
  2766  0003DB                     _syncList:
  2767                           	callstack 0
  2768  0003DB                     	ds	10
  2769                           
  2770                           	psect	bssBANK4
  2771  000400                     __pbssBANK4:
  2772                           	callstack 0
  2773  000400                     _uart1RxStatusBuffer:
  2774                           	callstack 0
  2775  000400                     	ds	64
  2776  000440                     _fhssReg:
  2777                           	callstack 0
  2778  000440                     	ds	30
  2779  00045E                     _tx_ctl_mb_regs:
  2780                           	callstack 0
  2781  00045E                     	ds	118
  2782  0004D4                     _msg_ack_queue:
  2783                           	callstack 0
  2784  0004D4                     	ds	32
  2785                           
  2786                           	psect	bssBANK5
  2787  000500                     __pbssBANK5:
  2788                           	callstack 0
  2789  000500                     _uart1RxBuffer:
  2790                           	callstack 0
  2791  000500                     	ds	64
  2792  000540                     _uart1TxBuffer:
  2793                           	callstack 0
  2794  000540                     	ds	64
  2795  000580                     _rx_ctl_mb_regs:
  2796                           	callstack 0
  2797  000580                     	ds	120
  2798                           
  2799                           	psect	bssBANK6
  2800  000600                     __pbssBANK6:
  2801                           	callstack 0
  2802  000600                     _ucRTUBuf:
  2803                           	callstack 0
  2804  000600                     	ds	256
  2805                           
  2806                           	psect	bssBANK7
  2807  000700                     __pbssBANK7:
  2808                           	callstack 0
  2809  000700                     _phyRxBuffer:
  2810                           	callstack 0
  2811  000700                     	ds	128
  2812  000780                     _ledqueue:
  2813                           	callstack 0
  2814  000780                     	ds	96
  2815                           
  2816                           	psect	bssBANK8
  2817  000800                     __pbssBANK8:
  2818                           	callstack 0
  2819  000800                     _nwkRouteTable:
  2820                           	callstack 0
  2821  000800                     	ds	224
  2822                           
  2823                           	psect	bssBANK9
  2824  000900                     __pbssBANK9:
  2825                           	callstack 0
  2826  000900                     _phyTxBuffer:
  2827                           	callstack 0
  2828  000900                     	ds	128
  2829                           
  2830                           	psect	bssBANK10
  2831  000A00                     __pbssBANK10:
  2832                           	callstack 0
  2833  000A00                     _nwkRxDuplicateRejectionTable:
  2834                           	callstack 0
  2835  000A00                     	ds	160
  2836                           
  2837                           	psect	bssBIGRAM
  2838  000AA0                     __pbssBIGRAM:
  2839                           	callstack 0
  2840  000AA0                     _nwkFrameFrames:
  2841                           	callstack 0
  2842  000AA0                     	ds	690
  2843  000D52                     _rx_buffer:
  2844                           	callstack 0
  2845  000D52                     	ds	369
  2846  000EC3                     _tx_buffer:
  2847                           	callstack 0
  2848  000EC3                     	ds	264
  2849                           
  2850                           	psect	cstackBANK3
  2851  0003E5                     __pcstackBANK3:
  2852                           	callstack 0
  2853  0003E5                     _nwkRxIndicateFrame$7032:
  2854                           	callstack 0
  2855                           
  2856                           ; 1 bytes @ 0x0
  2857  0003E5                     	ds	1
  2858  0003E6                     _nwkRxIndicateFrame$7033:
  2859                           	callstack 0
  2860                           
  2861                           ; 1 bytes @ 0x1
  2862  0003E6                     	ds	1
  2863  0003E7                     _nwkRxIndicateFrame$7034:
  2864                           	callstack 0
  2865                           
  2866                           ; 1 bytes @ 0x2
  2867  0003E7                     	ds	1
  2868  0003E8                     _nwkRxIndicateFrame$7035:
  2869                           	callstack 0
  2870                           
  2871                           ; 1 bytes @ 0x3
  2872  0003E8                     	ds	1
  2873  0003E9                     _nwkRxIndicateFrame$7036:
  2874                           	callstack 0
  2875                           
  2876                           ; 1 bytes @ 0x4
  2877  0003E9                     	ds	1
  2878  0003EA                     _nwkRxIndicateFrame$7037:
  2879                           	callstack 0
  2880                           
  2881                           ; 1 bytes @ 0x5
  2882  0003EA                     	ds	1
  2883  0003EB                     nwkRxIndicateFrame@header:
  2884                           	callstack 0
  2885                           
  2886                           ; 2 bytes @ 0x6
  2887  0003EB                     	ds	2
  2888  0003ED                     nwkRxIndicateFrame@ind:
  2889                           	callstack 0
  2890                           
  2891                           ; 12 bytes @ 0x8
  2892  0003ED                     	ds	12
  2893                           
  2894                           	psect	cstackBANK1
  2895  000100                     __pcstackBANK1:
  2896                           	callstack 0
  2897  000100                     app_aes_encrypt@iv:
  2898                           	callstack 0
  2899  000100                     app_aes_decrypt@iv:
  2900                           	callstack 0
  2901                           
  2902                           ; 16 bytes @ 0x0
  2903  000100                     	ds	16
  2904  000110                     app_aes_encrypt@random:
  2905                           	callstack 0
  2906  000110                     app_aes_decrypt@crc16_cal:
  2907                           	callstack 0
  2908                           
  2909                           ; 2 bytes @ 0x10
  2910  000110                     	ds	2
  2911  000112                     app_aes_encrypt@apphdr:
  2912                           	callstack 0
  2913  000112                     app_aes_decrypt@random:
  2914                           	callstack 0
  2915                           
  2916                           ; 2 bytes @ 0x12
  2917  000112                     	ds	2
  2918  000114                     app_aes_encrypt@i:
  2919                           	callstack 0
  2920  000114                     app_aes_decrypt@apphdr:
  2921                           	callstack 0
  2922                           
  2923                           ; 2 bytes @ 0x14
  2924  000114                     	ds	1
  2925  000115                     app_aes_encrypt@ctx:
  2926                           	callstack 0
  2927                           
  2928                           ; 192 bytes @ 0x15
  2929  000115                     	ds	1
  2930  000116                     app_aes_decrypt@i:
  2931                           	callstack 0
  2932                           
  2933                           ; 1 bytes @ 0x16
  2934  000116                     	ds	1
  2935  000117                     app_aes_decrypt@ctx:
  2936                           	callstack 0
  2937                           
  2938                           ; 192 bytes @ 0x17
  2939  000117                     	ds	192
  2940                           
  2941                           	psect	cstackBANK0
  2942  000060                     __pcstackBANK0:
  2943                           	callstack 0
  2944  000060                     ??_UART1_rx_vect_isr:
  2945  000060                     
  2946                           ; 1 bytes @ 0x0
  2947  000060                     	ds	3
  2948  000063                     ??_xMBRTUTimerT35Expired:
  2949                           
  2950                           ; 1 bytes @ 0x3
  2951  000063                     	ds	2
  2952  000065                     xMBRTUTimerT35Expired@xNeedPoll:
  2953                           	callstack 0
  2954                           
  2955                           ; 1 bytes @ 0x5
  2956  000065                     	ds	1
  2957  000066                     ??_TMR3_ISR:
  2958                           
  2959                           ; 1 bytes @ 0x6
  2960  000066                     	ds	10
  2961  000070                     ??_TMR0_ISR:
  2962                           
  2963                           ; 1 bytes @ 0x10
  2964  000070                     	ds	1
  2965  000071                     ??_set_eeprom_sync:
  2966  000071                     ??_CRC_Initialize:
  2967  000071                     ??_prveMBError2Exception:
  2968  000071                     ??_nwkRouteNormalizeRanks:
  2969  000071                     ??_isspace:
  2970  000071                     ??_isdigit:
  2971  000071                     ??_isupper:
  2972  000071                     ??_reset_handler:
  2973  000071                     ??_needed_packet_length:
  2974  000071                     ??_set_parity:
  2975  000071                     ??_set_uart_baud:
  2976  000071                     ??_nwkTxConvertPhyStatus:
  2977  000071                     ?_memset:
  2978                           	callstack 0
  2979  000071                     ?_CircularBufferSize:
  2980                           	callstack 0
  2981  000071                     ?_strlen:
  2982                           	callstack 0
  2983  000071                     ?_get_timer0base:
  2984                           	callstack 0
  2985  000071                     ?_nwkFrameNext:
  2986                           	callstack 0
  2987  000071                     ?_NWK_RouteFindEntry:
  2988                           	callstack 0
  2989  000071                     ?_NWK_RouteNewEntry:
  2990                           	callstack 0
  2991  000071                     ?_strchr:
  2992                           	callstack 0
  2993  000071                     ?_CRC_ReverseValue:
  2994                           	callstack 0
  2995  000071                     ?_TMR5_ReadTimer:
  2996                           	callstack 0
  2997  000071                     ?_usMBCRC16:
  2998                           	callstack 0
  2999  000071                     ?___wmul:
  3000                           	callstack 0
  3001  000071                     ?___lmul:
  3002                           	callstack 0
  3003  000071                     ?___llmod:
  3004                           	callstack 0
  3005  000071                     ?___xxtofl:
  3006                           	callstack 0
  3007  000071                     xtime@x:
  3008                           	callstack 0
  3009  000071                     SPI1_ExchangeByte@data:
  3010                           	callstack 0
  3011  000071                     INTERRUPT_Initialize@state:
  3012                           	callstack 0
  3013  000071                     CRC_8BitDataWrite@data:
  3014                           	callstack 0
  3015  000071                     vMBPortSerialEnable@xTxEnable:
  3016                           	callstack 0
  3017  000071                     xMBPortSerialPutByte@ucByte:
  3018                           	callstack 0
  3019  000071                     nwkFrameInit@i:
  3020                           	callstack 0
  3021  000071                     nwkGroupInit@i:
  3022                           	callstack 0
  3023  000071                     nwkRouteInit@i:
  3024                           	callstack 0
  3025  000071                     nwkEnableRouting@enable:
  3026                           	callstack 0
  3027  000071                     PHY_Set_Packet_Rssi_Threshold@rssi:
  3028                           	callstack 0
  3029  000071                     get_rssi@rssi_reg:
  3030                           	callstack 0
  3031  000071                     toupper@c:
  3032                           	callstack 0
  3033  000071                     KeyExpansion@RoundKey:
  3034                           	callstack 0
  3035  000071                     AddRoundKey@state:
  3036                           	callstack 0
  3037  000071                     SubBytes@state:
  3038                           	callstack 0
  3039  000071                     ShiftRows@state:
  3040                           	callstack 0
  3041  000071                     InvSubBytes@state:
  3042                           	callstack 0
  3043  000071                     InvShiftRows@state:
  3044                           	callstack 0
  3045  000071                     XorWithIv@buf:
  3046                           	callstack 0
  3047  000071                     get_free_tx_buffer@buf_id:
  3048                           	callstack 0
  3049  000071                     get_free_rx_buffer@buf_id:
  3050                           	callstack 0
  3051  000071                     keycmp@key:
  3052                           	callstack 0
  3053  000071                     compute_option@tx_ctl:
  3054                           	callstack 0
  3055  000071                     rw_mb_regs@tempptr:
  3056                           	callstack 0
  3057  000071                     CircularBufferInit@ctx:
  3058                           	callstack 0
  3059  000071                     CircularBufferSize@ctx:
  3060                           	callstack 0
  3061  000071                     CircularBufferEmpty@ctx:
  3062                           	callstack 0
  3063  000071                     get_timer0base@timer:
  3064                           	callstack 0
  3065  000071                     set_timer0base@timer:
  3066                           	callstack 0
  3067  000071                     TMR0_SetInterruptHandler@InterruptHandler:
  3068                           	callstack 0
  3069  000071                     DATAEE_WriteByte@bAdd:
  3070                           	callstack 0
  3071  000071                     DATAEE_ReadByte@bAdd:
  3072                           	callstack 0
  3073  000071                     UART1_SetFramingErrorHandler@interruptHandler:
  3074                           	callstack 0
  3075  000071                     UART1_SetOverrunErrorHandler@interruptHandler:
  3076                           	callstack 0
  3077  000071                     UART1_SetErrorHandler@interruptHandler:
  3078                           	callstack 0
  3079  000071                     UART1_SetRxInterruptHandler@InterruptHandler:
  3080                           	callstack 0
  3081  000071                     UART1_SetTxInterruptHandler@InterruptHandler:
  3082                           	callstack 0
  3083  000071                     CRC_ReverseValue@crc:
  3084                           	callstack 0
  3085  000071                     TMR3_SetInterruptHandler@InterruptHandler:
  3086                           	callstack 0
  3087  000071                     TMR5_WriteTimer@timerVal:
  3088                           	callstack 0
  3089  000071                     xMBPortEventGet@eEvent:
  3090                           	callstack 0
  3091  000071                     xMBPortSerialGetByte@pucByte:
  3092                           	callstack 0
  3093  000071                     vMBPortTimersDelay@usTimeOutMS:
  3094                           	callstack 0
  3095  000071                     usMBCRC16@pucFrame:
  3096                           	callstack 0
  3097  000071                     NWK_OpenEndpoint@handler:
  3098                           	callstack 0
  3099  000071                     NWK_DataReq@req:
  3100                           	callstack 0
  3101  000071                     nwkFrameFree@frame:
  3102                           	callstack 0
  3103  000071                     nwkFrameNext@frame:
  3104                           	callstack 0
  3105  000071                     nwkFrameCommandInit@frame:
  3106                           	callstack 0
  3107  000071                     nwkFramePayloadSize@frame:
  3108                           	callstack 0
  3109  000071                     NWK_GroupIsMember@group:
  3110                           	callstack 0
  3111  000071                     nwkGroupSwitch@from:
  3112                           	callstack 0
  3113  000071                     NWK_RouteFindEntry@dst:
  3114                           	callstack 0
  3115  000071                     NWK_RouteFreeEntry@entry:
  3116                           	callstack 0
  3117  000071                     nwkTxConfirm@frame:
  3118                           	callstack 0
  3119  000071                     PHY_SetPanId@panId:
  3120                           	callstack 0
  3121  000071                     PHY_SetShortAddr@addr:
  3122                           	callstack 0
  3123  000071                     PHY_Get_Packet_Rssi_Threshold_Limits@max:
  3124                           	callstack 0
  3125  000071                     SYS_TimerStarted@timer:
  3126                           	callstack 0
  3127  000071                     placeTimer@timer:
  3128                           	callstack 0
  3129  000071                     get_loop_time@min:
  3130                           	callstack 0
  3131  000071                     ___wmul@multiplier:
  3132                           	callstack 0
  3133  000071                     memset@p1:
  3134                           	callstack 0
  3135  000071                     srand@x:
  3136                           	callstack 0
  3137  000071                     strchr@ptr:
  3138                           	callstack 0
  3139  000071                     strlen@s:
  3140                           	callstack 0
  3141  000071                     DIA_ReadByte@flashAddr:
  3142                           	callstack 0
  3143  000071                     xMBPortSerialInit@ulBaudRate:
  3144                           	callstack 0
  3145  000071                     ___lmul@multiplier:
  3146                           	callstack 0
  3147  000071                     ___llmod@dividend:
  3148                           	callstack 0
  3149  000071                     ___xxtofl@val:
  3150                           	callstack 0
  3151                           
  3152                           ; 4 bytes @ 0x11
  3153  000071                     	ds	1
  3154  000072                     needed_packet_length@i:
  3155                           	callstack 0
  3156  000072                     vMBPortSerialEnable@xRxEnable:
  3157                           	callstack 0
  3158  000072                     nwkRouteNormalizeRanks@i:
  3159                           	callstack 0
  3160  000072                     _isdigit$9729:
  3161                           	callstack 0
  3162  000072                     _isspace$9732:
  3163                           	callstack 0
  3164  000072                     _isupper$9735:
  3165                           	callstack 0
  3166  000072                     MixColumns@state:
  3167                           	callstack 0
  3168  000072                     InvMixColumns@state:
  3169                           	callstack 0
  3170  000072                     SPI1_WriteBlock@block:
  3171                           	callstack 0
  3172  000072                     SPI1_ReadBlock@block:
  3173                           	callstack 0
  3174  000072                     CRC_Initialize@poly:
  3175                           	callstack 0
  3176  000072                     get_rssi@temp_rssi:
  3177                           	callstack 0
  3178                           
  3179                           ; 2 bytes @ 0x12
  3180  000072                     	ds	1
  3181  000073                     ??_get_free_rx_buffer:
  3182  000073                     ??_CircularBufferSize:
  3183  000073                     ??_TMR3_Initialize:
  3184  000073                     ??_nwkFrameNext:
  3185  000073                     ??_SubBytes:
  3186  000073                     ??_InvSubBytes:
  3187  000073                     ??_get_free_tx_buffer:
  3188  000073                     ??_compute_option:
  3189  000073                     ??_TMR0_Initialize:
  3190  000073                     ??_CRC_ReverseValue:
  3191  000073                     ??_TMR5_ReadTimer:
  3192  000073                     ??_xMBRTUReceiveFSM:
  3193  000073                     ??_xMBRTUTransmitFSM:
  3194  000073                     ??_nwkFramePayloadSize:
  3195  000073                     ShiftRows@temp:
  3196                           	callstack 0
  3197  000073                     InvShiftRows@temp:
  3198                           	callstack 0
  3199  000073                     needed_packet_length@rc:
  3200                           	callstack 0
  3201  000073                     set_parity@parity:
  3202                           	callstack 0
  3203  000073                     set_uart_baud@i:
  3204                           	callstack 0
  3205  000073                     set_eeprom_sync@flag_type:
  3206                           	callstack 0
  3207  000073                     DATAEE_WriteByte@bData:
  3208                           	callstack 0
  3209  000073                     prveMBError2Exception@eErrorCode:
  3210                           	callstack 0
  3211  000073                     xMBPortEventGet@xEventHappened:
  3212                           	callstack 0
  3213  000073                     NWK_OpenEndpoint@id:
  3214                           	callstack 0
  3215  000073                     NWK_RouteFindEntry@multicast:
  3216                           	callstack 0
  3217  000073                     nwkTxConfirm@status:
  3218                           	callstack 0
  3219  000073                     nwkTxConvertPhyStatus@status:
  3220                           	callstack 0
  3221  000073                     eMBEnable@eStatus:
  3222                           	callstack 0
  3223  000073                     eMBDisable@eStatus:
  3224                           	callstack 0
  3225  000073                     isdigit@c:
  3226                           	callstack 0
  3227  000073                     isspace@c:
  3228                           	callstack 0
  3229  000073                     isupper@c:
  3230                           	callstack 0
  3231  000073                     KeyExpansion@Key:
  3232                           	callstack 0
  3233  000073                     AddRoundKey@RoundKey:
  3234                           	callstack 0
  3235  000073                     XorWithIv@Iv:
  3236                           	callstack 0
  3237  000073                     keycmp@new:
  3238                           	callstack 0
  3239  000073                     rw_mb_regs@pucRegBuffer:
  3240                           	callstack 0
  3241  000073                     CircularBufferInit@buf:
  3242                           	callstack 0
  3243  000073                     get_timer0base@tval:
  3244                           	callstack 0
  3245  000073                     set_timer0base@tval:
  3246                           	callstack 0
  3247  000073                     usMBCRC16@usLen:
  3248                           	callstack 0
  3249  000073                     NWK_SetAddr@addr:
  3250                           	callstack 0
  3251  000073                     NWK_SetPanId@panId:
  3252                           	callstack 0
  3253  000073                     nwkDataReqTxConf@frame:
  3254                           	callstack 0
  3255  000073                     nwkGroupSwitch@to:
  3256                           	callstack 0
  3257  000073                     PHY_Get_Packet_Rssi_Threshold_Limits@min:
  3258                           	callstack 0
  3259  000073                     SYS_TimerStarted@t:
  3260                           	callstack 0
  3261  000073                     get_loop_time@max:
  3262                           	callstack 0
  3263  000073                     ___wmul@multiplicand:
  3264                           	callstack 0
  3265  000073                     memset@c:
  3266                           	callstack 0
  3267  000073                     strchr@chr:
  3268                           	callstack 0
  3269                           
  3270                           ; 2 bytes @ 0x13
  3271  000073                     	ds	1
  3272  000074                     ??_isalpha:
  3273  000074                     ??_MixColumns:
  3274  000074                     ??_InvMixColumns:
  3275  000074                     needed_packet_length@data_len:
  3276                           	callstack 0
  3277  000074                     set_eeprom_sync@return_parameter:
  3278                           	callstack 0
  3279  000074                     DATAEE_WriteByte@GIEBitValue:
  3280                           	callstack 0
  3281  000074                     prveMBError2Exception@eStatus:
  3282                           	callstack 0
  3283  000074                     nwkRxInit@i:
  3284                           	callstack 0
  3285  000074                     PHY_DataConf@status:
  3286                           	callstack 0
  3287  000074                     SPI1_WriteBlock@blockSize:
  3288                           	callstack 0
  3289  000074                     SPI1_ReadBlock@blockSize:
  3290                           	callstack 0
  3291  000074                     CRC_Initialize@seed:
  3292                           	callstack 0
  3293  000074                     CRC_ReverseValue@reverse:
  3294                           	callstack 0
  3295  000074                     strlen@cp:
  3296                           	callstack 0
  3297                           
  3298                           ; 3 bytes @ 0x14
  3299  000074                     	ds	1
  3300  000075                     ??_KeyExpansion:
  3301  000075                     ??_AddRoundKey:
  3302  000075                     ??_XorWithIv:
  3303  000075                     ??_loadMACAddr:
  3304  000075                     ??_usMBCRC16:
  3305  000075                     ??___xxtofl:
  3306  000075                     keycmp@size:
  3307                           	callstack 0
  3308  000075                     compute_option@options:
  3309                           	callstack 0
  3310  000075                     xMBPortSerialInit@ucDataBits:
  3311                           	callstack 0
  3312  000075                     xMBRTUReceiveFSM@xTaskNeedSwitch:
  3313                           	callstack 0
  3314  000075                     xMBRTUTransmitFSM@xNeedPoll:
  3315                           	callstack 0
  3316  000075                     NWK_Init@i:
  3317                           	callstack 0
  3318  000075                     NWK_GroupIsMember@i:
  3319                           	callstack 0
  3320  000075                     NWK_RouteNewEntry@i:
  3321                           	callstack 0
  3322  000075                     _isalpha$9726:
  3323                           	callstack 0
  3324  000075                     load_on_demand_mb_regs@min:
  3325                           	callstack 0
  3326  000075                     rw_mb_regs@usNRegs:
  3327                           	callstack 0
  3328  000075                     DATAEE_ReadByte_Platform@addr:
  3329                           	callstack 0
  3330  000075                     DATAEE_WriteByte_Platform@addr:
  3331                           	callstack 0
  3332  000075                     CircularBufferInit@buf_size:
  3333                           	callstack 0
  3334  000075                     TMR5_ReadTimer@readVal:
  3335                           	callstack 0
  3336  000075                     ___wmul@product:
  3337                           	callstack 0
  3338  000075                     memset@n:
  3339                           	callstack 0
  3340  000075                     ___lmul@multiplicand:
  3341                           	callstack 0
  3342  000075                     ___llmod@divisor:
  3343                           	callstack 0
  3344                           
  3345                           ; 4 bytes @ 0x15
  3346  000075                     	ds	1
  3347  000076                     ??_keycmp:
  3348  000076                     XorWithIv@i:
  3349                           	callstack 0
  3350  000076                     xMBPortSerialInit@eParity:
  3351                           	callstack 0
  3352  000076                     xMBRTUReceiveFSM@ucByte:
  3353                           	callstack 0
  3354  000076                     NWK_RouteFindEntry@i:
  3355                           	callstack 0
  3356  000076                     isalpha@c:
  3357                           	callstack 0
  3358  000076                     check_multicast_rx@ind:
  3359                           	callstack 0
  3360  000076                     SPI1_WriteBlock@data:
  3361                           	callstack 0
  3362  000076                     SPI1_ReadBlock@data:
  3363                           	callstack 0
  3364  000076                     CRC_ReverseValue@mask:
  3365                           	callstack 0
  3366  000076                     NWK_RouteNewEntry@iter:
  3367                           	callstack 0
  3368                           
  3369                           ; 2 bytes @ 0x16
  3370  000076                     	ds	1
  3371  000077                     ??_rw_mb_regs:
  3372  000077                     ?_memcpy:
  3373                           	callstack 0
  3374  000077                     ?_strncmp:
  3375                           	callstack 0
  3376  000077                     ?_NWK_RouteNextHop:
  3377                           	callstack 0
  3378  000077                     DATAEE_ReadByte_Platform@return_copy:
  3379                           	callstack 0
  3380  000077                     DATAEE_WriteByte_Platform@data:
  3381                           	callstack 0
  3382  000077                     TMR5_ReadTimer@readValHigh:
  3383                           	callstack 0
  3384  000077                     nwkGroupSwitch@i:
  3385                           	callstack 0
  3386  000077                     load_on_demand_mb_regs@max:
  3387                           	callstack 0
  3388  000077                     CircularBufferInit@element_size:
  3389                           	callstack 0
  3390  000077                     xMBPortTimersInit@usTim1Timerout50us:
  3391                           	callstack 0
  3392  000077                     usMBCRC16@iIndex:
  3393                           	callstack 0
  3394  000077                     nwkDataReqTxConf@req:
  3395                           	callstack 0
  3396  000077                     NWK_RouteNextHop@dst:
  3397                           	callstack 0
  3398  000077                     nwkRouteRemove@dst:
  3399                           	callstack 0
  3400  000077                     nwkRouteFrameSent@frame:
  3401                           	callstack 0
  3402  000077                     nwkTxAckReceived@ind:
  3403                           	callstack 0
  3404  000077                     memcpy@d1:
  3405                           	callstack 0
  3406  000077                     memset@p:
  3407                           	callstack 0
  3408  000077                     strncmp@s1:
  3409                           	callstack 0
  3410  000077                     placeTimer@timeout:
  3411                           	callstack 0
  3412                           
  3413                           ; 4 bytes @ 0x17
  3414  000077                     	ds	1
  3415  000078                     ?_CRC_CalculatedResultGet:
  3416                           	callstack 0
  3417  000078                     DATAEE_ReadByte_Platform@copy3:
  3418                           	callstack 0
  3419  000078                     sync_eeprom@i:
  3420                           	callstack 0
  3421  000078                     TMR5_ReadTimer@readValLow:
  3422                           	callstack 0
  3423  000078                     CRC_CalculatedResultGet@xorValue:
  3424                           	callstack 0
  3425  000078                     NWK_GroupAdd@group:
  3426                           	callstack 0
  3427  000078                     NWK_RouteNewEntry@entry:
  3428                           	callstack 0
  3429  000078                     SX1276ReadBuffer@buffer:
  3430                           	callstack 0
  3431  000078                     SX1276WriteBuffer@buffer:
  3432                           	callstack 0
  3433                           
  3434                           ; 2 bytes @ 0x18
  3435  000078                     	ds	1
  3436  000079                     ??_CircularBufferInit:
  3437  000079                     ??_handle_rx_regs:
  3438  000079                     ??_nwkRouteFrameSent:
  3439  000079                     ?_CircularBufferSpace:
  3440                           	callstack 0
  3441  000079                     ?_nwkFrameAlloc:
  3442                           	callstack 0
  3443  000079                     SubBytes@i:
  3444                           	callstack 0
  3445  000079                     InvSubBytes@i:
  3446                           	callstack 0
  3447  000079                     DATAEE_ReadByte_Platform@copy2:
  3448                           	callstack 0
  3449  000079                     sync_eeprom@i_1693:
  3450                           	callstack 0
  3451  000079                     usMBCRC16@ucCRCHi:
  3452                           	callstack 0
  3453  000079                     NWK_RouteNextHop@multicast:
  3454                           	callstack 0
  3455  000079                     nwkRouteRemove@multicast:
  3456                           	callstack 0
  3457  000079                     ___llmod@counter:
  3458                           	callstack 0
  3459  000079                     ___xxtofl@sign:
  3460                           	callstack 0
  3461  000079                     CircularBufferSpace@ctx:
  3462                           	callstack 0
  3463  000079                     stop_loop_timer@looptime:
  3464                           	callstack 0
  3465  000079                     strncmp@s2:
  3466                           	callstack 0
  3467  000079                     memcpy@s1:
  3468                           	callstack 0
  3469  000079                     ___lmul@product:
  3470                           	callstack 0
  3471                           
  3472                           ; 4 bytes @ 0x19
  3473  000079                     	ds	1
  3474  00007A                     ??_CRC_CalculatedResultGet:
  3475  00007A                     AddRoundKey@round:
  3476                           	callstack 0
  3477  00007A                     SubBytes@j:
  3478                           	callstack 0
  3479  00007A                     InvSubBytes@j:
  3480                           	callstack 0
  3481  00007A                     handle_rx_regs@count:
  3482                           	callstack 0
  3483  00007A                     DATAEE_ReadByte_Platform@copy1:
  3484                           	callstack 0
  3485  00007A                     usMBCRC16@ucCRCLo:
  3486                           	callstack 0
  3487  00007A                     SX1276ReadBuffer@size:
  3488                           	callstack 0
  3489  00007A                     SX1276WriteBuffer@size:
  3490                           	callstack 0
  3491  00007A                     ___xxtofl@exp:
  3492                           	callstack 0
  3493  00007A                     keycmp@temp:
  3494                           	callstack 0
  3495  00007A                     NWK_RouteNextHop@entry:
  3496                           	callstack 0
  3497  00007A                     nwkRouteRemove@entry:
  3498                           	callstack 0
  3499  00007A                     nwkRouteFrameReceived@frame:
  3500                           	callstack 0
  3501                           
  3502                           ; 2 bytes @ 0x1A
  3503  00007A                     	ds	1
  3504  00007B                     ??_CircularBufferSpace:
  3505  00007B                     ??_nwkFrameAlloc:
  3506  00007B                     AddRoundKey@i:
  3507                           	callstack 0
  3508  00007B                     handle_rx_regs@buf_id:
  3509                           	callstack 0
  3510  00007B                     SX1276ReadBuffer@addr:
  3511                           	callstack 0
  3512  00007B                     SX1276WriteBuffer@addr:
  3513                           	callstack 0
  3514  00007B                     eMBRTUReceive@pucRcvAddress:
  3515                           	callstack 0
  3516  00007B                     eMBRTUSend@pucFrame:
  3517                           	callstack 0
  3518  00007B                     nwkRouteFrameSent@entry:
  3519                           	callstack 0
  3520  00007B                     nwkTxAckReceived@command:
  3521                           	callstack 0
  3522  00007B                     placeTimer@prev:
  3523                           	callstack 0
  3524  00007B                     strncmp@len:
  3525                           	callstack 0
  3526  00007B                     ___xxtofl@arg:
  3527                           	callstack 0
  3528                           
  3529                           ; 4 bytes @ 0x1B
  3530  00007B                     	ds	1
  3531  00007C                     AddRoundKey@j:
  3532                           	callstack 0
  3533  00007C                     rw_mb_regs@eMode:
  3534                           	callstack 0
  3535  00007C                     SX1276Read@addr:
  3536                           	callstack 0
  3537  00007C                     nwkRoutePrepareTx@frame:
  3538                           	callstack 0
  3539  00007C                     nwkRouteErrorReceived@ind:
  3540                           	callstack 0
  3541  00007C                     memcpy@n:
  3542                           	callstack 0
  3543                           
  3544                           ; 2 bytes @ 0x1C
  3545  00007C                     	ds	1
  3546  00007D                     ??_strncmp:
  3547  00007D                     ?_rand:
  3548                           	callstack 0
  3549  00007D                     ?_strtol:
  3550                           	callstack 0
  3551  00007D                     KeyExpansion@u8tmp:
  3552                           	callstack 0
  3553  00007D                     loadMACAddr@i:
  3554                           	callstack 0
  3555  00007D                     CRC_CalculatedResultGet@reverse:
  3556                           	callstack 0
  3557  00007D                     nwkFrameAlloc@i:
  3558                           	callstack 0
  3559  00007D                     SX1276Read@data:
  3560                           	callstack 0
  3561  00007D                     eMBRegHoldingCB@pucRegBuffer:
  3562                           	callstack 0
  3563  00007D                     CircularBufferInit@size:
  3564                           	callstack 0
  3565  00007D                     eMBRTUReceive@pucFrame:
  3566                           	callstack 0
  3567  00007D                     eMBRTUSend@usLength:
  3568                           	callstack 0
  3569  00007D                     nwkTxAckReceived@frame:
  3570                           	callstack 0
  3571  00007D                     placeTimer@t:
  3572                           	callstack 0
  3573  00007D                     strtol@s:
  3574                           	callstack 0
  3575                           
  3576                           ; 2 bytes @ 0x1D
  3577  00007D                     	ds	1
  3578  00007E                     ?_strstr:
  3579                           	callstack 0
  3580  00007E                     ?_getSignalBandwidth:
  3581                           	callstack 0
  3582  00007E                     ?_getSpreadingFactor:
  3583                           	callstack 0
  3584  00007E                     loadMACAddr@i_1185:
  3585                           	callstack 0
  3586  00007E                     SX1276Write@data:
  3587                           	callstack 0
  3588  00007E                     KeyExpansion@j:
  3589                           	callstack 0
  3590  00007E                     CRC_CalculatedResultGet@mask:
  3591                           	callstack 0
  3592  00007E                     strstr@s1:
  3593                           	callstack 0
  3594  00007E                     memcpy@s:
  3595                           	callstack 0
  3596                           
  3597                           ; 3 bytes @ 0x1E
  3598  00007E                     	ds	1
  3599  00007F                     ?___flmul:
  3600                           	callstack 0
  3601  00007F                     MixColumns@t:
  3602                           	callstack 0
  3603  00007F                     eMBRTUSend@ucSlaveAddress:
  3604                           	callstack 0
  3605  00007F                     SX1276Write@addr:
  3606                           	callstack 0
  3607  00007F                     eMBRegHoldingCB@usAddress:
  3608                           	callstack 0
  3609  00007F                     eMBRTUReceive@pusLength:
  3610                           	callstack 0
  3611  00007F                     nwkRouteErrorReceived@command:
  3612                           	callstack 0
  3613  00007F                     SYS_TimerStart@timer:
  3614                           	callstack 0
  3615  00007F                     strtol@endptr:
  3616                           	callstack 0
  3617  00007F                     ___flge@ff1:
  3618                           	callstack 0
  3619  00007F                     ___flmul@b:
  3620                           	callstack 0
  3621                           
  3622                           ; 4 bytes @ 0x1F
  3623  00007F                     	ds	1
  3624  000080                     ??_setCodingRate4:
  3625  000080                     ??_cad:
  3626  000080                     MixColumns@Tmp:
  3627                           	callstack 0
  3628  000080                     eMBRTUSend@eStatus:
  3629                           	callstack 0
  3630  000080                     nwkRouteFrameReceived@discovery:
  3631                           	callstack 0
  3632  000080                     setTxPower@power:
  3633                           	callstack 0
  3634  000080                     setSyncWord@sw:
  3635                           	callstack 0
  3636  000080                     receive@size:
  3637                           	callstack 0
  3638  000080                     CRC_CalculatedResultGet@result:
  3639                           	callstack 0
  3640  000080                     nwkRoutePrepareTx@header:
  3641                           	callstack 0
  3642  000080                     setPreambleLength@length:
  3643                           	callstack 0
  3644  000080                     strstr@s2:
  3645                           	callstack 0
  3646  000080                     KeyExpansion@tempa:
  3647                           	callstack 0
  3648                           
  3649                           ; 4 bytes @ 0x20
  3650  000080                     	ds	1
  3651  000081                     ??_eMBRTUReceive:
  3652  000081                     MixColumns@Tm:
  3653                           	callstack 0
  3654  000081                     _nwkRouteFrameReceived$6093:
  3655                           	callstack 0
  3656  000081                     setCodingRate4@cr:
  3657                           	callstack 0
  3658  000081                     memcpy@tmp:
  3659                           	callstack 0
  3660  000081                     eMBRegHoldingCB@usNRegs:
  3661                           	callstack 0
  3662  000081                     eMBRTUSend@usCRC16:
  3663                           	callstack 0
  3664  000081                     nwkRxDuplicateRejectionTimerHandler@timer:
  3665                           	callstack 0
  3666  000081                     nwkRxRejectDuplicate@header:
  3667                           	callstack 0
  3668  000081                     nwkTxAckWaitTimerHandler@timer:
  3669                           	callstack 0
  3670  000081                     nwkTxDelayTimerHandler@timer:
  3671                           	callstack 0
  3672  000081                     cad@RSSI_loc:
  3673                           	callstack 0
  3674  000081                     strtol@base:
  3675                           	callstack 0
  3676                           
  3677                           ; 2 bytes @ 0x21
  3678  000081                     	ds	1
  3679  000082                     ??_getSignalBandwidth:
  3680  000082                     ??_getSpreadingFactor:
  3681  000082                     ?_crc16_app:
  3682                           	callstack 0
  3683  000082                     MixColumns@i:
  3684                           	callstack 0
  3685  000082                     setCodingRate4@denominator:
  3686                           	callstack 0
  3687  000082                     crc16_app@dptr:
  3688                           	callstack 0
  3689  000082                     nwkRouteFrameReceived@header:
  3690                           	callstack 0
  3691  000082                     nwkTxFrame@frame:
  3692                           	callstack 0
  3693  000082                     memcpy@d:
  3694                           	callstack 0
  3695                           
  3696                           ; 2 bytes @ 0x22
  3697  000082                     	ds	1
  3698  000083                     ??_strtol:
  3699  000083                     ??_nwkRxRejectDuplicate:
  3700  000083                     eMBRegHoldingCB@eMode:
  3701                           	callstack 0
  3702  000083                     nwkRxDuplicateRejectionTimerHandler@restart:
  3703                           	callstack 0
  3704  000083                     cad@temp:
  3705                           	callstack 0
  3706  000083                     Cipher@state:
  3707                           	callstack 0
  3708  000083                     ___flge@ff2:
  3709                           	callstack 0
  3710  000083                     ___flmul@a:
  3711                           	callstack 0
  3712                           
  3713                           ; 4 bytes @ 0x23
  3714  000083                     	ds	1
  3715  000084                     ??_eMBRegHoldingCB:
  3716  000084                     nwkRxDuplicateRejectionTimerHandler@i:
  3717                           	callstack 0
  3718  000084                     getSignalBandwidth@bw:
  3719                           	callstack 0
  3720  000084                     KeyExpansion@k:
  3721                           	callstack 0
  3722  000084                     crc16_app@len:
  3723                           	callstack 0
  3724  000084                     CircularBufferPushBack@ctx:
  3725                           	callstack 0
  3726  000084                     CircularBufferPopFront@ctx:
  3727                           	callstack 0
  3728  000084                     nwkRouteFrameReceived@entry:
  3729                           	callstack 0
  3730  000084                     PHY_DataInd@ind:
  3731                           	callstack 0
  3732  000084                     nwkTxBroadcastFrame@frame:
  3733                           	callstack 0
  3734  000084                     PHY_DataReq@data:
  3735                           	callstack 0
  3736                           
  3737                           ; 2 bytes @ 0x24
  3738  000084                     	ds	1
  3739  000085                     ?___lldiv:
  3740                           	callstack 0
  3741  000085                     eMBRTUReceive@xFrameReceived:
  3742                           	callstack 0
  3743  000085                     nwkTxAckWaitTimerHandler@restart:
  3744                           	callstack 0
  3745  000085                     nwkTxDelayTimerHandler@restart:
  3746                           	callstack 0
  3747  000085                     Cipher@RoundKey:
  3748                           	callstack 0
  3749  000085                     ___lldiv@dividend:
  3750                           	callstack 0
  3751                           
  3752                           ; 4 bytes @ 0x25
  3753  000085                     	ds	1
  3754  000086                     ??_nwkTxBroadcastFrame:
  3755  000086                     ??_PHY_DataInd:
  3756  000086                     eMBRTUReceive@eStatus:
  3757                           	callstack 0
  3758  000086                     PHY_DataReq@size:
  3759                           	callstack 0
  3760  000086                     KeyExpansion@i:
  3761                           	callstack 0
  3762  000086                     eMBRegHoldingCB@tempptr:
  3763                           	callstack 0
  3764  000086                     crc16_app@seed:
  3765                           	callstack 0
  3766  000086                     CircularBufferPushBack@val:
  3767                           	callstack 0
  3768  000086                     CircularBufferPopFront@val:
  3769                           	callstack 0
  3770  000086                     nwkTxFrame@header:
  3771                           	callstack 0
  3772  000086                     nwkTxAckWaitTimerHandler@frame:
  3773                           	callstack 0
  3774  000086                     nwkTxDelayTimerHandler@frame:
  3775                           	callstack 0
  3776                           
  3777                           ; 2 bytes @ 0x26
  3778  000086                     	ds	1
  3779  000087                     ??_nwkTxTaskHandler:
  3780  000087                     ??___flmul:
  3781  000087                     ??___flge:
  3782  000087                     Cipher@round:
  3783                           	callstack 0
  3784  000087                     nwkRxRejectDuplicate@shift:
  3785                           	callstack 0
  3786  000087                     strtol@sign:
  3787                           	callstack 0
  3788                           
  3789                           ; 1 bytes @ 0x27
  3790  000087                     	ds	1
  3791  000088                     ??_CircularBufferPushBack:
  3792  000088                     ??_CircularBufferPopFront:
  3793  000088                     ??_SYS_TimerTaskHandler:
  3794  000088                     nwkRxRejectDuplicate@i:
  3795                           	callstack 0
  3796  000088                     AES_init_ctx_iv@ctx:
  3797                           	callstack 0
  3798  000088                     AES_CBC_encrypt_buffer@ctx:
  3799                           	callstack 0
  3800  000088                     eMBRegHoldingCB@tempptr_1279:
  3801                           	callstack 0
  3802  000088                     crc16_app@result:
  3803                           	callstack 0
  3804  000088                     nwkDataReqSendFrame@req:
  3805                           	callstack 0
  3806  000088                     nwkRouteSendRouteError@src:
  3807                           	callstack 0
  3808  000088                     nwkRxSendAck@frame:
  3809                           	callstack 0
  3810  000088                     strtol@a:
  3811                           	callstack 0
  3812                           
  3813                           ; 4 bytes @ 0x28
  3814  000088                     	ds	1
  3815  000089                     nwkRxRejectDuplicate@diff:
  3816                           	callstack 0
  3817  000089                     PHY_DataInd@frame:
  3818                           	callstack 0
  3819  000089                     nwkTxBroadcastFrame@newFrame:
  3820                           	callstack 0
  3821  000089                     nwkTxTaskHandler@frame:
  3822                           	callstack 0
  3823  000089                     ___lldiv@divisor:
  3824                           	callstack 0
  3825                           
  3826                           ; 4 bytes @ 0x29
  3827  000089                     	ds	1
  3828  00008A                     ??_nwkDataReqSendFrame:
  3829  00008A                     AES_init_ctx_iv@key:
  3830                           	callstack 0
  3831  00008A                     AES_CBC_encrypt_buffer@buf:
  3832                           	callstack 0
  3833  00008A                     eMBRegHoldingCB@tempptr_1280:
  3834                           	callstack 0
  3835  00008A                     crc16_app@ptr:
  3836                           	callstack 0
  3837  00008A                     nwkRouteSendRouteError@dst:
  3838                           	callstack 0
  3839  00008A                     nwkRxSendAck@command:
  3840                           	callstack 0
  3841  00008A                     nwkRxRejectDuplicate@freeEntry:
  3842                           	callstack 0
  3843                           
  3844                           ; 2 bytes @ 0x2A
  3845  00008A                     	ds	1
  3846  00008B                     ___flmul@sign:
  3847                           	callstack 0
  3848  00008B                     InvMixColumns@i:
  3849                           	callstack 0
  3850                           
  3851                           ; 2 bytes @ 0x2B
  3852  00008B                     	ds	1
  3853  00008C                     nwkRouteSendRouteError@multicast:
  3854                           	callstack 0
  3855  00008C                     SYS_TimerTaskHandler@cnt:
  3856                           	callstack 0
  3857  00008C                     ___flmul@aexp:
  3858                           	callstack 0
  3859  00008C                     strtol@c:
  3860                           	callstack 0
  3861  00008C                     AES_init_ctx_iv@iv:
  3862                           	callstack 0
  3863  00008C                     eMBRegHoldingCB@tempptr_1282:
  3864                           	callstack 0
  3865  00008C                     crc16_app@i:
  3866                           	callstack 0
  3867  00008C                     CircularBufferPushBack@ret_var:
  3868                           	callstack 0
  3869  00008C                     CircularBufferPopFront@ret_var:
  3870                           	callstack 0
  3871  00008C                     nwkRxSendAck@ack:
  3872                           	callstack 0
  3873  00008C                     nwkRxRejectDuplicate@entry:
  3874                           	callstack 0
  3875  00008C                     AES_CBC_encrypt_buffer@length:
  3876                           	callstack 0
  3877                           
  3878                           ; 4 bytes @ 0x2C
  3879  00008C                     	ds	1
  3880  00008D                     InvMixColumns@a:
  3881                           	callstack 0
  3882  00008D                     exract_sink_addr@dataptr:
  3883                           	callstack 0
  3884  00008D                     nwkDataReqSendFrame@mcHeader:
  3885                           	callstack 0
  3886  00008D                     nwkRouteSendRouteError@command:
  3887                           	callstack 0
  3888  00008D                     SYS_TimerTaskHandler@elapsed:
  3889                           	callstack 0
  3890  00008D                     ___lldiv@quotient:
  3891                           	callstack 0
  3892  00008D                     ___flmul@grs:
  3893                           	callstack 0
  3894                           
  3895                           ; 4 bytes @ 0x2D
  3896  00008D                     	ds	1
  3897  00008E                     ??_fill_rx_regs:
  3898  00008E                     InvMixColumns@b:
  3899                           	callstack 0
  3900  00008E                     eMBRegHoldingCB@tempptr_1283:
  3901                           	callstack 0
  3902  00008E                     CircularBufferPushBack@write_pos:
  3903                           	callstack 0
  3904  00008E                     nwkRxHandleReceivedFrame@frame:
  3905                           	callstack 0
  3906  00008E                     handle_led_events@temp:
  3907                           	callstack 0
  3908                           
  3909                           ; 3 bytes @ 0x2E
  3910  00008E                     	ds	1
  3911  00008F                     ??_exract_sink_addr:
  3912  00008F                     InvMixColumns@c:
  3913                           	callstack 0
  3914  00008F                     nwkDataReqSendFrame@frame:
  3915                           	callstack 0
  3916  00008F                     nwkRouteSendRouteError@frame:
  3917                           	callstack 0
  3918                           
  3919                           ; 2 bytes @ 0x2F
  3920  00008F                     	ds	1
  3921  000090                     ??_AES_CBC_encrypt_buffer:
  3922  000090                     ??_nwkRxHandleReceivedFrame:
  3923  000090                     InvMixColumns@d:
  3924                           	callstack 0
  3925  000090                     free_tx_buffer@req:
  3926                           	callstack 0
  3927  000090                     eMBRegHoldingCB@tempptr_1284:
  3928                           	callstack 0
  3929  000090                     queueLedEvent@duration:
  3930                           	callstack 0
  3931                           
  3932                           ; 2 bytes @ 0x30
  3933  000090                     	ds	1
  3934  000091                     ___lldiv@counter:
  3935                           	callstack 0
  3936  000091                     ___flmul@bexp:
  3937                           	callstack 0
  3938  000091                     InvCipher@state:
  3939                           	callstack 0
  3940  000091                     exract_sink_addr@p1:
  3941                           	callstack 0
  3942  000091                     nwkRouteFrame@frame:
  3943                           	callstack 0
  3944  000091                     SYS_TimerTaskHandler@timer:
  3945                           	callstack 0
  3946                           
  3947                           ; 2 bytes @ 0x31
  3948  000091                     	ds	1
  3949  000092                     ??_setSpreadingFactor:
  3950  000092                     ?_setFrequency:
  3951                           	callstack 0
  3952  000092                     free_tx_buffer@ack:
  3953                           	callstack 0
  3954  000092                     queueLedEvent@LEDState:
  3955                           	callstack 0
  3956  000092                     eMBRTUInit@ucPort:
  3957                           	callstack 0
  3958  000092                     nwkRxHandleReceivedFrame@broadcast:
  3959                           	callstack 0
  3960  000092                     eMBRegHoldingCB@tempptr_1285:
  3961                           	callstack 0
  3962  000092                     setFrequency@frequency:
  3963                           	callstack 0
  3964  000092                     setSignalBandwidth@sbw:
  3965                           	callstack 0
  3966  000092                     ___flmul@prod:
  3967                           	callstack 0
  3968                           
  3969                           ; 4 bytes @ 0x32
  3970  000092                     	ds	1
  3971  000093                     ??_free_tx_buffer:
  3972  000093                     queueLedEvent@ret_var:
  3973                           	callstack 0
  3974  000093                     nwkRxHandleReceivedFrame@member:
  3975                           	callstack 0
  3976  000093                     InvCipher@RoundKey:
  3977                           	callstack 0
  3978  000093                     exract_sink_addr@p2:
  3979                           	callstack 0
  3980  000093                     nwkRouteFrame@header:
  3981                           	callstack 0
  3982  000093                     eMBRTUInit@ulBaudRate:
  3983                           	callstack 0
  3984                           
  3985                           ; 4 bytes @ 0x33
  3986  000093                     	ds	1
  3987  000094                     AES_CBC_encrypt_buffer@i:
  3988                           	callstack 0
  3989  000094                     eMBRegHoldingCB@tempptr_1286:
  3990                           	callstack 0
  3991  000094                     nwkRxHandleReceivedFrame@mcHeader:
  3992                           	callstack 0
  3993  000094                     queueLedEvent@temp:
  3994                           	callstack 0
  3995                           
  3996                           ; 3 bytes @ 0x34
  3997  000094                     	ds	1
  3998  000095                     InvCipher@round:
  3999                           	callstack 0
  4000  000095                     fill_rx_regs@i:
  4001                           	callstack 0
  4002  000095                     exract_sink_addr@tempaddr:
  4003                           	callstack 0
  4004  000095                     free_tx_buffer@msg_ack_obj:
  4005                           	callstack 0
  4006                           
  4007                           ; 4 bytes @ 0x35
  4008  000095                     	ds	1
  4009  000096                     ??_setSignalBandwidth:
  4010  000096                     fill_rx_regs@dest_ptr:
  4011                           	callstack 0
  4012  000096                     AES_CBC_encrypt_buffer@Iv:
  4013                           	callstack 0
  4014  000096                     AES_CBC_decrypt_buffer@ctx:
  4015                           	callstack 0
  4016  000096                     eMBFuncWriteHoldingRegister@pucFrame:
  4017                           	callstack 0
  4018  000096                     eMBFuncWriteMultipleHoldingRegister@pucFrame:
  4019                           	callstack 0
  4020  000096                     eMBFuncReadHoldingRegister@pucFrame:
  4021                           	callstack 0
  4022  000096                     eMBFuncReadWriteMultipleHoldingRegister@pucFrame:
  4023                           	callstack 0
  4024  000096                     nwkRxHandleReceivedFrame@header:
  4025                           	callstack 0
  4026  000096                     ___flmul@temp:
  4027                           	callstack 0
  4028  000096                     setFrequency@num_mod:
  4029                           	callstack 0
  4030  000096                     _setSpreadingFactor$10480:
  4031                           	callstack 0
  4032                           
  4033                           ; 4 bytes @ 0x36
  4034  000096                     	ds	1
  4035  000097                     fill_rx_regs@buf_id:
  4036                           	callstack 0
  4037  000097                     ledInit@i:
  4038                           	callstack 0
  4039  000097                     eMBRTUInit@eParity:
  4040                           	callstack 0
  4041  000097                     queue_tx_led_event@i:
  4042                           	callstack 0
  4043  000097                     queue_rx_led_event@i:
  4044                           	callstack 0
  4045  000097                     exract_sink_addr@addrstr:
  4046                           	callstack 0
  4047                           
  4048                           ; 5 bytes @ 0x37
  4049  000097                     	ds	1
  4050  000098                     ?___fladd:
  4051                           	callstack 0
  4052  000098                     ledInit@i_1801:
  4053                           	callstack 0
  4054  000098                     AES_CBC_decrypt_buffer@buf:
  4055                           	callstack 0
  4056  000098                     app_aes_encrypt@data:
  4057                           	callstack 0
  4058  000098                     eMBFuncWriteHoldingRegister@usLen:
  4059                           	callstack 0
  4060  000098                     eMBFuncWriteMultipleHoldingRegister@usLen:
  4061                           	callstack 0
  4062  000098                     eMBFuncReadHoldingRegister@usLen:
  4063                           	callstack 0
  4064  000098                     eMBFuncReadWriteMultipleHoldingRegister@usLen:
  4065                           	callstack 0
  4066  000098                     eMBRTUInit@usTimerT35_50us:
  4067                           	callstack 0
  4068  000098                     ___fladd@b:
  4069                           	callstack 0
  4070                           
  4071                           ; 4 bytes @ 0x38
  4072  000098                     	ds	1
  4073  000099                     free_tx_buffer@buf_id:
  4074                           	callstack 0
  4075                           
  4076                           ; 1 bytes @ 0x39
  4077  000099                     	ds	1
  4078  00009A                     ??_eMBFuncWriteHoldingRegister:
  4079  00009A                     ??_eMBFuncWriteMultipleHoldingRegister:
  4080  00009A                     ??_eMBFuncReadHoldingRegister:
  4081  00009A                     ??_eMBFuncReadWriteMultipleHoldingRegister:
  4082  00009A                     app_aes_encrypt@size:
  4083                           	callstack 0
  4084  00009A                     setSpreadingFactor@sf:
  4085                           	callstack 0
  4086  00009A                     appDataConf@req:
  4087                           	callstack 0
  4088  00009A                     AES_CBC_decrypt_buffer@length:
  4089                           	callstack 0
  4090  00009A                     setFrequency@num:
  4091                           	callstack 0
  4092  00009A                     _setSignalBandwidth$10481:
  4093                           	callstack 0
  4094                           
  4095                           ; 4 bytes @ 0x3A
  4096  00009A                     	ds	1
  4097  00009B                     ??_app_aes_encrypt:
  4098                           
  4099                           ; 1 bytes @ 0x3B
  4100  00009B                     	ds	1
  4101  00009C                     appDataConf@ack:
  4102                           	callstack 0
  4103  00009C                     eMBFuncWriteMultipleHoldingRegister@ucRegByteCount:
  4104                           	callstack 0
  4105  00009C                     eMBRTUInit@eStatus:
  4106                           	callstack 0
  4107  00009C                     eMBFuncWriteHoldingRegister@usRegAddress:
  4108                           	callstack 0
  4109  00009C                     eMBFuncReadHoldingRegister@usRegAddress:
  4110                           	callstack 0
  4111  00009C                     ___fladd@a:
  4112                           	callstack 0
  4113                           
  4114                           ; 4 bytes @ 0x3C
  4115  00009C                     	ds	1
  4116  00009D                     eMBInit@ucSlaveAddress:
  4117                           	callstack 0
  4118  00009D                     eMBFuncWriteMultipleHoldingRegister@usRegAddress:
  4119                           	callstack 0
  4120  00009D                     nwkDataReqConfirm@req:
  4121                           	callstack 0
  4122                           
  4123                           ; 2 bytes @ 0x3D
  4124  00009D                     	ds	1
  4125  00009E                     ??_AES_CBC_decrypt_buffer:
  4126  00009E                     ??_handle_tx_regs:
  4127  00009E                     eMBFuncWriteHoldingRegister@eStatus:
  4128                           	callstack 0
  4129  00009E                     eMBFuncReadHoldingRegister@eStatus:
  4130                           	callstack 0
  4131  00009E                     eMBFuncReadWriteMultipleHoldingRegister@ucRegWriteByteCount:
  4132                           	callstack 0
  4133  00009E                     PHY_SetChannel@channel:
  4134                           	callstack 0
  4135  00009E                     eMBInit@ucPort:
  4136                           	callstack 0
  4137  00009E                     cmdSetSink@cmd:
  4138                           	callstack 0
  4139  00009E                     setSignalBandwidth@bw:
  4140                           	callstack 0
  4141                           
  4142                           ; 4 bytes @ 0x3E
  4143  00009E                     	ds	1
  4144  00009F                     ??_nwkDataReqConfirm:
  4145  00009F                     eMBFuncWriteHoldingRegister@eRegStatus:
  4146                           	callstack 0
  4147  00009F                     eMBFuncWriteMultipleHoldingRegister@eStatus:
  4148                           	callstack 0
  4149  00009F                     eMBFuncReadHoldingRegister@eRegStatus:
  4150                           	callstack 0
  4151  00009F                     eMBFuncReadWriteMultipleHoldingRegister@usRegReadAddress:
  4152                           	callstack 0
  4153  00009F                     eMBInit@ulBaudRate:
  4154                           	callstack 0
  4155                           
  4156                           ; 4 bytes @ 0x3F
  4157  00009F                     	ds	1
  4158  0000A0                     ??___fladd:
  4159  0000A0                     ??_cmdSetSink:
  4160  0000A0                     eMBFuncWriteMultipleHoldingRegister@eRegStatus:
  4161                           	callstack 0
  4162  0000A0                     eMBFuncReadHoldingRegister@pucFrameCur:
  4163                           	callstack 0
  4164                           
  4165                           ; 2 bytes @ 0x40
  4166  0000A0                     	ds	1
  4167  0000A1                     eMBFuncWriteMultipleHoldingRegister@usRegCount:
  4168                           	callstack 0
  4169  0000A1                     eMBFuncReadWriteMultipleHoldingRegister@usRegWriteAddress:
  4170                           	callstack 0
  4171  0000A1                     nwkDataReqConfirm@prev:
  4172                           	callstack 0
  4173                           
  4174                           ; 2 bytes @ 0x41
  4175  0000A1                     	ds	1
  4176  0000A2                     ??_initRadio:
  4177  0000A2                     _handle_tx_regs$1240:
  4178                           	callstack 0
  4179  0000A2                     eMBFuncReadHoldingRegister@usRegCount:
  4180                           	callstack 0
  4181  0000A2                     AES_CBC_decrypt_buffer@storeNextIv:
  4182                           	callstack 0
  4183                           
  4184                           ; 16 bytes @ 0x42
  4185  0000A2                     	ds	1
  4186  0000A3                     ??_nwkDataReqTaskHandler:
  4187  0000A3                     eMBFuncReadWriteMultipleHoldingRegister@eStatus:
  4188                           	callstack 0
  4189  0000A3                     eMBInit@eParity:
  4190                           	callstack 0
  4191  0000A3                     cmdSetSink@msgstr:
  4192                           	callstack 0
  4193                           
  4194                           ; 16 bytes @ 0x43
  4195  0000A3                     	ds	1
  4196  0000A4                     ??_eMBInit:
  4197  0000A4                     _handle_tx_regs$1241:
  4198                           	callstack 0
  4199  0000A4                     ___fladd@signs:
  4200                           	callstack 0
  4201  0000A4                     eMBFuncReadWriteMultipleHoldingRegister@pucFrameCur:
  4202                           	callstack 0
  4203                           
  4204                           ; 2 bytes @ 0x44
  4205  0000A4                     	ds	1
  4206  0000A5                     _handle_tx_regs$1242:
  4207                           	callstack 0
  4208  0000A5                     ___fladd@aexp:
  4209                           	callstack 0
  4210  0000A5                     nwkDataReqTaskHandler@req:
  4211                           	callstack 0
  4212                           
  4213                           ; 2 bytes @ 0x45
  4214  0000A5                     	ds	1
  4215  0000A6                     handle_tx_regs@needed_size:
  4216                           	callstack 0
  4217  0000A6                     initRadio@version:
  4218                           	callstack 0
  4219  0000A6                     eMBInit@eMode:
  4220                           	callstack 0
  4221  0000A6                     ___fladd@bexp:
  4222                           	callstack 0
  4223  0000A6                     eMBFuncReadWriteMultipleHoldingRegister@usRegWriteCount:
  4224                           	callstack 0
  4225                           
  4226                           ; 2 bytes @ 0x46
  4227  0000A6                     	ds	1
  4228  0000A7                     handle_tx_regs@src_ptr:
  4229                           	callstack 0
  4230  0000A7                     eMBInit@eStatus:
  4231                           	callstack 0
  4232  0000A7                     ___fladd@grs:
  4233                           	callstack 0
  4234  0000A7                     initRadio@wideRSSI:
  4235                           	callstack 0
  4236                           
  4237                           ; 2 bytes @ 0x47
  4238  0000A7                     	ds	1
  4239  0000A8                     ??_uart_default_engine:
  4240  0000A8                     ??_bootLoadApplication:
  4241  0000A8                     ??_handle_rw_regs:
  4242  0000A8                     ?___fltol:
  4243                           	callstack 0
  4244  0000A8                     handle_tx_regs@i:
  4245                           	callstack 0
  4246  0000A8                     eMBFuncReadWriteMultipleHoldingRegister@eRegStatus:
  4247                           	callstack 0
  4248  0000A8                     ___fltol@f1:
  4249                           	callstack 0
  4250                           
  4251                           ; 4 bytes @ 0x48
  4252  0000A8                     	ds	1
  4253  0000A9                     handle_tx_regs@buf_id:
  4254                           	callstack 0
  4255  0000A9                     eMBFuncReadWriteMultipleHoldingRegister@usRegReadCount:
  4256                           	callstack 0
  4257                           
  4258                           ; 2 bytes @ 0x49
  4259  0000A9                     	ds	2
  4260  0000AB                     ??_eMBPoll:
  4261                           
  4262                           ; 1 bytes @ 0x4B
  4263  0000AB                     	ds	1
  4264  0000AC                     ??___fltol:
  4265  0000AC                     handle_rw_regs@i:
  4266                           	callstack 0
  4267  0000AC                     bootLoadApplication@temp:
  4268                           	callstack 0
  4269                           
  4270                           ; 2 bytes @ 0x4C
  4271  0000AC                     	ds	1
  4272  0000AD                     eMBPoll@eStatus:
  4273                           	callstack 0
  4274  0000AD                     handle_rw_regs@msg_ack_obj:
  4275                           	callstack 0
  4276                           
  4277                           ; 4 bytes @ 0x4D
  4278  0000AD                     	ds	1
  4279  0000AE                     bootLoadApplication@rssimax:
  4280                           	callstack 0
  4281  0000AE                     eMBPoll@eEvent:
  4282                           	callstack 0
  4283                           
  4284                           ; 1 bytes @ 0x4E
  4285  0000AE                     	ds	1
  4286  0000AF                     bootLoadApplication@rssimin:
  4287                           	callstack 0
  4288  0000AF                     eMBPoll@i:
  4289                           	callstack 0
  4290                           
  4291                           ; 2 bytes @ 0x4F
  4292  0000AF                     	ds	1
  4293  0000B0                     bootLoadApplication@buf_id:
  4294                           	callstack 0
  4295  0000B0                     ___fltol@sign1:
  4296                           	callstack 0
  4297                           
  4298                           ; 1 bytes @ 0x50
  4299  0000B0                     	ds	1
  4300  0000B1                     bootLoadApplication@buf_id_1205:
  4301                           	callstack 0
  4302  0000B1                     ___fltol@exp1:
  4303                           	callstack 0
  4304                           
  4305                           ; 1 bytes @ 0x51
  4306  0000B1                     	ds	1
  4307  0000B2                     bootLoadApplication@temp1:
  4308                           	callstack 0
  4309  0000B2                     get_lqi@rssi:
  4310                           	callstack 0
  4311  0000B2                     AES_CBC_decrypt_buffer@i:
  4312                           	callstack 0
  4313                           
  4314                           ; 2 bytes @ 0x52
  4315  0000B2                     	ds	1
  4316  0000B3                     ??_DIO0_Receive_ISR:
  4317  0000B3                     cmdSetSink@N3:
  4318                           	callstack 0
  4319  0000B3                     bootLoadApplication@i:
  4320                           	callstack 0
  4321                           
  4322                           ; 1 bytes @ 0x53
  4323  0000B3                     	ds	1
  4324  0000B4                     cmdSetSink@N2:
  4325                           	callstack 0
  4326  0000B4                     DIO0_Receive_ISR@packetLength:
  4327                           	callstack 0
  4328  0000B4                     app_aes_decrypt@data:
  4329                           	callstack 0
  4330                           
  4331                           ; 2 bytes @ 0x54
  4332  0000B4                     	ds	1
  4333  0000B5                     cmdSetSink@N1:
  4334                           	callstack 0
  4335  0000B5                     DIO0_Receive_ISR@irqFlags:
  4336                           	callstack 0
  4337                           
  4338                           ; 1 bytes @ 0x55
  4339  0000B5                     	ds	1
  4340  0000B6                     app_aes_decrypt@size:
  4341                           	callstack 0
  4342  0000B6                     cmdSetSink@N0:
  4343                           	callstack 0
  4344  0000B6                     DIO0_Receive_ISR@ind:
  4345                           	callstack 0
  4346                           
  4347                           ; 5 bytes @ 0x56
  4348  0000B6                     	ds	1
  4349  0000B7                     ??_app_aes_decrypt:
  4350  0000B7                     cmdSetSink@needed_size:
  4351                           	callstack 0
  4352                           
  4353                           ; 1 bytes @ 0x57
  4354  0000B7                     	ds	1
  4355  0000B8                     cmdSetSink@new_sink:
  4356                           	callstack 0
  4357                           
  4358                           ; 2 bytes @ 0x58
  4359  0000B8                     	ds	2
  4360  0000BA                     cmdSetSink@buf_id:
  4361                           	callstack 0
  4362  0000BA                     appDataInd@ind:
  4363                           	callstack 0
  4364  0000BA                     appManagementEp@ind:
  4365                           	callstack 0
  4366  0000BA                     nwkRxServiceDataInd@ind:
  4367                           	callstack 0
  4368                           
  4369                           ; 2 bytes @ 0x5A
  4370  0000BA                     	ds	1
  4371  0000BB                     ??_radio_engine:
  4372  0000BB                     ??_handle_write_only_regs:
  4373                           
  4374                           ; 1 bytes @ 0x5B
  4375  0000BB                     	ds	1
  4376  0000BC                     ??_nwkRxServiceDataInd:
  4377  0000BC                     ??_appDataInd:
  4378  0000BC                     appManagementEp@dataptr:
  4379                           	callstack 0
  4380                           
  4381                           ; 2 bytes @ 0x5C
  4382  0000BC                     	ds	1
  4383  0000BD                     handle_write_only_regs@j:
  4384                           	callstack 0
  4385  0000BD                     radio_engine@temp_time:
  4386                           	callstack 0
  4387                           
  4388                           ; 2 bytes @ 0x5D
  4389  0000BD                     	ds	1
  4390  0000BE                     handle_write_only_regs@j_1224:
  4391                           	callstack 0
  4392  0000BE                     appManagementEp@ptr:
  4393                           	callstack 0
  4394                           
  4395                           ; 2 bytes @ 0x5E
  4396  0000BE                     	ds	1
  4397  0000BF                     appDataInd@dataptr:
  4398                           	callstack 0
  4399  0000BF                     handle_write_only_regs@keyptr:
  4400                           	callstack 0
  4401                           
  4402                           ; 2 bytes @ 0x5F
  4403  0000BF                     	ds	2
  4404  0000C1                     appDataInd@buf_id:
  4405                           	callstack 0
  4406                           
  4407                           ; 1 bytes @ 0x61
  4408  0000C1                     	ds	1
  4409  0000C2                     nwkRxIndicateFrame@frame:
  4410                           	callstack 0
  4411                           
  4412                           ; 2 bytes @ 0x62
  4413  0000C2                     	ds	2
  4414  0000C4                     ??_nwkRxIndicateFrame:
  4415                           
  4416                           ; 1 bytes @ 0x64
  4417  0000C4                     	ds	4
  4418  0000C8                     nwkRxHandleIndication@frame:
  4419                           	callstack 0
  4420                           
  4421                           ; 2 bytes @ 0x68
  4422  0000C8                     	ds	2
  4423  0000CA                     
  4424                           ; 1 bytes @ 0x6A
  4425  0000CA                     	ds	2
  4426  0000CC                     nwkRxHandleIndication@ack:
  4427                           	callstack 0
  4428                           
  4429                           ; 1 bytes @ 0x6C
  4430  0000CC                     	ds	1
  4431  0000CD                     ??_nwkRxTaskHandler:
  4432                           
  4433                           ; 1 bytes @ 0x6D
  4434  0000CD                     	ds	2
  4435  0000CF                     nwkRxTaskHandler@frame:
  4436                           	callstack 0
  4437                           
  4438                           ; 2 bytes @ 0x6F
  4439  0000CF                     	ds	2
  4440  0000D1                     
  4441                           ; 1 bytes @ 0x71
  4442 ;;
  4443 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4444 ;;
  4445 ;; *************** function _main *****************
  4446 ;; Defined at:
  4447 ;;		line 51 in file "main.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;		None
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;		None
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 3F/2
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;Total ram usage:        0 bytes
  4466 ;; Hardware stack levels required when called:   22
  4467 ;; This function calls:
  4468 ;;		_SYSTEM_Initialize
  4469 ;;		_SYS_Init
  4470 ;;		_SYS_TaskHandler
  4471 ;;		_TMR0_SetInterruptHandler
  4472 ;;		_application
  4473 ;;		_bootLoadApplication
  4474 ;; This function is called by:
  4475 ;;		Startup code after reset
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           	psect	text0
  4480  00B61E                     __ptext0:
  4481                           	callstack 0
  4482  00B61E                     _main:
  4483                           	callstack 9
  4484                           
  4485                           ;main.c: 54:     SYSTEM_Initialize();
  4486                           
  4487                           ;incstack = 0
  4488  00B61E  EC63  F05B         	call	_SYSTEM_Initialize	;wreg free
  4489                           
  4490                           ; BSR set to: 57
  4491                           ;main.c: 61:     (INTCON0bits.GIEH = 1);
  4492  00B622  8ED2               	bsf	210,7,c	;volatile
  4493                           
  4494                           ; BSR set to: 57
  4495                           ;main.c: 64:     (INTCON0bits.GIEL = 1);
  4496  00B624  8CD2               	bsf	210,6,c	;volatile
  4497                           
  4498                           ;main.c: 71:     TMR0_SetInterruptHandler(Timer0Handler);
  4499  00B626  0E70               	movlw	low _Timer0Handler
  4500  00B628  0100               	movlb	0	; force () banked
  4501  00B62A  6F71               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  4502  00B62C  0E9D               	movlw	high _Timer0Handler
  4503  00B62E  6F72               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4504  00B630  EC9D  F05E         	call	_TMR0_SetInterruptHandler	;wreg free
  4505                           
  4506                           ;main.c: 73:     SYS_Init();
  4507  00B634  EC58  F05E         	call	_SYS_Init	;wreg free
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;main.c: 74:     bootLoadApplication();
  4511  00B638  ECA2  F004         	call	_bootLoadApplication	;wreg free
  4512  00B63C  86BA               	bsf	186,3,c	;volatile
  4513  00B63E                     l20302:
  4514                           
  4515                           ;main.c: 77:     {;main.c: 78:         SYS_TaskHandler();
  4516  00B63E  EC43  F05E         	call	_SYS_TaskHandler	;wreg free
  4517                           
  4518                           ;main.c: 79:         application();
  4519  00B642  EC8B  F05A         	call	_application	;wreg free
  4520  00B646  D7FB               	goto	l20302
  4521  00B648                     __end_of_main:
  4522                           	callstack 0
  4523                           
  4524 ;; *************** function _bootLoadApplication *****************
  4525 ;; Defined at:
  4526 ;;		line 1777 in file "../app/app_src/application.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;		None
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  buf_id          1   81[BANK0 ] unsigned char 
  4531 ;;  buf_id          1   80[BANK0 ] unsigned char 
  4532 ;;  temp            2   76[BANK0 ] unsigned int 
  4533 ;;  i               1   83[BANK0 ] unsigned char 
  4534 ;;  temp1           1   82[BANK0 ] char 
  4535 ;;  rssimin         1   79[BANK0 ] char 
  4536 ;;  rssimax         1   78[BANK0 ] char 
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      void 
  4539 ;; Registers used:
  4540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+
      +10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4541 ;; Tracked objects:
  4542 ;;		On entry : 3F/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4550 ;;Total ram usage:       12 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:   15
  4553 ;; This function calls:
  4554 ;;		_CircularBufferInit
  4555 ;;		_DATAEE_ReadByte_Platform
  4556 ;;		_DATAEE_WriteByte_Platform
  4557 ;;		_NWK_GroupAdd
  4558 ;;		_NWK_OpenEndpoint
  4559 ;;		_NWK_SetAddr
  4560 ;;		_NWK_SetPanId
  4561 ;;		_PHY_Get_Packet_Rssi_Threshold
  4562 ;;		_PHY_Get_Packet_Rssi_Threshold_Limits
  4563 ;;		_PHY_Set_Packet_Rssi_Threshold
  4564 ;;		_TMR0_SetInterruptHandler
  4565 ;;		_TMR3_SetInterruptHandler
  4566 ;;		_UART1_SetErrorHandler
  4567 ;;		_UART1_SetFramingErrorHandler
  4568 ;;		_UART1_SetOverrunErrorHandler
  4569 ;;		_crc16_app
  4570 ;;		_eMBEnable
  4571 ;;		_eMBInit
  4572 ;;		_ledInit
  4573 ;;		_loadMACAddr
  4574 ;;		_memcpy
  4575 ;;		_set_parity
  4576 ;;		_set_uart_baud
  4577 ;; This function is called by:
  4578 ;;		_main
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           	psect	text1
  4583  000944                     __ptext1:
  4584                           	callstack 0
  4585  000944                     _bootLoadApplication:
  4586                           	callstack 15
  4587                           
  4588                           ;../app/app_src/application.c: 1779:     uint16_t temp;;../app/app_src/application.c: 17
      +                          80:     uint8_t i;;../app/app_src/application.c: 1781:     int8_t rssimax,rssimin, temp1
      +                          ;;../app/app_src/application.c: 1788:     ledInit();
  4589                           
  4590                           ; BSR set to: 2
  4591                           ;incstack = 0
  4592  000944  EC23  F03B         	call	_ledInit	;wreg free
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;../app/app_src/application.c: 1791:     loadMACAddr();
  4596  000948  ECB5  F044         	call	_loadMACAddr	;wreg free
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;../app/app_src/application.c: 1793:     temp = crc16_app(&EUIDbyte[0], sizeof(EUIDbyte)
      +                          , 0);
  4600  00094C  0EB3               	movlw	low _EUIDbyte
  4601  00094E  0100               	movlb	0	; force () banked
  4602  000950  6F82               	movwf	crc16_app@dptr& (0+255),b
  4603  000952  0E03               	movlw	high _EUIDbyte
  4604  000954  6F83               	movwf	(crc16_app@dptr+1)& (0+255),b
  4605  000956  0E00               	movlw	0
  4606  000958  0100               	movlb	0	; force () banked
  4607  00095A  6F85               	movwf	(crc16_app@len+1)& (0+255),b
  4608  00095C  0E0C               	movlw	12
  4609  00095E  6F84               	movwf	crc16_app@len& (0+255),b
  4610  000960  0E00               	movlw	0
  4611  000962  0100               	movlb	0	; force () banked
  4612  000964  6F87               	movwf	(crc16_app@seed+1)& (0+255),b
  4613  000966  0E00               	movlw	0
  4614  000968  6F86               	movwf	crc16_app@seed& (0+255),b
  4615  00096A  ECD3  F04C         	call	_crc16_app	;wreg free
  4616  00096E  C082  F0AC         	movff	?_crc16_app,bootLoadApplication@temp
  4617  000972  C083  F0AD         	movff	?_crc16_app+1,bootLoadApplication@temp+1
  4618                           
  4619                           ; BSR set to: 57
  4620                           ;../app/app_src/application.c: 1794:     currentAddr0 = (temp >> 8) & 0xFF;
  4621  000976  C0AD  F0EB         	movff	bootLoadApplication@temp+1,_currentAddr0
  4622                           
  4623                           ; BSR set to: 57
  4624                           ;../app/app_src/application.c: 1795:     currentAddr1 = (temp) & 0xFF;
  4625  00097A  C0AC  F0EA         	movff	bootLoadApplication@temp,_currentAddr1
  4626                           
  4627                           ; BSR set to: 57
  4628                           ;../app/app_src/application.c: 1798:     pan_id = (DATAEE_ReadByte_Platform(0 + 0 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1) << 8) |
  4629  00097E  0E00               	movlw	0
  4630  000980  0100               	movlb	0	; force () banked
  4631  000982  6F76               	movwf	(DATAEE_ReadByte_Platform@addr+1)& (0+255),b
  4632  000984  0E19               	movlw	25
  4633  000986  6F75               	movwf	DATAEE_ReadByte_Platform@addr& (0+255),b
  4634  000988  EC4B  F032         	call	_DATAEE_ReadByte_Platform	;wreg free
  4635  00098C  0100               	movlb	0	; force () banked
  4636  00098E  6FA8               	movwf	??_bootLoadApplication& (0+255),b
  4637  000990  51A8               	movf	??_bootLoadApplication& (0+255),w,b
  4638  000992  6FAA               	movwf	(??_bootLoadApplication+2)& (0+255),b
  4639  000994  6BA9               	clrf	(??_bootLoadApplication+1)& (0+255),b
  4640  000996  0E00               	movlw	0
  4641  000998  0100               	movlb	0	; force () banked
  4642  00099A  6F76               	movwf	(DATAEE_ReadByte_Platform@addr+1)& (0+255),b
  4643  00099C  0E1A               	movlw	26
  4644  00099E  6F75               	movwf	DATAEE_ReadByte_Platform@addr& (0+255),b
  4645  0009A0  EC4B  F032         	call	_DATAEE_ReadByte_Platform	;wreg free
  4646  0009A4  0100               	movlb	0	; force () banked
  4647  0009A6  6FAB               	movwf	(??_bootLoadApplication+3)& (0+255),b
  4648  0009A8  51AB               	movf	(??_bootLoadApplication+3)& (0+255),w,b
  4649  0009AA  11A9               	iorwf	(??_bootLoadApplication+1)& (0+255),w,b
  4650  0009AC  0101               	movlb	1	; force () banked
  4651  0009AE  6FDB               	movwf	_pan_id& (0+255),b
  4652  0009B0  0100               	movlb	0	; force () banked
  4653  0009B2  51AA               	movf	(??_bootLoadApplication+2)& (0+255),w,b
  4654  0009B4  0101               	movlb	1	; force () banked
  4655  0009B6  6FDC               	movwf	(_pan_id+1)& (0+255),b
  4656                           
  4657                           ; BSR set to: 1
  4658                           ;../app/app_src/application.c: 1800:     if((0xFFFF == pan_id) || (0x0000 == pan_id)){
  4659  0009B8  0101               	movlb	1	; force () banked
  4660  0009BA  29DB               	incf	_pan_id& (0+255),w,b
  4661  0009BC  E103               	bnz	u18730
  4662  0009BE  29DC               	incf	(_pan_id+1)& (0+255),w,b
  4663  0009C0  B4D8               	btfsc	status,2,c
  4664  0009C2  D005               	goto	u18740
  4665  0009C4                     u18730:
  4666                           
  4667                           ; BSR set to: 1
  4668  0009C4  0101               	movlb	1	; force () banked
  4669  0009C6  51DB               	movf	_pan_id& (0+255),w,b
  4670  0009C8  11DC               	iorwf	(_pan_id+1)& (0+255),w,b
  4671  0009CA  A4D8               	btfss	status,2,c
  4672  0009CC  D005               	goto	l537
  4673  0009CE                     u18740:
  4674                           
  4675                           ; BSR set to: 1
  4676                           ;../app/app_src/application.c: 1801:         pan_id = 0xAAAA;
  4677  0009CE  0EAA               	movlw	170
  4678  0009D0  0101               	movlb	1	; force () banked
  4679  0009D2  6FDC               	movwf	(_pan_id+1)& (0+255),b
  4680  0009D4  0EAA               	movlw	170
  4681  0009D6  6FDB               	movwf	_pan_id& (0+255),b
  4682  0009D8                     l537:
  4683                           
  4684                           ; BSR set to: 1
  4685                           ;../app/app_src/application.c: 1805:     for(i = 0; i < 16; i++){
  4686  0009D8  0E00               	movlw	0
  4687  0009DA  0100               	movlb	0	; force () banked
  4688  0009DC  6FB3               	movwf	bootLoadApplication@i& (0+255),b
  4689  0009DE  D013               	goto	l20060
  4690  0009E0                     l20056:
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;../app/app_src/application.c: 1806:         aes_key[i] = DATAEE_ReadByte_Platform(0 + 0
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i);
  4694  0009E0  0E96               	movlw	low _aes_key
  4695  0009E2  0100               	movlb	0	; force () banked
  4696  0009E4  25B3               	addwf	bootLoadApplication@i& (0+255),w,b
  4697  0009E6  6ED9               	movwf	fsr2l,c
  4698  0009E8  6ADA               	clrf	fsr2h,c
  4699  0009EA  0E03               	movlw	high _aes_key
  4700  0009EC  22DA               	addwfc	fsr2h,f,c
  4701  0009EE  0E09               	movlw	9
  4702  0009F0  25B3               	addwf	bootLoadApplication@i& (0+255),w,b
  4703  0009F2  0100               	movlb	0	; force () banked
  4704  0009F4  6F75               	movwf	DATAEE_ReadByte_Platform@addr& (0+255),b
  4705  0009F6  6B76               	clrf	(DATAEE_ReadByte_Platform@addr+1)& (0+255),b
  4706  0009F8  0E00               	movlw	0
  4707  0009FA  2376               	addwfc	(DATAEE_ReadByte_Platform@addr+1)& (0+255),f,b
  4708  0009FC  EC4B  F032         	call	_DATAEE_ReadByte_Platform	;wreg free
  4709  000A00  6EDF               	movwf	indf2,c
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;../app/app_src/application.c: 1807:     }
  4713  000A02  0100               	movlb	0	; force () banked
  4714  000A04  2BB3               	incf	bootLoadApplication@i& (0+255),f,b
  4715  000A06                     l20060:
  4716                           
  4717                           ; BSR set to: 0
  4718  000A06  0E0F               	movlw	15
  4719  000A08  0100               	movlb	0	; force () banked
  4720  000A0A  65B3               	cpfsgt	bootLoadApplication@i& (0+255),b
  4721  000A0C  D7E9               	goto	l20056
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;../app/app_src/application.c: 1808:     for(i = 0; i < 16; i++){
  4725  000A0E  0E00               	movlw	0
  4726  000A10  0100               	movlb	0	; force () banked
  4727  000A12  6FB3               	movwf	bootLoadApplication@i& (0+255),b
  4728  000A14  D013               	goto	l20072
  4729  000A16                     l20068:
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;../app/app_src/application.c: 1809:         net_key[i] = DATAEE_ReadByte_Platform(0 + 0
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i);
  4733  000A16  0E86               	movlw	low _net_key
  4734  000A18  0100               	movlb	0	; force () banked
  4735  000A1A  25B3               	addwf	bootLoadApplication@i& (0+255),w,b
  4736  000A1C  6ED9               	movwf	fsr2l,c
  4737  000A1E  6ADA               	clrf	fsr2h,c
  4738  000A20  0E03               	movlw	high _net_key
  4739  000A22  22DA               	addwfc	fsr2h,f,c
  4740  000A24  0E24               	movlw	36
  4741  000A26  25B3               	addwf	bootLoadApplication@i& (0+255),w,b
  4742  000A28  0100               	movlb	0	; force () banked
  4743  000A2A  6F75               	movwf	DATAEE_ReadByte_Platform@addr& (0+255),b
  4744  000A2C  6B76               	clrf	(DATAEE_ReadByte_Platform@addr+1)& (0+255),b
  4745  000A2E  0E00               	movlw	0
  4746  000A30  2376               	addwfc	(DATAEE_ReadByte_Platform@addr+1)& (0+255),f,b
  4747  000A32  EC4B  F032         	call	_DATAEE_ReadByte_Platform	;wreg free
  4748  000A36  6EDF               	movwf	indf2,c
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;../app/app_src/application.c: 1810:     }
  4752  000A38  0100               	movlb	0	; force () banked
  4753  000A3A  2BB3               	incf	bootLoadApplication@i& (0+255),f,b
  4754  000A3C                     l20072:
  4755                           
  4756                           ; BSR set to: 0
  4757  000A3C  0E0F               	movlw	15
  4758  000A3E  0100               	movlb	0	; force () banked
  4759  000A40  65B3               	cpfsgt	bootLoadApplication@i& (0+255),b
  4760  000A42  D7E9               	goto	l20068
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;../app/app_src/application.c: 1813:     memcpy(&write_only_mb_regs[WO_AES1], aes_key, s
      +                          izeof(aes_key));
  4764  000A44  0E2E               	movlw	low (_write_only_mb_regs+2)
  4765  000A46  0100               	movlb	0	; force () banked
  4766  000A48  6F77               	movwf	memcpy@d1& (0+255),b
  4767  000A4A  0E03               	movlw	high (_write_only_mb_regs+2)
  4768  000A4C  6F78               	movwf	(memcpy@d1+1)& (0+255),b
  4769  000A4E  0E96               	movlw	low _aes_key
  4770  000A50  0100               	movlb	0	; force () banked
  4771  000A52  6F79               	movwf	memcpy@s1& (0+255),b
  4772  000A54  0E03               	movlw	high _aes_key
  4773  000A56  6F7A               	movwf	(memcpy@s1+1)& (0+255),b
  4774  000A58  5179               	movf	memcpy@s1& (0+255),w,b
  4775  000A5A  117A               	iorwf	(memcpy@s1+1)& (0+255),w,b
  4776  000A5C  A4D8               	btfss	status,2,c
  4777  000A5E  0E20               	movlw	32
  4778  000A60  6F7B               	movwf	(memcpy@s1+2)& (0+255),b
  4779  000A62  0E00               	movlw	0
  4780  000A64  0100               	movlb	0	; force () banked
  4781  000A66  6F7D               	movwf	(memcpy@n+1)& (0+255),b
  4782  000A68  0E10               	movlw	16
  4783  000A6A  6F7C               	movwf	memcpy@n& (0+255),b
  4784  000A6C  ECC1  F04F         	call	_memcpy	;wreg free
  4785                           
  4786                           ;../app/app_src/application.c: 1814:     memcpy(&write_only_mb_regs[WO_NAES1], net_key, 
      +                          sizeof(net_key));
  4787  000A70  0E3E               	movlw	low (_write_only_mb_regs+18)
  4788  000A72  0100               	movlb	0	; force () banked
  4789  000A74  6F77               	movwf	memcpy@d1& (0+255),b
  4790  000A76  0E03               	movlw	high (_write_only_mb_regs+18)
  4791  000A78  6F78               	movwf	(memcpy@d1+1)& (0+255),b
  4792  000A7A  0E86               	movlw	low _net_key
  4793  000A7C  0100               	movlb	0	; force () banked
  4794  000A7E  6F79               	movwf	memcpy@s1& (0+255),b
  4795  000A80  0E03               	movlw	high _net_key
  4796  000A82  6F7A               	movwf	(memcpy@s1+1)& (0+255),b
  4797  000A84  5179               	movf	memcpy@s1& (0+255),w,b
  4798  000A86  117A               	iorwf	(memcpy@s1+1)& (0+255),w,b
  4799  000A88  A4D8               	btfss	status,2,c
  4800  000A8A  0E20               	movlw	32
  4801  000A8C  6F7B               	movwf	(memcpy@s1+2)& (0+255),b
  4802  000A8E  0E00               	movlw	0
  4803  000A90  0100               	movlb	0	; force () banked
  4804  000A92  6F7D               	movwf	(memcpy@n+1)& (0+255),b
  4805  000A94  0E10               	movlw	16
  4806  000A96  6F7C               	movwf	memcpy@n& (0+255),b
  4807  000A98  ECC1  F04F         	call	_memcpy	;wreg free
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;../app/app_src/application.c: 1817:     sinkAddr0 = DATAEE_ReadByte_Platform(0 + 0 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1);
  4811  000A9C  0E00               	movlw	0
  4812  000A9E  0100               	movlb	0	; force () banked
  4813  000AA0  6F76               	movwf	(DATAEE_ReadByte_Platform@addr+1)& (0+255),b
  4814  000AA2  0E1B               	movlw	27
  4815  000AA4  6F75               	movwf	DATAEE_ReadByte_Platform@addr& (0+255),b
  4816  000AA6  EC4B  F032         	call	_DATAEE_ReadByte_Platform	;wreg free
  4817  000AAA  0100               	movlb	0	; force () banked
  4818  000AAC  6FE0               	movwf	_sinkAddr0& (0+255),b
  4819                           
  4820                           ; BSR set to: 0
  4821                           ;../app/app_src/application.c: 1818:     sinkAddr1 = DATAEE_ReadByte_Platform(0 + 0 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1);
  4822  000AAE  0E00               	movlw	0
  4823  000AB0  0100               	movlb	0	; force () banked
  4824  000AB2  6F76               	movwf	(DATAEE_ReadByte_Platform@addr+1)& (0+255),b
  4825  000AB4  0E1C               	movlw	28
  4826  000AB6  6F75               	movwf	DATAEE_ReadByte_Platform@addr& (0+255),b
  4827  000AB8  EC4B  F032         	call	_DATAEE_ReadByte_Platform	;wreg free
  4828  000ABC  0100               	movlb	0	; force () banked
  4829  000ABE  6FDF               	movwf	_sinkAddr1& (0+255),b
  4830                           
  4831                           ; BSR set to: 0
  4832                           ;../app/app_src/application.c: 1821:     channel = DATAEE_ReadByte_Platform(0 + 0 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1);
  4833  000AC0  0E00               	movlw	0
  4834  000AC2  0100               	movlb	0	; force () banked
  4835  000AC4  6F76               	movwf	(DATAEE_ReadByte_Platform@addr+1)& (0+255),b
  4836  000AC6  0E1D               	movlw	29
  4837  000AC8  6F75               	movwf	DATAEE_ReadByte_Platform@addr& (0+255),b
  4838  000ACA  EC4B  F032         	call	_DATAEE_ReadByte_Platform	;wreg free
  4839  000ACE  0100               	movlb	0	; force () banked
  4840  000AD0  6FDD               	movwf	_channel& (0+255),b
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;../app/app_src/application.c: 1822:     if(channel > sizeof(fhssList)){
  4844  000AD2  0E28               	movlw	40
  4845  000AD4  0100               	movlb	0	; force () banked
  4846  000AD6  65DD               	cpfsgt	_channel& (0+255),b
  4847  000AD8  D00C               	goto	l20088
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;../app/app_src/application.c: 1823:         channel = 4;
  4851  000ADA  0E04               	movlw	4
  4852  000ADC  0100               	movlb	0	; force () banked
  4853  000ADE  6FDD               	movwf	_channel& (0+255),b
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;../app/app_src/application.c: 1824:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1,channel);
  4857  000AE0  0E00               	movlw	0
  4858  000AE2  0100               	movlb	0	; force () banked
  4859  000AE4  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  4860  000AE6  0E1D               	movlw	29
  4861  000AE8  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  4862  000AEA  C0DD  F077         	movff	_channel,DATAEE_WriteByte_Platform@data
  4863  000AEE  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  4864  000AF2                     l20088:
  4865                           
  4866                           ;../app/app_src/application.c: 1828:     TXPower = DATAEE_ReadByte_Platform(0 + 0 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1);
  4867  000AF2  0E00               	movlw	0
  4868  000AF4  0100               	movlb	0	; force () banked
  4869  000AF6  6F76               	movwf	(DATAEE_ReadByte_Platform@addr+1)& (0+255),b
  4870  000AF8  0E1E               	movlw	30
  4871  000AFA  6F75               	movwf	DATAEE_ReadByte_Platform@addr& (0+255),b
  4872  000AFC  EC4B  F032         	call	_DATAEE_ReadByte_Platform	;wreg free
  4873  000B00  0100               	movlb	0	; force () banked
  4874  000B02  6FDC               	movwf	_TXPower& (0+255),b
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;../app/app_src/application.c: 1829:     if((TXPower < 2) || (TXPower > 17)){
  4878  000B04  0E01               	movlw	1
  4879  000B06  0100               	movlb	0	; force () banked
  4880  000B08  65DC               	cpfsgt	_TXPower& (0+255),b
  4881  000B0A  D004               	goto	u18810
  4882                           
  4883                           ; BSR set to: 0
  4884  000B0C  0E11               	movlw	17
  4885  000B0E  0100               	movlb	0	; force () banked
  4886  000B10  65DC               	cpfsgt	_TXPower& (0+255),b
  4887  000B12  D00C               	goto	l20098
  4888  000B14                     u18810:
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;../app/app_src/application.c: 1830:         TXPower = 2;
  4892  000B14  0E02               	movlw	2
  4893  000B16  0100               	movlb	0	; force () banked
  4894  000B18  6FDC               	movwf	_TXPower& (0+255),b
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;../app/app_src/application.c: 1831:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1,TXPower);
  4898  000B1A  0E00               	movlw	0
  4899  000B1C  0100               	movlb	0	; force () banked
  4900  000B1E  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  4901  000B20  0E1E               	movlw	30
  4902  000B22  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  4903  000B24  C0DC  F077         	movff	_TXPower,DATAEE_WriteByte_Platform@data
  4904  000B28  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  4905  000B2C                     l20098:
  4906                           
  4907                           ;../app/app_src/application.c: 1835:     current_sf = DATAEE_ReadByte_Platform(0 + 0 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1);
  4908  000B2C  0E00               	movlw	0
  4909  000B2E  0100               	movlb	0	; force () banked
  4910  000B30  6F76               	movwf	(DATAEE_ReadByte_Platform@addr+1)& (0+255),b
  4911  000B32  0E22               	movlw	34
  4912  000B34  6F75               	movwf	DATAEE_ReadByte_Platform@addr& (0+255),b
  4913  000B36  EC4B  F032         	call	_DATAEE_ReadByte_Platform	;wreg free
  4914  000B3A  0100               	movlb	0	; force () banked
  4915  000B3C  6FDE               	movwf	_current_sf& (0+255),b
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;../app/app_src/application.c: 1836:     if((current_sf < 7) || (current_sf > 12)){
  4919  000B3E  0E06               	movlw	6
  4920  000B40  0100               	movlb	0	; force () banked
  4921  000B42  65DE               	cpfsgt	_current_sf& (0+255),b
  4922  000B44  D004               	goto	u18830
  4923                           
  4924                           ; BSR set to: 0
  4925  000B46  0E0C               	movlw	12
  4926  000B48  0100               	movlb	0	; force () banked
  4927  000B4A  65DE               	cpfsgt	_current_sf& (0+255),b
  4928  000B4C  D00C               	goto	l20108
  4929  000B4E                     u18830:
  4930                           
  4931                           ; BSR set to: 0
  4932                           ;../app/app_src/application.c: 1837:         current_sf = 7;
  4933  000B4E  0E07               	movlw	7
  4934  000B50  0100               	movlb	0	; force () banked
  4935  000B52  6FDE               	movwf	_current_sf& (0+255),b
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;../app/app_src/application.c: 1838:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, current_sf);
  4939  000B54  0E00               	movlw	0
  4940  000B56  0100               	movlb	0	; force () banked
  4941  000B58  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  4942  000B5A  0E22               	movlw	34
  4943  000B5C  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  4944  000B5E  C0DE  F077         	movff	_current_sf,DATAEE_WriteByte_Platform@data
  4945  000B62  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  4946  000B66                     l20108:
  4947                           
  4948                           ;../app/app_src/application.c: 1842:     RSSITarget = DATAEE_ReadByte_Platform(0 + 0 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1);
  4949  000B66  0E00               	movlw	0
  4950  000B68  0100               	movlb	0	; force () banked
  4951  000B6A  6F76               	movwf	(DATAEE_ReadByte_Platform@addr+1)& (0+255),b
  4952  000B6C  0E1F               	movlw	31
  4953  000B6E  6F75               	movwf	DATAEE_ReadByte_Platform@addr& (0+255),b
  4954  000B70  EC4B  F032         	call	_DATAEE_ReadByte_Platform	;wreg free
  4955  000B74  0100               	movlb	0	; force () banked
  4956  000B76  6FE8               	movwf	_RSSITarget& (0+255),b
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;../app/app_src/application.c: 1843:     if((RSSITarget >= -30) || (RSSITarget < -120)){
  4960  000B78  0100               	movlb	0	; force () banked
  4961  000B7A  51E8               	movf	_RSSITarget& (0+255),w,b
  4962  000B7C  0A80               	xorlw	128
  4963  000B7E  0F9E               	addlw	158
  4964  000B80  B0D8               	btfsc	status,0,c
  4965  000B82  D006               	goto	u18850
  4966                           
  4967                           ; BSR set to: 0
  4968  000B84  0100               	movlb	0	; force () banked
  4969  000B86  51E8               	movf	_RSSITarget& (0+255),w,b
  4970  000B88  0A80               	xorlw	128
  4971  000B8A  0FF8               	addlw	248
  4972  000B8C  B0D8               	btfsc	status,0,c
  4973  000B8E  D00C               	goto	l20118
  4974  000B90                     u18850:
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;../app/app_src/application.c: 1844:         RSSITarget = -80;
  4978  000B90  0EB0               	movlw	176
  4979  000B92  0100               	movlb	0	; force () banked
  4980  000B94  6FE8               	movwf	_RSSITarget& (0+255),b
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;../app/app_src/application.c: 1845:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1,RSSITarget);
  4984  000B96  0E00               	movlw	0
  4985  000B98  0100               	movlb	0	; force () banked
  4986  000B9A  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  4987  000B9C  0E1F               	movlw	31
  4988  000B9E  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  4989  000BA0  C0E8  F077         	movff	_RSSITarget,DATAEE_WriteByte_Platform@data
  4990  000BA4  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  4991  000BA8                     l20118:
  4992                           
  4993                           ;../app/app_src/application.c: 1849:     i = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1);
  4994  000BA8  0E00               	movlw	0
  4995  000BAA  0100               	movlb	0	; force () banked
  4996  000BAC  6F76               	movwf	(DATAEE_ReadByte_Platform@addr+1)& (0+255),b
  4997  000BAE  0E20               	movlw	32
  4998  000BB0  6F75               	movwf	DATAEE_ReadByte_Platform@addr& (0+255),b
  4999  000BB2  EC4B  F032         	call	_DATAEE_ReadByte_Platform	;wreg free
  5000  000BB6  0100               	movlb	0	; force () banked
  5001  000BB8  6FB3               	movwf	bootLoadApplication@i& (0+255),b
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;../app/app_src/application.c: 1850:     if((i > UART_9BIT_EVEN_PARITY) || (UART_7BIT_MO
      +                          DE == i)){
  5005  000BBA  0E04               	movlw	4
  5006  000BBC  0100               	movlb	0	; force () banked
  5007  000BBE  61B3               	cpfslt	bootLoadApplication@i& (0+255),b
  5008  000BC0  D004               	goto	u18870
  5009                           
  5010                           ; BSR set to: 0
  5011  000BC2  0100               	movlb	0	; force () banked
  5012  000BC4  05B3               	decf	bootLoadApplication@i& (0+255),w,b
  5013  000BC6  A4D8               	btfss	status,2,c
  5014  000BC8  D00D               	goto	l20128
  5015  000BCA                     u18870:
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;../app/app_src/application.c: 1851:         i = UART_9BIT_EVEN_PARITY;
  5019  000BCA  0E03               	movlw	3
  5020  000BCC  0100               	movlb	0	; force () banked
  5021  000BCE  6FB3               	movwf	bootLoadApplication@i& (0+255),b
  5022                           
  5023                           ; BSR set to: 0
  5024                           ;../app/app_src/application.c: 1852:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1,UART_9BIT_EVEN_PARITY);
  5025  000BD0  0E00               	movlw	0
  5026  000BD2  0100               	movlb	0	; force () banked
  5027  000BD4  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  5028  000BD6  0E20               	movlw	32
  5029  000BD8  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  5030  000BDA  0E03               	movlw	3
  5031  000BDC  0100               	movlb	0	; force () banked
  5032  000BDE  6F77               	movwf	DATAEE_WriteByte_Platform@data& (0+255),b
  5033  000BE0  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  5034  000BE4                     l20128:
  5035                           
  5036                           ;../app/app_src/application.c: 1856:     set_parity(i);
  5037  000BE4  0100               	movlb	0	; force () banked
  5038  000BE6  51B3               	movf	bootLoadApplication@i& (0+255),w,b
  5039  000BE8  EC75  F04E         	call	_set_parity
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;../app/app_src/application.c: 1860:     i = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1);
  5043  000BEC  0E00               	movlw	0
  5044  000BEE  0100               	movlb	0	; force () banked
  5045  000BF0  6F76               	movwf	(DATAEE_ReadByte_Platform@addr+1)& (0+255),b
  5046  000BF2  0E21               	movlw	33
  5047  000BF4  6F75               	movwf	DATAEE_ReadByte_Platform@addr& (0+255),b
  5048  000BF6  EC4B  F032         	call	_DATAEE_ReadByte_Platform	;wreg free
  5049  000BFA  0100               	movlb	0	; force () banked
  5050  000BFC  6FB3               	movwf	bootLoadApplication@i& (0+255),b
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;../app/app_src/application.c: 1861:     if(i > UART_PARITY_SENTINAL){
  5054  000BFE  0E04               	movlw	4
  5055  000C00  0100               	movlb	0	; force () banked
  5056  000C02  65B3               	cpfsgt	bootLoadApplication@i& (0+255),b
  5057  000C04  D00D               	goto	l20138
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;../app/app_src/application.c: 1862:         i = UART_BAUD_19200;
  5061  000C06  0E01               	movlw	1
  5062  000C08  0100               	movlb	0	; force () banked
  5063  000C0A  6FB3               	movwf	bootLoadApplication@i& (0+255),b
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;../app/app_src/application.c: 1863:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1,UART_BAUD_19200);
  5067  000C0C  0E00               	movlw	0
  5068  000C0E  0100               	movlb	0	; force () banked
  5069  000C10  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  5070  000C12  0E21               	movlw	33
  5071  000C14  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  5072  000C16  0E01               	movlw	1
  5073  000C18  0100               	movlb	0	; force () banked
  5074  000C1A  6F77               	movwf	DATAEE_WriteByte_Platform@data& (0+255),b
  5075  000C1C  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  5076  000C20                     l20138:
  5077                           
  5078                           ;../app/app_src/application.c: 1865:     set_uart_baud(i);
  5079  000C20  0100               	movlb	0	; force () banked
  5080  000C22  51B3               	movf	bootLoadApplication@i& (0+255),w,b
  5081  000C24  ECA7  F03A         	call	_set_uart_baud
  5082                           
  5083                           ;../app/app_src/application.c: 1866:     PHY_Get_Packet_Rssi_Threshold_Limits(&rssimax, 
      +                          &rssimin);
  5084  000C28  0EAE               	movlw	low bootLoadApplication@rssimax
  5085  000C2A  0100               	movlb	0	; force () banked
  5086  000C2C  6F71               	movwf	PHY_Get_Packet_Rssi_Threshold_Limits@max& (0+255),b
  5087  000C2E  0E00               	movlw	high bootLoadApplication@rssimax
  5088  000C30  6F72               	movwf	(PHY_Get_Packet_Rssi_Threshold_Limits@max+1)& (0+255),b
  5089  000C32  0EAF               	movlw	low bootLoadApplication@rssimin
  5090  000C34  0100               	movlb	0	; force () banked
  5091  000C36  6F73               	movwf	PHY_Get_Packet_Rssi_Threshold_Limits@min& (0+255),b
  5092  000C38  0E00               	movlw	high bootLoadApplication@rssimin
  5093  000C3A  6F74               	movwf	(PHY_Get_Packet_Rssi_Threshold_Limits@min+1)& (0+255),b
  5094  000C3C  EC22  F05C         	call	_PHY_Get_Packet_Rssi_Threshold_Limits	;wreg free
  5095                           
  5096                           ;../app/app_src/application.c: 1867:     temp1 = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1);
  5097  000C40  0E00               	movlw	0
  5098  000C42  0100               	movlb	0	; force () banked
  5099  000C44  6F76               	movwf	(DATAEE_ReadByte_Platform@addr+1)& (0+255),b
  5100  000C46  0E34               	movlw	52
  5101  000C48  6F75               	movwf	DATAEE_ReadByte_Platform@addr& (0+255),b
  5102  000C4A  EC4B  F032         	call	_DATAEE_ReadByte_Platform	;wreg free
  5103  000C4E  0100               	movlb	0	; force () banked
  5104  000C50  6FB2               	movwf	bootLoadApplication@temp1& (0+255),b
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;../app/app_src/application.c: 1868:     if((temp1 < rssimin) || (temp1 > rssimax)){
  5108  000C52  0100               	movlb	0	; force () banked
  5109  000C54  51B2               	movf	bootLoadApplication@temp1& (0+255),w,b
  5110  000C56  0A80               	xorlw	128
  5111  000C58  0100               	movlb	0	; force () banked
  5112  000C5A  6FA8               	movwf	??_bootLoadApplication& (0+255),b
  5113  000C5C  0100               	movlb	0	; force () banked
  5114  000C5E  51AF               	movf	bootLoadApplication@rssimin& (0+255),w,b
  5115  000C60  0A80               	xorlw	128
  5116  000C62  0100               	movlb	0	; force () banked
  5117  000C64  5DA8               	subwf	??_bootLoadApplication& (0+255),w,b
  5118  000C66  A0D8               	btfss	status,0,c
  5119  000C68  D00C               	goto	u18900
  5120                           
  5121                           ; BSR set to: 0
  5122  000C6A  0100               	movlb	0	; force () banked
  5123  000C6C  51AE               	movf	bootLoadApplication@rssimax& (0+255),w,b
  5124  000C6E  0A80               	xorlw	128
  5125  000C70  0100               	movlb	0	; force () banked
  5126  000C72  6FA8               	movwf	??_bootLoadApplication& (0+255),b
  5127  000C74  0100               	movlb	0	; force () banked
  5128  000C76  51B2               	movf	bootLoadApplication@temp1& (0+255),w,b
  5129  000C78  0A80               	xorlw	128
  5130  000C7A  0100               	movlb	0	; force () banked
  5131  000C7C  5DA8               	subwf	??_bootLoadApplication& (0+255),w,b
  5132  000C7E  B0D8               	btfsc	status,0,c
  5133  000C80  D00B               	goto	l20150
  5134  000C82                     u18900:
  5135                           
  5136                           ; BSR set to: 0
  5137                           ;../app/app_src/application.c: 1869:         temp1 = rssimin;
  5138  000C82  C0AF  F0B2         	movff	bootLoadApplication@rssimin,bootLoadApplication@temp1
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;../app/app_src/application.c: 1870:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1, temp1);
  5142  000C86  0E00               	movlw	0
  5143  000C88  0100               	movlb	0	; force () banked
  5144  000C8A  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  5145  000C8C  0E34               	movlw	52
  5146  000C8E  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  5147  000C90  C0B2  F077         	movff	bootLoadApplication@temp1,DATAEE_WriteByte_Platform@data
  5148  000C94  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  5149  000C98                     l20150:
  5150                           
  5151                           ;../app/app_src/application.c: 1872:     PHY_Set_Packet_Rssi_Threshold(temp1);
  5152  000C98  0100               	movlb	0	; force () banked
  5153  000C9A  51B2               	movf	bootLoadApplication@temp1& (0+255),w,b
  5154  000C9C  EC7A  F05E         	call	_PHY_Set_Packet_Rssi_Threshold
  5155                           
  5156                           ;../app/app_src/application.c: 1875:     mcast_id = (DATAEE_ReadByte_Platform(0 + 0 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1) << 8) |
  5157  000CA0  0E00               	movlw	0
  5158  000CA2  0100               	movlb	0	; force () banked
  5159  000CA4  6F76               	movwf	(DATAEE_ReadByte_Platform@addr+1)& (0+255),b
  5160  000CA6  0E35               	movlw	53
  5161  000CA8  6F75               	movwf	DATAEE_ReadByte_Platform@addr& (0+255),b
  5162  000CAA  EC4B  F032         	call	_DATAEE_ReadByte_Platform	;wreg free
  5163  000CAE  0100               	movlb	0	; force () banked
  5164  000CB0  6FA8               	movwf	??_bootLoadApplication& (0+255),b
  5165  000CB2  51A8               	movf	??_bootLoadApplication& (0+255),w,b
  5166  000CB4  6FAA               	movwf	(??_bootLoadApplication+2)& (0+255),b
  5167  000CB6  6BA9               	clrf	(??_bootLoadApplication+1)& (0+255),b
  5168  000CB8  0E00               	movlw	0
  5169  000CBA  0100               	movlb	0	; force () banked
  5170  000CBC  6F76               	movwf	(DATAEE_ReadByte_Platform@addr+1)& (0+255),b
  5171  000CBE  0E36               	movlw	54
  5172  000CC0  6F75               	movwf	DATAEE_ReadByte_Platform@addr& (0+255),b
  5173  000CC2  EC4B  F032         	call	_DATAEE_ReadByte_Platform	;wreg free
  5174  000CC6  0100               	movlb	0	; force () banked
  5175  000CC8  6FAB               	movwf	(??_bootLoadApplication+3)& (0+255),b
  5176  000CCA  51AB               	movf	(??_bootLoadApplication+3)& (0+255),w,b
  5177  000CCC  11A9               	iorwf	(??_bootLoadApplication+1)& (0+255),w,b
  5178  000CCE  0102               	movlb	2	; force () banked
  5179  000CD0  6F50               	movwf	_mcast_id& (0+255),b
  5180  000CD2  0100               	movlb	0	; force () banked
  5181  000CD4  51AA               	movf	(??_bootLoadApplication+2)& (0+255),w,b
  5182  000CD6  0102               	movlb	2	; force () banked
  5183  000CD8  6F51               	movwf	(_mcast_id+1)& (0+255),b
  5184                           
  5185                           ; BSR set to: 2
  5186                           ;../app/app_src/application.c: 1877:     NWK_GroupAdd(mcast_id);
  5187  000CDA  C250  F078         	movff	_mcast_id,NWK_GroupAdd@group
  5188  000CDE  C251  F079         	movff	_mcast_id+1,NWK_GroupAdd@group+1
  5189  000CE2  ECC2  F05D         	call	_NWK_GroupAdd	;wreg free
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;../app/app_src/application.c: 1880:     mb_rtu_addr = DATAEE_ReadByte_Platform(0 + 0 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1);
  5193  000CE6  0E00               	movlw	0
  5194  000CE8  0100               	movlb	0	; force () banked
  5195  000CEA  6F76               	movwf	(DATAEE_ReadByte_Platform@addr+1)& (0+255),b
  5196  000CEC  0E23               	movlw	35
  5197  000CEE  6F75               	movwf	DATAEE_ReadByte_Platform@addr& (0+255),b
  5198  000CF0  EC4B  F032         	call	_DATAEE_ReadByte_Platform	;wreg free
  5199  000CF4  0100               	movlb	0	; force () banked
  5200  000CF6  6FE9               	movwf	_mb_rtu_addr& (0+255),b
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;../app/app_src/application.c: 1881:     if((mb_rtu_addr < 1) || (mb_rtu_addr > 247)){
  5204  000CF8  0100               	movlb	0	; force () banked
  5205  000CFA  51E9               	movf	_mb_rtu_addr& (0+255),w,b
  5206  000CFC  B4D8               	btfsc	status,2,c
  5207  000CFE  D004               	goto	u18920
  5208                           
  5209                           ; BSR set to: 0
  5210  000D00  0EF7               	movlw	247
  5211  000D02  0100               	movlb	0	; force () banked
  5212  000D04  65E9               	cpfsgt	_mb_rtu_addr& (0+255),b
  5213  000D06  D00C               	goto	l20166
  5214  000D08                     u18920:
  5215                           
  5216                           ; BSR set to: 0
  5217                           ;../app/app_src/application.c: 1882:         mb_rtu_addr = 247;
  5218  000D08  0EF7               	movlw	247
  5219  000D0A  0100               	movlb	0	; force () banked
  5220  000D0C  6FE9               	movwf	_mb_rtu_addr& (0+255),b
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;../app/app_src/application.c: 1883:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, mb_rtu_addr);
  5224  000D0E  0E00               	movlw	0
  5225  000D10  0100               	movlb	0	; force () banked
  5226  000D12  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  5227  000D14  0E23               	movlw	35
  5228  000D16  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  5229  000D18  C0E9  F077         	movff	_mb_rtu_addr,DATAEE_WriteByte_Platform@data
  5230  000D1C  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  5231  000D20                     l20166:
  5232                           
  5233                           ;../app/app_src/application.c: 1886:     read_only_mb_regs[RO_SINK_ID] = (sinkAddr0 << 8
      +                          ) | (sinkAddr1);
  5234  000D20  0100               	movlb	0	; force () banked
  5235  000D22  51DF               	movf	_sinkAddr1& (0+255),w,b
  5236  000D24  C0E0  F0A8         	movff	_sinkAddr0,??_bootLoadApplication
  5237  000D28  0100               	movlb	0	; force () banked
  5238  000D2A  6BA9               	clrf	(??_bootLoadApplication+1)& (0+255),b
  5239  000D2C  C0A8  F0A9         	movff	??_bootLoadApplication,??_bootLoadApplication+1
  5240  000D30  6BA8               	clrf	??_bootLoadApplication& (0+255),b
  5241  000D32  11A8               	iorwf	??_bootLoadApplication& (0+255),w,b
  5242  000D34  0103               	movlb	3	; force () banked
  5243  000D36  6F5E               	movwf	(_read_only_mb_regs+14)& (0+255),b
  5244  000D38  0100               	movlb	0	; force () banked
  5245  000D3A  51A9               	movf	(??_bootLoadApplication+1)& (0+255),w,b
  5246  000D3C  0103               	movlb	3	; force () banked
  5247  000D3E  6F5F               	movwf	(_read_only_mb_regs+15)& (0+255),b
  5248                           
  5249                           ; BSR set to: 3
  5250                           ;../app/app_src/application.c: 1887:     read_only_mb_regs[RO_FW_VER] = FirmwareVersionM
      +                          ajor*100 +
  5251  000D40  0EB0               	movlw	low _FirmwareVersionMinor
  5252  000D42  6EF6               	movwf	tblptrl,c
  5253  000D44                     	if	1	;There is more than 1 active tblptr byte
  5254  000D44  0EFE               	movlw	high _FirmwareVersionMinor
  5255  000D46  6EF7               	movwf	tblptrh,c
  5256  000D48                     	endif
  5257  000D48                     	if	1	;There are 3 active tblptr bytes
  5258  000D48  0E00               	movlw	low (_FirmwareVersionMinor shr (0+16))
  5259  000D4A  6EF8               	movwf	tblptru,c
  5260  000D4C                     	endif
  5261  000D4C  0008               	tblrd		*
  5262  000D4E  006F FFD4  F0A8    	movff	tablat,??_bootLoadApplication
  5263  000D54  0EB1               	movlw	low _FirmwareVersionMajor
  5264  000D56  6EF6               	movwf	tblptrl,c
  5265  000D58                     	if	1	;There is more than 1 active tblptr byte
  5266  000D58  0EFE               	movlw	high _FirmwareVersionMajor
  5267  000D5A  6EF7               	movwf	tblptrh,c
  5268  000D5C                     	endif
  5269  000D5C                     	if	1	;There are 3 active tblptr bytes
  5270  000D5C  0E00               	movlw	low (_FirmwareVersionMajor shr (0+16))
  5271  000D5E  6EF8               	movwf	tblptru,c
  5272  000D60                     	endif
  5273  000D60  0008               	tblrd		*
  5274  000D62  50F5               	movf	tablat,w,c
  5275  000D64  0D64               	mullw	100
  5276  000D66  006F FFCC  F0A9    	movff	prodl,??_bootLoadApplication+1
  5277  000D6C  006F FFD0  F0AA    	movff	prodh,??_bootLoadApplication+2
  5278  000D72  0100               	movlb	0	; force () banked
  5279  000D74  51A8               	movf	??_bootLoadApplication& (0+255),w,b
  5280  000D76  25A9               	addwf	(??_bootLoadApplication+1)& (0+255),w,b
  5281  000D78  0103               	movlb	3	; force () banked
  5282  000D7A  6F60               	movwf	(_read_only_mb_regs+16)& (0+255),b
  5283  000D7C  0100               	movlb	0	; force () banked
  5284  000D7E  0E00               	movlw	0
  5285  000D80  21AA               	addwfc	(??_bootLoadApplication+2)& (0+255),w,b
  5286  000D82  0103               	movlb	3	; force () banked
  5287  000D84  6F61               	movwf	(_read_only_mb_regs+17)& (0+255),b
  5288                           
  5289                           ; BSR set to: 3
  5290                           ;../app/app_src/application.c: 1889:     read_only_mb_regs[RO_REGION] = NA;
  5291  000D86  0E00               	movlw	0
  5292  000D88  0103               	movlb	3	; force () banked
  5293  000D8A  6F63               	movwf	(_read_only_mb_regs+19)& (0+255),b
  5294  000D8C  0E01               	movlw	1
  5295  000D8E  6F62               	movwf	(_read_only_mb_regs+18)& (0+255),b
  5296                           
  5297                           ; BSR set to: 3
  5298                           ;../app/app_src/application.c: 1890:     read_only_mb_regs[RO_MODE] = PORTAbits.RA2? 0:1
      +                          ;
  5299  000D90  B4CA               	btfsc	202,2,c	;volatile
  5300  000D92  D002               	goto	u18930
  5301  000D94  0E01               	movlw	1
  5302  000D96  D001               	goto	u18940
  5303  000D98                     u18930:
  5304  000D98  0E00               	movlw	0
  5305  000D9A                     u18940:
  5306  000D9A  0103               	movlb	3	; force () banked
  5307  000D9C  6F64               	movwf	(_read_only_mb_regs+20)& (0+255),b
  5308  000D9E  6B65               	clrf	(_read_only_mb_regs+21)& (0+255),b
  5309                           
  5310                           ; BSR set to: 3
  5311                           ;../app/app_src/application.c: 1891:     read_only_mb_regs[RO_TX_MSG_ID] = 0xFFFF;
  5312  000DA0  0103               	movlb	3	; force () banked
  5313  000DA2  6966               	setf	(_read_only_mb_regs+22)& (0+255),b
  5314  000DA4  6967               	setf	(_read_only_mb_regs+23)& (0+255),b
  5315                           
  5316                           ; BSR set to: 3
  5317                           ;../app/app_src/application.c: 1892:     read_only_mb_regs[RO_SADDR] = (currentAddr0 << 
      +                          8) | currentAddr1;
  5318  000DA6  0100               	movlb	0	; force () banked
  5319  000DA8  51EA               	movf	_currentAddr1& (0+255),w,b
  5320  000DAA  C0EB  F0A8         	movff	_currentAddr0,??_bootLoadApplication
  5321  000DAE  0100               	movlb	0	; force () banked
  5322  000DB0  6BA9               	clrf	(??_bootLoadApplication+1)& (0+255),b
  5323  000DB2  C0A8  F0A9         	movff	??_bootLoadApplication,??_bootLoadApplication+1
  5324  000DB6  6BA8               	clrf	??_bootLoadApplication& (0+255),b
  5325  000DB8  11A8               	iorwf	??_bootLoadApplication& (0+255),w,b
  5326  000DBA  0103               	movlb	3	; force () banked
  5327  000DBC  6F6C               	movwf	(_read_only_mb_regs+28)& (0+255),b
  5328  000DBE  0100               	movlb	0	; force () banked
  5329  000DC0  51A9               	movf	(??_bootLoadApplication+1)& (0+255),w,b
  5330  000DC2  0103               	movlb	3	; force () banked
  5331  000DC4  6F6D               	movwf	(_read_only_mb_regs+29)& (0+255),b
  5332                           
  5333                           ; BSR set to: 3
  5334                           ;../app/app_src/application.c: 1893:     read_only_mb_regs[RO_ADDR_DEBUG1] = 0xAA55;
  5335  000DC6  0EAA               	movlw	170
  5336  000DC8  0103               	movlb	3	; force () banked
  5337  000DCA  6F6F               	movwf	(_read_only_mb_regs+31)& (0+255),b
  5338  000DCC  0E55               	movlw	85
  5339  000DCE  6F6E               	movwf	(_read_only_mb_regs+30)& (0+255),b
  5340                           
  5341                           ; BSR set to: 3
  5342                           ;../app/app_src/application.c: 1894:     read_only_mb_regs[RO_ADDR_DEBUG2] = 0x55AA;
  5343  000DD0  0E55               	movlw	85
  5344  000DD2  0103               	movlb	3	; force () banked
  5345  000DD4  6F71               	movwf	(_read_only_mb_regs+33)& (0+255),b
  5346  000DD6  0EAA               	movlw	170
  5347  000DD8  6F70               	movwf	(_read_only_mb_regs+32)& (0+255),b
  5348                           
  5349                           ; BSR set to: 3
  5350                           ;../app/app_src/application.c: 1897:     read_write_mb_regs[RW_NET_ID] = currentNetID;
  5351  000DDA  C1FF  F272         	movff	_currentNetID,_read_write_mb_regs+2
  5352  000DDE  0102               	movlb	2	; force () banked
  5353  000DE0  6B73               	clrf	(_read_write_mb_regs+3)& (0+255),b
  5354                           
  5355                           ; BSR set to: 2
  5356                           ;../app/app_src/application.c: 1898:     read_write_mb_regs[RW_TX_POW] = TXPower;
  5357  000DE2  C0DC  F274         	movff	_TXPower,_read_write_mb_regs+4
  5358  000DE6  0102               	movlb	2	; force () banked
  5359  000DE8  6B75               	clrf	(_read_write_mb_regs+5)& (0+255),b
  5360                           
  5361                           ; BSR set to: 2
  5362                           ;../app/app_src/application.c: 1899:     read_write_mb_regs[RW_SF] = current_sf;
  5363  000DEA  C0DE  F276         	movff	_current_sf,_read_write_mb_regs+6
  5364  000DEE  0102               	movlb	2	; force () banked
  5365  000DF0  6B77               	clrf	(_read_write_mb_regs+7)& (0+255),b
  5366                           
  5367                           ; BSR set to: 2
  5368                           ;../app/app_src/application.c: 1900:     read_write_mb_regs[RW_RF_CH] = channel;
  5369  000DF2  C0DD  F27C         	movff	_channel,_read_write_mb_regs+12
  5370  000DF6  0102               	movlb	2	; force () banked
  5371  000DF8  6B7D               	clrf	(_read_write_mb_regs+13)& (0+255),b
  5372                           
  5373                           ; BSR set to: 2
  5374                           ;../app/app_src/application.c: 1901:     read_write_mb_regs[RW_TARGET_RSSI] = -RSSITarge
      +                          t;
  5375  000DFA  C0E8  F0A8         	movff	_RSSITarget,??_bootLoadApplication
  5376  000DFE  0100               	movlb	0	; force () banked
  5377  000E00  6BA9               	clrf	(??_bootLoadApplication+1)& (0+255),b
  5378  000E02  BFA8               	btfsc	??_bootLoadApplication& (0+255),7,b
  5379  000E04  07A9               	decf	(??_bootLoadApplication+1)& (0+255),f,b
  5380  000E06  1FA8               	comf	??_bootLoadApplication& (0+255),f,b
  5381  000E08  1FA9               	comf	(??_bootLoadApplication+1)& (0+255),f,b
  5382  000E0A  4BA8               	infsnz	??_bootLoadApplication& (0+255),f,b
  5383  000E0C  2BA9               	incf	(??_bootLoadApplication+1)& (0+255),f,b
  5384  000E0E  C0A8  F278         	movff	??_bootLoadApplication,_read_write_mb_regs+8
  5385  000E12  C0A9  F279         	movff	??_bootLoadApplication+1,_read_write_mb_regs+9
  5386                           
  5387                           ; BSR set to: 0
  5388                           ;../app/app_src/application.c: 1902:     read_write_mb_regs[RW_MESH_HOPS] = 0;
  5389  000E16  0E00               	movlw	0
  5390  000E18  0102               	movlb	2	; force () banked
  5391  000E1A  6F7F               	movwf	(_read_write_mb_regs+15)& (0+255),b
  5392  000E1C  0E00               	movlw	0
  5393  000E1E  6F7E               	movwf	(_read_write_mb_regs+14)& (0+255),b
  5394                           
  5395                           ; BSR set to: 2
  5396                           ;../app/app_src/application.c: 1903:     read_write_mb_regs[RW_MBADDR] = mb_rtu_addr;
  5397  000E20  C0E9  F282         	movff	_mb_rtu_addr,_read_write_mb_regs+18
  5398  000E24  0102               	movlb	2	; force () banked
  5399  000E26  6B83               	clrf	(_read_write_mb_regs+19)& (0+255),b
  5400                           
  5401                           ; BSR set to: 2
  5402                           ;../app/app_src/application.c: 1904:     read_write_mb_regs[RW_MB_BAUD_RATE] = uart_baud
      +                          _rate;
  5403  000E28  C1F2  F288         	movff	_uart_baud_rate,_read_write_mb_regs+24
  5404  000E2C  0102               	movlb	2	; force () banked
  5405  000E2E  6B89               	clrf	(_read_write_mb_regs+25)& (0+255),b
  5406                           
  5407                           ; BSR set to: 2
  5408                           ;../app/app_src/application.c: 1905:     read_write_mb_regs[RW_MB_PARITY] = curent_parit
      +                          y;
  5409  000E30  C0E1  F28A         	movff	_curent_parity,_read_write_mb_regs+26
  5410  000E34  0102               	movlb	2	; force () banked
  5411  000E36  6B8B               	clrf	(_read_write_mb_regs+27)& (0+255),b
  5412                           
  5413                           ; BSR set to: 2
  5414                           ;../app/app_src/application.c: 1906:     read_write_mb_regs[RW_MB_RSSI_ACCEPT] = PHY_Get
      +                          _Packet_Rssi_Threshold();
  5415  000E38  ECA9  F05E         	call	_PHY_Get_Packet_Rssi_Threshold	;wreg free
  5416  000E3C  0102               	movlb	2	; force () banked
  5417  000E3E  6F90               	movwf	(_read_write_mb_regs+32)& (0+255),b
  5418  000E40  6B91               	clrf	(_read_write_mb_regs+33)& (0+255),b
  5419  000E42  BF90               	btfsc	(_read_write_mb_regs+32)& (0+255),7,b
  5420  000E44  0791               	decf	(_read_write_mb_regs+33)& (0+255),f,b
  5421                           
  5422                           ; BSR set to: 2
  5423                           ;../app/app_src/application.c: 1907:     for(i = 0; i < 10; i++){
  5424  000E46  0E00               	movlw	0
  5425  000E48  0100               	movlb	0	; force () banked
  5426  000E4A  6FB3               	movwf	bootLoadApplication@i& (0+255),b
  5427  000E4C  D014               	goto	l20212
  5428  000E4E                     l20208:
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;../app/app_src/application.c: 1908:         read_write_mb_regs[RW_MB_MCASTID_1 + i] = 0
      +                          xFFFF;
  5432  000E4E  0100               	movlb	0	; force () banked
  5433  000E50  51B3               	movf	bootLoadApplication@i& (0+255),w,b
  5434  000E52  0100               	movlb	0	; force () banked
  5435  000E54  6FA8               	movwf	??_bootLoadApplication& (0+255),b
  5436  000E56  6BA9               	clrf	(??_bootLoadApplication+1)& (0+255),b
  5437  000E58  90D8               	bcf	status,0,c
  5438  000E5A  37A8               	rlcf	??_bootLoadApplication& (0+255),f,b
  5439  000E5C  37A9               	rlcf	(??_bootLoadApplication+1)& (0+255),f,b
  5440  000E5E  0E98               	movlw	low (_read_write_mb_regs+40)
  5441  000E60  25A8               	addwf	??_bootLoadApplication& (0+255),w,b
  5442  000E62  6ED9               	movwf	fsr2l,c
  5443  000E64  0E02               	movlw	high (_read_write_mb_regs+40)
  5444  000E66  21A9               	addwfc	(??_bootLoadApplication+1)& (0+255),w,b
  5445  000E68  6EDA               	movwf	fsr2h,c
  5446  000E6A  0EFF               	movlw	255
  5447  000E6C  6EDE               	movwf	postinc2,c
  5448  000E6E  0EFF               	movlw	255
  5449  000E70  6EDD               	movwf	postdec2,c
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;../app/app_src/application.c: 1909:     }
  5453  000E72  0100               	movlb	0	; force () banked
  5454  000E74  2BB3               	incf	bootLoadApplication@i& (0+255),f,b
  5455  000E76                     l20212:
  5456                           
  5457                           ; BSR set to: 0
  5458  000E76  0E09               	movlw	9
  5459  000E78  0100               	movlb	0	; force () banked
  5460  000E7A  65B3               	cpfsgt	bootLoadApplication@i& (0+255),b
  5461  000E7C  D7E8               	goto	l20208
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;../app/app_src/application.c: 1912:     TMR3_SetInterruptHandler(prvvTIMERExpiredISR);
  5465  000E7E  0E46               	movlw	low _prvvTIMERExpiredISR
  5466  000E80  0100               	movlb	0	; force () banked
  5467  000E82  6F71               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
  5468  000E84  0EBA               	movlw	high _prvvTIMERExpiredISR
  5469  000E86  6F72               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5470  000E88  EC98  F05E         	call	_TMR3_SetInterruptHandler	;wreg free
  5471                           
  5472                           ;../app/app_src/application.c: 1913:     eMBInit( MB_RTU, mb_rtu_addr, 0, current_baud_r
      +                          ate, curent_parity);
  5473  000E8C  C0E9  F09D         	movff	_mb_rtu_addr,eMBInit@ucSlaveAddress
  5474  000E90  0E00               	movlw	0
  5475  000E92  0100               	movlb	0	; force () banked
  5476  000E94  6F9E               	movwf	eMBInit@ucPort& (0+255),b
  5477  000E96  0102               	movlb	2	; force () banked
  5478  000E98  512B               	movf	_current_baud_rate& (0+255),w,b
  5479  000E9A  0100               	movlb	0	; force () banked
  5480  000E9C  6F9F               	movwf	eMBInit@ulBaudRate& (0+255),b
  5481  000E9E  0102               	movlb	2	; force () banked
  5482  000EA0  512C               	movf	(_current_baud_rate+1)& (0+255),w,b
  5483  000EA2  0100               	movlb	0	; force () banked
  5484  000EA4  6FA0               	movwf	(eMBInit@ulBaudRate+1)& (0+255),b
  5485  000EA6  0102               	movlb	2	; force () banked
  5486  000EA8  512D               	movf	(_current_baud_rate+2)& (0+255),w,b
  5487  000EAA  0100               	movlb	0	; force () banked
  5488  000EAC  6FA1               	movwf	(eMBInit@ulBaudRate+2)& (0+255),b
  5489  000EAE  6BA2               	clrf	(eMBInit@ulBaudRate+3)& (0+255),b
  5490  000EB0  C0E1  F0A3         	movff	_curent_parity,eMBInit@eParity
  5491  000EB4  0E00               	movlw	0
  5492  000EB6  EC90  F03C         	call	_eMBInit
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;../app/app_src/application.c: 1914:     eMBEnable();
  5496  000EBA  ECC6  F058         	call	_eMBEnable	;wreg free
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;../app/app_src/application.c: 1917:     UART1_SetFramingErrorHandler(UART_error_handler
      +                          );
  5500  000EBE  0E74               	movlw	low _UART_error_handler
  5501  000EC0  0100               	movlb	0	; force () banked
  5502  000EC2  6F71               	movwf	UART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  5503  000EC4  0EB2               	movlw	high _UART_error_handler
  5504  000EC6  6F72               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  5505  000EC8  EC8E  F05E         	call	_UART1_SetFramingErrorHandler	;wreg free
  5506                           
  5507                           ;../app/app_src/application.c: 1918:     UART1_SetOverrunErrorHandler(UART_error_handler
      +                          );
  5508  000ECC  0E74               	movlw	low _UART_error_handler
  5509  000ECE  0100               	movlb	0	; force () banked
  5510  000ED0  6F71               	movwf	UART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  5511  000ED2  0EB2               	movlw	high _UART_error_handler
  5512  000ED4  6F72               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  5513  000ED6  EC89  F05E         	call	_UART1_SetOverrunErrorHandler	;wreg free
  5514                           
  5515                           ;../app/app_src/application.c: 1919:     UART1_SetErrorHandler(UART_error_handler);
  5516  000EDA  0E74               	movlw	low _UART_error_handler
  5517  000EDC  0100               	movlb	0	; force () banked
  5518  000EDE  6F71               	movwf	UART1_SetErrorHandler@interruptHandler& (0+255),b
  5519  000EE0  0EB2               	movlw	high _UART_error_handler
  5520  000EE2  6F72               	movwf	(UART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  5521  000EE4  EC93  F05E         	call	_UART1_SetErrorHandler	;wreg free
  5522                           
  5523                           ;../app/app_src/application.c: 1923:     for(uint8_t buf_id = 0; buf_id < 2; buf_id++){
  5524  000EE8  0E00               	movlw	0
  5525  000EEA  0100               	movlb	0	; force () banked
  5526  000EEC  6FB0               	movwf	bootLoadApplication@buf_id& (0+255),b
  5527  000EEE  D00C               	goto	l20236
  5528  000EF0                     l20232:
  5529                           
  5530                           ; BSR set to: 0
  5531                           ;../app/app_src/application.c: 1924:         tx_buffer[buf_id].free = 1;
  5532  000EF0  0100               	movlb	0	; force () banked
  5533  000EF2  51B0               	movf	bootLoadApplication@buf_id& (0+255),w,b
  5534  000EF4  0D84               	mullw	132
  5535  000EF6  0EC3               	movlw	low _tx_buffer
  5536  000EF8  24F3               	addwf	243,w,c
  5537  000EFA  6ED9               	movwf	fsr2l,c
  5538  000EFC  0E0E               	movlw	high _tx_buffer
  5539  000EFE  20F4               	addwfc	prodh,w,c
  5540  000F00  6EDA               	movwf	fsr2h,c
  5541  000F02  84DF               	bsf	indf2,2,c
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;../app/app_src/application.c: 1925:     }
  5545  000F04  0100               	movlb	0	; force () banked
  5546  000F06  2BB0               	incf	bootLoadApplication@buf_id& (0+255),f,b
  5547  000F08                     l20236:
  5548                           
  5549                           ; BSR set to: 0
  5550  000F08  0E01               	movlw	1
  5551  000F0A  0100               	movlb	0	; force () banked
  5552  000F0C  65B0               	cpfsgt	bootLoadApplication@buf_id& (0+255),b
  5553  000F0E  D7F0               	goto	l20232
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;../app/app_src/application.c: 1926:     for(uint8_t buf_id = 0; buf_id < 3; buf_id++){
  5557  000F10  0E00               	movlw	0
  5558  000F12  0100               	movlb	0	; force () banked
  5559  000F14  6FB1               	movwf	bootLoadApplication@buf_id_1205& (0+255),b
  5560  000F16  D00C               	goto	l20248
  5561  000F18                     l20244:
  5562                           
  5563                           ; BSR set to: 0
  5564                           ;../app/app_src/application.c: 1927:         rx_buffer[buf_id].free = 1;
  5565  000F18  0100               	movlb	0	; force () banked
  5566  000F1A  51B1               	movf	bootLoadApplication@buf_id_1205& (0+255),w,b
  5567  000F1C  0D7B               	mullw	123
  5568  000F1E  0E52               	movlw	low _rx_buffer
  5569  000F20  24F3               	addwf	243,w,c
  5570  000F22  6ED9               	movwf	fsr2l,c
  5571  000F24  0E0D               	movlw	high _rx_buffer
  5572  000F26  20F4               	addwfc	prodh,w,c
  5573  000F28  6EDA               	movwf	fsr2h,c
  5574  000F2A  80DF               	bsf	indf2,0,c
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;../app/app_src/application.c: 1928:     }
  5578  000F2C  0100               	movlb	0	; force () banked
  5579  000F2E  2BB1               	incf	bootLoadApplication@buf_id_1205& (0+255),f,b
  5580  000F30                     l20248:
  5581                           
  5582                           ; BSR set to: 0
  5583  000F30  0E02               	movlw	2
  5584  000F32  0100               	movlb	0	; force () banked
  5585  000F34  65B1               	cpfsgt	bootLoadApplication@buf_id_1205& (0+255),b
  5586  000F36  D7F0               	goto	l20244
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;../app/app_src/application.c: 1929:     CircularBufferInit(&rx_buffer_queue_context,&rx
      +                          _buffer_queue,
  5590  000F38  0ED6               	movlw	low _rx_buffer_queue_context
  5591  000F3A  0100               	movlb	0	; force () banked
  5592  000F3C  6F71               	movwf	CircularBufferInit@ctx& (0+255),b
  5593  000F3E  0E02               	movlw	high _rx_buffer_queue_context
  5594  000F40  6F72               	movwf	(CircularBufferInit@ctx+1)& (0+255),b
  5595  000F42  0EE3               	movlw	low _rx_buffer_queue
  5596  000F44  0100               	movlb	0	; force () banked
  5597  000F46  6F73               	movwf	CircularBufferInit@buf& (0+255),b
  5598  000F48  0E02               	movlw	high _rx_buffer_queue
  5599  000F4A  6F74               	movwf	(CircularBufferInit@buf+1)& (0+255),b
  5600  000F4C  0E00               	movlw	0
  5601  000F4E  0100               	movlb	0	; force () banked
  5602  000F50  6F76               	movwf	(CircularBufferInit@buf_size+1)& (0+255),b
  5603  000F52  0E03               	movlw	3
  5604  000F54  6F75               	movwf	CircularBufferInit@buf_size& (0+255),b
  5605  000F56  0E00               	movlw	0
  5606  000F58  0100               	movlb	0	; force () banked
  5607  000F5A  6F78               	movwf	(CircularBufferInit@element_size+1)& (0+255),b
  5608  000F5C  0E01               	movlw	1
  5609  000F5E  6F77               	movwf	CircularBufferInit@element_size& (0+255),b
  5610  000F60  EC9E  F046         	call	_CircularBufferInit	;wreg free
  5611                           
  5612                           ;../app/app_src/application.c: 1931:     CircularBufferInit(&msg_ack_queue_context,&msg_
      +                          ack_queue,
  5613  000F64  0EBF               	movlw	low _msg_ack_queue_context
  5614  000F66  0100               	movlb	0	; force () banked
  5615  000F68  6F71               	movwf	CircularBufferInit@ctx& (0+255),b
  5616  000F6A  0E03               	movlw	high _msg_ack_queue_context
  5617  000F6C  6F72               	movwf	(CircularBufferInit@ctx+1)& (0+255),b
  5618  000F6E  0ED4               	movlw	low _msg_ack_queue
  5619  000F70  0100               	movlb	0	; force () banked
  5620  000F72  6F73               	movwf	CircularBufferInit@buf& (0+255),b
  5621  000F74  0E04               	movlw	high _msg_ack_queue
  5622  000F76  6F74               	movwf	(CircularBufferInit@buf+1)& (0+255),b
  5623  000F78  0E00               	movlw	0
  5624  000F7A  0100               	movlb	0	; force () banked
  5625  000F7C  6F76               	movwf	(CircularBufferInit@buf_size+1)& (0+255),b
  5626  000F7E  0E20               	movlw	32
  5627  000F80  6F75               	movwf	CircularBufferInit@buf_size& (0+255),b
  5628  000F82  0E00               	movlw	0
  5629  000F84  0100               	movlb	0	; force () banked
  5630  000F86  6F78               	movwf	(CircularBufferInit@element_size+1)& (0+255),b
  5631  000F88  0E04               	movlw	4
  5632  000F8A  6F77               	movwf	CircularBufferInit@element_size& (0+255),b
  5633  000F8C  EC9E  F046         	call	_CircularBufferInit	;wreg free
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;../app/app_src/application.c: 1933:     NWK_SetAddr((currentAddr0 << 8) | currentAddr1)
      +                          ;
  5637  000F90  0100               	movlb	0	; force () banked
  5638  000F92  51EB               	movf	_currentAddr0& (0+255),w,b
  5639  000F94  0100               	movlb	0	; force () banked
  5640  000F96  6FA8               	movwf	??_bootLoadApplication& (0+255),b
  5641  000F98  0100               	movlb	0	; force () banked
  5642  000F9A  51EA               	movf	_currentAddr1& (0+255),w,b
  5643  000F9C  0100               	movlb	0	; force () banked
  5644  000F9E  6F73               	movwf	NWK_SetAddr@addr& (0+255),b
  5645  000FA0  C0A8  F074         	movff	??_bootLoadApplication,NWK_SetAddr@addr+1
  5646  000FA4  ECAC  F05D         	call	_NWK_SetAddr	;wreg free
  5647                           
  5648                           ;../app/app_src/application.c: 1934:     NWK_SetPanId(pan_id);
  5649  000FA8  C1DB  F073         	movff	_pan_id,NWK_SetPanId@panId
  5650  000FAC  C1DC  F074         	movff	_pan_id+1,NWK_SetPanId@panId+1
  5651  000FB0  ECA1  F05D         	call	_NWK_SetPanId	;wreg free
  5652                           
  5653                           ;../app/app_src/application.c: 1935:     NWK_OpenEndpoint(DATA_EP, appDataInd);
  5654  000FB4  0E2A               	movlw	low _appDataInd
  5655  000FB6  0100               	movlb	0	; force () banked
  5656  000FB8  6F71               	movwf	NWK_OpenEndpoint@handler& (0+255),b
  5657  000FBA  0E5E               	movlw	high _appDataInd
  5658  000FBC  6F72               	movwf	(NWK_OpenEndpoint@handler+1)& (0+255),b
  5659  000FBE  0E01               	movlw	1
  5660  000FC0  ECFF  F05B         	call	_NWK_OpenEndpoint
  5661                           
  5662                           ; BSR set to: 0
  5663                           ;../app/app_src/application.c: 1936:     NWK_OpenEndpoint(MANAGEMENT_EP, appManagementEp
      +                          );
  5664  000FC4  0E64               	movlw	low _appManagementEp
  5665  000FC6  0100               	movlb	0	; force () banked
  5666  000FC8  6F71               	movwf	NWK_OpenEndpoint@handler& (0+255),b
  5667  000FCA  0E7F               	movlw	high _appManagementEp
  5668  000FCC  6F72               	movwf	(NWK_OpenEndpoint@handler+1)& (0+255),b
  5669  000FCE  0E02               	movlw	2
  5670  000FD0  ECFF  F05B         	call	_NWK_OpenEndpoint
  5671                           
  5672                           ; BSR set to: 0
  5673                           ;../app/app_src/application.c: 1938:     TMR0_SetInterruptHandler(Timer0Handler);
  5674  000FD4  0E70               	movlw	low _Timer0Handler
  5675  000FD6  0100               	movlb	0	; force () banked
  5676  000FD8  6F71               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
  5677  000FDA  0E9D               	movlw	high _Timer0Handler
  5678  000FDC  6F72               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5679  000FDE  EC9D  F05E         	call	_TMR0_SetInterruptHandler	;wreg free
  5680  000FE2  0012               	return		;funcret
  5681  000FE4                     __end_of_bootLoadApplication:
  5682                           	callstack 0
  5683                           
  5684 ;; *************** function _loadMACAddr *****************
  5685 ;; Defined at:
  5686 ;;		line 1751 in file "../app/app_src/application.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;		None
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;  i               1   30[BANK0 ] unsigned char 
  5691 ;;  i               1   29[BANK0 ] unsigned char 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  1    wreg      void 
  5694 ;; Registers used:
  5695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5696 ;; Tracked objects:
  5697 ;;		On entry : 3F/0
  5698 ;;		On exit  : 3F/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5702 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5703 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5704 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5705 ;;Total ram usage:       10 bytes
  5706 ;; Hardware stack levels used:    1
  5707 ;; Hardware stack levels required when called:   12
  5708 ;; This function calls:
  5709 ;;		_DIA_ReadByte
  5710 ;; This function is called by:
  5711 ;;		_bootLoadApplication
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           	psect	text2
  5716  00896A                     __ptext2:
  5717                           	callstack 0
  5718  00896A                     _loadMACAddr:
  5719                           	callstack 17
  5720                           
  5721                           ;../app/app_src/application.c: 1754:     for(uint8_t i = 0; i < sizeof(EUIDbyte);i++){
  5722                           
  5723                           ;incstack = 0
  5724  00896A  0E00               	movlw	0
  5725  00896C  0100               	movlb	0	; force () banked
  5726  00896E  6F7D               	movwf	loadMACAddr@i& (0+255),b
  5727  008970  D01B               	goto	l15934
  5728  008972                     l15930:
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;../app/app_src/application.c: 1755:         EUIDbyte[sizeof(EUIDbyte) - 1 - i] = (uint8
      +                          _t)DIA_ReadByte(0x3F0000 + i);
  5732  008972  0100               	movlb	0	; force () banked
  5733  008974  517D               	movf	loadMACAddr@i& (0+255),w,b
  5734  008976  08BE               	sublw	low (_EUIDbyte+11)
  5735  008978  6ED9               	movwf	fsr2l,c
  5736  00897A  0E00               	movlw	0
  5737  00897C  A0D8               	btfss	status,0,c
  5738  00897E  2AE8               	incf	wreg,f,c
  5739  008980  0803               	sublw	high (_EUIDbyte+11)
  5740  008982  6EDA               	movwf	fsr2h,c
  5741  008984  0E00               	movlw	0
  5742  008986  257D               	addwf	loadMACAddr@i& (0+255),w,b
  5743  008988  0100               	movlb	0	; force () banked
  5744  00898A  6F71               	movwf	DIA_ReadByte@flashAddr& (0+255),b
  5745  00898C  6B72               	clrf	(DIA_ReadByte@flashAddr+1)& (0+255),b
  5746  00898E  0E00               	movlw	0
  5747  008990  2372               	addwfc	(DIA_ReadByte@flashAddr+1)& (0+255),f,b
  5748  008992  6B73               	clrf	(DIA_ReadByte@flashAddr+2)& (0+255),b
  5749  008994  0E3F               	movlw	63
  5750  008996  2373               	addwfc	(DIA_ReadByte@flashAddr+2)& (0+255),f,b
  5751  008998  6B74               	clrf	(DIA_ReadByte@flashAddr+3)& (0+255),b
  5752  00899A  0E00               	movlw	0
  5753  00899C  2374               	addwfc	(DIA_ReadByte@flashAddr+3)& (0+255),f,b
  5754  00899E  EC11  F05C         	call	_DIA_ReadByte	;wreg free
  5755  0089A2  6EDF               	movwf	indf2,c
  5756                           
  5757                           ;../app/app_src/application.c: 1756:     }
  5758  0089A4  0100               	movlb	0	; force () banked
  5759  0089A6  2B7D               	incf	loadMACAddr@i& (0+255),f,b
  5760  0089A8                     l15934:
  5761                           
  5762                           ; BSR set to: 0
  5763  0089A8  0E0B               	movlw	11
  5764  0089AA  0100               	movlb	0	; force () banked
  5765  0089AC  657D               	cpfsgt	loadMACAddr@i& (0+255),b
  5766  0089AE  D7E1               	goto	l15930
  5767                           
  5768                           ; BSR set to: 0
  5769                           ;../app/app_src/application.c: 1765:     for(uint8_t i = 0; i < 6;i++){
  5770  0089B0  0E00               	movlw	0
  5771  0089B2  0100               	movlb	0	; force () banked
  5772  0089B4  6F7E               	movwf	loadMACAddr@i_1185& (0+255),b
  5773  0089B6  D039               	goto	l15946
  5774  0089B8                     l15942:
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;../app/app_src/application.c: 1766:         read_only_mb_regs[i + 1] = (EUIDbyte[i*2] <
      +                          < 8) | EUIDbyte[(i*2) + 1];
  5778  0089B8  0100               	movlb	0	; force () banked
  5779  0089BA  517E               	movf	loadMACAddr@i_1185& (0+255),w,b
  5780  0089BC  0100               	movlb	0	; force () banked
  5781  0089BE  6F75               	movwf	??_loadMACAddr& (0+255),b
  5782  0089C0  6B76               	clrf	(??_loadMACAddr+1)& (0+255),b
  5783  0089C2  90D8               	bcf	status,0,c
  5784  0089C4  3775               	rlcf	??_loadMACAddr& (0+255),f,b
  5785  0089C6  3776               	rlcf	(??_loadMACAddr+1)& (0+255),f,b
  5786  0089C8  0EB3               	movlw	low _EUIDbyte
  5787  0089CA  2575               	addwf	??_loadMACAddr& (0+255),w,b
  5788  0089CC  6ED9               	movwf	fsr2l,c
  5789  0089CE  0E03               	movlw	high _EUIDbyte
  5790  0089D0  2176               	addwfc	(??_loadMACAddr+1)& (0+255),w,b
  5791  0089D2  6EDA               	movwf	fsr2h,c
  5792  0089D4  50DF               	movf	indf2,w,c
  5793  0089D6  6F77               	movwf	(??_loadMACAddr+2)& (0+255),b
  5794  0089D8  5177               	movf	(??_loadMACAddr+2)& (0+255),w,b
  5795  0089DA  6F79               	movwf	(??_loadMACAddr+4)& (0+255),b
  5796  0089DC  6B78               	clrf	(??_loadMACAddr+3)& (0+255),b
  5797  0089DE  0100               	movlb	0	; force () banked
  5798  0089E0  517E               	movf	loadMACAddr@i_1185& (0+255),w,b
  5799  0089E2  0D02               	mullw	2
  5800  0089E4  0EB4               	movlw	low (_EUIDbyte+1)
  5801  0089E6  24F3               	addwf	243,w,c
  5802  0089E8  6ED9               	movwf	fsr2l,c
  5803  0089EA  0E03               	movlw	high (_EUIDbyte+1)
  5804  0089EC  20F4               	addwfc	prodh,w,c
  5805  0089EE  6EDA               	movwf	fsr2h,c
  5806  0089F0  50DF               	movf	indf2,w,c
  5807  0089F2  0100               	movlb	0	; force () banked
  5808  0089F4  6F7A               	movwf	(??_loadMACAddr+5)& (0+255),b
  5809  0089F6  517A               	movf	(??_loadMACAddr+5)& (0+255),w,b
  5810  0089F8  1378               	iorwf	(??_loadMACAddr+3)& (0+255),f,b
  5811  0089FA  0E00               	movlw	0
  5812  0089FC  1379               	iorwf	(??_loadMACAddr+4)& (0+255),f,b
  5813  0089FE  0100               	movlb	0	; force () banked
  5814  008A00  517E               	movf	loadMACAddr@i_1185& (0+255),w,b
  5815  008A02  0100               	movlb	0	; force () banked
  5816  008A04  6F7B               	movwf	(??_loadMACAddr+6)& (0+255),b
  5817  008A06  6B7C               	clrf	(??_loadMACAddr+7)& (0+255),b
  5818  008A08  90D8               	bcf	status,0,c
  5819  008A0A  377B               	rlcf	(??_loadMACAddr+6)& (0+255),f,b
  5820  008A0C  377C               	rlcf	(??_loadMACAddr+7)& (0+255),f,b
  5821  008A0E  0E52               	movlw	low (_read_only_mb_regs+2)
  5822  008A10  257B               	addwf	(??_loadMACAddr+6)& (0+255),w,b
  5823  008A12  6ED9               	movwf	fsr2l,c
  5824  008A14  0E03               	movlw	high (_read_only_mb_regs+2)
  5825  008A16  217C               	addwfc	(??_loadMACAddr+7)& (0+255),w,b
  5826  008A18  6EDA               	movwf	fsr2h,c
  5827  008A1A  0060  F1E3  FFDE   	movff	??_loadMACAddr+3,postinc2
  5828  008A20  0060  F1E7  FFDD   	movff	??_loadMACAddr+4,postdec2
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;../app/app_src/application.c: 1767:     }
  5832  008A26  0100               	movlb	0	; force () banked
  5833  008A28  2B7E               	incf	loadMACAddr@i_1185& (0+255),f,b
  5834  008A2A                     l15946:
  5835                           
  5836                           ; BSR set to: 0
  5837  008A2A  0E05               	movlw	5
  5838  008A2C  0100               	movlb	0	; force () banked
  5839  008A2E  657E               	cpfsgt	loadMACAddr@i_1185& (0+255),b
  5840  008A30  D7C3               	goto	l15942
  5841  008A32  0012               	return	
  5842  008A34                     __end_of_loadMACAddr:
  5843                           	callstack 0
  5844                           
  5845 ;; *************** function _DIA_ReadByte *****************
  5846 ;; Defined at:
  5847 ;;		line 212 in file "mcc_generated_files/memory.c"
  5848 ;; Parameters:    Size  Location     Type
  5849 ;;  flashAddr       4   17[BANK0 ] unsigned long 
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;		None
  5852 ;; Return value:  Size  Location     Type
  5853 ;;                  1    wreg      unsigned char 
  5854 ;; Registers used:
  5855 ;;		wreg, status,2
  5856 ;; Tracked objects:
  5857 ;;		On entry : 3F/0
  5858 ;;		On exit  : 0/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5861 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5864 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5865 ;;Total ram usage:        4 bytes
  5866 ;; Hardware stack levels used:    1
  5867 ;; Hardware stack levels required when called:   11
  5868 ;; This function calls:
  5869 ;;		Nothing
  5870 ;; This function is called by:
  5871 ;;		_loadMACAddr
  5872 ;; This function uses a non-reentrant model
  5873 ;;
  5874                           
  5875                           	psect	text3
  5876  00B822                     __ptext3:
  5877                           	callstack 0
  5878  00B822                     _DIA_ReadByte:
  5879                           	callstack 17
  5880                           
  5881                           ;mcc_generated_files/memory.c: 212: uint8_t DIA_ReadByte(uint32_t flashAddr);mcc_generat
      +                          ed_files/memory.c: 213: {;mcc_generated_files/memory.c: 214:  NVMCON1bits.NVMREG = 1;
  5882                           
  5883                           ; BSR set to: 0
  5884                           ;incstack = 0
  5885  00B822  0139               	movlb	57	; force () banked
  5886  00B824  51E5               	movf	229,w,b	;volsfr
  5887  00B826  0B3F               	andlw	-193
  5888  00B828  0940               	iorlw	64
  5889  00B82A  6FE5               	movwf	229,b	;volsfr
  5890                           
  5891                           ; BSR set to: 57
  5892                           ;mcc_generated_files/memory.c: 215:     TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 
      +                          16);
  5893  00B82C  0060  F1CF  FFF8   	movff	DIA_ReadByte@flashAddr+2,tblptru	;volatile
  5894                           
  5895                           ; BSR set to: 57
  5896                           ;mcc_generated_files/memory.c: 216:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8
      +                          );
  5897  00B832  0060  F1CB  FFF7   	movff	DIA_ReadByte@flashAddr+1,tblptrh	;volatile
  5898                           
  5899                           ; BSR set to: 57
  5900                           ;mcc_generated_files/memory.c: 217:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
  5901  00B838  0060  F1C7  FFF6   	movff	DIA_ReadByte@flashAddr,tblptrl	;volatile
  5902  00B83E  0008               	tblrd		*	;# 
  5903                           
  5904                           ;mcc_generated_files/memory.c: 221:     return (TABLAT);
  5905  00B840  50F5               	movf	245,w,c	;volatile
  5906  00B842  0012               	return		;funcret
  5907  00B844                     __end_of_DIA_ReadByte:
  5908                           	callstack 0
  5909                           
  5910 ;; *************** function _ledInit *****************
  5911 ;; Defined at:
  5912 ;;		line 28 in file "../app/app_src/led.c"
  5913 ;; Parameters:    Size  Location     Type
  5914 ;;		None
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;  i               1   56[BANK0 ] unsigned char 
  5917 ;;  i               1   55[BANK0 ] unsigned char 
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  1    wreg      void 
  5920 ;; Registers used:
  5921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 3F/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5928 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;Total ram usage:        2 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; Hardware stack levels required when called:   14
  5934 ;; This function calls:
  5935 ;;		_CircularBufferInit
  5936 ;;		_queueLedEvent
  5937 ;; This function is called by:
  5938 ;;		_bootLoadApplication
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text4
  5943  007646                     __ptext4:
  5944                           	callstack 0
  5945  007646                     _ledInit:
  5946                           	callstack 15
  5947                           
  5948                           ;../app/app_src/led.c: 32:     CircularBufferInit(&ledtasksbuf,&ledqueue,
  5949                           
  5950                           ;incstack = 0
  5951  007646  0ECC               	movlw	low _ledtasksbuf
  5952  007648  0100               	movlb	0	; force () banked
  5953  00764A  6F71               	movwf	CircularBufferInit@ctx& (0+255),b
  5954  00764C  0E02               	movlw	high _ledtasksbuf
  5955  00764E  6F72               	movwf	(CircularBufferInit@ctx+1)& (0+255),b
  5956  007650  0E80               	movlw	low _ledqueue
  5957  007652  0100               	movlb	0	; force () banked
  5958  007654  6F73               	movwf	CircularBufferInit@buf& (0+255),b
  5959  007656  0E07               	movlw	high _ledqueue
  5960  007658  6F74               	movwf	(CircularBufferInit@buf+1)& (0+255),b
  5961  00765A  0E00               	movlw	0
  5962  00765C  0100               	movlb	0	; force () banked
  5963  00765E  6F76               	movwf	(CircularBufferInit@buf_size+1)& (0+255),b
  5964  007660  0E60               	movlw	96
  5965  007662  6F75               	movwf	CircularBufferInit@buf_size& (0+255),b
  5966  007664  0E00               	movlw	0
  5967  007666  0100               	movlb	0	; force () banked
  5968  007668  6F78               	movwf	(CircularBufferInit@element_size+1)& (0+255),b
  5969  00766A  0E03               	movlw	3
  5970  00766C  6F77               	movwf	CircularBufferInit@element_size& (0+255),b
  5971  00766E  EC9E  F046         	call	_CircularBufferInit	;wreg free
  5972                           
  5973                           ; BSR set to: 0
  5974                           ;../app/app_src/led.c: 37:     (void)queueLedEvent(0,2000);
  5975  007672  0E07               	movlw	7
  5976  007674  0100               	movlb	0	; force () banked
  5977  007676  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
  5978  007678  0ED0               	movlw	208
  5979  00767A  6F90               	movwf	queueLedEvent@duration& (0+255),b
  5980  00767C  0E00               	movlw	0
  5981  00767E  EC88  F054         	call	_queueLedEvent
  5982                           
  5983                           ; BSR set to: 0
  5984                           ;../app/app_src/led.c: 40:     for(uint8_t i = 0; i < FirmwareVersionMajor; i++)
  5985  007682  0E00               	movlw	0
  5986  007684  0100               	movlb	0	; force () banked
  5987  007686  6F97               	movwf	ledInit@i& (0+255),b
  5988  007688  D012               	goto	l19728
  5989  00768A                     l19724:
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;../app/app_src/led.c: 41:     {;../app/app_src/led.c: 42:         (void)queueLedEvent(1
      +                          ,250);
  5993  00768A  0E00               	movlw	0
  5994  00768C  0100               	movlb	0	; force () banked
  5995  00768E  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
  5996  007690  0EFA               	movlw	250
  5997  007692  6F90               	movwf	queueLedEvent@duration& (0+255),b
  5998  007694  0E01               	movlw	1
  5999  007696  EC88  F054         	call	_queueLedEvent
  6000                           
  6001                           ;../app/app_src/led.c: 43:         (void)queueLedEvent(0,250);
  6002  00769A  0E00               	movlw	0
  6003  00769C  0100               	movlb	0	; force () banked
  6004  00769E  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
  6005  0076A0  0EFA               	movlw	250
  6006  0076A2  6F90               	movwf	queueLedEvent@duration& (0+255),b
  6007  0076A4  0E00               	movlw	0
  6008  0076A6  EC88  F054         	call	_queueLedEvent
  6009                           
  6010                           ; BSR set to: 0
  6011                           ;../app/app_src/led.c: 44:     }
  6012  0076AA  0100               	movlb	0	; force () banked
  6013  0076AC  2B97               	incf	ledInit@i& (0+255),f,b
  6014  0076AE                     l19728:
  6015                           
  6016                           ; BSR set to: 0
  6017  0076AE  0EB1               	movlw	low _FirmwareVersionMajor
  6018  0076B0  6EF6               	movwf	tblptrl,c
  6019  0076B2                     	if	1	;There is more than 1 active tblptr byte
  6020  0076B2  0EFE               	movlw	high _FirmwareVersionMajor
  6021  0076B4  6EF7               	movwf	tblptrh,c
  6022  0076B6                     	endif
  6023  0076B6                     	if	1	;There are 3 active tblptr bytes
  6024  0076B6  0E00               	movlw	low (_FirmwareVersionMajor shr (0+16))
  6025  0076B8  6EF8               	movwf	tblptru,c
  6026  0076BA                     	endif
  6027  0076BA  0009               	tblrd		*+
  6028  0076BC  50F5               	movf	tablat,w,c
  6029  0076BE  0100               	movlb	0	; force () banked
  6030  0076C0  5D97               	subwf	ledInit@i& (0+255),w,b
  6031  0076C2  A0D8               	btfss	status,0,c
  6032  0076C4  D7E2               	goto	l19724
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;../app/app_src/led.c: 46:     (void)queueLedEvent(0,1000);
  6036  0076C6  0E03               	movlw	3
  6037  0076C8  0100               	movlb	0	; force () banked
  6038  0076CA  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
  6039  0076CC  0EE8               	movlw	232
  6040  0076CE  6F90               	movwf	queueLedEvent@duration& (0+255),b
  6041  0076D0  0E00               	movlw	0
  6042  0076D2  EC88  F054         	call	_queueLedEvent
  6043                           
  6044                           ; BSR set to: 0
  6045                           ;../app/app_src/led.c: 48:     for(uint8_t i = 0; i < FirmwareVersionMinor; i++)
  6046  0076D6  0E00               	movlw	0
  6047  0076D8  0100               	movlb	0	; force () banked
  6048  0076DA  6F98               	movwf	ledInit@i_1801& (0+255),b
  6049  0076DC  D012               	goto	l19742
  6050  0076DE                     l19738:
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;../app/app_src/led.c: 49:     {;../app/app_src/led.c: 50:         (void)queueLedEvent(1
      +                          ,250);
  6054  0076DE  0E00               	movlw	0
  6055  0076E0  0100               	movlb	0	; force () banked
  6056  0076E2  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
  6057  0076E4  0EFA               	movlw	250
  6058  0076E6  6F90               	movwf	queueLedEvent@duration& (0+255),b
  6059  0076E8  0E01               	movlw	1
  6060  0076EA  EC88  F054         	call	_queueLedEvent
  6061                           
  6062                           ;../app/app_src/led.c: 51:         (void)queueLedEvent(0,250);
  6063  0076EE  0E00               	movlw	0
  6064  0076F0  0100               	movlb	0	; force () banked
  6065  0076F2  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
  6066  0076F4  0EFA               	movlw	250
  6067  0076F6  6F90               	movwf	queueLedEvent@duration& (0+255),b
  6068  0076F8  0E00               	movlw	0
  6069  0076FA  EC88  F054         	call	_queueLedEvent
  6070                           
  6071                           ; BSR set to: 0
  6072                           ;../app/app_src/led.c: 52:     }
  6073  0076FE  0100               	movlb	0	; force () banked
  6074  007700  2B98               	incf	ledInit@i_1801& (0+255),f,b
  6075  007702                     l19742:
  6076                           
  6077                           ; BSR set to: 0
  6078  007702  0EB0               	movlw	low _FirmwareVersionMinor
  6079  007704  6EF6               	movwf	tblptrl,c
  6080  007706                     	if	1	;There is more than 1 active tblptr byte
  6081  007706  0EFE               	movlw	high _FirmwareVersionMinor
  6082  007708  6EF7               	movwf	tblptrh,c
  6083  00770A                     	endif
  6084  00770A                     	if	1	;There are 3 active tblptr bytes
  6085  00770A  0E00               	movlw	low (_FirmwareVersionMinor shr (0+16))
  6086  00770C  6EF8               	movwf	tblptru,c
  6087  00770E                     	endif
  6088  00770E  0009               	tblrd		*+
  6089  007710  50F5               	movf	tablat,w,c
  6090  007712  0100               	movlb	0	; force () banked
  6091  007714  5D98               	subwf	ledInit@i_1801& (0+255),w,b
  6092  007716  A0D8               	btfss	status,0,c
  6093  007718  D7E2               	goto	l19738
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;../app/app_src/led.c: 54:     (void)queueLedEvent(0,2000);
  6097  00771A  0E07               	movlw	7
  6098  00771C  0100               	movlb	0	; force () banked
  6099  00771E  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
  6100  007720  0ED0               	movlw	208
  6101  007722  6F90               	movwf	queueLedEvent@duration& (0+255),b
  6102  007724  0E00               	movlw	0
  6103  007726  EC88  F054         	call	_queueLedEvent
  6104                           
  6105                           ;../app/app_src/led.c: 55:     (void)queueLedEvent(1,100);
  6106  00772A  0E00               	movlw	0
  6107  00772C  0100               	movlb	0	; force () banked
  6108  00772E  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
  6109  007730  0E64               	movlw	100
  6110  007732  6F90               	movwf	queueLedEvent@duration& (0+255),b
  6111  007734  0E01               	movlw	1
  6112  007736  EC88  F054         	call	_queueLedEvent
  6113                           
  6114                           ; BSR set to: 0
  6115  00773A  0012               	return		;funcret
  6116  00773C                     __end_of_ledInit:
  6117                           	callstack 0
  6118                           
  6119 ;; *************** function _CircularBufferInit *****************
  6120 ;; Defined at:
  6121 ;;		line 56 in file "../app/app_src/circular_buffer.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;  ctx             2   17[BANK0 ] PTR struct .
  6124 ;;		 -> ledtasksbuf(10), msg_ack_queue_context(10), rx_buffer_queue_context(10), 
  6125 ;;  buf             2   19[BANK0 ] PTR void 
  6126 ;;		 -> ledqueue(96), msg_ack_queue(32), rx_buffer_queue(3), 
  6127 ;;  buf_size        2   21[BANK0 ] unsigned int 
  6128 ;;  element_size    2   23[BANK0 ] unsigned int 
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;  size            2   29[BANK0 ] unsigned int 
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  1    wreg      void 
  6133 ;; Registers used:
  6134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
  6135 ;; Tracked objects:
  6136 ;;		On entry : 3F/0
  6137 ;;		On exit  : 3F/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6140 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6141 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6142 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6143 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6144 ;;Total ram usage:       14 bytes
  6145 ;; Hardware stack levels used:    1
  6146 ;; Hardware stack levels required when called:   12
  6147 ;; This function calls:
  6148 ;;		___lwdiv
  6149 ;; This function is called by:
  6150 ;;		_bootLoadApplication
  6151 ;;		_ledInit
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155                           	psect	text5
  6156  008D3C                     __ptext5:
  6157                           	callstack 0
  6158  008D3C                     _CircularBufferInit:
  6159                           	callstack 16
  6160                           
  6161                           ;../app/app_src/circular_buffer.c: 56: void CircularBufferInit(CircularBufferContext *ct
      +                          x, void *buf, size_t buf_size,;../app/app_src/circular_buffer.c: 57:                    
      +                               size_t element_size) {;../app/app_src/circular_buffer.c: 58:     size_t size = buf_
      +                          size / element_size;
  6162                           
  6163                           ; BSR set to: 0
  6164                           ;incstack = 0
  6165  008D3C  0060  F1DF  FFE6   	movff	CircularBufferInit@element_size,postinc1
  6166  008D42  0060  F1E3  FFE6   	movff	CircularBufferInit@element_size+1,postinc1
  6167  008D48  0060  F1D7  FFE6   	movff	CircularBufferInit@buf_size,postinc1
  6168  008D4E  0060  F1DB  FFE6   	movff	CircularBufferInit@buf_size+1,postinc1
  6169  008D54  ECA8  F038         	call	___lwdiv	;wreg free
  6170  008D58  0060  F004  F07D   	movff	btemp,CircularBufferInit@size
  6171  008D5E  0060  F008  F07E   	movff	btemp+1,CircularBufferInit@size+1
  6172                           
  6173                           ;../app/app_src/circular_buffer.c: 59:     ctx->buf = buf;
  6174  008D64  0060  F1C7  FFD9   	movff	CircularBufferInit@ctx,fsr2l
  6175  008D6A  0060  F1CB  FFDA   	movff	CircularBufferInit@ctx+1,fsr2h
  6176  008D70  0060  F1CF  FFDE   	movff	CircularBufferInit@buf,postinc2
  6177  008D76  0060  F1D3  FFDD   	movff	CircularBufferInit@buf+1,postdec2
  6178                           
  6179                           ;../app/app_src/circular_buffer.c: 60:     ctx->write_pos = 0u;
  6180  008D7C  0100               	movlb	0	; force () banked
  6181  008D7E  EE20 F002          	lfsr	2,2
  6182  008D82  5171               	movf	CircularBufferInit@ctx& (0+255),w,b
  6183  008D84  26D9               	addwf	fsr2l,f,c
  6184  008D86  5172               	movf	(CircularBufferInit@ctx+1)& (0+255),w,b
  6185  008D88  22DA               	addwfc	fsr2h,f,c
  6186  008D8A  0E00               	movlw	0
  6187  008D8C  6EDE               	movwf	postinc2,c
  6188  008D8E  0E00               	movlw	0
  6189  008D90  6EDD               	movwf	postdec2,c
  6190                           
  6191                           ; BSR set to: 0
  6192                           ;../app/app_src/circular_buffer.c: 61:     ctx->read_pos = 0u;
  6193  008D92  0100               	movlb	0	; force () banked
  6194  008D94  EE20 F004          	lfsr	2,4
  6195  008D98  5171               	movf	CircularBufferInit@ctx& (0+255),w,b
  6196  008D9A  26D9               	addwf	fsr2l,f,c
  6197  008D9C  5172               	movf	(CircularBufferInit@ctx+1)& (0+255),w,b
  6198  008D9E  22DA               	addwfc	fsr2h,f,c
  6199  008DA0  0E00               	movlw	0
  6200  008DA2  6EDE               	movwf	postinc2,c
  6201  008DA4  0E00               	movlw	0
  6202  008DA6  6EDD               	movwf	postdec2,c
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;../app/app_src/circular_buffer.c: 62:     ctx->element_size = element_size;
  6206  008DA8  0100               	movlb	0	; force () banked
  6207  008DAA  EE20 F006          	lfsr	2,6
  6208  008DAE  5171               	movf	CircularBufferInit@ctx& (0+255),w,b
  6209  008DB0  26D9               	addwf	fsr2l,f,c
  6210  008DB2  5172               	movf	(CircularBufferInit@ctx+1)& (0+255),w,b
  6211  008DB4  22DA               	addwfc	fsr2h,f,c
  6212  008DB6  0060  F1DF  FFDE   	movff	CircularBufferInit@element_size,postinc2
  6213  008DBC  0060  F1E3  FFDD   	movff	CircularBufferInit@element_size+1,postdec2
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;../app/app_src/circular_buffer.c: 63:     ctx->max_size = size - 1u;
  6217  008DC2  0EFF               	movlw	255
  6218  008DC4  0100               	movlb	0	; force () banked
  6219  008DC6  6F79               	movwf	??_CircularBufferInit& (0+255),b
  6220  008DC8  0EFF               	movlw	255
  6221  008DCA  6F7A               	movwf	(??_CircularBufferInit+1)& (0+255),b
  6222  008DCC  C07D  F07B         	movff	CircularBufferInit@size,??_CircularBufferInit+2
  6223  008DD0  C07E  F07C         	movff	CircularBufferInit@size+1,??_CircularBufferInit+3
  6224  008DD4  5179               	movf	??_CircularBufferInit& (0+255),w,b
  6225  008DD6  277B               	addwf	(??_CircularBufferInit+2)& (0+255),f,b
  6226  008DD8  517A               	movf	(??_CircularBufferInit+1)& (0+255),w,b
  6227  008DDA  237C               	addwfc	(??_CircularBufferInit+3)& (0+255),f,b
  6228  008DDC  0100               	movlb	0	; force () banked
  6229  008DDE  EE20 F008          	lfsr	2,8
  6230  008DE2  5171               	movf	CircularBufferInit@ctx& (0+255),w,b
  6231  008DE4  26D9               	addwf	fsr2l,f,c
  6232  008DE6  5172               	movf	(CircularBufferInit@ctx+1)& (0+255),w,b
  6233  008DE8  22DA               	addwfc	fsr2h,f,c
  6234  008DEA  0060  F1EF  FFDE   	movff	??_CircularBufferInit+2,postinc2
  6235  008DF0  0060  F1F3  FFDD   	movff	??_CircularBufferInit+3,postdec2
  6236                           
  6237                           ; BSR set to: 0
  6238  008DF6  0012               	return		;funcret
  6239  008DF8                     __end_of_CircularBufferInit:
  6240                           	callstack 0
  6241                           
  6242 ;; *************** function _PHY_Get_Packet_Rssi_Threshold_Limits *****************
  6243 ;; Defined at:
  6244 ;;		line 87 in file "../phy/phy_src/phy.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;  max             2   17[BANK0 ] PTR char 
  6247 ;;		 -> bootLoadApplication@rssimax(1), 
  6248 ;;  min             2   19[BANK0 ] PTR char 
  6249 ;;		 -> bootLoadApplication@rssimin(1), 
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;		None
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  1    wreg      void 
  6254 ;; Registers used:
  6255 ;;		wreg, fsr2l, fsr2h
  6256 ;; Tracked objects:
  6257 ;;		On entry : 3F/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6261 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6264 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;Total ram usage:        4 bytes
  6266 ;; Hardware stack levels used:    1
  6267 ;; Hardware stack levels required when called:   11
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_bootLoadApplication
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text6
  6276  00B844                     __ptext6:
  6277                           	callstack 0
  6278  00B844                     _PHY_Get_Packet_Rssi_Threshold_Limits:
  6279                           	callstack 18
  6280                           
  6281                           ;../phy/phy_src/phy.c: 88:     *max = -30;
  6282                           
  6283                           ; BSR set to: 0
  6284                           ;incstack = 0
  6285  00B844  0060  F1C7  FFD9   	movff	PHY_Get_Packet_Rssi_Threshold_Limits@max,fsr2l
  6286  00B84A  0060  F1CB  FFDA   	movff	PHY_Get_Packet_Rssi_Threshold_Limits@max+1,fsr2h
  6287  00B850  0EE2               	movlw	226
  6288  00B852  6EDF               	movwf	indf2,c
  6289                           
  6290                           ;../phy/phy_src/phy.c: 89:     *min = -110;
  6291  00B854  0060  F1CF  FFD9   	movff	PHY_Get_Packet_Rssi_Threshold_Limits@min,fsr2l
  6292  00B85A  0060  F1D3  FFDA   	movff	PHY_Get_Packet_Rssi_Threshold_Limits@min+1,fsr2h
  6293  00B860  0E92               	movlw	146
  6294  00B862  6EDF               	movwf	indf2,c
  6295  00B864  0012               	return		;funcret
  6296  00B866                     __end_of_PHY_Get_Packet_Rssi_Threshold_Limits:
  6297                           	callstack 0
  6298                           
  6299 ;; *************** function _NWK_SetPanId *****************
  6300 ;; Defined at:
  6301 ;;		line 116 in file "../nwk/nwk_src/nwk.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;  panId           2   19[BANK0 ] unsigned int 
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;		None
  6306 ;; Return value:  Size  Location     Type
  6307 ;;                  1    wreg      void 
  6308 ;; Registers used:
  6309 ;;		cstack
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6315 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6318 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6319 ;;Total ram usage:        2 bytes
  6320 ;; Hardware stack levels used:    1
  6321 ;; Hardware stack levels required when called:   12
  6322 ;; This function calls:
  6323 ;;		_PHY_SetPanId
  6324 ;; This function is called by:
  6325 ;;		_bootLoadApplication
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329                           	psect	text7
  6330  00BB42                     __ptext7:
  6331                           	callstack 0
  6332  00BB42                     _NWK_SetPanId:
  6333                           	callstack 17
  6334                           
  6335                           ;../nwk/nwk_src/nwk.c: 116: void NWK_SetPanId(uint16_t panId);../nwk/nwk_src/nwk.c: 117:
      +                           {;../nwk/nwk_src/nwk.c: 118:   nwkIb.panId = panId;
  6336                           
  6337                           ;incstack = 0
  6338  00BB42  C073  F202         	movff	NWK_SetPanId@panId,_nwkIb+2
  6339  00BB46  C074  F203         	movff	NWK_SetPanId@panId+1,_nwkIb+3
  6340                           
  6341                           ;../nwk/nwk_src/nwk.c: 119:   PHY_SetPanId(panId);
  6342  00BB4A  C073  F071         	movff	NWK_SetPanId@panId,PHY_SetPanId@panId
  6343  00BB4E  C074  F072         	movff	NWK_SetPanId@panId+1,PHY_SetPanId@panId+1
  6344  00BB52  ECC6  F05E         	call	_PHY_SetPanId	;wreg free
  6345  00BB56  0012               	return		;funcret
  6346  00BB58                     __end_of_NWK_SetPanId:
  6347                           	callstack 0
  6348                           
  6349 ;; *************** function _PHY_SetPanId *****************
  6350 ;; Defined at:
  6351 ;;		line 47 in file "../phy/phy_src/phy.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  panId           2   17[BANK0 ] unsigned int 
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;		None
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  1    wreg      void 
  6358 ;; Registers used:
  6359 ;;		None
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6365 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6368 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6369 ;;Total ram usage:        2 bytes
  6370 ;; Hardware stack levels used:    1
  6371 ;; Hardware stack levels required when called:   11
  6372 ;; This function calls:
  6373 ;;		Nothing
  6374 ;; This function is called by:
  6375 ;;		_NWK_SetPanId
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           	psect	text8
  6380  00BD8C                     __ptext8:
  6381                           	callstack 0
  6382  00BD8C                     _PHY_SetPanId:
  6383                           	callstack 17
  6384                           
  6385                           ;incstack = 0
  6386  00BD8C  0012               	return		;funcret
  6387  00BD8E                     __end_of_PHY_SetPanId:
  6388                           	callstack 0
  6389                           
  6390 ;; *************** function _NWK_SetAddr *****************
  6391 ;; Defined at:
  6392 ;;		line 106 in file "../nwk/nwk_src/nwk.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;  addr            2   19[BANK0 ] unsigned int 
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;		None
  6397 ;; Return value:  Size  Location     Type
  6398 ;;                  1    wreg      void 
  6399 ;; Registers used:
  6400 ;;		cstack
  6401 ;; Tracked objects:
  6402 ;;		On entry : 3F/0
  6403 ;;		On exit  : 0/0
  6404 ;;		Unchanged: 0/0
  6405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6406 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6409 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;Total ram usage:        2 bytes
  6411 ;; Hardware stack levels used:    1
  6412 ;; Hardware stack levels required when called:   12
  6413 ;; This function calls:
  6414 ;;		_PHY_SetShortAddr
  6415 ;; This function is called by:
  6416 ;;		_bootLoadApplication
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420                           	psect	text9
  6421  00BB58                     __ptext9:
  6422                           	callstack 0
  6423  00BB58                     _NWK_SetAddr:
  6424                           	callstack 17
  6425                           
  6426                           ;../nwk/nwk_src/nwk.c: 106: void NWK_SetAddr(uint16_t addr);../nwk/nwk_src/nwk.c: 107: {
      +                          ;../nwk/nwk_src/nwk.c: 108:   nwkIb.addr = addr;
  6427                           
  6428                           ;incstack = 0
  6429  00BB58  C073  F200         	movff	NWK_SetAddr@addr,_nwkIb
  6430  00BB5C  C074  F201         	movff	NWK_SetAddr@addr+1,_nwkIb+1
  6431                           
  6432                           ;../nwk/nwk_src/nwk.c: 109:   PHY_SetShortAddr(addr);
  6433  00BB60  C073  F071         	movff	NWK_SetAddr@addr,PHY_SetShortAddr@addr
  6434  00BB64  C074  F072         	movff	NWK_SetAddr@addr+1,PHY_SetShortAddr@addr+1
  6435  00BB68  ECC7  F05E         	call	_PHY_SetShortAddr	;wreg free
  6436  00BB6C  0012               	return		;funcret
  6437  00BB6E                     __end_of_NWK_SetAddr:
  6438                           	callstack 0
  6439                           
  6440 ;; *************** function _PHY_SetShortAddr *****************
  6441 ;; Defined at:
  6442 ;;		line 51 in file "../phy/phy_src/phy.c"
  6443 ;; Parameters:    Size  Location     Type
  6444 ;;  addr            2   17[BANK0 ] unsigned int 
  6445 ;; Auto vars:     Size  Location     Type
  6446 ;;		None
  6447 ;; Return value:  Size  Location     Type
  6448 ;;                  1    wreg      void 
  6449 ;; Registers used:
  6450 ;;		None
  6451 ;; Tracked objects:
  6452 ;;		On entry : 0/0
  6453 ;;		On exit  : 0/0
  6454 ;;		Unchanged: 0/0
  6455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6456 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6459 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6460 ;;Total ram usage:        2 bytes
  6461 ;; Hardware stack levels used:    1
  6462 ;; Hardware stack levels required when called:   11
  6463 ;; This function calls:
  6464 ;;		Nothing
  6465 ;; This function is called by:
  6466 ;;		_NWK_SetAddr
  6467 ;; This function uses a non-reentrant model
  6468 ;;
  6469                           
  6470                           	psect	text10
  6471  00BD8E                     __ptext10:
  6472                           	callstack 0
  6473  00BD8E                     _PHY_SetShortAddr:
  6474                           	callstack 17
  6475                           
  6476                           ;incstack = 0
  6477  00BD8E  0012               	return		;funcret
  6478  00BD90                     __end_of_PHY_SetShortAddr:
  6479                           	callstack 0
  6480                           
  6481 ;; *************** function _DATAEE_ReadByte_Platform *****************
  6482 ;; Defined at:
  6483 ;;		line 31 in file "../app/app_src/EEPROM.c"
  6484 ;; Parameters:    Size  Location     Type
  6485 ;;  addr            2   21[BANK0 ] unsigned int 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;  copy1           1   26[BANK0 ] unsigned char 
  6488 ;;  copy2           1   25[BANK0 ] unsigned char 
  6489 ;;  copy3           1   24[BANK0 ] unsigned char 
  6490 ;;  return_copy     1   23[BANK0 ] unsigned char 
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  1    wreg      unsigned char 
  6493 ;; Registers used:
  6494 ;;		wreg, status,2, status,0, cstack
  6495 ;; Tracked objects:
  6496 ;;		On entry : 3F/0
  6497 ;;		On exit  : 3F/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6500 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6501 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6503 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6504 ;;Total ram usage:        6 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; Hardware stack levels required when called:   12
  6507 ;; This function calls:
  6508 ;;		_DATAEE_ReadByte
  6509 ;;		_DATAEE_WriteByte
  6510 ;; This function is called by:
  6511 ;;		_bootLoadApplication
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           	psect	text11
  6516  006496                     __ptext11:
  6517                           	callstack 0
  6518  006496                     _DATAEE_ReadByte_Platform:
  6519                           	callstack 17
  6520                           
  6521                           ;../app/app_src/EEPROM.c: 32:     uint8_t copy1;;../app/app_src/EEPROM.c: 33:     uint8_
      +                          t copy2;;../app/app_src/EEPROM.c: 34:     uint8_t copy3;;../app/app_src/EEPROM.c: 35:   
      +                            copy1 = DATAEE_ReadByte(addr);
  6522                           
  6523                           ;incstack = 0
  6524  006496  C075  F071         	movff	DATAEE_ReadByte_Platform@addr,DATAEE_ReadByte@bAdd
  6525  00649A  C076  F072         	movff	DATAEE_ReadByte_Platform@addr+1,DATAEE_ReadByte@bAdd+1
  6526  00649E  ECDB  F05B         	call	_DATAEE_ReadByte	;wreg free
  6527  0064A2  0100               	movlb	0	; force () banked
  6528  0064A4  6F7A               	movwf	DATAEE_ReadByte_Platform@copy1& (0+255),b
  6529                           
  6530                           ;../app/app_src/EEPROM.c: 36:     copy2 = DATAEE_ReadByte(addr + 256);
  6531  0064A6  0E00               	movlw	0
  6532  0064A8  0100               	movlb	0	; force () banked
  6533  0064AA  2575               	addwf	DATAEE_ReadByte_Platform@addr& (0+255),w,b
  6534  0064AC  0100               	movlb	0	; force () banked
  6535  0064AE  6F71               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  6536  0064B0  0E01               	movlw	1
  6537  0064B2  0100               	movlb	0	; force () banked
  6538  0064B4  2176               	addwfc	(DATAEE_ReadByte_Platform@addr+1)& (0+255),w,b
  6539  0064B6  0100               	movlb	0	; force () banked
  6540  0064B8  6F72               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  6541  0064BA  ECDB  F05B         	call	_DATAEE_ReadByte	;wreg free
  6542  0064BE  0100               	movlb	0	; force () banked
  6543  0064C0  6F79               	movwf	DATAEE_ReadByte_Platform@copy2& (0+255),b
  6544                           
  6545                           ;../app/app_src/EEPROM.c: 37:     copy3 = DATAEE_ReadByte(addr + 512);
  6546  0064C2  0E00               	movlw	0
  6547  0064C4  0100               	movlb	0	; force () banked
  6548  0064C6  2575               	addwf	DATAEE_ReadByte_Platform@addr& (0+255),w,b
  6549  0064C8  0100               	movlb	0	; force () banked
  6550  0064CA  6F71               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
  6551  0064CC  0E02               	movlw	2
  6552  0064CE  0100               	movlb	0	; force () banked
  6553  0064D0  2176               	addwfc	(DATAEE_ReadByte_Platform@addr+1)& (0+255),w,b
  6554  0064D2  0100               	movlb	0	; force () banked
  6555  0064D4  6F72               	movwf	(DATAEE_ReadByte@bAdd+1)& (0+255),b
  6556  0064D6  ECDB  F05B         	call	_DATAEE_ReadByte	;wreg free
  6557  0064DA  0100               	movlb	0	; force () banked
  6558  0064DC  6F78               	movwf	DATAEE_ReadByte_Platform@copy3& (0+255),b
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;../app/app_src/EEPROM.c: 39:     uint8_t return_copy;;../app/app_src/EEPROM.c: 42:     
      +                          if((copy1 == copy2) && (copy2 == copy3)){
  6562  0064DE  0100               	movlb	0	; force () banked
  6563  0064E0  5179               	movf	DATAEE_ReadByte_Platform@copy2& (0+255),w,b
  6564  0064E2  0100               	movlb	0	; force () banked
  6565  0064E4  197A               	xorwf	DATAEE_ReadByte_Platform@copy1& (0+255),w,b
  6566  0064E6  A4D8               	btfss	status,2,c
  6567  0064E8  D006               	goto	l19754
  6568                           
  6569                           ; BSR set to: 0
  6570  0064EA  0100               	movlb	0	; force () banked
  6571  0064EC  5178               	movf	DATAEE_ReadByte_Platform@copy3& (0+255),w,b
  6572  0064EE  0100               	movlb	0	; force () banked
  6573  0064F0  1979               	xorwf	DATAEE_ReadByte_Platform@copy2& (0+255),w,b
  6574  0064F2  B4D8               	btfsc	status,2,c
  6575  0064F4  D069               	goto	l19780
  6576  0064F6                     l19754:
  6577                           
  6578                           ; BSR set to: 0
  6579  0064F6  0100               	movlb	0	; force () banked
  6580  0064F8  5179               	movf	DATAEE_ReadByte_Platform@copy2& (0+255),w,b
  6581  0064FA  0100               	movlb	0	; force () banked
  6582  0064FC  197A               	xorwf	DATAEE_ReadByte_Platform@copy1& (0+255),w,b
  6583  0064FE  A4D8               	btfss	status,2,c
  6584  006500  D015               	goto	l19762
  6585                           
  6586                           ; BSR set to: 0
  6587  006502  0100               	movlb	0	; force () banked
  6588  006504  5178               	movf	DATAEE_ReadByte_Platform@copy3& (0+255),w,b
  6589  006506  0100               	movlb	0	; force () banked
  6590  006508  1979               	xorwf	DATAEE_ReadByte_Platform@copy2& (0+255),w,b
  6591  00650A  B4D8               	btfsc	status,2,c
  6592  00650C  D00F               	goto	l19762
  6593                           
  6594                           ; BSR set to: 0
  6595                           ;../app/app_src/EEPROM.c: 47:         DATAEE_WriteByte(addr + 512, copy1);
  6596  00650E  0E00               	movlw	0
  6597  006510  0100               	movlb	0	; force () banked
  6598  006512  2575               	addwf	DATAEE_ReadByte_Platform@addr& (0+255),w,b
  6599  006514  0100               	movlb	0	; force () banked
  6600  006516  6F71               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  6601  006518  0E02               	movlw	2
  6602  00651A  0100               	movlb	0	; force () banked
  6603  00651C  2176               	addwfc	(DATAEE_ReadByte_Platform@addr+1)& (0+255),w,b
  6604  00651E  0100               	movlb	0	; force () banked
  6605  006520  6F72               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  6606  006522  C07A  F073         	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
  6607  006526  EC5E  F054         	call	_DATAEE_WriteByte	;wreg free
  6608  00652A  D04E               	goto	l19780
  6609  00652C                     l19762:
  6610                           
  6611                           ; BSR set to: 0
  6612  00652C  0100               	movlb	0	; force () banked
  6613  00652E  5179               	movf	DATAEE_ReadByte_Platform@copy2& (0+255),w,b
  6614  006530  0100               	movlb	0	; force () banked
  6615  006532  197A               	xorwf	DATAEE_ReadByte_Platform@copy1& (0+255),w,b
  6616  006534  B4D8               	btfsc	status,2,c
  6617  006536  D011               	goto	l19770
  6618                           
  6619                           ; BSR set to: 0
  6620  006538  0100               	movlb	0	; force () banked
  6621  00653A  5178               	movf	DATAEE_ReadByte_Platform@copy3& (0+255),w,b
  6622  00653C  0100               	movlb	0	; force () banked
  6623  00653E  1979               	xorwf	DATAEE_ReadByte_Platform@copy2& (0+255),w,b
  6624  006540  A4D8               	btfss	status,2,c
  6625  006542  D00B               	goto	l19770
  6626                           
  6627                           ; BSR set to: 0
  6628                           ;../app/app_src/EEPROM.c: 52:         DATAEE_WriteByte(addr , copy2);
  6629  006544  C075  F071         	movff	DATAEE_ReadByte_Platform@addr,DATAEE_WriteByte@bAdd
  6630  006548  C076  F072         	movff	DATAEE_ReadByte_Platform@addr+1,DATAEE_WriteByte@bAdd+1
  6631  00654C  C079  F073         	movff	DATAEE_ReadByte_Platform@copy2,DATAEE_WriteByte@bData
  6632  006550  EC5E  F054         	call	_DATAEE_WriteByte	;wreg free
  6633                           
  6634                           ;../app/app_src/EEPROM.c: 53:         return_copy = copy2;
  6635  006554  C079  F077         	movff	DATAEE_ReadByte_Platform@copy2,DATAEE_ReadByte_Platform@return_copy
  6636                           
  6637                           ;../app/app_src/EEPROM.c: 54:     }
  6638  006558  D039               	goto	l19782
  6639  00655A                     l19770:
  6640                           
  6641                           ; BSR set to: 0
  6642  00655A  0100               	movlb	0	; force () banked
  6643  00655C  5178               	movf	DATAEE_ReadByte_Platform@copy3& (0+255),w,b
  6644  00655E  0100               	movlb	0	; force () banked
  6645  006560  197A               	xorwf	DATAEE_ReadByte_Platform@copy1& (0+255),w,b
  6646  006562  A4D8               	btfss	status,2,c
  6647  006564  D015               	goto	l19778
  6648                           
  6649                           ; BSR set to: 0
  6650  006566  0100               	movlb	0	; force () banked
  6651  006568  5178               	movf	DATAEE_ReadByte_Platform@copy3& (0+255),w,b
  6652  00656A  0100               	movlb	0	; force () banked
  6653  00656C  1979               	xorwf	DATAEE_ReadByte_Platform@copy2& (0+255),w,b
  6654  00656E  B4D8               	btfsc	status,2,c
  6655  006570  D00F               	goto	l19778
  6656                           
  6657                           ; BSR set to: 0
  6658                           ;../app/app_src/EEPROM.c: 57:         DATAEE_WriteByte(addr + 256, copy1);
  6659  006572  0E00               	movlw	0
  6660  006574  0100               	movlb	0	; force () banked
  6661  006576  2575               	addwf	DATAEE_ReadByte_Platform@addr& (0+255),w,b
  6662  006578  0100               	movlb	0	; force () banked
  6663  00657A  6F71               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  6664  00657C  0E01               	movlw	1
  6665  00657E  0100               	movlb	0	; force () banked
  6666  006580  2176               	addwfc	(DATAEE_ReadByte_Platform@addr+1)& (0+255),w,b
  6667  006582  0100               	movlb	0	; force () banked
  6668  006584  6F72               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  6669  006586  C07A  F073         	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
  6670  00658A  EC5E  F054         	call	_DATAEE_WriteByte	;wreg free
  6671  00658E  D01C               	goto	l19780
  6672  006590                     l19778:
  6673                           
  6674                           ; BSR set to: 0
  6675                           ;../app/app_src/EEPROM.c: 63:         DATAEE_WriteByte(addr + 256, copy1);
  6676  006590  0E00               	movlw	0
  6677  006592  0100               	movlb	0	; force () banked
  6678  006594  2575               	addwf	DATAEE_ReadByte_Platform@addr& (0+255),w,b
  6679  006596  0100               	movlb	0	; force () banked
  6680  006598  6F71               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  6681  00659A  0E01               	movlw	1
  6682  00659C  0100               	movlb	0	; force () banked
  6683  00659E  2176               	addwfc	(DATAEE_ReadByte_Platform@addr+1)& (0+255),w,b
  6684  0065A0  0100               	movlb	0	; force () banked
  6685  0065A2  6F72               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  6686  0065A4  C07A  F073         	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
  6687  0065A8  EC5E  F054         	call	_DATAEE_WriteByte	;wreg free
  6688                           
  6689                           ;../app/app_src/EEPROM.c: 64:         DATAEE_WriteByte(addr + 512, copy1);
  6690  0065AC  0E00               	movlw	0
  6691  0065AE  0100               	movlb	0	; force () banked
  6692  0065B0  2575               	addwf	DATAEE_ReadByte_Platform@addr& (0+255),w,b
  6693  0065B2  0100               	movlb	0	; force () banked
  6694  0065B4  6F71               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  6695  0065B6  0E02               	movlw	2
  6696  0065B8  0100               	movlb	0	; force () banked
  6697  0065BA  2176               	addwfc	(DATAEE_ReadByte_Platform@addr+1)& (0+255),w,b
  6698  0065BC  0100               	movlb	0	; force () banked
  6699  0065BE  6F72               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  6700  0065C0  C07A  F073         	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
  6701  0065C4  EC5E  F054         	call	_DATAEE_WriteByte	;wreg free
  6702  0065C8                     l19780:
  6703                           
  6704                           ;../app/app_src/EEPROM.c: 65:         return_copy = copy1;
  6705  0065C8  C07A  F077         	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_ReadByte_Platform@return_copy
  6706  0065CC                     l19782:
  6707                           
  6708                           ;../app/app_src/EEPROM.c: 67:     return return_copy;
  6709  0065CC  0100               	movlb	0	; force () banked
  6710  0065CE  5177               	movf	DATAEE_ReadByte_Platform@return_copy& (0+255),w,b
  6711                           
  6712                           ; BSR set to: 0
  6713  0065D0  0012               	return		;funcret
  6714  0065D2                     __end_of_DATAEE_ReadByte_Platform:
  6715                           	callstack 0
  6716                           
  6717 ;; *************** function _DATAEE_ReadByte *****************
  6718 ;; Defined at:
  6719 ;;		line 194 in file "mcc_generated_files/memory.c"
  6720 ;; Parameters:    Size  Location     Type
  6721 ;;  bAdd            2   17[BANK0 ] unsigned int 
  6722 ;; Auto vars:     Size  Location     Type
  6723 ;;		None
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  1    wreg      unsigned char 
  6726 ;; Registers used:
  6727 ;;		wreg, status,2, status,0
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 3F/39
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6733 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6736 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6737 ;;Total ram usage:        2 bytes
  6738 ;; Hardware stack levels used:    1
  6739 ;; Hardware stack levels required when called:   11
  6740 ;; This function calls:
  6741 ;;		Nothing
  6742 ;; This function is called by:
  6743 ;;		_DATAEE_ReadByte_Platform
  6744 ;; This function uses a non-reentrant model
  6745 ;;
  6746                           
  6747                           	psect	text12
  6748  00B7B6                     __ptext12:
  6749                           	callstack 0
  6750  00B7B6                     _DATAEE_ReadByte:
  6751                           	callstack 17
  6752                           
  6753                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
  6754                           
  6755                           ; BSR set to: 0
  6756                           ;incstack = 0
  6757  00B7B6  0100               	movlb	0	; force () banked
  6758  00B7B8  5172               	movf	(DATAEE_ReadByte@bAdd+1)& (0+255),w,b
  6759  00B7BA  0B03               	andlw	3
  6760  00B7BC  0139               	movlb	57	; force () banked
  6761  00B7BE  6FE1               	movwf	225,b	;volatile
  6762                           
  6763                           ; BSR set to: 57
  6764                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
  6765  00B7C0  0060  F1C7  F9E0   	movff	DATAEE_ReadByte@bAdd,14816	;volatile
  6766                           
  6767                           ; BSR set to: 57
  6768                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
  6769  00B7C6  0E3F               	movlw	-193
  6770  00B7C8  0139               	movlb	57	; force () banked
  6771  00B7CA  17E5               	andwf	229,f,b	;volsfr
  6772                           
  6773                           ; BSR set to: 57
  6774                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
  6775  00B7CC  0139               	movlb	57	; force () banked
  6776  00B7CE  81E5               	bsf	229,0,b	;volsfr
  6777                           
  6778                           ; BSR set to: 57
  6779                           ;mcc_generated_files/memory.c: 200:     __nop();
  6780  00B7D0  F000               	nop	
  6781                           
  6782                           ;mcc_generated_files/memory.c: 201:     __nop();
  6783  00B7D2  F000               	nop	
  6784                           
  6785                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
  6786  00B7D4  0139               	movlb	57	; force () banked
  6787  00B7D6  51E3               	movf	227,w,b	;volatile
  6788                           
  6789                           ; BSR set to: 57
  6790  00B7D8  0012               	return		;funcret
  6791  00B7DA                     __end_of_DATAEE_ReadByte:
  6792                           	callstack 0
  6793                           
  6794 ;; *************** function _application *****************
  6795 ;; Defined at:
  6796 ;;		line 2462 in file "../app/app_src/application.c"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;		None
  6799 ;; Auto vars:     Size  Location     Type
  6800 ;;		None
  6801 ;; Return value:  Size  Location     Type
  6802 ;;                  1    wreg      void 
  6803 ;; Registers used:
  6804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+
      +10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6805 ;; Tracked objects:
  6806 ;;		On entry : 3E/0
  6807 ;;		On exit  : 3F/2
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6814 ;;Total ram usage:        0 bytes
  6815 ;; Hardware stack levels used:    1
  6816 ;; Hardware stack levels required when called:   19
  6817 ;; This function calls:
  6818 ;;		_MBRTUStack
  6819 ;;		_handle_led_events
  6820 ;;		_nwkEnableRouting
  6821 ;;		_reset_handler
  6822 ;;		_start_loop_timer
  6823 ;;		_stop_loop_timer
  6824 ;;		_sync_eeprom
  6825 ;;		_uart_default_engine
  6826 ;; This function is called by:
  6827 ;;		_main
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           	psect	text13
  6832  00B516                     __ptext13:
  6833                           	callstack 0
  6834  00B516                     _application:
  6835                           	callstack 11
  6836                           
  6837                           ;../app/app_src/application.c: 2463:     start_loop_timer();
  6838                           
  6839                           ; BSR set to: 57
  6840                           ;incstack = 0
  6841  00B516  ECE3  F05D         	call	_start_loop_timer	;wreg free
  6842                           
  6843                           ;../app/app_src/application.c: 2474:     MBRTUStack();
  6844  00B51A  ECFC  F046         	call	_MBRTUStack	;wreg free
  6845                           
  6846                           ;../app/app_src/application.c: 2475:     reset_handler();
  6847  00B51E  EC08  F054         	call	_reset_handler	;wreg free
  6848                           
  6849                           ;../app/app_src/application.c: 2478:     nwkEnableRouting((PORTAbits.RA2? 0:1));
  6850  00B522  B4CA               	btfsc	202,2,c	;volatile
  6851  00B524  D002               	goto	u19010
  6852  00B526  0E01               	movlw	1
  6853  00B528  D001               	goto	u19020
  6854  00B52A                     u19010:
  6855  00B52A  0E00               	movlw	0
  6856  00B52C                     u19020:
  6857  00B52C  EC70  F05E         	call	_nwkEnableRouting
  6858                           
  6859                           ;../app/app_src/application.c: 2479:     handle_led_events();
  6860  00B530  EC80  F050         	call	_handle_led_events	;wreg free
  6861                           
  6862                           ;../app/app_src/application.c: 2481:     sync_eeprom();
  6863  00B534  EC58  F023         	call	_sync_eeprom	;wreg free
  6864                           
  6865                           ; BSR set to: 0
  6866                           ;../app/app_src/application.c: 2482:     uart_default_engine();
  6867  00B538  ECDE  F02C         	call	_uart_default_engine	;wreg free
  6868                           
  6869                           ;../app/app_src/application.c: 2493:     stop_loop_timer();
  6870  00B53C  EC9A  F055         	call	_stop_loop_timer	;wreg free
  6871                           
  6872                           ; BSR set to: 2
  6873  00B540  0012               	return		;funcret
  6874  00B542                     __end_of_application:
  6875                           	callstack 0
  6876                           
  6877 ;; *************** function _uart_default_engine *****************
  6878 ;; Defined at:
  6879 ;;		line 36 in file "../app/app_src/uart_default_control.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;		None
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;		None
  6884 ;; Return value:  Size  Location     Type
  6885 ;;                  1    wreg      void 
  6886 ;; Registers used:
  6887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6888 ;; Tracked objects:
  6889 ;;		On entry : 3F/0
  6890 ;;		On exit  : 3D/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6895 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6896 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6897 ;;Total ram usage:        2 bytes
  6898 ;; Hardware stack levels used:    1
  6899 ;; Hardware stack levels required when called:   15
  6900 ;; This function calls:
  6901 ;;		_eMBInit
  6902 ;;		_get_timer0base
  6903 ;;		_set_parity
  6904 ;;		_set_timer0base
  6905 ;;		_set_uart_baud
  6906 ;; This function is called by:
  6907 ;;		_application
  6908 ;; This function uses a non-reentrant model
  6909 ;;
  6910                           
  6911                           	psect	text14
  6912  0059BC                     __ptext14:
  6913                           	callstack 0
  6914  0059BC                     _uart_default_engine:
  6915                           	callstack 14
  6916                           
  6917                           ;../app/app_src/uart_default_control.c: 37:     switch(uart_default_state_var){
  6918                           
  6919                           ; BSR set to: 2
  6920                           ;incstack = 0
  6921  0059BC  D09D               	goto	l19970
  6922  0059BE                     l19926:
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;../app/app_src/uart_default_control.c: 39:             uart_default_state_var = WAIT_GP
      +                          IO_GO_LOW;
  6926  0059BE  0E01               	movlw	1
  6927  0059C0  0102               	movlb	2	; force () banked
  6928  0059C2  6F5B               	movwf	_uart_default_state_var& (0+255),b
  6929                           
  6930                           ;../app/app_src/uart_default_control.c: 40:             break;
  6931  0059C4  0012               	return	
  6932  0059C6                     l1197:
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;../app/app_src/uart_default_control.c: 42:             if(!PORTAbits.RA1){
  6936  0059C6  B2CA               	btfsc	202,1,c	;volatile
  6937  0059C8  0012               	return	
  6938                           
  6939                           ; BSR set to: 0
  6940                           ;../app/app_src/uart_default_control.c: 43:                 set_timer0base(&blen_sample_
      +                          timer, 250);
  6941  0059CA  0EF7               	movlw	low _blen_sample_timer
  6942  0059CC  0100               	movlb	0	; force () banked
  6943  0059CE  6F71               	movwf	set_timer0base@timer& (0+255),b
  6944  0059D0  0E01               	movlw	high _blen_sample_timer
  6945  0059D2  6F72               	movwf	(set_timer0base@timer+1)& (0+255),b
  6946  0059D4  0E00               	movlw	0
  6947  0059D6  0100               	movlb	0	; force () banked
  6948  0059D8  6F74               	movwf	(set_timer0base@tval+1)& (0+255),b
  6949  0059DA  0EFA               	movlw	250
  6950  0059DC  6F73               	movwf	set_timer0base@tval& (0+255),b
  6951  0059DE  EC44  F05C         	call	_set_timer0base	;wreg free
  6952                           
  6953                           ; BSR set to: 57
  6954                           ;../app/app_src/uart_default_control.c: 44:                 uart_default_state_var = DEB
      +                          OUNCE_ACTIVATION;
  6955  0059E2  0E02               	movlw	2
  6956  0059E4  0102               	movlb	2	; force () banked
  6957  0059E6  6F5B               	movwf	_uart_default_state_var& (0+255),b
  6958  0059E8  0012               	return	
  6959  0059EA                     l19932:
  6960                           
  6961                           ; BSR set to: 0
  6962                           ;../app/app_src/uart_default_control.c: 48:             if(!get_timer0base(&blen_sample_
      +                          timer)){
  6963  0059EA  0EF7               	movlw	low _blen_sample_timer
  6964  0059EC  0100               	movlb	0	; force () banked
  6965  0059EE  6F71               	movwf	get_timer0base@timer& (0+255),b
  6966  0059F0  0E01               	movlw	high _blen_sample_timer
  6967  0059F2  6F72               	movwf	(get_timer0base@timer+1)& (0+255),b
  6968  0059F4  EC39  F05B         	call	_get_timer0base	;wreg free
  6969  0059F8  0100               	movlb	0	; force () banked
  6970  0059FA  5171               	movf	?_get_timer0base& (0+255),w,b
  6971  0059FC  1172               	iorwf	(?_get_timer0base+1)& (0+255),w,b
  6972  0059FE  A4D8               	btfss	status,2,c
  6973  005A00  0012               	return	
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;../app/app_src/uart_default_control.c: 49:                 if(!PORTAbits.RA1){
  6977  005A02  B2CA               	btfsc	202,1,c	;volatile
  6978  005A04  D004               	goto	l19938
  6979                           
  6980                           ; BSR set to: 0
  6981                           ;../app/app_src/uart_default_control.c: 50:                     uart_default_state_var =
      +                           SWITCH_TO_DEFAULT;
  6982  005A06  0E03               	movlw	3
  6983  005A08  0102               	movlb	2	; force () banked
  6984  005A0A  6F5B               	movwf	_uart_default_state_var& (0+255),b
  6985                           
  6986                           ;../app/app_src/uart_default_control.c: 51:                 }
  6987  005A0C  0012               	return	
  6988  005A0E                     l19938:
  6989                           
  6990                           ; BSR set to: 0
  6991                           ;../app/app_src/uart_default_control.c: 53:                     uart_default_state_var =
      +                           WAIT_GPIO_GO_LOW;
  6992  005A0E  0E01               	movlw	1
  6993  005A10  0102               	movlb	2	; force () banked
  6994  005A12  6F5B               	movwf	_uart_default_state_var& (0+255),b
  6995  005A14  0012               	return	
  6996  005A16                     l19940:
  6997                           
  6998                           ; BSR set to: 0
  6999                           ;../app/app_src/uart_default_control.c: 58:             {;../app/app_src/uart_default_co
      +                          ntrol.c: 59:                 (void*)set_parity(UART_9BIT_EVEN_PARITY);
  7000  005A16  0E03               	movlw	3
  7001  005A18  EC75  F04E         	call	_set_parity
  7002                           
  7003                           ;../app/app_src/uart_default_control.c: 60:                 (void*)set_uart_baud(UART_BA
      +                          UD_19200);
  7004  005A1C  0E01               	movlw	1
  7005  005A1E  ECA7  F03A         	call	_set_uart_baud
  7006                           
  7007                           ;../app/app_src/uart_default_control.c: 61:                 user_application_state = DEF
      +                          AULT_PROFILE;
  7008  005A22  0E01               	movlw	1
  7009  005A24  0102               	movlb	2	; force () banked
  7010  005A26  6F63               	movwf	_user_application_state& (0+255),b
  7011                           
  7012                           ; BSR set to: 2
  7013                           ;../app/app_src/uart_default_control.c: 62:             };../app/app_src/uart_default_co
      +                          ntrol.c: 64:             eMBInit( MB_RTU, 247, 0, UART_BAUD_19200,
  7014  005A28  0EF7               	movlw	247
  7015  005A2A  0100               	movlb	0	; force () banked
  7016  005A2C  6F9D               	movwf	eMBInit@ucSlaveAddress& (0+255),b
  7017  005A2E  0E00               	movlw	0
  7018  005A30  0100               	movlb	0	; force () banked
  7019  005A32  6F9E               	movwf	eMBInit@ucPort& (0+255),b
  7020  005A34  0E01               	movlw	1
  7021  005A36  0100               	movlb	0	; force () banked
  7022  005A38  6F9F               	movwf	eMBInit@ulBaudRate& (0+255),b
  7023  005A3A  0E00               	movlw	0
  7024  005A3C  6FA0               	movwf	(eMBInit@ulBaudRate+1)& (0+255),b
  7025  005A3E  0E00               	movlw	0
  7026  005A40  6FA1               	movwf	(eMBInit@ulBaudRate+2)& (0+255),b
  7027  005A42  0E00               	movlw	0
  7028  005A44  6FA2               	movwf	(eMBInit@ulBaudRate+3)& (0+255),b
  7029  005A46  0E03               	movlw	3
  7030  005A48  0100               	movlb	0	; force () banked
  7031  005A4A  6FA3               	movwf	eMBInit@eParity& (0+255),b
  7032  005A4C  0E00               	movlw	0
  7033  005A4E  EC90  F03C         	call	_eMBInit
  7034                           
  7035                           ; BSR set to: 0
  7036                           ;../app/app_src/uart_default_control.c: 67:             uart_default_state_var = WAIT_GP
      +                          IO_GO_HIGH;
  7037  005A52  0E04               	movlw	4
  7038  005A54  0102               	movlb	2	; force () banked
  7039  005A56  6F5B               	movwf	_uart_default_state_var& (0+255),b
  7040                           
  7041                           ;../app/app_src/uart_default_control.c: 68:             break;
  7042  005A58  0012               	return	
  7043  005A5A                     l1204:
  7044                           
  7045                           ; BSR set to: 0
  7046                           ;../app/app_src/uart_default_control.c: 71:             if(0 != PORTAbits.RA1){
  7047  005A5A  A2CA               	btfss	202,1,c	;volatile
  7048  005A5C  0012               	return	
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;../app/app_src/uart_default_control.c: 72:                 set_timer0base(&blen_sample_
      +                          timer, 250);
  7052  005A5E  0EF7               	movlw	low _blen_sample_timer
  7053  005A60  0100               	movlb	0	; force () banked
  7054  005A62  6F71               	movwf	set_timer0base@timer& (0+255),b
  7055  005A64  0E01               	movlw	high _blen_sample_timer
  7056  005A66  6F72               	movwf	(set_timer0base@timer+1)& (0+255),b
  7057  005A68  0E00               	movlw	0
  7058  005A6A  0100               	movlb	0	; force () banked
  7059  005A6C  6F74               	movwf	(set_timer0base@tval+1)& (0+255),b
  7060  005A6E  0EFA               	movlw	250
  7061  005A70  6F73               	movwf	set_timer0base@tval& (0+255),b
  7062  005A72  EC44  F05C         	call	_set_timer0base	;wreg free
  7063                           
  7064                           ; BSR set to: 57
  7065                           ;../app/app_src/uart_default_control.c: 73:                 uart_default_state_var = DEB
      +                          OUNCE_DEACTIVATION;
  7066  005A76  0E05               	movlw	5
  7067  005A78  0102               	movlb	2	; force () banked
  7068  005A7A  6F5B               	movwf	_uart_default_state_var& (0+255),b
  7069                           
  7070                           ;../app/app_src/uart_default_control.c: 74:             }
  7071  005A7C  0012               	return	
  7072  005A7E                     l19952:
  7073                           
  7074                           ; BSR set to: 0
  7075                           ;../app/app_src/uart_default_control.c: 78:             if(!get_timer0base(&blen_sample_
      +                          timer)){
  7076  005A7E  0EF7               	movlw	low _blen_sample_timer
  7077  005A80  0100               	movlb	0	; force () banked
  7078  005A82  6F71               	movwf	get_timer0base@timer& (0+255),b
  7079  005A84  0E01               	movlw	high _blen_sample_timer
  7080  005A86  6F72               	movwf	(get_timer0base@timer+1)& (0+255),b
  7081  005A88  EC39  F05B         	call	_get_timer0base	;wreg free
  7082  005A8C  0100               	movlb	0	; force () banked
  7083  005A8E  5171               	movf	?_get_timer0base& (0+255),w,b
  7084  005A90  1172               	iorwf	(?_get_timer0base+1)& (0+255),w,b
  7085  005A92  A4D8               	btfss	status,2,c
  7086  005A94  0012               	return	
  7087                           
  7088                           ; BSR set to: 0
  7089                           ;../app/app_src/uart_default_control.c: 79:                 if(0 != PORTAbits.RA1){
  7090  005A96  A2CA               	btfss	202,1,c	;volatile
  7091  005A98  D004               	goto	l19958
  7092                           
  7093                           ; BSR set to: 0
  7094                           ;../app/app_src/uart_default_control.c: 80:                     uart_default_state_var =
      +                           SWITCH_TO_CURRENT;
  7095  005A9A  0E06               	movlw	6
  7096  005A9C  0102               	movlb	2	; force () banked
  7097  005A9E  6F5B               	movwf	_uart_default_state_var& (0+255),b
  7098                           
  7099                           ;../app/app_src/uart_default_control.c: 81:                 }
  7100  005AA0  0012               	return	
  7101  005AA2                     l19958:
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;../app/app_src/uart_default_control.c: 83:                     uart_default_state_var =
      +                           WAIT_GPIO_GO_HIGH;
  7105  005AA2  0E04               	movlw	4
  7106  005AA4  0102               	movlb	2	; force () banked
  7107  005AA6  6F5B               	movwf	_uart_default_state_var& (0+255),b
  7108  005AA8  0012               	return	
  7109  005AAA                     l19960:
  7110                           
  7111                           ; BSR set to: 0
  7112                           ;../app/app_src/uart_default_control.c: 96:             {;../app/app_src/uart_default_co
      +                          ntrol.c: 97:                 (void*)set_parity(curent_parity);
  7113  005AAA  0100               	movlb	0	; force () banked
  7114  005AAC  51E1               	movf	_curent_parity& (0+255),w,b
  7115  005AAE  EC75  F04E         	call	_set_parity
  7116                           
  7117                           ;../app/app_src/uart_default_control.c: 98:                 (void*)set_uart_baud(current
      +                          _baud_rate);
  7118  005AB2  0102               	movlb	2	; force () banked
  7119  005AB4  512B               	movf	_current_baud_rate& (0+255),w,b
  7120  005AB6  ECA7  F03A         	call	_set_uart_baud
  7121                           
  7122                           ;../app/app_src/uart_default_control.c: 99:                 eMBInit( MB_RTU, mb_rtu_addr
      +                          , 0, current_baud_rate,
  7123  005ABA  C0E9  F09D         	movff	_mb_rtu_addr,eMBInit@ucSlaveAddress
  7124  005ABE  0E00               	movlw	0
  7125  005AC0  0100               	movlb	0	; force () banked
  7126  005AC2  6F9E               	movwf	eMBInit@ucPort& (0+255),b
  7127  005AC4  0102               	movlb	2	; force () banked
  7128  005AC6  512B               	movf	_current_baud_rate& (0+255),w,b
  7129  005AC8  0100               	movlb	0	; force () banked
  7130  005ACA  6F9F               	movwf	eMBInit@ulBaudRate& (0+255),b
  7131  005ACC  0102               	movlb	2	; force () banked
  7132  005ACE  512C               	movf	(_current_baud_rate+1)& (0+255),w,b
  7133  005AD0  0100               	movlb	0	; force () banked
  7134  005AD2  6FA0               	movwf	(eMBInit@ulBaudRate+1)& (0+255),b
  7135  005AD4  0102               	movlb	2	; force () banked
  7136  005AD6  512D               	movf	(_current_baud_rate+2)& (0+255),w,b
  7137  005AD8  0100               	movlb	0	; force () banked
  7138  005ADA  6FA1               	movwf	(eMBInit@ulBaudRate+2)& (0+255),b
  7139  005ADC  6BA2               	clrf	(eMBInit@ulBaudRate+3)& (0+255),b
  7140  005ADE  C0E1  F0A3         	movff	_curent_parity,eMBInit@eParity
  7141  005AE2  0E00               	movlw	0
  7142  005AE4  EC90  F03C         	call	_eMBInit
  7143                           
  7144                           ; BSR set to: 0
  7145                           ;../app/app_src/uart_default_control.c: 101:             };../app/app_src/uart_default_c
      +                          ontrol.c: 103:             uart_default_state_var = WAIT_GPIO_GO_LOW;
  7146  005AE8  0E01               	movlw	1
  7147  005AEA  0102               	movlb	2	; force () banked
  7148  005AEC  6F5B               	movwf	_uart_default_state_var& (0+255),b
  7149                           
  7150                           ;../app/app_src/uart_default_control.c: 104:         break;
  7151  005AEE  0012               	return	
  7152  005AF0                     l19966:
  7153                           
  7154                           ; BSR set to: 0
  7155                           ;../app/app_src/uart_default_control.c: 107:             uart_default_state_var = UART_D
      +                          EFAULT_INIT;
  7156  005AF0  0E00               	movlw	0
  7157  005AF2  0102               	movlb	2	; force () banked
  7158  005AF4  6F5B               	movwf	_uart_default_state_var& (0+255),b
  7159                           
  7160                           ;../app/app_src/uart_default_control.c: 108:             break;
  7161  005AF6  0012               	return	
  7162  005AF8                     l19970:
  7163  005AF8  0102               	movlb	2	; force () banked
  7164  005AFA  515B               	movf	_uart_default_state_var& (0+255),w,b
  7165  005AFC  0100               	movlb	0	; force () banked
  7166  005AFE  6FA8               	movwf	??_uart_default_engine& (0+255),b
  7167  005B00  6BA9               	clrf	(??_uart_default_engine+1)& (0+255),b
  7168                           
  7169                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7170                           ; Switch size 1, requested type "simple"
  7171                           ; Number of cases is 1, Range of values is 0 to 0
  7172                           ; switch strategies available:
  7173                           ; Name         Instructions Cycles
  7174                           ; simple_byte            4     3 (average)
  7175                           ;	Chosen strategy is simple_byte
  7176  005B02  51A9               	movf	(??_uart_default_engine+1)& (0+255),w,b
  7177  005B04  0A00               	xorlw	0	; case 0
  7178  005B06  A4D8               	btfss	status,2,c
  7179  005B08  D7F3               	goto	l19966
  7180                           
  7181                           ; BSR set to: 0
  7182                           ; Switch size 1, requested type "simple"
  7183                           ; Number of cases is 7, Range of values is 0 to 6
  7184                           ; switch strategies available:
  7185                           ; Name         Instructions Cycles
  7186                           ; simple_byte           22    12 (average)
  7187                           ;	Chosen strategy is simple_byte
  7188  005B0A  51A8               	movf	??_uart_default_engine& (0+255),w,b
  7189  005B0C  0A00               	xorlw	0	; case 0
  7190  005B0E  B4D8               	btfsc	status,2,c
  7191  005B10  D756               	goto	l19926
  7192  005B12  0A01               	xorlw	1	; case 1
  7193  005B14  B4D8               	btfsc	status,2,c
  7194  005B16  D757               	goto	l1197
  7195  005B18  0A03               	xorlw	3	; case 2
  7196  005B1A  B4D8               	btfsc	status,2,c
  7197  005B1C  D766               	goto	l19932
  7198  005B1E  0A01               	xorlw	1	; case 3
  7199  005B20  B4D8               	btfsc	status,2,c
  7200  005B22  D779               	goto	l19940
  7201  005B24  0A07               	xorlw	7	; case 4
  7202  005B26  B4D8               	btfsc	status,2,c
  7203  005B28  D798               	goto	l1204
  7204  005B2A  0A01               	xorlw	1	; case 5
  7205  005B2C  B4D8               	btfsc	status,2,c
  7206  005B2E  D7A7               	goto	l19952
  7207  005B30  0A03               	xorlw	3	; case 6
  7208  005B32  B4D8               	btfsc	status,2,c
  7209  005B34  D7BA               	goto	l19960
  7210  005B36  D7DC               	goto	l19966
  7211  005B38                     __end_of_uart_default_engine:
  7212                           	callstack 0
  7213                           
  7214 ;; *************** function _sync_eeprom *****************
  7215 ;; Defined at:
  7216 ;;		line 77 in file "../app/app_src/EEPROM.c"
  7217 ;; Parameters:    Size  Location     Type
  7218 ;;		None
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;  i               1   25[BANK0 ] unsigned char 
  7221 ;;  i               1   24[BANK0 ] unsigned char 
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  1    wreg      void 
  7224 ;; Registers used:
  7225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7226 ;; Tracked objects:
  7227 ;;		On entry : 6/0
  7228 ;;		On exit  : 3F/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7232 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7234 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7235 ;;Total ram usage:        2 bytes
  7236 ;; Hardware stack levels used:    1
  7237 ;; Hardware stack levels required when called:   13
  7238 ;; This function calls:
  7239 ;;		_DATAEE_WriteByte_Platform
  7240 ;;		_PHY_Get_Packet_Rssi_Threshold
  7241 ;; This function is called by:
  7242 ;;		_application
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           	psect	text15
  7247  0046B0                     __ptext15:
  7248                           	callstack 0
  7249  0046B0                     _sync_eeprom:
  7250                           	callstack 16
  7251                           
  7252                           ;../app/app_src/EEPROM.c: 78:     if(0 != eeprom_write_flags.flag_master){
  7253                           
  7254                           ;incstack = 0
  7255  0046B0  0100               	movlb	0	; force () banked
  7256  0046B2  A1D7               	btfss	_eeprom_write_flags& (0+255),0,b
  7257  0046B4  0012               	return	
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;../app/app_src/EEPROM.c: 80:         if(0 != eeprom_write_flags.flag_bootload){
  7261  0046B6  0100               	movlb	0	; force () banked
  7262  0046B8  A3D7               	btfss	_eeprom_write_flags& (0+255),1,b
  7263  0046BA  D00D               	goto	l931
  7264                           
  7265                           ; BSR set to: 0
  7266                           ;../app/app_src/EEPROM.c: 81:             DATAEE_WriteByte_Platform(0 + 0, 0xAA);
  7267  0046BC  0E00               	movlw	0
  7268  0046BE  0100               	movlb	0	; force () banked
  7269  0046C0  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  7270  0046C2  0E00               	movlw	0
  7271  0046C4  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  7272  0046C6  0EAA               	movlw	170
  7273  0046C8  0100               	movlb	0	; force () banked
  7274  0046CA  6F77               	movwf	DATAEE_WriteByte_Platform@data& (0+255),b
  7275  0046CC  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  7276                           
  7277                           ;../app/app_src/EEPROM.c: 82:             eeprom_write_flags.flag_bootload = 0;
  7278  0046D0  0100               	movlb	0	; force () banked
  7279  0046D2  93D7               	bcf	_eeprom_write_flags& (0+255),1,b
  7280                           
  7281                           ;../app/app_src/EEPROM.c: 83:         }
  7282  0046D4  0012               	return	
  7283  0046D6                     l931:
  7284                           
  7285                           ; BSR set to: 0
  7286  0046D6  0100               	movlb	0	; force () banked
  7287  0046D8  A7D7               	btfss	_eeprom_write_flags& (0+255),3,b
  7288  0046DA  D021               	goto	l933
  7289                           
  7290                           ; BSR set to: 0
  7291                           ;../app/app_src/EEPROM.c: 85:             for(uint8_t i = 0; i < sizeof(aes_key); i++){
  7292  0046DC  0E00               	movlw	0
  7293  0046DE  0100               	movlb	0	; force () banked
  7294  0046E0  6F78               	movwf	sync_eeprom@i& (0+255),b
  7295  0046E2  D016               	goto	l19866
  7296  0046E4                     l19862:
  7297                           
  7298                           ; BSR set to: 0
  7299                           ;../app/app_src/EEPROM.c: 86:                 DATAEE_WriteByte_Platform((0 + 0 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + i),aes_key[i]);
  7300  0046E4  0E09               	movlw	9
  7301  0046E6  0100               	movlb	0	; force () banked
  7302  0046E8  2578               	addwf	sync_eeprom@i& (0+255),w,b
  7303  0046EA  0100               	movlb	0	; force () banked
  7304  0046EC  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  7305  0046EE  6B76               	clrf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  7306  0046F0  0E00               	movlw	0
  7307  0046F2  2376               	addwfc	(DATAEE_WriteByte_Platform@addr+1)& (0+255),f,b
  7308  0046F4  0E96               	movlw	low _aes_key
  7309  0046F6  0100               	movlb	0	; force () banked
  7310  0046F8  2578               	addwf	sync_eeprom@i& (0+255),w,b
  7311  0046FA  6ED9               	movwf	fsr2l,c
  7312  0046FC  6ADA               	clrf	fsr2h,c
  7313  0046FE  0E03               	movlw	high _aes_key
  7314  004700  22DA               	addwfc	fsr2h,f,c
  7315  004702  50DF               	movf	indf2,w,c
  7316  004704  0100               	movlb	0	; force () banked
  7317  004706  6F77               	movwf	DATAEE_WriteByte_Platform@data& (0+255),b
  7318  004708  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  7319                           
  7320                           ;../app/app_src/EEPROM.c: 87:             }
  7321  00470C  0100               	movlb	0	; force () banked
  7322  00470E  2B78               	incf	sync_eeprom@i& (0+255),f,b
  7323  004710                     l19866:
  7324                           
  7325                           ; BSR set to: 0
  7326  004710  0E0F               	movlw	15
  7327  004712  0100               	movlb	0	; force () banked
  7328  004714  6578               	cpfsgt	sync_eeprom@i& (0+255),b
  7329  004716  D7E6               	goto	l19862
  7330                           
  7331                           ; BSR set to: 0
  7332                           ;../app/app_src/EEPROM.c: 88:             eeprom_write_flags.flag_appkey = 0;
  7333  004718  0100               	movlb	0	; force () banked
  7334  00471A  97D7               	bcf	_eeprom_write_flags& (0+255),3,b
  7335                           
  7336                           ;../app/app_src/EEPROM.c: 89:         }
  7337  00471C  0012               	return	
  7338  00471E                     l933:
  7339                           
  7340                           ; BSR set to: 0
  7341  00471E  0100               	movlb	0	; force () banked
  7342  004720  A9D7               	btfss	_eeprom_write_flags& (0+255),4,b
  7343  004722  D021               	goto	l937
  7344                           
  7345                           ; BSR set to: 0
  7346                           ;../app/app_src/EEPROM.c: 91:             for(uint8_t i = 0; i < sizeof(net_key); i++){
  7347  004724  0E00               	movlw	0
  7348  004726  0100               	movlb	0	; force () banked
  7349  004728  6F79               	movwf	sync_eeprom@i_1693& (0+255),b
  7350  00472A  D016               	goto	l19878
  7351  00472C                     l19874:
  7352                           
  7353                           ; BSR set to: 0
  7354                           ;../app/app_src/EEPROM.c: 92:                 DATAEE_WriteByte_Platform((0 + 0 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i),net_key[i]);
  7355  00472C  0E24               	movlw	36
  7356  00472E  0100               	movlb	0	; force () banked
  7357  004730  2579               	addwf	sync_eeprom@i_1693& (0+255),w,b
  7358  004732  0100               	movlb	0	; force () banked
  7359  004734  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  7360  004736  6B76               	clrf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  7361  004738  0E00               	movlw	0
  7362  00473A  2376               	addwfc	(DATAEE_WriteByte_Platform@addr+1)& (0+255),f,b
  7363  00473C  0E86               	movlw	low _net_key
  7364  00473E  0100               	movlb	0	; force () banked
  7365  004740  2579               	addwf	sync_eeprom@i_1693& (0+255),w,b
  7366  004742  6ED9               	movwf	fsr2l,c
  7367  004744  6ADA               	clrf	fsr2h,c
  7368  004746  0E03               	movlw	high _net_key
  7369  004748  22DA               	addwfc	fsr2h,f,c
  7370  00474A  50DF               	movf	indf2,w,c
  7371  00474C  0100               	movlb	0	; force () banked
  7372  00474E  6F77               	movwf	DATAEE_WriteByte_Platform@data& (0+255),b
  7373  004750  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  7374                           
  7375                           ;../app/app_src/EEPROM.c: 93:             }
  7376  004754  0100               	movlb	0	; force () banked
  7377  004756  2B79               	incf	sync_eeprom@i_1693& (0+255),f,b
  7378  004758                     l19878:
  7379                           
  7380                           ; BSR set to: 0
  7381  004758  0E0F               	movlw	15
  7382  00475A  0100               	movlb	0	; force () banked
  7383  00475C  6579               	cpfsgt	sync_eeprom@i_1693& (0+255),b
  7384  00475E  D7E6               	goto	l19874
  7385                           
  7386                           ; BSR set to: 0
  7387                           ;../app/app_src/EEPROM.c: 94:             eeprom_write_flags.flag_netkey = 0;
  7388  004760  0100               	movlb	0	; force () banked
  7389  004762  99D7               	bcf	_eeprom_write_flags& (0+255),4,b
  7390                           
  7391                           ;../app/app_src/EEPROM.c: 95:         }
  7392  004764  0012               	return	
  7393  004766                     l937:
  7394                           
  7395                           ; BSR set to: 0
  7396  004766  0100               	movlb	0	; force () banked
  7397  004768  ABD7               	btfss	_eeprom_write_flags& (0+255),5,b
  7398  00476A  D015               	goto	l941
  7399                           
  7400                           ; BSR set to: 0
  7401                           ;../app/app_src/EEPROM.c: 97:             DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1,(p
      +                          an_id >> 8) & 0xFF);
  7402  00476C  0E00               	movlw	0
  7403  00476E  0100               	movlb	0	; force () banked
  7404  004770  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  7405  004772  0E19               	movlw	25
  7406  004774  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  7407  004776  C1DC  F077         	movff	_pan_id+1,DATAEE_WriteByte_Platform@data
  7408  00477A  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  7409                           
  7410                           ;../app/app_src/EEPROM.c: 98:             DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1,pan_id & 0xFF);
  7411  00477E  0E00               	movlw	0
  7412  004780  0100               	movlb	0	; force () banked
  7413  004782  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  7414  004784  0E1A               	movlw	26
  7415  004786  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  7416  004788  C1DB  F077         	movff	_pan_id,DATAEE_WriteByte_Platform@data
  7417  00478C  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  7418                           
  7419                           ;../app/app_src/EEPROM.c: 99:             eeprom_write_flags.flag_netid = 0;
  7420  004790  0100               	movlb	0	; force () banked
  7421  004792  9BD7               	bcf	_eeprom_write_flags& (0+255),5,b
  7422                           
  7423                           ;../app/app_src/EEPROM.c: 100:         }
  7424  004794  0012               	return	
  7425  004796                     l941:
  7426                           
  7427                           ; BSR set to: 0
  7428  004796  0100               	movlb	0	; force () banked
  7429  004798  ADD7               	btfss	_eeprom_write_flags& (0+255),6,b
  7430  00479A  D015               	goto	l943
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;../app/app_src/EEPROM.c: 102:             DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1, sinkAddr0);
  7434  00479C  0E00               	movlw	0
  7435  00479E  0100               	movlb	0	; force () banked
  7436  0047A0  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  7437  0047A2  0E1B               	movlw	27
  7438  0047A4  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  7439  0047A6  C0E0  F077         	movff	_sinkAddr0,DATAEE_WriteByte_Platform@data
  7440  0047AA  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  7441                           
  7442                           ;../app/app_src/EEPROM.c: 103:             DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1, sinkAddr1);
  7443  0047AE  0E00               	movlw	0
  7444  0047B0  0100               	movlb	0	; force () banked
  7445  0047B2  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  7446  0047B4  0E1B               	movlw	27
  7447  0047B6  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  7448  0047B8  C0DF  F077         	movff	_sinkAddr1,DATAEE_WriteByte_Platform@data
  7449  0047BC  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  7450                           
  7451                           ;../app/app_src/EEPROM.c: 104:             eeprom_write_flags.flag_sink = 0;
  7452  0047C0  0100               	movlb	0	; force () banked
  7453  0047C2  9DD7               	bcf	_eeprom_write_flags& (0+255),6,b
  7454                           
  7455                           ;../app/app_src/EEPROM.c: 105:         }
  7456  0047C4  0012               	return	
  7457  0047C6                     l943:
  7458                           
  7459                           ; BSR set to: 0
  7460  0047C6  0100               	movlb	0	; force () banked
  7461  0047C8  AFD7               	btfss	_eeprom_write_flags& (0+255),7,b
  7462  0047CA  D00C               	goto	l945
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;../app/app_src/EEPROM.c: 107:             DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1, channel);
  7466  0047CC  0E00               	movlw	0
  7467  0047CE  0100               	movlb	0	; force () banked
  7468  0047D0  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  7469  0047D2  0E1D               	movlw	29
  7470  0047D4  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  7471  0047D6  C0DD  F077         	movff	_channel,DATAEE_WriteByte_Platform@data
  7472  0047DA  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  7473                           
  7474                           ;../app/app_src/EEPROM.c: 108:             eeprom_write_flags.flag_radio_ch = 0;
  7475  0047DE  0100               	movlb	0	; force () banked
  7476  0047E0  9FD7               	bcf	_eeprom_write_flags& (0+255),7,b
  7477                           
  7478                           ;../app/app_src/EEPROM.c: 109:         }
  7479  0047E2  0012               	return	
  7480  0047E4                     l945:
  7481                           
  7482                           ; BSR set to: 0
  7483  0047E4  0100               	movlb	0	; force () banked
  7484  0047E6  A1D8               	btfss	(_eeprom_write_flags+1)& (0+255),0,b
  7485  0047E8  D00C               	goto	l947
  7486                           
  7487                           ; BSR set to: 0
  7488                           ;../app/app_src/EEPROM.c: 111:             DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1, TXPower);
  7489  0047EA  0E00               	movlw	0
  7490  0047EC  0100               	movlb	0	; force () banked
  7491  0047EE  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  7492  0047F0  0E1E               	movlw	30
  7493  0047F2  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  7494  0047F4  C0DC  F077         	movff	_TXPower,DATAEE_WriteByte_Platform@data
  7495  0047F8  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  7496                           
  7497                           ;../app/app_src/EEPROM.c: 112:             eeprom_write_flags.flag_tx_power = 0;
  7498  0047FC  0100               	movlb	0	; force () banked
  7499  0047FE  91D8               	bcf	(_eeprom_write_flags+1)& (0+255),0,b
  7500                           
  7501                           ;../app/app_src/EEPROM.c: 113:         }
  7502  004800  0012               	return	
  7503  004802                     l947:
  7504                           
  7505                           ; BSR set to: 0
  7506  004802  0100               	movlb	0	; force () banked
  7507  004804  A3D8               	btfss	(_eeprom_write_flags+1)& (0+255),1,b
  7508  004806  D00C               	goto	l949
  7509                           
  7510                           ; BSR set to: 0
  7511                           ;../app/app_src/EEPROM.c: 115:             DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1, RSSITarget);
  7512  004808  0E00               	movlw	0
  7513  00480A  0100               	movlb	0	; force () banked
  7514  00480C  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  7515  00480E  0E1F               	movlw	31
  7516  004810  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  7517  004812  C0E8  F077         	movff	_RSSITarget,DATAEE_WriteByte_Platform@data
  7518  004816  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  7519                           
  7520                           ;../app/app_src/EEPROM.c: 116:             eeprom_write_flags.flag_rssi = 0;
  7521  00481A  0100               	movlb	0	; force () banked
  7522  00481C  93D8               	bcf	(_eeprom_write_flags+1)& (0+255),1,b
  7523                           
  7524                           ;../app/app_src/EEPROM.c: 117:         }
  7525  00481E  0012               	return	
  7526  004820                     l949:
  7527                           
  7528                           ; BSR set to: 0
  7529  004820  0100               	movlb	0	; force () banked
  7530  004822  A7D8               	btfss	(_eeprom_write_flags+1)& (0+255),3,b
  7531  004824  D00C               	goto	l951
  7532                           
  7533                           ; BSR set to: 0
  7534                           ;../app/app_src/EEPROM.c: 119:             DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, uart_baud_rate);
  7535  004826  0E00               	movlw	0
  7536  004828  0100               	movlb	0	; force () banked
  7537  00482A  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  7538  00482C  0E21               	movlw	33
  7539  00482E  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  7540  004830  C1F2  F077         	movff	_uart_baud_rate,DATAEE_WriteByte_Platform@data
  7541  004834  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  7542                           
  7543                           ;../app/app_src/EEPROM.c: 120:             eeprom_write_flags.flag_uart_baud = 0;
  7544  004838  0100               	movlb	0	; force () banked
  7545  00483A  97D8               	bcf	(_eeprom_write_flags+1)& (0+255),3,b
  7546                           
  7547                           ;../app/app_src/EEPROM.c: 121:         }
  7548  00483C  0012               	return	
  7549  00483E                     l951:
  7550                           
  7551                           ; BSR set to: 0
  7552  00483E  0100               	movlb	0	; force () banked
  7553  004840  A5D8               	btfss	(_eeprom_write_flags+1)& (0+255),2,b
  7554  004842  D00C               	goto	l953
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;../app/app_src/EEPROM.c: 123:             DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1, uart_parity);
  7558  004844  0E00               	movlw	0
  7559  004846  0100               	movlb	0	; force () banked
  7560  004848  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  7561  00484A  0E20               	movlw	32
  7562  00484C  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  7563  00484E  C1F1  F077         	movff	_uart_parity,DATAEE_WriteByte_Platform@data
  7564  004852  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  7565                           
  7566                           ;../app/app_src/EEPROM.c: 124:             eeprom_write_flags.flag_uart_parity = 0;
  7567  004856  0100               	movlb	0	; force () banked
  7568  004858  95D8               	bcf	(_eeprom_write_flags+1)& (0+255),2,b
  7569                           
  7570                           ;../app/app_src/EEPROM.c: 125:         }
  7571  00485A  0012               	return	
  7572  00485C                     l953:
  7573                           
  7574                           ; BSR set to: 0
  7575  00485C  0100               	movlb	0	; force () banked
  7576  00485E  A9D8               	btfss	(_eeprom_write_flags+1)& (0+255),4,b
  7577  004860  D00C               	goto	l955
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;../app/app_src/EEPROM.c: 127:             DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, current_sf);
  7581  004862  0E00               	movlw	0
  7582  004864  0100               	movlb	0	; force () banked
  7583  004866  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  7584  004868  0E22               	movlw	34
  7585  00486A  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  7586  00486C  C0DE  F077         	movff	_current_sf,DATAEE_WriteByte_Platform@data
  7587  004870  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  7588                           
  7589                           ;../app/app_src/EEPROM.c: 128:             eeprom_write_flags.flag_sf = 0;
  7590  004874  0100               	movlb	0	; force () banked
  7591  004876  99D8               	bcf	(_eeprom_write_flags+1)& (0+255),4,b
  7592                           
  7593                           ;../app/app_src/EEPROM.c: 129:         }
  7594  004878  0012               	return	
  7595  00487A                     l955:
  7596                           
  7597                           ; BSR set to: 0
  7598  00487A  0100               	movlb	0	; force () banked
  7599  00487C  ABD8               	btfss	(_eeprom_write_flags+1)& (0+255),5,b
  7600  00487E  D00C               	goto	l957
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;../app/app_src/EEPROM.c: 132:             DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, mb_rtu_addr);
  7604  004880  0E00               	movlw	0
  7605  004882  0100               	movlb	0	; force () banked
  7606  004884  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  7607  004886  0E23               	movlw	35
  7608  004888  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  7609  00488A  C0E9  F077         	movff	_mb_rtu_addr,DATAEE_WriteByte_Platform@data
  7610  00488E  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  7611                           
  7612                           ;../app/app_src/EEPROM.c: 134:             eeprom_write_flags.flag_mbaddr = 0;
  7613  004892  0100               	movlb	0	; force () banked
  7614  004894  9BD8               	bcf	(_eeprom_write_flags+1)& (0+255),5,b
  7615                           
  7616                           ;../app/app_src/EEPROM.c: 135:         }
  7617  004896  0012               	return	
  7618  004898                     l957:
  7619                           
  7620                           ; BSR set to: 0
  7621  004898  0100               	movlb	0	; force () banked
  7622  00489A  A5D7               	btfss	_eeprom_write_flags& (0+255),2,b
  7623  00489C  D003               	goto	l959
  7624                           
  7625                           ; BSR set to: 0
  7626                           ;../app/app_src/EEPROM.c: 137:             eeprom_write_flags.flag_serial = 0;
  7627  00489E  0100               	movlb	0	; force () banked
  7628  0048A0  95D7               	bcf	_eeprom_write_flags& (0+255),2,b
  7629                           
  7630                           ;../app/app_src/EEPROM.c: 138:         }
  7631  0048A2  0012               	return	
  7632  0048A4                     l959:
  7633                           
  7634                           ; BSR set to: 0
  7635  0048A4  0100               	movlb	0	; force () banked
  7636  0048A6  ADD8               	btfss	(_eeprom_write_flags+1)& (0+255),6,b
  7637  0048A8  D00E               	goto	l961
  7638                           
  7639                           ; BSR set to: 0
  7640                           ;../app/app_src/EEPROM.c: 140:             DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1 + 1 + 1, PHY_Get_Packet_Rssi_Threshold());
  7641  0048AA  0E00               	movlw	0
  7642  0048AC  0100               	movlb	0	; force () banked
  7643  0048AE  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
  7644  0048B0  0E34               	movlw	52
  7645  0048B2  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
  7646  0048B4  ECA9  F05E         	call	_PHY_Get_Packet_Rssi_Threshold	;wreg free
  7647  0048B8  0100               	movlb	0	; force () banked
  7648  0048BA  6F77               	movwf	DATAEE_WriteByte_Platform@data& (0+255),b
  7649  0048BC  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
  7650                           
  7651                           ;../app/app_src/EEPROM.c: 141:             eeprom_write_flags.flag_good_rssi = 0;
  7652  0048C0  0100               	movlb	0	; force () banked
  7653  0048C2  9DD8               	bcf	(_eeprom_write_flags+1)& (0+255),6,b
  7654                           
  7655                           ;../app/app_src/EEPROM.c: 142:         }
  7656  0048C4  0012               	return	
  7657  0048C6                     l961:
  7658                           
  7659                           ; BSR set to: 0
  7660  0048C6  0100               	movlb	0	; force () banked
  7661  0048C8  AFD8               	btfss	(_eeprom_write_flags+1)& (0+255),7,b
  7662  0048CA  D003               	goto	l963
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;../app/app_src/EEPROM.c: 144:             eeprom_write_flags.resv = 0;
  7666  0048CC  0100               	movlb	0	; force () banked
  7667  0048CE  9FD8               	bcf	(_eeprom_write_flags+1)& (0+255),7,b
  7668                           
  7669                           ;../app/app_src/EEPROM.c: 145:         }
  7670  0048D0  0012               	return	
  7671  0048D2                     l963:
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;../app/app_src/EEPROM.c: 147:             eeprom_write_flags.flag_master = 0;
  7675  0048D2  0100               	movlb	0	; force () banked
  7676  0048D4  91D7               	bcf	_eeprom_write_flags& (0+255),0,b
  7677                           
  7678                           ; BSR set to: 0
  7679  0048D6  0012               	return		;funcret
  7680  0048D8                     __end_of_sync_eeprom:
  7681                           	callstack 0
  7682                           
  7683 ;; *************** function _stop_loop_timer *****************
  7684 ;; Defined at:
  7685 ;;		line 36 in file "../wdt/wdt_src/wdt.c"
  7686 ;; Parameters:    Size  Location     Type
  7687 ;;		None
  7688 ;; Auto vars:     Size  Location     Type
  7689 ;;  looptime        2   25[BANK0 ] unsigned int 
  7690 ;; Return value:  Size  Location     Type
  7691 ;;                  1    wreg      void 
  7692 ;; Registers used:
  7693 ;;		wreg, status,2, status,0, cstack
  7694 ;; Tracked objects:
  7695 ;;		On entry : 3D/0
  7696 ;;		On exit  : 3F/2
  7697 ;;		Unchanged: 0/0
  7698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7700 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7702 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7703 ;;Total ram usage:        2 bytes
  7704 ;; Hardware stack levels used:    1
  7705 ;; Hardware stack levels required when called:   12
  7706 ;; This function calls:
  7707 ;;		_TMR5_ReadTimer
  7708 ;;		_TMR5_StopTimer
  7709 ;; This function is called by:
  7710 ;;		_application
  7711 ;; This function uses a non-reentrant model
  7712 ;;
  7713                           
  7714                           	psect	text16
  7715  00AB34                     __ptext16:
  7716                           	callstack 0
  7717  00AB34                     _stop_loop_timer:
  7718                           	callstack 17
  7719                           
  7720                           ;../wdt/wdt_src/wdt.c: 37:     uint16_t looptime;;../wdt/wdt_src/wdt.c: 39:  TMR5_StopTi
      +                          mer();
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;incstack = 0
  7724  00AB34  ECBC  F05E         	call	_TMR5_StopTimer	;wreg free
  7725                           
  7726                           ;../wdt/wdt_src/wdt.c: 40:  looptime = TMR5_ReadTimer();
  7727  00AB38  ECA1  F05A         	call	_TMR5_ReadTimer	;wreg free
  7728  00AB3C  C071  F079         	movff	?_TMR5_ReadTimer,stop_loop_timer@looptime
  7729  00AB40  C072  F07A         	movff	?_TMR5_ReadTimer+1,stop_loop_timer@looptime+1
  7730                           
  7731                           ; BSR set to: 0
  7732                           ;../wdt/wdt_src/wdt.c: 41:     if(looptime < min_loop_time){
  7733  00AB44  0102               	movlb	2	; force () banked
  7734  00AB46  51F9               	movf	_min_loop_time& (0+255),w,b
  7735  00AB48  0100               	movlb	0	; force () banked
  7736  00AB4A  5D79               	subwf	stop_loop_timer@looptime& (0+255),w,b
  7737  00AB4C  0102               	movlb	2	; force () banked
  7738  00AB4E  51FA               	movf	(_min_loop_time+1)& (0+255),w,b
  7739  00AB50  0100               	movlb	0	; force () banked
  7740  00AB52  597A               	subwfb	(stop_loop_timer@looptime+1)& (0+255),w,b
  7741  00AB54  B0D8               	btfsc	status,0,c
  7742  00AB56  D004               	goto	l16236
  7743                           
  7744                           ; BSR set to: 0
  7745                           ;../wdt/wdt_src/wdt.c: 42:         min_loop_time = looptime;
  7746  00AB58  C079  F2F9         	movff	stop_loop_timer@looptime,_min_loop_time
  7747  00AB5C  C07A  F2FA         	movff	stop_loop_timer@looptime+1,_min_loop_time+1
  7748  00AB60                     l16236:
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;../wdt/wdt_src/wdt.c: 44:     if(looptime > max_loop_time){
  7752  00AB60  0100               	movlb	0	; force () banked
  7753  00AB62  5179               	movf	stop_loop_timer@looptime& (0+255),w,b
  7754  00AB64  0102               	movlb	2	; force () banked
  7755  00AB66  5D3C               	subwf	_max_loop_time& (0+255),w,b
  7756  00AB68  0100               	movlb	0	; force () banked
  7757  00AB6A  517A               	movf	(stop_loop_timer@looptime+1)& (0+255),w,b
  7758  00AB6C  0102               	movlb	2	; force () banked
  7759  00AB6E  593D               	subwfb	(_max_loop_time+1)& (0+255),w,b
  7760  00AB70  B0D8               	btfsc	status,0,c
  7761  00AB72  0012               	return	
  7762                           
  7763                           ; BSR set to: 2
  7764                           ;../wdt/wdt_src/wdt.c: 45:         max_loop_time = looptime;
  7765  00AB74  C079  F23C         	movff	stop_loop_timer@looptime,_max_loop_time
  7766  00AB78  C07A  F23D         	movff	stop_loop_timer@looptime+1,_max_loop_time+1
  7767                           
  7768                           ; BSR set to: 2
  7769  00AB7C  0012               	return		;funcret
  7770  00AB7E                     __end_of_stop_loop_timer:
  7771                           	callstack 0
  7772                           
  7773 ;; *************** function _TMR5_StopTimer *****************
  7774 ;; Defined at:
  7775 ;;		line 98 in file "mcc_generated_files/tmr5.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;		None
  7778 ;; Auto vars:     Size  Location     Type
  7779 ;;		None
  7780 ;; Return value:  Size  Location     Type
  7781 ;;                  1    wreg      void 
  7782 ;; Registers used:
  7783 ;;		None
  7784 ;; Tracked objects:
  7785 ;;		On entry : 0/0
  7786 ;;		On exit  : 0/0
  7787 ;;		Unchanged: 0/0
  7788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7793 ;;Total ram usage:        0 bytes
  7794 ;; Hardware stack levels used:    1
  7795 ;; Hardware stack levels required when called:   11
  7796 ;; This function calls:
  7797 ;;		Nothing
  7798 ;; This function is called by:
  7799 ;;		_stop_loop_timer
  7800 ;; This function uses a non-reentrant model
  7801 ;;
  7802                           
  7803                           	psect	text17
  7804  00BD78                     __ptext17:
  7805                           	callstack 0
  7806  00BD78                     _TMR5_StopTimer:
  7807                           	callstack 17
  7808                           
  7809                           ;mcc_generated_files/tmr5.c: 101:     T5CONbits.TMR5ON = 0;
  7810                           
  7811                           ; BSR set to: 2
  7812                           ;incstack = 0
  7813  00BD78  909A               	bcf	154,0,c	;volatile
  7814  00BD7A  0012               	return		;funcret
  7815  00BD7C                     __end_of_TMR5_StopTimer:
  7816                           	callstack 0
  7817                           
  7818 ;; *************** function _TMR5_ReadTimer *****************
  7819 ;; Defined at:
  7820 ;;		line 104 in file "mcc_generated_files/tmr5.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;		None
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;  readVal         2   21[BANK0 ] unsigned int 
  7825 ;;  readValLow      1   24[BANK0 ] unsigned char 
  7826 ;;  readValHigh     1   23[BANK0 ] unsigned char 
  7827 ;; Return value:  Size  Location     Type
  7828 ;;                  2   17[BANK0 ] unsigned int 
  7829 ;; Registers used:
  7830 ;;		wreg, status,2
  7831 ;; Tracked objects:
  7832 ;;		On entry : 0/0
  7833 ;;		On exit  : 3F/0
  7834 ;;		Unchanged: 0/0
  7835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7836 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7837 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7838 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7839 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7840 ;;Total ram usage:        8 bytes
  7841 ;; Hardware stack levels used:    1
  7842 ;; Hardware stack levels required when called:   11
  7843 ;; This function calls:
  7844 ;;		Nothing
  7845 ;; This function is called by:
  7846 ;;		_stop_loop_timer
  7847 ;; This function uses a non-reentrant model
  7848 ;;
  7849                           
  7850                           	psect	text18
  7851  00B542                     __ptext18:
  7852                           	callstack 0
  7853  00B542                     _TMR5_ReadTimer:
  7854                           	callstack 17
  7855                           
  7856                           ;mcc_generated_files/tmr5.c: 106:     uint16_t readVal;;mcc_generated_files/tmr5.c: 107:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr5.c: 108:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr5.c: 110:     T5CONbits.T5RD16 = 1;
  7857                           
  7858                           ;incstack = 0
  7859  00B542  829A               	bsf	154,1,c	;volatile
  7860                           
  7861                           ;mcc_generated_files/tmr5.c: 112:     readValLow = TMR5L;
  7862  00B544  006F FE60  F078    	movff	16280,TMR5_ReadTimer@readValLow	;volatile
  7863                           
  7864                           ;mcc_generated_files/tmr5.c: 113:     readValHigh = TMR5H;
  7865  00B54A  006F FE64  F077    	movff	16281,TMR5_ReadTimer@readValHigh	;volatile
  7866                           
  7867                           ;mcc_generated_files/tmr5.c: 115:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  7868  00B550  0100               	movlb	0	; force () banked
  7869  00B552  5177               	movf	TMR5_ReadTimer@readValHigh& (0+255),w,b
  7870  00B554  0100               	movlb	0	; force () banked
  7871  00B556  6F73               	movwf	??_TMR5_ReadTimer& (0+255),b
  7872  00B558  0100               	movlb	0	; force () banked
  7873  00B55A  5178               	movf	TMR5_ReadTimer@readValLow& (0+255),w,b
  7874  00B55C  0100               	movlb	0	; force () banked
  7875  00B55E  6F75               	movwf	TMR5_ReadTimer@readVal& (0+255),b
  7876  00B560  C073  F076         	movff	??_TMR5_ReadTimer,TMR5_ReadTimer@readVal+1
  7877                           
  7878                           ; BSR set to: 0
  7879                           ;mcc_generated_files/tmr5.c: 117:     return readVal;
  7880  00B564  C075  F071         	movff	TMR5_ReadTimer@readVal,?_TMR5_ReadTimer
  7881  00B568  C076  F072         	movff	TMR5_ReadTimer@readVal+1,?_TMR5_ReadTimer+1
  7882                           
  7883                           ; BSR set to: 0
  7884  00B56C  0012               	return		;funcret
  7885  00B56E                     __end_of_TMR5_ReadTimer:
  7886                           	callstack 0
  7887                           
  7888 ;; *************** function _start_loop_timer *****************
  7889 ;; Defined at:
  7890 ;;		line 29 in file "../wdt/wdt_src/wdt.c"
  7891 ;; Parameters:    Size  Location     Type
  7892 ;;		None
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;		None
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  1    wreg      void 
  7897 ;; Registers used:
  7898 ;;		wreg, status,2, cstack
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7908 ;;Total ram usage:        0 bytes
  7909 ;; Hardware stack levels used:    1
  7910 ;; Hardware stack levels required when called:   12
  7911 ;; This function calls:
  7912 ;;		_TMR5_StartTimer
  7913 ;;		_TMR5_WriteTimer
  7914 ;; This function is called by:
  7915 ;;		_application
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           	psect	text19
  7920  00BBC6                     __ptext19:
  7921                           	callstack 0
  7922  00BBC6                     _start_loop_timer:
  7923                           	callstack 17
  7924                           
  7925                           ;../wdt/wdt_src/wdt.c: 31:  TMR5_WriteTimer(0);
  7926                           
  7927                           ; BSR set to: 0
  7928                           ;incstack = 0
  7929  00BBC6  0E00               	movlw	0
  7930  00BBC8  0100               	movlb	0	; force () banked
  7931  00BBCA  6F72               	movwf	(TMR5_WriteTimer@timerVal+1)& (0+255),b
  7932  00BBCC  0E00               	movlw	0
  7933  00BBCE  6F71               	movwf	TMR5_WriteTimer@timerVal& (0+255),b
  7934  00BBD0  ECED  F05B         	call	_TMR5_WriteTimer	;wreg free
  7935                           
  7936                           ;../wdt/wdt_src/wdt.c: 32:  TMR5_StartTimer();
  7937  00BBD4  ECBE  F05E         	call	_TMR5_StartTimer	;wreg free
  7938  00BBD8  0012               	return		;funcret
  7939  00BBDA                     __end_of_start_loop_timer:
  7940                           	callstack 0
  7941                           
  7942 ;; *************** function _TMR5_WriteTimer *****************
  7943 ;; Defined at:
  7944 ;;		line 120 in file "mcc_generated_files/tmr5.c"
  7945 ;; Parameters:    Size  Location     Type
  7946 ;;  timerVal        2   17[BANK0 ] unsigned int 
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;		None
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  1    wreg      void 
  7951 ;; Registers used:
  7952 ;;		None
  7953 ;; Tracked objects:
  7954 ;;		On entry : 3F/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7958 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7961 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7962 ;;Total ram usage:        2 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:   11
  7965 ;; This function calls:
  7966 ;;		Nothing
  7967 ;; This function is called by:
  7968 ;;		_start_loop_timer
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           
  7972                           	psect	text20
  7973  00B7DA                     __ptext20:
  7974                           	callstack 0
  7975  00B7DA                     _TMR5_WriteTimer:
  7976                           	callstack 17
  7977                           
  7978                           ;mcc_generated_files/tmr5.c: 120: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 121: {;mcc_generated_files/tmr5.c: 122:     if (T5CONbits.NOT_SYNC == 1)
  7979                           
  7980                           ;incstack = 0
  7981  00B7DA  A49A               	btfss	154,2,c	;volatile
  7982  00B7DC  D009               	goto	l2276
  7983                           
  7984                           ;mcc_generated_files/tmr5.c: 123:     {;mcc_generated_files/tmr5.c: 125:         T5CONbi
      +                          ts.TMR5ON = 0;
  7985  00B7DE  909A               	bcf	154,0,c	;volatile
  7986                           
  7987                           ;mcc_generated_files/tmr5.c: 128:         TMR5H = (timerVal >> 8);
  7988  00B7E0  0060  F1CB  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
  7989                           
  7990                           ;mcc_generated_files/tmr5.c: 129:         TMR5L = timerVal;
  7991  00B7E6  0060  F1C7  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
  7992                           
  7993                           ;mcc_generated_files/tmr5.c: 132:         T5CONbits.TMR5ON =1;
  7994  00B7EC  809A               	bsf	154,0,c	;volatile
  7995                           
  7996                           ;mcc_generated_files/tmr5.c: 133:     }
  7997  00B7EE  0012               	return	
  7998  00B7F0                     l2276:
  7999                           
  8000                           ;mcc_generated_files/tmr5.c: 135:     {;mcc_generated_files/tmr5.c: 137:         TMR5H =
      +                           (timerVal >> 8);
  8001  00B7F0  0060  F1CB  FF99   	movff	TMR5_WriteTimer@timerVal+1,16281	;volatile
  8002                           
  8003                           ;mcc_generated_files/tmr5.c: 138:         TMR5L = timerVal;
  8004  00B7F6  0060  F1C7  FF98   	movff	TMR5_WriteTimer@timerVal,16280	;volatile
  8005  00B7FC  0012               	return		;funcret
  8006  00B7FE                     __end_of_TMR5_WriteTimer:
  8007                           	callstack 0
  8008                           
  8009 ;; *************** function _TMR5_StartTimer *****************
  8010 ;; Defined at:
  8011 ;;		line 92 in file "mcc_generated_files/tmr5.c"
  8012 ;; Parameters:    Size  Location     Type
  8013 ;;		None
  8014 ;; Auto vars:     Size  Location     Type
  8015 ;;		None
  8016 ;; Return value:  Size  Location     Type
  8017 ;;                  1    wreg      void 
  8018 ;; Registers used:
  8019 ;;		None
  8020 ;; Tracked objects:
  8021 ;;		On entry : 0/0
  8022 ;;		On exit  : 0/0
  8023 ;;		Unchanged: 0/0
  8024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8029 ;;Total ram usage:        0 bytes
  8030 ;; Hardware stack levels used:    1
  8031 ;; Hardware stack levels required when called:   11
  8032 ;; This function calls:
  8033 ;;		Nothing
  8034 ;; This function is called by:
  8035 ;;		_start_loop_timer
  8036 ;; This function uses a non-reentrant model
  8037 ;;
  8038                           
  8039                           	psect	text21
  8040  00BD7C                     __ptext21:
  8041                           	callstack 0
  8042  00BD7C                     _TMR5_StartTimer:
  8043                           	callstack 17
  8044                           
  8045                           ;mcc_generated_files/tmr5.c: 95:     T5CONbits.TMR5ON = 1;
  8046                           
  8047                           ;incstack = 0
  8048  00BD7C  809A               	bsf	154,0,c	;volatile
  8049  00BD7E  0012               	return		;funcret
  8050  00BD80                     __end_of_TMR5_StartTimer:
  8051                           	callstack 0
  8052                           
  8053 ;; *************** function _reset_handler *****************
  8054 ;; Defined at:
  8055 ;;		line 87 in file "../app/app_src/application.c"
  8056 ;; Parameters:    Size  Location     Type
  8057 ;;		None
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;		None
  8060 ;; Return value:  Size  Location     Type
  8061 ;;                  1    wreg      void 
  8062 ;; Registers used:
  8063 ;;		wreg, status,2, status,0
  8064 ;; Tracked objects:
  8065 ;;		On entry : 3A/0
  8066 ;;		On exit  : 3C/0
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8071 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8072 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8073 ;;Total ram usage:        2 bytes
  8074 ;; Hardware stack levels used:    1
  8075 ;; Hardware stack levels required when called:   11
  8076 ;; This function calls:
  8077 ;;		Nothing
  8078 ;; This function is called by:
  8079 ;;		_application
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           
  8083                           	psect	text22
  8084  00A810                     __ptext22:
  8085                           	callstack 0
  8086  00A810                     _reset_handler:
  8087                           	callstack 18
  8088                           
  8089                           ;../app/app_src/application.c: 88:     static enum rst_state reset_state_var = WAIT_FOR_
      +                          RESET;;../app/app_src/application.c: 89:     switch(reset_state_var){
  8090                           
  8091                           ;incstack = 0
  8092  00A810  D018               	goto	l15910
  8093  00A812                     l15902:
  8094                           
  8095                           ; BSR set to: 0
  8096                           ;../app/app_src/application.c: 91:             if(need_reset){
  8097  00A812  0101               	movlb	1	; force () banked
  8098  00A814  51E5               	movf	_need_reset& (0+255),w,b
  8099  00A816  B4D8               	btfsc	status,2,c
  8100  00A818  0012               	return	
  8101                           
  8102                           ; BSR set to: 1
  8103                           ;../app/app_src/application.c: 92:                 reset_state_var = WAIT_FOR_TIMEOUT;
  8104  00A81A  0E01               	movlw	1
  8105  00A81C  0101               	movlb	1	; force () banked
  8106  00A81E  6FE4               	movwf	reset_handler@reset_state_var& (0+255),b
  8107                           
  8108                           ;../app/app_src/application.c: 93:                 reset_timer = 1000;;
  8109  00A820  0E03               	movlw	3
  8110  00A822  0102               	movlb	2	; force () banked
  8111  00A824  6F4F               	movwf	(_reset_timer+1)& (0+255),b
  8112  00A826  0EE8               	movlw	232
  8113  00A828  6F4E               	movwf	_reset_timer& (0+255),b
  8114  00A82A  0012               	return	
  8115  00A82C                     l15906:
  8116                           
  8117                           ; BSR set to: 0
  8118                           ;../app/app_src/application.c: 97:             if(!reset_timer){
  8119  00A82C  0102               	movlb	2	; force () banked
  8120  00A82E  514E               	movf	_reset_timer& (0+255),w,b
  8121  00A830  114F               	iorwf	(_reset_timer+1)& (0+255),w,b
  8122  00A832  A4D8               	btfss	status,2,c
  8123  00A834  0012               	return	
  8124                           
  8125                           ; BSR set to: 2
  8126                           ;../app/app_src/application.c: 98:                 reset_state_var = RESET_DEVICE;
  8127  00A836  0E02               	movlw	2
  8128  00A838  0101               	movlb	1	; force () banked
  8129  00A83A  6FE4               	movwf	reset_handler@reset_state_var& (0+255),b
  8130  00A83C  0012               	return	
  8131  00A83E                     l422:
  8132                           
  8133                           ; BSR set to: 0
  8134  00A83E  00FF               	reset		;# 
  8135  00A840                     l423:
  8136  00A840  D7FF               	goto	l423
  8137  00A842                     l15910:
  8138  00A842  0101               	movlb	1	; force () banked
  8139  00A844  51E4               	movf	reset_handler@reset_state_var& (0+255),w,b
  8140  00A846  0100               	movlb	0	; force () banked
  8141  00A848  6F71               	movwf	??_reset_handler& (0+255),b
  8142  00A84A  6B72               	clrf	(??_reset_handler+1)& (0+255),b
  8143                           
  8144                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8145                           ; Switch size 1, requested type "simple"
  8146                           ; Number of cases is 1, Range of values is 0 to 0
  8147                           ; switch strategies available:
  8148                           ; Name         Instructions Cycles
  8149                           ; simple_byte            4     3 (average)
  8150                           ;	Chosen strategy is simple_byte
  8151  00A84C  5172               	movf	(??_reset_handler+1)& (0+255),w,b
  8152  00A84E  0A00               	xorlw	0	; case 0
  8153  00A850  A4D8               	btfss	status,2,c
  8154  00A852  D7F5               	goto	l422
  8155                           
  8156                           ; BSR set to: 0
  8157                           ; Switch size 1, requested type "simple"
  8158                           ; Number of cases is 3, Range of values is 0 to 2
  8159                           ; switch strategies available:
  8160                           ; Name         Instructions Cycles
  8161                           ; simple_byte           10     6 (average)
  8162                           ;	Chosen strategy is simple_byte
  8163  00A854  5171               	movf	??_reset_handler& (0+255),w,b
  8164  00A856  0A00               	xorlw	0	; case 0
  8165  00A858  B4D8               	btfsc	status,2,c
  8166  00A85A  D7DB               	goto	l15902
  8167  00A85C  0A01               	xorlw	1	; case 1
  8168  00A85E  B4D8               	btfsc	status,2,c
  8169  00A860  D7E5               	goto	l15906
  8170  00A862  0A03               	xorlw	3	; case 2
  8171  00A864  D7EC               	goto	l422
  8172  00A866                     __end_of_reset_handler:
  8173                           	callstack 0
  8174                           
  8175 ;; *************** function _nwkEnableRouting *****************
  8176 ;; Defined at:
  8177 ;;		line 377 in file "../nwk/nwk_src/nwkRoute.c"
  8178 ;; Parameters:    Size  Location     Type
  8179 ;;  enable          1    wreg     _Bool 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;  enable          1   17[BANK0 ] _Bool 
  8182 ;; Return value:  Size  Location     Type
  8183 ;;                  1    wreg      void 
  8184 ;; Registers used:
  8185 ;;		wreg
  8186 ;; Tracked objects:
  8187 ;;		On entry : 3C/0
  8188 ;;		On exit  : 0/0
  8189 ;;		Unchanged: 0/0
  8190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8194 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8195 ;;Total ram usage:        1 bytes
  8196 ;; Hardware stack levels used:    1
  8197 ;; Hardware stack levels required when called:   11
  8198 ;; This function calls:
  8199 ;;		Nothing
  8200 ;; This function is called by:
  8201 ;;		_application
  8202 ;; This function uses a non-reentrant model
  8203 ;;
  8204                           
  8205                           	psect	text23
  8206  00BCE0                     __ptext23:
  8207                           	callstack 0
  8208  00BCE0                     _nwkEnableRouting:
  8209                           	callstack 18
  8210                           
  8211                           ;incstack = 0
  8212                           ;nwkEnableRouting@enable stored from wreg
  8213  00BCE0  0100               	movlb	0	; force () banked
  8214  00BCE2  6F71               	movwf	nwkEnableRouting@enable& (0+255),b
  8215                           
  8216                           ;../nwk/nwk_src/nwkRoute.c: 378:     nwk_RoutingEnabled = enable;
  8217  00BCE4  C071  F255         	movff	nwkEnableRouting@enable,_nwk_RoutingEnabled
  8218  00BCE8  0012               	return		;funcret
  8219  00BCEA                     __end_of_nwkEnableRouting:
  8220                           	callstack 0
  8221                           
  8222 ;; *************** function _handle_led_events *****************
  8223 ;; Defined at:
  8224 ;;		line 76 in file "../app/app_src/led.c"
  8225 ;; Parameters:    Size  Location     Type
  8226 ;;		None
  8227 ;; Auto vars:     Size  Location     Type
  8228 ;;  temp            3   46[BANK0 ] struct ledEvent
  8229 ;; Return value:  Size  Location     Type
  8230 ;;                  1    wreg      void 
  8231 ;; Registers used:
  8232 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8233 ;; Tracked objects:
  8234 ;;		On entry : 0/0
  8235 ;;		On exit  : 6/0
  8236 ;;		Unchanged: 0/0
  8237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8239 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8241 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8242 ;;Total ram usage:        3 bytes
  8243 ;; Hardware stack levels used:    1
  8244 ;; Hardware stack levels required when called:   13
  8245 ;; This function calls:
  8246 ;;		_CircularBufferEmpty
  8247 ;;		_CircularBufferPopFront
  8248 ;;		_get_timer0base
  8249 ;;		_set_timer0base
  8250 ;; This function is called by:
  8251 ;;		_application
  8252 ;; This function uses a non-reentrant model
  8253 ;;
  8254                           
  8255                           	psect	text24
  8256  00A100                     __ptext24:
  8257                           	callstack 0
  8258  00A100                     _handle_led_events:
  8259                           	callstack 16
  8260                           
  8261                           ;../app/app_src/led.c: 79:     if(!get_timer0base(&ledtimer)){
  8262                           
  8263                           ;incstack = 0
  8264  00A100  0EF9               	movlw	low _ledtimer
  8265  00A102  0100               	movlb	0	; force () banked
  8266  00A104  6F71               	movwf	get_timer0base@timer& (0+255),b
  8267  00A106  0E01               	movlw	high _ledtimer
  8268  00A108  6F72               	movwf	(get_timer0base@timer+1)& (0+255),b
  8269  00A10A  EC39  F05B         	call	_get_timer0base	;wreg free
  8270  00A10E  0100               	movlb	0	; force () banked
  8271  00A110  5171               	movf	?_get_timer0base& (0+255),w,b
  8272  00A112  1172               	iorwf	(?_get_timer0base+1)& (0+255),w,b
  8273  00A114  A4D8               	btfss	status,2,c
  8274  00A116  0012               	return	
  8275                           
  8276                           ; BSR set to: 0
  8277                           ;../app/app_src/led.c: 81:         if(!CircularBufferEmpty(&ledtasksbuf)){
  8278  00A118  0ECC               	movlw	low _ledtasksbuf
  8279  00A11A  0100               	movlb	0	; force () banked
  8280  00A11C  6F71               	movwf	CircularBufferEmpty@ctx& (0+255),b
  8281  00A11E  0E02               	movlw	high _ledtasksbuf
  8282  00A120  6F72               	movwf	(CircularBufferEmpty@ctx+1)& (0+255),b
  8283  00A122  EC43  F05A         	call	_CircularBufferEmpty	;wreg free
  8284  00A126  0900               	iorlw	0
  8285  00A128  A4D8               	btfss	status,2,c
  8286  00A12A  D026               	goto	l1057
  8287                           
  8288                           ; BSR set to: 0
  8289                           ;../app/app_src/led.c: 83:             struct ledEvent temp;;../app/app_src/led.c: 84:  
      +                                     CircularBufferPopFront(&ledtasksbuf,&temp);
  8290  00A12C  0ECC               	movlw	low _ledtasksbuf
  8291  00A12E  0100               	movlb	0	; force () banked
  8292  00A130  6F84               	movwf	CircularBufferPopFront@ctx& (0+255),b
  8293  00A132  0E02               	movlw	high _ledtasksbuf
  8294  00A134  6F85               	movwf	(CircularBufferPopFront@ctx+1)& (0+255),b
  8295  00A136  0E8E               	movlw	low handle_led_events@temp
  8296  00A138  0100               	movlb	0	; force () banked
  8297  00A13A  6F86               	movwf	CircularBufferPopFront@val& (0+255),b
  8298  00A13C  0E00               	movlw	high handle_led_events@temp
  8299  00A13E  6F87               	movwf	(CircularBufferPopFront@val+1)& (0+255),b
  8300  00A140  EC86  F033         	call	_CircularBufferPopFront	;wreg free
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;../app/app_src/led.c: 86:             if(0u == temp.eventDuration){
  8304  00A144  0100               	movlb	0	; force () banked
  8305  00A146  518F               	movf	(handle_led_events@temp+1)& (0+255),w,b
  8306  00A148  1190               	iorwf	(handle_led_events@temp+2)& (0+255),w,b
  8307  00A14A  A4D8               	btfss	status,2,c
  8308  00A14C  D002               	goto	l19844
  8309                           
  8310                           ; BSR set to: 0
  8311                           
  8312                           ;../app/app_src/led.c: 88:                 do { LATAbits.LATA3 = 0; } while(0);
  8313  00A14E  96BA               	bcf	186,3,c	;volatile
  8314  00A150  0012               	return	
  8315  00A152                     l19844:
  8316                           
  8317                           ; BSR set to: 0
  8318                           ;../app/app_src/led.c: 91:                 if (0u == temp.LEDCondition){
  8319  00A152  0100               	movlb	0	; force () banked
  8320  00A154  518E               	movf	handle_led_events@temp& (0+255),w,b
  8321  00A156  A4D8               	btfss	status,2,c
  8322  00A158  D002               	goto	l1054
  8323                           
  8324                           ; BSR set to: 0
  8325                           
  8326                           ;../app/app_src/led.c: 92:                     do { LATAbits.LATA3 = 1; } while(0);
  8327  00A15A  86BA               	bsf	186,3,c	;volatile
  8328  00A15C  D001               	goto	l19846
  8329  00A15E                     l1054:
  8330                           
  8331                           ; BSR set to: 0
  8332  00A15E  96BA               	bcf	186,3,c	;volatile
  8333  00A160                     l19846:
  8334                           
  8335                           ; BSR set to: 0
  8336                           ;../app/app_src/led.c: 97:                 set_timer0base(&ledtimer, temp.eventDuration)
      +                          ;
  8337  00A160  0EF9               	movlw	low _ledtimer
  8338  00A162  0100               	movlb	0	; force () banked
  8339  00A164  6F71               	movwf	set_timer0base@timer& (0+255),b
  8340  00A166  0E01               	movlw	high _ledtimer
  8341  00A168  6F72               	movwf	(set_timer0base@timer+1)& (0+255),b
  8342  00A16A  C08F  F073         	movff	handle_led_events@temp+1,set_timer0base@tval
  8343  00A16E  C090  F074         	movff	handle_led_events@temp+2,set_timer0base@tval+1
  8344  00A172  EC44  F05C         	call	_set_timer0base	;wreg free
  8345  00A176  0012               	return	
  8346  00A178                     l1057:
  8347                           
  8348                           ; BSR set to: 0
  8349  00A178  96BA               	bcf	186,3,c	;volatile
  8350  00A17A  0012               	return		;funcret
  8351  00A17C                     __end_of_handle_led_events:
  8352                           	callstack 0
  8353                           
  8354 ;; *************** function _MBRTUStack *****************
  8355 ;; Defined at:
  8356 ;;		line 2283 in file "../app/app_src/application.c"
  8357 ;; Parameters:    Size  Location     Type
  8358 ;;		None
  8359 ;; Auto vars:     Size  Location     Type
  8360 ;;		None
  8361 ;; Return value:  Size  Location     Type
  8362 ;;                  1    wreg      void 
  8363 ;; Registers used:
  8364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+
      +10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8365 ;; Tracked objects:
  8366 ;;		On entry : 0/0
  8367 ;;		On exit  : 3A/0
  8368 ;;		Unchanged: 0/0
  8369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8374 ;;Total ram usage:        0 bytes
  8375 ;; Hardware stack levels used:    1
  8376 ;; Hardware stack levels required when called:   18
  8377 ;; This function calls:
  8378 ;;		_CircularBufferEmpty
  8379 ;;		_UART1_is_rx_ready
  8380 ;;		_UART1_is_tx_ready
  8381 ;;		_UART_error_handler
  8382 ;;		_eMBPoll
  8383 ;;		_fill_rx_regs
  8384 ;;		_handle_rw_regs
  8385 ;;		_handle_rx_regs
  8386 ;;		_handle_tx_regs
  8387 ;;		_handle_write_only_regs
  8388 ;;		_prvvUARTRxISR
  8389 ;;		_prvvUARTTxReadyISR
  8390 ;; This function is called by:
  8391 ;;		_application
  8392 ;; This function uses a non-reentrant model
  8393 ;;
  8394                           
  8395                           	psect	text25
  8396  008DF8                     __ptext25:
  8397                           	callstack 0
  8398  008DF8                     _MBRTUStack:
  8399                           	callstack 11
  8400                           
  8401                           ;../app/app_src/application.c: 2285:     if((U1ERRIRbits.PERIF) || (U1ERRIRbits.RXFOIF))
      +                          {
  8402                           
  8403                           ;incstack = 0
  8404  008DF8  013D               	movlb	61	; force () banked
  8405  008DFA  BDF9               	btfsc	249,6,b	;volatile
  8406  008DFC  D002               	goto	u18230
  8407                           
  8408                           ; BSR set to: 61
  8409  008DFE  013D               	movlb	61	; force () banked
  8410  008E00  B3F9               	btfsc	249,1,b	;volatile
  8411  008E02                     u18230:
  8412                           
  8413                           ; BSR set to: 61
  8414                           ;../app/app_src/application.c: 2286:         UART_error_handler();
  8415  008E02  EC3A  F059         	call	_UART_error_handler	;wreg free
  8416                           
  8417                           ; BSR set to: 61
  8418                           ;../app/app_src/application.c: 2288:     if(!uartmode && UART1_is_rx_ready()){
  8419  008E06  0101               	movlb	1	; force () banked
  8420  008E08  51EF               	movf	_uartmode& (0+255),w,b
  8421  008E0A  A4D8               	btfss	status,2,c
  8422  008E0C  D007               	goto	l684
  8423                           
  8424                           ; BSR set to: 1
  8425  008E0E  EC0A  F05E         	call	_UART1_is_rx_ready	;wreg free
  8426  008E12  5001               	movf	btemp^0,w,c
  8427  008E14  0100               	movlb	0	; force () banked
  8428  008E16  A4D8               	btfss	status,2,c
  8429                           
  8430                           ; BSR set to: 0
  8431                           ;../app/app_src/application.c: 2289:         prvvUARTRxISR();
  8432  008E18  EC71  F05D         	call	_prvvUARTRxISR	;wreg free
  8433  008E1C                     l684:
  8434                           
  8435                           ;../app/app_src/application.c: 2291:     eMBPoll();
  8436  008E1C  EC38  F022         	call	_eMBPoll	;wreg free
  8437                           
  8438                           ;../app/app_src/application.c: 2292:     if(uartmode && UART1_is_tx_ready()){
  8439  008E20  0101               	movlb	1	; force () banked
  8440  008E22  51EF               	movf	_uartmode& (0+255),w,b
  8441  008E24  B4D8               	btfsc	status,2,c
  8442  008E26  D006               	goto	l19804
  8443                           
  8444                           ; BSR set to: 1
  8445  008E28  EC1C  F05E         	call	_UART1_is_tx_ready	;wreg free
  8446  008E2C  0900               	iorlw	0
  8447  008E2E  A4D8               	btfss	status,2,c
  8448                           
  8449                           ; BSR set to: 2
  8450                           ;../app/app_src/application.c: 2293:         prvvUARTTxReadyISR();
  8451  008E30  EC65  F05D         	call	_prvvUARTTxReadyISR	;wreg free
  8452  008E34                     l19804:
  8453                           
  8454                           ;../app/app_src/application.c: 2296:     read_only_mb_regs[RO_MODE] = PORTAbits.RA2? 0:1
      +                          ;
  8455  008E34  B4CA               	btfsc	202,2,c	;volatile
  8456  008E36  D002               	goto	u18280
  8457  008E38  0E01               	movlw	1
  8458  008E3A  D001               	goto	u18290
  8459  008E3C                     u18280:
  8460  008E3C  0E00               	movlw	0
  8461  008E3E                     u18290:
  8462  008E3E  0103               	movlb	3	; force () banked
  8463  008E40  6F64               	movwf	(_read_only_mb_regs+20)& (0+255),b
  8464  008E42  6B65               	clrf	(_read_only_mb_regs+21)& (0+255),b
  8465                           
  8466                           ; BSR set to: 3
  8467                           ;../app/app_src/application.c: 2297:     currentMode = read_only_mb_regs[RO_MODE];
  8468  008E44  C364  F26D         	movff	_read_only_mb_regs+20,_currentMode
  8469                           
  8470                           ; BSR set to: 3
  8471                           ;../app/app_src/application.c: 2300:     if(write_only_mb_regs_update){
  8472  008E48  0101               	movlb	1	; force () banked
  8473  008E4A  51E9               	movf	_write_only_mb_regs_update& (0+255),w,b
  8474  008E4C  B4D8               	btfsc	status,2,c
  8475  008E4E  D005               	goto	l19814
  8476                           
  8477                           ; BSR set to: 1
  8478                           ;../app/app_src/application.c: 2301:         handle_write_only_regs();
  8479  008E50  EC8B  F02A         	call	_handle_write_only_regs	;wreg free
  8480                           
  8481                           ; BSR set to: 3
  8482                           ;../app/app_src/application.c: 2302:         write_only_mb_regs_update = 0;
  8483  008E54  0E00               	movlw	0
  8484  008E56  0101               	movlb	1	; force () banked
  8485  008E58  6FE9               	movwf	_write_only_mb_regs_update& (0+255),b
  8486  008E5A                     l19814:
  8487                           
  8488                           ; BSR set to: 1
  8489                           ;../app/app_src/application.c: 2304:     if(read_write_mb_regs_update){
  8490  008E5A  0101               	movlb	1	; force () banked
  8491  008E5C  51E8               	movf	_read_write_mb_regs_update& (0+255),w,b
  8492  008E5E  B4D8               	btfsc	status,2,c
  8493  008E60  D005               	goto	l19820
  8494                           
  8495                           ; BSR set to: 1
  8496                           ;../app/app_src/application.c: 2305:         handle_rw_regs();
  8497  008E62  EC47  F00A         	call	_handle_rw_regs	;wreg free
  8498                           
  8499                           ; BSR set to: 2
  8500                           ;../app/app_src/application.c: 2306:         read_write_mb_regs_update = 0;
  8501  008E66  0E00               	movlw	0
  8502  008E68  0101               	movlb	1	; force () banked
  8503  008E6A  6FE8               	movwf	_read_write_mb_regs_update& (0+255),b
  8504  008E6C                     l19820:
  8505                           
  8506                           ; BSR set to: 1
  8507                           ;../app/app_src/application.c: 2308:     if(tx_ctl_mb_regs_upadte){
  8508  008E6C  0101               	movlb	1	; force () banked
  8509  008E6E  51E7               	movf	_tx_ctl_mb_regs_upadte& (0+255),w,b
  8510  008E70  B4D8               	btfsc	status,2,c
  8511  008E72  D005               	goto	l19826
  8512                           
  8513                           ; BSR set to: 1
  8514                           ;../app/app_src/application.c: 2309:         handle_tx_regs();
  8515  008E74  ECD9  F01B         	call	_handle_tx_regs	;wreg free
  8516                           
  8517                           ; BSR set to: 4
  8518                           ;../app/app_src/application.c: 2310:         tx_ctl_mb_regs_upadte = 0;
  8519  008E78  0E00               	movlw	0
  8520  008E7A  0101               	movlb	1	; force () banked
  8521  008E7C  6FE7               	movwf	_tx_ctl_mb_regs_upadte& (0+255),b
  8522  008E7E                     l19826:
  8523                           
  8524                           ; BSR set to: 1
  8525                           ;../app/app_src/application.c: 2312:     if(rx_ctl_mb_regs_upadte){
  8526  008E7E  0101               	movlb	1	; force () banked
  8527  008E80  51E6               	movf	_rx_ctl_mb_regs_upadte& (0+255),w,b
  8528  008E82  B4D8               	btfsc	status,2,c
  8529  008E84  D005               	goto	l19832
  8530                           
  8531                           ; BSR set to: 1
  8532                           ;../app/app_src/application.c: 2313:         handle_rx_regs();
  8533  008E86  ECB1  F054         	call	_handle_rx_regs	;wreg free
  8534                           
  8535                           ; BSR set to: 0
  8536                           ;../app/app_src/application.c: 2314:         rx_ctl_mb_regs_upadte = 0;
  8537  008E8A  0E00               	movlw	0
  8538  008E8C  0101               	movlb	1	; force () banked
  8539  008E8E  6FE6               	movwf	_rx_ctl_mb_regs_upadte& (0+255),b
  8540  008E90                     l19832:
  8541                           
  8542                           ; BSR set to: 1
  8543                           ;../app/app_src/application.c: 2316:     if(!CircularBufferEmpty(&rx_buffer_queue_contex
      +                          t)){
  8544  008E90  0ED6               	movlw	low _rx_buffer_queue_context
  8545  008E92  0100               	movlb	0	; force () banked
  8546  008E94  6F71               	movwf	CircularBufferEmpty@ctx& (0+255),b
  8547  008E96  0E02               	movlw	high _rx_buffer_queue_context
  8548  008E98  6F72               	movwf	(CircularBufferEmpty@ctx+1)& (0+255),b
  8549  008E9A  EC43  F05A         	call	_CircularBufferEmpty	;wreg free
  8550  008E9E  0900               	iorlw	0
  8551  008EA0  A4D8               	btfss	status,2,c
  8552  008EA2  0012               	return	
  8553                           
  8554                           ; BSR set to: 0
  8555                           ;../app/app_src/application.c: 2318:         fill_rx_regs();
  8556  008EA4  EC53  F02B         	call	_fill_rx_regs	;wreg free
  8557  008EA8  0012               	return		;funcret
  8558  008EAA                     __end_of_MBRTUStack:
  8559                           	callstack 0
  8560                           
  8561 ;; *************** function _prvvUARTTxReadyISR *****************
  8562 ;; Defined at:
  8563 ;;		line 106 in file "../modbus/port/portserial.c"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;		None
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;		None
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  1    wreg      void 
  8570 ;; Registers used:
  8571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+
      +10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8572 ;; Tracked objects:
  8573 ;;		On entry : 3F/2
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8581 ;;Total ram usage:        0 bytes
  8582 ;; Hardware stack levels used:    1
  8583 ;; Hardware stack levels required when called:   16
  8584 ;; This function calls:
  8585 ;;		Absolute function
  8586 ;;		_xMBRTUTransmitFSM
  8587 ;; This function is called by:
  8588 ;;		_MBRTUStack
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           	psect	text26
  8593  00BACA                     __ptext26:
  8594                           	callstack 0
  8595  00BACA                     _prvvUARTTxReadyISR:
  8596                           	callstack 12
  8597                           
  8598                           ;../modbus/port/portserial.c: 109:     pxMBFrameCBTransmitterEmpty( );
  8599                           
  8600                           ;incstack = 0
  8601  00BACA  D801               	call	u12878
  8602  00BACC  0012               	return	
  8603  00BACE                     u12878:
  8604  00BACE  0005               	push	
  8605  00BAD0  6EFA               	movwf	pclath,c
  8606  00BAD2  0102               	movlb	2	; force () banked
  8607  00BAD4  5148               	movf	_pxMBFrameCBTransmitterEmpty& (0+255),w,b
  8608  00BAD6  6EFD               	movwf	tosl,c
  8609  00BAD8  5149               	movf	(_pxMBFrameCBTransmitterEmpty+1)& (0+255),w,b
  8610  00BADA  6EFE               	movwf	tosh,c
  8611  00BADC  6AFF               	clrf	tosu,c
  8612  00BADE  50FA               	movf	pclath,w,c
  8613  00BAE0  0012               	return		;indir
  8614  00BAE2                     __end_of_prvvUARTTxReadyISR:
  8615                           	callstack 0
  8616                           
  8617 ;; *************** function _xMBRTUTransmitFSM *****************
  8618 ;; Defined at:
  8619 ;;		line 286 in file "../modbus/rtu/mbrtu.c"
  8620 ;; Parameters:    Size  Location     Type
  8621 ;;		None
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;  xNeedPoll       1   21[BANK0 ] unsigned char 
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  1    wreg      unsigned char 
  8626 ;; Registers used:
  8627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8628 ;; Tracked objects:
  8629 ;;		On entry : 3F/2
  8630 ;;		On exit  : 3F/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8634 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8635 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8636 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8637 ;;Total ram usage:        3 bytes
  8638 ;; Hardware stack levels used:    1
  8639 ;; Hardware stack levels required when called:   15
  8640 ;; This function calls:
  8641 ;;		__fassert
  8642 ;;		_vMBPortSerialEnable
  8643 ;;		_xMBPortEventPost
  8644 ;;		_xMBPortSerialPutByte
  8645 ;; This function is called by:
  8646 ;;		_eMBInit
  8647 ;;		_prvvUARTTxReadyISR
  8648 ;; This function uses a non-reentrant model
  8649 ;;
  8650                           
  8651                           	psect	text27
  8652  008F5A                     __ptext27:
  8653                           	callstack 0
  8654  008F5A                     _xMBRTUTransmitFSM:
  8655                           	callstack 12
  8656                           
  8657                           ;../modbus/rtu/mbrtu.c: 288:     BOOL xNeedPoll = 0;
  8658                           
  8659                           ;incstack = 0
  8660  008F5A  0E00               	movlw	0
  8661  008F5C  0100               	movlb	0	; force () banked
  8662  008F5E  6F75               	movwf	xMBRTUTransmitFSM@xNeedPoll& (0+255),b
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;../modbus/rtu/mbrtu.c: 290:     if(!(eRcvState == STATE_RX_IDLE)) {_fassert(290, "../mo
      +                          dbus/rtu/mbrtu.c", "eRcvState == STATE_RX_IDLE");};
  8666  008F60  0100               	movlb	0	; force () banked
  8667  008F62  05D9               	decf	_eRcvState& (0+255),w,b
  8668  008F64  B4D8               	btfsc	status,2,c
  8669  008F66  D03D               	goto	l14700
  8670                           
  8671                           ; BSR set to: 0
  8672  008F68  0E7D               	movlw	low STR_14
  8673  008F6A  6EE6               	movwf	postinc1,c
  8674  008F6C  0EFF               	movlw	high STR_14
  8675  008F6E  6EE6               	movwf	postinc1,c
  8676  008F70  0EB3               	movlw	low STR_9
  8677  008F72  6EE6               	movwf	postinc1,c
  8678  008F74  0EFF               	movlw	high STR_9
  8679  008F76  6EE6               	movwf	postinc1,c
  8680  008F78  0E22               	movlw	34
  8681  008F7A  6EE6               	movwf	postinc1,c
  8682  008F7C  0E01               	movlw	1
  8683  008F7E  6EE6               	movwf	postinc1,c
  8684  008F80  EC32  F051         	call	__fassert	;wreg free
  8685  008F84  D02E               	goto	l14700
  8686  008F86                     l14682:
  8687                           
  8688                           ; BSR set to: 0
  8689                           ;../modbus/rtu/mbrtu.c: 298:         vMBPortSerialEnable( 1, 0 );
  8690  008F86  0E00               	movlw	0
  8691  008F88  0100               	movlb	0	; force () banked
  8692  008F8A  6F71               	movwf	vMBPortSerialEnable@xTxEnable& (0+255),b
  8693  008F8C  0E01               	movlw	1
  8694  008F8E  EC33  F05C         	call	_vMBPortSerialEnable
  8695                           
  8696                           ;../modbus/rtu/mbrtu.c: 299:         break;
  8697  008F92  D037               	goto	l14702
  8698  008F94                     l14684:
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;../modbus/rtu/mbrtu.c: 303:         if( usSndBufferCount != 0 )
  8702  008F94  0100               	movlb	0	; force () banked
  8703  008F96  51D5               	movf	_usSndBufferCount& (0+255),w,b	;volatile
  8704  008F98  11D6               	iorwf	(_usSndBufferCount+1)& (0+255),w,b	;volatile
  8705  008F9A  B4D8               	btfsc	status,2,c
  8706  008F9C  D011               	goto	l14692
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;../modbus/rtu/mbrtu.c: 304:         {;../modbus/rtu/mbrtu.c: 305:             xMBPortSe
      +                          rialPutByte( ( CHAR )*pucSndBufferCur );
  8710  008F9E  0060  F903  FFD9   	movff	_pucSndBufferCur,fsr2l
  8711  008FA4  0060  F907  FFDA   	movff	_pucSndBufferCur+1,fsr2h
  8712  008FAA  50DF               	movf	indf2,w,c
  8713  008FAC  EC01  F05E         	call	_xMBPortSerialPutByte
  8714                           
  8715                           ; BSR set to: 57
  8716                           ;../modbus/rtu/mbrtu.c: 306:             pucSndBufferCur++;
  8717  008FB0  0102               	movlb	2	; force () banked
  8718  008FB2  4B40               	infsnz	_pucSndBufferCur& (0+255),f,b
  8719  008FB4  2B41               	incf	(_pucSndBufferCur+1)& (0+255),f,b
  8720                           
  8721                           ; BSR set to: 2
  8722                           ;../modbus/rtu/mbrtu.c: 307:             usSndBufferCount--;
  8723  008FB6  0100               	movlb	0	; force () banked
  8724  008FB8  07D5               	decf	_usSndBufferCount& (0+255),f,b	;volatile
  8725  008FBA  A0D8               	btfss	status,0,c
  8726  008FBC  07D6               	decf	(_usSndBufferCount+1)& (0+255),f,b	;volatile
  8727                           
  8728                           ;../modbus/rtu/mbrtu.c: 308:         }
  8729  008FBE  D021               	goto	l14702
  8730  008FC0                     l14692:
  8731                           
  8732                           ; BSR set to: 0
  8733                           ;../modbus/rtu/mbrtu.c: 310:         {;../modbus/rtu/mbrtu.c: 311:             xNeedPoll
      +                           = xMBPortEventPost( EV_FRAME_SENT );
  8734  008FC0  0E03               	movlw	3
  8735  008FC2  6EE6               	movwf	postinc1,c
  8736  008FC4  ECCD  F05D         	call	_xMBPortEventPost	;wreg free
  8737  008FC8  5001               	movf	btemp^0,w,c
  8738  008FCA  0100               	movlb	0	; force () banked
  8739  008FCC  6F75               	movwf	xMBRTUTransmitFSM@xNeedPoll& (0+255),b
  8740                           
  8741                           ; BSR set to: 0
  8742                           ;../modbus/rtu/mbrtu.c: 314:             vMBPortSerialEnable( 1, 0 );
  8743  008FCE  0E00               	movlw	0
  8744  008FD0  0100               	movlb	0	; force () banked
  8745  008FD2  6F71               	movwf	vMBPortSerialEnable@xTxEnable& (0+255),b
  8746  008FD4  0E01               	movlw	1
  8747  008FD6  EC33  F05C         	call	_vMBPortSerialEnable
  8748                           
  8749                           ;../modbus/rtu/mbrtu.c: 315:             eSndState = STATE_TX_IDLE;
  8750  008FDA  0E00               	movlw	0
  8751  008FDC  0101               	movlb	1	; force () banked
  8752  008FDE  6FE0               	movwf	_eSndState& (0+255),b	;volatile
  8753  008FE0  D010               	goto	l14702
  8754  008FE2                     l14700:
  8755  008FE2  0101               	movlb	1	; force () banked
  8756  008FE4  51E0               	movf	_eSndState& (0+255),w,b	;volatile
  8757  008FE6  0100               	movlb	0	; force () banked
  8758  008FE8  6F73               	movwf	??_xMBRTUTransmitFSM& (0+255),b
  8759  008FEA  6B74               	clrf	(??_xMBRTUTransmitFSM+1)& (0+255),b
  8760                           
  8761                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8762                           ; Switch size 1, requested type "simple"
  8763                           ; Number of cases is 1, Range of values is 0 to 0
  8764                           ; switch strategies available:
  8765                           ; Name         Instructions Cycles
  8766                           ; simple_byte            4     3 (average)
  8767                           ;	Chosen strategy is simple_byte
  8768  008FEC  5174               	movf	(??_xMBRTUTransmitFSM+1)& (0+255),w,b
  8769  008FEE  0A00               	xorlw	0	; case 0
  8770  008FF0  A4D8               	btfss	status,2,c
  8771  008FF2  D007               	goto	l14702
  8772                           
  8773                           ; BSR set to: 0
  8774                           ; Switch size 1, requested type "simple"
  8775                           ; Number of cases is 2, Range of values is 0 to 1
  8776                           ; switch strategies available:
  8777                           ; Name         Instructions Cycles
  8778                           ; simple_byte            7     4 (average)
  8779                           ;	Chosen strategy is simple_byte
  8780  008FF4  5173               	movf	??_xMBRTUTransmitFSM& (0+255),w,b
  8781  008FF6  0A00               	xorlw	0	; case 0
  8782  008FF8  B4D8               	btfsc	status,2,c
  8783  008FFA  D7C5               	goto	l14682
  8784  008FFC  0A01               	xorlw	1	; case 1
  8785  008FFE  B4D8               	btfsc	status,2,c
  8786  009000  D7C9               	goto	l14684
  8787  009002                     l14702:
  8788                           
  8789                           ;../modbus/rtu/mbrtu.c: 320:     return xNeedPoll;
  8790  009002  0100               	movlb	0	; force () banked
  8791  009004  5175               	movf	xMBRTUTransmitFSM@xNeedPoll& (0+255),w,b
  8792                           
  8793                           ; BSR set to: 0
  8794  009006  0012               	return		;funcret
  8795  009008                     __end_of_xMBRTUTransmitFSM:
  8796                           	callstack 0
  8797                           
  8798 ;; *************** function _xMBPortSerialPutByte *****************
  8799 ;; Defined at:
  8800 ;;		line 69 in file "../modbus/port/portserial.c"
  8801 ;; Parameters:    Size  Location     Type
  8802 ;;  ucByte          1    wreg     unsigned char 
  8803 ;; Auto vars:     Size  Location     Type
  8804 ;;  ucByte          1   17[BANK0 ] unsigned char 
  8805 ;; Return value:  Size  Location     Type
  8806 ;;                  1    wreg      unsigned char 
  8807 ;; Registers used:
  8808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8809 ;; Tracked objects:
  8810 ;;		On entry : 3F/0
  8811 ;;		On exit  : 3F/39
  8812 ;;		Unchanged: 0/0
  8813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8815 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8817 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8818 ;;Total ram usage:        1 bytes
  8819 ;; Hardware stack levels used:    1
  8820 ;; Hardware stack levels required when called:   12
  8821 ;; This function calls:
  8822 ;;		_UART1_Write
  8823 ;; This function is called by:
  8824 ;;		_xMBRTUTransmitFSM
  8825 ;; This function uses a non-reentrant model
  8826 ;;
  8827                           
  8828                           	psect	text28
  8829  00BC02                     __ptext28:
  8830                           	callstack 0
  8831  00BC02                     _xMBPortSerialPutByte:
  8832                           	callstack 14
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;incstack = 0
  8836                           ;xMBPortSerialPutByte@ucByte stored from wreg
  8837  00BC02  0100               	movlb	0	; force () banked
  8838  00BC04  6F71               	movwf	xMBPortSerialPutByte@ucByte& (0+255),b
  8839                           
  8840                           ;../modbus/port/portserial.c: 69: xMBPortSerialPutByte( CHAR ucByte );../modbus/port/por
      +                          tserial.c: 70: {;../modbus/port/portserial.c: 75:     UART1_Write(ucByte);
  8841  00BC06  0100               	movlb	0	; force () banked
  8842  00BC08  5171               	movf	xMBPortSerialPutByte@ucByte& (0+255),w,b
  8843  00BC0A  6EE6               	movwf	postinc1,c
  8844  00BC0C  ECD9  F054         	call	_UART1_Write	;wreg free
  8845                           
  8846                           ; BSR set to: 57
  8847                           ;../modbus/port/portserial.c: 80:     return 1;
  8848  00BC10  0E01               	movlw	1
  8849                           
  8850                           ; BSR set to: 57
  8851  00BC12  0012               	return		;funcret
  8852  00BC14                     __end_of_xMBPortSerialPutByte:
  8853                           	callstack 0
  8854                           
  8855 ;; *************** function _prvvUARTRxISR *****************
  8856 ;; Defined at:
  8857 ;;		line 117 in file "../modbus/port/portserial.c"
  8858 ;; Parameters:    Size  Location     Type
  8859 ;;		None
  8860 ;; Auto vars:     Size  Location     Type
  8861 ;;		None
  8862 ;; Return value:  Size  Location     Type
  8863 ;;                  1    wreg      void 
  8864 ;; Registers used:
  8865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+
      +10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8866 ;; Tracked objects:
  8867 ;;		On entry : 3F/0
  8868 ;;		On exit  : 0/0
  8869 ;;		Unchanged: 0/0
  8870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8875 ;;Total ram usage:        0 bytes
  8876 ;; Hardware stack levels used:    1
  8877 ;; Hardware stack levels required when called:   16
  8878 ;; This function calls:
  8879 ;;		Absolute function
  8880 ;;		_xMBRTUReceiveFSM
  8881 ;; This function is called by:
  8882 ;;		_MBRTUStack
  8883 ;; This function uses a non-reentrant model
  8884 ;;
  8885                           
  8886                           	psect	text29
  8887  00BAE2                     __ptext29:
  8888                           	callstack 0
  8889  00BAE2                     _prvvUARTRxISR:
  8890                           	callstack 12
  8891                           
  8892                           ;../modbus/port/portserial.c: 119:     pxMBFrameCBByteReceived( );
  8893                           
  8894                           ; BSR set to: 57
  8895                           ;incstack = 0
  8896  00BAE2  D801               	call	u12708
  8897  00BAE4  0012               	return	
  8898  00BAE6                     u12708:
  8899  00BAE6  0005               	push	
  8900  00BAE8  6EFA               	movwf	pclath,c
  8901  00BAEA  0102               	movlb	2	; force () banked
  8902  00BAEC  5146               	movf	_pxMBFrameCBByteReceived& (0+255),w,b
  8903  00BAEE  6EFD               	movwf	tosl,c
  8904  00BAF0  5147               	movf	(_pxMBFrameCBByteReceived+1)& (0+255),w,b
  8905  00BAF2  6EFE               	movwf	tosh,c
  8906  00BAF4  6AFF               	clrf	tosu,c
  8907  00BAF6  50FA               	movf	pclath,w,c
  8908  00BAF8  0012               	return		;indir
  8909  00BAFA                     __end_of_prvvUARTRxISR:
  8910                           	callstack 0
  8911                           
  8912 ;; *************** function _xMBRTUReceiveFSM *****************
  8913 ;; Defined at:
  8914 ;;		line 226 in file "../modbus/rtu/mbrtu.c"
  8915 ;; Parameters:    Size  Location     Type
  8916 ;;		None
  8917 ;; Auto vars:     Size  Location     Type
  8918 ;;  ucByte          1   22[BANK0 ] unsigned char 
  8919 ;;  xTaskNeedSwi    1   21[BANK0 ] unsigned char 
  8920 ;; Return value:  Size  Location     Type
  8921 ;;                  1    wreg      unsigned char 
  8922 ;; Registers used:
  8923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8924 ;; Tracked objects:
  8925 ;;		On entry : 3F/2
  8926 ;;		On exit  : 3F/0
  8927 ;;		Unchanged: 0/0
  8928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8930 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8931 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8932 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8933 ;;Total ram usage:        4 bytes
  8934 ;; Hardware stack levels used:    1
  8935 ;; Hardware stack levels required when called:   15
  8936 ;; This function calls:
  8937 ;;		__fassert
  8938 ;;		_vMBPortTimersEnable
  8939 ;;		_xMBPortSerialGetByte
  8940 ;; This function is called by:
  8941 ;;		_eMBInit
  8942 ;;		_prvvUARTRxISR
  8943 ;; This function uses a non-reentrant model
  8944 ;;
  8945                           
  8946                           	psect	text30
  8947  007DA8                     __ptext30:
  8948                           	callstack 0
  8949  007DA8                     _xMBRTUReceiveFSM:
  8950                           	callstack 12
  8951                           
  8952                           ;../modbus/rtu/mbrtu.c: 228:     BOOL xTaskNeedSwitch = 0;
  8953                           
  8954                           ;incstack = 0
  8955  007DA8  0E00               	movlw	0
  8956  007DAA  0100               	movlb	0	; force () banked
  8957  007DAC  6F75               	movwf	xMBRTUReceiveFSM@xTaskNeedSwitch& (0+255),b
  8958                           
  8959                           ;../modbus/rtu/mbrtu.c: 229:     UCHAR ucByte;;../modbus/rtu/mbrtu.c: 231:     if(!(eSnd
      +                          State == STATE_TX_IDLE)) {_fassert(231, "../modbus/rtu/mbrtu.c", "eSndState == STATE_TX_
      +                          IDLE");};
  8960  007DAE  0101               	movlb	1	; force () banked
  8961  007DB0  51E0               	movf	_eSndState& (0+255),w,b
  8962  007DB2  B4D8               	btfsc	status,2,c
  8963  007DB4  D00E               	goto	l14638
  8964                           
  8965                           ; BSR set to: 1
  8966  007DB6  0E98               	movlw	low STR_12
  8967  007DB8  6EE6               	movwf	postinc1,c
  8968  007DBA  0EFF               	movlw	high STR_12
  8969  007DBC  6EE6               	movwf	postinc1,c
  8970  007DBE  0EB3               	movlw	low STR_9
  8971  007DC0  6EE6               	movwf	postinc1,c
  8972  007DC2  0EFF               	movlw	high STR_9
  8973  007DC4  6EE6               	movwf	postinc1,c
  8974  007DC6  0EE7               	movlw	231
  8975  007DC8  6EE6               	movwf	postinc1,c
  8976  007DCA  0E00               	movlw	0
  8977  007DCC  6EE6               	movwf	postinc1,c
  8978  007DCE  EC32  F051         	call	__fassert	;wreg free
  8979  007DD2                     l14638:
  8980                           
  8981                           ;../modbus/rtu/mbrtu.c: 234:     ( void )xMBPortSerialGetByte( ( CHAR * ) & ucByte );
  8982  007DD2  0E76               	movlw	low xMBRTUReceiveFSM@ucByte
  8983  007DD4  0100               	movlb	0	; force () banked
  8984  007DD6  6F71               	movwf	xMBPortSerialGetByte@pucByte& (0+255),b
  8985  007DD8  0E00               	movlw	high xMBRTUReceiveFSM@ucByte
  8986  007DDA  6F72               	movwf	(xMBPortSerialGetByte@pucByte+1)& (0+255),b
  8987  007DDC  EC7D  F05D         	call	_xMBPortSerialGetByte	;wreg free
  8988                           
  8989                           ;../modbus/rtu/mbrtu.c: 236:     switch ( eRcvState )
  8990  007DE0  D039               	goto	l14666
  8991  007DE2                     l14640:
  8992                           
  8993                           ; BSR set to: 0
  8994                           ;../modbus/rtu/mbrtu.c: 242:         vMBPortTimersEnable( );
  8995  007DE2  EC31  F05D         	call	_vMBPortTimersEnable	;wreg free
  8996                           
  8997                           ;../modbus/rtu/mbrtu.c: 243:         break;
  8998  007DE6  D04C               	goto	l14668
  8999  007DE8                     l14642:
  9000                           
  9001                           ; BSR set to: 0
  9002                           ;../modbus/rtu/mbrtu.c: 249:         vMBPortTimersEnable( );
  9003  007DE8  EC31  F05D         	call	_vMBPortTimersEnable	;wreg free
  9004                           
  9005                           ;../modbus/rtu/mbrtu.c: 250:         break;
  9006  007DEC  D049               	goto	l14668
  9007  007DEE                     l14644:
  9008                           
  9009                           ; BSR set to: 0
  9010                           ;../modbus/rtu/mbrtu.c: 257:         usRcvBufferPos = 0;
  9011  007DEE  0E00               	movlw	0
  9012  007DF0  0100               	movlb	0	; force () banked
  9013  007DF2  6FD4               	movwf	(_usRcvBufferPos+1)& (0+255),b	;volatile
  9014  007DF4  0E00               	movlw	0
  9015  007DF6  6FD3               	movwf	_usRcvBufferPos& (0+255),b	;volatile
  9016                           
  9017                           ; BSR set to: 0
  9018                           ;../modbus/rtu/mbrtu.c: 258:         ucRTUBuf[usRcvBufferPos++] = ucByte;
  9019  007DF8  0E00               	movlw	low _ucRTUBuf
  9020  007DFA  0100               	movlb	0	; force () banked
  9021  007DFC  25D3               	addwf	_usRcvBufferPos& (0+255),w,b	;volatile
  9022  007DFE  6ED9               	movwf	fsr2l,c
  9023  007E00  0E06               	movlw	high _ucRTUBuf
  9024  007E02  21D4               	addwfc	(_usRcvBufferPos+1)& (0+255),w,b	;volatile
  9025  007E04  6EDA               	movwf	fsr2h,c
  9026  007E06  0060  F1DB  FFDF   	movff	xMBRTUReceiveFSM@ucByte,indf2
  9027                           
  9028                           ; BSR set to: 0
  9029  007E0C  0100               	movlb	0	; force () banked
  9030  007E0E  4BD3               	infsnz	_usRcvBufferPos& (0+255),f,b	;volatile
  9031  007E10  2BD4               	incf	(_usRcvBufferPos+1)& (0+255),f,b	;volatile
  9032                           
  9033                           ; BSR set to: 0
  9034                           ;../modbus/rtu/mbrtu.c: 259:         eRcvState = STATE_RX_RCV;
  9035  007E12  0E02               	movlw	2
  9036  007E14  0100               	movlb	0	; force () banked
  9037  007E16  6FD9               	movwf	_eRcvState& (0+255),b	;volatile
  9038                           
  9039                           ; BSR set to: 0
  9040                           ;../modbus/rtu/mbrtu.c: 262:         vMBPortTimersEnable( );
  9041  007E18  EC31  F05D         	call	_vMBPortTimersEnable	;wreg free
  9042                           
  9043                           ;../modbus/rtu/mbrtu.c: 263:         break;
  9044  007E1C  D031               	goto	l14668
  9045  007E1E                     l14654:
  9046                           
  9047                           ; BSR set to: 0
  9048                           ;../modbus/rtu/mbrtu.c: 271:         if( usRcvBufferPos < 256 )
  9049  007E1E  0E00               	movlw	0
  9050  007E20  0100               	movlb	0	; force () banked
  9051  007E22  5DD3               	subwf	_usRcvBufferPos& (0+255),w,b	;volatile
  9052  007E24  0E01               	movlw	1
  9053  007E26  59D4               	subwfb	(_usRcvBufferPos+1)& (0+255),w,b	;volatile
  9054  007E28  B0D8               	btfsc	status,0,c
  9055  007E2A  D00E               	goto	l14660
  9056                           
  9057                           ; BSR set to: 0
  9058                           ;../modbus/rtu/mbrtu.c: 272:         {;../modbus/rtu/mbrtu.c: 273:             ucRTUBuf[
      +                          usRcvBufferPos++] = ucByte;
  9059  007E2C  0E00               	movlw	low _ucRTUBuf
  9060  007E2E  0100               	movlb	0	; force () banked
  9061  007E30  25D3               	addwf	_usRcvBufferPos& (0+255),w,b	;volatile
  9062  007E32  6ED9               	movwf	fsr2l,c
  9063  007E34  0E06               	movlw	high _ucRTUBuf
  9064  007E36  21D4               	addwfc	(_usRcvBufferPos+1)& (0+255),w,b	;volatile
  9065  007E38  6EDA               	movwf	fsr2h,c
  9066  007E3A  0060  F1DB  FFDF   	movff	xMBRTUReceiveFSM@ucByte,indf2
  9067                           
  9068                           ; BSR set to: 0
  9069  007E40  0100               	movlb	0	; force () banked
  9070  007E42  4BD3               	infsnz	_usRcvBufferPos& (0+255),f,b	;volatile
  9071  007E44  2BD4               	incf	(_usRcvBufferPos+1)& (0+255),f,b	;volatile
  9072                           
  9073                           ;../modbus/rtu/mbrtu.c: 274:         }
  9074  007E46  D003               	goto	l14662
  9075  007E48                     l14660:
  9076                           
  9077                           ; BSR set to: 0
  9078                           ;../modbus/rtu/mbrtu.c: 276:         {;../modbus/rtu/mbrtu.c: 277:             eRcvState
      +                           = STATE_RX_ERROR;
  9079  007E48  0E03               	movlw	3
  9080  007E4A  0100               	movlb	0	; force () banked
  9081  007E4C  6FD9               	movwf	_eRcvState& (0+255),b	;volatile
  9082  007E4E                     l14662:
  9083                           
  9084                           ; BSR set to: 0
  9085                           ;../modbus/rtu/mbrtu.c: 279:         vMBPortTimersEnable( );
  9086  007E4E  EC31  F05D         	call	_vMBPortTimersEnable	;wreg free
  9087                           
  9088                           ;../modbus/rtu/mbrtu.c: 280:         break;
  9089  007E52  D016               	goto	l14668
  9090  007E54                     l14666:
  9091                           
  9092                           ; BSR set to: 57
  9093  007E54  0100               	movlb	0	; force () banked
  9094  007E56  51D9               	movf	_eRcvState& (0+255),w,b	;volatile
  9095  007E58  0100               	movlb	0	; force () banked
  9096  007E5A  6F73               	movwf	??_xMBRTUReceiveFSM& (0+255),b
  9097  007E5C  6B74               	clrf	(??_xMBRTUReceiveFSM+1)& (0+255),b
  9098                           
  9099                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9100                           ; Switch size 1, requested type "simple"
  9101                           ; Number of cases is 1, Range of values is 0 to 0
  9102                           ; switch strategies available:
  9103                           ; Name         Instructions Cycles
  9104                           ; simple_byte            4     3 (average)
  9105                           ;	Chosen strategy is simple_byte
  9106  007E5E  5174               	movf	(??_xMBRTUReceiveFSM+1)& (0+255),w,b
  9107  007E60  0A00               	xorlw	0	; case 0
  9108  007E62  A4D8               	btfss	status,2,c
  9109  007E64  D00D               	goto	l14668
  9110                           
  9111                           ; BSR set to: 0
  9112                           ; Switch size 1, requested type "simple"
  9113                           ; Number of cases is 4, Range of values is 0 to 3
  9114                           ; switch strategies available:
  9115                           ; Name         Instructions Cycles
  9116                           ; simple_byte           13     7 (average)
  9117                           ;	Chosen strategy is simple_byte
  9118  007E66  5173               	movf	??_xMBRTUReceiveFSM& (0+255),w,b
  9119  007E68  0A00               	xorlw	0	; case 0
  9120  007E6A  B4D8               	btfsc	status,2,c
  9121  007E6C  D7BA               	goto	l14640
  9122  007E6E  0A01               	xorlw	1	; case 1
  9123  007E70  B4D8               	btfsc	status,2,c
  9124  007E72  D7BD               	goto	l14644
  9125  007E74  0A03               	xorlw	3	; case 2
  9126  007E76  B4D8               	btfsc	status,2,c
  9127  007E78  D7D2               	goto	l14654
  9128  007E7A  0A01               	xorlw	1	; case 3
  9129  007E7C  B4D8               	btfsc	status,2,c
  9130  007E7E  D7B4               	goto	l14642
  9131  007E80                     l14668:
  9132                           
  9133                           ;../modbus/rtu/mbrtu.c: 282:     return xTaskNeedSwitch;
  9134  007E80  0100               	movlb	0	; force () banked
  9135  007E82  5175               	movf	xMBRTUReceiveFSM@xTaskNeedSwitch& (0+255),w,b
  9136                           
  9137                           ; BSR set to: 0
  9138  007E84  0012               	return		;funcret
  9139  007E86                     __end_of_xMBRTUReceiveFSM:
  9140                           	callstack 0
  9141                           
  9142 ;; *************** function _xMBPortSerialGetByte *****************
  9143 ;; Defined at:
  9144 ;;		line 85 in file "../modbus/port/portserial.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;  pucByte         2   17[BANK0 ] PTR unsigned char 
  9147 ;;		 -> xMBRTUReceiveFSM@ucByte(1), 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;		None
  9150 ;; Return value:  Size  Location     Type
  9151 ;;                  1    wreg      unsigned char 
  9152 ;; Registers used:
  9153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  9154 ;; Tracked objects:
  9155 ;;		On entry : 3F/0
  9156 ;;		On exit  : 3F/39
  9157 ;;		Unchanged: 0/0
  9158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9159 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9162 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9163 ;;Total ram usage:        2 bytes
  9164 ;; Hardware stack levels used:    1
  9165 ;; Hardware stack levels required when called:   12
  9166 ;; This function calls:
  9167 ;;		_UART1_Read
  9168 ;; This function is called by:
  9169 ;;		_xMBRTUReceiveFSM
  9170 ;; This function uses a non-reentrant model
  9171 ;;
  9172                           
  9173                           	psect	text31
  9174  00BAFA                     __ptext31:
  9175                           	callstack 0
  9176  00BAFA                     _xMBPortSerialGetByte:
  9177                           	callstack 14
  9178                           
  9179                           ;../modbus/port/portserial.c: 85: xMBPortSerialGetByte( CHAR * pucByte );../modbus/port/
      +                          portserial.c: 86: {;../modbus/port/portserial.c: 91:     *pucByte = UART1_Read();
  9180                           
  9181                           ; BSR set to: 0
  9182                           ;incstack = 0
  9183  00BAFA  EC37  F052         	call	_UART1_Read	;wreg free
  9184  00BAFE  5001               	movf	btemp^0,w,c
  9185  00BB00  0060  F1C7  FFD9   	movff	xMBPortSerialGetByte@pucByte,fsr2l
  9186  00BB06  0060  F1CB  FFDA   	movff	xMBPortSerialGetByte@pucByte+1,fsr2h
  9187  00BB0C  6EDF               	movwf	indf2,c
  9188                           
  9189                           ; BSR set to: 57
  9190                           ;../modbus/port/portserial.c: 97:     return 1;
  9191  00BB0E  0E01               	movlw	1
  9192                           
  9193                           ; BSR set to: 57
  9194  00BB10  0012               	return		;funcret
  9195  00BB12                     __end_of_xMBPortSerialGetByte:
  9196                           	callstack 0
  9197                           
  9198 ;; *************** function _handle_write_only_regs *****************
  9199 ;; Defined at:
  9200 ;;		line 2000 in file "../app/app_src/application.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;		None
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;  j               1   94[BANK0 ] unsigned char 
  9205 ;;  j               1   93[BANK0 ] unsigned char 
  9206 ;;  keyptr          2   95[BANK0 ] PTR unsigned int 
  9207 ;;		 -> write_only_mb_regs(36), 
  9208 ;; Return value:  Size  Location     Type
  9209 ;;                  1    wreg      void 
  9210 ;; Registers used:
  9211 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9212 ;; Tracked objects:
  9213 ;;		On entry : 3F/1
  9214 ;;		On exit  : 3F/3
  9215 ;;		Unchanged: 0/0
  9216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9218 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9219 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9220 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9221 ;;Total ram usage:        6 bytes
  9222 ;; Hardware stack levels used:    1
  9223 ;; Hardware stack levels required when called:   17
  9224 ;; This function calls:
  9225 ;;		_cmdSetSink
  9226 ;;		_keycmp
  9227 ;;		_set_eeprom_sync
  9228 ;; This function is called by:
  9229 ;;		_MBRTUStack
  9230 ;; This function uses a non-reentrant model
  9231 ;;
  9232                           
  9233                           	psect	text32
  9234  005516                     __ptext32:
  9235                           	callstack 0
  9236  005516                     _handle_write_only_regs:
  9237                           	callstack 11
  9238                           
  9239                           ;../app/app_src/application.c: 2002:     uint16_t* keyptr = (uint16_t*)&write_only_mb_re
      +                          gs[WO_AES1];
  9240                           
  9241                           ; BSR set to: 57
  9242                           ;incstack = 0
  9243  005516  0E2E               	movlw	low (_write_only_mb_regs+2)
  9244  005518  0100               	movlb	0	; force () banked
  9245  00551A  6FBF               	movwf	handle_write_only_regs@keyptr& (0+255),b
  9246  00551C  0E03               	movlw	high (_write_only_mb_regs+2)
  9247  00551E  6FC0               	movwf	(handle_write_only_regs@keyptr+1)& (0+255),b
  9248                           
  9249                           ; BSR set to: 0
  9250                           ;../app/app_src/application.c: 2004:     if(0 != keycmp((uint16_t*)&aes_key, keyptr, siz
      +                          eof(aes_key)/2)){
  9251  005520  0E96               	movlw	low _aes_key
  9252  005522  0100               	movlb	0	; force () banked
  9253  005524  6F71               	movwf	keycmp@key& (0+255),b
  9254  005526  0E03               	movlw	high _aes_key
  9255  005528  6F72               	movwf	(keycmp@key+1)& (0+255),b
  9256  00552A  C0BF  F073         	movff	handle_write_only_regs@keyptr,keycmp@new
  9257  00552E  C0C0  F074         	movff	handle_write_only_regs@keyptr+1,keycmp@new+1
  9258  005532  0E08               	movlw	8
  9259  005534  0100               	movlb	0	; force () banked
  9260  005536  6F75               	movwf	keycmp@size& (0+255),b
  9261  005538  EC1D  F04B         	call	_keycmp	;wreg free
  9262  00553C  0900               	iorlw	0
  9263  00553E  B4D8               	btfsc	status,2,c
  9264  005540  D03D               	goto	l19106
  9265                           
  9266                           ; BSR set to: 0
  9267                           ;../app/app_src/application.c: 2005:         uint8_t j = 0;
  9268  005542  0E00               	movlw	0
  9269  005544  0100               	movlb	0	; force () banked
  9270  005546  6FBD               	movwf	handle_write_only_regs@j& (0+255),b
  9271                           
  9272                           ;../app/app_src/application.c: 2007:         while(j < 16){
  9273  005548  D032               	goto	l595
  9274  00554A                     l19094:
  9275                           
  9276                           ; BSR set to: 0
  9277                           ;../app/app_src/application.c: 2008:             aes_key[j++] = (*keyptr >> 8) & 0xFF;
  9278  00554A  0E96               	movlw	low _aes_key
  9279  00554C  0100               	movlb	0	; force () banked
  9280  00554E  25BD               	addwf	handle_write_only_regs@j& (0+255),w,b
  9281  005550  6ED9               	movwf	fsr2l,c
  9282  005552  6ADA               	clrf	fsr2h,c
  9283  005554  0E03               	movlw	high _aes_key
  9284  005556  22DA               	addwfc	fsr2h,f,c
  9285  005558  0060  F2FF  FFE9   	movff	handle_write_only_regs@keyptr,fsr0l
  9286  00555E  0060  F303  FFEA   	movff	handle_write_only_regs@keyptr+1,fsr0h
  9287  005564  006F FFB8  F0BB    	movff	postinc0,??_handle_write_only_regs
  9288  00556A  006F FFB4  F0BC    	movff	postdec0,??_handle_write_only_regs+1
  9289  005570  C0BC  F0BB         	movff	??_handle_write_only_regs+1,??_handle_write_only_regs
  9290  005574  0100               	movlb	0	; force () banked
  9291  005576  6BBC               	clrf	(??_handle_write_only_regs+1)& (0+255),b
  9292  005578  51BB               	movf	??_handle_write_only_regs& (0+255),w,b
  9293  00557A  6EDF               	movwf	indf2,c
  9294                           
  9295                           ; BSR set to: 0
  9296  00557C  0100               	movlb	0	; force () banked
  9297  00557E  2BBD               	incf	handle_write_only_regs@j& (0+255),f,b
  9298                           
  9299                           ; BSR set to: 0
  9300                           ;../app/app_src/application.c: 2009:             aes_key[j++] = *keyptr++ & 0xFF;
  9301  005580  0060  F2FF  FFD9   	movff	handle_write_only_regs@keyptr,fsr2l
  9302  005586  0060  F303  FFDA   	movff	handle_write_only_regs@keyptr+1,fsr2h
  9303  00558C  0E96               	movlw	low _aes_key
  9304  00558E  0100               	movlb	0	; force () banked
  9305  005590  25BD               	addwf	handle_write_only_regs@j& (0+255),w,b
  9306  005592  6EE9               	movwf	fsr0l,c
  9307  005594  6AEA               	clrf	fsr0h,c
  9308  005596  0E03               	movlw	high _aes_key
  9309  005598  22EA               	addwfc	fsr0h,f,c
  9310  00559A  006F FF7F FFEF     	movff	indf2,indf0
  9311                           
  9312                           ; BSR set to: 0
  9313  0055A0  0E02               	movlw	2
  9314  0055A2  0100               	movlb	0	; force () banked
  9315  0055A4  27BF               	addwf	handle_write_only_regs@keyptr& (0+255),f,b
  9316  0055A6  0E00               	movlw	0
  9317  0055A8  23C0               	addwfc	(handle_write_only_regs@keyptr+1)& (0+255),f,b
  9318                           
  9319                           ; BSR set to: 0
  9320  0055AA  0100               	movlb	0	; force () banked
  9321  0055AC  2BBD               	incf	handle_write_only_regs@j& (0+255),f,b
  9322  0055AE                     l595:
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;../app/app_src/application.c: 2007:         while(j < 16){
  9326  0055AE  0E0F               	movlw	15
  9327  0055B0  0100               	movlb	0	; force () banked
  9328  0055B2  65BD               	cpfsgt	handle_write_only_regs@j& (0+255),b
  9329  0055B4  D7CA               	goto	l19094
  9330                           
  9331                           ; BSR set to: 0
  9332                           ;../app/app_src/application.c: 2011:         set_eeprom_sync(EEPROM_APPKEY);
  9333  0055B6  0E02               	movlw	2
  9334  0055B8  EC21  F040         	call	_set_eeprom_sync
  9335  0055BC                     l19106:
  9336                           
  9337                           ; BSR set to: 0
  9338                           ;../app/app_src/application.c: 2014:     keyptr = (uint16_t*)&write_only_mb_regs[WO_NAES
      +                          1];
  9339  0055BC  0E3E               	movlw	low (_write_only_mb_regs+18)
  9340  0055BE  0100               	movlb	0	; force () banked
  9341  0055C0  6FBF               	movwf	handle_write_only_regs@keyptr& (0+255),b
  9342  0055C2  0E03               	movlw	high (_write_only_mb_regs+18)
  9343  0055C4  6FC0               	movwf	(handle_write_only_regs@keyptr+1)& (0+255),b
  9344                           
  9345                           ; BSR set to: 0
  9346                           ;../app/app_src/application.c: 2015:     if(0 != keycmp(&net_key, keyptr, sizeof(net_key
      +                          )/2)){
  9347  0055C6  0E86               	movlw	low _net_key
  9348  0055C8  0100               	movlb	0	; force () banked
  9349  0055CA  6F71               	movwf	keycmp@key& (0+255),b
  9350  0055CC  0E03               	movlw	high _net_key
  9351  0055CE  6F72               	movwf	(keycmp@key+1)& (0+255),b
  9352  0055D0  C0BF  F073         	movff	handle_write_only_regs@keyptr,keycmp@new
  9353  0055D4  C0C0  F074         	movff	handle_write_only_regs@keyptr+1,keycmp@new+1
  9354  0055D8  0E08               	movlw	8
  9355  0055DA  0100               	movlb	0	; force () banked
  9356  0055DC  6F75               	movwf	keycmp@size& (0+255),b
  9357  0055DE  EC1D  F04B         	call	_keycmp	;wreg free
  9358  0055E2  0900               	iorlw	0
  9359  0055E4  B4D8               	btfsc	status,2,c
  9360  0055E6  D03D               	goto	l19124
  9361                           
  9362                           ; BSR set to: 0
  9363                           ;../app/app_src/application.c: 2016:         uint8_t j = 0;
  9364  0055E8  0E00               	movlw	0
  9365  0055EA  0100               	movlb	0	; force () banked
  9366  0055EC  6FBE               	movwf	handle_write_only_regs@j_1224& (0+255),b
  9367                           
  9368                           ;../app/app_src/application.c: 2018:         while(j < 16){
  9369  0055EE  D032               	goto	l599
  9370  0055F0                     l19112:
  9371                           
  9372                           ; BSR set to: 0
  9373                           ;../app/app_src/application.c: 2019:             net_key[j++] = (*keyptr >> 8) & 0xFF;
  9374  0055F0  0E86               	movlw	low _net_key
  9375  0055F2  0100               	movlb	0	; force () banked
  9376  0055F4  25BE               	addwf	handle_write_only_regs@j_1224& (0+255),w,b
  9377  0055F6  6ED9               	movwf	fsr2l,c
  9378  0055F8  6ADA               	clrf	fsr2h,c
  9379  0055FA  0E03               	movlw	high _net_key
  9380  0055FC  22DA               	addwfc	fsr2h,f,c
  9381  0055FE  0060  F2FF  FFE9   	movff	handle_write_only_regs@keyptr,fsr0l
  9382  005604  0060  F303  FFEA   	movff	handle_write_only_regs@keyptr+1,fsr0h
  9383  00560A  006F FFB8  F0BB    	movff	postinc0,??_handle_write_only_regs
  9384  005610  006F FFB4  F0BC    	movff	postdec0,??_handle_write_only_regs+1
  9385  005616  C0BC  F0BB         	movff	??_handle_write_only_regs+1,??_handle_write_only_regs
  9386  00561A  0100               	movlb	0	; force () banked
  9387  00561C  6BBC               	clrf	(??_handle_write_only_regs+1)& (0+255),b
  9388  00561E  51BB               	movf	??_handle_write_only_regs& (0+255),w,b
  9389  005620  6EDF               	movwf	indf2,c
  9390                           
  9391                           ; BSR set to: 0
  9392  005622  0100               	movlb	0	; force () banked
  9393  005624  2BBE               	incf	handle_write_only_regs@j_1224& (0+255),f,b
  9394                           
  9395                           ; BSR set to: 0
  9396                           ;../app/app_src/application.c: 2020:             net_key[j++] = *keyptr++ & 0xFF;
  9397  005626  0060  F2FF  FFD9   	movff	handle_write_only_regs@keyptr,fsr2l
  9398  00562C  0060  F303  FFDA   	movff	handle_write_only_regs@keyptr+1,fsr2h
  9399  005632  0E86               	movlw	low _net_key
  9400  005634  0100               	movlb	0	; force () banked
  9401  005636  25BE               	addwf	handle_write_only_regs@j_1224& (0+255),w,b
  9402  005638  6EE9               	movwf	fsr0l,c
  9403  00563A  6AEA               	clrf	fsr0h,c
  9404  00563C  0E03               	movlw	high _net_key
  9405  00563E  22EA               	addwfc	fsr0h,f,c
  9406  005640  006F FF7F FFEF     	movff	indf2,indf0
  9407                           
  9408                           ; BSR set to: 0
  9409  005646  0E02               	movlw	2
  9410  005648  0100               	movlb	0	; force () banked
  9411  00564A  27BF               	addwf	handle_write_only_regs@keyptr& (0+255),f,b
  9412  00564C  0E00               	movlw	0
  9413  00564E  23C0               	addwfc	(handle_write_only_regs@keyptr+1)& (0+255),f,b
  9414                           
  9415                           ; BSR set to: 0
  9416  005650  0100               	movlb	0	; force () banked
  9417  005652  2BBE               	incf	handle_write_only_regs@j_1224& (0+255),f,b
  9418  005654                     l599:
  9419                           
  9420                           ; BSR set to: 0
  9421                           ;../app/app_src/application.c: 2018:         while(j < 16){
  9422  005654  0E0F               	movlw	15
  9423  005656  0100               	movlb	0	; force () banked
  9424  005658  65BE               	cpfsgt	handle_write_only_regs@j_1224& (0+255),b
  9425  00565A  D7CA               	goto	l19112
  9426                           
  9427                           ; BSR set to: 0
  9428                           ;../app/app_src/application.c: 2022:         set_eeprom_sync(EEPROM_NETKEY);
  9429  00565C  0E03               	movlw	3
  9430  00565E  EC21  F040         	call	_set_eeprom_sync
  9431  005662                     l19124:
  9432                           
  9433                           ; BSR set to: 0
  9434                           ;../app/app_src/application.c: 2026:     if(write_only_mb_regs[WO_SET_SINK]){
  9435  005662  0103               	movlb	3	; force () banked
  9436  005664  514E               	movf	(_write_only_mb_regs+34)& (0+255),w,b
  9437  005666  114F               	iorwf	(_write_only_mb_regs+35)& (0+255),w,b
  9438  005668  B4D8               	btfsc	status,2,c
  9439  00566A  0012               	return	
  9440                           
  9441                           ; BSR set to: 3
  9442                           ;../app/app_src/application.c: 2027:         write_only_mb_regs[WO_SET_SINK] = 0;
  9443  00566C  0E00               	movlw	0
  9444  00566E  0103               	movlb	3	; force () banked
  9445  005670  6F4F               	movwf	(_write_only_mb_regs+35)& (0+255),b
  9446  005672  0E00               	movlw	0
  9447  005674  6F4E               	movwf	(_write_only_mb_regs+34)& (0+255),b
  9448                           
  9449                           ; BSR set to: 3
  9450                           ;../app/app_src/application.c: 2028:         cmdSetSink((0));
  9451  005676  0E00               	movlw	0
  9452  005678  0100               	movlb	0	; force () banked
  9453  00567A  6F9E               	movwf	cmdSetSink@cmd& (0+255),b
  9454  00567C  0E00               	movlw	0
  9455  00567E  6F9F               	movwf	(cmdSetSink@cmd+1)& (0+255),b
  9456  005680  EC2F  F017         	call	_cmdSetSink	;wreg free
  9457                           
  9458                           ;../app/app_src/application.c: 2030:         read_only_mb_regs[RO_SINK_ID] = (sinkAddr0 
      +                          << 8) | sinkAddr1;
  9459  005684  0100               	movlb	0	; force () banked
  9460  005686  51DF               	movf	_sinkAddr1& (0+255),w,b
  9461  005688  C0E0  F0BB         	movff	_sinkAddr0,??_handle_write_only_regs
  9462  00568C  0100               	movlb	0	; force () banked
  9463  00568E  6BBC               	clrf	(??_handle_write_only_regs+1)& (0+255),b
  9464  005690  C0BB  F0BC         	movff	??_handle_write_only_regs,??_handle_write_only_regs+1
  9465  005694  6BBB               	clrf	??_handle_write_only_regs& (0+255),b
  9466  005696  11BB               	iorwf	??_handle_write_only_regs& (0+255),w,b
  9467  005698  0103               	movlb	3	; force () banked
  9468  00569A  6F5E               	movwf	(_read_only_mb_regs+14)& (0+255),b
  9469  00569C  0100               	movlb	0	; force () banked
  9470  00569E  51BC               	movf	(??_handle_write_only_regs+1)& (0+255),w,b
  9471  0056A0  0103               	movlb	3	; force () banked
  9472  0056A2  6F5F               	movwf	(_read_only_mb_regs+15)& (0+255),b
  9473                           
  9474                           ; BSR set to: 3
  9475  0056A4  0012               	return		;funcret
  9476  0056A6                     __end_of_handle_write_only_regs:
  9477                           	callstack 0
  9478                           
  9479 ;; *************** function _keycmp *****************
  9480 ;; Defined at:
  9481 ;;		line 1961 in file "../app/app_src/application.c"
  9482 ;; Parameters:    Size  Location     Type
  9483 ;;  key             2   17[BANK0 ] PTR unsigned int 
  9484 ;;		 -> net_key(16), aes_key(16), 
  9485 ;;  new             2   19[BANK0 ] PTR unsigned int 
  9486 ;;		 -> write_only_mb_regs(36), 
  9487 ;;  size            1   21[BANK0 ] unsigned char 
  9488 ;; Auto vars:     Size  Location     Type
  9489 ;;  temp            2   26[BANK0 ] unsigned int 
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  1    wreg      unsigned char 
  9492 ;; Registers used:
  9493 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9494 ;; Tracked objects:
  9495 ;;		On entry : 3F/0
  9496 ;;		On exit  : 3F/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9499 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9500 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9501 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9502 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9503 ;;Total ram usage:       11 bytes
  9504 ;; Hardware stack levels used:    1
  9505 ;; Hardware stack levels required when called:   11
  9506 ;; This function calls:
  9507 ;;		Nothing
  9508 ;; This function is called by:
  9509 ;;		_handle_write_only_regs
  9510 ;; This function uses a non-reentrant model
  9511 ;;
  9512                           
  9513                           	psect	text33
  9514  00963A                     __ptext33:
  9515                           	callstack 0
  9516  00963A                     _keycmp:
  9517                           	callstack 16
  9518                           
  9519                           ;../app/app_src/application.c: 1962:     while(size--){
  9520                           
  9521                           ; BSR set to: 3
  9522                           ;incstack = 0
  9523  00963A  D042               	goto	l576
  9524  00963C                     l14280:
  9525                           
  9526                           ; BSR set to: 0
  9527                           ;../app/app_src/application.c: 1963:         uint16_t temp = ((*new << 8) | (*new >> 8))
      +                          ;
  9528  00963C  0060  F1CF  FFD9   	movff	keycmp@new,fsr2l
  9529  009642  0060  F1D3  FFDA   	movff	keycmp@new+1,fsr2h
  9530  009648  006F FF78  F076    	movff	postinc2,??_keycmp
  9531  00964E  006F FF74  F077    	movff	postdec2,??_keycmp+1
  9532  009654  C077  F076         	movff	??_keycmp+1,??_keycmp
  9533  009658  0100               	movlb	0	; force () banked
  9534  00965A  6B77               	clrf	(??_keycmp+1)& (0+255),b
  9535  00965C  0060  F1CF  FFD9   	movff	keycmp@new,fsr2l
  9536  009662  0060  F1D3  FFDA   	movff	keycmp@new+1,fsr2h
  9537  009668  006F FF78  F078    	movff	postinc2,??_keycmp+2
  9538  00966E  006F FF74  F079    	movff	postdec2,??_keycmp+3
  9539  009674  C078  F079         	movff	??_keycmp+2,??_keycmp+3
  9540  009678  6B78               	clrf	(??_keycmp+2)& (0+255),b
  9541  00967A  5176               	movf	??_keycmp& (0+255),w,b
  9542  00967C  1178               	iorwf	(??_keycmp+2)& (0+255),w,b
  9543  00967E  0100               	movlb	0	; force () banked
  9544  009680  6F7A               	movwf	keycmp@temp& (0+255),b
  9545  009682  0100               	movlb	0	; force () banked
  9546  009684  5177               	movf	(??_keycmp+1)& (0+255),w,b
  9547  009686  1179               	iorwf	(??_keycmp+3)& (0+255),w,b
  9548  009688  0100               	movlb	0	; force () banked
  9549  00968A  6F7B               	movwf	(keycmp@temp+1)& (0+255),b
  9550                           
  9551                           ;../app/app_src/application.c: 1964:         if(*key++ != temp){
  9552  00968C  0060  F1C7  FFD9   	movff	keycmp@key,fsr2l
  9553  009692  0060  F1CB  FFDA   	movff	keycmp@key+1,fsr2h
  9554  009698  0100               	movlb	0	; force () banked
  9555  00969A  0E02               	movlw	2
  9556  00969C  2771               	addwf	keycmp@key& (0+255),f,b
  9557  00969E  0E00               	movlw	0
  9558  0096A0  2372               	addwfc	(keycmp@key+1)& (0+255),f,b
  9559  0096A2  0100               	movlb	0	; force () banked
  9560  0096A4  517A               	movf	keycmp@temp& (0+255),w,b
  9561  0096A6  18DE               	xorwf	postinc2,w,c
  9562  0096A8  E104               	bnz	u11060
  9563  0096AA  517B               	movf	(keycmp@temp+1)& (0+255),w,b
  9564  0096AC  18DE               	xorwf	postinc2,w,c
  9565  0096AE  B4D8               	btfsc	status,2,c
  9566  0096B0  D002               	goto	l14286
  9567  0096B2                     u11060:
  9568                           
  9569                           ; BSR set to: 0
  9570                           ;../app/app_src/application.c: 1965:             return 1;
  9571  0096B2  0E01               	movlw	1
  9572  0096B4  0012               	return	
  9573  0096B6                     l14286:
  9574                           
  9575                           ; BSR set to: 0
  9576                           ;../app/app_src/application.c: 1967:         new++;
  9577  0096B6  0E02               	movlw	2
  9578  0096B8  0100               	movlb	0	; force () banked
  9579  0096BA  2773               	addwf	keycmp@new& (0+255),f,b
  9580  0096BC  0E00               	movlw	0
  9581  0096BE  2374               	addwfc	(keycmp@new+1)& (0+255),f,b
  9582  0096C0                     l576:
  9583                           
  9584                           ;../app/app_src/application.c: 1962:     while(size--){
  9585  0096C0  0100               	movlb	0	; force () banked
  9586  0096C2  0775               	decf	keycmp@size& (0+255),f,b
  9587  0096C4  2975               	incf	keycmp@size& (0+255),w,b
  9588  0096C6  A4D8               	btfss	status,2,c
  9589  0096C8  D7B9               	goto	l14280
  9590                           
  9591                           ; BSR set to: 0
  9592                           ;../app/app_src/application.c: 1969:     return 0;
  9593  0096CA  0E00               	movlw	0
  9594                           
  9595                           ; BSR set to: 0
  9596  0096CC  0012               	return		;funcret
  9597  0096CE                     __end_of_keycmp:
  9598                           	callstack 0
  9599                           
  9600 ;; *************** function _cmdSetSink *****************
  9601 ;; Defined at:
  9602 ;;		line 770 in file "../app/app_src/application.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  cmd             2   62[BANK0 ] PTR unsigned char 
  9605 ;;		 -> NULL(0), 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;  msgstr         16   67[BANK0 ] unsigned char [16]
  9608 ;;  new_sink        2   88[BANK0 ] unsigned int 
  9609 ;;  buf_id          1   90[BANK0 ] unsigned char 
  9610 ;;  needed_size     1   87[BANK0 ] unsigned char 
  9611 ;;  N0              1   86[BANK0 ] unsigned char 
  9612 ;;  N1              1   85[BANK0 ] unsigned char 
  9613 ;;  N2              1   84[BANK0 ] unsigned char 
  9614 ;;  N3              1   83[BANK0 ] unsigned char 
  9615 ;; Return value:  Size  Location     Type
  9616 ;;                  1    wreg      void 
  9617 ;; Registers used:
  9618 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9619 ;; Tracked objects:
  9620 ;;		On entry : 3F/0
  9621 ;;		On exit  : 0/0
  9622 ;;		Unchanged: 0/0
  9623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9624 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9625 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9626 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9627 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9628 ;;Total ram usage:       29 bytes
  9629 ;; Hardware stack levels used:    1
  9630 ;; Hardware stack levels required when called:   16
  9631 ;; This function calls:
  9632 ;;		_DATAEE_WriteByte
  9633 ;;		_NWK_DataReq
  9634 ;;		_app_aes_encrypt
  9635 ;;		_get_free_tx_buffer
  9636 ;;		_memcpy
  9637 ;;		_memset
  9638 ;;		_needed_packet_length
  9639 ;;		_strlen
  9640 ;; This function is called by:
  9641 ;;		_handle_write_only_regs
  9642 ;; This function uses a non-reentrant model
  9643 ;;
  9644                           
  9645                           	psect	text34
  9646  002E5E                     __ptext34:
  9647                           	callstack 0
  9648  002E5E                     _cmdSetSink:
  9649                           	callstack 11
  9650                           
  9651                           ;../app/app_src/application.c: 771:  char msgstr[16];;../app/app_src/application.c: 772:
      +                            uint8_t buf_id, needed_size;;../app/app_src/application.c: 773:     uint16_t new_sink 
      +                          = (currentAddr0 << 8) | currentAddr1;
  9652                           
  9653                           ; BSR set to: 0
  9654                           ;incstack = 0
  9655  002E5E  0100               	movlb	0	; force () banked
  9656  002E60  51EA               	movf	_currentAddr1& (0+255),w,b
  9657  002E62  C0EB  F0A0         	movff	_currentAddr0,??_cmdSetSink
  9658  002E66  0100               	movlb	0	; force () banked
  9659  002E68  6BA1               	clrf	(??_cmdSetSink+1)& (0+255),b
  9660  002E6A  C0A0  F0A1         	movff	??_cmdSetSink,??_cmdSetSink+1
  9661  002E6E  6BA0               	clrf	??_cmdSetSink& (0+255),b
  9662  002E70  11A0               	iorwf	??_cmdSetSink& (0+255),w,b
  9663  002E72  0100               	movlb	0	; force () banked
  9664  002E74  6FB8               	movwf	cmdSetSink@new_sink& (0+255),b
  9665  002E76  0100               	movlb	0	; force () banked
  9666  002E78  51A1               	movf	(??_cmdSetSink+1)& (0+255),w,b
  9667  002E7A  0100               	movlb	0	; force () banked
  9668  002E7C  6FB9               	movwf	(cmdSetSink@new_sink+1)& (0+255),b
  9669                           
  9670                           ; BSR set to: 0
  9671                           ;../app/app_src/application.c: 774:     char N3, N2, N1, N0;;../app/app_src/application.
      +                          c: 775:     memset(msgstr, 0, sizeof(msgstr));
  9672  002E7E  0EA3               	movlw	low cmdSetSink@msgstr
  9673  002E80  0100               	movlb	0	; force () banked
  9674  002E82  6F71               	movwf	memset@p1& (0+255),b
  9675  002E84  0E00               	movlw	high cmdSetSink@msgstr
  9676  002E86  6F72               	movwf	(memset@p1+1)& (0+255),b
  9677  002E88  0E00               	movlw	0
  9678  002E8A  0100               	movlb	0	; force () banked
  9679  002E8C  6F74               	movwf	(memset@c+1)& (0+255),b
  9680  002E8E  0E00               	movlw	0
  9681  002E90  6F73               	movwf	memset@c& (0+255),b
  9682  002E92  0E00               	movlw	0
  9683  002E94  0100               	movlb	0	; force () banked
  9684  002E96  6F76               	movwf	(memset@n+1)& (0+255),b
  9685  002E98  0E10               	movlw	16
  9686  002E9A  6F75               	movwf	memset@n& (0+255),b
  9687  002E9C  ECA8  F058         	call	_memset	;wreg free
  9688                           
  9689                           ; BSR set to: 0
  9690                           ;../app/app_src/application.c: 777:  sinkAddr0 = currentAddr0;
  9691  002EA0  C0EB  F0E0         	movff	_currentAddr0,_sinkAddr0
  9692                           
  9693                           ; BSR set to: 0
  9694                           ;../app/app_src/application.c: 778:  sinkAddr1 = currentAddr1;
  9695  002EA4  C0EA  F0DF         	movff	_currentAddr1,_sinkAddr1
  9696                           
  9697                           ; BSR set to: 0
  9698                           ;../app/app_src/application.c: 780:  DATAEE_WriteByte(0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1,currentA
      +                          ddr0);
  9699  002EA8  0E00               	movlw	0
  9700  002EAA  0100               	movlb	0	; force () banked
  9701  002EAC  6F72               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  9702  002EAE  0E1B               	movlw	27
  9703  002EB0  6F71               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  9704  002EB2  C0EB  F073         	movff	_currentAddr0,DATAEE_WriteByte@bData
  9705  002EB6  EC5E  F054         	call	_DATAEE_WriteByte	;wreg free
  9706                           
  9707                           ;../app/app_src/application.c: 781:  DATAEE_WriteByte(0 + 0 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1,curr
      +                          entAddr1);
  9708  002EBA  0E00               	movlw	0
  9709  002EBC  0100               	movlb	0	; force () banked
  9710  002EBE  6F72               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
  9711  002EC0  0E1C               	movlw	28
  9712  002EC2  6F71               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
  9713  002EC4  C0EA  F073         	movff	_currentAddr1,DATAEE_WriteByte@bData
  9714  002EC8  EC5E  F054         	call	_DATAEE_WriteByte	;wreg free
  9715                           
  9716                           ;../app/app_src/application.c: 783:     N3 = ascii_lut[(new_sink >> 12) & 0x0F];
  9717  002ECC  C0B8  F0A0         	movff	cmdSetSink@new_sink,??_cmdSetSink
  9718  002ED0  C0B9  F0A1         	movff	cmdSetSink@new_sink+1,??_cmdSetSink+1
  9719  002ED4  0E0C               	movlw	12
  9720  002ED6  0100               	movlb	0	; force () banked
  9721  002ED8  6FA2               	movwf	(??_cmdSetSink+2)& (0+255),b
  9722  002EDA                     u16425:
  9723  002EDA  90D8               	bcf	status,0,c
  9724  002EDC  33A1               	rrcf	(??_cmdSetSink+1)& (0+255),f,b
  9725  002EDE  33A0               	rrcf	??_cmdSetSink& (0+255),f,b
  9726  002EE0  2FA2               	decfsz	(??_cmdSetSink+2)& (0+255),f,b
  9727  002EE2  D7FB               	goto	u16425
  9728  002EE4  0E0F               	movlw	15
  9729  002EE6  17A0               	andwf	??_cmdSetSink& (0+255),f,b
  9730  002EE8  0E00               	movlw	0
  9731  002EEA  17A1               	andwf	(??_cmdSetSink+1)& (0+255),f,b
  9732  002EEC  0E7D               	movlw	low _ascii_lut
  9733  002EEE  25A0               	addwf	??_cmdSetSink& (0+255),w,b
  9734  002EF0  6EF6               	movwf	tblptrl,c
  9735  002EF2  0EFE               	movlw	high _ascii_lut
  9736  002EF4  21A1               	addwfc	(??_cmdSetSink+1)& (0+255),w,b
  9737  002EF6  6EF7               	movwf	tblptrh,c
  9738  002EF8                     	if	1	;There are 3 active tblptr bytes
  9739  002EF8  6AF8               	clrf	tblptru,c
  9740  002EFA  0E00               	movlw	low (__mediumconst shr (0+16))
  9741  002EFC  22F8               	addwfc	tblptru,f,c
  9742  002EFE                     	endif
  9743  002EFE  0008               	tblrd		*
  9744  002F00  006F FFD4  F0B3    	movff	tablat,cmdSetSink@N3
  9745                           
  9746                           ; BSR set to: 0
  9747                           ;../app/app_src/application.c: 784:     N2 = ascii_lut[(new_sink >> 8) & 0x0F];
  9748  002F06  0100               	movlb	0	; force () banked
  9749  002F08  51B9               	movf	(cmdSetSink@new_sink+1)& (0+255),w,b
  9750  002F0A  0B0F               	andlw	15
  9751  002F0C  0100               	movlb	0	; force () banked
  9752  002F0E  6FA0               	movwf	??_cmdSetSink& (0+255),b
  9753  002F10  6BA1               	clrf	(??_cmdSetSink+1)& (0+255),b
  9754  002F12  0E7D               	movlw	low _ascii_lut
  9755  002F14  25A0               	addwf	??_cmdSetSink& (0+255),w,b
  9756  002F16  6EF6               	movwf	tblptrl,c
  9757  002F18  0EFE               	movlw	high _ascii_lut
  9758  002F1A  21A1               	addwfc	(??_cmdSetSink+1)& (0+255),w,b
  9759  002F1C  6EF7               	movwf	tblptrh,c
  9760  002F1E                     	if	1	;There are 3 active tblptr bytes
  9761  002F1E  6AF8               	clrf	tblptru,c
  9762  002F20  0E00               	movlw	low (__mediumconst shr (0+16))
  9763  002F22  22F8               	addwfc	tblptru,f,c
  9764  002F24                     	endif
  9765  002F24  0008               	tblrd		*
  9766  002F26  006F FFD4  F0B4    	movff	tablat,cmdSetSink@N2
  9767                           
  9768                           ; BSR set to: 0
  9769                           ;../app/app_src/application.c: 785:     N1 = ascii_lut[(new_sink >> 4) & 0x0F];
  9770  002F2C  C0B8  F0A0         	movff	cmdSetSink@new_sink,??_cmdSetSink
  9771  002F30  C0B9  F0A1         	movff	cmdSetSink@new_sink+1,??_cmdSetSink+1
  9772  002F34  0E04               	movlw	4
  9773  002F36  0100               	movlb	0	; force () banked
  9774  002F38  6FA2               	movwf	(??_cmdSetSink+2)& (0+255),b
  9775  002F3A                     u16435:
  9776  002F3A  90D8               	bcf	status,0,c
  9777  002F3C  33A1               	rrcf	(??_cmdSetSink+1)& (0+255),f,b
  9778  002F3E  33A0               	rrcf	??_cmdSetSink& (0+255),f,b
  9779  002F40  2FA2               	decfsz	(??_cmdSetSink+2)& (0+255),f,b
  9780  002F42  D7FB               	goto	u16435
  9781  002F44  0E0F               	movlw	15
  9782  002F46  17A0               	andwf	??_cmdSetSink& (0+255),f,b
  9783  002F48  0E00               	movlw	0
  9784  002F4A  17A1               	andwf	(??_cmdSetSink+1)& (0+255),f,b
  9785  002F4C  0E7D               	movlw	low _ascii_lut
  9786  002F4E  25A0               	addwf	??_cmdSetSink& (0+255),w,b
  9787  002F50  6EF6               	movwf	tblptrl,c
  9788  002F52  0EFE               	movlw	high _ascii_lut
  9789  002F54  21A1               	addwfc	(??_cmdSetSink+1)& (0+255),w,b
  9790  002F56  6EF7               	movwf	tblptrh,c
  9791  002F58                     	if	1	;There are 3 active tblptr bytes
  9792  002F58  6AF8               	clrf	tblptru,c
  9793  002F5A  0E00               	movlw	low (__mediumconst shr (0+16))
  9794  002F5C  22F8               	addwfc	tblptru,f,c
  9795  002F5E                     	endif
  9796  002F5E  0008               	tblrd		*
  9797  002F60  006F FFD4  F0B5    	movff	tablat,cmdSetSink@N1
  9798                           
  9799                           ; BSR set to: 0
  9800                           ;../app/app_src/application.c: 786:     N0 = ascii_lut[new_sink & 0x0F];
  9801  002F66  0E0F               	movlw	15
  9802  002F68  0100               	movlb	0	; force () banked
  9803  002F6A  15B8               	andwf	cmdSetSink@new_sink& (0+255),w,b
  9804  002F6C  0100               	movlb	0	; force () banked
  9805  002F6E  6FA0               	movwf	??_cmdSetSink& (0+255),b
  9806  002F70  0E00               	movlw	0
  9807  002F72  0100               	movlb	0	; force () banked
  9808  002F74  15B9               	andwf	(cmdSetSink@new_sink+1)& (0+255),w,b
  9809  002F76  0100               	movlb	0	; force () banked
  9810  002F78  6FA1               	movwf	(??_cmdSetSink+1)& (0+255),b
  9811  002F7A  0E7D               	movlw	low _ascii_lut
  9812  002F7C  25A0               	addwf	??_cmdSetSink& (0+255),w,b
  9813  002F7E  6EF6               	movwf	tblptrl,c
  9814  002F80  0EFE               	movlw	high _ascii_lut
  9815  002F82  21A1               	addwfc	(??_cmdSetSink+1)& (0+255),w,b
  9816  002F84  6EF7               	movwf	tblptrh,c
  9817  002F86                     	if	1	;There are 3 active tblptr bytes
  9818  002F86  6AF8               	clrf	tblptru,c
  9819  002F88  0E00               	movlw	low (__mediumconst shr (0+16))
  9820  002F8A  22F8               	addwfc	tblptru,f,c
  9821  002F8C                     	endif
  9822  002F8C  0008               	tblrd		*
  9823  002F8E  006F FFD4  F0B6    	movff	tablat,cmdSetSink@N0
  9824                           
  9825                           ; BSR set to: 0
  9826                           ;../app/app_src/application.c: 788:     msgstr[0] = 'S';
  9827  002F94  0E53               	movlw	83
  9828  002F96  0100               	movlb	0	; force () banked
  9829  002F98  6FA3               	movwf	cmdSetSink@msgstr& (0+255),b
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;../app/app_src/application.c: 789:     msgstr[1] = 'I';
  9833  002F9A  0E49               	movlw	73
  9834  002F9C  0100               	movlb	0	; force () banked
  9835  002F9E  6FA4               	movwf	(cmdSetSink@msgstr+1)& (0+255),b
  9836                           
  9837                           ; BSR set to: 0
  9838                           ;../app/app_src/application.c: 790:     msgstr[2] = 'N';
  9839  002FA0  0E4E               	movlw	78
  9840  002FA2  0100               	movlb	0	; force () banked
  9841  002FA4  6FA5               	movwf	(cmdSetSink@msgstr+2)& (0+255),b
  9842                           
  9843                           ; BSR set to: 0
  9844                           ;../app/app_src/application.c: 791:     msgstr[3] = 'K';
  9845  002FA6  0E4B               	movlw	75
  9846  002FA8  0100               	movlb	0	; force () banked
  9847  002FAA  6FA6               	movwf	(cmdSetSink@msgstr+3)& (0+255),b
  9848                           
  9849                           ; BSR set to: 0
  9850                           ;../app/app_src/application.c: 792:     msgstr[4] = '=';
  9851  002FAC  0E3D               	movlw	61
  9852  002FAE  0100               	movlb	0	; force () banked
  9853  002FB0  6FA7               	movwf	(cmdSetSink@msgstr+4)& (0+255),b
  9854                           
  9855                           ; BSR set to: 0
  9856                           ;../app/app_src/application.c: 793:     msgstr[5] = N3;
  9857  002FB2  C0B3  F0A8         	movff	cmdSetSink@N3,cmdSetSink@msgstr+5
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;../app/app_src/application.c: 794:     msgstr[6] = N2;
  9861  002FB6  C0B4  F0A9         	movff	cmdSetSink@N2,cmdSetSink@msgstr+6
  9862                           
  9863                           ; BSR set to: 0
  9864                           ;../app/app_src/application.c: 795:     msgstr[7] = N1;
  9865  002FBA  C0B5  F0AA         	movff	cmdSetSink@N1,cmdSetSink@msgstr+7
  9866                           
  9867                           ; BSR set to: 0
  9868                           ;../app/app_src/application.c: 796:     msgstr[8] = N0;
  9869  002FBE  C0B6  F0AB         	movff	cmdSetSink@N0,cmdSetSink@msgstr+8
  9870                           
  9871                           ; BSR set to: 0
  9872                           ;../app/app_src/application.c: 797:     needed_size = needed_packet_length(strlen(msgstr
      +                          ));
  9873  002FC2  0EA3               	movlw	low cmdSetSink@msgstr
  9874  002FC4  0100               	movlb	0	; force () banked
  9875  002FC6  6F71               	movwf	strlen@s& (0+255),b
  9876  002FC8  0E00               	movlw	high cmdSetSink@msgstr
  9877  002FCA  6F72               	movwf	(strlen@s+1)& (0+255),b
  9878  002FCC  5171               	movf	strlen@s& (0+255),w,b
  9879  002FCE  1172               	iorwf	(strlen@s+1)& (0+255),w,b
  9880  002FD0  A4D8               	btfss	status,2,c
  9881  002FD2  0E20               	movlw	32
  9882  002FD4  6F73               	movwf	(strlen@s+2)& (0+255),b
  9883  002FD6  ECF9  F052         	call	_strlen	;wreg free
  9884  002FDA  0100               	movlb	0	; force () banked
  9885  002FDC  5171               	movf	?_strlen& (0+255),w,b
  9886  002FDE  EC8C  F057         	call	_needed_packet_length
  9887  002FE2  0100               	movlb	0	; force () banked
  9888  002FE4  6FB7               	movwf	cmdSetSink@needed_size& (0+255),b
  9889                           
  9890                           ; BSR set to: 0
  9891                           ;../app/app_src/application.c: 798:     if(!get_free_tx_buffer(&buf_id)){
  9892  002FE6  0EBA               	movlw	low cmdSetSink@buf_id
  9893  002FE8  0100               	movlb	0	; force () banked
  9894  002FEA  6F71               	movwf	get_free_tx_buffer@buf_id& (0+255),b
  9895  002FEC  0E00               	movlw	high cmdSetSink@buf_id
  9896  002FEE  6F72               	movwf	(get_free_tx_buffer@buf_id+1)& (0+255),b
  9897  002FF0  ECFB  F04E         	call	_get_free_tx_buffer	;wreg free
  9898  002FF4  0900               	iorlw	0
  9899  002FF6  B4D8               	btfsc	status,2,c
  9900  002FF8  0012               	return	
  9901                           
  9902                           ;../app/app_src/application.c: 804:     memset(&tx_buffer[buf_id].payload, 0, (128 - 16 
      +                          - 2 ));
  9903  002FFA  0100               	movlb	0	; force () banked
  9904  002FFC  51BA               	movf	cmdSetSink@buf_id& (0+255),w,b
  9905  002FFE  0D84               	mullw	132
  9906  003000  0ED9               	movlw	low (_tx_buffer+22)
  9907  003002  24F3               	addwf	243,w,c
  9908  003004  0100               	movlb	0	; force () banked
  9909  003006  6F71               	movwf	memset@p1& (0+255),b
  9910  003008  0E0E               	movlw	high (_tx_buffer+22)
  9911  00300A  20F4               	addwfc	prodh,w,c
  9912  00300C  6F72               	movwf	(memset@p1+1)& (0+255),b
  9913  00300E  0E00               	movlw	0
  9914  003010  0100               	movlb	0	; force () banked
  9915  003012  6F74               	movwf	(memset@c+1)& (0+255),b
  9916  003014  0E00               	movlw	0
  9917  003016  6F73               	movwf	memset@c& (0+255),b
  9918  003018  0E00               	movlw	0
  9919  00301A  0100               	movlb	0	; force () banked
  9920  00301C  6F76               	movwf	(memset@n+1)& (0+255),b
  9921  00301E  0E6E               	movlw	110
  9922  003020  6F75               	movwf	memset@n& (0+255),b
  9923  003022  ECA8  F058         	call	_memset	;wreg free
  9924                           
  9925                           ; BSR set to: 0
  9926                           ;../app/app_src/application.c: 805:     memcpy(&tx_buffer[buf_id].payload + 16,msgstr,st
      +                          rlen(msgstr));
  9927  003026  0100               	movlb	0	; force () banked
  9928  003028  51BA               	movf	cmdSetSink@buf_id& (0+255),w,b
  9929  00302A  0D84               	mullw	132
  9930  00302C  0EE9               	movlw	low (_tx_buffer+38)
  9931  00302E  24F3               	addwf	243,w,c
  9932  003030  0100               	movlb	0	; force () banked
  9933  003032  6F77               	movwf	memcpy@d1& (0+255),b
  9934  003034  0E0E               	movlw	high (_tx_buffer+38)
  9935  003036  20F4               	addwfc	prodh,w,c
  9936  003038  6F78               	movwf	(memcpy@d1+1)& (0+255),b
  9937  00303A  0EA3               	movlw	low cmdSetSink@msgstr
  9938  00303C  0100               	movlb	0	; force () banked
  9939  00303E  6F79               	movwf	memcpy@s1& (0+255),b
  9940  003040  0E00               	movlw	high cmdSetSink@msgstr
  9941  003042  6F7A               	movwf	(memcpy@s1+1)& (0+255),b
  9942  003044  5179               	movf	memcpy@s1& (0+255),w,b
  9943  003046  117A               	iorwf	(memcpy@s1+1)& (0+255),w,b
  9944  003048  A4D8               	btfss	status,2,c
  9945  00304A  0E20               	movlw	32
  9946  00304C  6F7B               	movwf	(memcpy@s1+2)& (0+255),b
  9947  00304E  0EA3               	movlw	low cmdSetSink@msgstr
  9948  003050  0100               	movlb	0	; force () banked
  9949  003052  6F71               	movwf	strlen@s& (0+255),b
  9950  003054  0E00               	movlw	high cmdSetSink@msgstr
  9951  003056  6F72               	movwf	(strlen@s+1)& (0+255),b
  9952  003058  5171               	movf	strlen@s& (0+255),w,b
  9953  00305A  1172               	iorwf	(strlen@s+1)& (0+255),w,b
  9954  00305C  A4D8               	btfss	status,2,c
  9955  00305E  0E20               	movlw	32
  9956  003060  6F73               	movwf	(strlen@s+2)& (0+255),b
  9957  003062  ECF9  F052         	call	_strlen	;wreg free
  9958  003066  C071  F07C         	movff	?_strlen,memcpy@n
  9959  00306A  C072  F07D         	movff	?_strlen+1,memcpy@n+1
  9960  00306E  ECC1  F04F         	call	_memcpy	;wreg free
  9961                           
  9962                           ; BSR set to: 0
  9963                           ;../app/app_src/application.c: 806:     app_aes_encrypt(&tx_buffer[buf_id].payload, need
      +                          ed_size - 16);
  9964  003072  0100               	movlb	0	; force () banked
  9965  003074  51BA               	movf	cmdSetSink@buf_id& (0+255),w,b
  9966  003076  0D84               	mullw	132
  9967  003078  0ED9               	movlw	low (_tx_buffer+22)
  9968  00307A  24F3               	addwf	243,w,c
  9969  00307C  0100               	movlb	0	; force () banked
  9970  00307E  6F98               	movwf	app_aes_encrypt@data& (0+255),b
  9971  003080  0E0E               	movlw	high (_tx_buffer+22)
  9972  003082  20F4               	addwfc	prodh,w,c
  9973  003084  6F99               	movwf	(app_aes_encrypt@data+1)& (0+255),b
  9974  003086  0100               	movlb	0	; force () banked
  9975  003088  51B7               	movf	cmdSetSink@needed_size& (0+255),w,b
  9976  00308A  0FF0               	addlw	240
  9977  00308C  0100               	movlb	0	; force () banked
  9978  00308E  6F9A               	movwf	app_aes_encrypt@size& (0+255),b
  9979  003090  ECC4  F02F         	call	_app_aes_encrypt	;wreg free
  9980                           
  9981                           ; BSR set to: 0
  9982                           ;../app/app_src/application.c: 807:     tx_buffer[buf_id].nwkDataReq.dstAddr = 0xffff;
  9983  003094  0100               	movlb	0	; force () banked
  9984  003096  51BA               	movf	cmdSetSink@buf_id& (0+255),w,b
  9985  003098  0D84               	mullw	132
  9986  00309A  0ECB               	movlw	low (_tx_buffer+8)
  9987  00309C  24F3               	addwf	243,w,c
  9988  00309E  6ED9               	movwf	fsr2l,c
  9989  0030A0  0E0E               	movlw	high (_tx_buffer+8)
  9990  0030A2  20F4               	addwfc	prodh,w,c
  9991  0030A4  6EDA               	movwf	fsr2h,c
  9992  0030A6  0EFF               	movlw	255
  9993  0030A8  6EDE               	movwf	postinc2,c
  9994  0030AA  0EFF               	movlw	255
  9995  0030AC  6EDD               	movwf	postdec2,c
  9996                           
  9997                           ; BSR set to: 0
  9998                           ;../app/app_src/application.c: 808:     tx_buffer[buf_id].nwkDataReq.dstEndpoint = MANAG
      +                          EMENT_EP;
  9999  0030AE  0100               	movlb	0	; force () banked
 10000  0030B0  51BA               	movf	cmdSetSink@buf_id& (0+255),w,b
 10001  0030B2  0D84               	mullw	132
 10002  0030B4  0ECD               	movlw	low (_tx_buffer+10)
 10003  0030B6  24F3               	addwf	243,w,c
 10004  0030B8  6ED9               	movwf	fsr2l,c
 10005  0030BA  0E0E               	movlw	high (_tx_buffer+10)
 10006  0030BC  20F4               	addwfc	prodh,w,c
 10007  0030BE  6EDA               	movwf	fsr2h,c
 10008  0030C0  0E02               	movlw	2
 10009  0030C2  6EDF               	movwf	indf2,c
 10010                           
 10011                           ; BSR set to: 0
 10012                           ;../app/app_src/application.c: 809:     tx_buffer[buf_id].nwkDataReq.srcEndpoint = MANAG
      +                          EMENT_EP;
 10013  0030C4  0100               	movlb	0	; force () banked
 10014  0030C6  51BA               	movf	cmdSetSink@buf_id& (0+255),w,b
 10015  0030C8  0D84               	mullw	132
 10016  0030CA  0ECE               	movlw	low (_tx_buffer+11)
 10017  0030CC  24F3               	addwf	243,w,c
 10018  0030CE  6ED9               	movwf	fsr2l,c
 10019  0030D0  0E0E               	movlw	high (_tx_buffer+11)
 10020  0030D2  20F4               	addwfc	prodh,w,c
 10021  0030D4  6EDA               	movwf	fsr2h,c
 10022  0030D6  0E02               	movlw	2
 10023  0030D8  6EDF               	movwf	indf2,c
 10024                           
 10025                           ; BSR set to: 0
 10026                           ;../app/app_src/application.c: 810:     tx_buffer[buf_id].nwkDataReq.options = 0;
 10027  0030DA  0100               	movlb	0	; force () banked
 10028  0030DC  51BA               	movf	cmdSetSink@buf_id& (0+255),w,b
 10029  0030DE  0D84               	mullw	132
 10030  0030E0  0ECF               	movlw	low (_tx_buffer+12)
 10031  0030E2  24F3               	addwf	243,w,c
 10032  0030E4  6ED9               	movwf	fsr2l,c
 10033  0030E6  0E0E               	movlw	high (_tx_buffer+12)
 10034  0030E8  20F4               	addwfc	prodh,w,c
 10035  0030EA  6EDA               	movwf	fsr2h,c
 10036  0030EC  0E00               	movlw	0
 10037  0030EE  6EDF               	movwf	indf2,c
 10038                           
 10039                           ; BSR set to: 0
 10040                           ;../app/app_src/application.c: 811:     tx_buffer[buf_id].nwkDataReq.data = &tx_buffer[b
      +                          uf_id].payload;
 10041  0030F0  0100               	movlb	0	; force () banked
 10042  0030F2  51BA               	movf	cmdSetSink@buf_id& (0+255),w,b
 10043  0030F4  0D84               	mullw	132
 10044  0030F6  0ED9               	movlw	low (_tx_buffer+22)
 10045  0030F8  24F3               	addwf	243,w,c
 10046  0030FA  0100               	movlb	0	; force () banked
 10047  0030FC  6FA0               	movwf	??_cmdSetSink& (0+255),b
 10048  0030FE  0E0E               	movlw	high (_tx_buffer+22)
 10049  003100  20F4               	addwfc	prodh,w,c
 10050  003102  6FA1               	movwf	(??_cmdSetSink+1)& (0+255),b
 10051  003104  0100               	movlb	0	; force () banked
 10052  003106  51BA               	movf	cmdSetSink@buf_id& (0+255),w,b
 10053  003108  0D84               	mullw	132
 10054  00310A  0ED2               	movlw	low (_tx_buffer+15)
 10055  00310C  24F3               	addwf	243,w,c
 10056  00310E  6ED9               	movwf	fsr2l,c
 10057  003110  0E0E               	movlw	high (_tx_buffer+15)
 10058  003112  20F4               	addwfc	prodh,w,c
 10059  003114  6EDA               	movwf	fsr2h,c
 10060  003116  0060  F283  FFDE   	movff	??_cmdSetSink,postinc2
 10061  00311C  0060  F287  FFDD   	movff	??_cmdSetSink+1,postdec2
 10062                           
 10063                           ; BSR set to: 0
 10064                           ;../app/app_src/application.c: 812:     tx_buffer[buf_id].nwkDataReq.size = needed_size;
 10065  003122  0100               	movlb	0	; force () banked
 10066  003124  51BA               	movf	cmdSetSink@buf_id& (0+255),w,b
 10067  003126  0D84               	mullw	132
 10068  003128  0ED4               	movlw	low (_tx_buffer+17)
 10069  00312A  24F3               	addwf	243,w,c
 10070  00312C  6ED9               	movwf	fsr2l,c
 10071  00312E  0E0E               	movlw	high (_tx_buffer+17)
 10072  003130  20F4               	addwfc	prodh,w,c
 10073  003132  6EDA               	movwf	fsr2h,c
 10074  003134  0060  F2DF  FFDF   	movff	cmdSetSink@needed_size,indf2
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;../app/app_src/application.c: 813:     tx_buffer[buf_id].nwkDataReq.confirm = (void*)&a
      +                          ppDataConf;
 10078  00313A  0100               	movlb	0	; force () banked
 10079  00313C  51BA               	movf	cmdSetSink@buf_id& (0+255),w,b
 10080  00313E  0D84               	mullw	132
 10081  003140  0ED5               	movlw	low (_tx_buffer+18)
 10082  003142  24F3               	addwf	243,w,c
 10083  003144  6ED9               	movwf	fsr2l,c
 10084  003146  0E0E               	movlw	high (_tx_buffer+18)
 10085  003148  20F4               	addwfc	prodh,w,c
 10086  00314A  6EDA               	movwf	fsr2h,c
 10087  00314C  0E52               	movlw	low _appDataConf
 10088  00314E  6EDE               	movwf	postinc2,c
 10089  003150  0EB3               	movlw	high _appDataConf
 10090  003152  6EDD               	movwf	postdec2,c
 10091                           
 10092                           ; BSR set to: 0
 10093                           ;../app/app_src/application.c: 814:     tx_buffer[buf_id].msgid = msgIDCounter++;
 10094  003154  0100               	movlb	0	; force () banked
 10095  003156  51BA               	movf	cmdSetSink@buf_id& (0+255),w,b
 10096  003158  0D84               	mullw	132
 10097  00315A  0EC5               	movlw	low (_tx_buffer+2)
 10098  00315C  24F3               	addwf	243,w,c
 10099  00315E  6ED9               	movwf	fsr2l,c
 10100  003160  0E0E               	movlw	high (_tx_buffer+2)
 10101  003162  20F4               	addwfc	prodh,w,c
 10102  003164  6EDA               	movwf	fsr2h,c
 10103  003166  0060  F7C3  FFDF   	movff	_msgIDCounter,indf2
 10104                           
 10105                           ; BSR set to: 0
 10106  00316C  0101               	movlb	1	; force () banked
 10107  00316E  2BF0               	incf	_msgIDCounter& (0+255),f,b
 10108                           
 10109                           ; BSR set to: 1
 10110                           ;../app/app_src/application.c: 815:     NWK_DataReq(&tx_buffer[buf_id].nwkDataReq);
 10111  003170  0100               	movlb	0	; force () banked
 10112  003172  51BA               	movf	cmdSetSink@buf_id& (0+255),w,b
 10113  003174  0D84               	mullw	132
 10114  003176  0EC6               	movlw	low (_tx_buffer+3)
 10115  003178  24F3               	addwf	243,w,c
 10116  00317A  0100               	movlb	0	; force () banked
 10117  00317C  6F71               	movwf	NWK_DataReq@req& (0+255),b
 10118  00317E  0E0E               	movlw	high (_tx_buffer+3)
 10119  003180  20F4               	addwfc	prodh,w,c
 10120  003182  6F72               	movwf	(NWK_DataReq@req+1)& (0+255),b
 10121  003184  EC32  F04E         	call	_NWK_DataReq	;wreg free
 10122  003188  0012               	return		;funcret
 10123  00318A                     __end_of_cmdSetSink:
 10124                           	callstack 0
 10125                           
 10126 ;; *************** function _handle_tx_regs *****************
 10127 ;; Defined at:
 10128 ;;		line 2176 in file "../app/app_src/application.c"
 10129 ;; Parameters:    Size  Location     Type
 10130 ;;		None
 10131 ;; Auto vars:     Size  Location     Type
 10132 ;;  buf_id          1   73[BANK0 ] unsigned char 
 10133 ;;  i               1   72[BANK0 ] unsigned char 
 10134 ;;  src_ptr         1   71[BANK0 ] unsigned char 
 10135 ;;  needed_size     1   70[BANK0 ] unsigned char 
 10136 ;; Return value:  Size  Location     Type
 10137 ;;                  1    wreg      void 
 10138 ;; Registers used:
 10139 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10140 ;; Tracked objects:
 10141 ;;		On entry : 3F/1
 10142 ;;		On exit  : 3F/4
 10143 ;;		Unchanged: 0/0
 10144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10146 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10147 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10148 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10149 ;;Total ram usage:       12 bytes
 10150 ;; Hardware stack levels used:    1
 10151 ;; Hardware stack levels required when called:   16
 10152 ;; This function calls:
 10153 ;;		_NWK_DataReq
 10154 ;;		_app_aes_encrypt
 10155 ;;		_compute_option
 10156 ;;		_get_free_tx_buffer
 10157 ;;		_memcpy
 10158 ;;		_memset
 10159 ;;		_needed_packet_length
 10160 ;; This function is called by:
 10161 ;;		_MBRTUStack
 10162 ;; This function uses a non-reentrant model
 10163 ;;
 10164                           
 10165                           	psect	text35
 10166  0037B2                     __ptext35:
 10167                           	callstack 0
 10168  0037B2                     _handle_tx_regs:
 10169                           	callstack 12
 10170                           
 10171                           ;../app/app_src/application.c: 2177:     uint8_t i = 16, src_ptr = TX_WORD1;
 10172                           
 10173                           ;incstack = 0
 10174  0037B2  0E10               	movlw	16
 10175  0037B4  0100               	movlb	0	; force () banked
 10176  0037B6  6FA8               	movwf	handle_tx_regs@i& (0+255),b
 10177  0037B8  0E03               	movlw	3
 10178  0037BA  0100               	movlb	0	; force () banked
 10179  0037BC  6FA7               	movwf	handle_tx_regs@src_ptr& (0+255),b
 10180                           
 10181                           ; BSR set to: 0
 10182                           ;../app/app_src/application.c: 2178:     uint8_t buf_id, needed_size;;../app/app_src/app
      +                          lication.c: 2179:     if(!tx_ctl_mb_regs[TX_CONTROL]){
 10183  0037BE  0104               	movlb	4	; force () banked
 10184  0037C0  5160               	movf	(_tx_ctl_mb_regs+2)& (0+255),w,b
 10185  0037C2  1161               	iorwf	(_tx_ctl_mb_regs+3)& (0+255),w,b
 10186  0037C4  B4D8               	btfsc	status,2,c
 10187  0037C6  0012               	return	
 10188                           
 10189                           ; BSR set to: 4
 10190                           ;../app/app_src/application.c: 2182:     needed_size = needed_packet_length(128 -
 10191  0037C8  0E50               	movlw	80
 10192  0037CA  EC8C  F057         	call	_needed_packet_length
 10193  0037CE  0100               	movlb	0	; force () banked
 10194  0037D0  6FA6               	movwf	handle_tx_regs@needed_size& (0+255),b
 10195                           
 10196                           ; BSR set to: 0
 10197                           ;../app/app_src/application.c: 2184:     if(get_free_tx_buffer(&buf_id)){
 10198  0037D2  0EA9               	movlw	low handle_tx_regs@buf_id
 10199  0037D4  0100               	movlb	0	; force () banked
 10200  0037D6  6F71               	movwf	get_free_tx_buffer@buf_id& (0+255),b
 10201  0037D8  0E00               	movlw	high handle_tx_regs@buf_id
 10202  0037DA  6F72               	movwf	(get_free_tx_buffer@buf_id+1)& (0+255),b
 10203  0037DC  ECFB  F04E         	call	_get_free_tx_buffer	;wreg free
 10204  0037E0  0900               	iorlw	0
 10205  0037E2  B4D8               	btfsc	status,2,c
 10206  0037E4  D15F               	goto	l19328
 10207                           
 10208                           ;../app/app_src/application.c: 2185:         memset(&tx_buffer[buf_id].payload, 0, 128);
 10209  0037E6  0100               	movlb	0	; force () banked
 10210  0037E8  51A9               	movf	handle_tx_regs@buf_id& (0+255),w,b
 10211  0037EA  0D84               	mullw	132
 10212  0037EC  0ED9               	movlw	low (_tx_buffer+22)
 10213  0037EE  24F3               	addwf	243,w,c
 10214  0037F0  0100               	movlb	0	; force () banked
 10215  0037F2  6F71               	movwf	memset@p1& (0+255),b
 10216  0037F4  0E0E               	movlw	high (_tx_buffer+22)
 10217  0037F6  20F4               	addwfc	prodh,w,c
 10218  0037F8  6F72               	movwf	(memset@p1+1)& (0+255),b
 10219  0037FA  0E00               	movlw	0
 10220  0037FC  0100               	movlb	0	; force () banked
 10221  0037FE  6F74               	movwf	(memset@c+1)& (0+255),b
 10222  003800  0E00               	movlw	0
 10223  003802  6F73               	movwf	memset@c& (0+255),b
 10224  003804  0E00               	movlw	0
 10225  003806  0100               	movlb	0	; force () banked
 10226  003808  6F76               	movwf	(memset@n+1)& (0+255),b
 10227  00380A  0E80               	movlw	128
 10228  00380C  6F75               	movwf	memset@n& (0+255),b
 10229  00380E  ECA8  F058         	call	_memset	;wreg free
 10230                           
 10231                           ; BSR set to: 0
 10232                           ;../app/app_src/application.c: 2186:         if(TX_PING == tx_ctl_mb_regs[TX_CONTROL]){
 10233  003812  0E05               	movlw	5
 10234  003814  0104               	movlb	4	; force () banked
 10235  003816  1960               	xorwf	(_tx_ctl_mb_regs+2)& (0+255),w,b
 10236  003818  1161               	iorwf	(_tx_ctl_mb_regs+3)& (0+255),w,b
 10237  00381A  A4D8               	btfss	status,2,c
 10238  00381C  D077               	goto	l19286
 10239                           
 10240                           ; BSR set to: 4
 10241                           ;../app/app_src/application.c: 2187:             memcpy((&tx_buffer[buf_id].payload + 16
      +                          ),
 10242  00381E  0100               	movlb	0	; force () banked
 10243  003820  51A9               	movf	handle_tx_regs@buf_id& (0+255),w,b
 10244  003822  0D84               	mullw	132
 10245  003824  0EE9               	movlw	low (_tx_buffer+38)
 10246  003826  24F3               	addwf	243,w,c
 10247  003828  0100               	movlb	0	; force () banked
 10248  00382A  6F77               	movwf	memcpy@d1& (0+255),b
 10249  00382C  0E0E               	movlw	high (_tx_buffer+38)
 10250  00382E  20F4               	addwfc	prodh,w,c
 10251  003830  6F78               	movwf	(memcpy@d1+1)& (0+255),b
 10252  003832  0EF2               	movlw	low STR_2
 10253  003834  0100               	movlb	0	; force () banked
 10254  003836  6F79               	movwf	memcpy@s1& (0+255),b
 10255  003838  0EFF               	movlw	high STR_2
 10256  00383A  6F7A               	movwf	(memcpy@s1+1)& (0+255),b
 10257  00383C  5179               	movf	memcpy@s1& (0+255),w,b
 10258  00383E  117A               	iorwf	(memcpy@s1+1)& (0+255),w,b
 10259  003840  A4D8               	btfss	status,2,c
 10260  003842  0E00               	movlw	low (__mediumconst shr (0+16))
 10261  003844  6F7B               	movwf	(memcpy@s1+2)& (0+255),b
 10262  003846  0E00               	movlw	0
 10263  003848  0100               	movlb	0	; force () banked
 10264  00384A  6F7D               	movwf	(memcpy@n+1)& (0+255),b
 10265  00384C  0E05               	movlw	5
 10266  00384E  6F7C               	movwf	memcpy@n& (0+255),b
 10267  003850  ECC1  F04F         	call	_memcpy	;wreg free
 10268                           
 10269                           ;../app/app_src/application.c: 2189:         }
 10270  003854  D05F               	goto	u17510
 10271  003856                     l19280:
 10272                           
 10273                           ; BSR set to: 0
 10274                           ;../app/app_src/application.c: 2192:                 tx_buffer[buf_id].payload[i++] = tx
      +                          _ctl_mb_regs[src_ptr] >> 8;
 10275  003856  0100               	movlb	0	; force () banked
 10276  003858  51A9               	movf	handle_tx_regs@buf_id& (0+255),w,b
 10277  00385A  0D84               	mullw	132
 10278  00385C  0EC3               	movlw	low _tx_buffer
 10279  00385E  0100               	movlb	0	; force () banked
 10280  003860  6F9E               	movwf	??_handle_tx_regs& (0+255),b
 10281  003862  0E0E               	movlw	high _tx_buffer
 10282  003864  6F9F               	movwf	(??_handle_tx_regs+1)& (0+255),b
 10283  003866  0E16               	movlw	22
 10284  003868  279E               	addwf	??_handle_tx_regs& (0+255),f,b
 10285  00386A  0E00               	movlw	0
 10286  00386C  239F               	addwfc	(??_handle_tx_regs+1)& (0+255),f,b
 10287  00386E  50F3               	movf	243,w,c
 10288  003870  279E               	addwf	??_handle_tx_regs& (0+255),f,b
 10289  003872  50F4               	movf	244,w,c
 10290  003874  239F               	addwfc	(??_handle_tx_regs+1)& (0+255),f,b
 10291  003876  0100               	movlb	0	; force () banked
 10292  003878  51A8               	movf	handle_tx_regs@i& (0+255),w,b
 10293  00387A  0100               	movlb	0	; force () banked
 10294  00387C  259E               	addwf	??_handle_tx_regs& (0+255),w,b
 10295  00387E  6ED9               	movwf	fsr2l,c
 10296  003880  0100               	movlb	0	; force () banked
 10297  003882  0E00               	movlw	0
 10298  003884  0100               	movlb	0	; force () banked
 10299  003886  219F               	addwfc	(??_handle_tx_regs+1)& (0+255),w,b
 10300  003888  6EDA               	movwf	fsr2h,c
 10301  00388A  0100               	movlb	0	; force () banked
 10302  00388C  51A7               	movf	handle_tx_regs@src_ptr& (0+255),w,b
 10303  00388E  0D02               	mullw	2
 10304  003890  0E5E               	movlw	low _tx_ctl_mb_regs
 10305  003892  24F3               	addwf	243,w,c
 10306  003894  6EE9               	movwf	fsr0l,c
 10307  003896  0E04               	movlw	high _tx_ctl_mb_regs
 10308  003898  20F4               	addwfc	prodh,w,c
 10309  00389A  6EEA               	movwf	fsr0h,c
 10310  00389C  006F FFB8  F0A0    	movff	postinc0,??_handle_tx_regs+2
 10311  0038A2  006F FFB4  F0A1    	movff	postdec0,??_handle_tx_regs+3
 10312  0038A8  C0A1  F0A0         	movff	??_handle_tx_regs+3,??_handle_tx_regs+2
 10313  0038AC  0100               	movlb	0	; force () banked
 10314  0038AE  6BA1               	clrf	(??_handle_tx_regs+3)& (0+255),b
 10315  0038B0  51A0               	movf	(??_handle_tx_regs+2)& (0+255),w,b
 10316  0038B2  6EDF               	movwf	indf2,c
 10317                           
 10318                           ; BSR set to: 0
 10319  0038B4  0100               	movlb	0	; force () banked
 10320  0038B6  2BA8               	incf	handle_tx_regs@i& (0+255),f,b
 10321                           
 10322                           ; BSR set to: 0
 10323                           ;../app/app_src/application.c: 2193:                 tx_buffer[buf_id].payload[i++] = tx
      +                          _ctl_mb_regs[src_ptr++];
 10324  0038B8  0100               	movlb	0	; force () banked
 10325  0038BA  51A7               	movf	handle_tx_regs@src_ptr& (0+255),w,b
 10326  0038BC  0D02               	mullw	2
 10327  0038BE  0E5E               	movlw	low _tx_ctl_mb_regs
 10328  0038C0  24F3               	addwf	243,w,c
 10329  0038C2  6ED9               	movwf	fsr2l,c
 10330  0038C4  0E04               	movlw	high _tx_ctl_mb_regs
 10331  0038C6  20F4               	addwfc	prodh,w,c
 10332  0038C8  6EDA               	movwf	fsr2h,c
 10333  0038CA  0100               	movlb	0	; force () banked
 10334  0038CC  51A9               	movf	handle_tx_regs@buf_id& (0+255),w,b
 10335  0038CE  0D84               	mullw	132
 10336  0038D0  0EC3               	movlw	low _tx_buffer
 10337  0038D2  0100               	movlb	0	; force () banked
 10338  0038D4  6F9E               	movwf	??_handle_tx_regs& (0+255),b
 10339  0038D6  0E0E               	movlw	high _tx_buffer
 10340  0038D8  6F9F               	movwf	(??_handle_tx_regs+1)& (0+255),b
 10341  0038DA  0E16               	movlw	22
 10342  0038DC  279E               	addwf	??_handle_tx_regs& (0+255),f,b
 10343  0038DE  0E00               	movlw	0
 10344  0038E0  239F               	addwfc	(??_handle_tx_regs+1)& (0+255),f,b
 10345  0038E2  50F3               	movf	243,w,c
 10346  0038E4  279E               	addwf	??_handle_tx_regs& (0+255),f,b
 10347  0038E6  50F4               	movf	244,w,c
 10348  0038E8  239F               	addwfc	(??_handle_tx_regs+1)& (0+255),f,b
 10349  0038EA  0100               	movlb	0	; force () banked
 10350  0038EC  51A8               	movf	handle_tx_regs@i& (0+255),w,b
 10351  0038EE  0100               	movlb	0	; force () banked
 10352  0038F0  259E               	addwf	??_handle_tx_regs& (0+255),w,b
 10353  0038F2  6EE9               	movwf	fsr0l,c
 10354  0038F4  0100               	movlb	0	; force () banked
 10355  0038F6  0E00               	movlw	0
 10356  0038F8  0100               	movlb	0	; force () banked
 10357  0038FA  219F               	addwfc	(??_handle_tx_regs+1)& (0+255),w,b
 10358  0038FC  6EEA               	movwf	fsr0h,c
 10359  0038FE  006F FF7F FFEF     	movff	indf2,indf0
 10360  003904  0100               	movlb	0	; force () banked
 10361  003906  2BA7               	incf	handle_tx_regs@src_ptr& (0+255),f,b
 10362  003908  0100               	movlb	0	; force () banked
 10363  00390A  2BA8               	incf	handle_tx_regs@i& (0+255),f,b
 10364  00390C                     l19286:
 10365                           
 10366                           ;../app/app_src/application.c: 2191:             while(i < (128 - 3*16)){
 10367  00390C  0E4F               	movlw	79
 10368  00390E  0100               	movlb	0	; force () banked
 10369  003910  65A8               	cpfsgt	handle_tx_regs@i& (0+255),b
 10370  003912  D7A1               	goto	l19280
 10371  003914                     u17510:
 10372                           
 10373                           ; BSR set to: 0
 10374                           ;../app/app_src/application.c: 2196:         app_aes_encrypt(&tx_buffer[buf_id].payload,
      +                           needed_size - 16);
 10375  003914  0100               	movlb	0	; force () banked
 10376  003916  51A9               	movf	handle_tx_regs@buf_id& (0+255),w,b
 10377  003918  0D84               	mullw	132
 10378  00391A  0ED9               	movlw	low (_tx_buffer+22)
 10379  00391C  24F3               	addwf	243,w,c
 10380  00391E  0100               	movlb	0	; force () banked
 10381  003920  6F98               	movwf	app_aes_encrypt@data& (0+255),b
 10382  003922  0E0E               	movlw	high (_tx_buffer+22)
 10383  003924  20F4               	addwfc	prodh,w,c
 10384  003926  6F99               	movwf	(app_aes_encrypt@data+1)& (0+255),b
 10385  003928  0100               	movlb	0	; force () banked
 10386  00392A  51A6               	movf	handle_tx_regs@needed_size& (0+255),w,b
 10387  00392C  0FF0               	addlw	240
 10388  00392E  0100               	movlb	0	; force () banked
 10389  003930  6F9A               	movwf	app_aes_encrypt@size& (0+255),b
 10390  003932  ECC4  F02F         	call	_app_aes_encrypt	;wreg free
 10391                           
 10392                           ; BSR set to: 0
 10393                           ;../app/app_src/application.c: 2197:         tx_buffer[buf_id].nwkDataReq.dstAddr =
 10394  003936  0E04               	movlw	4
 10395  003938  0104               	movlb	4	; force () banked
 10396  00393A  1960               	xorwf	(_tx_ctl_mb_regs+2)& (0+255),w,b
 10397  00393C  1161               	iorwf	(_tx_ctl_mb_regs+3)& (0+255),w,b
 10398  00393E  B4D8               	btfsc	status,2,c
 10399  003940  D005               	goto	l647
 10400                           
 10401                           ; BSR set to: 4
 10402  003942  C462  F0A2         	movff	_tx_ctl_mb_regs+4,_handle_tx_regs$1240
 10403  003946  C463  F0A3         	movff	_tx_ctl_mb_regs+5,_handle_tx_regs$1240+1
 10404  00394A  D003               	goto	l19294
 10405  00394C                     l647:
 10406                           
 10407                           ; BSR set to: 4
 10408  00394C  0100               	movlb	0	; force () banked
 10409  00394E  69A2               	setf	_handle_tx_regs$1240& (0+255),b
 10410  003950  69A3               	setf	(_handle_tx_regs$1240+1)& (0+255),b
 10411  003952                     l19294:
 10412  003952  0100               	movlb	0	; force () banked
 10413  003954  51A9               	movf	handle_tx_regs@buf_id& (0+255),w,b
 10414  003956  0D84               	mullw	132
 10415  003958  0ECB               	movlw	low (_tx_buffer+8)
 10416  00395A  24F3               	addwf	243,w,c
 10417  00395C  6ED9               	movwf	fsr2l,c
 10418  00395E  0E0E               	movlw	high (_tx_buffer+8)
 10419  003960  20F4               	addwfc	prodh,w,c
 10420  003962  6EDA               	movwf	fsr2h,c
 10421  003964  0060  F28B  FFDE   	movff	_handle_tx_regs$1240,postinc2
 10422  00396A  0060  F28F  FFDD   	movff	_handle_tx_regs$1240+1,postdec2
 10423                           
 10424                           ; BSR set to: 0
 10425                           ;../app/app_src/application.c: 2200:         tx_buffer[buf_id].nwkDataReq.dstEndpoint =
 10426  003970  0E05               	movlw	5
 10427  003972  0104               	movlb	4	; force () banked
 10428  003974  1960               	xorwf	(_tx_ctl_mb_regs+2)& (0+255),w,b
 10429  003976  1161               	iorwf	(_tx_ctl_mb_regs+3)& (0+255),w,b
 10430  003978  B4D8               	btfsc	status,2,c
 10431  00397A  D002               	goto	l19300
 10432                           
 10433                           ; BSR set to: 4
 10434  00397C  0E01               	movlw	1
 10435  00397E  D001               	goto	L1
 10436  003980                     l19300:
 10437                           
 10438                           ; BSR set to: 4
 10439  003980  0E02               	movlw	2
 10440  003982                     L1:
 10441  003982  0100               	movlb	0	; force () banked
 10442  003984  6FA4               	movwf	_handle_tx_regs$1241& (0+255),b
 10443                           
 10444                           ; BSR set to: 0
 10445  003986  0100               	movlb	0	; force () banked
 10446  003988  51A9               	movf	handle_tx_regs@buf_id& (0+255),w,b
 10447  00398A  0D84               	mullw	132
 10448  00398C  0ECD               	movlw	low (_tx_buffer+10)
 10449  00398E  24F3               	addwf	243,w,c
 10450  003990  6ED9               	movwf	fsr2l,c
 10451  003992  0E0E               	movlw	high (_tx_buffer+10)
 10452  003994  20F4               	addwfc	prodh,w,c
 10453  003996  6EDA               	movwf	fsr2h,c
 10454  003998  0060  F293  FFDF   	movff	_handle_tx_regs$1241,indf2
 10455                           
 10456                           ; BSR set to: 0
 10457                           ;../app/app_src/application.c: 2202:         tx_buffer[buf_id].nwkDataReq.srcEndpoint =
 10458  00399E  0E05               	movlw	5
 10459  0039A0  0104               	movlb	4	; force () banked
 10460  0039A2  1960               	xorwf	(_tx_ctl_mb_regs+2)& (0+255),w,b
 10461  0039A4  1161               	iorwf	(_tx_ctl_mb_regs+3)& (0+255),w,b
 10462  0039A6  B4D8               	btfsc	status,2,c
 10463  0039A8  D002               	goto	l19308
 10464                           
 10465                           ; BSR set to: 4
 10466  0039AA  0E01               	movlw	1
 10467  0039AC  D001               	goto	L2
 10468  0039AE                     l19308:
 10469                           
 10470                           ; BSR set to: 4
 10471  0039AE  0E02               	movlw	2
 10472  0039B0                     L2:
 10473  0039B0  0100               	movlb	0	; force () banked
 10474  0039B2  6FA5               	movwf	_handle_tx_regs$1242& (0+255),b
 10475                           
 10476                           ; BSR set to: 0
 10477  0039B4  0100               	movlb	0	; force () banked
 10478  0039B6  51A9               	movf	handle_tx_regs@buf_id& (0+255),w,b
 10479  0039B8  0D84               	mullw	132
 10480  0039BA  0ECE               	movlw	low (_tx_buffer+11)
 10481  0039BC  24F3               	addwf	243,w,c
 10482  0039BE  6ED9               	movwf	fsr2l,c
 10483  0039C0  0E0E               	movlw	high (_tx_buffer+11)
 10484  0039C2  20F4               	addwfc	prodh,w,c
 10485  0039C4  6EDA               	movwf	fsr2h,c
 10486  0039C6  0060  F297  FFDF   	movff	_handle_tx_regs$1242,indf2
 10487                           
 10488                           ; BSR set to: 0
 10489                           ;../app/app_src/application.c: 2204:         tx_buffer[buf_id].nwkDataReq.options =
 10490  0039CC  0100               	movlb	0	; force () banked
 10491  0039CE  51A9               	movf	handle_tx_regs@buf_id& (0+255),w,b
 10492  0039D0  0D84               	mullw	132
 10493  0039D2  0ECF               	movlw	low (_tx_buffer+12)
 10494  0039D4  24F3               	addwf	243,w,c
 10495  0039D6  6ED9               	movwf	fsr2l,c
 10496  0039D8  0E0E               	movlw	high (_tx_buffer+12)
 10497  0039DA  20F4               	addwfc	prodh,w,c
 10498  0039DC  6EDA               	movwf	fsr2h,c
 10499  0039DE  C460  F071         	movff	_tx_ctl_mb_regs+2,compute_option@tx_ctl
 10500  0039E2  C461  F072         	movff	_tx_ctl_mb_regs+3,compute_option@tx_ctl+1
 10501  0039E6  EC53  F056         	call	_compute_option	;wreg free
 10502  0039EA  6EDF               	movwf	indf2,c
 10503                           
 10504                           ; BSR set to: 0
 10505                           ;../app/app_src/application.c: 2206:         tx_buffer[buf_id].nwkDataReq.data = &tx_buf
      +                          fer[buf_id].payload;
 10506  0039EC  0100               	movlb	0	; force () banked
 10507  0039EE  51A9               	movf	handle_tx_regs@buf_id& (0+255),w,b
 10508  0039F0  0D84               	mullw	132
 10509  0039F2  0ED9               	movlw	low (_tx_buffer+22)
 10510  0039F4  24F3               	addwf	243,w,c
 10511  0039F6  0100               	movlb	0	; force () banked
 10512  0039F8  6F9E               	movwf	??_handle_tx_regs& (0+255),b
 10513  0039FA  0E0E               	movlw	high (_tx_buffer+22)
 10514  0039FC  20F4               	addwfc	prodh,w,c
 10515  0039FE  6F9F               	movwf	(??_handle_tx_regs+1)& (0+255),b
 10516  003A00  0100               	movlb	0	; force () banked
 10517  003A02  51A9               	movf	handle_tx_regs@buf_id& (0+255),w,b
 10518  003A04  0D84               	mullw	132
 10519  003A06  0ED2               	movlw	low (_tx_buffer+15)
 10520  003A08  24F3               	addwf	243,w,c
 10521  003A0A  6ED9               	movwf	fsr2l,c
 10522  003A0C  0E0E               	movlw	high (_tx_buffer+15)
 10523  003A0E  20F4               	addwfc	prodh,w,c
 10524  003A10  6EDA               	movwf	fsr2h,c
 10525  003A12  0060  F27B  FFDE   	movff	??_handle_tx_regs,postinc2
 10526  003A18  0060  F27F  FFDD   	movff	??_handle_tx_regs+1,postdec2
 10527                           
 10528                           ; BSR set to: 0
 10529                           ;../app/app_src/application.c: 2207:         tx_buffer[buf_id].nwkDataReq.size = needed_
      +                          size;
 10530  003A1E  0100               	movlb	0	; force () banked
 10531  003A20  51A9               	movf	handle_tx_regs@buf_id& (0+255),w,b
 10532  003A22  0D84               	mullw	132
 10533  003A24  0ED4               	movlw	low (_tx_buffer+17)
 10534  003A26  24F3               	addwf	243,w,c
 10535  003A28  6ED9               	movwf	fsr2l,c
 10536  003A2A  0E0E               	movlw	high (_tx_buffer+17)
 10537  003A2C  20F4               	addwfc	prodh,w,c
 10538  003A2E  6EDA               	movwf	fsr2h,c
 10539  003A30  0060  F29B  FFDF   	movff	handle_tx_regs@needed_size,indf2
 10540                           
 10541                           ; BSR set to: 0
 10542                           ;../app/app_src/application.c: 2208:         tx_buffer[buf_id].nwkDataReq.confirm = appD
      +                          ataConf;
 10543  003A36  0100               	movlb	0	; force () banked
 10544  003A38  51A9               	movf	handle_tx_regs@buf_id& (0+255),w,b
 10545  003A3A  0D84               	mullw	132
 10546  003A3C  0ED5               	movlw	low (_tx_buffer+18)
 10547  003A3E  24F3               	addwf	243,w,c
 10548  003A40  6ED9               	movwf	fsr2l,c
 10549  003A42  0E0E               	movlw	high (_tx_buffer+18)
 10550  003A44  20F4               	addwfc	prodh,w,c
 10551  003A46  6EDA               	movwf	fsr2h,c
 10552  003A48  0E52               	movlw	low _appDataConf
 10553  003A4A  6EDE               	movwf	postinc2,c
 10554  003A4C  0EB3               	movlw	high _appDataConf
 10555  003A4E  6EDD               	movwf	postdec2,c
 10556                           
 10557                           ; BSR set to: 0
 10558                           ;../app/app_src/application.c: 2209:         tx_buffer[buf_id].msgid = msgIDCounter++;
 10559  003A50  0100               	movlb	0	; force () banked
 10560  003A52  51A9               	movf	handle_tx_regs@buf_id& (0+255),w,b
 10561  003A54  0D84               	mullw	132
 10562  003A56  0EC5               	movlw	low (_tx_buffer+2)
 10563  003A58  24F3               	addwf	243,w,c
 10564  003A5A  6ED9               	movwf	fsr2l,c
 10565  003A5C  0E0E               	movlw	high (_tx_buffer+2)
 10566  003A5E  20F4               	addwfc	prodh,w,c
 10567  003A60  6EDA               	movwf	fsr2h,c
 10568  003A62  0060  F7C3  FFDF   	movff	_msgIDCounter,indf2
 10569                           
 10570                           ; BSR set to: 0
 10571  003A68  0101               	movlb	1	; force () banked
 10572  003A6A  2BF0               	incf	_msgIDCounter& (0+255),f,b
 10573                           
 10574                           ; BSR set to: 1
 10575                           ;../app/app_src/application.c: 2210:         NWK_DataReq(&tx_buffer[buf_id].nwkDataReq);
 10576  003A6C  0100               	movlb	0	; force () banked
 10577  003A6E  51A9               	movf	handle_tx_regs@buf_id& (0+255),w,b
 10578  003A70  0D84               	mullw	132
 10579  003A72  0EC6               	movlw	low (_tx_buffer+3)
 10580  003A74  24F3               	addwf	243,w,c
 10581  003A76  0100               	movlb	0	; force () banked
 10582  003A78  6F71               	movwf	NWK_DataReq@req& (0+255),b
 10583  003A7A  0E0E               	movlw	high (_tx_buffer+3)
 10584  003A7C  20F4               	addwfc	prodh,w,c
 10585  003A7E  6F72               	movwf	(NWK_DataReq@req+1)& (0+255),b
 10586  003A80  EC32  F04E         	call	_NWK_DataReq	;wreg free
 10587                           
 10588                           ; BSR set to: 1
 10589                           ;../app/app_src/application.c: 2212:         tx_ctl_mb_regs[RO_TX_MSG_ID] = tx_buffer[bu
      +                          f_id].msgid;
 10590  003A84  0100               	movlb	0	; force () banked
 10591  003A86  51A9               	movf	handle_tx_regs@buf_id& (0+255),w,b
 10592  003A88  0D84               	mullw	132
 10593  003A8A  0EC5               	movlw	low (_tx_buffer+2)
 10594  003A8C  24F3               	addwf	243,w,c
 10595  003A8E  6ED9               	movwf	fsr2l,c
 10596  003A90  0E0E               	movlw	high (_tx_buffer+2)
 10597  003A92  20F4               	addwfc	prodh,w,c
 10598  003A94  6EDA               	movwf	fsr2h,c
 10599  003A96  50DF               	movf	indf2,w,c
 10600  003A98  0100               	movlb	0	; force () banked
 10601  003A9A  6F9E               	movwf	??_handle_tx_regs& (0+255),b
 10602  003A9C  519E               	movf	??_handle_tx_regs& (0+255),w,b
 10603  003A9E  0104               	movlb	4	; force () banked
 10604  003AA0  6F74               	movwf	(_tx_ctl_mb_regs+22)& (0+255),b
 10605  003AA2  6B75               	clrf	(_tx_ctl_mb_regs+23)& (0+255),b
 10606  003AA4                     l19328:
 10607                           
 10608                           ;../app/app_src/application.c: 2214:     tx_ctl_mb_regs[TX_CONTROL] = 0;
 10609  003AA4  0E00               	movlw	0
 10610  003AA6  0104               	movlb	4	; force () banked
 10611  003AA8  6F61               	movwf	(_tx_ctl_mb_regs+3)& (0+255),b
 10612  003AAA  0E00               	movlw	0
 10613  003AAC  6F60               	movwf	(_tx_ctl_mb_regs+2)& (0+255),b
 10614                           
 10615                           ; BSR set to: 4
 10616  003AAE  0012               	return		;funcret
 10617  003AB0                     __end_of_handle_tx_regs:
 10618                           	callstack 0
 10619                           
 10620 ;; *************** function _needed_packet_length *****************
 10621 ;; Defined at:
 10622 ;;		line 160 in file "../app/app_src/application.c"
 10623 ;; Parameters:    Size  Location     Type
 10624 ;;  data_len        1    wreg     unsigned char 
 10625 ;; Auto vars:     Size  Location     Type
 10626 ;;  data_len        1   20[BANK0 ] unsigned char 
 10627 ;;  rc              1   19[BANK0 ] unsigned char 
 10628 ;;  i               1   18[BANK0 ] unsigned char 
 10629 ;; Return value:  Size  Location     Type
 10630 ;;                  1    wreg      unsigned char 
 10631 ;; Registers used:
 10632 ;;		wreg, status,2, status,0
 10633 ;; Tracked objects:
 10634 ;;		On entry : 3B/0
 10635 ;;		On exit  : 3F/0
 10636 ;;		Unchanged: 0/0
 10637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10639 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10640 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10641 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10642 ;;Total ram usage:        4 bytes
 10643 ;; Hardware stack levels used:    1
 10644 ;; Hardware stack levels required when called:   11
 10645 ;; This function calls:
 10646 ;;		Nothing
 10647 ;; This function is called by:
 10648 ;;		_cmdSetSink
 10649 ;;		_handle_tx_regs
 10650 ;; This function uses a non-reentrant model
 10651 ;;
 10652                           
 10653                           	psect	text36
 10654  00AF18                     __ptext36:
 10655                           	callstack 0
 10656  00AF18                     _needed_packet_length:
 10657                           	callstack 15
 10658                           
 10659                           ; BSR set to: 4
 10660                           ;incstack = 0
 10661                           ;needed_packet_length@data_len stored from wreg
 10662  00AF18  0100               	movlb	0	; force () banked
 10663  00AF1A  6F74               	movwf	needed_packet_length@data_len& (0+255),b
 10664                           
 10665                           ;../app/app_src/application.c: 161:     uint8_t rc = 0;
 10666  00AF1C  0E00               	movlw	0
 10667  00AF1E  0100               	movlb	0	; force () banked
 10668  00AF20  6F73               	movwf	needed_packet_length@rc& (0+255),b
 10669                           
 10670                           ; BSR set to: 0
 10671                           ;../app/app_src/application.c: 162:     uint8_t i = data_len % 16;
 10672  00AF22  0100               	movlb	0	; force () banked
 10673  00AF24  5174               	movf	needed_packet_length@data_len& (0+255),w,b
 10674  00AF26  0B0F               	andlw	15
 10675  00AF28  0100               	movlb	0	; force () banked
 10676  00AF2A  6F72               	movwf	needed_packet_length@i& (0+255),b
 10677                           
 10678                           ; BSR set to: 0
 10679                           ;../app/app_src/application.c: 163:     if(i){
 10680  00AF2C  0100               	movlb	0	; force () banked
 10681  00AF2E  5172               	movf	needed_packet_length@i& (0+255),w,b
 10682  00AF30  B4D8               	btfsc	status,2,c
 10683  00AF32  D00A               	goto	l13184
 10684                           
 10685                           ; BSR set to: 0
 10686                           ;../app/app_src/application.c: 164:         rc = 16 + data_len +
 10687  00AF34  C074  F071         	movff	needed_packet_length@data_len,??_needed_packet_length
 10688  00AF38  0E0F               	movlw	15
 10689  00AF3A  0100               	movlb	0	; force () banked
 10690  00AF3C  1771               	andwf	??_needed_packet_length& (0+255),f,b
 10691  00AF3E  5171               	movf	??_needed_packet_length& (0+255),w,b
 10692  00AF40  0100               	movlb	0	; force () banked
 10693  00AF42  5D74               	subwf	needed_packet_length@data_len& (0+255),w,b
 10694  00AF44  0F20               	addlw	32
 10695  00AF46  D003               	goto	L3
 10696  00AF48                     l13184:
 10697                           
 10698                           ; BSR set to: 0
 10699                           ;../app/app_src/application.c: 168:         rc = 16 + data_len;
 10700  00AF48  0100               	movlb	0	; force () banked
 10701  00AF4A  5174               	movf	needed_packet_length@data_len& (0+255),w,b
 10702  00AF4C  0F10               	addlw	16
 10703  00AF4E                     L3:
 10704  00AF4E  0100               	movlb	0	; force () banked
 10705  00AF50  6F73               	movwf	needed_packet_length@rc& (0+255),b
 10706                           
 10707                           ; BSR set to: 0
 10708                           ;../app/app_src/application.c: 170:     return (rc);
 10709  00AF52  0100               	movlb	0	; force () banked
 10710  00AF54  5173               	movf	needed_packet_length@rc& (0+255),w,b
 10711                           
 10712                           ; BSR set to: 0
 10713  00AF56  0012               	return		;funcret
 10714  00AF58                     __end_of_needed_packet_length:
 10715                           	callstack 0
 10716                           
 10717 ;; *************** function _get_free_tx_buffer *****************
 10718 ;; Defined at:
 10719 ;;		line 259 in file "../app/app_src/application.c"
 10720 ;; Parameters:    Size  Location     Type
 10721 ;;  buf_id          2   17[BANK0 ] PTR unsigned char 
 10722 ;;		 -> handle_tx_regs@buf_id(1), cmdSetSink@buf_id(1), 
 10723 ;; Auto vars:     Size  Location     Type
 10724 ;;		None
 10725 ;; Return value:  Size  Location     Type
 10726 ;;                  1    wreg      _Bool 
 10727 ;; Registers used:
 10728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10729 ;; Tracked objects:
 10730 ;;		On entry : 3F/0
 10731 ;;		On exit  : 0/0
 10732 ;;		Unchanged: 0/0
 10733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10736 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10737 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10738 ;;Total ram usage:        3 bytes
 10739 ;; Hardware stack levels used:    1
 10740 ;; Hardware stack levels required when called:   11
 10741 ;; This function calls:
 10742 ;;		Nothing
 10743 ;; This function is called by:
 10744 ;;		_cmdSetSink
 10745 ;;		_handle_tx_regs
 10746 ;; This function uses a non-reentrant model
 10747 ;;
 10748                           
 10749                           	psect	text37
 10750  009DF6                     __ptext37:
 10751                           	callstack 0
 10752  009DF6                     _get_free_tx_buffer:
 10753                           	callstack 15
 10754                           
 10755                           ;../app/app_src/application.c: 260:     *buf_id = 0;
 10756                           
 10757                           ; BSR set to: 0
 10758                           ;incstack = 0
 10759  009DF6  0060  F1C7  FFD9   	movff	get_free_tx_buffer@buf_id,fsr2l
 10760  009DFC  0060  F1CB  FFDA   	movff	get_free_tx_buffer@buf_id+1,fsr2h
 10761  009E02  0E00               	movlw	0
 10762  009E04  6EDF               	movwf	indf2,c
 10763                           
 10764                           ;../app/app_src/application.c: 261:     while(*buf_id < 2){
 10765  009E06  D02E               	goto	l13212
 10766  009E08                     l13202:
 10767                           
 10768                           ;../app/app_src/application.c: 262:         if(tx_buffer[*buf_id].free){
 10769  009E08  0060  F1C7  FFD9   	movff	get_free_tx_buffer@buf_id,fsr2l
 10770  009E0E  0060  F1CB  FFDA   	movff	get_free_tx_buffer@buf_id+1,fsr2h
 10771  009E14  50DF               	movf	indf2,w,c
 10772  009E16  0100               	movlb	0	; force () banked
 10773  009E18  6F73               	movwf	??_get_free_tx_buffer& (0+255),b
 10774  009E1A  5173               	movf	??_get_free_tx_buffer& (0+255),w,b
 10775  009E1C  0D84               	mullw	132
 10776  009E1E  0EC3               	movlw	low _tx_buffer
 10777  009E20  24F3               	addwf	243,w,c
 10778  009E22  6ED9               	movwf	fsr2l,c
 10779  009E24  0E0E               	movlw	high _tx_buffer
 10780  009E26  20F4               	addwfc	prodh,w,c
 10781  009E28  6EDA               	movwf	fsr2h,c
 10782  009E2A  A4DF               	btfss	indf2,2,c
 10783  009E2C  D014               	goto	l13210
 10784                           
 10785                           ; BSR set to: 0
 10786                           ;../app/app_src/application.c: 263:             tx_buffer[*buf_id].free = 0;
 10787  009E2E  0060  F1C7  FFD9   	movff	get_free_tx_buffer@buf_id,fsr2l
 10788  009E34  0060  F1CB  FFDA   	movff	get_free_tx_buffer@buf_id+1,fsr2h
 10789  009E3A  50DF               	movf	indf2,w,c
 10790  009E3C  0100               	movlb	0	; force () banked
 10791  009E3E  6F73               	movwf	??_get_free_tx_buffer& (0+255),b
 10792  009E40  5173               	movf	??_get_free_tx_buffer& (0+255),w,b
 10793  009E42  0D84               	mullw	132
 10794  009E44  0EC3               	movlw	low _tx_buffer
 10795  009E46  24F3               	addwf	243,w,c
 10796  009E48  6ED9               	movwf	fsr2l,c
 10797  009E4A  0E0E               	movlw	high _tx_buffer
 10798  009E4C  20F4               	addwfc	prodh,w,c
 10799  009E4E  6EDA               	movwf	fsr2h,c
 10800  009E50  94DF               	bcf	indf2,2,c
 10801                           
 10802                           ; BSR set to: 0
 10803                           ;../app/app_src/application.c: 264:             return 1;
 10804  009E52  0E01               	movlw	1
 10805  009E54  0012               	return	
 10806  009E56                     l13210:
 10807                           
 10808                           ; BSR set to: 0
 10809                           ;../app/app_src/application.c: 266:         (*buf_id)++;
 10810  009E56  0060  F1C7  FFD9   	movff	get_free_tx_buffer@buf_id,fsr2l
 10811  009E5C  0060  F1CB  FFDA   	movff	get_free_tx_buffer@buf_id+1,fsr2h
 10812  009E62  2ADF               	incf	indf2,f,c
 10813  009E64                     l13212:
 10814                           
 10815                           ;../app/app_src/application.c: 261:     while(*buf_id < 2){
 10816  009E64  0060  F1C7  FFD9   	movff	get_free_tx_buffer@buf_id,fsr2l
 10817  009E6A  0060  F1CB  FFDA   	movff	get_free_tx_buffer@buf_id+1,fsr2h
 10818  009E70  0E01               	movlw	1
 10819  009E72  64DF               	cpfsgt	indf2,c
 10820  009E74  D7C9               	goto	l13202
 10821                           
 10822                           ;../app/app_src/application.c: 268:     return 0;
 10823  009E76  0E00               	movlw	0
 10824  009E78  0012               	return		;funcret
 10825  009E7A                     __end_of_get_free_tx_buffer:
 10826                           	callstack 0
 10827                           
 10828 ;; *************** function _compute_option *****************
 10829 ;; Defined at:
 10830 ;;		line 1978 in file "../app/app_src/application.c"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;  tx_ctl          2   17[BANK0 ] unsigned int 
 10833 ;; Auto vars:     Size  Location     Type
 10834 ;;  options         1   21[BANK0 ] unsigned char 
 10835 ;; Return value:  Size  Location     Type
 10836 ;;                  1    wreg      unsigned char 
 10837 ;; Registers used:
 10838 ;;		wreg, status,2, status,0
 10839 ;; Tracked objects:
 10840 ;;		On entry : 3F/0
 10841 ;;		On exit  : 3F/0
 10842 ;;		Unchanged: 0/0
 10843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10844 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10845 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10846 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10847 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10848 ;;Total ram usage:        5 bytes
 10849 ;; Hardware stack levels used:    1
 10850 ;; Hardware stack levels required when called:   11
 10851 ;; This function calls:
 10852 ;;		Nothing
 10853 ;; This function is called by:
 10854 ;;		_handle_tx_regs
 10855 ;; This function uses a non-reentrant model
 10856 ;;
 10857                           
 10858                           	psect	text38
 10859  00ACA6                     __ptext38:
 10860                           	callstack 0
 10861  00ACA6                     _compute_option:
 10862                           	callstack 16
 10863                           
 10864                           ;../app/app_src/application.c: 1979:     uint8_t options;;../app/app_src/application.c: 
      +                          1980:     switch(tx_ctl){
 10865                           
 10866                           ;incstack = 0
 10867  00ACA6  D008               	goto	l14300
 10868  00ACA8                     l14294:
 10869                           
 10870                           ; BSR set to: 0
 10871                           ;../app/app_src/application.c: 1983:             options = 0; break;
 10872  00ACA8  0E00               	movlw	0
 10873  00ACAA  D003               	goto	L5
 10874  00ACAC                     l14296:
 10875                           
 10876                           ; BSR set to: 0
 10877                           ;../app/app_src/application.c: 1985:             options = NWK_OPT_MULTICAST; break;
 10878  00ACAC  0E10               	movlw	16
 10879  00ACAE  D001               	goto	L5
 10880  00ACB0                     l14298:
 10881                           
 10882                           ; BSR set to: 0
 10883                           ;../app/app_src/application.c: 1989:             options = NWK_OPT_ACK_REQUEST;
 10884  00ACB0  0E01               	movlw	1
 10885  00ACB2                     L5:
 10886  00ACB2  0100               	movlb	0	; force () banked
 10887  00ACB4  6F75               	movwf	compute_option@options& (0+255),b
 10888                           
 10889                           ;../app/app_src/application.c: 1990:     }
 10890  00ACB6  D018               	goto	l14302
 10891  00ACB8                     l14300:
 10892  00ACB8  C071  F073         	movff	compute_option@tx_ctl,??_compute_option
 10893  00ACBC  C072  F074         	movff	compute_option@tx_ctl+1,??_compute_option+1
 10894                           
 10895                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10896                           ; Switch size 1, requested type "simple"
 10897                           ; Number of cases is 1, Range of values is 0 to 0
 10898                           ; switch strategies available:
 10899                           ; Name         Instructions Cycles
 10900                           ; simple_byte            4     3 (average)
 10901                           ;	Chosen strategy is simple_byte
 10902  00ACC0  0100               	movlb	0	; force () banked
 10903  00ACC2  5174               	movf	(??_compute_option+1)& (0+255),w,b
 10904  00ACC4  0A00               	xorlw	0	; case 0
 10905  00ACC6  A4D8               	btfss	status,2,c
 10906  00ACC8  D7F3               	goto	l14298
 10907                           
 10908                           ; BSR set to: 0
 10909                           ; Switch size 1, requested type "simple"
 10910                           ; Number of cases is 5, Range of values is 1 to 5
 10911                           ; switch strategies available:
 10912                           ; Name         Instructions Cycles
 10913                           ; simple_byte           16     9 (average)
 10914                           ;	Chosen strategy is simple_byte
 10915  00ACCA  5173               	movf	??_compute_option& (0+255),w,b
 10916  00ACCC  0A01               	xorlw	1	; case 1
 10917  00ACCE  B4D8               	btfsc	status,2,c
 10918  00ACD0  D7EF               	goto	l14298
 10919  00ACD2  0A03               	xorlw	3	; case 2
 10920  00ACD4  B4D8               	btfsc	status,2,c
 10921  00ACD6  D7E8               	goto	l14294
 10922  00ACD8  0A01               	xorlw	1	; case 3
 10923  00ACDA  B4D8               	btfsc	status,2,c
 10924  00ACDC  D7E7               	goto	l14296
 10925  00ACDE  0A07               	xorlw	7	; case 4
 10926  00ACE0  B4D8               	btfsc	status,2,c
 10927  00ACE2  D7E2               	goto	l14294
 10928  00ACE4  0A01               	xorlw	1	; case 5
 10929  00ACE6  D7E4               	goto	l14298
 10930  00ACE8                     l14302:
 10931                           
 10932                           ; BSR set to: 0
 10933                           ;../app/app_src/application.c: 1991:     return options;
 10934  00ACE8  0100               	movlb	0	; force () banked
 10935  00ACEA  5175               	movf	compute_option@options& (0+255),w,b
 10936                           
 10937                           ; BSR set to: 0
 10938  00ACEC  0012               	return		;funcret
 10939  00ACEE                     __end_of_compute_option:
 10940                           	callstack 0
 10941                           
 10942 ;; *************** function _app_aes_encrypt *****************
 10943 ;; Defined at:
 10944 ;;		line 116 in file "../app/app_src/application.c"
 10945 ;; Parameters:    Size  Location     Type
 10946 ;;  data            2   56[BANK0 ] PTR unsigned char 
 10947 ;;		 -> tx_buffer.payload(110), tx_buffer(264), 
 10948 ;;  size            1   58[BANK0 ] unsigned char 
 10949 ;; Auto vars:     Size  Location     Type
 10950 ;;  random          2   16[BANK1 ] unsigned int 
 10951 ;;  i               1   20[BANK1 ] unsigned char 
 10952 ;;  ctx           192   21[BANK1 ] struct AES_ctx
 10953 ;;  iv             16    0[BANK1 ] unsigned char [16]
 10954 ;;  apphdr          2   18[BANK1 ] PTR struct app_header_t
 10955 ;;		 -> tx_buffer.payload(110), tx_buffer(264), 
 10956 ;; Return value:  Size  Location     Type
 10957 ;;                  1    wreg      void 
 10958 ;; Registers used:
 10959 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10960 ;; Tracked objects:
 10961 ;;		On entry : 3F/0
 10962 ;;		On exit  : 3F/0
 10963 ;;		Unchanged: 0/0
 10964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10965 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10966 ;;      Locals:         0       0     213       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10967 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10968 ;;      Totals:         0       6     213       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10969 ;;Total ram usage:      219 bytes
 10970 ;; Hardware stack levels used:    1
 10971 ;; Hardware stack levels required when called:   15
 10972 ;; This function calls:
 10973 ;;		_AES_CBC_encrypt_buffer
 10974 ;;		_AES_init_ctx_iv
 10975 ;;		_crc16_app
 10976 ;;		_memcpy
 10977 ;;		_rand
 10978 ;; This function is called by:
 10979 ;;		_cmdSetSink
 10980 ;;		_handle_tx_regs
 10981 ;; This function uses a non-reentrant model
 10982 ;;
 10983                           
 10984                           	psect	text39
 10985  005F88                     __ptext39:
 10986                           	callstack 0
 10987  005F88                     _app_aes_encrypt:
 10988                           	callstack 11
 10989                           
 10990                           ;../app/app_src/application.c: 117:     struct AES_ctx ctx;;../app/app_src/application.c
      +                          : 118:     struct app_header_t *apphdr = (struct app_header_t*)data;
 10991                           
 10992                           ; BSR set to: 0
 10993                           ;incstack = 0
 10994  005F88  C098  F112         	movff	app_aes_encrypt@data,app_aes_encrypt@apphdr
 10995  005F8C  C099  F113         	movff	app_aes_encrypt@data+1,app_aes_encrypt@apphdr+1
 10996                           
 10997                           ;../app/app_src/application.c: 119:     uint8_t iv[16];;../app/app_src/application.c: 12
      +                          0:     apphdr->iv_seed = rand();
 10998  005F90  EC27  F053         	call	_rand	;wreg free
 10999  005F94  0060  F44B  FFD9   	movff	app_aes_encrypt@apphdr,fsr2l
 11000  005F9A  0060  F44F  FFDA   	movff	app_aes_encrypt@apphdr+1,fsr2h
 11001  005FA0  0100               	movlb	0	; force () banked
 11002  005FA2  0060  F1F7  FFDE   	movff	?_rand,postinc2
 11003  005FA8  0060  F1FB  FFDD   	movff	?_rand+1,postdec2
 11004                           
 11005                           ; BSR set to: 0
 11006                           ;../app/app_src/application.c: 121:     apphdr->crc16 = crc16_app((data + 16), size, 0);
 11007  005FAE  0E10               	movlw	16
 11008  005FB0  0100               	movlb	0	; force () banked
 11009  005FB2  2598               	addwf	app_aes_encrypt@data& (0+255),w,b
 11010  005FB4  0100               	movlb	0	; force () banked
 11011  005FB6  6F82               	movwf	crc16_app@dptr& (0+255),b
 11012  005FB8  0E00               	movlw	0
 11013  005FBA  0100               	movlb	0	; force () banked
 11014  005FBC  2199               	addwfc	(app_aes_encrypt@data+1)& (0+255),w,b
 11015  005FBE  0100               	movlb	0	; force () banked
 11016  005FC0  6F83               	movwf	(crc16_app@dptr+1)& (0+255),b
 11017  005FC2  C09A  F084         	movff	app_aes_encrypt@size,crc16_app@len
 11018  005FC6  0100               	movlb	0	; force () banked
 11019  005FC8  6B85               	clrf	(crc16_app@len+1)& (0+255),b
 11020  005FCA  0E00               	movlw	0
 11021  005FCC  0100               	movlb	0	; force () banked
 11022  005FCE  6F87               	movwf	(crc16_app@seed+1)& (0+255),b
 11023  005FD0  0E00               	movlw	0
 11024  005FD2  6F86               	movwf	crc16_app@seed& (0+255),b
 11025  005FD4  ECD3  F04C         	call	_crc16_app	;wreg free
 11026  005FD8  0101               	movlb	1	; force () banked
 11027  005FDA  EE20 F002          	lfsr	2,2
 11028  005FDE  5112               	movf	app_aes_encrypt@apphdr& (0+255),w,b
 11029  005FE0  26D9               	addwf	fsr2l,f,c
 11030  005FE2  5113               	movf	(app_aes_encrypt@apphdr+1)& (0+255),w,b
 11031  005FE4  22DA               	addwfc	fsr2h,f,c
 11032  005FE6  0100               	movlb	0	; force () banked
 11033  005FE8  0060  F20B  FFDE   	movff	?_crc16_app,postinc2
 11034  005FEE  0060  F20F  FFDD   	movff	?_crc16_app+1,postdec2
 11035                           
 11036                           ; BSR set to: 0
 11037                           ;../app/app_src/application.c: 123:     for(uint8_t i = 0; i < 8; i++){
 11038  005FF4  0E00               	movlw	0
 11039  005FF6  0101               	movlb	1	; force () banked
 11040  005FF8  6F14               	movwf	app_aes_encrypt@i& (0+255),b
 11041  005FFA  D03E               	goto	l18370
 11042  005FFC                     l18364:
 11043                           
 11044                           ; BSR set to: 1
 11045                           ;../app/app_src/application.c: 124:         uint16_t random = apphdr->iv_seed >> i;
 11046  005FFC  C114  F09B         	movff	app_aes_encrypt@i,??_app_aes_encrypt
 11047  006000  0060  F44B  FFD9   	movff	app_aes_encrypt@apphdr,fsr2l
 11048  006006  0060  F44F  FFDA   	movff	app_aes_encrypt@apphdr+1,fsr2h
 11049  00600C  006F FF78  F09C    	movff	postinc2,??_app_aes_encrypt+1
 11050  006012  006F FF74  F09D    	movff	postdec2,??_app_aes_encrypt+2
 11051  006018  0100               	movlb	0	; force () banked
 11052  00601A  2B9B               	incf	??_app_aes_encrypt& (0+255),f,b
 11053  00601C  D003               	goto	u15964
 11054  00601E                     u15965:
 11055  00601E  90D8               	bcf	status,0,c
 11056  006020  339D               	rrcf	(??_app_aes_encrypt+2)& (0+255),f,b
 11057  006022  339C               	rrcf	(??_app_aes_encrypt+1)& (0+255),f,b
 11058  006024                     u15964:
 11059  006024  2F9B               	decfsz	??_app_aes_encrypt& (0+255),f,b
 11060  006026  D7FB               	goto	u15965
 11061  006028  C09C  F110         	movff	??_app_aes_encrypt+1,app_aes_encrypt@random
 11062  00602C  C09D  F111         	movff	??_app_aes_encrypt+2,app_aes_encrypt@random+1
 11063                           
 11064                           ;../app/app_src/application.c: 125:         memcpy((iv + (i<<1)), &random, sizeof(random
      +                          ));
 11065  006030  0101               	movlb	1	; force () banked
 11066  006032  5114               	movf	app_aes_encrypt@i& (0+255),w,b
 11067  006034  0100               	movlb	0	; force () banked
 11068  006036  6F9B               	movwf	??_app_aes_encrypt& (0+255),b
 11069  006038  6B9C               	clrf	(??_app_aes_encrypt+1)& (0+255),b
 11070  00603A  90D8               	bcf	status,0,c
 11071  00603C  379B               	rlcf	??_app_aes_encrypt& (0+255),f,b
 11072  00603E  379C               	rlcf	(??_app_aes_encrypt+1)& (0+255),f,b
 11073  006040  0E00               	movlw	low app_aes_encrypt@iv
 11074  006042  259B               	addwf	??_app_aes_encrypt& (0+255),w,b
 11075  006044  0100               	movlb	0	; force () banked
 11076  006046  6F77               	movwf	memcpy@d1& (0+255),b
 11077  006048  0E01               	movlw	high app_aes_encrypt@iv
 11078  00604A  0100               	movlb	0	; force () banked
 11079  00604C  219C               	addwfc	(??_app_aes_encrypt+1)& (0+255),w,b
 11080  00604E  0100               	movlb	0	; force () banked
 11081  006050  6F78               	movwf	(memcpy@d1+1)& (0+255),b
 11082  006052  0E10               	movlw	low app_aes_encrypt@random
 11083  006054  0100               	movlb	0	; force () banked
 11084  006056  6F79               	movwf	memcpy@s1& (0+255),b
 11085  006058  0E01               	movlw	high app_aes_encrypt@random
 11086  00605A  6F7A               	movwf	(memcpy@s1+1)& (0+255),b
 11087  00605C  5179               	movf	memcpy@s1& (0+255),w,b
 11088  00605E  117A               	iorwf	(memcpy@s1+1)& (0+255),w,b
 11089  006060  A4D8               	btfss	status,2,c
 11090  006062  0E20               	movlw	32
 11091  006064  6F7B               	movwf	(memcpy@s1+2)& (0+255),b
 11092  006066  0E00               	movlw	0
 11093  006068  0100               	movlb	0	; force () banked
 11094  00606A  6F7D               	movwf	(memcpy@n+1)& (0+255),b
 11095  00606C  0E02               	movlw	2
 11096  00606E  6F7C               	movwf	memcpy@n& (0+255),b
 11097  006070  ECC1  F04F         	call	_memcpy	;wreg free
 11098                           
 11099                           ; BSR set to: 0
 11100                           ;../app/app_src/application.c: 126:     }
 11101  006074  0101               	movlb	1	; force () banked
 11102  006076  2B14               	incf	app_aes_encrypt@i& (0+255),f,b
 11103  006078                     l18370:
 11104                           
 11105                           ; BSR set to: 1
 11106  006078  0E07               	movlw	7
 11107  00607A  0101               	movlb	1	; force () banked
 11108  00607C  6514               	cpfsgt	app_aes_encrypt@i& (0+255),b
 11109  00607E  D7BE               	goto	l18364
 11110                           
 11111                           ; BSR set to: 1
 11112                           ;../app/app_src/application.c: 127:     AES_init_ctx_iv(&ctx, &aes_key, &iv);
 11113  006080  0E15               	movlw	low app_aes_encrypt@ctx
 11114  006082  0100               	movlb	0	; force () banked
 11115  006084  6F88               	movwf	AES_init_ctx_iv@ctx& (0+255),b
 11116  006086  0E01               	movlw	high app_aes_encrypt@ctx
 11117  006088  6F89               	movwf	(AES_init_ctx_iv@ctx+1)& (0+255),b
 11118  00608A  0E96               	movlw	low _aes_key
 11119  00608C  0100               	movlb	0	; force () banked
 11120  00608E  6F8A               	movwf	AES_init_ctx_iv@key& (0+255),b
 11121  006090  0E03               	movlw	high _aes_key
 11122  006092  6F8B               	movwf	(AES_init_ctx_iv@key+1)& (0+255),b
 11123  006094  0E00               	movlw	low app_aes_encrypt@iv
 11124  006096  0100               	movlb	0	; force () banked
 11125  006098  6F8C               	movwf	AES_init_ctx_iv@iv& (0+255),b
 11126  00609A  0E01               	movlw	high app_aes_encrypt@iv
 11127  00609C  6F8D               	movwf	(AES_init_ctx_iv@iv+1)& (0+255),b
 11128  00609E  EC27  F055         	call	_AES_init_ctx_iv	;wreg free
 11129                           
 11130                           ; BSR set to: 0
 11131                           ;../app/app_src/application.c: 128:     AES_CBC_encrypt_buffer(&ctx, (data + 16), size);
 11132  0060A2  0E15               	movlw	low app_aes_encrypt@ctx
 11133  0060A4  0100               	movlb	0	; force () banked
 11134  0060A6  6F88               	movwf	AES_CBC_encrypt_buffer@ctx& (0+255),b
 11135  0060A8  0E01               	movlw	high app_aes_encrypt@ctx
 11136  0060AA  6F89               	movwf	(AES_CBC_encrypt_buffer@ctx+1)& (0+255),b
 11137  0060AC  0E10               	movlw	16
 11138  0060AE  0100               	movlb	0	; force () banked
 11139  0060B0  2598               	addwf	app_aes_encrypt@data& (0+255),w,b
 11140  0060B2  0100               	movlb	0	; force () banked
 11141  0060B4  6F8A               	movwf	AES_CBC_encrypt_buffer@buf& (0+255),b
 11142  0060B6  0E00               	movlw	0
 11143  0060B8  0100               	movlb	0	; force () banked
 11144  0060BA  2199               	addwfc	(app_aes_encrypt@data+1)& (0+255),w,b
 11145  0060BC  0100               	movlb	0	; force () banked
 11146  0060BE  6F8B               	movwf	(AES_CBC_encrypt_buffer@buf+1)& (0+255),b
 11147  0060C0  0100               	movlb	0	; force () banked
 11148  0060C2  519A               	movf	app_aes_encrypt@size& (0+255),w,b
 11149  0060C4  0100               	movlb	0	; force () banked
 11150  0060C6  6F8C               	movwf	AES_CBC_encrypt_buffer@length& (0+255),b
 11151  0060C8  6B8D               	clrf	(AES_CBC_encrypt_buffer@length+1)& (0+255),b
 11152  0060CA  6B8E               	clrf	(AES_CBC_encrypt_buffer@length+2)& (0+255),b
 11153  0060CC  6B8F               	clrf	(AES_CBC_encrypt_buffer@length+3)& (0+255),b
 11154  0060CE  ECD4  F041         	call	_AES_CBC_encrypt_buffer	;wreg free
 11155                           
 11156                           ; BSR set to: 0
 11157  0060D2  0012               	return		;funcret
 11158  0060D4                     __end_of_app_aes_encrypt:
 11159                           	callstack 0
 11160                           
 11161 ;; *************** function _AES_CBC_encrypt_buffer *****************
 11162 ;; Defined at:
 11163 ;;		line 498 in file "../aes/aes_src/AES.c"
 11164 ;; Parameters:    Size  Location     Type
 11165 ;;  ctx             2   40[BANK0 ] PTR struct AES_ctx
 11166 ;;		 -> app_aes_encrypt@ctx(192), 
 11167 ;;  buf             2   42[BANK0 ] PTR unsigned char 
 11168 ;;		 -> tx_buffer.payload(110), tx_buffer(264), 
 11169 ;;  length          4   44[BANK0 ] unsigned long 
 11170 ;; Auto vars:     Size  Location     Type
 11171 ;;  Iv              2   54[BANK0 ] PTR unsigned char 
 11172 ;;		 -> ctx.Iv(16), tx_buffer.payload(110), tx_buffer(264), app_aes_encrypt@ctx(192), 
 11173 ;;  i               2   52[BANK0 ] unsigned int 
 11174 ;; Return value:  Size  Location     Type
 11175 ;;                  1    wreg      void 
 11176 ;; Registers used:
 11177 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11178 ;; Tracked objects:
 11179 ;;		On entry : 3F/0
 11180 ;;		On exit  : 3F/0
 11181 ;;		Unchanged: 0/0
 11182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11183 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11184 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11185 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11186 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11187 ;;Total ram usage:       16 bytes
 11188 ;; Hardware stack levels used:    1
 11189 ;; Hardware stack levels required when called:   14
 11190 ;; This function calls:
 11191 ;;		_Cipher
 11192 ;;		_XorWithIv
 11193 ;;		_memcpy
 11194 ;; This function is called by:
 11195 ;;		_app_aes_encrypt
 11196 ;; This function uses a non-reentrant model
 11197 ;;
 11198                           
 11199                           	psect	text40
 11200  0083A8                     __ptext40:
 11201                           	callstack 0
 11202  0083A8                     _AES_CBC_encrypt_buffer:
 11203                           	callstack 11
 11204                           
 11205                           ;../aes/aes_src/AES.c: 498: void AES_CBC_encrypt_buffer(struct AES_ctx *ctx, uint8_t* bu
      +                          f, uint32_t length);../aes/aes_src/AES.c: 499: {;../aes/aes_src/AES.c: 500:   uintptr_t 
      +                          i;;../aes/aes_src/AES.c: 501:   uint8_t *Iv = ctx->Iv;
 11206                           
 11207                           ; BSR set to: 0
 11208                           ;incstack = 0
 11209  0083A8  0EB0               	movlw	176
 11210  0083AA  0100               	movlb	0	; force () banked
 11211  0083AC  2588               	addwf	AES_CBC_encrypt_buffer@ctx& (0+255),w,b
 11212  0083AE  0100               	movlb	0	; force () banked
 11213  0083B0  6F96               	movwf	AES_CBC_encrypt_buffer@Iv& (0+255),b
 11214  0083B2  0E00               	movlw	0
 11215  0083B4  0100               	movlb	0	; force () banked
 11216  0083B6  2189               	addwfc	(AES_CBC_encrypt_buffer@ctx+1)& (0+255),w,b
 11217  0083B8  0100               	movlb	0	; force () banked
 11218  0083BA  6F97               	movwf	(AES_CBC_encrypt_buffer@Iv+1)& (0+255),b
 11219                           
 11220                           ; BSR set to: 0
 11221                           ;../aes/aes_src/AES.c: 502:   for (i = 0; i < length; i += 16)
 11222  0083BC  0E00               	movlw	0
 11223  0083BE  0100               	movlb	0	; force () banked
 11224  0083C0  6F95               	movwf	(AES_CBC_encrypt_buffer@i+1)& (0+255),b
 11225  0083C2  0E00               	movlw	0
 11226  0083C4  6F94               	movwf	AES_CBC_encrypt_buffer@i& (0+255),b
 11227  0083C6  D022               	goto	l18154
 11228  0083C8                     l18144:
 11229                           
 11230                           ; BSR set to: 0
 11231                           ;../aes/aes_src/AES.c: 503:   {;../aes/aes_src/AES.c: 504:     XorWithIv(buf, Iv);
 11232  0083C8  C08A  F071         	movff	AES_CBC_encrypt_buffer@buf,XorWithIv@buf
 11233  0083CC  C08B  F072         	movff	AES_CBC_encrypt_buffer@buf+1,XorWithIv@buf+1
 11234  0083D0  C096  F073         	movff	AES_CBC_encrypt_buffer@Iv,XorWithIv@Iv
 11235  0083D4  C097  F074         	movff	AES_CBC_encrypt_buffer@Iv+1,XorWithIv@Iv+1
 11236  0083D8  EC2E  F056         	call	_XorWithIv	;wreg free
 11237                           
 11238                           ; BSR set to: 0
 11239                           ;../aes/aes_src/AES.c: 505:     Cipher((state_t*)buf, ctx->RoundKey);
 11240  0083DC  C08A  F083         	movff	AES_CBC_encrypt_buffer@buf,Cipher@state
 11241  0083E0  C08B  F084         	movff	AES_CBC_encrypt_buffer@buf+1,Cipher@state+1
 11242  0083E4  C088  F085         	movff	AES_CBC_encrypt_buffer@ctx,Cipher@RoundKey
 11243  0083E8  C089  F086         	movff	AES_CBC_encrypt_buffer@ctx+1,Cipher@RoundKey+1
 11244  0083EC  ECEF  F04D         	call	_Cipher	;wreg free
 11245                           
 11246                           ; BSR set to: 0
 11247                           ;../aes/aes_src/AES.c: 506:     Iv = buf;
 11248  0083F0  C08A  F096         	movff	AES_CBC_encrypt_buffer@buf,AES_CBC_encrypt_buffer@Iv
 11249  0083F4  C08B  F097         	movff	AES_CBC_encrypt_buffer@buf+1,AES_CBC_encrypt_buffer@Iv+1
 11250                           
 11251                           ; BSR set to: 0
 11252                           ;../aes/aes_src/AES.c: 507:     buf += 16;
 11253  0083F8  0E10               	movlw	16
 11254  0083FA  0100               	movlb	0	; force () banked
 11255  0083FC  278A               	addwf	AES_CBC_encrypt_buffer@buf& (0+255),f,b
 11256  0083FE  0E00               	movlw	0
 11257  008400  238B               	addwfc	(AES_CBC_encrypt_buffer@buf+1)& (0+255),f,b
 11258                           
 11259                           ; BSR set to: 0
 11260                           ;../aes/aes_src/AES.c: 509:   }
 11261  008402  0E10               	movlw	16
 11262  008404  0100               	movlb	0	; force () banked
 11263  008406  2794               	addwf	AES_CBC_encrypt_buffer@i& (0+255),f,b
 11264  008408  0E00               	movlw	0
 11265  00840A  2395               	addwfc	(AES_CBC_encrypt_buffer@i+1)& (0+255),f,b
 11266  00840C                     l18154:
 11267                           
 11268                           ; BSR set to: 0
 11269  00840C  0100               	movlb	0	; force () banked
 11270  00840E  5194               	movf	AES_CBC_encrypt_buffer@i& (0+255),w,b
 11271  008410  0100               	movlb	0	; force () banked
 11272  008412  6F90               	movwf	??_AES_CBC_encrypt_buffer& (0+255),b
 11273  008414  0100               	movlb	0	; force () banked
 11274  008416  5195               	movf	(AES_CBC_encrypt_buffer@i+1)& (0+255),w,b
 11275  008418  0100               	movlb	0	; force () banked
 11276  00841A  6F91               	movwf	(??_AES_CBC_encrypt_buffer+1)& (0+255),b
 11277  00841C  6B92               	clrf	(??_AES_CBC_encrypt_buffer+2)& (0+255),b
 11278  00841E  6B93               	clrf	(??_AES_CBC_encrypt_buffer+3)& (0+255),b
 11279  008420  0100               	movlb	0	; force () banked
 11280  008422  518C               	movf	AES_CBC_encrypt_buffer@length& (0+255),w,b
 11281  008424  0100               	movlb	0	; force () banked
 11282  008426  5D90               	subwf	??_AES_CBC_encrypt_buffer& (0+255),w,b
 11283  008428  0100               	movlb	0	; force () banked
 11284  00842A  518D               	movf	(AES_CBC_encrypt_buffer@length+1)& (0+255),w,b
 11285  00842C  0100               	movlb	0	; force () banked
 11286  00842E  5991               	subwfb	(??_AES_CBC_encrypt_buffer+1)& (0+255),w,b
 11287  008430  0100               	movlb	0	; force () banked
 11288  008432  518E               	movf	(AES_CBC_encrypt_buffer@length+2)& (0+255),w,b
 11289  008434  0100               	movlb	0	; force () banked
 11290  008436  5992               	subwfb	(??_AES_CBC_encrypt_buffer+2)& (0+255),w,b
 11291  008438  0100               	movlb	0	; force () banked
 11292  00843A  518F               	movf	(AES_CBC_encrypt_buffer@length+3)& (0+255),w,b
 11293  00843C  0100               	movlb	0	; force () banked
 11294  00843E  5993               	subwfb	(??_AES_CBC_encrypt_buffer+3)& (0+255),w,b
 11295  008440  A0D8               	btfss	status,0,c
 11296  008442  D7C2               	goto	l18144
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;../aes/aes_src/AES.c: 511:   memcpy(ctx->Iv, Iv, 16);
 11300  008444  0EB0               	movlw	176
 11301  008446  0100               	movlb	0	; force () banked
 11302  008448  2588               	addwf	AES_CBC_encrypt_buffer@ctx& (0+255),w,b
 11303  00844A  0100               	movlb	0	; force () banked
 11304  00844C  6F77               	movwf	memcpy@d1& (0+255),b
 11305  00844E  0E00               	movlw	0
 11306  008450  0100               	movlb	0	; force () banked
 11307  008452  2189               	addwfc	(AES_CBC_encrypt_buffer@ctx+1)& (0+255),w,b
 11308  008454  0100               	movlb	0	; force () banked
 11309  008456  6F78               	movwf	(memcpy@d1+1)& (0+255),b
 11310  008458  C096  F079         	movff	AES_CBC_encrypt_buffer@Iv,memcpy@s1
 11311  00845C  C097  F07A         	movff	AES_CBC_encrypt_buffer@Iv+1,memcpy@s1+1
 11312  008460  0100               	movlb	0	; force () banked
 11313  008462  5179               	movf	memcpy@s1& (0+255),w,b
 11314  008464  117A               	iorwf	(memcpy@s1+1)& (0+255),w,b
 11315  008466  A4D8               	btfss	status,2,c
 11316  008468  0E20               	movlw	32
 11317  00846A  6F7B               	movwf	(memcpy@s1+2)& (0+255),b
 11318  00846C  0E00               	movlw	0
 11319  00846E  0100               	movlb	0	; force () banked
 11320  008470  6F7D               	movwf	(memcpy@n+1)& (0+255),b
 11321  008472  0E10               	movlw	16
 11322  008474  6F7C               	movwf	memcpy@n& (0+255),b
 11323  008476  ECC1  F04F         	call	_memcpy	;wreg free
 11324                           
 11325                           ; BSR set to: 0
 11326  00847A  0012               	return		;funcret
 11327  00847C                     __end_of_AES_CBC_encrypt_buffer:
 11328                           	callstack 0
 11329                           
 11330 ;; *************** function _Cipher *****************
 11331 ;; Defined at:
 11332 ;;		line 410 in file "../aes/aes_src/AES.c"
 11333 ;; Parameters:    Size  Location     Type
 11334 ;;  state           2   35[BANK0 ] PTR unsigned char [4][4]
 11335 ;;		 -> tx_buffer.payload(110), tx_buffer(264), 
 11336 ;;  RoundKey        2   37[BANK0 ] PTR const unsigned char 
 11337 ;;		 -> ctx.RoundKey(176), app_aes_encrypt@ctx(192), 
 11338 ;; Auto vars:     Size  Location     Type
 11339 ;;  round           1   39[BANK0 ] unsigned char 
 11340 ;; Return value:  Size  Location     Type
 11341 ;;                  1    wreg      void 
 11342 ;; Registers used:
 11343 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11344 ;; Tracked objects:
 11345 ;;		On entry : 3F/0
 11346 ;;		On exit  : 3F/0
 11347 ;;		Unchanged: 0/0
 11348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11349 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11350 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11352 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11353 ;;Total ram usage:        5 bytes
 11354 ;; Hardware stack levels used:    1
 11355 ;; Hardware stack levels required when called:   13
 11356 ;; This function calls:
 11357 ;;		_AddRoundKey
 11358 ;;		_MixColumns
 11359 ;;		_ShiftRows
 11360 ;;		_SubBytes
 11361 ;; This function is called by:
 11362 ;;		_AES_CBC_encrypt_buffer
 11363 ;; This function uses a non-reentrant model
 11364 ;;
 11365                           
 11366                           	psect	text41
 11367  009BDE                     __ptext41:
 11368                           	callstack 0
 11369  009BDE                     _Cipher:
 11370                           	callstack 11
 11371                           
 11372                           ;../aes/aes_src/AES.c: 410: static void Cipher(state_t* state, const uint8_t* RoundKey);
      +                          ../aes/aes_src/AES.c: 411: {;../aes/aes_src/AES.c: 412:   uint8_t round = 0;
 11373                           
 11374                           ; BSR set to: 0
 11375                           ;incstack = 0
 11376  009BDE  0E00               	movlw	0
 11377  009BE0  0100               	movlb	0	; force () banked
 11378  009BE2  6F87               	movwf	Cipher@round& (0+255),b
 11379                           
 11380                           ; BSR set to: 0
 11381                           ;../aes/aes_src/AES.c: 415:   AddRoundKey(0, state, RoundKey);
 11382  009BE4  C083  F071         	movff	Cipher@state,AddRoundKey@state
 11383  009BE8  C084  F072         	movff	Cipher@state+1,AddRoundKey@state+1
 11384  009BEC  C085  F073         	movff	Cipher@RoundKey,AddRoundKey@RoundKey
 11385  009BF0  C086  F074         	movff	Cipher@RoundKey+1,AddRoundKey@RoundKey+1
 11386  009BF4  0E00               	movlw	0
 11387  009BF6  ECE8  F049         	call	_AddRoundKey
 11388                           
 11389                           ; BSR set to: 0
 11390                           ;../aes/aes_src/AES.c: 421:   for (round = 1; ; ++round)
 11391  009BFA  0E01               	movlw	1
 11392  009BFC  0100               	movlb	0	; force () banked
 11393  009BFE  6F87               	movwf	Cipher@round& (0+255),b
 11394  009C00                     l17956:
 11395                           
 11396                           ; BSR set to: 0
 11397                           ;../aes/aes_src/AES.c: 422:   {;../aes/aes_src/AES.c: 423:     SubBytes(state);
 11398  009C00  C083  F071         	movff	Cipher@state,SubBytes@state
 11399  009C04  C084  F072         	movff	Cipher@state+1,SubBytes@state+1
 11400  009C08  ECA8  F048         	call	_SubBytes	;wreg free
 11401                           
 11402                           ; BSR set to: 0
 11403                           ;../aes/aes_src/AES.c: 424:     ShiftRows(state);
 11404  009C0C  C083  F071         	movff	Cipher@state,ShiftRows@state
 11405  009C10  C084  F072         	movff	Cipher@state+1,ShiftRows@state+1
 11406  009C14  ECEF  F028         	call	_ShiftRows	;wreg free
 11407                           
 11408                           ; BSR set to: 0
 11409                           ;../aes/aes_src/AES.c: 425:     if (round == 10) {
 11410  009C18  0E0A               	movlw	10
 11411  009C1A  0100               	movlb	0	; force () banked
 11412  009C1C  1987               	xorwf	Cipher@round& (0+255),w,b
 11413  009C1E  B4D8               	btfsc	status,2,c
 11414  009C20  D015               	goto	l17968
 11415                           
 11416                           ; BSR set to: 0
 11417                           ;../aes/aes_src/AES.c: 428:     MixColumns(state);
 11418  009C22  C083  F072         	movff	Cipher@state,MixColumns@state
 11419  009C26  C084  F073         	movff	Cipher@state+1,MixColumns@state+1
 11420  009C2A  ECC5  F018         	call	_MixColumns	;wreg free
 11421                           
 11422                           ;../aes/aes_src/AES.c: 429:     AddRoundKey(round, state, RoundKey);
 11423  009C2E  C083  F071         	movff	Cipher@state,AddRoundKey@state
 11424  009C32  C084  F072         	movff	Cipher@state+1,AddRoundKey@state+1
 11425  009C36  C085  F073         	movff	Cipher@RoundKey,AddRoundKey@RoundKey
 11426  009C3A  C086  F074         	movff	Cipher@RoundKey+1,AddRoundKey@RoundKey+1
 11427  009C3E  0100               	movlb	0	; force () banked
 11428  009C40  5187               	movf	Cipher@round& (0+255),w,b
 11429  009C42  ECE8  F049         	call	_AddRoundKey
 11430                           
 11431                           ; BSR set to: 0
 11432                           ;../aes/aes_src/AES.c: 430:   }
 11433  009C46  0100               	movlb	0	; force () banked
 11434  009C48  2B87               	incf	Cipher@round& (0+255),f,b
 11435  009C4A  D7DA               	goto	l17956
 11436  009C4C                     l17968:
 11437                           
 11438                           ; BSR set to: 0
 11439                           ;../aes/aes_src/AES.c: 432:   AddRoundKey(10, state, RoundKey);
 11440  009C4C  C083  F071         	movff	Cipher@state,AddRoundKey@state
 11441  009C50  C084  F072         	movff	Cipher@state+1,AddRoundKey@state+1
 11442  009C54  C085  F073         	movff	Cipher@RoundKey,AddRoundKey@RoundKey
 11443  009C58  C086  F074         	movff	Cipher@RoundKey+1,AddRoundKey@RoundKey+1
 11444  009C5C  0E0A               	movlw	10
 11445  009C5E  ECE8  F049         	call	_AddRoundKey
 11446                           
 11447                           ; BSR set to: 0
 11448  009C62  0012               	return		;funcret
 11449  009C64                     __end_of_Cipher:
 11450                           	callstack 0
 11451                           
 11452 ;; *************** function _SubBytes *****************
 11453 ;; Defined at:
 11454 ;;		line 256 in file "../aes/aes_src/AES.c"
 11455 ;; Parameters:    Size  Location     Type
 11456 ;;  state           2   17[BANK0 ] PTR unsigned char [4][4]
 11457 ;;		 -> tx_buffer.payload(110), tx_buffer(264), 
 11458 ;; Auto vars:     Size  Location     Type
 11459 ;;  j               1   26[BANK0 ] unsigned char 
 11460 ;;  i               1   25[BANK0 ] unsigned char 
 11461 ;; Return value:  Size  Location     Type
 11462 ;;                  1    wreg      void 
 11463 ;; Registers used:
 11464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 11465 ;; Tracked objects:
 11466 ;;		On entry : 0/0
 11467 ;;		On exit  : 3F/0
 11468 ;;		Unchanged: 0/0
 11469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11470 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11471 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11472 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11473 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11474 ;;Total ram usage:       10 bytes
 11475 ;; Hardware stack levels used:    1
 11476 ;; Hardware stack levels required when called:   11
 11477 ;; This function calls:
 11478 ;;		Nothing
 11479 ;; This function is called by:
 11480 ;;		_Cipher
 11481 ;; This function uses a non-reentrant model
 11482 ;;
 11483                           
 11484                           	psect	text42
 11485  009150                     __ptext42:
 11486                           	callstack 0
 11487  009150                     _SubBytes:
 11488                           	callstack 12
 11489                           
 11490                           ;../aes/aes_src/AES.c: 256: static void SubBytes(state_t* state);../aes/aes_src/AES.c: 2
      +                          57: {;../aes/aes_src/AES.c: 258:   uint8_t i, j;;../aes/aes_src/AES.c: 259:   for (i = 0
      +                          ; i < 4; ++i)
 11491                           
 11492                           ; BSR set to: 0
 11493                           ;incstack = 0
 11494  009150  0E00               	movlw	0
 11495  009152  0100               	movlb	0	; force () banked
 11496  009154  6F79               	movwf	SubBytes@i& (0+255),b
 11497  009156  D048               	goto	l11656
 11498  009158                     l11642:
 11499                           
 11500                           ; BSR set to: 0
 11501                           ;../aes/aes_src/AES.c: 260:   {;../aes/aes_src/AES.c: 261:     for (j = 0; j < 4; ++j)
 11502  009158  0E00               	movlw	0
 11503  00915A  0100               	movlb	0	; force () banked
 11504  00915C  6F7A               	movwf	SubBytes@j& (0+255),b
 11505  00915E  D03E               	goto	l11652
 11506  009160                     l11648:
 11507                           
 11508                           ; BSR set to: 0
 11509                           ;../aes/aes_src/AES.c: 262:     {;../aes/aes_src/AES.c: 263:       (*state)[j][i] = (sbo
      +                          x[((*state)[j][i])]);
 11510  009160  0100               	movlb	0	; force () banked
 11511  009162  517A               	movf	SubBytes@j& (0+255),w,b
 11512  009164  0D04               	mullw	4
 11513  009166  C071  F073         	movff	SubBytes@state,??_SubBytes
 11514  00916A  C072  F074         	movff	SubBytes@state+1,??_SubBytes+1
 11515  00916E  50F3               	movf	243,w,c
 11516  009170  0100               	movlb	0	; force () banked
 11517  009172  2773               	addwf	??_SubBytes& (0+255),f,b
 11518  009174  50F4               	movf	244,w,c
 11519  009176  2374               	addwfc	(??_SubBytes+1)& (0+255),f,b
 11520  009178  0100               	movlb	0	; force () banked
 11521  00917A  5179               	movf	SubBytes@i& (0+255),w,b
 11522  00917C  0100               	movlb	0	; force () banked
 11523  00917E  2573               	addwf	??_SubBytes& (0+255),w,b
 11524  009180  6ED9               	movwf	fsr2l,c
 11525  009182  0100               	movlb	0	; force () banked
 11526  009184  0E00               	movlw	0
 11527  009186  0100               	movlb	0	; force () banked
 11528  009188  2174               	addwfc	(??_SubBytes+1)& (0+255),w,b
 11529  00918A  6EDA               	movwf	fsr2h,c
 11530  00918C  50DF               	movf	indf2,w,c
 11531  00918E  6F75               	movwf	(??_SubBytes+2)& (0+255),b
 11532  009190  6B76               	clrf	(??_SubBytes+3)& (0+255),b
 11533  009192  0E55               	movlw	low _sbox
 11534  009194  2575               	addwf	(??_SubBytes+2)& (0+255),w,b
 11535  009196  6EF6               	movwf	tblptrl,c
 11536  009198  0EFD               	movlw	high _sbox
 11537  00919A  2176               	addwfc	(??_SubBytes+3)& (0+255),w,b
 11538  00919C  6EF7               	movwf	tblptrh,c
 11539  00919E                     	if	1	;There are 3 active tblptr bytes
 11540  00919E  6AF8               	clrf	tblptru,c
 11541  0091A0  0E00               	movlw	low (__mediumconst shr (0+16))
 11542  0091A2  22F8               	addwfc	tblptru,f,c
 11543  0091A4                     	endif
 11544  0091A4  0100               	movlb	0	; force () banked
 11545  0091A6  517A               	movf	SubBytes@j& (0+255),w,b
 11546  0091A8  0D04               	mullw	4
 11547  0091AA  C071  F077         	movff	SubBytes@state,??_SubBytes+4
 11548  0091AE  C072  F078         	movff	SubBytes@state+1,??_SubBytes+5
 11549  0091B2  50F3               	movf	243,w,c
 11550  0091B4  0100               	movlb	0	; force () banked
 11551  0091B6  2777               	addwf	(??_SubBytes+4)& (0+255),f,b
 11552  0091B8  50F4               	movf	244,w,c
 11553  0091BA  2378               	addwfc	(??_SubBytes+5)& (0+255),f,b
 11554  0091BC  0100               	movlb	0	; force () banked
 11555  0091BE  5179               	movf	SubBytes@i& (0+255),w,b
 11556  0091C0  0100               	movlb	0	; force () banked
 11557  0091C2  2577               	addwf	(??_SubBytes+4)& (0+255),w,b
 11558  0091C4  6ED9               	movwf	fsr2l,c
 11559  0091C6  0100               	movlb	0	; force () banked
 11560  0091C8  0E00               	movlw	0
 11561  0091CA  0100               	movlb	0	; force () banked
 11562  0091CC  2178               	addwfc	(??_SubBytes+5)& (0+255),w,b
 11563  0091CE  6EDA               	movwf	fsr2h,c
 11564  0091D0  0008               	tblrd		*
 11565  0091D2  006F FFD7 FFDF     	movff	tablat,indf2
 11566                           
 11567                           ; BSR set to: 0
 11568                           ;../aes/aes_src/AES.c: 264:     }
 11569  0091D8  0100               	movlb	0	; force () banked
 11570  0091DA  2B7A               	incf	SubBytes@j& (0+255),f,b
 11571  0091DC                     l11652:
 11572                           
 11573                           ; BSR set to: 0
 11574  0091DC  0E03               	movlw	3
 11575  0091DE  0100               	movlb	0	; force () banked
 11576  0091E0  657A               	cpfsgt	SubBytes@j& (0+255),b
 11577  0091E2  D7BE               	goto	l11648
 11578                           
 11579                           ; BSR set to: 0
 11580                           ;../aes/aes_src/AES.c: 265:   }
 11581  0091E4  0100               	movlb	0	; force () banked
 11582  0091E6  2B79               	incf	SubBytes@i& (0+255),f,b
 11583  0091E8                     l11656:
 11584                           
 11585                           ; BSR set to: 0
 11586  0091E8  0E03               	movlw	3
 11587  0091EA  0100               	movlb	0	; force () banked
 11588  0091EC  6579               	cpfsgt	SubBytes@i& (0+255),b
 11589  0091EE  D7B4               	goto	l11642
 11590  0091F0  0012               	return	
 11591  0091F2                     __end_of_SubBytes:
 11592                           	callstack 0
 11593                           
 11594 ;; *************** function _ShiftRows *****************
 11595 ;; Defined at:
 11596 ;;		line 271 in file "../aes/aes_src/AES.c"
 11597 ;; Parameters:    Size  Location     Type
 11598 ;;  state           2   17[BANK0 ] PTR unsigned char [4][4]
 11599 ;;		 -> tx_buffer.payload(110), tx_buffer(264), 
 11600 ;; Auto vars:     Size  Location     Type
 11601 ;;  temp            1   19[BANK0 ] unsigned char 
 11602 ;; Return value:  Size  Location     Type
 11603 ;;                  1    wreg      void 
 11604 ;; Registers used:
 11605 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 11606 ;; Tracked objects:
 11607 ;;		On entry : 3F/0
 11608 ;;		On exit  : 3F/0
 11609 ;;		Unchanged: 0/0
 11610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11611 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11612 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11614 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11615 ;;Total ram usage:        3 bytes
 11616 ;; Hardware stack levels used:    1
 11617 ;; Hardware stack levels required when called:   11
 11618 ;; This function calls:
 11619 ;;		Nothing
 11620 ;; This function is called by:
 11621 ;;		_Cipher
 11622 ;; This function uses a non-reentrant model
 11623 ;;
 11624                           
 11625                           	psect	text43
 11626  0051DE                     __ptext43:
 11627                           	callstack 0
 11628  0051DE                     _ShiftRows:
 11629                           	callstack 12
 11630                           
 11631                           ;../aes/aes_src/AES.c: 271: static void ShiftRows(state_t* state);../aes/aes_src/AES.c: 
      +                          272: {;../aes/aes_src/AES.c: 273:   uint8_t temp;;../aes/aes_src/AES.c: 276:   temp = (*
      +                          state)[0][1];
 11632                           
 11633                           ; BSR set to: 0
 11634                           ;incstack = 0
 11635  0051DE  0100               	movlb	0	; force () banked
 11636  0051E0  EE20 F001          	lfsr	2,1
 11637  0051E4  5171               	movf	ShiftRows@state& (0+255),w,b
 11638  0051E6  26D9               	addwf	fsr2l,f,c
 11639  0051E8  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11640  0051EA  22DA               	addwfc	fsr2h,f,c
 11641  0051EC  50DF               	movf	indf2,w,c
 11642  0051EE  0100               	movlb	0	; force () banked
 11643  0051F0  6F73               	movwf	ShiftRows@temp& (0+255),b
 11644                           
 11645                           ; BSR set to: 0
 11646                           ;../aes/aes_src/AES.c: 277:   (*state)[0][1] = (*state)[1][1];
 11647  0051F2  0100               	movlb	0	; force () banked
 11648  0051F4  EE20 F005          	lfsr	2,5
 11649  0051F8  5171               	movf	ShiftRows@state& (0+255),w,b
 11650  0051FA  26D9               	addwf	fsr2l,f,c
 11651  0051FC  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11652  0051FE  22DA               	addwfc	fsr2h,f,c
 11653  005200  EE00 F001          	lfsr	0,1
 11654  005204  5171               	movf	ShiftRows@state& (0+255),w,b
 11655  005206  26E9               	addwf	fsr0l,f,c
 11656  005208  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11657  00520A  22EA               	addwfc	fsr0h,f,c
 11658  00520C  006F FF7F FFEF     	movff	indf2,indf0
 11659                           
 11660                           ; BSR set to: 0
 11661                           ;../aes/aes_src/AES.c: 278:   (*state)[1][1] = (*state)[2][1];
 11662  005212  0100               	movlb	0	; force () banked
 11663  005214  EE20 F009          	lfsr	2,9
 11664  005218  5171               	movf	ShiftRows@state& (0+255),w,b
 11665  00521A  26D9               	addwf	fsr2l,f,c
 11666  00521C  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11667  00521E  22DA               	addwfc	fsr2h,f,c
 11668  005220  EE00 F005          	lfsr	0,5
 11669  005224  5171               	movf	ShiftRows@state& (0+255),w,b
 11670  005226  26E9               	addwf	fsr0l,f,c
 11671  005228  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11672  00522A  22EA               	addwfc	fsr0h,f,c
 11673  00522C  006F FF7F FFEF     	movff	indf2,indf0
 11674                           
 11675                           ; BSR set to: 0
 11676                           ;../aes/aes_src/AES.c: 279:   (*state)[2][1] = (*state)[3][1];
 11677  005232  0100               	movlb	0	; force () banked
 11678  005234  EE20 F00D          	lfsr	2,13
 11679  005238  5171               	movf	ShiftRows@state& (0+255),w,b
 11680  00523A  26D9               	addwf	fsr2l,f,c
 11681  00523C  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11682  00523E  22DA               	addwfc	fsr2h,f,c
 11683  005240  EE00 F009          	lfsr	0,9
 11684  005244  5171               	movf	ShiftRows@state& (0+255),w,b
 11685  005246  26E9               	addwf	fsr0l,f,c
 11686  005248  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11687  00524A  22EA               	addwfc	fsr0h,f,c
 11688  00524C  006F FF7F FFEF     	movff	indf2,indf0
 11689                           
 11690                           ; BSR set to: 0
 11691                           ;../aes/aes_src/AES.c: 280:   (*state)[3][1] = temp;
 11692  005252  0100               	movlb	0	; force () banked
 11693  005254  EE20 F00D          	lfsr	2,13
 11694  005258  5171               	movf	ShiftRows@state& (0+255),w,b
 11695  00525A  26D9               	addwf	fsr2l,f,c
 11696  00525C  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11697  00525E  22DA               	addwfc	fsr2h,f,c
 11698  005260  0060  F1CF  FFDF   	movff	ShiftRows@temp,indf2
 11699                           
 11700                           ; BSR set to: 0
 11701                           ;../aes/aes_src/AES.c: 283:   temp = (*state)[0][2];
 11702  005266  0100               	movlb	0	; force () banked
 11703  005268  EE20 F002          	lfsr	2,2
 11704  00526C  5171               	movf	ShiftRows@state& (0+255),w,b
 11705  00526E  26D9               	addwf	fsr2l,f,c
 11706  005270  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11707  005272  22DA               	addwfc	fsr2h,f,c
 11708  005274  50DF               	movf	indf2,w,c
 11709  005276  0100               	movlb	0	; force () banked
 11710  005278  6F73               	movwf	ShiftRows@temp& (0+255),b
 11711                           
 11712                           ; BSR set to: 0
 11713                           ;../aes/aes_src/AES.c: 284:   (*state)[0][2] = (*state)[2][2];
 11714  00527A  0100               	movlb	0	; force () banked
 11715  00527C  EE20 F00A          	lfsr	2,10
 11716  005280  5171               	movf	ShiftRows@state& (0+255),w,b
 11717  005282  26D9               	addwf	fsr2l,f,c
 11718  005284  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11719  005286  22DA               	addwfc	fsr2h,f,c
 11720  005288  EE00 F002          	lfsr	0,2
 11721  00528C  5171               	movf	ShiftRows@state& (0+255),w,b
 11722  00528E  26E9               	addwf	fsr0l,f,c
 11723  005290  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11724  005292  22EA               	addwfc	fsr0h,f,c
 11725  005294  006F FF7F FFEF     	movff	indf2,indf0
 11726                           
 11727                           ;../aes/aes_src/AES.c: 285:   (*state)[2][2] = temp;
 11728  00529A  EE20 F00A          	lfsr	2,10
 11729  00529E  5171               	movf	ShiftRows@state& (0+255),w,b
 11730  0052A0  26D9               	addwf	fsr2l,f,c
 11731  0052A2  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11732  0052A4  22DA               	addwfc	fsr2h,f,c
 11733  0052A6  0060  F1CF  FFDF   	movff	ShiftRows@temp,indf2
 11734                           
 11735                           ;../aes/aes_src/AES.c: 287:   temp = (*state)[1][2];
 11736  0052AC  EE20 F006          	lfsr	2,6
 11737  0052B0  5171               	movf	ShiftRows@state& (0+255),w,b
 11738  0052B2  26D9               	addwf	fsr2l,f,c
 11739  0052B4  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11740  0052B6  22DA               	addwfc	fsr2h,f,c
 11741  0052B8  50DF               	movf	indf2,w,c
 11742  0052BA  0100               	movlb	0	; force () banked
 11743  0052BC  6F73               	movwf	ShiftRows@temp& (0+255),b
 11744                           
 11745                           ; BSR set to: 0
 11746                           ;../aes/aes_src/AES.c: 288:   (*state)[1][2] = (*state)[3][2];
 11747  0052BE  0100               	movlb	0	; force () banked
 11748  0052C0  EE20 F00E          	lfsr	2,14
 11749  0052C4  5171               	movf	ShiftRows@state& (0+255),w,b
 11750  0052C6  26D9               	addwf	fsr2l,f,c
 11751  0052C8  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11752  0052CA  22DA               	addwfc	fsr2h,f,c
 11753  0052CC  EE00 F006          	lfsr	0,6
 11754  0052D0  5171               	movf	ShiftRows@state& (0+255),w,b
 11755  0052D2  26E9               	addwf	fsr0l,f,c
 11756  0052D4  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11757  0052D6  22EA               	addwfc	fsr0h,f,c
 11758  0052D8  006F FF7F FFEF     	movff	indf2,indf0
 11759                           
 11760                           ; BSR set to: 0
 11761                           ;../aes/aes_src/AES.c: 289:   (*state)[3][2] = temp;
 11762  0052DE  0100               	movlb	0	; force () banked
 11763  0052E0  EE20 F00E          	lfsr	2,14
 11764  0052E4  5171               	movf	ShiftRows@state& (0+255),w,b
 11765  0052E6  26D9               	addwf	fsr2l,f,c
 11766  0052E8  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11767  0052EA  22DA               	addwfc	fsr2h,f,c
 11768  0052EC  0060  F1CF  FFDF   	movff	ShiftRows@temp,indf2
 11769                           
 11770                           ; BSR set to: 0
 11771                           ;../aes/aes_src/AES.c: 292:   temp = (*state)[0][3];
 11772  0052F2  0100               	movlb	0	; force () banked
 11773  0052F4  EE20 F003          	lfsr	2,3
 11774  0052F8  5171               	movf	ShiftRows@state& (0+255),w,b
 11775  0052FA  26D9               	addwf	fsr2l,f,c
 11776  0052FC  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11777  0052FE  22DA               	addwfc	fsr2h,f,c
 11778  005300  50DF               	movf	indf2,w,c
 11779  005302  0100               	movlb	0	; force () banked
 11780  005304  6F73               	movwf	ShiftRows@temp& (0+255),b
 11781                           
 11782                           ; BSR set to: 0
 11783                           ;../aes/aes_src/AES.c: 293:   (*state)[0][3] = (*state)[3][3];
 11784  005306  0100               	movlb	0	; force () banked
 11785  005308  EE20 F00F          	lfsr	2,15
 11786  00530C  5171               	movf	ShiftRows@state& (0+255),w,b
 11787  00530E  26D9               	addwf	fsr2l,f,c
 11788  005310  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11789  005312  22DA               	addwfc	fsr2h,f,c
 11790  005314  EE00 F003          	lfsr	0,3
 11791  005318  5171               	movf	ShiftRows@state& (0+255),w,b
 11792  00531A  26E9               	addwf	fsr0l,f,c
 11793  00531C  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11794  00531E  22EA               	addwfc	fsr0h,f,c
 11795  005320  006F FF7F FFEF     	movff	indf2,indf0
 11796                           
 11797                           ; BSR set to: 0
 11798                           ;../aes/aes_src/AES.c: 294:   (*state)[3][3] = (*state)[2][3];
 11799  005326  0100               	movlb	0	; force () banked
 11800  005328  EE20 F00B          	lfsr	2,11
 11801  00532C  5171               	movf	ShiftRows@state& (0+255),w,b
 11802  00532E  26D9               	addwf	fsr2l,f,c
 11803  005330  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11804  005332  22DA               	addwfc	fsr2h,f,c
 11805  005334  EE00 F00F          	lfsr	0,15
 11806  005338  5171               	movf	ShiftRows@state& (0+255),w,b
 11807  00533A  26E9               	addwf	fsr0l,f,c
 11808  00533C  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11809  00533E  22EA               	addwfc	fsr0h,f,c
 11810  005340  006F FF7F FFEF     	movff	indf2,indf0
 11811                           
 11812                           ; BSR set to: 0
 11813                           ;../aes/aes_src/AES.c: 295:   (*state)[2][3] = (*state)[1][3];
 11814  005346  0100               	movlb	0	; force () banked
 11815  005348  EE20 F007          	lfsr	2,7
 11816  00534C  5171               	movf	ShiftRows@state& (0+255),w,b
 11817  00534E  26D9               	addwf	fsr2l,f,c
 11818  005350  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11819  005352  22DA               	addwfc	fsr2h,f,c
 11820  005354  EE00 F00B          	lfsr	0,11
 11821  005358  5171               	movf	ShiftRows@state& (0+255),w,b
 11822  00535A  26E9               	addwf	fsr0l,f,c
 11823  00535C  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11824  00535E  22EA               	addwfc	fsr0h,f,c
 11825  005360  006F FF7F FFEF     	movff	indf2,indf0
 11826                           
 11827                           ;../aes/aes_src/AES.c: 296:   (*state)[1][3] = temp;
 11828  005366  EE20 F007          	lfsr	2,7
 11829  00536A  5171               	movf	ShiftRows@state& (0+255),w,b
 11830  00536C  26D9               	addwf	fsr2l,f,c
 11831  00536E  5172               	movf	(ShiftRows@state+1)& (0+255),w,b
 11832  005370  22DA               	addwfc	fsr2h,f,c
 11833  005372  0060  F1CF  FFDF   	movff	ShiftRows@temp,indf2
 11834                           
 11835                           ; BSR set to: 0
 11836  005378  0012               	return		;funcret
 11837  00537A                     __end_of_ShiftRows:
 11838                           	callstack 0
 11839                           
 11840 ;; *************** function _MixColumns *****************
 11841 ;; Defined at:
 11842 ;;		line 305 in file "../aes/aes_src/AES.c"
 11843 ;; Parameters:    Size  Location     Type
 11844 ;;  state           2   18[BANK0 ] PTR unsigned char [4][4]
 11845 ;;		 -> tx_buffer.payload(110), tx_buffer(264), 
 11846 ;; Auto vars:     Size  Location     Type
 11847 ;;  i               1   34[BANK0 ] unsigned char 
 11848 ;;  Tm              1   33[BANK0 ] unsigned char 
 11849 ;;  Tmp             1   32[BANK0 ] unsigned char 
 11850 ;;  t               1   31[BANK0 ] unsigned char 
 11851 ;; Return value:  Size  Location     Type
 11852 ;;                  1    wreg      void 
 11853 ;; Registers used:
 11854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11855 ;; Tracked objects:
 11856 ;;		On entry : 3F/0
 11857 ;;		On exit  : 3F/0
 11858 ;;		Unchanged: 0/0
 11859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11860 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11861 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11862 ;;      Temps:          0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11863 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11864 ;;Total ram usage:       17 bytes
 11865 ;; Hardware stack levels used:    1
 11866 ;; Hardware stack levels required when called:   12
 11867 ;; This function calls:
 11868 ;;		_xtime
 11869 ;; This function is called by:
 11870 ;;		_Cipher
 11871 ;; This function uses a non-reentrant model
 11872 ;;
 11873                           
 11874                           	psect	text44
 11875  00318A                     __ptext44:
 11876                           	callstack 0
 11877  00318A                     _MixColumns:
 11878                           	callstack 11
 11879                           
 11880                           ;../aes/aes_src/AES.c: 305: static void MixColumns(state_t* state);../aes/aes_src/AES.c:
      +                           306: {;../aes/aes_src/AES.c: 307:   uint8_t i;;../aes/aes_src/AES.c: 308:   uint8_t Tmp
      +                          , Tm, t;;../aes/aes_src/AES.c: 309:   for (i = 0; i < 4; ++i)
 11881                           
 11882                           ; BSR set to: 0
 11883                           ;incstack = 0
 11884  00318A  0E00               	movlw	0
 11885  00318C  0100               	movlb	0	; force () banked
 11886  00318E  6F82               	movwf	MixColumns@i& (0+255),b
 11887  003190  D185               	goto	l17728
 11888  003192                     l17708:
 11889                           
 11890                           ; BSR set to: 0
 11891                           ;../aes/aes_src/AES.c: 310:   {;../aes/aes_src/AES.c: 311:     t = (*state)[i][0];
 11892  003192  0100               	movlb	0	; force () banked
 11893  003194  5182               	movf	MixColumns@i& (0+255),w,b
 11894  003196  0D04               	mullw	4
 11895  003198  006F FFCC  F074    	movff	prodl,??_MixColumns
 11896  00319E  006F FFD0  F075    	movff	prodh,??_MixColumns+1
 11897  0031A4  0100               	movlb	0	; force () banked
 11898  0031A6  5174               	movf	??_MixColumns& (0+255),w,b
 11899  0031A8  0100               	movlb	0	; force () banked
 11900  0031AA  2572               	addwf	MixColumns@state& (0+255),w,b
 11901  0031AC  6ED9               	movwf	fsr2l,c
 11902  0031AE  0100               	movlb	0	; force () banked
 11903  0031B0  5175               	movf	(??_MixColumns+1)& (0+255),w,b
 11904  0031B2  0100               	movlb	0	; force () banked
 11905  0031B4  2173               	addwfc	(MixColumns@state+1)& (0+255),w,b
 11906  0031B6  6EDA               	movwf	fsr2h,c
 11907  0031B8  50DF               	movf	indf2,w,c
 11908  0031BA  0100               	movlb	0	; force () banked
 11909  0031BC  6F7F               	movwf	MixColumns@t& (0+255),b
 11910                           
 11911                           ;../aes/aes_src/AES.c: 312:     Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^
      +                           (*state)[i][3] ;
 11912  0031BE  0100               	movlb	0	; force () banked
 11913  0031C0  5182               	movf	MixColumns@i& (0+255),w,b
 11914  0031C2  0D04               	mullw	4
 11915  0031C4  C072  F074         	movff	MixColumns@state,??_MixColumns
 11916  0031C8  C073  F075         	movff	MixColumns@state+1,??_MixColumns+1
 11917  0031CC  50F3               	movf	243,w,c
 11918  0031CE  0100               	movlb	0	; force () banked
 11919  0031D0  2774               	addwf	??_MixColumns& (0+255),f,b
 11920  0031D2  50F4               	movf	244,w,c
 11921  0031D4  2375               	addwfc	(??_MixColumns+1)& (0+255),f,b
 11922  0031D6  0E03               	movlw	3
 11923  0031D8  2574               	addwf	??_MixColumns& (0+255),w,b
 11924  0031DA  6ED9               	movwf	fsr2l,c
 11925  0031DC  0E00               	movlw	0
 11926  0031DE  2175               	addwfc	(??_MixColumns+1)& (0+255),w,b
 11927  0031E0  6EDA               	movwf	fsr2h,c
 11928  0031E2  50DF               	movf	indf2,w,c
 11929  0031E4  6F76               	movwf	(??_MixColumns+2)& (0+255),b
 11930  0031E6  0100               	movlb	0	; force () banked
 11931  0031E8  5182               	movf	MixColumns@i& (0+255),w,b
 11932  0031EA  0D04               	mullw	4
 11933  0031EC  C072  F077         	movff	MixColumns@state,??_MixColumns+3
 11934  0031F0  C073  F078         	movff	MixColumns@state+1,??_MixColumns+4
 11935  0031F4  50F3               	movf	243,w,c
 11936  0031F6  0100               	movlb	0	; force () banked
 11937  0031F8  2777               	addwf	(??_MixColumns+3)& (0+255),f,b
 11938  0031FA  50F4               	movf	244,w,c
 11939  0031FC  2378               	addwfc	(??_MixColumns+4)& (0+255),f,b
 11940  0031FE  0E02               	movlw	2
 11941  003200  2577               	addwf	(??_MixColumns+3)& (0+255),w,b
 11942  003202  6ED9               	movwf	fsr2l,c
 11943  003204  0E00               	movlw	0
 11944  003206  2178               	addwfc	(??_MixColumns+4)& (0+255),w,b
 11945  003208  6EDA               	movwf	fsr2h,c
 11946  00320A  50DF               	movf	indf2,w,c
 11947  00320C  6F79               	movwf	(??_MixColumns+5)& (0+255),b
 11948  00320E  0100               	movlb	0	; force () banked
 11949  003210  5182               	movf	MixColumns@i& (0+255),w,b
 11950  003212  0D04               	mullw	4
 11951  003214  C072  F07A         	movff	MixColumns@state,??_MixColumns+6
 11952  003218  C073  F07B         	movff	MixColumns@state+1,??_MixColumns+7
 11953  00321C  50F3               	movf	243,w,c
 11954  00321E  0100               	movlb	0	; force () banked
 11955  003220  277A               	addwf	(??_MixColumns+6)& (0+255),f,b
 11956  003222  50F4               	movf	244,w,c
 11957  003224  237B               	addwfc	(??_MixColumns+7)& (0+255),f,b
 11958  003226  0E01               	movlw	1
 11959  003228  257A               	addwf	(??_MixColumns+6)& (0+255),w,b
 11960  00322A  6ED9               	movwf	fsr2l,c
 11961  00322C  0E00               	movlw	0
 11962  00322E  217B               	addwfc	(??_MixColumns+7)& (0+255),w,b
 11963  003230  6EDA               	movwf	fsr2h,c
 11964  003232  50DF               	movf	indf2,w,c
 11965  003234  6F7C               	movwf	(??_MixColumns+8)& (0+255),b
 11966  003236  0100               	movlb	0	; force () banked
 11967  003238  5182               	movf	MixColumns@i& (0+255),w,b
 11968  00323A  0D04               	mullw	4
 11969  00323C  006F FFCC  F07D    	movff	prodl,??_MixColumns+9
 11970  003242  006F FFD0  F07E    	movff	prodh,??_MixColumns+10
 11971  003248  0100               	movlb	0	; force () banked
 11972  00324A  517D               	movf	(??_MixColumns+9)& (0+255),w,b
 11973  00324C  0100               	movlb	0	; force () banked
 11974  00324E  2572               	addwf	MixColumns@state& (0+255),w,b
 11975  003250  6ED9               	movwf	fsr2l,c
 11976  003252  0100               	movlb	0	; force () banked
 11977  003254  517E               	movf	(??_MixColumns+10)& (0+255),w,b
 11978  003256  0100               	movlb	0	; force () banked
 11979  003258  2173               	addwfc	(MixColumns@state+1)& (0+255),w,b
 11980  00325A  6EDA               	movwf	fsr2h,c
 11981  00325C  50DF               	movf	indf2,w,c
 11982  00325E  0100               	movlb	0	; force () banked
 11983  003260  197C               	xorwf	(??_MixColumns+8)& (0+255),w,b
 11984  003262  1979               	xorwf	(??_MixColumns+5)& (0+255),w,b
 11985  003264  1976               	xorwf	(??_MixColumns+2)& (0+255),w,b
 11986  003266  0100               	movlb	0	; force () banked
 11987  003268  6F80               	movwf	MixColumns@Tmp& (0+255),b
 11988                           
 11989                           ;../aes/aes_src/AES.c: 313:     Tm = (*state)[i][0] ^ (*state)[i][1] ; Tm = xtime(Tm); (
      +                          *state)[i][0] ^= Tm ^ Tmp ;
 11990  00326A  0100               	movlb	0	; force () banked
 11991  00326C  5182               	movf	MixColumns@i& (0+255),w,b
 11992  00326E  0D04               	mullw	4
 11993  003270  C072  F074         	movff	MixColumns@state,??_MixColumns
 11994  003274  C073  F075         	movff	MixColumns@state+1,??_MixColumns+1
 11995  003278  50F3               	movf	243,w,c
 11996  00327A  0100               	movlb	0	; force () banked
 11997  00327C  2774               	addwf	??_MixColumns& (0+255),f,b
 11998  00327E  50F4               	movf	244,w,c
 11999  003280  2375               	addwfc	(??_MixColumns+1)& (0+255),f,b
 12000  003282  0E01               	movlw	1
 12001  003284  2574               	addwf	??_MixColumns& (0+255),w,b
 12002  003286  6ED9               	movwf	fsr2l,c
 12003  003288  0E00               	movlw	0
 12004  00328A  2175               	addwfc	(??_MixColumns+1)& (0+255),w,b
 12005  00328C  6EDA               	movwf	fsr2h,c
 12006  00328E  50DF               	movf	indf2,w,c
 12007  003290  6F76               	movwf	(??_MixColumns+2)& (0+255),b
 12008  003292  0100               	movlb	0	; force () banked
 12009  003294  5182               	movf	MixColumns@i& (0+255),w,b
 12010  003296  0D04               	mullw	4
 12011  003298  006F FFCC  F077    	movff	prodl,??_MixColumns+3
 12012  00329E  006F FFD0  F078    	movff	prodh,??_MixColumns+4
 12013  0032A4  0100               	movlb	0	; force () banked
 12014  0032A6  5177               	movf	(??_MixColumns+3)& (0+255),w,b
 12015  0032A8  0100               	movlb	0	; force () banked
 12016  0032AA  2572               	addwf	MixColumns@state& (0+255),w,b
 12017  0032AC  6ED9               	movwf	fsr2l,c
 12018  0032AE  0100               	movlb	0	; force () banked
 12019  0032B0  5178               	movf	(??_MixColumns+4)& (0+255),w,b
 12020  0032B2  0100               	movlb	0	; force () banked
 12021  0032B4  2173               	addwfc	(MixColumns@state+1)& (0+255),w,b
 12022  0032B6  6EDA               	movwf	fsr2h,c
 12023  0032B8  50DF               	movf	indf2,w,c
 12024  0032BA  0100               	movlb	0	; force () banked
 12025  0032BC  1976               	xorwf	(??_MixColumns+2)& (0+255),w,b
 12026  0032BE  0100               	movlb	0	; force () banked
 12027  0032C0  6F81               	movwf	MixColumns@Tm& (0+255),b
 12028                           
 12029                           ; BSR set to: 0
 12030  0032C2  0100               	movlb	0	; force () banked
 12031  0032C4  5181               	movf	MixColumns@Tm& (0+255),w,b
 12032  0032C6  ECF7  F05D         	call	_xtime
 12033  0032CA  0100               	movlb	0	; force () banked
 12034  0032CC  6F81               	movwf	MixColumns@Tm& (0+255),b
 12035                           
 12036                           ; BSR set to: 0
 12037  0032CE  0100               	movlb	0	; force () banked
 12038  0032D0  5181               	movf	MixColumns@Tm& (0+255),w,b
 12039  0032D2  0100               	movlb	0	; force () banked
 12040  0032D4  1980               	xorwf	MixColumns@Tmp& (0+255),w,b
 12041  0032D6  0100               	movlb	0	; force () banked
 12042  0032D8  6F74               	movwf	??_MixColumns& (0+255),b
 12043  0032DA  0100               	movlb	0	; force () banked
 12044  0032DC  5182               	movf	MixColumns@i& (0+255),w,b
 12045  0032DE  0D04               	mullw	4
 12046  0032E0  006F FFCC  F075    	movff	prodl,??_MixColumns+1
 12047  0032E6  006F FFD0  F076    	movff	prodh,??_MixColumns+2
 12048  0032EC  0100               	movlb	0	; force () banked
 12049  0032EE  5175               	movf	(??_MixColumns+1)& (0+255),w,b
 12050  0032F0  0100               	movlb	0	; force () banked
 12051  0032F2  2572               	addwf	MixColumns@state& (0+255),w,b
 12052  0032F4  6ED9               	movwf	fsr2l,c
 12053  0032F6  0100               	movlb	0	; force () banked
 12054  0032F8  5176               	movf	(??_MixColumns+2)& (0+255),w,b
 12055  0032FA  0100               	movlb	0	; force () banked
 12056  0032FC  2173               	addwfc	(MixColumns@state+1)& (0+255),w,b
 12057  0032FE  6EDA               	movwf	fsr2h,c
 12058  003300  0100               	movlb	0	; force () banked
 12059  003302  5174               	movf	??_MixColumns& (0+255),w,b
 12060  003304  1ADF               	xorwf	indf2,f,c
 12061                           
 12062                           ; BSR set to: 0
 12063                           ;../aes/aes_src/AES.c: 314:     Tm = (*state)[i][1] ^ (*state)[i][2] ; Tm = xtime(Tm); (
      +                          *state)[i][1] ^= Tm ^ Tmp ;
 12064  003306  0100               	movlb	0	; force () banked
 12065  003308  5182               	movf	MixColumns@i& (0+255),w,b
 12066  00330A  0D04               	mullw	4
 12067  00330C  C072  F074         	movff	MixColumns@state,??_MixColumns
 12068  003310  C073  F075         	movff	MixColumns@state+1,??_MixColumns+1
 12069  003314  50F3               	movf	243,w,c
 12070  003316  0100               	movlb	0	; force () banked
 12071  003318  2774               	addwf	??_MixColumns& (0+255),f,b
 12072  00331A  50F4               	movf	244,w,c
 12073  00331C  2375               	addwfc	(??_MixColumns+1)& (0+255),f,b
 12074  00331E  0E02               	movlw	2
 12075  003320  2574               	addwf	??_MixColumns& (0+255),w,b
 12076  003322  6ED9               	movwf	fsr2l,c
 12077  003324  0E00               	movlw	0
 12078  003326  2175               	addwfc	(??_MixColumns+1)& (0+255),w,b
 12079  003328  6EDA               	movwf	fsr2h,c
 12080  00332A  50DF               	movf	indf2,w,c
 12081  00332C  6F76               	movwf	(??_MixColumns+2)& (0+255),b
 12082  00332E  0100               	movlb	0	; force () banked
 12083  003330  5182               	movf	MixColumns@i& (0+255),w,b
 12084  003332  0D04               	mullw	4
 12085  003334  C072  F077         	movff	MixColumns@state,??_MixColumns+3
 12086  003338  C073  F078         	movff	MixColumns@state+1,??_MixColumns+4
 12087  00333C  50F3               	movf	243,w,c
 12088  00333E  0100               	movlb	0	; force () banked
 12089  003340  2777               	addwf	(??_MixColumns+3)& (0+255),f,b
 12090  003342  50F4               	movf	244,w,c
 12091  003344  2378               	addwfc	(??_MixColumns+4)& (0+255),f,b
 12092  003346  0E01               	movlw	1
 12093  003348  2577               	addwf	(??_MixColumns+3)& (0+255),w,b
 12094  00334A  6ED9               	movwf	fsr2l,c
 12095  00334C  0E00               	movlw	0
 12096  00334E  2178               	addwfc	(??_MixColumns+4)& (0+255),w,b
 12097  003350  6EDA               	movwf	fsr2h,c
 12098  003352  50DF               	movf	indf2,w,c
 12099  003354  1976               	xorwf	(??_MixColumns+2)& (0+255),w,b
 12100  003356  0100               	movlb	0	; force () banked
 12101  003358  6F81               	movwf	MixColumns@Tm& (0+255),b
 12102                           
 12103                           ; BSR set to: 0
 12104  00335A  0100               	movlb	0	; force () banked
 12105  00335C  5181               	movf	MixColumns@Tm& (0+255),w,b
 12106  00335E  ECF7  F05D         	call	_xtime
 12107  003362  0100               	movlb	0	; force () banked
 12108  003364  6F81               	movwf	MixColumns@Tm& (0+255),b
 12109  003366  5181               	movf	MixColumns@Tm& (0+255),w,b
 12110  003368  0100               	movlb	0	; force () banked
 12111  00336A  1980               	xorwf	MixColumns@Tmp& (0+255),w,b
 12112  00336C  0100               	movlb	0	; force () banked
 12113  00336E  6F74               	movwf	??_MixColumns& (0+255),b
 12114  003370  0100               	movlb	0	; force () banked
 12115  003372  5182               	movf	MixColumns@i& (0+255),w,b
 12116  003374  0D04               	mullw	4
 12117  003376  C072  F075         	movff	MixColumns@state,??_MixColumns+1
 12118  00337A  C073  F076         	movff	MixColumns@state+1,??_MixColumns+2
 12119  00337E  50F3               	movf	243,w,c
 12120  003380  0100               	movlb	0	; force () banked
 12121  003382  2775               	addwf	(??_MixColumns+1)& (0+255),f,b
 12122  003384  50F4               	movf	244,w,c
 12123  003386  2376               	addwfc	(??_MixColumns+2)& (0+255),f,b
 12124  003388  0E01               	movlw	1
 12125  00338A  2575               	addwf	(??_MixColumns+1)& (0+255),w,b
 12126  00338C  6ED9               	movwf	fsr2l,c
 12127  00338E  0E00               	movlw	0
 12128  003390  2176               	addwfc	(??_MixColumns+2)& (0+255),w,b
 12129  003392  6EDA               	movwf	fsr2h,c
 12130  003394  5174               	movf	??_MixColumns& (0+255),w,b
 12131  003396  1ADF               	xorwf	indf2,f,c
 12132                           
 12133                           ;../aes/aes_src/AES.c: 315:     Tm = (*state)[i][2] ^ (*state)[i][3] ; Tm = xtime(Tm); (
      +                          *state)[i][2] ^= Tm ^ Tmp ;
 12134  003398  0100               	movlb	0	; force () banked
 12135  00339A  5182               	movf	MixColumns@i& (0+255),w,b
 12136  00339C  0D04               	mullw	4
 12137  00339E  C072  F074         	movff	MixColumns@state,??_MixColumns
 12138  0033A2  C073  F075         	movff	MixColumns@state+1,??_MixColumns+1
 12139  0033A6  50F3               	movf	243,w,c
 12140  0033A8  0100               	movlb	0	; force () banked
 12141  0033AA  2774               	addwf	??_MixColumns& (0+255),f,b
 12142  0033AC  50F4               	movf	244,w,c
 12143  0033AE  2375               	addwfc	(??_MixColumns+1)& (0+255),f,b
 12144  0033B0  0E03               	movlw	3
 12145  0033B2  2574               	addwf	??_MixColumns& (0+255),w,b
 12146  0033B4  6ED9               	movwf	fsr2l,c
 12147  0033B6  0E00               	movlw	0
 12148  0033B8  2175               	addwfc	(??_MixColumns+1)& (0+255),w,b
 12149  0033BA  6EDA               	movwf	fsr2h,c
 12150  0033BC  50DF               	movf	indf2,w,c
 12151  0033BE  6F76               	movwf	(??_MixColumns+2)& (0+255),b
 12152  0033C0  0100               	movlb	0	; force () banked
 12153  0033C2  5182               	movf	MixColumns@i& (0+255),w,b
 12154  0033C4  0D04               	mullw	4
 12155  0033C6  C072  F077         	movff	MixColumns@state,??_MixColumns+3
 12156  0033CA  C073  F078         	movff	MixColumns@state+1,??_MixColumns+4
 12157  0033CE  50F3               	movf	243,w,c
 12158  0033D0  0100               	movlb	0	; force () banked
 12159  0033D2  2777               	addwf	(??_MixColumns+3)& (0+255),f,b
 12160  0033D4  50F4               	movf	244,w,c
 12161  0033D6  2378               	addwfc	(??_MixColumns+4)& (0+255),f,b
 12162  0033D8  0E02               	movlw	2
 12163  0033DA  2577               	addwf	(??_MixColumns+3)& (0+255),w,b
 12164  0033DC  6ED9               	movwf	fsr2l,c
 12165  0033DE  0E00               	movlw	0
 12166  0033E0  2178               	addwfc	(??_MixColumns+4)& (0+255),w,b
 12167  0033E2  6EDA               	movwf	fsr2h,c
 12168  0033E4  50DF               	movf	indf2,w,c
 12169  0033E6  1976               	xorwf	(??_MixColumns+2)& (0+255),w,b
 12170  0033E8  0100               	movlb	0	; force () banked
 12171  0033EA  6F81               	movwf	MixColumns@Tm& (0+255),b
 12172                           
 12173                           ; BSR set to: 0
 12174  0033EC  0100               	movlb	0	; force () banked
 12175  0033EE  5181               	movf	MixColumns@Tm& (0+255),w,b
 12176  0033F0  ECF7  F05D         	call	_xtime
 12177  0033F4  0100               	movlb	0	; force () banked
 12178  0033F6  6F81               	movwf	MixColumns@Tm& (0+255),b
 12179                           
 12180                           ; BSR set to: 0
 12181  0033F8  0100               	movlb	0	; force () banked
 12182  0033FA  5181               	movf	MixColumns@Tm& (0+255),w,b
 12183  0033FC  0100               	movlb	0	; force () banked
 12184  0033FE  1980               	xorwf	MixColumns@Tmp& (0+255),w,b
 12185  003400  0100               	movlb	0	; force () banked
 12186  003402  6F74               	movwf	??_MixColumns& (0+255),b
 12187  003404  0100               	movlb	0	; force () banked
 12188  003406  5182               	movf	MixColumns@i& (0+255),w,b
 12189  003408  0D04               	mullw	4
 12190  00340A  C072  F075         	movff	MixColumns@state,??_MixColumns+1
 12191  00340E  C073  F076         	movff	MixColumns@state+1,??_MixColumns+2
 12192  003412  50F3               	movf	243,w,c
 12193  003414  0100               	movlb	0	; force () banked
 12194  003416  2775               	addwf	(??_MixColumns+1)& (0+255),f,b
 12195  003418  50F4               	movf	244,w,c
 12196  00341A  2376               	addwfc	(??_MixColumns+2)& (0+255),f,b
 12197  00341C  0E02               	movlw	2
 12198  00341E  2575               	addwf	(??_MixColumns+1)& (0+255),w,b
 12199  003420  6ED9               	movwf	fsr2l,c
 12200  003422  0E00               	movlw	0
 12201  003424  2176               	addwfc	(??_MixColumns+2)& (0+255),w,b
 12202  003426  6EDA               	movwf	fsr2h,c
 12203  003428  5174               	movf	??_MixColumns& (0+255),w,b
 12204  00342A  1ADF               	xorwf	indf2,f,c
 12205                           
 12206                           ; BSR set to: 0
 12207                           ;../aes/aes_src/AES.c: 316:     Tm = (*state)[i][3] ^ t ; Tm = xtime(Tm); (*state)[i][3]
      +                           ^= Tm ^ Tmp ;
 12208  00342C  0100               	movlb	0	; force () banked
 12209  00342E  5182               	movf	MixColumns@i& (0+255),w,b
 12210  003430  0D04               	mullw	4
 12211  003432  C072  F074         	movff	MixColumns@state,??_MixColumns
 12212  003436  C073  F075         	movff	MixColumns@state+1,??_MixColumns+1
 12213  00343A  50F3               	movf	243,w,c
 12214  00343C  0100               	movlb	0	; force () banked
 12215  00343E  2774               	addwf	??_MixColumns& (0+255),f,b
 12216  003440  50F4               	movf	244,w,c
 12217  003442  2375               	addwfc	(??_MixColumns+1)& (0+255),f,b
 12218  003444  0E03               	movlw	3
 12219  003446  2574               	addwf	??_MixColumns& (0+255),w,b
 12220  003448  6ED9               	movwf	fsr2l,c
 12221  00344A  0E00               	movlw	0
 12222  00344C  2175               	addwfc	(??_MixColumns+1)& (0+255),w,b
 12223  00344E  6EDA               	movwf	fsr2h,c
 12224  003450  50DF               	movf	indf2,w,c
 12225  003452  0100               	movlb	0	; force () banked
 12226  003454  197F               	xorwf	MixColumns@t& (0+255),w,b
 12227  003456  0100               	movlb	0	; force () banked
 12228  003458  6F81               	movwf	MixColumns@Tm& (0+255),b
 12229                           
 12230                           ; BSR set to: 0
 12231  00345A  0100               	movlb	0	; force () banked
 12232  00345C  5181               	movf	MixColumns@Tm& (0+255),w,b
 12233  00345E  ECF7  F05D         	call	_xtime
 12234  003462  0100               	movlb	0	; force () banked
 12235  003464  6F81               	movwf	MixColumns@Tm& (0+255),b
 12236  003466  5181               	movf	MixColumns@Tm& (0+255),w,b
 12237  003468  0100               	movlb	0	; force () banked
 12238  00346A  1980               	xorwf	MixColumns@Tmp& (0+255),w,b
 12239  00346C  0100               	movlb	0	; force () banked
 12240  00346E  6F74               	movwf	??_MixColumns& (0+255),b
 12241  003470  0100               	movlb	0	; force () banked
 12242  003472  5182               	movf	MixColumns@i& (0+255),w,b
 12243  003474  0D04               	mullw	4
 12244  003476  C072  F075         	movff	MixColumns@state,??_MixColumns+1
 12245  00347A  C073  F076         	movff	MixColumns@state+1,??_MixColumns+2
 12246  00347E  50F3               	movf	243,w,c
 12247  003480  0100               	movlb	0	; force () banked
 12248  003482  2775               	addwf	(??_MixColumns+1)& (0+255),f,b
 12249  003484  50F4               	movf	244,w,c
 12250  003486  2376               	addwfc	(??_MixColumns+2)& (0+255),f,b
 12251  003488  0E03               	movlw	3
 12252  00348A  2575               	addwf	(??_MixColumns+1)& (0+255),w,b
 12253  00348C  6ED9               	movwf	fsr2l,c
 12254  00348E  0E00               	movlw	0
 12255  003490  2176               	addwfc	(??_MixColumns+2)& (0+255),w,b
 12256  003492  6EDA               	movwf	fsr2h,c
 12257  003494  5174               	movf	??_MixColumns& (0+255),w,b
 12258  003496  1ADF               	xorwf	indf2,f,c
 12259                           
 12260                           ; BSR set to: 0
 12261                           ;../aes/aes_src/AES.c: 317:   }
 12262  003498  0100               	movlb	0	; force () banked
 12263  00349A  2B82               	incf	MixColumns@i& (0+255),f,b
 12264  00349C                     l17728:
 12265                           
 12266                           ; BSR set to: 0
 12267  00349C  0E03               	movlw	3
 12268  00349E  0100               	movlb	0	; force () banked
 12269  0034A0  6582               	cpfsgt	MixColumns@i& (0+255),b
 12270  0034A2  D677               	goto	l17708
 12271  0034A4  0012               	return	
 12272  0034A6                     __end_of_MixColumns:
 12273                           	callstack 0
 12274                           
 12275 ;; *************** function _NWK_DataReq *****************
 12276 ;; Defined at:
 12277 ;;		line 87 in file "../nwk/nwk_src/nwkDataReq.c"
 12278 ;; Parameters:    Size  Location     Type
 12279 ;;  req             2   17[BANK0 ] PTR struct NWK_DataReq_t
 12280 ;;		 -> tx_buffer(264), 
 12281 ;; Auto vars:     Size  Location     Type
 12282 ;;		None
 12283 ;; Return value:  Size  Location     Type
 12284 ;;                  1    wreg      void 
 12285 ;; Registers used:
 12286 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12287 ;; Tracked objects:
 12288 ;;		On entry : 3F/0
 12289 ;;		On exit  : 3F/1
 12290 ;;		Unchanged: 0/0
 12291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12292 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12295 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12296 ;;Total ram usage:        2 bytes
 12297 ;; Hardware stack levels used:    1
 12298 ;; Hardware stack levels required when called:   11
 12299 ;; This function calls:
 12300 ;;		Nothing
 12301 ;; This function is called by:
 12302 ;;		_cmdSetSink
 12303 ;;		_handle_tx_regs
 12304 ;; This function uses a non-reentrant model
 12305 ;;
 12306                           
 12307                           	psect	text45
 12308  009C64                     __ptext45:
 12309                           	callstack 0
 12310  009C64                     _NWK_DataReq:
 12311                           	callstack 15
 12312                           
 12313                           ;../nwk/nwk_src/nwkDataReq.c: 87: void NWK_DataReq(NWK_DataReq_t *req);../nwk/nwk_src/nw
      +                          kDataReq.c: 88: {;../nwk/nwk_src/nwkDataReq.c: 89:   req->state = NWK_DATA_REQ_STATE_INI
      +                          TIAL;
 12314                           
 12315                           ; BSR set to: 0
 12316                           ;incstack = 0
 12317  009C64  0100               	movlb	0	; force () banked
 12318  009C66  EE20 F004          	lfsr	2,4
 12319  009C6A  5171               	movf	NWK_DataReq@req& (0+255),w,b
 12320  009C6C  26D9               	addwf	fsr2l,f,c
 12321  009C6E  5172               	movf	(NWK_DataReq@req+1)& (0+255),w,b
 12322  009C70  22DA               	addwfc	fsr2h,f,c
 12323  009C72  0E00               	movlw	0
 12324  009C74  6EDF               	movwf	indf2,c
 12325                           
 12326                           ;../nwk/nwk_src/nwkDataReq.c: 90:   req->status = NWK_SUCCESS_STATUS;
 12327  009C76  EE20 F011          	lfsr	2,17
 12328  009C7A  5171               	movf	NWK_DataReq@req& (0+255),w,b
 12329  009C7C  26D9               	addwf	fsr2l,f,c
 12330  009C7E  5172               	movf	(NWK_DataReq@req+1)& (0+255),w,b
 12331  009C80  22DA               	addwfc	fsr2h,f,c
 12332  009C82  0E00               	movlw	0
 12333  009C84  6EDF               	movwf	indf2,c
 12334                           
 12335                           ;../nwk/nwk_src/nwkDataReq.c: 91:   req->frame = (0);
 12336  009C86  EE20 F002          	lfsr	2,2
 12337  009C8A  5171               	movf	NWK_DataReq@req& (0+255),w,b
 12338  009C8C  26D9               	addwf	fsr2l,f,c
 12339  009C8E  5172               	movf	(NWK_DataReq@req+1)& (0+255),w,b
 12340  009C90  22DA               	addwfc	fsr2h,f,c
 12341  009C92  0E00               	movlw	0
 12342  009C94  6EDE               	movwf	postinc2,c
 12343  009C96  0E00               	movlw	0
 12344  009C98  6EDD               	movwf	postdec2,c
 12345                           
 12346                           ; BSR set to: 0
 12347                           ;../nwk/nwk_src/nwkDataReq.c: 93:   nwkIb.lock++;
 12348  009C9A  0102               	movlb	2	; force () banked
 12349  009C9C  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 12350  009C9E  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 12351                           
 12352                           ; BSR set to: 2
 12353                           ;../nwk/nwk_src/nwkDataReq.c: 95:   if ((0) == nwkDataReqQueue)
 12354  009CA0  0101               	movlb	1	; force () banked
 12355  009CA2  51D7               	movf	_nwkDataReqQueue& (0+255),w,b
 12356  009CA4  11D8               	iorwf	(_nwkDataReqQueue+1)& (0+255),w,b
 12357  009CA6  A4D8               	btfss	status,2,c
 12358  009CA8  D00F               	goto	l13228
 12359                           
 12360                           ; BSR set to: 1
 12361                           ;../nwk/nwk_src/nwkDataReq.c: 96:   {;../nwk/nwk_src/nwkDataReq.c: 97:     req->next = (
      +                          0);
 12362  009CAA  0060  F1C7  FFD9   	movff	NWK_DataReq@req,fsr2l
 12363  009CB0  0060  F1CB  FFDA   	movff	NWK_DataReq@req+1,fsr2h
 12364  009CB6  0E00               	movlw	0
 12365  009CB8  6EDE               	movwf	postinc2,c
 12366  009CBA  0E00               	movlw	0
 12367  009CBC  6EDD               	movwf	postdec2,c
 12368                           
 12369                           ; BSR set to: 1
 12370                           ;../nwk/nwk_src/nwkDataReq.c: 98:     nwkDataReqQueue = req;
 12371  009CBE  C071  F1D7         	movff	NWK_DataReq@req,_nwkDataReqQueue
 12372  009CC2  C072  F1D8         	movff	NWK_DataReq@req+1,_nwkDataReqQueue+1
 12373                           
 12374                           ;../nwk/nwk_src/nwkDataReq.c: 99:   }
 12375  009CC6  0012               	return	
 12376  009CC8                     l13228:
 12377                           
 12378                           ; BSR set to: 1
 12379                           ;../nwk/nwk_src/nwkDataReq.c: 101:   {;../nwk/nwk_src/nwkDataReq.c: 102:     req->next =
      +                           nwkDataReqQueue;
 12380  009CC8  0060  F1C7  FFD9   	movff	NWK_DataReq@req,fsr2l
 12381  009CCE  0060  F1CB  FFDA   	movff	NWK_DataReq@req+1,fsr2h
 12382  009CD4  0060  F75F  FFDE   	movff	_nwkDataReqQueue,postinc2
 12383  009CDA  0060  F763  FFDD   	movff	_nwkDataReqQueue+1,postdec2
 12384                           
 12385                           ; BSR set to: 1
 12386                           ;../nwk/nwk_src/nwkDataReq.c: 103:     nwkDataReqQueue = req;
 12387  009CE0  C071  F1D7         	movff	NWK_DataReq@req,_nwkDataReqQueue
 12388  009CE4  C072  F1D8         	movff	NWK_DataReq@req+1,_nwkDataReqQueue+1
 12389                           
 12390                           ; BSR set to: 1
 12391  009CE8  0012               	return		;funcret
 12392  009CEA                     __end_of_NWK_DataReq:
 12393                           	callstack 0
 12394                           
 12395 ;; *************** function _handle_rx_regs *****************
 12396 ;; Defined at:
 12397 ;;		line 2223 in file "../app/app_src/application.c"
 12398 ;; Parameters:    Size  Location     Type
 12399 ;;		None
 12400 ;; Auto vars:     Size  Location     Type
 12401 ;;  buf_id          1   27[BANK0 ] unsigned char 
 12402 ;;  count           1   26[BANK0 ] unsigned char 
 12403 ;; Return value:  Size  Location     Type
 12404 ;;                  1    wreg      void 
 12405 ;; Registers used:
 12406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12407 ;; Tracked objects:
 12408 ;;		On entry : 3F/1
 12409 ;;		On exit  : 3F/0
 12410 ;;		Unchanged: 0/0
 12411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12413 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12414 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12415 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12416 ;;Total ram usage:        3 bytes
 12417 ;; Hardware stack levels used:    1
 12418 ;; Hardware stack levels required when called:   12
 12419 ;; This function calls:
 12420 ;;		_CircularBufferSize
 12421 ;; This function is called by:
 12422 ;;		_MBRTUStack
 12423 ;; This function uses a non-reentrant model
 12424 ;;
 12425                           
 12426                           	psect	text46
 12427  00A962                     __ptext46:
 12428                           	callstack 0
 12429  00A962                     _handle_rx_regs:
 12430                           	callstack 16
 12431                           
 12432                           ;../app/app_src/application.c: 2224:     uint8_t count = 0, buf_id = 0;
 12433                           
 12434                           ; BSR set to: 1
 12435                           ;incstack = 0
 12436  00A962  0E00               	movlw	0
 12437  00A964  0100               	movlb	0	; force () banked
 12438  00A966  6F7A               	movwf	handle_rx_regs@count& (0+255),b
 12439  00A968  0E00               	movlw	0
 12440  00A96A  0100               	movlb	0	; force () banked
 12441  00A96C  6F7B               	movwf	handle_rx_regs@buf_id& (0+255),b
 12442                           
 12443                           ;../app/app_src/application.c: 2225:     while(buf_id++ < 3){
 12444  00A96E  D00D               	goto	l19336
 12445  00A970                     l19332:
 12446                           
 12447                           ; BSR set to: 0
 12448                           ;../app/app_src/application.c: 2226:         if(!rx_buffer[buf_id].free){
 12449  00A970  0100               	movlb	0	; force () banked
 12450  00A972  517B               	movf	handle_rx_regs@buf_id& (0+255),w,b
 12451  00A974  0D7B               	mullw	123
 12452  00A976  0E52               	movlw	low _rx_buffer
 12453  00A978  24F3               	addwf	243,w,c
 12454  00A97A  6ED9               	movwf	fsr2l,c
 12455  00A97C  0E0D               	movlw	high _rx_buffer
 12456  00A97E  20F4               	addwfc	prodh,w,c
 12457  00A980  6EDA               	movwf	fsr2h,c
 12458  00A982  B0DF               	btfsc	indf2,0,c
 12459  00A984  D002               	goto	l19336
 12460                           
 12461                           ; BSR set to: 0
 12462                           ;../app/app_src/application.c: 2227:             count++;
 12463  00A986  0100               	movlb	0	; force () banked
 12464  00A988  2B7A               	incf	handle_rx_regs@count& (0+255),f,b
 12465  00A98A                     l19336:
 12466                           
 12467                           ; BSR set to: 0
 12468                           ;../app/app_src/application.c: 2225:     while(buf_id++ < 3){
 12469  00A98A  0100               	movlb	0	; force () banked
 12470  00A98C  2B7B               	incf	handle_rx_regs@buf_id& (0+255),f,b
 12471  00A98E  057B               	decf	handle_rx_regs@buf_id& (0+255),w,b
 12472  00A990  0100               	movlb	0	; force () banked
 12473  00A992  6F79               	movwf	??_handle_rx_regs& (0+255),b
 12474  00A994  0E02               	movlw	2
 12475  00A996  6579               	cpfsgt	??_handle_rx_regs& (0+255),b
 12476  00A998  D7EB               	goto	l19332
 12477                           
 12478                           ; BSR set to: 0
 12479                           ;../app/app_src/application.c: 2230:     read_only_mb_regs[RO_RX_MSG_COUNT] =
 12480  00A99A  0ED6               	movlw	low _rx_buffer_queue_context
 12481  00A99C  0100               	movlb	0	; force () banked
 12482  00A99E  6F71               	movwf	CircularBufferSize@ctx& (0+255),b
 12483  00A9A0  0E02               	movlw	high _rx_buffer_queue_context
 12484  00A9A2  6F72               	movwf	(CircularBufferSize@ctx+1)& (0+255),b
 12485  00A9A4  ECD0  F051         	call	_CircularBufferSize	;wreg free
 12486  00A9A8  C071  F36A         	movff	?_CircularBufferSize,_read_only_mb_regs+26
 12487  00A9AC  C072  F36B         	movff	?_CircularBufferSize+1,_read_only_mb_regs+27
 12488                           
 12489                           ; BSR set to: 0
 12490  00A9B0  0012               	return		;funcret
 12491  00A9B2                     __end_of_handle_rx_regs:
 12492                           	callstack 0
 12493                           
 12494 ;; *************** function _handle_rw_regs *****************
 12495 ;; Defined at:
 12496 ;;		line 2040 in file "../app/app_src/application.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;		None
 12499 ;; Auto vars:     Size  Location     Type
 12500 ;;  msg_ack_obj     4   77[BANK0 ] struct msg_ack_t
 12501 ;;  i               1   76[BANK0 ] unsigned char 
 12502 ;; Return value:  Size  Location     Type
 12503 ;;                  1    wreg      void 
 12504 ;; Registers used:
 12505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 12506 ;; Tracked objects:
 12507 ;;		On entry : 3F/1
 12508 ;;		On exit  : 3F/2
 12509 ;;		Unchanged: 0/0
 12510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12512 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12513 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12514 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12515 ;;Total ram usage:        9 bytes
 12516 ;; Hardware stack levels used:    1
 12517 ;; Hardware stack levels required when called:   15
 12518 ;; This function calls:
 12519 ;;		_CircularBufferEmpty
 12520 ;;		_CircularBufferPopFront
 12521 ;;		_NWK_GroupAdd
 12522 ;;		_PHY_Get_Packet_Rssi_Threshold
 12523 ;;		_PHY_Set_Packet_Rssi_Threshold
 12524 ;;		_eMBDisable
 12525 ;;		_eMBEnable
 12526 ;;		_eMBInit
 12527 ;;		_nwkGroupInit
 12528 ;;		_set_eeprom_sync
 12529 ;;		_set_parity
 12530 ;;		_set_uart_baud
 12531 ;; This function is called by:
 12532 ;;		_MBRTUStack
 12533 ;; This function uses a non-reentrant model
 12534 ;;
 12535                           
 12536                           	psect	text47
 12537  00148E                     __ptext47:
 12538                           	callstack 0
 12539  00148E                     _handle_rw_regs:
 12540                           	callstack 13
 12541                           
 12542                           ;../app/app_src/application.c: 2042:     if(currentNetID != read_write_mb_regs[RW_NET_ID
      +                          ]){
 12543                           
 12544                           ; BSR set to: 0
 12545                           ;incstack = 0
 12546  00148E  0101               	movlb	1	; force () banked
 12547  001490  51FF               	movf	_currentNetID& (0+255),w,b
 12548  001492  0100               	movlb	0	; force () banked
 12549  001494  6FA8               	movwf	??_handle_rw_regs& (0+255),b
 12550  001496  6BA9               	clrf	(??_handle_rw_regs+1)& (0+255),b
 12551  001498  0102               	movlb	2	; force () banked
 12552  00149A  5172               	movf	(_read_write_mb_regs+2)& (0+255),w,b
 12553  00149C  0100               	movlb	0	; force () banked
 12554  00149E  19A8               	xorwf	??_handle_rw_regs& (0+255),w,b
 12555  0014A0  E106               	bnz	u17180
 12556  0014A2  0102               	movlb	2	; force () banked
 12557  0014A4  5173               	movf	(_read_write_mb_regs+3)& (0+255),w,b
 12558  0014A6  0100               	movlb	0	; force () banked
 12559  0014A8  19A9               	xorwf	(??_handle_rw_regs+1)& (0+255),w,b
 12560  0014AA  B4D8               	btfsc	status,2,c
 12561  0014AC  D008               	goto	l19140
 12562  0014AE                     u17180:
 12563                           
 12564                           ; BSR set to: 0
 12565                           ;../app/app_src/application.c: 2043:         currentNetID = read_write_mb_regs[RW_NET_ID
      +                          ];
 12566  0014AE  C272  F1FF         	movff	_read_write_mb_regs+2,_currentNetID
 12567                           
 12568                           ; BSR set to: 0
 12569                           ;../app/app_src/application.c: 2045:         set_eeprom_sync(EEPROM_NETID);
 12570  0014B2  0E04               	movlw	4
 12571  0014B4  EC21  F040         	call	_set_eeprom_sync
 12572                           
 12573                           ; BSR set to: 0
 12574                           ;../app/app_src/application.c: 2046:         need_radio_reset = 1;
 12575  0014B8  0E01               	movlw	1
 12576  0014BA  0101               	movlb	1	; force () banked
 12577  0014BC  6FEC               	movwf	_need_radio_reset& (0+255),b
 12578  0014BE                     l19140:
 12579                           
 12580                           ;../app/app_src/application.c: 2049:     if(TXPower != read_write_mb_regs[RW_TX_POW]){
 12581  0014BE  0100               	movlb	0	; force () banked
 12582  0014C0  51DC               	movf	_TXPower& (0+255),w,b
 12583  0014C2  0100               	movlb	0	; force () banked
 12584  0014C4  6FA8               	movwf	??_handle_rw_regs& (0+255),b
 12585  0014C6  6BA9               	clrf	(??_handle_rw_regs+1)& (0+255),b
 12586  0014C8  0102               	movlb	2	; force () banked
 12587  0014CA  5174               	movf	(_read_write_mb_regs+4)& (0+255),w,b
 12588  0014CC  0100               	movlb	0	; force () banked
 12589  0014CE  19A8               	xorwf	??_handle_rw_regs& (0+255),w,b
 12590  0014D0  E106               	bnz	u17190
 12591  0014D2  0102               	movlb	2	; force () banked
 12592  0014D4  5175               	movf	(_read_write_mb_regs+5)& (0+255),w,b
 12593  0014D6  0100               	movlb	0	; force () banked
 12594  0014D8  19A9               	xorwf	(??_handle_rw_regs+1)& (0+255),w,b
 12595  0014DA  B4D8               	btfsc	status,2,c
 12596  0014DC  D01B               	goto	l19152
 12597  0014DE                     u17190:
 12598                           
 12599                           ; BSR set to: 0
 12600                           ;../app/app_src/application.c: 2050:         if((read_write_mb_regs[RW_TX_POW] >= 2) &&
 12601  0014DE  0102               	movlb	2	; force () banked
 12602  0014E0  5175               	movf	(_read_write_mb_regs+5)& (0+255),w,b
 12603  0014E2  E104               	bnz	u17200
 12604  0014E4  0E02               	movlw	2
 12605  0014E6  5D74               	subwf	(_read_write_mb_regs+4)& (0+255),w,b
 12606  0014E8  A0D8               	btfss	status,0,c
 12607  0014EA  D010               	goto	l608
 12608  0014EC                     u17200:
 12609                           
 12610                           ; BSR set to: 2
 12611  0014EC  0102               	movlb	2	; force () banked
 12612  0014EE  5175               	movf	(_read_write_mb_regs+5)& (0+255),w,b
 12613  0014F0  E10D               	bnz	l608
 12614  0014F2  0E12               	movlw	18
 12615  0014F4  5D74               	subwf	(_read_write_mb_regs+4)& (0+255),w,b
 12616  0014F6  B0D8               	btfsc	status,0,c
 12617  0014F8  D009               	goto	l608
 12618                           
 12619                           ; BSR set to: 2
 12620                           ;../app/app_src/application.c: 2051:             (read_write_mb_regs[RW_TX_POW] <= 17)){
      +                          ;../app/app_src/application.c: 2052:             TXPower = read_write_mb_regs[RW_TX_POW]
      +                          ;
 12621  0014FA  C274  F0DC         	movff	_read_write_mb_regs+4,_TXPower
 12622                           
 12623                           ; BSR set to: 2
 12624                           ;../app/app_src/application.c: 2053:             set_eeprom_sync(EEPROM_TX_POWER);
 12625  0014FE  0E07               	movlw	7
 12626  001500  EC21  F040         	call	_set_eeprom_sync
 12627                           
 12628                           ; BSR set to: 0
 12629                           ;../app/app_src/application.c: 2054:             need_radio_reset = 1;
 12630  001504  0E01               	movlw	1
 12631  001506  0101               	movlb	1	; force () banked
 12632  001508  6FEC               	movwf	_need_radio_reset& (0+255),b
 12633                           
 12634                           ;../app/app_src/application.c: 2055:         }
 12635  00150A  D004               	goto	l19152
 12636  00150C                     l608:
 12637                           
 12638                           ; BSR set to: 2
 12639                           ;../app/app_src/application.c: 2057:             read_write_mb_regs[RW_TX_POW] = TXPower
      +                          ;
 12640  00150C  C0DC  F274         	movff	_TXPower,_read_write_mb_regs+4
 12641  001510  0102               	movlb	2	; force () banked
 12642  001512  6B75               	clrf	(_read_write_mb_regs+5)& (0+255),b
 12643  001514                     l19152:
 12644                           
 12645                           ;../app/app_src/application.c: 2061:     if(current_sf != read_write_mb_regs[RW_SF]){
 12646  001514  0100               	movlb	0	; force () banked
 12647  001516  51DE               	movf	_current_sf& (0+255),w,b
 12648  001518  0100               	movlb	0	; force () banked
 12649  00151A  6FA8               	movwf	??_handle_rw_regs& (0+255),b
 12650  00151C  6BA9               	clrf	(??_handle_rw_regs+1)& (0+255),b
 12651  00151E  0102               	movlb	2	; force () banked
 12652  001520  5176               	movf	(_read_write_mb_regs+6)& (0+255),w,b
 12653  001522  0100               	movlb	0	; force () banked
 12654  001524  19A8               	xorwf	??_handle_rw_regs& (0+255),w,b
 12655  001526  E106               	bnz	u17220
 12656  001528  0102               	movlb	2	; force () banked
 12657  00152A  5177               	movf	(_read_write_mb_regs+7)& (0+255),w,b
 12658  00152C  0100               	movlb	0	; force () banked
 12659  00152E  19A9               	xorwf	(??_handle_rw_regs+1)& (0+255),w,b
 12660  001530  B4D8               	btfsc	status,2,c
 12661  001532  D01B               	goto	l19164
 12662  001534                     u17220:
 12663                           
 12664                           ; BSR set to: 0
 12665                           ;../app/app_src/application.c: 2062:         if((read_write_mb_regs[RW_SF] >= 7) &&
 12666  001534  0102               	movlb	2	; force () banked
 12667  001536  5177               	movf	(_read_write_mb_regs+7)& (0+255),w,b
 12668  001538  E104               	bnz	u17230
 12669  00153A  0E07               	movlw	7
 12670  00153C  5D76               	subwf	(_read_write_mb_regs+6)& (0+255),w,b
 12671  00153E  A0D8               	btfss	status,0,c
 12672  001540  D010               	goto	l611
 12673  001542                     u17230:
 12674                           
 12675                           ; BSR set to: 2
 12676  001542  0102               	movlb	2	; force () banked
 12677  001544  5177               	movf	(_read_write_mb_regs+7)& (0+255),w,b
 12678  001546  E10D               	bnz	l611
 12679  001548  0E0D               	movlw	13
 12680  00154A  5D76               	subwf	(_read_write_mb_regs+6)& (0+255),w,b
 12681  00154C  B0D8               	btfsc	status,0,c
 12682  00154E  D009               	goto	l611
 12683                           
 12684                           ; BSR set to: 2
 12685                           ;../app/app_src/application.c: 2063:             (read_write_mb_regs[RW_SF] <= 12)){;../
      +                          app/app_src/application.c: 2064:             current_sf = read_write_mb_regs[RW_SF];
 12686  001550  C276  F0DE         	movff	_read_write_mb_regs+6,_current_sf
 12687                           
 12688                           ; BSR set to: 2
 12689                           ;../app/app_src/application.c: 2065:             set_eeprom_sync(EEPROM_SF);
 12690  001554  0E0B               	movlw	11
 12691  001556  EC21  F040         	call	_set_eeprom_sync
 12692                           
 12693                           ; BSR set to: 0
 12694                           ;../app/app_src/application.c: 2066:             need_radio_reset = 1;
 12695  00155A  0E01               	movlw	1
 12696  00155C  0101               	movlb	1	; force () banked
 12697  00155E  6FEC               	movwf	_need_radio_reset& (0+255),b
 12698                           
 12699                           ;../app/app_src/application.c: 2067:         }
 12700  001560  D004               	goto	l19164
 12701  001562                     l611:
 12702                           
 12703                           ; BSR set to: 2
 12704                           ;../app/app_src/application.c: 2069:             read_write_mb_regs[RW_SF] = current_sf;
 12705  001562  C0DE  F276         	movff	_current_sf,_read_write_mb_regs+6
 12706  001566  0102               	movlb	2	; force () banked
 12707  001568  6B77               	clrf	(_read_write_mb_regs+7)& (0+255),b
 12708  00156A                     l19164:
 12709                           
 12710                           ;../app/app_src/application.c: 2073:     if(channel != read_write_mb_regs[RW_RF_CH]){
 12711  00156A  0100               	movlb	0	; force () banked
 12712  00156C  51DD               	movf	_channel& (0+255),w,b
 12713  00156E  0100               	movlb	0	; force () banked
 12714  001570  6FA8               	movwf	??_handle_rw_regs& (0+255),b
 12715  001572  6BA9               	clrf	(??_handle_rw_regs+1)& (0+255),b
 12716  001574  0102               	movlb	2	; force () banked
 12717  001576  517C               	movf	(_read_write_mb_regs+12)& (0+255),w,b
 12718  001578  0100               	movlb	0	; force () banked
 12719  00157A  19A8               	xorwf	??_handle_rw_regs& (0+255),w,b
 12720  00157C  E106               	bnz	u17250
 12721  00157E  0102               	movlb	2	; force () banked
 12722  001580  517D               	movf	(_read_write_mb_regs+13)& (0+255),w,b
 12723  001582  0100               	movlb	0	; force () banked
 12724  001584  19A9               	xorwf	(??_handle_rw_regs+1)& (0+255),w,b
 12725  001586  B4D8               	btfsc	status,2,c
 12726  001588  D014               	goto	l19174
 12727  00158A                     u17250:
 12728                           
 12729                           ; BSR set to: 0
 12730                           ;../app/app_src/application.c: 2074:         if(read_write_mb_regs[RW_RF_CH] < sizeof(fh
      +                          ssList)){
 12731  00158A  0102               	movlb	2	; force () banked
 12732  00158C  517D               	movf	(_read_write_mb_regs+13)& (0+255),w,b
 12733  00158E  E10D               	bnz	l614
 12734  001590  0E28               	movlw	40
 12735  001592  5D7C               	subwf	(_read_write_mb_regs+12)& (0+255),w,b
 12736  001594  B0D8               	btfsc	status,0,c
 12737  001596  D009               	goto	l614
 12738                           
 12739                           ; BSR set to: 2
 12740                           ;../app/app_src/application.c: 2075:             channel = read_write_mb_regs[RW_RF_CH];
 12741  001598  C27C  F0DD         	movff	_read_write_mb_regs+12,_channel
 12742                           
 12743                           ; BSR set to: 2
 12744                           ;../app/app_src/application.c: 2076:             set_eeprom_sync(EEPROM_RADIO_CH);
 12745  00159C  0E06               	movlw	6
 12746  00159E  EC21  F040         	call	_set_eeprom_sync
 12747                           
 12748                           ; BSR set to: 0
 12749                           ;../app/app_src/application.c: 2077:             need_radio_reset = 1;
 12750  0015A2  0E01               	movlw	1
 12751  0015A4  0101               	movlb	1	; force () banked
 12752  0015A6  6FEC               	movwf	_need_radio_reset& (0+255),b
 12753                           
 12754                           ;../app/app_src/application.c: 2078:         }
 12755  0015A8  D004               	goto	l19174
 12756  0015AA                     l614:
 12757                           
 12758                           ; BSR set to: 2
 12759                           ;../app/app_src/application.c: 2080:             read_write_mb_regs[RW_RF_CH] = channel;
 12760  0015AA  C0DD  F27C         	movff	_channel,_read_write_mb_regs+12
 12761  0015AE  0102               	movlb	2	; force () banked
 12762  0015B0  6B7D               	clrf	(_read_write_mb_regs+13)& (0+255),b
 12763  0015B2                     l19174:
 12764                           
 12765                           ;../app/app_src/application.c: 2084:     if(RSSITarget != ((int8_t) -read_write_mb_regs[
      +                          RW_TARGET_RSSI])){
 12766  0015B2  0102               	movlb	2	; force () banked
 12767  0015B4  5178               	movf	(_read_write_mb_regs+8)& (0+255),w,b
 12768  0015B6  0800               	sublw	0
 12769  0015B8  0100               	movlb	0	; force () banked
 12770  0015BA  19E8               	xorwf	_RSSITarget& (0+255),w,b
 12771  0015BC  B4D8               	btfsc	status,2,c
 12772  0015BE  D03D               	goto	l19186
 12773                           
 12774                           ; BSR set to: 0
 12775                           ;../app/app_src/application.c: 2085:         if((-read_write_mb_regs[RW_TARGET_RSSI] < -
      +                          30)
 12776  0015C0  EE20  F278         	lfsr	2,_read_write_mb_regs+8
 12777  0015C4  006F FF78  F0A8    	movff	postinc2,??_handle_rw_regs
 12778  0015CA  006F FF74  F0A9    	movff	postdec2,??_handle_rw_regs+1
 12779  0015D0  0100               	movlb	0	; force () banked
 12780  0015D2  1FA8               	comf	??_handle_rw_regs& (0+255),f,b
 12781  0015D4  1FA9               	comf	(??_handle_rw_regs+1)& (0+255),f,b
 12782  0015D6  4BA8               	infsnz	??_handle_rw_regs& (0+255),f,b
 12783  0015D8  2BA9               	incf	(??_handle_rw_regs+1)& (0+255),f,b
 12784  0015DA  0EE2               	movlw	226
 12785  0015DC  5DA8               	subwf	??_handle_rw_regs& (0+255),w,b
 12786  0015DE  0EFF               	movlw	255
 12787  0015E0  59A9               	subwfb	(??_handle_rw_regs+1)& (0+255),w,b
 12788  0015E2  B0D8               	btfsc	status,0,c
 12789  0015E4  D01C               	goto	l19184
 12790                           
 12791                           ; BSR set to: 0
 12792  0015E6  EE20  F278         	lfsr	2,_read_write_mb_regs+8
 12793  0015EA  006F FF78  F0A8    	movff	postinc2,??_handle_rw_regs
 12794  0015F0  006F FF74  F0A9    	movff	postdec2,??_handle_rw_regs+1
 12795  0015F6  0100               	movlb	0	; force () banked
 12796  0015F8  1FA8               	comf	??_handle_rw_regs& (0+255),f,b
 12797  0015FA  1FA9               	comf	(??_handle_rw_regs+1)& (0+255),f,b
 12798  0015FC  4BA8               	infsnz	??_handle_rw_regs& (0+255),f,b
 12799  0015FE  2BA9               	incf	(??_handle_rw_regs+1)& (0+255),f,b
 12800  001600  0E89               	movlw	137
 12801  001602  5DA8               	subwf	??_handle_rw_regs& (0+255),w,b
 12802  001604  0EFF               	movlw	255
 12803  001606  59A9               	subwfb	(??_handle_rw_regs+1)& (0+255),w,b
 12804  001608  A0D8               	btfss	status,0,c
 12805  00160A  D009               	goto	l19184
 12806                           
 12807                           ; BSR set to: 0
 12808                           ;../app/app_src/application.c: 2086:                 && (-read_write_mb_regs[RW_TARGET_R
      +                          SSI] > -120)){;../app/app_src/application.c: 2087:             RSSITarget = (int8_t)-rea
      +                          d_write_mb_regs[RW_TARGET_RSSI];
 12809  00160C  0102               	movlb	2	; force () banked
 12810  00160E  5178               	movf	(_read_write_mb_regs+8)& (0+255),w,b
 12811  001610  0800               	sublw	0
 12812  001612  0100               	movlb	0	; force () banked
 12813  001614  6FE8               	movwf	_RSSITarget& (0+255),b
 12814                           
 12815                           ; BSR set to: 0
 12816                           ;../app/app_src/application.c: 2088:             set_eeprom_sync(EEPROM_RSSI);
 12817  001616  0E08               	movlw	8
 12818  001618  EC21  F040         	call	_set_eeprom_sync
 12819                           
 12820                           ;../app/app_src/application.c: 2089:         }
 12821  00161C  D00E               	goto	l19186
 12822  00161E                     l19184:
 12823                           
 12824                           ; BSR set to: 0
 12825                           ;../app/app_src/application.c: 2091:             read_write_mb_regs[RW_TARGET_RSSI] = -R
      +                          SSITarget;
 12826  00161E  C0E8  F0A8         	movff	_RSSITarget,??_handle_rw_regs
 12827  001622  0100               	movlb	0	; force () banked
 12828  001624  6BA9               	clrf	(??_handle_rw_regs+1)& (0+255),b
 12829  001626  BFA8               	btfsc	??_handle_rw_regs& (0+255),7,b
 12830  001628  07A9               	decf	(??_handle_rw_regs+1)& (0+255),f,b
 12831  00162A  1FA8               	comf	??_handle_rw_regs& (0+255),f,b
 12832  00162C  1FA9               	comf	(??_handle_rw_regs+1)& (0+255),f,b
 12833  00162E  4BA8               	infsnz	??_handle_rw_regs& (0+255),f,b
 12834  001630  2BA9               	incf	(??_handle_rw_regs+1)& (0+255),f,b
 12835  001632  C0A8  F278         	movff	??_handle_rw_regs,_read_write_mb_regs+8
 12836  001636  C0A9  F279         	movff	??_handle_rw_regs+1,_read_write_mb_regs+9
 12837  00163A                     l19186:
 12838                           
 12839                           ; BSR set to: 0
 12840                           ;../app/app_src/application.c: 2094:     cadCounter = read_write_mb_regs[RW_CAD_COL];
 12841  00163A  C27A  F1ED         	movff	_read_write_mb_regs+10,_cadCounter
 12842                           
 12843                           ; BSR set to: 0
 12844                           ;../app/app_src/application.c: 2097:     if((0xAAAA == read_write_mb_regs[RW_MB_ADDR_KEY
      +                          1]) &&
 12845  00163E  0EAA               	movlw	170
 12846  001640  0102               	movlb	2	; force () banked
 12847  001642  1984               	xorwf	(_read_write_mb_regs+20)& (0+255),w,b
 12848  001644  E13A               	bnz	l19206
 12849  001646  0EAA               	movlw	170
 12850  001648  1985               	xorwf	(_read_write_mb_regs+21)& (0+255),w,b
 12851  00164A  A4D8               	btfss	status,2,c
 12852  00164C  D036               	goto	l19206
 12853                           
 12854                           ; BSR set to: 2
 12855  00164E  0E55               	movlw	85
 12856  001650  0102               	movlb	2	; force () banked
 12857  001652  1986               	xorwf	(_read_write_mb_regs+22)& (0+255),w,b
 12858  001654  E132               	bnz	l19206
 12859  001656  0E55               	movlw	85
 12860  001658  1987               	xorwf	(_read_write_mb_regs+23)& (0+255),w,b
 12861  00165A  A4D8               	btfss	status,2,c
 12862  00165C  D02E               	goto	l19206
 12863                           
 12864                           ; BSR set to: 2
 12865                           ;../app/app_src/application.c: 2098:             (0x5555 == read_write_mb_regs[RW_MB_ADD
      +                          R_KEY2])){;../app/app_src/application.c: 2100:         if((read_write_mb_regs[RW_MBADDR]
      +                           > 1)
 12866  00165E  0102               	movlb	2	; force () banked
 12867  001660  5183               	movf	(_read_write_mb_regs+19)& (0+255),w,b
 12868  001662  E104               	bnz	u17320
 12869  001664  0E02               	movlw	2
 12870  001666  5D82               	subwf	(_read_write_mb_regs+18)& (0+255),w,b
 12871  001668  A0D8               	btfss	status,0,c
 12872  00166A  D027               	goto	l19206
 12873  00166C                     u17320:
 12874                           
 12875                           ; BSR set to: 2
 12876  00166C  0102               	movlb	2	; force () banked
 12877  00166E  5183               	movf	(_read_write_mb_regs+19)& (0+255),w,b
 12878  001670  E124               	bnz	l19206
 12879  001672  0EF7               	movlw	247
 12880  001674  5D82               	subwf	(_read_write_mb_regs+18)& (0+255),w,b
 12881  001676  B0D8               	btfsc	status,0,c
 12882  001678  D020               	goto	l19206
 12883                           
 12884                           ; BSR set to: 2
 12885                           ;../app/app_src/application.c: 2101:                 && (read_write_mb_regs[RW_MBADDR] <
      +                           247)){;../app/app_src/application.c: 2102:             mb_rtu_addr = read_write_mb_regs
      +                          [RW_MBADDR];
 12886  00167A  C282  F0E9         	movff	_read_write_mb_regs+18,_mb_rtu_addr
 12887                           
 12888                           ; BSR set to: 2
 12889                           ;../app/app_src/application.c: 2103:             set_eeprom_sync(EEPROM_MBADDR);
 12890  00167E  0E0C               	movlw	12
 12891  001680  EC21  F040         	call	_set_eeprom_sync
 12892                           
 12893                           ; BSR set to: 0
 12894                           ;../app/app_src/application.c: 2104:             eMBDisable();
 12895  001684  ECCC  F057         	call	_eMBDisable	;wreg free
 12896                           
 12897                           ; BSR set to: 0
 12898                           ;../app/app_src/application.c: 2105:             eMBInit( MB_RTU, mb_rtu_addr, 0, curren
      +                          t_baud_rate, curent_parity);
 12899  001688  C0E9  F09D         	movff	_mb_rtu_addr,eMBInit@ucSlaveAddress
 12900  00168C  0E00               	movlw	0
 12901  00168E  0100               	movlb	0	; force () banked
 12902  001690  6F9E               	movwf	eMBInit@ucPort& (0+255),b
 12903  001692  0102               	movlb	2	; force () banked
 12904  001694  512B               	movf	_current_baud_rate& (0+255),w,b
 12905  001696  0100               	movlb	0	; force () banked
 12906  001698  6F9F               	movwf	eMBInit@ulBaudRate& (0+255),b
 12907  00169A  0102               	movlb	2	; force () banked
 12908  00169C  512C               	movf	(_current_baud_rate+1)& (0+255),w,b
 12909  00169E  0100               	movlb	0	; force () banked
 12910  0016A0  6FA0               	movwf	(eMBInit@ulBaudRate+1)& (0+255),b
 12911  0016A2  0102               	movlb	2	; force () banked
 12912  0016A4  512D               	movf	(_current_baud_rate+2)& (0+255),w,b
 12913  0016A6  0100               	movlb	0	; force () banked
 12914  0016A8  6FA1               	movwf	(eMBInit@ulBaudRate+2)& (0+255),b
 12915  0016AA  6BA2               	clrf	(eMBInit@ulBaudRate+3)& (0+255),b
 12916  0016AC  C0E1  F0A3         	movff	_curent_parity,eMBInit@eParity
 12917  0016B0  0E00               	movlw	0
 12918  0016B2  EC90  F03C         	call	_eMBInit
 12919                           
 12920                           ; BSR set to: 0
 12921                           ;../app/app_src/application.c: 2106:             eMBEnable();
 12922  0016B6  ECC6  F058         	call	_eMBEnable	;wreg free
 12923  0016BA                     l19206:
 12924                           
 12925                           ;../app/app_src/application.c: 2110:     if((0xAAAA == read_write_mb_regs[RW_MB_UART_KEY
      +                          1]) &&
 12926  0016BA  0EAA               	movlw	170
 12927  0016BC  0102               	movlb	2	; force () banked
 12928  0016BE  198C               	xorwf	(_read_write_mb_regs+28)& (0+255),w,b
 12929  0016C0  E13E               	bnz	l621
 12930  0016C2  0EAA               	movlw	170
 12931  0016C4  198D               	xorwf	(_read_write_mb_regs+29)& (0+255),w,b
 12932  0016C6  A4D8               	btfss	status,2,c
 12933  0016C8  D03A               	goto	l621
 12934                           
 12935                           ; BSR set to: 2
 12936  0016CA  0E55               	movlw	85
 12937  0016CC  0102               	movlb	2	; force () banked
 12938  0016CE  198E               	xorwf	(_read_write_mb_regs+30)& (0+255),w,b
 12939  0016D0  E136               	bnz	l621
 12940  0016D2  0E55               	movlw	85
 12941  0016D4  198F               	xorwf	(_read_write_mb_regs+31)& (0+255),w,b
 12942  0016D6  A4D8               	btfss	status,2,c
 12943  0016D8  D032               	goto	l621
 12944                           
 12945                           ; BSR set to: 2
 12946                           ;../app/app_src/application.c: 2111:             (0x5555 == read_write_mb_regs[RW_MB_UAR
      +                          T_KEY2])){;../app/app_src/application.c: 2112:         if(curent_parity != read_write_mb
      +                          _regs[RW_MB_PARITY]){
 12947  0016DA  0100               	movlb	0	; force () banked
 12948  0016DC  51E1               	movf	_curent_parity& (0+255),w,b
 12949  0016DE  0100               	movlb	0	; force () banked
 12950  0016E0  6FA8               	movwf	??_handle_rw_regs& (0+255),b
 12951  0016E2  6BA9               	clrf	(??_handle_rw_regs+1)& (0+255),b
 12952  0016E4  0102               	movlb	2	; force () banked
 12953  0016E6  518A               	movf	(_read_write_mb_regs+26)& (0+255),w,b
 12954  0016E8  0100               	movlb	0	; force () banked
 12955  0016EA  19A8               	xorwf	??_handle_rw_regs& (0+255),w,b
 12956  0016EC  E106               	bnz	u17360
 12957  0016EE  0102               	movlb	2	; force () banked
 12958  0016F0  518B               	movf	(_read_write_mb_regs+27)& (0+255),w,b
 12959  0016F2  0100               	movlb	0	; force () banked
 12960  0016F4  19A9               	xorwf	(??_handle_rw_regs+1)& (0+255),w,b
 12961  0016F6  B4D8               	btfsc	status,2,c
 12962  0016F8  D009               	goto	l19216
 12963  0016FA                     u17360:
 12964                           
 12965                           ; BSR set to: 0
 12966                           ;../app/app_src/application.c: 2113:             curent_parity = read_write_mb_regs[RW_M
      +                          B_PARITY];
 12967  0016FA  C28A  F0E1         	movff	_read_write_mb_regs+26,_curent_parity
 12968                           
 12969                           ; BSR set to: 0
 12970                           ;../app/app_src/application.c: 2114:             set_parity(curent_parity);
 12971  0016FE  0100               	movlb	0	; force () banked
 12972  001700  51E1               	movf	_curent_parity& (0+255),w,b
 12973  001702  EC75  F04E         	call	_set_parity
 12974                           
 12975                           ;../app/app_src/application.c: 2115:             set_eeprom_sync(EEPROM_UART_PARITY);
 12976  001706  0E09               	movlw	9
 12977  001708  EC21  F040         	call	_set_eeprom_sync
 12978  00170C                     l19216:
 12979                           
 12980                           ; BSR set to: 0
 12981                           ;../app/app_src/application.c: 2117:         if(uart_baud_rate != read_write_mb_regs[RW_
      +                          MB_BAUD_RATE]){
 12982  00170C  0101               	movlb	1	; force () banked
 12983  00170E  51F2               	movf	_uart_baud_rate& (0+255),w,b
 12984  001710  0100               	movlb	0	; force () banked
 12985  001712  6FA8               	movwf	??_handle_rw_regs& (0+255),b
 12986  001714  6BA9               	clrf	(??_handle_rw_regs+1)& (0+255),b
 12987  001716  0102               	movlb	2	; force () banked
 12988  001718  5188               	movf	(_read_write_mb_regs+24)& (0+255),w,b
 12989  00171A  0100               	movlb	0	; force () banked
 12990  00171C  19A8               	xorwf	??_handle_rw_regs& (0+255),w,b
 12991  00171E  E106               	bnz	u17370
 12992  001720  0102               	movlb	2	; force () banked
 12993  001722  5189               	movf	(_read_write_mb_regs+25)& (0+255),w,b
 12994  001724  0100               	movlb	0	; force () banked
 12995  001726  19A9               	xorwf	(??_handle_rw_regs+1)& (0+255),w,b
 12996  001728  B4D8               	btfsc	status,2,c
 12997  00172A  D009               	goto	l621
 12998  00172C                     u17370:
 12999                           
 13000                           ; BSR set to: 0
 13001                           ;../app/app_src/application.c: 2118:             uart_baud_rate = read_write_mb_regs[RW_
      +                          MB_BAUD_RATE];
 13002  00172C  C288  F1F2         	movff	_read_write_mb_regs+24,_uart_baud_rate
 13003                           
 13004                           ; BSR set to: 0
 13005                           ;../app/app_src/application.c: 2119:             set_uart_baud(uart_baud_rate);
 13006  001730  0101               	movlb	1	; force () banked
 13007  001732  51F2               	movf	_uart_baud_rate& (0+255),w,b
 13008  001734  ECA7  F03A         	call	_set_uart_baud
 13009                           
 13010                           ;../app/app_src/application.c: 2120:             set_eeprom_sync(EEPROM_UART_BAUD);
 13011  001738  0E0A               	movlw	10
 13012  00173A  EC21  F040         	call	_set_eeprom_sync
 13013  00173E                     l621:
 13014                           
 13015                           ;../app/app_src/application.c: 2124:     if(read_write_mb_regs[RW_MB_RSSI_ACCEPT]!=PHY_G
      +                          et_Packet_Rssi_Threshold()){
 13016  00173E  ECA9  F05E         	call	_PHY_Get_Packet_Rssi_Threshold	;wreg free
 13017  001742  0100               	movlb	0	; force () banked
 13018  001744  6FA8               	movwf	??_handle_rw_regs& (0+255),b
 13019  001746  6BA9               	clrf	(??_handle_rw_regs+1)& (0+255),b
 13020  001748  BFA8               	btfsc	??_handle_rw_regs& (0+255),7,b
 13021  00174A  07A9               	decf	(??_handle_rw_regs+1)& (0+255),f,b
 13022  00174C  0102               	movlb	2	; force () banked
 13023  00174E  5190               	movf	(_read_write_mb_regs+32)& (0+255),w,b
 13024  001750  0100               	movlb	0	; force () banked
 13025  001752  19A8               	xorwf	??_handle_rw_regs& (0+255),w,b
 13026  001754  E106               	bnz	u17380
 13027  001756  0102               	movlb	2	; force () banked
 13028  001758  5191               	movf	(_read_write_mb_regs+33)& (0+255),w,b
 13029  00175A  0100               	movlb	0	; force () banked
 13030  00175C  19A9               	xorwf	(??_handle_rw_regs+1)& (0+255),w,b
 13031  00175E  B4D8               	btfsc	status,2,c
 13032  001760  D007               	goto	l19226
 13033  001762                     u17380:
 13034                           
 13035                           ; BSR set to: 0
 13036                           ;../app/app_src/application.c: 2125:         PHY_Set_Packet_Rssi_Threshold(read_write_mb
      +                          _regs[RW_MB_RSSI_ACCEPT]);
 13037  001762  0102               	movlb	2	; force () banked
 13038  001764  5190               	movf	(_read_write_mb_regs+32)& (0+255),w,b
 13039  001766  EC7A  F05E         	call	_PHY_Set_Packet_Rssi_Threshold
 13040                           
 13041                           ;../app/app_src/application.c: 2126:         set_eeprom_sync(EEPROM_GOOD_RSSI);
 13042  00176A  0E0D               	movlw	13
 13043  00176C  EC21  F040         	call	_set_eeprom_sync
 13044  001770                     l19226:
 13045                           
 13046                           ; BSR set to: 0
 13047                           ;../app/app_src/application.c: 2129:     if(read_write_mb_regs[RW_MB_SOFT_RESET]){
 13048  001770  0102               	movlb	2	; force () banked
 13049  001772  5192               	movf	(_read_write_mb_regs+34)& (0+255),w,b
 13050  001774  1193               	iorwf	(_read_write_mb_regs+35)& (0+255),w,b
 13051  001776  B4D8               	btfsc	status,2,c
 13052  001778  D008               	goto	l19230
 13053                           
 13054                           ; BSR set to: 2
 13055                           ;../app/app_src/application.c: 2130:         read_write_mb_regs[RW_MB_SOFT_RESET] = 0;
 13056  00177A  0E00               	movlw	0
 13057  00177C  0102               	movlb	2	; force () banked
 13058  00177E  6F93               	movwf	(_read_write_mb_regs+35)& (0+255),b
 13059  001780  0E00               	movlw	0
 13060  001782  6F92               	movwf	(_read_write_mb_regs+34)& (0+255),b
 13061                           
 13062                           ;../app/app_src/application.c: 2131:         need_reset = 1;
 13063  001784  0E01               	movlw	1
 13064  001786  0101               	movlb	1	; force () banked
 13065  001788  6FE5               	movwf	_need_reset& (0+255),b
 13066  00178A                     l19230:
 13067                           
 13068                           ;../app/app_src/application.c: 2135:     if((0xAAAA == read_write_mb_regs[RW_MB_MCASTID_
      +                          KEY1]) &&
 13069  00178A  0EAA               	movlw	170
 13070  00178C  0102               	movlb	2	; force () banked
 13071  00178E  19AC               	xorwf	(_read_write_mb_regs+60)& (0+255),w,b
 13072  001790  E141               	bnz	l19250
 13073  001792  0EAA               	movlw	170
 13074  001794  19AD               	xorwf	(_read_write_mb_regs+61)& (0+255),w,b
 13075  001796  A4D8               	btfss	status,2,c
 13076  001798  D03D               	goto	u17440
 13077                           
 13078                           ; BSR set to: 2
 13079  00179A  0E55               	movlw	85
 13080  00179C  0102               	movlb	2	; force () banked
 13081  00179E  19AE               	xorwf	(_read_write_mb_regs+62)& (0+255),w,b
 13082  0017A0  E139               	bnz	l19250
 13083  0017A2  0E55               	movlw	85
 13084  0017A4  19AF               	xorwf	(_read_write_mb_regs+63)& (0+255),w,b
 13085  0017A6  A4D8               	btfss	status,2,c
 13086  0017A8  D035               	goto	u17440
 13087                           
 13088                           ; BSR set to: 2
 13089                           ;../app/app_src/application.c: 2136:             (0x5555 == read_write_mb_regs[RW_MB_MCA
      +                          STID_KEY2])){;../app/app_src/application.c: 2137:         nwkGroupInit();
 13090  0017AA  EC73  F05A         	call	_nwkGroupInit	;wreg free
 13091                           
 13092                           ; BSR set to: 0
 13093                           ;../app/app_src/application.c: 2138:         for(uint8_t i = 0; i < 10; i++){
 13094  0017AE  0E00               	movlw	0
 13095  0017B0  0100               	movlb	0	; force () banked
 13096  0017B2  6FAC               	movwf	handle_rw_regs@i& (0+255),b
 13097  0017B4  D02B               	goto	l19248
 13098  0017B6                     l19242:
 13099                           
 13100                           ; BSR set to: 0
 13101                           ;../app/app_src/application.c: 2139:             if(0xffff != read_write_mb_regs[RW_MB_M
      +                          CASTID_1 + i]){
 13102  0017B6  0100               	movlb	0	; force () banked
 13103  0017B8  51AC               	movf	handle_rw_regs@i& (0+255),w,b
 13104  0017BA  0100               	movlb	0	; force () banked
 13105  0017BC  6FA8               	movwf	??_handle_rw_regs& (0+255),b
 13106  0017BE  6BA9               	clrf	(??_handle_rw_regs+1)& (0+255),b
 13107  0017C0  90D8               	bcf	status,0,c
 13108  0017C2  37A8               	rlcf	??_handle_rw_regs& (0+255),f,b
 13109  0017C4  37A9               	rlcf	(??_handle_rw_regs+1)& (0+255),f,b
 13110  0017C6  0E98               	movlw	low (_read_write_mb_regs+40)
 13111  0017C8  25A8               	addwf	??_handle_rw_regs& (0+255),w,b
 13112  0017CA  6ED9               	movwf	fsr2l,c
 13113  0017CC  0E02               	movlw	high (_read_write_mb_regs+40)
 13114  0017CE  21A9               	addwfc	(??_handle_rw_regs+1)& (0+255),w,b
 13115  0017D0  6EDA               	movwf	fsr2h,c
 13116  0017D2  28DE               	incf	postinc2,w,c
 13117  0017D4  E103               	bnz	u17430
 13118  0017D6  28DE               	incf	postinc2,w,c
 13119  0017D8  B4D8               	btfsc	status,2,c
 13120  0017DA  D016               	goto	l19246
 13121  0017DC                     u17430:
 13122                           
 13123                           ; BSR set to: 0
 13124                           ;../app/app_src/application.c: 2140:                 NWK_GroupAdd(read_write_mb_regs[RW_
      +                          MB_MCASTID_1 + i]);
 13125  0017DC  0100               	movlb	0	; force () banked
 13126  0017DE  51AC               	movf	handle_rw_regs@i& (0+255),w,b
 13127  0017E0  0100               	movlb	0	; force () banked
 13128  0017E2  6FA8               	movwf	??_handle_rw_regs& (0+255),b
 13129  0017E4  6BA9               	clrf	(??_handle_rw_regs+1)& (0+255),b
 13130  0017E6  90D8               	bcf	status,0,c
 13131  0017E8  37A8               	rlcf	??_handle_rw_regs& (0+255),f,b
 13132  0017EA  37A9               	rlcf	(??_handle_rw_regs+1)& (0+255),f,b
 13133  0017EC  0E98               	movlw	low (_read_write_mb_regs+40)
 13134  0017EE  25A8               	addwf	??_handle_rw_regs& (0+255),w,b
 13135  0017F0  6ED9               	movwf	fsr2l,c
 13136  0017F2  0E02               	movlw	high (_read_write_mb_regs+40)
 13137  0017F4  21A9               	addwfc	(??_handle_rw_regs+1)& (0+255),w,b
 13138  0017F6  6EDA               	movwf	fsr2h,c
 13139  0017F8  006F FF78  F078    	movff	postinc2,NWK_GroupAdd@group
 13140  0017FE  006F FF74  F079    	movff	postdec2,NWK_GroupAdd@group+1
 13141  001804  ECC2  F05D         	call	_NWK_GroupAdd	;wreg free
 13142  001808                     l19246:
 13143                           
 13144                           ; BSR set to: 0
 13145                           ;../app/app_src/application.c: 2142:         }
 13146  001808  0100               	movlb	0	; force () banked
 13147  00180A  2BAC               	incf	handle_rw_regs@i& (0+255),f,b
 13148  00180C                     l19248:
 13149                           
 13150                           ; BSR set to: 0
 13151  00180C  0E09               	movlw	9
 13152  00180E  0100               	movlb	0	; force () banked
 13153  001810  65AC               	cpfsgt	handle_rw_regs@i& (0+255),b
 13154  001812  D7D1               	goto	l19242
 13155  001814                     u17440:
 13156  001814                     l19250:
 13157                           
 13158                           ;../app/app_src/application.c: 2145:     if(read_write_mb_regs[RW_MB_ACK_STAT]){
 13159  001814  0102               	movlb	2	; force () banked
 13160  001816  51B0               	movf	(_read_write_mb_regs+64)& (0+255),w,b
 13161  001818  11B1               	iorwf	(_read_write_mb_regs+65)& (0+255),w,b
 13162  00181A  B4D8               	btfsc	status,2,c
 13163  00181C  D02F               	goto	l19262
 13164                           
 13165                           ; BSR set to: 2
 13166                           ;../app/app_src/application.c: 2146:         read_write_mb_regs[RW_MB_ACK_STAT] = 0;
 13167  00181E  0E00               	movlw	0
 13168  001820  0102               	movlb	2	; force () banked
 13169  001822  6FB1               	movwf	(_read_write_mb_regs+65)& (0+255),b
 13170  001824  0E00               	movlw	0
 13171  001826  6FB0               	movwf	(_read_write_mb_regs+64)& (0+255),b
 13172                           
 13173                           ; BSR set to: 2
 13174                           ;../app/app_src/application.c: 2147:         if(!CircularBufferEmpty(&msg_ack_queue_cont
      +                          ext)){
 13175  001828  0EBF               	movlw	low _msg_ack_queue_context
 13176  00182A  0100               	movlb	0	; force () banked
 13177  00182C  6F71               	movwf	CircularBufferEmpty@ctx& (0+255),b
 13178  00182E  0E03               	movlw	high _msg_ack_queue_context
 13179  001830  6F72               	movwf	(CircularBufferEmpty@ctx+1)& (0+255),b
 13180  001832  EC43  F05A         	call	_CircularBufferEmpty	;wreg free
 13181  001836  0900               	iorlw	0
 13182  001838  A4D8               	btfss	status,2,c
 13183  00183A  D01D               	goto	l631
 13184                           
 13185                           ; BSR set to: 0
 13186                           ;../app/app_src/application.c: 2148:             struct msg_ack_t msg_ack_obj;;../app/ap
      +                          p_src/application.c: 2149:             CircularBufferPopFront(&msg_ack_queue_context, &m
      +                          sg_ack_obj);
 13187  00183C  0EBF               	movlw	low _msg_ack_queue_context
 13188  00183E  0100               	movlb	0	; force () banked
 13189  001840  6F84               	movwf	CircularBufferPopFront@ctx& (0+255),b
 13190  001842  0E03               	movlw	high _msg_ack_queue_context
 13191  001844  6F85               	movwf	(CircularBufferPopFront@ctx+1)& (0+255),b
 13192  001846  0EAD               	movlw	low handle_rw_regs@msg_ack_obj
 13193  001848  0100               	movlb	0	; force () banked
 13194  00184A  6F86               	movwf	CircularBufferPopFront@val& (0+255),b
 13195  00184C  0E00               	movlw	high handle_rw_regs@msg_ack_obj
 13196  00184E  6F87               	movwf	(CircularBufferPopFront@val+1)& (0+255),b
 13197  001850  EC86  F033         	call	_CircularBufferPopFront	;wreg free
 13198                           
 13199                           ; BSR set to: 0
 13200                           ;../app/app_src/application.c: 2150:             if(msg_ack_obj.status){
 13201  001854  0100               	movlb	0	; force () banked
 13202  001856  51B0               	movf	(handle_rw_regs@msg_ack_obj+3)& (0+255),w,b
 13203  001858  B4D8               	btfsc	status,2,c
 13204  00185A  D008               	goto	l632
 13205                           
 13206                           ; BSR set to: 0
 13207                           ;../app/app_src/application.c: 2151:                 read_only_mb_regs[RO_RX_MSG_ID] = 0
      +                          x8000 | msg_ack_obj.msgid;
 13208  00185C  0E00               	movlw	0
 13209  00185E  0100               	movlb	0	; force () banked
 13210  001860  11AF               	iorwf	(handle_rw_regs@msg_ack_obj+2)& (0+255),w,b
 13211  001862  0103               	movlb	3	; force () banked
 13212  001864  6F68               	movwf	(_read_only_mb_regs+24)& (0+255),b
 13213  001866  0E80               	movlw	128
 13214  001868  6F69               	movwf	(_read_only_mb_regs+25)& (0+255),b
 13215                           
 13216                           ;../app/app_src/application.c: 2152:             }
 13217  00186A  D008               	goto	l19262
 13218  00186C                     l632:
 13219                           
 13220                           ; BSR set to: 0
 13221                           ;../app/app_src/application.c: 2154:                 read_only_mb_regs[RO_RX_MSG_ID] = m
      +                          sg_ack_obj.msgid;
 13222  00186C  C0AF  F368         	movff	handle_rw_regs@msg_ack_obj+2,_read_only_mb_regs+24
 13223  001870  0103               	movlb	3	; force () banked
 13224  001872  6B69               	clrf	(_read_only_mb_regs+25)& (0+255),b
 13225  001874  D003               	goto	l19262
 13226  001876                     l631:
 13227                           
 13228                           ; BSR set to: 0
 13229                           ;../app/app_src/application.c: 2158:             read_only_mb_regs[RO_RX_MSG_ID] = 0xFFF
      +                          F;
 13230  001876  0103               	movlb	3	; force () banked
 13231  001878  6968               	setf	(_read_only_mb_regs+24)& (0+255),b
 13232  00187A  6969               	setf	(_read_only_mb_regs+25)& (0+255),b
 13233  00187C                     l19262:
 13234                           
 13235                           ;../app/app_src/application.c: 2162:     read_write_mb_regs[RW_MB_ADDR_KEY1] = 0;
 13236  00187C  0E00               	movlw	0
 13237  00187E  0102               	movlb	2	; force () banked
 13238  001880  6F85               	movwf	(_read_write_mb_regs+21)& (0+255),b
 13239  001882  0E00               	movlw	0
 13240  001884  6F84               	movwf	(_read_write_mb_regs+20)& (0+255),b
 13241                           
 13242                           ;../app/app_src/application.c: 2163:     read_write_mb_regs[RW_MB_ADDR_KEY2] = 0;
 13243  001886  0E00               	movlw	0
 13244  001888  6F87               	movwf	(_read_write_mb_regs+23)& (0+255),b
 13245  00188A  0E00               	movlw	0
 13246  00188C  6F86               	movwf	(_read_write_mb_regs+22)& (0+255),b
 13247                           
 13248                           ;../app/app_src/application.c: 2164:     read_write_mb_regs[RW_MB_UART_KEY1] = 0;
 13249  00188E  0E00               	movlw	0
 13250  001890  6F8D               	movwf	(_read_write_mb_regs+29)& (0+255),b
 13251  001892  0E00               	movlw	0
 13252  001894  6F8C               	movwf	(_read_write_mb_regs+28)& (0+255),b
 13253                           
 13254                           ;../app/app_src/application.c: 2165:     read_write_mb_regs[RW_MB_UART_KEY2] = 0;
 13255  001896  0E00               	movlw	0
 13256  001898  6F8F               	movwf	(_read_write_mb_regs+31)& (0+255),b
 13257  00189A  0E00               	movlw	0
 13258  00189C  6F8E               	movwf	(_read_write_mb_regs+30)& (0+255),b
 13259                           
 13260                           ;../app/app_src/application.c: 2166:     read_write_mb_regs[RW_MB_MCASTID_KEY1] = 0;
 13261  00189E  0E00               	movlw	0
 13262  0018A0  6FAD               	movwf	(_read_write_mb_regs+61)& (0+255),b
 13263  0018A2  0E00               	movlw	0
 13264  0018A4  6FAC               	movwf	(_read_write_mb_regs+60)& (0+255),b
 13265                           
 13266                           ;../app/app_src/application.c: 2167:     read_write_mb_regs[RW_MB_MCASTID_KEY2] = 0;
 13267  0018A6  0E00               	movlw	0
 13268  0018A8  6FAF               	movwf	(_read_write_mb_regs+63)& (0+255),b
 13269  0018AA  0E00               	movlw	0
 13270  0018AC  6FAE               	movwf	(_read_write_mb_regs+62)& (0+255),b
 13271                           
 13272                           ; BSR set to: 2
 13273  0018AE  0012               	return		;funcret
 13274  0018B0                     __end_of_handle_rw_regs:
 13275                           	callstack 0
 13276                           
 13277 ;; *************** function _set_uart_baud *****************
 13278 ;; Defined at:
 13279 ;;		line 385 in file "../app/app_src/application.c"
 13280 ;; Parameters:    Size  Location     Type
 13281 ;;  i               1    wreg     unsigned char 
 13282 ;; Auto vars:     Size  Location     Type
 13283 ;;  i               1   19[BANK0 ] unsigned char 
 13284 ;; Return value:  Size  Location     Type
 13285 ;;                  1    wreg      unsigned char 
 13286 ;; Registers used:
 13287 ;;		wreg, status,2, status,0
 13288 ;; Tracked objects:
 13289 ;;		On entry : 3C/0
 13290 ;;		On exit  : 2/0
 13291 ;;		Unchanged: 0/0
 13292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13295 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13296 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13297 ;;Total ram usage:        3 bytes
 13298 ;; Hardware stack levels used:    1
 13299 ;; Hardware stack levels required when called:   11
 13300 ;; This function calls:
 13301 ;;		Nothing
 13302 ;; This function is called by:
 13303 ;;		_bootLoadApplication
 13304 ;;		_handle_rw_regs
 13305 ;;		_uart_default_engine
 13306 ;; This function uses a non-reentrant model
 13307 ;;
 13308                           
 13309                           	psect	text48
 13310  00754E                     __ptext48:
 13311                           	callstack 0
 13312  00754E                     _set_uart_baud:
 13313                           	callstack 18
 13314                           
 13315                           ; BSR set to: 2
 13316                           ;incstack = 0
 13317                           ;set_uart_baud@i stored from wreg
 13318  00754E  0100               	movlb	0	; force () banked
 13319  007550  6F73               	movwf	set_uart_baud@i& (0+255),b
 13320                           
 13321                           ;../app/app_src/application.c: 385: uint8_t set_uart_baud(uint8_t i);../app/app_src/appl
      +                          ication.c: 386: {;../app/app_src/application.c: 388:     U1CON1 &= ~(1<<7);
 13322  007552  013D               	movlb	61	; force () banked
 13323  007554  9FF3               	bcf	243,7,b	;volatile
 13324                           
 13325                           ;../app/app_src/application.c: 389:     switch(i)
 13326  007556  D059               	goto	l14136
 13327  007558                     l14080:
 13328                           
 13329                           ; BSR set to: 0
 13330                           ;../app/app_src/application.c: 393:             U1CON0 &=~ (1<<7);
 13331  007558  013D               	movlb	61	; force () banked
 13332  00755A  9FF2               	bcf	242,7,b	;volatile
 13333                           
 13334                           ; BSR set to: 61
 13335                           ;../app/app_src/application.c: 394:             U1BRGL = 0xA0;
 13336  00755C  0EA0               	movlw	160
 13337  00755E  013D               	movlb	61	; force () banked
 13338  007560  6FF5               	movwf	245,b	;volatile
 13339                           
 13340                           ; BSR set to: 61
 13341                           ;../app/app_src/application.c: 395:             U1BRGH = 0x01;
 13342  007562  0E01               	movlw	1
 13343  007564  013D               	movlb	61	; force () banked
 13344  007566  6FF6               	movwf	246,b	;volatile
 13345                           
 13346                           ; BSR set to: 61
 13347                           ;../app/app_src/application.c: 396:             current_baud_rate = 9600;
 13348  007568  0E80               	movlw	128
 13349  00756A  0102               	movlb	2	; force () banked
 13350  00756C  6F2B               	movwf	_current_baud_rate& (0+255),b
 13351  00756E  0E25               	movlw	37
 13352  007570  6F2C               	movwf	(_current_baud_rate+1)& (0+255),b
 13353  007572  0E00               	movlw	0
 13354  007574  6F2D               	movwf	(_current_baud_rate+2)& (0+255),b
 13355                           
 13356                           ; BSR set to: 2
 13357                           ;../app/app_src/application.c: 397:             uart_baud_rate = UART_BAUD_9600;
 13358  007576  0E00               	movlw	0
 13359  007578  D043               	goto	L9
 13360  00757A                     l14090:
 13361                           
 13362                           ; BSR set to: 0
 13363                           ;../app/app_src/application.c: 401:             U1CON0 &=~ (1<<7);
 13364  00757A  013D               	movlb	61	; force () banked
 13365  00757C  9FF2               	bcf	242,7,b	;volatile
 13366                           
 13367                           ; BSR set to: 61
 13368                           ;../app/app_src/application.c: 402:             U1BRGL = 0xCF;
 13369  00757E  0ECF               	movlw	207
 13370  007580  013D               	movlb	61	; force () banked
 13371  007582  6FF5               	movwf	245,b	;volatile
 13372                           
 13373                           ; BSR set to: 61
 13374                           ;../app/app_src/application.c: 403:             U1BRGH = 0x00;
 13375  007584  0E00               	movlw	0
 13376  007586  013D               	movlb	61	; force () banked
 13377  007588  6FF6               	movwf	246,b	;volatile
 13378                           
 13379                           ; BSR set to: 61
 13380                           ;../app/app_src/application.c: 404:             current_baud_rate = 19200;
 13381  00758A  0E00               	movlw	0
 13382  00758C  0102               	movlb	2	; force () banked
 13383  00758E  6F2B               	movwf	_current_baud_rate& (0+255),b
 13384  007590  0E4B               	movlw	75
 13385  007592  6F2C               	movwf	(_current_baud_rate+1)& (0+255),b
 13386  007594  0E00               	movlw	0
 13387  007596  6F2D               	movwf	(_current_baud_rate+2)& (0+255),b
 13388                           
 13389                           ; BSR set to: 2
 13390                           ;../app/app_src/application.c: 405:             uart_baud_rate = UART_BAUD_19200;
 13391  007598  0E01               	movlw	1
 13392  00759A  D032               	goto	L9
 13393  00759C                     l14100:
 13394                           
 13395                           ; BSR set to: 0
 13396                           ;../app/app_src/application.c: 409:             U1CON0 &=~ (1<<7);
 13397  00759C  013D               	movlb	61	; force () banked
 13398  00759E  9FF2               	bcf	242,7,b	;volatile
 13399                           
 13400                           ; BSR set to: 61
 13401                           ;../app/app_src/application.c: 410:             U1BRGL = 0x67;
 13402  0075A0  0E67               	movlw	103
 13403  0075A2  013D               	movlb	61	; force () banked
 13404  0075A4  6FF5               	movwf	245,b	;volatile
 13405                           
 13406                           ; BSR set to: 61
 13407                           ;../app/app_src/application.c: 411:             U1BRGH = 0x00;
 13408  0075A6  0E00               	movlw	0
 13409  0075A8  013D               	movlb	61	; force () banked
 13410  0075AA  6FF6               	movwf	246,b	;volatile
 13411                           
 13412                           ; BSR set to: 61
 13413                           ;../app/app_src/application.c: 412:             current_baud_rate = 38400;
 13414  0075AC  0E00               	movlw	0
 13415  0075AE  0102               	movlb	2	; force () banked
 13416  0075B0  6F2B               	movwf	_current_baud_rate& (0+255),b
 13417  0075B2  0E96               	movlw	150
 13418  0075B4  6F2C               	movwf	(_current_baud_rate+1)& (0+255),b
 13419  0075B6  0E00               	movlw	0
 13420  0075B8  6F2D               	movwf	(_current_baud_rate+2)& (0+255),b
 13421                           
 13422                           ; BSR set to: 2
 13423                           ;../app/app_src/application.c: 413:             uart_baud_rate = UART_BAUD_38400;
 13424  0075BA  0E02               	movlw	2
 13425  0075BC  D021               	goto	L9
 13426  0075BE                     l14110:
 13427                           
 13428                           ; BSR set to: 0
 13429                           ;../app/app_src/application.c: 417:             U1CON0 |= (1<<7);
 13430  0075BE  013D               	movlb	61	; force () banked
 13431  0075C0  8FF2               	bsf	242,7,b	;volatile
 13432                           
 13433                           ; BSR set to: 61
 13434                           ;../app/app_src/application.c: 418:             U1BRGL = 0x14;
 13435  0075C2  0E14               	movlw	20
 13436  0075C4  013D               	movlb	61	; force () banked
 13437  0075C6  6FF5               	movwf	245,b	;volatile
 13438                           
 13439                           ; BSR set to: 61
 13440                           ;../app/app_src/application.c: 419:             U1BRGH = 0x01;
 13441  0075C8  0E01               	movlw	1
 13442  0075CA  013D               	movlb	61	; force () banked
 13443  0075CC  6FF6               	movwf	246,b	;volatile
 13444                           
 13445                           ; BSR set to: 61
 13446                           ;../app/app_src/application.c: 420:             current_baud_rate = 57600;
 13447  0075CE  0E00               	movlw	0
 13448  0075D0  0102               	movlb	2	; force () banked
 13449  0075D2  6F2B               	movwf	_current_baud_rate& (0+255),b
 13450  0075D4  0EE1               	movlw	225
 13451  0075D6  6F2C               	movwf	(_current_baud_rate+1)& (0+255),b
 13452  0075D8  0E00               	movlw	0
 13453  0075DA  6F2D               	movwf	(_current_baud_rate+2)& (0+255),b
 13454                           
 13455                           ; BSR set to: 2
 13456                           ;../app/app_src/application.c: 421:             uart_baud_rate = UART_BAUD_57600;
 13457  0075DC  0E03               	movlw	3
 13458  0075DE  D010               	goto	L9
 13459  0075E0                     l14120:
 13460                           
 13461                           ; BSR set to: 0
 13462                           ;../app/app_src/application.c: 425:             U1CON0 |= (1<<7);
 13463  0075E0  013D               	movlb	61	; force () banked
 13464  0075E2  8FF2               	bsf	242,7,b	;volatile
 13465                           
 13466                           ; BSR set to: 61
 13467                           ;../app/app_src/application.c: 426:             U1BRGL = 0x89;
 13468  0075E4  0E89               	movlw	137
 13469  0075E6  013D               	movlb	61	; force () banked
 13470  0075E8  6FF5               	movwf	245,b	;volatile
 13471                           
 13472                           ; BSR set to: 61
 13473                           ;../app/app_src/application.c: 427:             U1BRGH = 0x00;
 13474  0075EA  0E00               	movlw	0
 13475  0075EC  013D               	movlb	61	; force () banked
 13476  0075EE  6FF6               	movwf	246,b	;volatile
 13477                           
 13478                           ; BSR set to: 61
 13479                           ;../app/app_src/application.c: 428:             current_baud_rate = 115200;
 13480  0075F0  0E00               	movlw	0
 13481  0075F2  0102               	movlb	2	; force () banked
 13482  0075F4  6F2B               	movwf	_current_baud_rate& (0+255),b
 13483  0075F6  0EC2               	movlw	194
 13484  0075F8  6F2C               	movwf	(_current_baud_rate+1)& (0+255),b
 13485  0075FA  0E01               	movlw	1
 13486  0075FC  6F2D               	movwf	(_current_baud_rate+2)& (0+255),b
 13487                           
 13488                           ; BSR set to: 2
 13489                           ;../app/app_src/application.c: 429:             uart_baud_rate = UART_BAUD_115200;
 13490  0075FE  0E04               	movlw	4
 13491  007600                     L9:
 13492  007600  0101               	movlb	1	; force () banked
 13493  007602  6FF2               	movwf	_uart_baud_rate& (0+255),b
 13494                           
 13495                           ;../app/app_src/application.c: 430:             break;
 13496  007604  D01C               	goto	l14138
 13497  007606                     l14130:
 13498                           
 13499                           ; BSR set to: 0
 13500                           ;../app/app_src/application.c: 432:             return ILLEGALPARAMETER;
 13501  007606  0E0D               	movlw	13
 13502  007608  0012               	return	
 13503  00760A                     l14136:
 13504                           
 13505                           ; BSR set to: 61
 13506  00760A  0100               	movlb	0	; force () banked
 13507  00760C  5173               	movf	set_uart_baud@i& (0+255),w,b
 13508  00760E  0100               	movlb	0	; force () banked
 13509  007610  6F71               	movwf	??_set_uart_baud& (0+255),b
 13510  007612  6B72               	clrf	(??_set_uart_baud+1)& (0+255),b
 13511                           
 13512                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13513                           ; Switch size 1, requested type "simple"
 13514                           ; Number of cases is 1, Range of values is 0 to 0
 13515                           ; switch strategies available:
 13516                           ; Name         Instructions Cycles
 13517                           ; simple_byte            4     3 (average)
 13518                           ;	Chosen strategy is simple_byte
 13519  007614  5172               	movf	(??_set_uart_baud+1)& (0+255),w,b
 13520  007616  0A00               	xorlw	0	; case 0
 13521  007618  A4D8               	btfss	status,2,c
 13522  00761A  D7F5               	goto	l14130
 13523                           
 13524                           ; BSR set to: 0
 13525                           ; Switch size 1, requested type "simple"
 13526                           ; Number of cases is 5, Range of values is 0 to 4
 13527                           ; switch strategies available:
 13528                           ; Name         Instructions Cycles
 13529                           ; simple_byte           16     9 (average)
 13530                           ;	Chosen strategy is simple_byte
 13531  00761C  5171               	movf	??_set_uart_baud& (0+255),w,b
 13532  00761E  0A00               	xorlw	0	; case 0
 13533  007620  B4D8               	btfsc	status,2,c
 13534  007622  D79A               	goto	l14080
 13535  007624  0A01               	xorlw	1	; case 1
 13536  007626  B4D8               	btfsc	status,2,c
 13537  007628  D7A8               	goto	l14090
 13538  00762A  0A03               	xorlw	3	; case 2
 13539  00762C  B4D8               	btfsc	status,2,c
 13540  00762E  D7B6               	goto	l14100
 13541  007630  0A01               	xorlw	1	; case 3
 13542  007632  B4D8               	btfsc	status,2,c
 13543  007634  D7C4               	goto	l14110
 13544  007636  0A07               	xorlw	7	; case 4
 13545  007638  B4D8               	btfsc	status,2,c
 13546  00763A  D7D2               	goto	l14120
 13547  00763C  D7E4               	goto	l14130
 13548  00763E                     l14138:
 13549                           
 13550                           ; BSR set to: 1
 13551                           ;../app/app_src/application.c: 434:     U1CON1 |= (1<<7);
 13552  00763E  013D               	movlb	61	; force () banked
 13553  007640  8FF3               	bsf	243,7,b	;volatile
 13554                           
 13555                           ; BSR set to: 61
 13556                           ;../app/app_src/application.c: 436:     return E_OK;
 13557  007642  0E02               	movlw	2
 13558  007644  0012               	return		;funcret
 13559  007646                     __end_of_set_uart_baud:
 13560                           	callstack 0
 13561                           
 13562 ;; *************** function _set_parity *****************
 13563 ;; Defined at:
 13564 ;;		line 326 in file "../app/app_src/application.c"
 13565 ;; Parameters:    Size  Location     Type
 13566 ;;  parity          1    wreg     unsigned char 
 13567 ;; Auto vars:     Size  Location     Type
 13568 ;;  parity          1   19[BANK0 ] unsigned char 
 13569 ;; Return value:  Size  Location     Type
 13570 ;;                  1    wreg      unsigned char 
 13571 ;; Registers used:
 13572 ;;		wreg, status,2, status,0
 13573 ;; Tracked objects:
 13574 ;;		On entry : 0/0
 13575 ;;		On exit  : 3F/0
 13576 ;;		Unchanged: 0/0
 13577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13579 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13580 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13581 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13582 ;;Total ram usage:        3 bytes
 13583 ;; Hardware stack levels used:    1
 13584 ;; Hardware stack levels required when called:   11
 13585 ;; This function calls:
 13586 ;;		Nothing
 13587 ;; This function is called by:
 13588 ;;		_bootLoadApplication
 13589 ;;		_handle_rw_regs
 13590 ;;		_uart_default_engine
 13591 ;; This function uses a non-reentrant model
 13592 ;;
 13593                           
 13594                           	psect	text49
 13595  009CEA                     __ptext49:
 13596                           	callstack 0
 13597  009CEA                     _set_parity:
 13598                           	callstack 18
 13599                           
 13600                           ;incstack = 0
 13601                           ;set_parity@parity stored from wreg
 13602  009CEA  0100               	movlb	0	; force () banked
 13603  009CEC  6F73               	movwf	set_parity@parity& (0+255),b
 13604                           
 13605                           ;../app/app_src/application.c: 326: uint8_t set_parity(uint8_t parity);../app/app_src/ap
      +                          plication.c: 327: {;../app/app_src/application.c: 328:     if((parity >= UART_PARITY_SEN
      +                          TINAL) || (UART_7BIT_MODE == parity)){
 13606  009CEE  0E04               	movlw	4
 13607  009CF0  0100               	movlb	0	; force () banked
 13608  009CF2  6173               	cpfslt	set_parity@parity& (0+255),b
 13609  009CF4  D004               	goto	u10950
 13610                           
 13611                           ; BSR set to: 0
 13612  009CF6  0100               	movlb	0	; force () banked
 13613  009CF8  0573               	decf	set_parity@parity& (0+255),w,b
 13614  009CFA  A4D8               	btfss	status,2,c
 13615  009CFC  D002               	goto	l14048
 13616  009CFE                     u10950:
 13617                           
 13618                           ; BSR set to: 0
 13619                           ;../app/app_src/application.c: 329:         return ILLEGALPARAMETER;
 13620  009CFE  0E0D               	movlw	13
 13621  009D00  0012               	return	
 13622  009D02                     l14048:
 13623                           
 13624                           ; BSR set to: 0
 13625                           ;../app/app_src/application.c: 332:     U1CON1 &= 0b01111111;
 13626  009D02  013D               	movlb	61	; force () banked
 13627  009D04  9FF3               	bcf	243,7,b	;volatile
 13628                           
 13629                           ; BSR set to: 61
 13630                           ;../app/app_src/application.c: 333:     U1CON0 &= 0b11110000;
 13631  009D06  0EF0               	movlw	240
 13632  009D08  013D               	movlb	61	; force () banked
 13633  009D0A  17F2               	andwf	242,f,b	;volatile
 13634                           
 13635                           ; BSR set to: 61
 13636                           ;../app/app_src/application.c: 334:     U1CON0 |= (parity & 0b00001111);
 13637  009D0C  0100               	movlb	0	; force () banked
 13638  009D0E  5173               	movf	set_parity@parity& (0+255),w,b
 13639  009D10  0B0F               	andlw	15
 13640  009D12  013D               	movlb	61	; force () banked
 13641  009D14  13F2               	iorwf	242,f,b	;volatile
 13642                           
 13643                           ; BSR set to: 61
 13644                           ;../app/app_src/application.c: 335:     U1CON2 &=~ (0b00110000);
 13645  009D16  0ECF               	movlw	207
 13646  009D18  013D               	movlb	61	; force () banked
 13647  009D1A  17F4               	andwf	244,f,b	;volatile
 13648                           
 13649                           ; BSR set to: 61
 13650                           ;../app/app_src/application.c: 336:     U1CON1 |= 0b10000000;
 13651  009D1C  013D               	movlb	61	; force () banked
 13652  009D1E  8FF3               	bsf	243,7,b	;volatile
 13653                           
 13654                           ;../app/app_src/application.c: 338:     switch(parity){
 13655  009D20  D011               	goto	l14068
 13656  009D22                     l14060:
 13657                           
 13658                           ; BSR set to: 0
 13659                           ;../app/app_src/application.c: 352:             uart_parity = UART_9BIT_ODD_PARITY;
 13660  009D22  0E02               	movlw	2
 13661  009D24  0101               	movlb	1	; force () banked
 13662  009D26  6FF1               	movwf	_uart_parity& (0+255),b
 13663                           
 13664                           ;../app/app_src/application.c: 354:             curent_parity = MB_PAR_ODD;
 13665  009D28  0E01               	movlw	1
 13666  009D2A  D009               	goto	L12
 13667  009D2C                     l14062:
 13668                           
 13669                           ; BSR set to: 0
 13670                           ;../app/app_src/application.c: 361:             uart_parity = UART_9BIT_EVEN_PARITY;
 13671  009D2C  0E03               	movlw	3
 13672  009D2E  0101               	movlb	1	; force () banked
 13673  009D30  6FF1               	movwf	_uart_parity& (0+255),b
 13674                           
 13675                           ;../app/app_src/application.c: 363:             curent_parity = MB_PAR_EVEN;
 13676  009D32  0E02               	movlw	2
 13677  009D34  D004               	goto	L12
 13678  009D36                     l14064:
 13679                           
 13680                           ; BSR set to: 0
 13681                           ;../app/app_src/application.c: 370:             uart_parity = UART_8BIT_NO_PARITY;
 13682  009D36  0E00               	movlw	0
 13683  009D38  0101               	movlb	1	; force () banked
 13684  009D3A  6FF1               	movwf	_uart_parity& (0+255),b
 13685                           
 13686                           ;../app/app_src/application.c: 372:             curent_parity = MB_PAR_NONE;
 13687  009D3C  0E00               	movlw	0
 13688  009D3E                     L12:
 13689  009D3E  0100               	movlb	0	; force () banked
 13690  009D40  6FE1               	movwf	_curent_parity& (0+255),b
 13691                           
 13692                           ;../app/app_src/application.c: 374:             break;
 13693  009D42  D014               	goto	l14070
 13694  009D44                     l14068:
 13695                           
 13696                           ; BSR set to: 61
 13697  009D44  0100               	movlb	0	; force () banked
 13698  009D46  5173               	movf	set_parity@parity& (0+255),w,b
 13699  009D48  0100               	movlb	0	; force () banked
 13700  009D4A  6F71               	movwf	??_set_parity& (0+255),b
 13701  009D4C  6B72               	clrf	(??_set_parity+1)& (0+255),b
 13702                           
 13703                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13704                           ; Switch size 1, requested type "simple"
 13705                           ; Number of cases is 1, Range of values is 0 to 0
 13706                           ; switch strategies available:
 13707                           ; Name         Instructions Cycles
 13708                           ; simple_byte            4     3 (average)
 13709                           ;	Chosen strategy is simple_byte
 13710  009D4E  5172               	movf	(??_set_parity+1)& (0+255),w,b
 13711  009D50  0A00               	xorlw	0	; case 0
 13712  009D52  A4D8               	btfss	status,2,c
 13713  009D54  D7F0               	goto	l14064
 13714                           
 13715                           ; BSR set to: 0
 13716                           ; Switch size 1, requested type "simple"
 13717                           ; Number of cases is 3, Range of values is 0 to 3
 13718                           ; switch strategies available:
 13719                           ; Name         Instructions Cycles
 13720                           ; simple_byte           10     6 (average)
 13721                           ;	Chosen strategy is simple_byte
 13722  009D56  5171               	movf	??_set_parity& (0+255),w,b
 13723  009D58  0A00               	xorlw	0	; case 0
 13724  009D5A  B4D8               	btfsc	status,2,c
 13725  009D5C  D7EC               	goto	l14064
 13726  009D5E  0A02               	xorlw	2	; case 2
 13727  009D60  B4D8               	btfsc	status,2,c
 13728  009D62  D7DF               	goto	l14060
 13729  009D64  0A01               	xorlw	1	; case 3
 13730  009D66  B4D8               	btfsc	status,2,c
 13731  009D68  D7E1               	goto	l14062
 13732  009D6A  D7E5               	goto	l14064
 13733  009D6C                     l14070:
 13734                           
 13735                           ; BSR set to: 0
 13736                           ;../app/app_src/application.c: 376:     return E_OK;
 13737  009D6C  0E02               	movlw	2
 13738                           
 13739                           ; BSR set to: 0
 13740  009D6E  0012               	return		;funcret
 13741  009D70                     __end_of_set_parity:
 13742                           	callstack 0
 13743                           
 13744 ;; *************** function _set_eeprom_sync *****************
 13745 ;; Defined at:
 13746 ;;		line 153 in file "../app/app_src/EEPROM.c"
 13747 ;; Parameters:    Size  Location     Type
 13748 ;;  flag_type       1    wreg     unsigned char 
 13749 ;; Auto vars:     Size  Location     Type
 13750 ;;  flag_type       1   19[BANK0 ] unsigned char 
 13751 ;;  return_param    1   20[BANK0 ] unsigned char 
 13752 ;; Return value:  Size  Location     Type
 13753 ;;                  1    wreg      unsigned char 
 13754 ;; Registers used:
 13755 ;;		wreg, status,2, status,0
 13756 ;; Tracked objects:
 13757 ;;		On entry : 0/0
 13758 ;;		On exit  : 3F/0
 13759 ;;		Unchanged: 0/0
 13760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13762 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13763 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13764 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13765 ;;Total ram usage:        4 bytes
 13766 ;; Hardware stack levels used:    1
 13767 ;; Hardware stack levels required when called:   11
 13768 ;; This function calls:
 13769 ;;		Nothing
 13770 ;; This function is called by:
 13771 ;;		_handle_write_only_regs
 13772 ;;		_handle_rw_regs
 13773 ;; This function uses a non-reentrant model
 13774 ;;
 13775                           
 13776                           	psect	text50
 13777  008042                     __ptext50:
 13778                           	callstack 0
 13779  008042                     _set_eeprom_sync:
 13780                           	callstack 16
 13781                           
 13782                           ; BSR set to: 0
 13783                           ;incstack = 0
 13784                           ;set_eeprom_sync@flag_type stored from wreg
 13785  008042  0100               	movlb	0	; force () banked
 13786  008044  6F73               	movwf	set_eeprom_sync@flag_type& (0+255),b
 13787                           
 13788                           ;../app/app_src/EEPROM.c: 154:     uint8_t return_parameter = E_OK;
 13789  008046  0E02               	movlw	2
 13790  008048  0100               	movlb	0	; force () banked
 13791  00804A  6F74               	movwf	set_eeprom_sync@return_parameter& (0+255),b
 13792                           
 13793                           ;../app/app_src/EEPROM.c: 155:     switch(flag_type){
 13794  00804C  D02E               	goto	l14318
 13795  00804E                     l969:
 13796                           
 13797                           ; BSR set to: 0
 13798                           ;../app/app_src/EEPROM.c: 157:             eeprom_write_flags.flag_bootload = 1;
 13799  00804E  0100               	movlb	0	; force () banked
 13800  008050  83D7               	bsf	_eeprom_write_flags& (0+255),1,b
 13801                           
 13802                           ;../app/app_src/EEPROM.c: 158:             break;
 13803  008052  D060               	goto	l970
 13804  008054                     l971:
 13805                           
 13806                           ; BSR set to: 0
 13807                           ;../app/app_src/EEPROM.c: 160:             eeprom_write_flags.flag_serial = 1;
 13808  008054  0100               	movlb	0	; force () banked
 13809  008056  85D7               	bsf	_eeprom_write_flags& (0+255),2,b
 13810                           
 13811                           ;../app/app_src/EEPROM.c: 161:             break;
 13812  008058  D05D               	goto	l970
 13813  00805A                     l972:
 13814                           
 13815                           ; BSR set to: 0
 13816                           ;../app/app_src/EEPROM.c: 163:             eeprom_write_flags.flag_appkey = 1;
 13817  00805A  0100               	movlb	0	; force () banked
 13818  00805C  87D7               	bsf	_eeprom_write_flags& (0+255),3,b
 13819                           
 13820                           ;../app/app_src/EEPROM.c: 164:             break;
 13821  00805E  D05A               	goto	l970
 13822  008060                     l973:
 13823                           
 13824                           ; BSR set to: 0
 13825                           ;../app/app_src/EEPROM.c: 166:             eeprom_write_flags.flag_netkey = 1;
 13826  008060  0100               	movlb	0	; force () banked
 13827  008062  89D7               	bsf	_eeprom_write_flags& (0+255),4,b
 13828                           
 13829                           ;../app/app_src/EEPROM.c: 167:             break;
 13830  008064  D057               	goto	l970
 13831  008066                     l974:
 13832                           
 13833                           ; BSR set to: 0
 13834                           ;../app/app_src/EEPROM.c: 169:             eeprom_write_flags.flag_netid = 1;
 13835  008066  0100               	movlb	0	; force () banked
 13836  008068  8BD7               	bsf	_eeprom_write_flags& (0+255),5,b
 13837                           
 13838                           ;../app/app_src/EEPROM.c: 170:             break;
 13839  00806A  D054               	goto	l970
 13840  00806C                     l975:
 13841                           
 13842                           ; BSR set to: 0
 13843                           ;../app/app_src/EEPROM.c: 172:             eeprom_write_flags.flag_sink = 1;
 13844  00806C  0100               	movlb	0	; force () banked
 13845  00806E  8DD7               	bsf	_eeprom_write_flags& (0+255),6,b
 13846                           
 13847                           ;../app/app_src/EEPROM.c: 173:             break;
 13848  008070  D051               	goto	l970
 13849  008072                     l976:
 13850                           
 13851                           ; BSR set to: 0
 13852                           ;../app/app_src/EEPROM.c: 175:             eeprom_write_flags.flag_radio_ch = 1;
 13853  008072  0100               	movlb	0	; force () banked
 13854  008074  8FD7               	bsf	_eeprom_write_flags& (0+255),7,b
 13855                           
 13856                           ;../app/app_src/EEPROM.c: 176:             break;
 13857  008076  D04E               	goto	l970
 13858  008078                     l977:
 13859                           
 13860                           ; BSR set to: 0
 13861                           ;../app/app_src/EEPROM.c: 178:             eeprom_write_flags.flag_tx_power = 1;
 13862  008078  0100               	movlb	0	; force () banked
 13863  00807A  81D8               	bsf	(_eeprom_write_flags+1)& (0+255),0,b
 13864                           
 13865                           ;../app/app_src/EEPROM.c: 179:             break;
 13866  00807C  D04B               	goto	l970
 13867  00807E                     l978:
 13868                           
 13869                           ; BSR set to: 0
 13870                           ;../app/app_src/EEPROM.c: 181:             eeprom_write_flags.flag_rssi = 1;
 13871  00807E  0100               	movlb	0	; force () banked
 13872  008080  83D8               	bsf	(_eeprom_write_flags+1)& (0+255),1,b
 13873                           
 13874                           ;../app/app_src/EEPROM.c: 182:             break;
 13875  008082  D048               	goto	l970
 13876  008084                     l979:
 13877                           
 13878                           ; BSR set to: 0
 13879                           ;../app/app_src/EEPROM.c: 184:             eeprom_write_flags.flag_uart_parity = 1;
 13880  008084  0100               	movlb	0	; force () banked
 13881  008086  85D8               	bsf	(_eeprom_write_flags+1)& (0+255),2,b
 13882                           
 13883                           ;../app/app_src/EEPROM.c: 185:             break;
 13884  008088  D045               	goto	l970
 13885  00808A                     l980:
 13886                           
 13887                           ; BSR set to: 0
 13888                           ;../app/app_src/EEPROM.c: 187:             eeprom_write_flags.flag_uart_baud = 1;
 13889  00808A  0100               	movlb	0	; force () banked
 13890  00808C  87D8               	bsf	(_eeprom_write_flags+1)& (0+255),3,b
 13891                           
 13892                           ;../app/app_src/EEPROM.c: 188:             break;
 13893  00808E  D042               	goto	l970
 13894  008090                     l981:
 13895                           
 13896                           ; BSR set to: 0
 13897                           ;../app/app_src/EEPROM.c: 190:             eeprom_write_flags.flag_sf = 1;
 13898  008090  0100               	movlb	0	; force () banked
 13899  008092  89D8               	bsf	(_eeprom_write_flags+1)& (0+255),4,b
 13900                           
 13901                           ;../app/app_src/EEPROM.c: 191:             break;
 13902  008094  D03F               	goto	l970
 13903  008096                     l982:
 13904                           
 13905                           ; BSR set to: 0
 13906                           ;../app/app_src/EEPROM.c: 193:             eeprom_write_flags.flag_mbaddr = 1;
 13907  008096  0100               	movlb	0	; force () banked
 13908  008098  8BD8               	bsf	(_eeprom_write_flags+1)& (0+255),5,b
 13909                           
 13910                           ;../app/app_src/EEPROM.c: 194:             break;
 13911  00809A  D03C               	goto	l970
 13912  00809C                     l983:
 13913                           
 13914                           ; BSR set to: 0
 13915                           ;../app/app_src/EEPROM.c: 196:             eeprom_write_flags.flag_good_rssi = 1;
 13916  00809C  0100               	movlb	0	; force () banked
 13917  00809E  8DD8               	bsf	(_eeprom_write_flags+1)& (0+255),6,b
 13918                           
 13919                           ;../app/app_src/EEPROM.c: 197:             break;
 13920  0080A0  D039               	goto	l970
 13921  0080A2                     l14314:
 13922                           
 13923                           ; BSR set to: 0
 13924                           ;../app/app_src/EEPROM.c: 199:             return_parameter = ILLEGALPARAMETER;
 13925  0080A2  0E0D               	movlw	13
 13926  0080A4  0100               	movlb	0	; force () banked
 13927  0080A6  6F74               	movwf	set_eeprom_sync@return_parameter& (0+255),b
 13928                           
 13929                           ;../app/app_src/EEPROM.c: 200:             break;
 13930  0080A8  D035               	goto	l970
 13931  0080AA                     l14318:
 13932                           
 13933                           ; BSR set to: 0
 13934  0080AA  0100               	movlb	0	; force () banked
 13935  0080AC  5173               	movf	set_eeprom_sync@flag_type& (0+255),w,b
 13936  0080AE  0100               	movlb	0	; force () banked
 13937  0080B0  6F71               	movwf	??_set_eeprom_sync& (0+255),b
 13938  0080B2  6B72               	clrf	(??_set_eeprom_sync+1)& (0+255),b
 13939                           
 13940                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13941                           ; Switch size 1, requested type "simple"
 13942                           ; Number of cases is 1, Range of values is 0 to 0
 13943                           ; switch strategies available:
 13944                           ; Name         Instructions Cycles
 13945                           ; simple_byte            4     3 (average)
 13946                           ;	Chosen strategy is simple_byte
 13947  0080B4  5172               	movf	(??_set_eeprom_sync+1)& (0+255),w,b
 13948  0080B6  0A00               	xorlw	0	; case 0
 13949  0080B8  A4D8               	btfss	status,2,c
 13950  0080BA  D7F3               	goto	l14314
 13951                           
 13952                           ; BSR set to: 0
 13953                           ; Switch size 1, requested type "simple"
 13954                           ; Number of cases is 14, Range of values is 0 to 13
 13955                           ; switch strategies available:
 13956                           ; Name         Instructions Cycles
 13957                           ; simple_byte           43    22 (average)
 13958                           ;	Chosen strategy is simple_byte
 13959  0080BC  5171               	movf	??_set_eeprom_sync& (0+255),w,b
 13960  0080BE  0A00               	xorlw	0	; case 0
 13961  0080C0  B4D8               	btfsc	status,2,c
 13962  0080C2  D7C5               	goto	l969
 13963  0080C4  0A01               	xorlw	1	; case 1
 13964  0080C6  B4D8               	btfsc	status,2,c
 13965  0080C8  D7C5               	goto	l971
 13966  0080CA  0A03               	xorlw	3	; case 2
 13967  0080CC  B4D8               	btfsc	status,2,c
 13968  0080CE  D7C5               	goto	l972
 13969  0080D0  0A01               	xorlw	1	; case 3
 13970  0080D2  B4D8               	btfsc	status,2,c
 13971  0080D4  D7C5               	goto	l973
 13972  0080D6  0A07               	xorlw	7	; case 4
 13973  0080D8  B4D8               	btfsc	status,2,c
 13974  0080DA  D7C5               	goto	l974
 13975  0080DC  0A01               	xorlw	1	; case 5
 13976  0080DE  B4D8               	btfsc	status,2,c
 13977  0080E0  D7C5               	goto	l975
 13978  0080E2  0A03               	xorlw	3	; case 6
 13979  0080E4  B4D8               	btfsc	status,2,c
 13980  0080E6  D7C5               	goto	l976
 13981  0080E8  0A01               	xorlw	1	; case 7
 13982  0080EA  B4D8               	btfsc	status,2,c
 13983  0080EC  D7C5               	goto	l977
 13984  0080EE  0A0F               	xorlw	15	; case 8
 13985  0080F0  B4D8               	btfsc	status,2,c
 13986  0080F2  D7C5               	goto	l978
 13987  0080F4  0A01               	xorlw	1	; case 9
 13988  0080F6  B4D8               	btfsc	status,2,c
 13989  0080F8  D7C5               	goto	l979
 13990  0080FA  0A03               	xorlw	3	; case 10
 13991  0080FC  B4D8               	btfsc	status,2,c
 13992  0080FE  D7C5               	goto	l980
 13993  008100  0A01               	xorlw	1	; case 11
 13994  008102  B4D8               	btfsc	status,2,c
 13995  008104  D7C5               	goto	l981
 13996  008106  0A07               	xorlw	7	; case 12
 13997  008108  B4D8               	btfsc	status,2,c
 13998  00810A  D7C5               	goto	l982
 13999  00810C  0A01               	xorlw	1	; case 13
 14000  00810E  B4D8               	btfsc	status,2,c
 14001  008110  D7C5               	goto	l983
 14002  008112  D7C7               	goto	l14314
 14003  008114                     l970:
 14004                           
 14005                           ; BSR set to: 0
 14006                           ;../app/app_src/EEPROM.c: 202:     eeprom_write_flags.flag_master = 1;
 14007  008114  0100               	movlb	0	; force () banked
 14008  008116  81D7               	bsf	_eeprom_write_flags& (0+255),0,b
 14009                           
 14010                           ; BSR set to: 0
 14011                           ;../app/app_src/EEPROM.c: 203:     return return_parameter;
 14012  008118  0100               	movlb	0	; force () banked
 14013  00811A  5174               	movf	set_eeprom_sync@return_parameter& (0+255),w,b
 14014                           
 14015                           ; BSR set to: 0
 14016  00811C  0012               	return		;funcret
 14017  00811E                     __end_of_set_eeprom_sync:
 14018                           	callstack 0
 14019                           
 14020 ;; *************** function _eMBInit *****************
 14021 ;; Defined at:
 14022 ;;		line 130 in file "../modbus/mb.c"
 14023 ;; Parameters:    Size  Location     Type
 14024 ;;  eMode           1    wreg     enum E15828
 14025 ;;  ucSlaveAddre    1   61[BANK0 ] unsigned char 
 14026 ;;  ucPort          1   62[BANK0 ] unsigned char 
 14027 ;;  ulBaudRate      4   63[BANK0 ] unsigned long 
 14028 ;;  eParity         1   67[BANK0 ] enum E15755
 14029 ;; Auto vars:     Size  Location     Type
 14030 ;;  eMode           1   70[BANK0 ] enum E15828
 14031 ;;  eStatus         1   71[BANK0 ] enum E15837
 14032 ;; Return value:  Size  Location     Type
 14033 ;;                  1    wreg      enum E16538
 14034 ;; Registers used:
 14035 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14036 ;; Tracked objects:
 14037 ;;		On entry : 3F/0
 14038 ;;		On exit  : 3F/0
 14039 ;;		Unchanged: 0/0
 14040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14041 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14042 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14043 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14044 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14045 ;;Total ram usage:       11 bytes
 14046 ;; Hardware stack levels used:    1
 14047 ;; Hardware stack levels required when called:   14
 14048 ;; This function calls:
 14049 ;;		_eMBRTUInit
 14050 ;;		_xMBPortEventInit
 14051 ;; This function is called by:
 14052 ;;		_bootLoadApplication
 14053 ;;		_handle_rw_regs
 14054 ;;		_uart_default_engine
 14055 ;; This function uses a non-reentrant model
 14056 ;;
 14057                           
 14058                           	psect	text51
 14059  007920                     __ptext51:
 14060                           	callstack 0
 14061  007920                     _eMBInit:
 14062                           	callstack 15
 14063                           
 14064                           ; BSR set to: 0
 14065                           ;incstack = 0
 14066                           ;eMBInit@eMode stored from wreg
 14067  007920  0100               	movlb	0	; force () banked
 14068  007922  6FA6               	movwf	eMBInit@eMode& (0+255),b
 14069                           
 14070                           ;../modbus/mb.c: 130: eMBInit( eMBMode eMode, UCHAR ucSlaveAddress, UCHAR ucPort, ULONG 
      +                          ulBaudRate, eMBParity eParity );../modbus/mb.c: 131: {;../modbus/mb.c: 132:     eMBError
      +                          Code eStatus = MB_ENOERR;
 14071  007924  0E00               	movlw	0
 14072  007926  0100               	movlb	0	; force () banked
 14073  007928  6FA7               	movwf	eMBInit@eStatus& (0+255),b
 14074                           
 14075                           ; BSR set to: 0
 14076                           ;../modbus/mb.c: 135:     if( ( ucSlaveAddress == ( 0 ) ) ||
 14077  00792A  0100               	movlb	0	; force () banked
 14078  00792C  519D               	movf	eMBInit@ucSlaveAddress& (0+255),w,b
 14079  00792E  B4D8               	btfsc	status,2,c
 14080  007930  D008               	goto	u16470
 14081                           
 14082                           ; BSR set to: 0
 14083  007932  0100               	movlb	0	; force () banked
 14084  007934  519D               	movf	eMBInit@ucSlaveAddress& (0+255),w,b
 14085  007936  B4D8               	btfsc	status,2,c
 14086  007938  D004               	goto	u16470
 14087                           
 14088                           ; BSR set to: 0
 14089  00793A  0EF7               	movlw	247
 14090  00793C  0100               	movlb	0	; force () banked
 14091  00793E  659D               	cpfsgt	eMBInit@ucSlaveAddress& (0+255),b
 14092  007940  D002               	goto	l4023
 14093  007942                     u16470:
 14094                           
 14095                           ; BSR set to: 0
 14096                           ;../modbus/mb.c: 137:     {;../modbus/mb.c: 138:         eStatus = MB_EINVAL;
 14097  007942  0E02               	movlw	2
 14098  007944  D058               	goto	L13
 14099  007946                     l4023:
 14100                           
 14101                           ; BSR set to: 0
 14102                           ;../modbus/mb.c: 141:     {;../modbus/mb.c: 142:         ucMBAddress = ucSlaveAddress;
 14103  007946  C09D  F1DF         	movff	eMBInit@ucSlaveAddress,_ucMBAddress
 14104                           
 14105                           ;../modbus/mb.c: 144:         switch ( eMode )
 14106  00794A  D03D               	goto	l18788
 14107  00794C                     l18780:
 14108                           
 14109                           ; BSR set to: 0
 14110                           ;../modbus/mb.c: 148:             pvMBFrameStartCur = eMBRTUStart;
 14111  00794C  0E0E               	movlw	low _eMBRTUStart
 14112  00794E  0102               	movlb	2	; force () banked
 14113  007950  6F38               	movwf	_pvMBFrameStartCur& (0+255),b
 14114  007952  0EBA               	movlw	high _eMBRTUStart
 14115  007954  6F39               	movwf	(_pvMBFrameStartCur+1)& (0+255),b
 14116                           
 14117                           ;../modbus/mb.c: 149:             pvMBFrameStopCur = eMBRTUStop;
 14118  007956  0E6E               	movlw	low _eMBRTUStop
 14119  007958  0102               	movlb	2	; force () banked
 14120  00795A  6F36               	movwf	_pvMBFrameStopCur& (0+255),b
 14121  00795C  0EBB               	movlw	high _eMBRTUStop
 14122  00795E  6F37               	movwf	(_pvMBFrameStopCur+1)& (0+255),b
 14123                           
 14124                           ;../modbus/mb.c: 150:             peMBFrameSendCur = eMBRTUSend;
 14125  007960  0E34               	movlw	low _eMBRTUSend
 14126  007962  0102               	movlb	2	; force () banked
 14127  007964  6F3A               	movwf	_peMBFrameSendCur& (0+255),b
 14128  007966  0E8A               	movlw	high _eMBRTUSend
 14129  007968  6F3B               	movwf	(_peMBFrameSendCur+1)& (0+255),b
 14130                           
 14131                           ;../modbus/mb.c: 152:             pvMBFrameCloseCur = 0 ? vMBPortClose : (0);
 14132  00796A  0E7C               	movlw	low _eMBRTUReceive
 14133  00796C  0102               	movlb	2	; force () banked
 14134  00796E  6F34               	movwf	_peMBFrameReceiveCur& (0+255),b
 14135  007970  0E84               	movlw	high _eMBRTUReceive
 14136  007972  6F35               	movwf	(_peMBFrameReceiveCur+1)& (0+255),b
 14137  007974  0E00               	movlw	0
 14138  007976  0102               	movlb	2	; force () banked
 14139  007978  6F32               	movwf	_pvMBFrameCloseCur& (0+255),b
 14140  00797A  0E00               	movlw	0
 14141  00797C  6F33               	movwf	(_pvMBFrameCloseCur+1)& (0+255),b
 14142                           
 14143                           ; BSR set to: 2
 14144                           ;../modbus/mb.c: 153:             pxMBFrameCBByteReceived = xMBRTUReceiveFSM;
 14145  00797E  0EA8               	movlw	low _xMBRTUReceiveFSM
 14146  007980  0102               	movlb	2	; force () banked
 14147  007982  6F46               	movwf	_pxMBFrameCBByteReceived& (0+255),b
 14148  007984  0E7D               	movlw	high _xMBRTUReceiveFSM
 14149  007986  6F47               	movwf	(_pxMBFrameCBByteReceived+1)& (0+255),b
 14150                           
 14151                           ;../modbus/mb.c: 154:             pxMBFrameCBTransmitterEmpty = xMBRTUTransmitFSM;
 14152  007988  0E5A               	movlw	low _xMBRTUTransmitFSM
 14153  00798A  0102               	movlb	2	; force () banked
 14154  00798C  6F48               	movwf	_pxMBFrameCBTransmitterEmpty& (0+255),b
 14155  00798E  0E8F               	movlw	high _xMBRTUTransmitFSM
 14156  007990  6F49               	movwf	(_pxMBFrameCBTransmitterEmpty+1)& (0+255),b
 14157                           
 14158                           ;../modbus/mb.c: 155:             pxMBPortCBTimerExpired = xMBRTUTimerT35Expired;
 14159  007992  0EF4               	movlw	low _xMBRTUTimerT35Expired
 14160  007994  0102               	movlb	2	; force () banked
 14161  007996  6F44               	movwf	_pxMBPortCBTimerExpired& (0+255),b
 14162  007998  0E97               	movlw	high _xMBRTUTimerT35Expired
 14163  00799A  6F45               	movwf	(_pxMBPortCBTimerExpired+1)& (0+255),b
 14164                           
 14165                           ; BSR set to: 2
 14166                           ;../modbus/mb.c: 157:             eStatus = eMBRTUInit( ucMBAddress, ucPort, ulBaudRate,
      +                           eParity );
 14167  00799C  C09E  F092         	movff	eMBInit@ucPort,eMBRTUInit@ucPort
 14168  0079A0  C09F  F093         	movff	eMBInit@ulBaudRate,eMBRTUInit@ulBaudRate
 14169  0079A4  C0A0  F094         	movff	eMBInit@ulBaudRate+1,eMBRTUInit@ulBaudRate+1
 14170  0079A8  C0A1  F095         	movff	eMBInit@ulBaudRate+2,eMBRTUInit@ulBaudRate+2
 14171  0079AC  C0A2  F096         	movff	eMBInit@ulBaudRate+3,eMBRTUInit@ulBaudRate+3
 14172  0079B0  C0A3  F097         	movff	eMBInit@eParity,eMBRTUInit@eParity
 14173  0079B4  0101               	movlb	1	; force () banked
 14174  0079B6  51DF               	movf	_ucMBAddress& (0+255),w,b
 14175  0079B8  EC3F  F046         	call	_eMBRTUInit
 14176  0079BC  D001               	goto	L14
 14177  0079BE                     l18786:
 14178                           
 14179                           ; BSR set to: 0
 14180                           ;../modbus/mb.c: 175:             eStatus = MB_EINVAL;
 14181  0079BE  0E02               	movlw	2
 14182  0079C0                     L14:
 14183  0079C0  0100               	movlb	0	; force () banked
 14184  0079C2  6FA7               	movwf	eMBInit@eStatus& (0+255),b
 14185                           
 14186                           ;../modbus/mb.c: 176:         }
 14187  0079C4  D00E               	goto	l18790
 14188  0079C6                     l18788:
 14189                           
 14190                           ; BSR set to: 0
 14191  0079C6  0100               	movlb	0	; force () banked
 14192  0079C8  51A6               	movf	eMBInit@eMode& (0+255),w,b
 14193  0079CA  0100               	movlb	0	; force () banked
 14194  0079CC  6FA4               	movwf	??_eMBInit& (0+255),b
 14195  0079CE  6BA5               	clrf	(??_eMBInit+1)& (0+255),b
 14196                           
 14197                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14198                           ; Switch size 1, requested type "simple"
 14199                           ; Number of cases is 1, Range of values is 0 to 0
 14200                           ; switch strategies available:
 14201                           ; Name         Instructions Cycles
 14202                           ; simple_byte            4     3 (average)
 14203                           ;	Chosen strategy is simple_byte
 14204  0079D0  51A5               	movf	(??_eMBInit+1)& (0+255),w,b
 14205  0079D2  0A00               	xorlw	0	; case 0
 14206  0079D4  A4D8               	btfss	status,2,c
 14207  0079D6  D7F3               	goto	l18786
 14208                           
 14209                           ; BSR set to: 0
 14210                           ; Switch size 1, requested type "simple"
 14211                           ; Number of cases is 1, Range of values is 0 to 0
 14212                           ; switch strategies available:
 14213                           ; Name         Instructions Cycles
 14214                           ; simple_byte            4     3 (average)
 14215                           ;	Chosen strategy is simple_byte
 14216  0079D8  51A4               	movf	??_eMBInit& (0+255),w,b
 14217  0079DA  0A00               	xorlw	0	; case 0
 14218  0079DC  B4D8               	btfsc	status,2,c
 14219  0079DE  D7B6               	goto	l18780
 14220  0079E0  D7EE               	goto	l18786
 14221  0079E2                     l18790:
 14222                           
 14223                           ; BSR set to: 0
 14224                           ;../modbus/mb.c: 178:         if( eStatus == MB_ENOERR )
 14225  0079E2  0100               	movlb	0	; force () banked
 14226  0079E4  51A7               	movf	eMBInit@eStatus& (0+255),w,b
 14227  0079E6  A4D8               	btfss	status,2,c
 14228  0079E8  D00E               	goto	l4026
 14229                           
 14230                           ; BSR set to: 0
 14231                           ;../modbus/mb.c: 179:         {;../modbus/mb.c: 180:             if( !xMBPortEventInit( 
      +                          ) )
 14232  0079EA  EC75  F05E         	call	_xMBPortEventInit	;wreg free
 14233  0079EE  0900               	iorlw	0
 14234  0079F0  A4D8               	btfss	status,2,c
 14235  0079F2  D004               	goto	l4036
 14236                           
 14237                           ; BSR set to: 2
 14238                           ;../modbus/mb.c: 181:             {;../modbus/mb.c: 183:                 eStatus = MB_EP
      +                          ORTERR;
 14239  0079F4  0E03               	movlw	3
 14240  0079F6                     L13:
 14241  0079F6  0100               	movlb	0	; force () banked
 14242  0079F8  6FA7               	movwf	eMBInit@eStatus& (0+255),b
 14243                           
 14244                           ;../modbus/mb.c: 184:             }
 14245  0079FA  D005               	goto	l4026
 14246  0079FC                     l4036:
 14247                           
 14248                           ; BSR set to: 2
 14249                           ;../modbus/mb.c: 186:             {;../modbus/mb.c: 187:                 eMBCurrentMode 
      +                          = eMode;
 14250  0079FC  C0A6  F252         	movff	eMBInit@eMode,_eMBCurrentMode
 14251                           
 14252                           ; BSR set to: 2
 14253                           ;../modbus/mb.c: 188:                 eMBState = STATE_DISABLED;
 14254  007A00  0E01               	movlw	1
 14255  007A02  0101               	movlb	1	; force () banked
 14256  007A04  6FFC               	movwf	_eMBState& (0+255),b
 14257  007A06                     l4026:
 14258                           
 14259                           ;../modbus/mb.c: 192:     return eStatus;
 14260  007A06  0100               	movlb	0	; force () banked
 14261  007A08  51A7               	movf	eMBInit@eStatus& (0+255),w,b
 14262                           
 14263                           ; BSR set to: 0
 14264  007A0A  0012               	return		;funcret
 14265  007A0C                     __end_of_eMBInit:
 14266                           	callstack 0
 14267                           
 14268 ;; *************** function _xMBPortEventInit *****************
 14269 ;; Defined at:
 14270 ;;		line 32 in file "../modbus/port/portevent.c"
 14271 ;; Parameters:    Size  Location     Type
 14272 ;;		None
 14273 ;; Auto vars:     Size  Location     Type
 14274 ;;		None
 14275 ;; Return value:  Size  Location     Type
 14276 ;;                  1    wreg      unsigned char 
 14277 ;; Registers used:
 14278 ;;		wreg, status,2
 14279 ;; Tracked objects:
 14280 ;;		On entry : 3F/0
 14281 ;;		On exit  : 3F/2
 14282 ;;		Unchanged: 0/0
 14283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14288 ;;Total ram usage:        0 bytes
 14289 ;; Hardware stack levels used:    1
 14290 ;; Hardware stack levels required when called:   11
 14291 ;; This function calls:
 14292 ;;		Nothing
 14293 ;; This function is called by:
 14294 ;;		_eMBInit
 14295 ;; This function uses a non-reentrant model
 14296 ;;
 14297                           
 14298                           	psect	text52
 14299  00BCEA                     __ptext52:
 14300                           	callstack 0
 14301  00BCEA                     _xMBPortEventInit:
 14302                           	callstack 17
 14303                           
 14304                           ;../modbus/port/portevent.c: 34:     xEventInQueue = 0;
 14305                           
 14306                           ; BSR set to: 0
 14307                           ;incstack = 0
 14308  00BCEA  0E00               	movlw	0
 14309  00BCEC  0102               	movlb	2	; force () banked
 14310  00BCEE  6F56               	movwf	_xEventInQueue& (0+255),b
 14311                           
 14312                           ; BSR set to: 2
 14313                           ;../modbus/port/portevent.c: 35:     return 1;
 14314  00BCF0  0E01               	movlw	1
 14315                           
 14316                           ; BSR set to: 2
 14317  00BCF2  0012               	return		;funcret
 14318  00BCF4                     __end_of_xMBPortEventInit:
 14319                           	callstack 0
 14320                           
 14321 ;; *************** function _eMBRTUInit *****************
 14322 ;; Defined at:
 14323 ;;		line 81 in file "../modbus/rtu/mbrtu.c"
 14324 ;; Parameters:    Size  Location     Type
 14325 ;;  ucSlaveAddre    1    wreg     unsigned char 
 14326 ;;  ucPort          1   50[BANK0 ] unsigned char 
 14327 ;;  ulBaudRate      4   51[BANK0 ] unsigned long 
 14328 ;;  eParity         1   55[BANK0 ] enum E15755
 14329 ;; Auto vars:     Size  Location     Type
 14330 ;;  ucSlaveAddre    1    0[BANK0 ] unsigned char 
 14331 ;;  usTimerT35_5    4   56[BANK0 ] unsigned long 
 14332 ;;  eStatus         1   60[BANK0 ] enum E15837
 14333 ;; Return value:  Size  Location     Type
 14334 ;;                  1    wreg      enum E15837
 14335 ;; Registers used:
 14336 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14337 ;; Tracked objects:
 14338 ;;		On entry : 3F/1
 14339 ;;		On exit  : 3F/0
 14340 ;;		Unchanged: 0/0
 14341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14342 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14343 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14345 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14346 ;;Total ram usage:       11 bytes
 14347 ;; Hardware stack levels used:    1
 14348 ;; Hardware stack levels required when called:   13
 14349 ;; This function calls:
 14350 ;;		___lldiv
 14351 ;;		_xMBPortSerialInit
 14352 ;;		_xMBPortTimersInit
 14353 ;; This function is called by:
 14354 ;;		_eMBInit
 14355 ;; This function uses a non-reentrant model
 14356 ;;
 14357                           
 14358                           	psect	text53
 14359  008C7E                     __ptext53:
 14360                           	callstack 0
 14361  008C7E                     _eMBRTUInit:
 14362                           	callstack 15
 14363                           
 14364                           ;../modbus/rtu/mbrtu.c: 81: eMBRTUInit( UCHAR ucSlaveAddress, UCHAR ucPort, ULONG ulBaud
      +                          Rate, eMBParity eParity );../modbus/rtu/mbrtu.c: 82: {;../modbus/rtu/mbrtu.c: 83:     eM
      +                          BErrorCode eStatus = MB_ENOERR;
 14365                           
 14366                           ; BSR set to: 2
 14367                           ;incstack = 0
 14368  008C7E  0E00               	movlw	0
 14369  008C80  0100               	movlb	0	; force () banked
 14370  008C82  6F9C               	movwf	eMBRTUInit@eStatus& (0+255),b
 14371                           
 14372                           ; BSR set to: 0
 14373                           ;../modbus/rtu/mbrtu.c: 87:     GIE=0;
 14374  008C84  9ED2               	bcf	16338,7,c	;volatile
 14375                           
 14376                           ; BSR set to: 0
 14377                           ;../modbus/rtu/mbrtu.c: 90:     if( xMBPortSerialInit( ucPort, ulBaudRate, 8, eParity ) 
      +                          != 1 )
 14378  008C86  C093  F071         	movff	eMBRTUInit@ulBaudRate,xMBPortSerialInit@ulBaudRate
 14379  008C8A  C094  F072         	movff	eMBRTUInit@ulBaudRate+1,xMBPortSerialInit@ulBaudRate+1
 14380  008C8E  C095  F073         	movff	eMBRTUInit@ulBaudRate+2,xMBPortSerialInit@ulBaudRate+2
 14381  008C92  C096  F074         	movff	eMBRTUInit@ulBaudRate+3,xMBPortSerialInit@ulBaudRate+3
 14382  008C96  0E08               	movlw	8
 14383  008C98  0100               	movlb	0	; force () banked
 14384  008C9A  6F75               	movwf	xMBPortSerialInit@ucDataBits& (0+255),b
 14385  008C9C  C097  F076         	movff	eMBRTUInit@eParity,xMBPortSerialInit@eParity
 14386  008CA0  0100               	movlb	0	; force () banked
 14387  008CA2  5192               	movf	eMBRTUInit@ucPort& (0+255),w,b
 14388  008CA4  ECC0  F05E         	call	_xMBPortSerialInit
 14389  008CA8  06E8               	decf	wreg,f,c
 14390  008CAA  A4D8               	btfss	status,2,c
 14391  008CAC  D040               	goto	u16030
 14392                           
 14393                           ;../modbus/rtu/mbrtu.c: 95:     {;../modbus/rtu/mbrtu.c: 99:         if( ulBaudRate > 19
      +                          200 )
 14394                           
 14395                           ;../modbus/rtu/mbrtu.c: 93:     }
 14396                           
 14397                           ;../modbus/rtu/mbrtu.c: 91:     {;../modbus/rtu/mbrtu.c: 92:         eStatus = MB_EPORTE
      +                          RR;
 14398  008CAE  0100               	movlb	0	; force () banked
 14399  008CB0  5196               	movf	(eMBRTUInit@ulBaudRate+3)& (0+255),w,b
 14400  008CB2  1195               	iorwf	(eMBRTUInit@ulBaudRate+2)& (0+255),w,b
 14401  008CB4  E105               	bnz	u16020
 14402  008CB6  0593               	decf	eMBRTUInit@ulBaudRate& (0+255),w,b
 14403  008CB8  0E4B               	movlw	75
 14404  008CBA  5994               	subwfb	(eMBRTUInit@ulBaudRate+1)& (0+255),w,b
 14405  008CBC  A0D8               	btfss	status,0,c
 14406  008CBE  D00A               	goto	l18414
 14407  008CC0                     u16020:
 14408                           
 14409                           ; BSR set to: 0
 14410                           ;../modbus/rtu/mbrtu.c: 100:         {;../modbus/rtu/mbrtu.c: 101:             usTimerT3
      +                          5_50us = 35;
 14411  008CC0  0E23               	movlw	35
 14412  008CC2  0100               	movlb	0	; force () banked
 14413  008CC4  6F98               	movwf	eMBRTUInit@usTimerT35_50us& (0+255),b
 14414  008CC6  0E00               	movlw	0
 14415  008CC8  6F99               	movwf	(eMBRTUInit@usTimerT35_50us+1)& (0+255),b
 14416  008CCA  0E00               	movlw	0
 14417  008CCC  6F9A               	movwf	(eMBRTUInit@usTimerT35_50us+2)& (0+255),b
 14418  008CCE  0E00               	movlw	0
 14419  008CD0  6F9B               	movwf	(eMBRTUInit@usTimerT35_50us+3)& (0+255),b
 14420                           
 14421                           ;../modbus/rtu/mbrtu.c: 102:         }
 14422  008CD2  D024               	goto	l18416
 14423  008CD4                     l18414:
 14424                           
 14425                           ; BSR set to: 0
 14426                           ;../modbus/rtu/mbrtu.c: 104:         {;../modbus/rtu/mbrtu.c: 113:             usTimerT3
      +                          5_50us = ( 7UL * 220000UL ) / ( 2UL * ulBaudRate );
 14427  008CD4  0EA0               	movlw	160
 14428  008CD6  0100               	movlb	0	; force () banked
 14429  008CD8  6F85               	movwf	___lldiv@dividend& (0+255),b
 14430  008CDA  0E7F               	movlw	127
 14431  008CDC  6F86               	movwf	(___lldiv@dividend+1)& (0+255),b
 14432  008CDE  0E17               	movlw	23
 14433  008CE0  6F87               	movwf	(___lldiv@dividend+2)& (0+255),b
 14434  008CE2  0E00               	movlw	0
 14435  008CE4  6F88               	movwf	(___lldiv@dividend+3)& (0+255),b
 14436  008CE6  90D8               	bcf	status,0,c
 14437  008CE8  0100               	movlb	0	; force () banked
 14438  008CEA  3593               	rlcf	eMBRTUInit@ulBaudRate& (0+255),w,b
 14439  008CEC  0100               	movlb	0	; force () banked
 14440  008CEE  6F89               	movwf	___lldiv@divisor& (0+255),b
 14441  008CF0  0100               	movlb	0	; force () banked
 14442  008CF2  3594               	rlcf	(eMBRTUInit@ulBaudRate+1)& (0+255),w,b
 14443  008CF4  0100               	movlb	0	; force () banked
 14444  008CF6  6F8A               	movwf	(___lldiv@divisor+1)& (0+255),b
 14445  008CF8  0100               	movlb	0	; force () banked
 14446  008CFA  3595               	rlcf	(eMBRTUInit@ulBaudRate+2)& (0+255),w,b
 14447  008CFC  0100               	movlb	0	; force () banked
 14448  008CFE  6F8B               	movwf	(___lldiv@divisor+2)& (0+255),b
 14449  008D00  0100               	movlb	0	; force () banked
 14450  008D02  3596               	rlcf	(eMBRTUInit@ulBaudRate+3)& (0+255),w,b
 14451  008D04  0100               	movlb	0	; force () banked
 14452  008D06  6F8C               	movwf	(___lldiv@divisor+3)& (0+255),b
 14453  008D08  EC3D  F04F         	call	___lldiv	;wreg free
 14454  008D0C  C085  F098         	movff	?___lldiv,eMBRTUInit@usTimerT35_50us
 14455  008D10  C086  F099         	movff	?___lldiv+1,eMBRTUInit@usTimerT35_50us+1
 14456  008D14  C087  F09A         	movff	?___lldiv+2,eMBRTUInit@usTimerT35_50us+2
 14457  008D18  C088  F09B         	movff	?___lldiv+3,eMBRTUInit@usTimerT35_50us+3
 14458  008D1C                     l18416:
 14459                           
 14460                           ; BSR set to: 0
 14461                           ;../modbus/rtu/mbrtu.c: 115:         if( xMBPortTimersInit( ( USHORT ) usTimerT35_50us )
      +                           != 1 )
 14462  008D1C  C098  F077         	movff	eMBRTUInit@usTimerT35_50us,xMBPortTimersInit@usTim1Timerout50us
 14463  008D20  C099  F078         	movff	eMBRTUInit@usTimerT35_50us+1,xMBPortTimersInit@usTim1Timerout50us+1
 14464  008D24  EC8A  F058         	call	_xMBPortTimersInit	;wreg free
 14465  008D28  06E8               	decf	wreg,f,c
 14466  008D2A  B4D8               	btfsc	status,2,c
 14467  008D2C  D003               	goto	l18420
 14468  008D2E                     u16030:
 14469                           
 14470                           ;../modbus/rtu/mbrtu.c: 116:         {;../modbus/rtu/mbrtu.c: 117:             eStatus =
      +                           MB_EPORTERR;
 14471  008D2E  0E03               	movlw	3
 14472  008D30  0100               	movlb	0	; force () banked
 14473  008D32  6F9C               	movwf	eMBRTUInit@eStatus& (0+255),b
 14474  008D34                     l18420:
 14475                           
 14476                           ;../modbus/rtu/mbrtu.c: 120:     GIE=1;
 14477  008D34  8ED2               	bsf	16338,7,c	;volatile
 14478                           
 14479                           ;../modbus/rtu/mbrtu.c: 122:     return eStatus;
 14480  008D36  0100               	movlb	0	; force () banked
 14481  008D38  519C               	movf	eMBRTUInit@eStatus& (0+255),w,b
 14482                           
 14483                           ; BSR set to: 0
 14484  008D3A  0012               	return		;funcret
 14485  008D3C                     __end_of_eMBRTUInit:
 14486                           	callstack 0
 14487                           
 14488 ;; *************** function _xMBPortTimersInit *****************
 14489 ;; Defined at:
 14490 ;;		line 35 in file "../modbus/port/porttimer.c"
 14491 ;; Parameters:    Size  Location     Type
 14492 ;;  usTim1Timero    2   23[BANK0 ] unsigned int 
 14493 ;; Auto vars:     Size  Location     Type
 14494 ;;		None
 14495 ;; Return value:  Size  Location     Type
 14496 ;;                  1    wreg      unsigned char 
 14497 ;; Registers used:
 14498 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14499 ;; Tracked objects:
 14500 ;;		On entry : 3F/0
 14501 ;;		On exit  : 0/0
 14502 ;;		Unchanged: 0/0
 14503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14504 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14507 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14508 ;;Total ram usage:        2 bytes
 14509 ;; Hardware stack levels used:    1
 14510 ;; Hardware stack levels required when called:   12
 14511 ;; This function calls:
 14512 ;;		_TMR3_SetInterruptHandler
 14513 ;;		___wmul
 14514 ;; This function is called by:
 14515 ;;		_eMBRTUInit
 14516 ;; This function uses a non-reentrant model
 14517 ;;
 14518                           
 14519                           	psect	text54
 14520  00B114                     __ptext54:
 14521                           	callstack 0
 14522  00B114                     _xMBPortTimersInit:
 14523                           	callstack 15
 14524                           
 14525                           ;../modbus/port/porttimer.c: 35: xMBPortTimersInit( USHORT usTim1Timerout50us );../modbu
      +                          s/port/porttimer.c: 36: {;../modbus/port/porttimer.c: 38:     timerval = 0xFFFF - (usTim
      +                          1Timerout50us*400);
 14526                           
 14527                           ; BSR set to: 0
 14528                           ;incstack = 0
 14529  00B114  C077  F071         	movff	xMBPortTimersInit@usTim1Timerout50us,___wmul@multiplier
 14530  00B118  C078  F072         	movff	xMBPortTimersInit@usTim1Timerout50us+1,___wmul@multiplier+1
 14531  00B11C  0EFE               	movlw	254
 14532  00B11E  0100               	movlb	0	; force () banked
 14533  00B120  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14534  00B122  0E70               	movlw	112
 14535  00B124  6F73               	movwf	___wmul@multiplicand& (0+255),b
 14536  00B126  ECCD  F05A         	call	___wmul	;wreg free
 14537  00B12A  0EFF               	movlw	255
 14538  00B12C  0100               	movlb	0	; force () banked
 14539  00B12E  2571               	addwf	?___wmul& (0+255),w,b
 14540  00B130  0102               	movlb	2	; force () banked
 14541  00B132  6F42               	movwf	_timerval& (0+255),b
 14542  00B134  0EFF               	movlw	255
 14543  00B136  0100               	movlb	0	; force () banked
 14544  00B138  2172               	addwfc	(?___wmul+1)& (0+255),w,b
 14545  00B13A  0102               	movlb	2	; force () banked
 14546  00B13C  6F43               	movwf	(_timerval+1)& (0+255),b
 14547                           
 14548                           ; BSR set to: 2
 14549                           ;../modbus/port/porttimer.c: 39:     TMR3_SetInterruptHandler(&prvvTIMERExpiredISR);
 14550  00B13E  0E46               	movlw	low _prvvTIMERExpiredISR
 14551  00B140  0100               	movlb	0	; force () banked
 14552  00B142  6F71               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
 14553  00B144  0EBA               	movlw	high _prvvTIMERExpiredISR
 14554  00B146  6F72               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14555  00B148  EC98  F05E         	call	_TMR3_SetInterruptHandler	;wreg free
 14556                           
 14557                           ;../modbus/port/porttimer.c: 44:     return 1;
 14558  00B14C  0E01               	movlw	1
 14559  00B14E  0012               	return		;funcret
 14560  00B150                     __end_of_xMBPortTimersInit:
 14561                           	callstack 0
 14562                           
 14563 ;; *************** function _xMBPortSerialInit *****************
 14564 ;; Defined at:
 14565 ;;		line 63 in file "../modbus/port/portserial.c"
 14566 ;; Parameters:    Size  Location     Type
 14567 ;;  ucPORT          1    wreg     unsigned char 
 14568 ;;  ulBaudRate      4   17[BANK0 ] unsigned long 
 14569 ;;  ucDataBits      1   21[BANK0 ] unsigned char 
 14570 ;;  eParity         1   22[BANK0 ] enum E15537
 14571 ;; Auto vars:     Size  Location     Type
 14572 ;;  ucPORT          1    0[BANK0 ] unsigned char 
 14573 ;; Return value:  Size  Location     Type
 14574 ;;                  1    wreg      unsigned char 
 14575 ;; Registers used:
 14576 ;;		wreg
 14577 ;; Tracked objects:
 14578 ;;		On entry : 3F/0
 14579 ;;		On exit  : 0/0
 14580 ;;		Unchanged: 0/0
 14581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14582 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14585 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14586 ;;Total ram usage:        6 bytes
 14587 ;; Hardware stack levels used:    1
 14588 ;; Hardware stack levels required when called:   11
 14589 ;; This function calls:
 14590 ;;		Nothing
 14591 ;; This function is called by:
 14592 ;;		_eMBRTUInit
 14593 ;; This function uses a non-reentrant model
 14594 ;;
 14595                           
 14596                           	psect	text55
 14597  00BD80                     __ptext55:
 14598                           	callstack 0
 14599  00BD80                     _xMBPortSerialInit:
 14600                           	callstack 16
 14601                           
 14602                           ;../modbus/port/portserial.c: 63: xMBPortSerialInit( UCHAR ucPORT, ULONG ulBaudRate, UCH
      +                          AR ucDataBits, eMBParity eParity );../modbus/port/portserial.c: 64: {;../modbus/port/por
      +                          tserial.c: 65:     return 1;
 14603                           
 14604                           ;incstack = 0
 14605  00BD80  0E01               	movlw	1
 14606  00BD82  0012               	return		;funcret
 14607  00BD84                     __end_of_xMBPortSerialInit:
 14608                           	callstack 0
 14609                           
 14610 ;; *************** function _eMBEnable *****************
 14611 ;; Defined at:
 14612 ;;		line 292 in file "../modbus/mb.c"
 14613 ;; Parameters:    Size  Location     Type
 14614 ;;		None
 14615 ;; Auto vars:     Size  Location     Type
 14616 ;;  eStatus         1   19[BANK0 ] enum E15837
 14617 ;; Return value:  Size  Location     Type
 14618 ;;                  1    wreg      enum E16538
 14619 ;; Registers used:
 14620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14621 ;; Tracked objects:
 14622 ;;		On entry : 3F/0
 14623 ;;		On exit  : 3F/0
 14624 ;;		Unchanged: 0/0
 14625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14627 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14629 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14630 ;;Total ram usage:        1 bytes
 14631 ;; Hardware stack levels used:    1
 14632 ;; Hardware stack levels required when called:   14
 14633 ;; This function calls:
 14634 ;;		Absolute function
 14635 ;;		_eMBRTUStart
 14636 ;; This function is called by:
 14637 ;;		_bootLoadApplication
 14638 ;;		_handle_rw_regs
 14639 ;; This function uses a non-reentrant model
 14640 ;;
 14641                           
 14642                           	psect	text56
 14643  00B18C                     __ptext56:
 14644                           	callstack 0
 14645  00B18C                     _eMBEnable:
 14646                           	callstack 15
 14647                           
 14648                           ;../modbus/mb.c: 294:     eMBErrorCode eStatus = MB_ENOERR;
 14649                           
 14650                           ;incstack = 0
 14651  00B18C  0E00               	movlw	0
 14652  00B18E  0100               	movlb	0	; force () banked
 14653  00B190  6F73               	movwf	eMBEnable@eStatus& (0+255),b
 14654                           
 14655                           ; BSR set to: 0
 14656                           ;../modbus/mb.c: 296:     if( eMBState == STATE_DISABLED )
 14657  00B192  0101               	movlb	1	; force () banked
 14658  00B194  05FC               	decf	_eMBState& (0+255),w,b
 14659  00B196  A4D8               	btfss	status,2,c
 14660  00B198  D010               	goto	l14272
 14661                           
 14662                           ; BSR set to: 1
 14663                           ;../modbus/mb.c: 297:     {;../modbus/mb.c: 299:         pvMBFrameStartCur( );
 14664  00B19A  D801               	call	u11058
 14665  00B19C  D00A               	goto	u11059
 14666  00B19E                     u11058:
 14667  00B19E  0005               	push	
 14668  00B1A0  6EFA               	movwf	pclath,c
 14669  00B1A2  0102               	movlb	2	; force () banked
 14670  00B1A4  5138               	movf	_pvMBFrameStartCur& (0+255),w,b
 14671  00B1A6  6EFD               	movwf	tosl,c
 14672  00B1A8  5139               	movf	(_pvMBFrameStartCur+1)& (0+255),w,b
 14673  00B1AA  6EFE               	movwf	tosh,c
 14674  00B1AC  6AFF               	clrf	tosu,c
 14675  00B1AE  50FA               	movf	pclath,w,c
 14676  00B1B0  0012               	return		;indir
 14677  00B1B2                     u11059:
 14678                           
 14679                           ;../modbus/mb.c: 300:         eMBState = STATE_ENABLED;
 14680  00B1B2  0E00               	movlw	0
 14681  00B1B4  0101               	movlb	1	; force () banked
 14682  00B1B6  6FFC               	movwf	_eMBState& (0+255),b
 14683                           
 14684                           ;../modbus/mb.c: 301:     }
 14685  00B1B8  D003               	goto	l4067
 14686  00B1BA                     l14272:
 14687                           
 14688                           ; BSR set to: 1
 14689                           ;../modbus/mb.c: 303:     {;../modbus/mb.c: 304:         eStatus = MB_EILLSTATE;
 14690  00B1BA  0E06               	movlw	6
 14691  00B1BC  0100               	movlb	0	; force () banked
 14692  00B1BE  6F73               	movwf	eMBEnable@eStatus& (0+255),b
 14693  00B1C0                     l4067:
 14694                           
 14695                           ;../modbus/mb.c: 306:     return eStatus;
 14696  00B1C0  0100               	movlb	0	; force () banked
 14697  00B1C2  5173               	movf	eMBEnable@eStatus& (0+255),w,b
 14698                           
 14699                           ; BSR set to: 0
 14700  00B1C4  0012               	return		;funcret
 14701  00B1C6                     __end_of_eMBEnable:
 14702                           	callstack 0
 14703                           
 14704 ;; *************** function _eMBRTUStart *****************
 14705 ;; Defined at:
 14706 ;;		line 126 in file "../modbus/rtu/mbrtu.c"
 14707 ;; Parameters:    Size  Location     Type
 14708 ;;		None
 14709 ;; Auto vars:     Size  Location     Type
 14710 ;;		None
 14711 ;; Return value:  Size  Location     Type
 14712 ;;                  1    wreg      void 
 14713 ;; Registers used:
 14714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14715 ;; Tracked objects:
 14716 ;;		On entry : 3F/2
 14717 ;;		On exit  : 0/0
 14718 ;;		Unchanged: 0/0
 14719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14724 ;;Total ram usage:        0 bytes
 14725 ;; Hardware stack levels used:    1
 14726 ;; Hardware stack levels required when called:   13
 14727 ;; This function calls:
 14728 ;;		_vMBPortSerialEnable
 14729 ;;		_vMBPortTimersEnable
 14730 ;; This function is called by:
 14731 ;;		_eMBInit
 14732 ;;		_eMBEnable
 14733 ;; This function uses a non-reentrant model
 14734 ;;
 14735                           
 14736                           	psect	text57
 14737  00BA0E                     __ptext57:
 14738                           	callstack 0
 14739  00BA0E                     _eMBRTUStart:
 14740                           	callstack 15
 14741                           
 14742                           ;../modbus/rtu/mbrtu.c: 128:     GIE=0;
 14743                           
 14744                           ; BSR set to: 0
 14745                           ;incstack = 0
 14746  00BA0E  9ED2               	bcf	16338,7,c	;volatile
 14747                           
 14748                           ;../modbus/rtu/mbrtu.c: 134:     eRcvState = STATE_RX_INIT;
 14749  00BA10  0E00               	movlw	0
 14750  00BA12  0100               	movlb	0	; force () banked
 14751  00BA14  6FD9               	movwf	_eRcvState& (0+255),b	;volatile
 14752                           
 14753                           ; BSR set to: 0
 14754                           ;../modbus/rtu/mbrtu.c: 135:     vMBPortSerialEnable( 1, 0 );
 14755  00BA16  0E00               	movlw	0
 14756  00BA18  0100               	movlb	0	; force () banked
 14757  00BA1A  6F71               	movwf	vMBPortSerialEnable@xTxEnable& (0+255),b
 14758  00BA1C  0E01               	movlw	1
 14759  00BA1E  EC33  F05C         	call	_vMBPortSerialEnable
 14760                           
 14761                           ;../modbus/rtu/mbrtu.c: 136:     vMBPortTimersEnable( );
 14762  00BA22  EC31  F05D         	call	_vMBPortTimersEnable	;wreg free
 14763                           
 14764                           ;../modbus/rtu/mbrtu.c: 138:     GIE=1;
 14765  00BA26  8ED2               	bsf	16338,7,c	;volatile
 14766  00BA28  0012               	return		;funcret
 14767  00BA2A                     __end_of_eMBRTUStart:
 14768                           	callstack 0
 14769                           
 14770 ;; *************** function _vMBPortTimersEnable *****************
 14771 ;; Defined at:
 14772 ;;		line 49 in file "../modbus/port/porttimer.c"
 14773 ;; Parameters:    Size  Location     Type
 14774 ;;		None
 14775 ;; Auto vars:     Size  Location     Type
 14776 ;;		None
 14777 ;; Return value:  Size  Location     Type
 14778 ;;                  1    wreg      void 
 14779 ;; Registers used:
 14780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14781 ;; Tracked objects:
 14782 ;;		On entry : 0/0
 14783 ;;		On exit  : 0/0
 14784 ;;		Unchanged: 0/0
 14785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14790 ;;Total ram usage:        0 bytes
 14791 ;; Hardware stack levels used:    1
 14792 ;; Hardware stack levels required when called:   12
 14793 ;; This function calls:
 14794 ;;		_TMR3_StartTimer
 14795 ;;		_TMR3_StopTimer
 14796 ;;		_TMR3_WriteTimer
 14797 ;; This function is called by:
 14798 ;;		_eMBRTUStart
 14799 ;;		_xMBRTUReceiveFSM
 14800 ;; This function uses a non-reentrant model
 14801 ;;
 14802                           
 14803                           	psect	text58
 14804  00BA62                     __ptext58:
 14805                           	callstack 0
 14806  00BA62                     _vMBPortTimersEnable:
 14807                           	callstack 15
 14808                           
 14809                           ;../modbus/port/porttimer.c: 53:     TMR3_StopTimer();
 14810                           
 14811                           ;incstack = 0
 14812  00BA62  ECC4  F05E         	call	_TMR3_StopTimer	;wreg free
 14813                           
 14814                           ;../modbus/port/porttimer.c: 54:     TMR3_WriteTimer(timerval);
 14815  00BA66  0060  F90B  FFE6   	movff	_timerval,postinc1
 14816  00BA6C  0060  F90F  FFE6   	movff	_timerval+1,postinc1
 14817  00BA72  ECAC  F057         	call	_TMR3_WriteTimer	;wreg free
 14818                           
 14819                           ;../modbus/port/porttimer.c: 55:     TMR3_StartTimer();
 14820  00BA76  ECC2  F05E         	call	_TMR3_StartTimer	;wreg free
 14821  00BA7A  0012               	return		;funcret
 14822  00BA7C                     __end_of_vMBPortTimersEnable:
 14823                           	callstack 0
 14824                           
 14825 ;; *************** function _TMR3_WriteTimer *****************
 14826 ;; Defined at:
 14827 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 14828 ;; Parameters:    Size  Location     Type
 14829 ;;  timerVal        2  [STACK] unsigned int 
 14830 ;; Auto vars:     Size  Location     Type
 14831 ;;		None
 14832 ;; Return value:  Size  Location     Type
 14833 ;;                  1  [STACK] void 
 14834 ;; Registers used:
 14835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14836 ;; Tracked objects:
 14837 ;;		On entry : 0/0
 14838 ;;		On exit  : 0/0
 14839 ;;		Unchanged: 0/0
 14840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14845 ;;Total ram usage:        0 bytes
 14846 ;; Hardware stack levels used:    1
 14847 ;; Hardware stack levels required when called:   11
 14848 ;; This function calls:
 14849 ;;		Nothing
 14850 ;; This function is called by:
 14851 ;;		_TMR3_ISR
 14852 ;;		_vMBPortTimersEnable
 14853 ;; This function uses a reentrant model
 14854 ;;
 14855                           
 14856                           	psect	text59
 14857  00AF58                     __ptext59:
 14858                           	callstack 0
 14859  00AF58                     _TMR3_WriteTimer:
 14860                           	callstack 4
 14861                           
 14862                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 14863                           
 14864                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14865                           ;incstack = 0
 14866  00AF58  A4A6               	btfss	166,2,c	;volatile
 14867  00AF5A  D00F               	goto	l16720
 14868                           
 14869                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 14870  00AF5C  90A6               	bcf	166,0,c	;volatile
 14871                           
 14872                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 14873                           ;stkvar	TMR3_WriteTimer@timerVal @ sp[(0)+-2]
 14874  00AF5E  0EFF               	movlw	255
 14875  00AF60  24E1               	addwf	fsr1l,w,c
 14876  00AF62  6ED9               	movwf	fsr2l,c
 14877  00AF64  0EFF               	movlw	255
 14878  00AF66  20E2               	addwfc	fsr1h,w,c
 14879  00AF68  6EDA               	movwf	fsr2h,c
 14880  00AF6A  50DF               	movf	indf2,w,c
 14881  00AF6C  6EA5               	movwf	165,c	;volatile
 14882                           
 14883                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 14884                           ;stkvar	TMR3_WriteTimer@timerVal @ sp[(0)+-2]
 14885  00AF6E  0EFE               	movlw	-2
 14886  00AF70  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 14887                           
 14888                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 14889  00AF76  80A6               	bsf	166,0,c	;volatile
 14890                           
 14891                           ;mcc_generated_files/tmr3.c: 141:     }
 14892  00AF78  D00C               	goto	l2217
 14893  00AF7A                     l16720:
 14894                           
 14895                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 14896                           ;stkvar	TMR3_WriteTimer@timerVal @ sp[(0)+-2]
 14897  00AF7A  0EFF               	movlw	255
 14898  00AF7C  24E1               	addwf	fsr1l,w,c
 14899  00AF7E  6ED9               	movwf	fsr2l,c
 14900  00AF80  0EFF               	movlw	255
 14901  00AF82  20E2               	addwfc	fsr1h,w,c
 14902  00AF84  6EDA               	movwf	fsr2h,c
 14903  00AF86  50DF               	movf	indf2,w,c
 14904  00AF88  6EA5               	movwf	165,c	;volatile
 14905                           
 14906                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 14907                           ;stkvar	TMR3_WriteTimer@timerVal @ sp[(0)+-2]
 14908  00AF8A  0EFE               	movlw	-2
 14909  00AF8C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 14910  00AF92                     l2217:
 14911                           
 14912                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 14913  00AF92  52E5               	movf	postdec1,f,c
 14914  00AF94  52E5               	movf	postdec1,f,c
 14915  00AF96  0012               	return		;funcret
 14916  00AF98                     __end_of_TMR3_WriteTimer:
 14917                           	callstack 0
 14918                           
 14919 ;; *************** function _TMR3_StartTimer *****************
 14920 ;; Defined at:
 14921 ;;		line 100 in file "mcc_generated_files/tmr3.c"
 14922 ;; Parameters:    Size  Location     Type
 14923 ;;		None
 14924 ;; Auto vars:     Size  Location     Type
 14925 ;;		None
 14926 ;; Return value:  Size  Location     Type
 14927 ;;                  1    wreg      void 
 14928 ;; Registers used:
 14929 ;;		None
 14930 ;; Tracked objects:
 14931 ;;		On entry : 0/0
 14932 ;;		On exit  : 0/0
 14933 ;;		Unchanged: 0/0
 14934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14939 ;;Total ram usage:        0 bytes
 14940 ;; Hardware stack levels used:    1
 14941 ;; Hardware stack levels required when called:   11
 14942 ;; This function calls:
 14943 ;;		Nothing
 14944 ;; This function is called by:
 14945 ;;		_vMBPortTimersEnable
 14946 ;; This function uses a non-reentrant model
 14947 ;;
 14948                           
 14949                           	psect	text60
 14950  00BD84                     __ptext60:
 14951                           	callstack 0
 14952  00BD84                     _TMR3_StartTimer:
 14953                           	callstack 15
 14954                           
 14955                           ;mcc_generated_files/tmr3.c: 103:     T3CONbits.TMR3ON = 1;
 14956                           
 14957                           ;incstack = 0
 14958  00BD84  80A6               	bsf	166,0,c	;volatile
 14959  00BD86  0012               	return		;funcret
 14960  00BD88                     __end_of_TMR3_StartTimer:
 14961                           	callstack 0
 14962                           
 14963 ;; *************** function _eMBDisable *****************
 14964 ;; Defined at:
 14965 ;;		line 310 in file "../modbus/mb.c"
 14966 ;; Parameters:    Size  Location     Type
 14967 ;;		None
 14968 ;; Auto vars:     Size  Location     Type
 14969 ;;  eStatus         1   19[BANK0 ] enum E15837
 14970 ;; Return value:  Size  Location     Type
 14971 ;;                  1    wreg      enum E16538
 14972 ;; Registers used:
 14973 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 14974 ;; Tracked objects:
 14975 ;;		On entry : 3F/0
 14976 ;;		On exit  : 3F/0
 14977 ;;		Unchanged: 0/0
 14978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14982 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14983 ;;Total ram usage:        1 bytes
 14984 ;; Hardware stack levels used:    1
 14985 ;; Hardware stack levels required when called:   14
 14986 ;; This function calls:
 14987 ;;		Absolute function
 14988 ;;		_eMBRTUStop
 14989 ;; This function is called by:
 14990 ;;		_handle_rw_regs
 14991 ;; This function uses a non-reentrant model
 14992 ;;
 14993                           
 14994                           	psect	text61
 14995  00AF98                     __ptext61:
 14996                           	callstack 0
 14997  00AF98                     _eMBDisable:
 14998                           	callstack 13
 14999                           
 15000                           ;../modbus/mb.c: 312:     eMBErrorCode eStatus;;../modbus/mb.c: 314:     if( eMBState ==
      +                           STATE_ENABLED )
 15001                           
 15002                           ;incstack = 0
 15003  00AF98  0101               	movlb	1	; force () banked
 15004  00AF9A  51FC               	movf	_eMBState& (0+255),w,b
 15005  00AF9C  A4D8               	btfss	status,2,c
 15006  00AF9E  D010               	goto	l14336
 15007                           
 15008                           ; BSR set to: 1
 15009                           ;../modbus/mb.c: 315:     {;../modbus/mb.c: 316:         pvMBFrameStopCur( );
 15010  00AFA0  D801               	call	u11098
 15011  00AFA2  D00A               	goto	u11099
 15012  00AFA4                     u11098:
 15013  00AFA4  0005               	push	
 15014  00AFA6  6EFA               	movwf	pclath,c
 15015  00AFA8  0102               	movlb	2	; force () banked
 15016  00AFAA  5136               	movf	_pvMBFrameStopCur& (0+255),w,b
 15017  00AFAC  6EFD               	movwf	tosl,c
 15018  00AFAE  5137               	movf	(_pvMBFrameStopCur+1)& (0+255),w,b
 15019  00AFB0  6EFE               	movwf	tosh,c
 15020  00AFB2  6AFF               	clrf	tosu,c
 15021  00AFB4  50FA               	movf	pclath,w,c
 15022  00AFB6  0012               	return		;indir
 15023  00AFB8                     u11099:
 15024                           
 15025                           ;../modbus/mb.c: 317:         eMBState = STATE_DISABLED;
 15026  00AFB8  0E01               	movlw	1
 15027  00AFBA  0101               	movlb	1	; force () banked
 15028  00AFBC  6FFC               	movwf	_eMBState& (0+255),b
 15029  00AFBE  D004               	goto	u11100
 15030  00AFC0                     l14336:
 15031                           
 15032                           ; BSR set to: 1
 15033  00AFC0  0101               	movlb	1	; force () banked
 15034  00AFC2  05FC               	decf	_eMBState& (0+255),w,b
 15035  00AFC4  A4D8               	btfss	status,2,c
 15036  00AFC6  D002               	goto	l14340
 15037  00AFC8                     u11100:
 15038                           
 15039                           ; BSR set to: 1
 15040                           ;../modbus/mb.c: 321:     {;../modbus/mb.c: 322:         eStatus = MB_ENOERR;
 15041  00AFC8  0E00               	movlw	0
 15042  00AFCA  D001               	goto	L15
 15043  00AFCC                     l14340:
 15044                           
 15045                           ; BSR set to: 1
 15046                           ;../modbus/mb.c: 325:     {;../modbus/mb.c: 326:         eStatus = MB_EILLSTATE;
 15047  00AFCC  0E06               	movlw	6
 15048  00AFCE                     L15:
 15049  00AFCE  0100               	movlb	0	; force () banked
 15050  00AFD0  6F73               	movwf	eMBDisable@eStatus& (0+255),b
 15051                           
 15052                           ; BSR set to: 0
 15053                           ;../modbus/mb.c: 328:     return eStatus;
 15054  00AFD2  0100               	movlb	0	; force () banked
 15055  00AFD4  5173               	movf	eMBDisable@eStatus& (0+255),w,b
 15056                           
 15057                           ; BSR set to: 0
 15058  00AFD6  0012               	return		;funcret
 15059  00AFD8                     __end_of_eMBDisable:
 15060                           	callstack 0
 15061                           
 15062 ;; *************** function _eMBRTUStop *****************
 15063 ;; Defined at:
 15064 ;;		line 142 in file "../modbus/rtu/mbrtu.c"
 15065 ;; Parameters:    Size  Location     Type
 15066 ;;		None
 15067 ;; Auto vars:     Size  Location     Type
 15068 ;;		None
 15069 ;; Return value:  Size  Location     Type
 15070 ;;                  1    wreg      void 
 15071 ;; Registers used:
 15072 ;;		wreg, status,2, cstack
 15073 ;; Tracked objects:
 15074 ;;		On entry : 3F/2
 15075 ;;		On exit  : 0/0
 15076 ;;		Unchanged: 0/0
 15077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15082 ;;Total ram usage:        0 bytes
 15083 ;; Hardware stack levels used:    1
 15084 ;; Hardware stack levels required when called:   13
 15085 ;; This function calls:
 15086 ;;		_vMBPortSerialEnable
 15087 ;;		_vMBPortTimersDisable
 15088 ;; This function is called by:
 15089 ;;		_eMBInit
 15090 ;;		_eMBDisable
 15091 ;; This function uses a non-reentrant model
 15092 ;;
 15093                           
 15094                           	psect	text62
 15095  00BB6E                     __ptext62:
 15096                           	callstack 0
 15097  00BB6E                     _eMBRTUStop:
 15098                           	callstack 13
 15099                           
 15100                           ;../modbus/rtu/mbrtu.c: 144:     GIE=0;
 15101                           
 15102                           ; BSR set to: 0
 15103                           ;incstack = 0
 15104  00BB6E  9ED2               	bcf	16338,7,c	;volatile
 15105                           
 15106                           ;../modbus/rtu/mbrtu.c: 145:     vMBPortSerialEnable( 0, 0 );
 15107  00BB70  0E00               	movlw	0
 15108  00BB72  0100               	movlb	0	; force () banked
 15109  00BB74  6F71               	movwf	vMBPortSerialEnable@xTxEnable& (0+255),b
 15110  00BB76  0E00               	movlw	0
 15111  00BB78  EC33  F05C         	call	_vMBPortSerialEnable
 15112                           
 15113                           ;../modbus/rtu/mbrtu.c: 146:     vMBPortTimersDisable( );
 15114  00BB7C  ECA6  F05E         	call	_vMBPortTimersDisable	;wreg free
 15115                           
 15116                           ;../modbus/rtu/mbrtu.c: 147:     GIE=1;
 15117  00BB80  8ED2               	bsf	16338,7,c	;volatile
 15118  00BB82  0012               	return		;funcret
 15119  00BB84                     __end_of_eMBRTUStop:
 15120                           	callstack 0
 15121                           
 15122 ;; *************** function _vMBPortTimersDisable *****************
 15123 ;; Defined at:
 15124 ;;		line 65 in file "../modbus/port/porttimer.c"
 15125 ;; Parameters:    Size  Location     Type
 15126 ;;		None
 15127 ;; Auto vars:     Size  Location     Type
 15128 ;;		None
 15129 ;; Return value:  Size  Location     Type
 15130 ;;                  1  [STACK] void 
 15131 ;; Registers used:
 15132 ;;		None
 15133 ;; Tracked objects:
 15134 ;;		On entry : 0/0
 15135 ;;		On exit  : 0/0
 15136 ;;		Unchanged: 0/0
 15137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15142 ;;Total ram usage:        0 bytes
 15143 ;; Hardware stack levels used:    1
 15144 ;; Hardware stack levels required when called:   12
 15145 ;; This function calls:
 15146 ;;		_TMR3_StopTimer
 15147 ;; This function is called by:
 15148 ;;		_eMBRTUStop
 15149 ;;		_xMBRTUTimerT35Expired
 15150 ;; This function uses a reentrant model
 15151 ;;
 15152                           
 15153                           	psect	text63
 15154  00BD4C                     __ptext63:
 15155                           	callstack 0
 15156  00BD4C                     _vMBPortTimersDisable:
 15157                           	callstack 0
 15158                           
 15159                           ;../modbus/port/porttimer.c: 69:     TMR3_StopTimer();
 15160                           
 15161                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15162                           ;incstack = 0
 15163  00BD4C  ECC4  F05E         	call	_TMR3_StopTimer	;wreg free
 15164                           
 15165                           ; _vMBPortTimersDisable: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 15166  00BD50  0012               	return		;funcret
 15167  00BD52                     __end_of_vMBPortTimersDisable:
 15168                           	callstack 0
 15169                           
 15170 ;; *************** function _TMR3_StopTimer *****************
 15171 ;; Defined at:
 15172 ;;		line 106 in file "mcc_generated_files/tmr3.c"
 15173 ;; Parameters:    Size  Location     Type
 15174 ;;		None
 15175 ;; Auto vars:     Size  Location     Type
 15176 ;;		None
 15177 ;; Return value:  Size  Location     Type
 15178 ;;                  1  [STACK] void 
 15179 ;; Registers used:
 15180 ;;		None
 15181 ;; Tracked objects:
 15182 ;;		On entry : 0/0
 15183 ;;		On exit  : 0/0
 15184 ;;		Unchanged: 0/0
 15185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15190 ;;Total ram usage:        0 bytes
 15191 ;; Hardware stack levels used:    1
 15192 ;; Hardware stack levels required when called:   11
 15193 ;; This function calls:
 15194 ;;		Nothing
 15195 ;; This function is called by:
 15196 ;;		_vMBPortTimersEnable
 15197 ;;		_vMBPortTimersDisable
 15198 ;;		_prvvTIMERExpiredISR
 15199 ;; This function uses a reentrant model
 15200 ;;
 15201                           
 15202                           	psect	text64
 15203  00BD88                     __ptext64:
 15204                           	callstack 0
 15205  00BD88                     _TMR3_StopTimer:
 15206                           	callstack 0
 15207                           
 15208                           ;mcc_generated_files/tmr3.c: 109:     T3CONbits.TMR3ON = 0;
 15209                           
 15210                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15211                           ;incstack = 0
 15212  00BD88  90A6               	bcf	166,0,c	;volatile
 15213                           
 15214                           ; _TMR3_StopTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 15215  00BD8A  0012               	return		;funcret
 15216  00BD8C                     __end_of_TMR3_StopTimer:
 15217                           	callstack 0
 15218                           
 15219 ;; *************** function _PHY_Set_Packet_Rssi_Threshold *****************
 15220 ;; Defined at:
 15221 ;;		line 79 in file "../phy/phy_src/phy.c"
 15222 ;; Parameters:    Size  Location     Type
 15223 ;;  rssi            1    wreg     char 
 15224 ;; Auto vars:     Size  Location     Type
 15225 ;;  rssi            1   17[BANK0 ] char 
 15226 ;; Return value:  Size  Location     Type
 15227 ;;                  1    wreg      void 
 15228 ;; Registers used:
 15229 ;;		wreg
 15230 ;; Tracked objects:
 15231 ;;		On entry : 3D/0
 15232 ;;		On exit  : 0/0
 15233 ;;		Unchanged: 0/0
 15234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15236 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15238 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15239 ;;Total ram usage:        1 bytes
 15240 ;; Hardware stack levels used:    1
 15241 ;; Hardware stack levels required when called:   11
 15242 ;; This function calls:
 15243 ;;		Nothing
 15244 ;; This function is called by:
 15245 ;;		_bootLoadApplication
 15246 ;;		_handle_rw_regs
 15247 ;; This function uses a non-reentrant model
 15248 ;;
 15249                           
 15250                           	psect	text65
 15251  00BCF4                     __ptext65:
 15252                           	callstack 0
 15253  00BCF4                     _PHY_Set_Packet_Rssi_Threshold:
 15254                           	callstack 18
 15255                           
 15256                           ;incstack = 0
 15257                           ;PHY_Set_Packet_Rssi_Threshold@rssi stored from wreg
 15258  00BCF4  0100               	movlb	0	; force () banked
 15259  00BCF6  6F71               	movwf	PHY_Set_Packet_Rssi_Threshold@rssi& (0+255),b
 15260                           
 15261                           ;../phy/phy_src/phy.c: 80:     rssi_debug = rssi;
 15262  00BCF8  C071  F1FE         	movff	PHY_Set_Packet_Rssi_Threshold@rssi,_rssi_debug
 15263  00BCFC  0012               	return		;funcret
 15264  00BCFE                     __end_of_PHY_Set_Packet_Rssi_Threshold:
 15265                           	callstack 0
 15266                           
 15267 ;; *************** function _PHY_Get_Packet_Rssi_Threshold *****************
 15268 ;; Defined at:
 15269 ;;		line 83 in file "../phy/phy_src/phy.c"
 15270 ;; Parameters:    Size  Location     Type
 15271 ;;		None
 15272 ;; Auto vars:     Size  Location     Type
 15273 ;;		None
 15274 ;; Return value:  Size  Location     Type
 15275 ;;                  1    wreg      char 
 15276 ;; Registers used:
 15277 ;;		wreg, status,2
 15278 ;; Tracked objects:
 15279 ;;		On entry : 3D/2
 15280 ;;		On exit  : 3F/1
 15281 ;;		Unchanged: 0/0
 15282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15287 ;;Total ram usage:        0 bytes
 15288 ;; Hardware stack levels used:    1
 15289 ;; Hardware stack levels required when called:   11
 15290 ;; This function calls:
 15291 ;;		Nothing
 15292 ;; This function is called by:
 15293 ;;		_bootLoadApplication
 15294 ;;		_handle_rw_regs
 15295 ;;		_sync_eeprom
 15296 ;; This function uses a non-reentrant model
 15297 ;;
 15298                           
 15299                           	psect	text66
 15300  00BD52                     __ptext66:
 15301                           	callstack 0
 15302  00BD52                     _PHY_Get_Packet_Rssi_Threshold:
 15303                           	callstack 18
 15304                           
 15305                           ;../phy/phy_src/phy.c: 84:     return (rssi_debug);
 15306                           
 15307                           ;incstack = 0
 15308  00BD52  0101               	movlb	1	; force () banked
 15309  00BD54  51FE               	movf	_rssi_debug& (0+255),w,b
 15310                           
 15311                           ; BSR set to: 1
 15312  00BD56  0012               	return		;funcret
 15313  00BD58                     __end_of_PHY_Get_Packet_Rssi_Threshold:
 15314                           	callstack 0
 15315                           
 15316 ;; *************** function _NWK_GroupAdd *****************
 15317 ;; Defined at:
 15318 ;;		line 81 in file "../nwk/nwk_src/nwkGroup.c"
 15319 ;; Parameters:    Size  Location     Type
 15320 ;;  group           2   24[BANK0 ] unsigned int 
 15321 ;; Auto vars:     Size  Location     Type
 15322 ;;		None
 15323 ;; Return value:  Size  Location     Type
 15324 ;;                  1    wreg      _Bool 
 15325 ;; Registers used:
 15326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15327 ;; Tracked objects:
 15328 ;;		On entry : 3D/2
 15329 ;;		On exit  : 3F/0
 15330 ;;		Unchanged: 0/0
 15331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15332 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15335 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15336 ;;Total ram usage:        2 bytes
 15337 ;; Hardware stack levels used:    1
 15338 ;; Hardware stack levels required when called:   12
 15339 ;; This function calls:
 15340 ;;		_nwkGroupSwitch
 15341 ;; This function is called by:
 15342 ;;		_bootLoadApplication
 15343 ;;		_handle_rw_regs
 15344 ;; This function uses a non-reentrant model
 15345 ;;
 15346                           
 15347                           	psect	text67
 15348  00BB84                     __ptext67:
 15349                           	callstack 0
 15350  00BB84                     _NWK_GroupAdd:
 15351                           	callstack 17
 15352                           
 15353                           ;../nwk/nwk_src/nwkGroup.c: 81: _Bool NWK_GroupAdd(uint16_t group);../nwk/nwk_src/nwkGro
      +                          up.c: 82: {;../nwk/nwk_src/nwkGroup.c: 83:   return nwkGroupSwitch(0xffff, group);
 15354                           
 15355                           ; BSR set to: 1
 15356                           ;incstack = 0
 15357  00BB84  0EFF               	movlw	255
 15358  00BB86  0100               	movlb	0	; force () banked
 15359  00BB88  6F72               	movwf	(nwkGroupSwitch@from+1)& (0+255),b
 15360  00BB8A  6971               	setf	nwkGroupSwitch@from& (0+255),b
 15361  00BB8C  C078  F073         	movff	NWK_GroupAdd@group,nwkGroupSwitch@to
 15362  00BB90  C079  F074         	movff	NWK_GroupAdd@group+1,nwkGroupSwitch@to+1
 15363  00BB94  ECCB  F052         	call	_nwkGroupSwitch	;wreg free
 15364                           
 15365                           ; BSR set to: 0
 15366  00BB98  0012               	return		;funcret
 15367  00BB9A                     __end_of_NWK_GroupAdd:
 15368                           	callstack 0
 15369                           
 15370 ;; *************** function _nwkGroupSwitch *****************
 15371 ;; Defined at:
 15372 ;;		line 115 in file "../nwk/nwk_src/nwkGroup.c"
 15373 ;; Parameters:    Size  Location     Type
 15374 ;;  from            2   17[BANK0 ] unsigned int 
 15375 ;;  to              2   19[BANK0 ] unsigned int 
 15376 ;; Auto vars:     Size  Location     Type
 15377 ;;  i               1   23[BANK0 ] unsigned char 
 15378 ;; Return value:  Size  Location     Type
 15379 ;;                  1    wreg      _Bool 
 15380 ;; Registers used:
 15381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15382 ;; Tracked objects:
 15383 ;;		On entry : 3F/0
 15384 ;;		On exit  : 3F/0
 15385 ;;		Unchanged: 0/0
 15386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15387 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15388 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15389 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15390 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15391 ;;Total ram usage:        7 bytes
 15392 ;; Hardware stack levels used:    1
 15393 ;; Hardware stack levels required when called:   11
 15394 ;; This function calls:
 15395 ;;		Nothing
 15396 ;; This function is called by:
 15397 ;;		_NWK_GroupAdd
 15398 ;; This function uses a non-reentrant model
 15399 ;;
 15400                           
 15401                           	psect	text68
 15402  00A596                     __ptext68:
 15403                           	callstack 0
 15404  00A596                     _nwkGroupSwitch:
 15405                           	callstack 17
 15406                           
 15407                           ;../nwk/nwk_src/nwkGroup.c: 115: static _Bool nwkGroupSwitch(uint16_t from, uint16_t to)
      +                          ;../nwk/nwk_src/nwkGroup.c: 116: {;../nwk/nwk_src/nwkGroup.c: 117:   for (uint8_t i = 0;
      +                           i < 10; i++)
 15408                           
 15409                           ; BSR set to: 0
 15410                           ;incstack = 0
 15411  00A596  0E00               	movlw	0
 15412  00A598  0100               	movlb	0	; force () banked
 15413  00A59A  6F77               	movwf	nwkGroupSwitch@i& (0+255),b
 15414  00A59C  D024               	goto	l13532
 15415  00A59E                     l13522:
 15416                           
 15417                           ; BSR set to: 0
 15418                           ;../nwk/nwk_src/nwkGroup.c: 118:   {;../nwk/nwk_src/nwkGroup.c: 119:     if (from == nwk
      +                          Groups[i])
 15419  00A59E  0100               	movlb	0	; force () banked
 15420  00A5A0  5177               	movf	nwkGroupSwitch@i& (0+255),w,b
 15421  00A5A2  0D02               	mullw	2
 15422  00A5A4  0E72               	movlw	low _nwkGroups
 15423  00A5A6  24F3               	addwf	243,w,c
 15424  00A5A8  6ED9               	movwf	fsr2l,c
 15425  00A5AA  0E03               	movlw	high _nwkGroups
 15426  00A5AC  20F4               	addwfc	prodh,w,c
 15427  00A5AE  6EDA               	movwf	fsr2h,c
 15428  00A5B0  0100               	movlb	0	; force () banked
 15429  00A5B2  5171               	movf	nwkGroupSwitch@from& (0+255),w,b
 15430  00A5B4  18DE               	xorwf	postinc2,w,c
 15431  00A5B6  E115               	bnz	l13530
 15432  00A5B8  5172               	movf	(nwkGroupSwitch@from+1)& (0+255),w,b
 15433  00A5BA  18DE               	xorwf	postinc2,w,c
 15434  00A5BC  A4D8               	btfss	status,2,c
 15435  00A5BE  D011               	goto	l13530
 15436                           
 15437                           ; BSR set to: 0
 15438                           ;../nwk/nwk_src/nwkGroup.c: 120:     {;../nwk/nwk_src/nwkGroup.c: 121:       nwkGroups[i
      +                          ] = to;
 15439  00A5C0  0100               	movlb	0	; force () banked
 15440  00A5C2  5177               	movf	nwkGroupSwitch@i& (0+255),w,b
 15441  00A5C4  0D02               	mullw	2
 15442  00A5C6  0E72               	movlw	low _nwkGroups
 15443  00A5C8  24F3               	addwf	243,w,c
 15444  00A5CA  6ED9               	movwf	fsr2l,c
 15445  00A5CC  0E03               	movlw	high _nwkGroups
 15446  00A5CE  20F4               	addwfc	prodh,w,c
 15447  00A5D0  6EDA               	movwf	fsr2h,c
 15448  00A5D2  0060  F1CF  FFDE   	movff	nwkGroupSwitch@to,postinc2
 15449  00A5D8  0060  F1D3  FFDD   	movff	nwkGroupSwitch@to+1,postdec2
 15450                           
 15451                           ; BSR set to: 0
 15452                           ;../nwk/nwk_src/nwkGroup.c: 122:       return 1;
 15453  00A5DE  0E01               	movlw	1
 15454  00A5E0  0012               	return	
 15455  00A5E2                     l13530:
 15456                           
 15457                           ; BSR set to: 0
 15458                           ;../nwk/nwk_src/nwkGroup.c: 124:   }
 15459  00A5E2  0100               	movlb	0	; force () banked
 15460  00A5E4  2B77               	incf	nwkGroupSwitch@i& (0+255),f,b
 15461  00A5E6                     l13532:
 15462                           
 15463                           ; BSR set to: 0
 15464  00A5E6  0E09               	movlw	9
 15465  00A5E8  0100               	movlb	0	; force () banked
 15466  00A5EA  6577               	cpfsgt	nwkGroupSwitch@i& (0+255),b
 15467  00A5EC  D7D8               	goto	l13522
 15468                           
 15469                           ; BSR set to: 0
 15470                           ;../nwk/nwk_src/nwkGroup.c: 125:   return 0;
 15471  00A5EE  0E00               	movlw	0
 15472                           
 15473                           ; BSR set to: 0
 15474  00A5F0  0012               	return		;funcret
 15475  00A5F2                     __end_of_nwkGroupSwitch:
 15476                           	callstack 0
 15477                           
 15478 ;; *************** function _fill_rx_regs *****************
 15479 ;; Defined at:
 15480 ;;		line 2240 in file "../app/app_src/application.c"
 15481 ;; Parameters:    Size  Location     Type
 15482 ;;		None
 15483 ;; Auto vars:     Size  Location     Type
 15484 ;;  i               1   53[BANK0 ] unsigned char 
 15485 ;;  buf_id          1   55[BANK0 ] unsigned char 
 15486 ;;  dest_ptr        1   54[BANK0 ] unsigned char 
 15487 ;; Return value:  Size  Location     Type
 15488 ;;                  1    wreg      void 
 15489 ;; Registers used:
 15490 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15491 ;; Tracked objects:
 15492 ;;		On entry : 3F/0
 15493 ;;		On exit  : 3F/5
 15494 ;;		Unchanged: 0/0
 15495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15497 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15498 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15499 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15500 ;;Total ram usage:       10 bytes
 15501 ;; Hardware stack levels used:    1
 15502 ;; Hardware stack levels required when called:   13
 15503 ;; This function calls:
 15504 ;;		_CircularBufferEmpty
 15505 ;;		_CircularBufferPopFront
 15506 ;; This function is called by:
 15507 ;;		_MBRTUStack
 15508 ;; This function uses a non-reentrant model
 15509 ;;
 15510                           
 15511                           	psect	text69
 15512  0056A6                     __ptext69:
 15513                           	callstack 0
 15514  0056A6                     _fill_rx_regs:
 15515                           	callstack 15
 15516                           
 15517                           ;../app/app_src/application.c: 2241:     uint8_t dest_ptr = RX_WORD1;
 15518                           
 15519                           ; BSR set to: 0
 15520                           ;incstack = 0
 15521  0056A6  0E04               	movlw	4
 15522  0056A8  0100               	movlb	0	; force () banked
 15523  0056AA  6F96               	movwf	fill_rx_regs@dest_ptr& (0+255),b
 15524                           
 15525                           ; BSR set to: 0
 15526                           ;../app/app_src/application.c: 2242:     if(rx_ctl_mb_regs[RX_CONTROL]){
 15527  0056AC  0105               	movlb	5	; force () banked
 15528  0056AE  5182               	movf	(_rx_ctl_mb_regs+2)& (0+255),w,b
 15529  0056B0  1183               	iorwf	(_rx_ctl_mb_regs+3)& (0+255),w,b
 15530  0056B2  A4D8               	btfss	status,2,c
 15531  0056B4  0012               	return	
 15532                           
 15533                           ; BSR set to: 5
 15534                           ;../app/app_src/application.c: 2245:     if(!CircularBufferEmpty(&rx_buffer_queue_contex
      +                          t)){
 15535  0056B6  0ED6               	movlw	low _rx_buffer_queue_context
 15536  0056B8  0100               	movlb	0	; force () banked
 15537  0056BA  6F71               	movwf	CircularBufferEmpty@ctx& (0+255),b
 15538  0056BC  0E02               	movlw	high _rx_buffer_queue_context
 15539  0056BE  6F72               	movwf	(CircularBufferEmpty@ctx+1)& (0+255),b
 15540  0056C0  EC43  F05A         	call	_CircularBufferEmpty	;wreg free
 15541  0056C4  0900               	iorlw	0
 15542  0056C6  A4D8               	btfss	status,2,c
 15543  0056C8  D0AB               	goto	l19372
 15544                           
 15545                           ; BSR set to: 0
 15546                           ;../app/app_src/application.c: 2246:         uint8_t buf_id;;../app/app_src/application.
      +                          c: 2247:         CircularBufferPopFront(&rx_buffer_queue_context, &buf_id);
 15547  0056CA  0ED6               	movlw	low _rx_buffer_queue_context
 15548  0056CC  0100               	movlb	0	; force () banked
 15549  0056CE  6F84               	movwf	CircularBufferPopFront@ctx& (0+255),b
 15550  0056D0  0E02               	movlw	high _rx_buffer_queue_context
 15551  0056D2  6F85               	movwf	(CircularBufferPopFront@ctx+1)& (0+255),b
 15552  0056D4  0E97               	movlw	low fill_rx_regs@buf_id
 15553  0056D6  0100               	movlb	0	; force () banked
 15554  0056D8  6F86               	movwf	CircularBufferPopFront@val& (0+255),b
 15555  0056DA  0E00               	movlw	high fill_rx_regs@buf_id
 15556  0056DC  6F87               	movwf	(CircularBufferPopFront@val+1)& (0+255),b
 15557  0056DE  EC86  F033         	call	_CircularBufferPopFront	;wreg free
 15558                           
 15559                           ; BSR set to: 0
 15560                           ;../app/app_src/application.c: 2248:         if(!rx_buffer[buf_id].free){
 15561  0056E2  0100               	movlb	0	; force () banked
 15562  0056E4  5197               	movf	fill_rx_regs@buf_id& (0+255),w,b
 15563  0056E6  0D7B               	mullw	123
 15564  0056E8  0E52               	movlw	low _rx_buffer
 15565  0056EA  24F3               	addwf	243,w,c
 15566  0056EC  6ED9               	movwf	fsr2l,c
 15567  0056EE  0E0D               	movlw	high _rx_buffer
 15568  0056F0  20F4               	addwfc	prodh,w,c
 15569  0056F2  6EDA               	movwf	fsr2h,c
 15570  0056F4  B0DF               	btfsc	indf2,0,c
 15571  0056F6  D094               	goto	l19372
 15572                           
 15573                           ; BSR set to: 0
 15574                           ;../app/app_src/application.c: 2249:             uint8_t i = 0;
 15575  0056F8  0E00               	movlw	0
 15576  0056FA  0100               	movlb	0	; force () banked
 15577  0056FC  6F95               	movwf	fill_rx_regs@i& (0+255),b
 15578                           
 15579                           ; BSR set to: 0
 15580                           ;../app/app_src/application.c: 2251:             rx_ctl_mb_regs[RX_SRC_ADDR] = rx_buffer
      +                          [buf_id].rx_ind.srcAddr;
 15581  0056FE  0100               	movlb	0	; force () banked
 15582  005700  5197               	movf	fill_rx_regs@buf_id& (0+255),w,b
 15583  005702  0D7B               	mullw	123
 15584  005704  0E53               	movlw	low (_rx_buffer+1)
 15585  005706  24F3               	addwf	243,w,c
 15586  005708  6ED9               	movwf	fsr2l,c
 15587  00570A  0E0D               	movlw	high (_rx_buffer+1)
 15588  00570C  20F4               	addwfc	prodh,w,c
 15589  00570E  6EDA               	movwf	fsr2h,c
 15590  005710  006F FF78  F586    	movff	postinc2,_rx_ctl_mb_regs+6
 15591  005716  006F FF74  F587    	movff	postdec2,_rx_ctl_mb_regs+7
 15592                           
 15593                           ;../app/app_src/application.c: 2252:             while((rx_buffer[buf_id].rx_ind.size--)
      +                           && (dest_ptr < 59)){
 15594  00571C  D066               	goto	l19366
 15595  00571E                     l19356:
 15596                           
 15597                           ; BSR set to: 0
 15598                           ;../app/app_src/application.c: 2253:                 rx_ctl_mb_regs[dest_ptr] =
 15599  00571E  0E00               	movlw	0
 15600  005720  0100               	movlb	0	; force () banked
 15601  005722  6F8E               	movwf	??_fill_rx_regs& (0+255),b
 15602  005724  0EFF               	movlw	255
 15603  005726  6F8F               	movwf	(??_fill_rx_regs+1)& (0+255),b
 15604  005728  0100               	movlb	0	; force () banked
 15605  00572A  5197               	movf	fill_rx_regs@buf_id& (0+255),w,b
 15606  00572C  0D7B               	mullw	123
 15607  00572E  0E52               	movlw	low _rx_buffer
 15608  005730  0100               	movlb	0	; force () banked
 15609  005732  6F90               	movwf	(??_fill_rx_regs+2)& (0+255),b
 15610  005734  0E0D               	movlw	high _rx_buffer
 15611  005736  6F91               	movwf	(??_fill_rx_regs+3)& (0+255),b
 15612  005738  0E0D               	movlw	13
 15613  00573A  2790               	addwf	(??_fill_rx_regs+2)& (0+255),f,b
 15614  00573C  0E00               	movlw	0
 15615  00573E  2391               	addwfc	(??_fill_rx_regs+3)& (0+255),f,b
 15616  005740  50F3               	movf	243,w,c
 15617  005742  2790               	addwf	(??_fill_rx_regs+2)& (0+255),f,b
 15618  005744  50F4               	movf	244,w,c
 15619  005746  2391               	addwfc	(??_fill_rx_regs+3)& (0+255),f,b
 15620  005748  0100               	movlb	0	; force () banked
 15621  00574A  5195               	movf	fill_rx_regs@i& (0+255),w,b
 15622  00574C  0100               	movlb	0	; force () banked
 15623  00574E  2590               	addwf	(??_fill_rx_regs+2)& (0+255),w,b
 15624  005750  6ED9               	movwf	fsr2l,c
 15625  005752  0100               	movlb	0	; force () banked
 15626  005754  0E00               	movlw	0
 15627  005756  0100               	movlb	0	; force () banked
 15628  005758  2191               	addwfc	(??_fill_rx_regs+3)& (0+255),w,b
 15629  00575A  6EDA               	movwf	fsr2h,c
 15630  00575C  50DF               	movf	indf2,w,c
 15631  00575E  6F92               	movwf	(??_fill_rx_regs+4)& (0+255),b
 15632  005760  5192               	movf	(??_fill_rx_regs+4)& (0+255),w,b
 15633  005762  6F94               	movwf	(??_fill_rx_regs+6)& (0+255),b
 15634  005764  6B93               	clrf	(??_fill_rx_regs+5)& (0+255),b
 15635  005766  518E               	movf	??_fill_rx_regs& (0+255),w,b
 15636  005768  1793               	andwf	(??_fill_rx_regs+5)& (0+255),f,b
 15637  00576A  518F               	movf	(??_fill_rx_regs+1)& (0+255),w,b
 15638  00576C  1794               	andwf	(??_fill_rx_regs+6)& (0+255),f,b
 15639  00576E  0100               	movlb	0	; force () banked
 15640  005770  5196               	movf	fill_rx_regs@dest_ptr& (0+255),w,b
 15641  005772  0D02               	mullw	2
 15642  005774  0E80               	movlw	low _rx_ctl_mb_regs
 15643  005776  24F3               	addwf	243,w,c
 15644  005778  6ED9               	movwf	fsr2l,c
 15645  00577A  0E05               	movlw	high _rx_ctl_mb_regs
 15646  00577C  20F4               	addwfc	prodh,w,c
 15647  00577E  6EDA               	movwf	fsr2h,c
 15648  005780  0060  F24F  FFDE   	movff	??_fill_rx_regs+5,postinc2
 15649  005786  0060  F253  FFDD   	movff	??_fill_rx_regs+6,postdec2
 15650                           
 15651                           ; BSR set to: 0
 15652  00578C  0100               	movlb	0	; force () banked
 15653  00578E  2B95               	incf	fill_rx_regs@i& (0+255),f,b
 15654                           
 15655                           ; BSR set to: 0
 15656                           ;../app/app_src/application.c: 2255:                 rx_ctl_mb_regs[dest_ptr++] |= rx_bu
      +                          ffer[buf_id].payload[i++];
 15657  005790  0100               	movlb	0	; force () banked
 15658  005792  5196               	movf	fill_rx_regs@dest_ptr& (0+255),w,b
 15659  005794  0D02               	mullw	2
 15660  005796  0E80               	movlw	low _rx_ctl_mb_regs
 15661  005798  24F3               	addwf	243,w,c
 15662  00579A  6ED9               	movwf	fsr2l,c
 15663  00579C  0E05               	movlw	high _rx_ctl_mb_regs
 15664  00579E  20F4               	addwfc	prodh,w,c
 15665  0057A0  6EDA               	movwf	fsr2h,c
 15666  0057A2  0100               	movlb	0	; force () banked
 15667  0057A4  5197               	movf	fill_rx_regs@buf_id& (0+255),w,b
 15668  0057A6  0D7B               	mullw	123
 15669  0057A8  0E52               	movlw	low _rx_buffer
 15670  0057AA  0100               	movlb	0	; force () banked
 15671  0057AC  6F8E               	movwf	??_fill_rx_regs& (0+255),b
 15672  0057AE  0E0D               	movlw	high _rx_buffer
 15673  0057B0  6F8F               	movwf	(??_fill_rx_regs+1)& (0+255),b
 15674  0057B2  0E0D               	movlw	13
 15675  0057B4  278E               	addwf	??_fill_rx_regs& (0+255),f,b
 15676  0057B6  0E00               	movlw	0
 15677  0057B8  238F               	addwfc	(??_fill_rx_regs+1)& (0+255),f,b
 15678  0057BA  50F3               	movf	243,w,c
 15679  0057BC  278E               	addwf	??_fill_rx_regs& (0+255),f,b
 15680  0057BE  50F4               	movf	244,w,c
 15681  0057C0  238F               	addwfc	(??_fill_rx_regs+1)& (0+255),f,b
 15682  0057C2  0100               	movlb	0	; force () banked
 15683  0057C4  5195               	movf	fill_rx_regs@i& (0+255),w,b
 15684  0057C6  0100               	movlb	0	; force () banked
 15685  0057C8  258E               	addwf	??_fill_rx_regs& (0+255),w,b
 15686  0057CA  6EE9               	movwf	fsr0l,c
 15687  0057CC  0100               	movlb	0	; force () banked
 15688  0057CE  0E00               	movlw	0
 15689  0057D0  0100               	movlb	0	; force () banked
 15690  0057D2  218F               	addwfc	(??_fill_rx_regs+1)& (0+255),w,b
 15691  0057D4  6EEA               	movwf	fsr0h,c
 15692  0057D6  50EF               	movf	indf0,w,c
 15693  0057D8  6F90               	movwf	(??_fill_rx_regs+2)& (0+255),b
 15694  0057DA  5190               	movf	(??_fill_rx_regs+2)& (0+255),w,b
 15695  0057DC  12DE               	iorwf	postinc2,f,c
 15696  0057DE  0E00               	movlw	0
 15697  0057E0  12DD               	iorwf	postdec2,f,c
 15698                           
 15699                           ; BSR set to: 0
 15700  0057E2  0100               	movlb	0	; force () banked
 15701  0057E4  2B95               	incf	fill_rx_regs@i& (0+255),f,b
 15702                           
 15703                           ; BSR set to: 0
 15704  0057E6  0100               	movlb	0	; force () banked
 15705  0057E8  2B96               	incf	fill_rx_regs@dest_ptr& (0+255),f,b
 15706  0057EA                     l19366:
 15707                           
 15708                           ; BSR set to: 0
 15709                           ;../app/app_src/application.c: 2252:             while((rx_buffer[buf_id].rx_ind.size--)
      +                           && (dest_ptr < 59)){
 15710  0057EA  0100               	movlb	0	; force () banked
 15711  0057EC  5197               	movf	fill_rx_regs@buf_id& (0+255),w,b
 15712  0057EE  0D7B               	mullw	123
 15713  0057F0  0E5C               	movlw	low (_rx_buffer+10)
 15714  0057F2  24F3               	addwf	243,w,c
 15715  0057F4  6ED9               	movwf	fsr2l,c
 15716  0057F6  0E0D               	movlw	high (_rx_buffer+10)
 15717  0057F8  20F4               	addwfc	prodh,w,c
 15718  0057FA  6EDA               	movwf	fsr2h,c
 15719  0057FC  06DF               	decf	indf2,f,c
 15720  0057FE  28DE               	incf	postinc2,w,c
 15721  005800  B4D8               	btfsc	status,2,c
 15722  005802  D004               	goto	u17610
 15723                           
 15724                           ; BSR set to: 0
 15725  005804  0E3A               	movlw	58
 15726  005806  0100               	movlb	0	; force () banked
 15727  005808  6596               	cpfsgt	fill_rx_regs@dest_ptr& (0+255),b
 15728  00580A  D789               	goto	l19356
 15729  00580C                     u17610:
 15730                           
 15731                           ; BSR set to: 0
 15732                           ;../app/app_src/application.c: 2257:             rx_buffer[buf_id].free = 1;
 15733  00580C  0100               	movlb	0	; force () banked
 15734  00580E  5197               	movf	fill_rx_regs@buf_id& (0+255),w,b
 15735  005810  0D7B               	mullw	123
 15736  005812  0E52               	movlw	low _rx_buffer
 15737  005814  24F3               	addwf	243,w,c
 15738  005816  6ED9               	movwf	fsr2l,c
 15739  005818  0E0D               	movlw	high _rx_buffer
 15740  00581A  20F4               	addwfc	prodh,w,c
 15741  00581C  6EDA               	movwf	fsr2h,c
 15742  00581E  80DF               	bsf	indf2,0,c
 15743  005820                     l19372:
 15744                           
 15745                           ; BSR set to: 0
 15746                           ;../app/app_src/application.c: 2260:     read_only_mb_regs[RO_RX_MSG_ID] = 0;
 15747  005820  0E00               	movlw	0
 15748  005822  0103               	movlb	3	; force () banked
 15749  005824  6F69               	movwf	(_read_only_mb_regs+25)& (0+255),b
 15750  005826  0E00               	movlw	0
 15751  005828  6F68               	movwf	(_read_only_mb_regs+24)& (0+255),b
 15752                           
 15753                           ; BSR set to: 3
 15754                           ;../app/app_src/application.c: 2261:     rx_ctl_mb_regs[RX_CONTROL] = 1;
 15755  00582A  0E00               	movlw	0
 15756  00582C  0105               	movlb	5	; force () banked
 15757  00582E  6F83               	movwf	(_rx_ctl_mb_regs+3)& (0+255),b
 15758  005830  0E01               	movlw	1
 15759  005832  6F82               	movwf	(_rx_ctl_mb_regs+2)& (0+255),b
 15760                           
 15761                           ; BSR set to: 5
 15762  005834  0012               	return		;funcret
 15763  005836                     __end_of_fill_rx_regs:
 15764                           	callstack 0
 15765                           
 15766 ;; *************** function _CircularBufferPopFront *****************
 15767 ;; Defined at:
 15768 ;;		line 89 in file "../app/app_src/circular_buffer.c"
 15769 ;; Parameters:    Size  Location     Type
 15770 ;;  ctx             2   36[BANK0 ] PTR struct .
 15771 ;;		 -> ledtasksbuf(10), msg_ack_queue_context(10), rx_buffer_queue_context(10), 
 15772 ;;  val             2   38[BANK0 ] PTR void 
 15773 ;;		 -> handle_led_events@temp(3), fill_rx_regs@buf_id(1), handle_rw_regs@msg_ack_obj(4), 
 15774 ;; Auto vars:     Size  Location     Type
 15775 ;;  ret_var         2   44[BANK0 ] int 
 15776 ;; Return value:  Size  Location     Type
 15777 ;;                  1    wreg      char 
 15778 ;; Registers used:
 15779 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15780 ;; Tracked objects:
 15781 ;;		On entry : 3F/0
 15782 ;;		On exit  : 3F/0
 15783 ;;		Unchanged: 0/0
 15784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15785 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15786 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15787 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15788 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15789 ;;Total ram usage:       10 bytes
 15790 ;; Hardware stack levels used:    1
 15791 ;; Hardware stack levels required when called:   12
 15792 ;; This function calls:
 15793 ;;		___wmul
 15794 ;;		_memcpy
 15795 ;; This function is called by:
 15796 ;;		_handle_rw_regs
 15797 ;;		_fill_rx_regs
 15798 ;;		_handle_led_events
 15799 ;; This function uses a non-reentrant model
 15800 ;;
 15801                           
 15802                           	psect	text70
 15803  00670C                     __ptext70:
 15804                           	callstack 0
 15805  00670C                     _CircularBufferPopFront:
 15806                           	callstack 16
 15807                           
 15808                           ;../app/app_src/circular_buffer.c: 91:     int ret_var;;../app/app_src/circular_buffer.c
      +                          : 92:     if (ctx->read_pos == ctx->write_pos) {
 15809                           
 15810                           ; BSR set to: 5
 15811                           ;incstack = 0
 15812  00670C  0100               	movlb	0	; force () banked
 15813  00670E  EE20 F002          	lfsr	2,2
 15814  006712  5184               	movf	CircularBufferPopFront@ctx& (0+255),w,b
 15815  006714  26D9               	addwf	fsr2l,f,c
 15816  006716  5185               	movf	(CircularBufferPopFront@ctx+1)& (0+255),w,b
 15817  006718  22DA               	addwfc	fsr2h,f,c
 15818  00671A  EE00 F004          	lfsr	0,4
 15819  00671E  5184               	movf	CircularBufferPopFront@ctx& (0+255),w,b
 15820  006720  26E9               	addwf	fsr0l,f,c
 15821  006722  5185               	movf	(CircularBufferPopFront@ctx+1)& (0+255),w,b
 15822  006724  22EA               	addwfc	fsr0h,f,c
 15823  006726  50DE               	movf	postinc2,w,c
 15824  006728  18EE               	xorwf	postinc0,w,c
 15825  00672A  E108               	bnz	l18808
 15826  00672C  50DE               	movf	postinc2,w,c
 15827  00672E  18EE               	xorwf	postinc0,w,c
 15828  006730  A4D8               	btfss	status,2,c
 15829  006732  D004               	goto	l18808
 15830                           
 15831                           ; BSR set to: 0
 15832                           ;../app/app_src/circular_buffer.c: 93:         ret_var = -1;
 15833  006734  0100               	movlb	0	; force () banked
 15834  006736  698C               	setf	CircularBufferPopFront@ret_var& (0+255),b
 15835  006738  698D               	setf	(CircularBufferPopFront@ret_var+1)& (0+255),b
 15836                           
 15837                           ;../app/app_src/circular_buffer.c: 94:     }
 15838  00673A  D082               	goto	l18814
 15839  00673C                     l18808:
 15840                           
 15841                           ; BSR set to: 0
 15842                           ;../app/app_src/circular_buffer.c: 96:         memcpy(val, &ctx->buf[ctx->read_pos * ctx
      +                          ->element_size],
 15843  00673C  C086  F077         	movff	CircularBufferPopFront@val,memcpy@d1
 15844  006740  C087  F078         	movff	CircularBufferPopFront@val+1,memcpy@d1+1
 15845  006744  0100               	movlb	0	; force () banked
 15846  006746  EE20 F004          	lfsr	2,4
 15847  00674A  5184               	movf	CircularBufferPopFront@ctx& (0+255),w,b
 15848  00674C  26D9               	addwf	fsr2l,f,c
 15849  00674E  5185               	movf	(CircularBufferPopFront@ctx+1)& (0+255),w,b
 15850  006750  22DA               	addwfc	fsr2h,f,c
 15851  006752  006F FF78  F071    	movff	postinc2,___wmul@multiplier
 15852  006758  006F FF74  F072    	movff	postdec2,___wmul@multiplier+1
 15853  00675E  EE20 F006          	lfsr	2,6
 15854  006762  5184               	movf	CircularBufferPopFront@ctx& (0+255),w,b
 15855  006764  26D9               	addwf	fsr2l,f,c
 15856  006766  5185               	movf	(CircularBufferPopFront@ctx+1)& (0+255),w,b
 15857  006768  22DA               	addwfc	fsr2h,f,c
 15858  00676A  006F FF78  F073    	movff	postinc2,___wmul@multiplicand
 15859  006770  006F FF74  F074    	movff	postdec2,___wmul@multiplicand+1
 15860  006776  ECCD  F05A         	call	___wmul	;wreg free
 15861  00677A  0060  F213  FFD9   	movff	CircularBufferPopFront@ctx,fsr2l
 15862  006780  0060  F217  FFDA   	movff	CircularBufferPopFront@ctx+1,fsr2h
 15863  006786  006F FF78  F088    	movff	postinc2,??_CircularBufferPopFront
 15864  00678C  006F FF74  F089    	movff	postdec2,??_CircularBufferPopFront+1
 15865  006792  0100               	movlb	0	; force () banked
 15866  006794  5171               	movf	?___wmul& (0+255),w,b
 15867  006796  0100               	movlb	0	; force () banked
 15868  006798  2588               	addwf	??_CircularBufferPopFront& (0+255),w,b
 15869  00679A  6F8A               	movwf	(??_CircularBufferPopFront+2)& (0+255),b
 15870  00679C  0100               	movlb	0	; force () banked
 15871  00679E  5172               	movf	(?___wmul+1)& (0+255),w,b
 15872  0067A0  0100               	movlb	0	; force () banked
 15873  0067A2  2189               	addwfc	(??_CircularBufferPopFront+1)& (0+255),w,b
 15874  0067A4  6F8B               	movwf	(??_CircularBufferPopFront+3)& (0+255),b
 15875  0067A6  C08A  F079         	movff	??_CircularBufferPopFront+2,memcpy@s1
 15876  0067AA  C08B  F07A         	movff	??_CircularBufferPopFront+3,memcpy@s1+1
 15877  0067AE  0100               	movlb	0	; force () banked
 15878  0067B0  5179               	movf	memcpy@s1& (0+255),w,b
 15879  0067B2  117A               	iorwf	(memcpy@s1+1)& (0+255),w,b
 15880  0067B4  A4D8               	btfss	status,2,c
 15881  0067B6  0E20               	movlw	32
 15882  0067B8  6F7B               	movwf	(memcpy@s1+2)& (0+255),b
 15883  0067BA  0100               	movlb	0	; force () banked
 15884  0067BC  EE20 F006          	lfsr	2,6
 15885  0067C0  5184               	movf	CircularBufferPopFront@ctx& (0+255),w,b
 15886  0067C2  26D9               	addwf	fsr2l,f,c
 15887  0067C4  5185               	movf	(CircularBufferPopFront@ctx+1)& (0+255),w,b
 15888  0067C6  22DA               	addwfc	fsr2h,f,c
 15889  0067C8  006F FF78  F07C    	movff	postinc2,memcpy@n
 15890  0067CE  006F FF74  F07D    	movff	postdec2,memcpy@n+1
 15891  0067D4  ECC1  F04F         	call	_memcpy	;wreg free
 15892                           
 15893                           ; BSR set to: 0
 15894                           ;../app/app_src/circular_buffer.c: 99:         ctx->read_pos = (ctx->read_pos + 1) & ctx
      +                          ->max_size;
 15895  0067D8  0100               	movlb	0	; force () banked
 15896  0067DA  EE20 F008          	lfsr	2,8
 15897  0067DE  5184               	movf	CircularBufferPopFront@ctx& (0+255),w,b
 15898  0067E0  26D9               	addwf	fsr2l,f,c
 15899  0067E2  5185               	movf	(CircularBufferPopFront@ctx+1)& (0+255),w,b
 15900  0067E4  22DA               	addwfc	fsr2h,f,c
 15901  0067E6  006F FF78  F088    	movff	postinc2,??_CircularBufferPopFront
 15902  0067EC  006F FF74  F089    	movff	postdec2,??_CircularBufferPopFront+1
 15903  0067F2  EE20 F004          	lfsr	2,4
 15904  0067F6  5184               	movf	CircularBufferPopFront@ctx& (0+255),w,b
 15905  0067F8  26D9               	addwf	fsr2l,f,c
 15906  0067FA  5185               	movf	(CircularBufferPopFront@ctx+1)& (0+255),w,b
 15907  0067FC  22DA               	addwfc	fsr2h,f,c
 15908  0067FE  006F FF78  F08A    	movff	postinc2,??_CircularBufferPopFront+2
 15909  006804  006F FF74  F08B    	movff	postdec2,??_CircularBufferPopFront+3
 15910  00680A  0E01               	movlw	1
 15911  00680C  0100               	movlb	0	; force () banked
 15912  00680E  278A               	addwf	(??_CircularBufferPopFront+2)& (0+255),f,b
 15913  006810  0E00               	movlw	0
 15914  006812  238B               	addwfc	(??_CircularBufferPopFront+3)& (0+255),f,b
 15915  006814  5188               	movf	??_CircularBufferPopFront& (0+255),w,b
 15916  006816  178A               	andwf	(??_CircularBufferPopFront+2)& (0+255),f,b
 15917  006818  5189               	movf	(??_CircularBufferPopFront+1)& (0+255),w,b
 15918  00681A  178B               	andwf	(??_CircularBufferPopFront+3)& (0+255),f,b
 15919  00681C  0100               	movlb	0	; force () banked
 15920  00681E  EE20 F004          	lfsr	2,4
 15921  006822  5184               	movf	CircularBufferPopFront@ctx& (0+255),w,b
 15922  006824  26D9               	addwf	fsr2l,f,c
 15923  006826  5185               	movf	(CircularBufferPopFront@ctx+1)& (0+255),w,b
 15924  006828  22DA               	addwfc	fsr2h,f,c
 15925  00682A  0060  F22B  FFDE   	movff	??_CircularBufferPopFront+2,postinc2
 15926  006830  0060  F22F  FFDD   	movff	??_CircularBufferPopFront+3,postdec2
 15927                           
 15928                           ; BSR set to: 0
 15929                           ;../app/app_src/circular_buffer.c: 101:         ret_var = 0;
 15930  006836  0E00               	movlw	0
 15931  006838  0100               	movlb	0	; force () banked
 15932  00683A  6F8D               	movwf	(CircularBufferPopFront@ret_var+1)& (0+255),b
 15933  00683C  0E00               	movlw	0
 15934  00683E  6F8C               	movwf	CircularBufferPopFront@ret_var& (0+255),b
 15935  006840                     l18814:
 15936                           
 15937                           ; BSR set to: 0
 15938                           ;../app/app_src/circular_buffer.c: 103:     return ret_var;
 15939  006840  0100               	movlb	0	; force () banked
 15940  006842  518C               	movf	CircularBufferPopFront@ret_var& (0+255),w,b
 15941                           
 15942                           ; BSR set to: 0
 15943  006844  0012               	return		;funcret
 15944  006846                     __end_of_CircularBufferPopFront:
 15945                           	callstack 0
 15946                           
 15947 ;; *************** function _CircularBufferEmpty *****************
 15948 ;; Defined at:
 15949 ;;		line 137 in file "../app/app_src/circular_buffer.c"
 15950 ;; Parameters:    Size  Location     Type
 15951 ;;  ctx             2   17[BANK0 ] PTR const struct .
 15952 ;;		 -> ledtasksbuf(10), msg_ack_queue_context(10), rx_buffer_queue_context(10), 
 15953 ;; Auto vars:     Size  Location     Type
 15954 ;;		None
 15955 ;; Return value:  Size  Location     Type
 15956 ;;                  1    wreg      _Bool 
 15957 ;; Registers used:
 15958 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 15959 ;; Tracked objects:
 15960 ;;		On entry : 3F/0
 15961 ;;		On exit  : 3F/0
 15962 ;;		Unchanged: 0/0
 15963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15964 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15966 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15967 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15968 ;;Total ram usage:        6 bytes
 15969 ;; Hardware stack levels used:    1
 15970 ;; Hardware stack levels required when called:   11
 15971 ;; This function calls:
 15972 ;;		Nothing
 15973 ;; This function is called by:
 15974 ;;		_handle_rw_regs
 15975 ;;		_fill_rx_regs
 15976 ;;		_MBRTUStack
 15977 ;;		_handle_led_events
 15978 ;; This function uses a non-reentrant model
 15979 ;;
 15980                           
 15981                           	psect	text71
 15982  00B486                     __ptext71:
 15983                           	callstack 0
 15984  00B486                     _CircularBufferEmpty:
 15985                           	callstack 17
 15986                           
 15987                           ;../app/app_src/circular_buffer.c: 138:     return (ctx->read_pos == ctx->write_pos);
 15988                           
 15989                           ; BSR set to: 0
 15990                           ;incstack = 0
 15991  00B486  0100               	movlb	0	; force () banked
 15992  00B488  EE20 F002          	lfsr	2,2
 15993  00B48C  5171               	movf	CircularBufferEmpty@ctx& (0+255),w,b
 15994  00B48E  26D9               	addwf	fsr2l,f,c
 15995  00B490  5172               	movf	(CircularBufferEmpty@ctx+1)& (0+255),w,b
 15996  00B492  22DA               	addwfc	fsr2h,f,c
 15997  00B494  EE00 F004          	lfsr	0,4
 15998  00B498  5171               	movf	CircularBufferEmpty@ctx& (0+255),w,b
 15999  00B49A  26E9               	addwf	fsr0l,f,c
 16000  00B49C  5172               	movf	(CircularBufferEmpty@ctx+1)& (0+255),w,b
 16001  00B49E  22EA               	addwfc	fsr0h,f,c
 16002  00B4A0  50DE               	movf	postinc2,w,c
 16003  00B4A2  18EE               	xorwf	postinc0,w,c
 16004  00B4A4  E106               	bnz	u11130
 16005  00B4A6  50DE               	movf	postinc2,w,c
 16006  00B4A8  18EE               	xorwf	postinc0,w,c
 16007  00B4AA  A4D8               	btfss	status,2,c
 16008  00B4AC  D002               	goto	u11130
 16009  00B4AE  0E01               	movlw	1
 16010  00B4B0  0012               	return	
 16011  00B4B2                     u11130:
 16012  00B4B2  0E00               	movlw	0
 16013                           
 16014                           ; BSR set to: 0
 16015  00B4B4  0012               	return		;funcret
 16016  00B4B6                     __end_of_CircularBufferEmpty:
 16017                           	callstack 0
 16018                           
 16019 ;; *************** function _eMBPoll *****************
 16020 ;; Defined at:
 16021 ;;		line 332 in file "../modbus/mb.c"
 16022 ;; Parameters:    Size  Location     Type
 16023 ;;		None
 16024 ;; Auto vars:     Size  Location     Type
 16025 ;;  i               2   79[BANK0 ] int 
 16026 ;;  eEvent          1   78[BANK0 ] enum E15749
 16027 ;;  eStatus         1   77[BANK0 ] enum E15837
 16028 ;; Return value:  Size  Location     Type
 16029 ;;                  1    wreg      enum E16538
 16030 ;; Registers used:
 16031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+
      +10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16032 ;; Tracked objects:
 16033 ;;		On entry : 0/1
 16034 ;;		On exit  : 3C/0
 16035 ;;		Unchanged: 0/0
 16036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16038 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16039 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16040 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16041 ;;Total ram usage:        6 bytes
 16042 ;; Hardware stack levels used:    1
 16043 ;; Hardware stack levels required when called:   16
 16044 ;; This function calls:
 16045 ;;		Absolute function
 16046 ;;		___wmul
 16047 ;;		_eMBFuncReadHoldingRegister
 16048 ;;		_eMBFuncReadWriteMultipleHoldingRegister
 16049 ;;		_eMBFuncWriteHoldingRegister
 16050 ;;		_eMBFuncWriteMultipleHoldingRegister
 16051 ;;		_eMBRTUReceive
 16052 ;;		_eMBRTUSend
 16053 ;;		_vMBPortTimersDelay
 16054 ;;		_xMBPortEventGet
 16055 ;;		_xMBPortEventPost
 16056 ;; This function is called by:
 16057 ;;		_MBRTUStack
 16058 ;; This function uses a non-reentrant model
 16059 ;;
 16060                           
 16061                           	psect	text72
 16062  004470                     __ptext72:
 16063                           	callstack 0
 16064  004470                     _eMBPoll:
 16065                           	callstack 12
 16066                           
 16067                           ;../modbus/mb.c: 334:     static UCHAR *ucMBFrame;;../modbus/mb.c: 335:     static UCHAR
      +                           ucRcvAddress;;../modbus/mb.c: 336:     static UCHAR ucFunctionCode;;../modbus/mb.c: 337
      +                          :     static USHORT usLength;;../modbus/mb.c: 338:     static eMBException eException;;.
      +                          ./modbus/mb.c: 340:     int i;;../modbus/mb.c: 341:     eMBErrorCode eStatus = MB_ENOERR
      +                          ;
 16068                           
 16069                           ; BSR set to: 0
 16070                           ;incstack = 0
 16071  004470  0E00               	movlw	0
 16072  004472  0100               	movlb	0	; force () banked
 16073  004474  6FAD               	movwf	eMBPoll@eStatus& (0+255),b
 16074                           
 16075                           ;../modbus/mb.c: 342:     eMBEventType eEvent;;../modbus/mb.c: 345:     if( eMBState != 
      +                          STATE_ENABLED )
 16076  004476  0101               	movlb	1	; force () banked
 16077  004478  51FC               	movf	_eMBState& (0+255),w,b
 16078  00447A  B4D8               	btfsc	status,2,c
 16079  00447C  D002               	goto	l19382
 16080                           
 16081                           ; BSR set to: 1
 16082                           ;../modbus/mb.c: 346:     {;../modbus/mb.c: 347:         return MB_EILLSTATE;
 16083  00447E  0E06               	movlw	6
 16084  004480  0012               	return	
 16085  004482                     l19382:
 16086                           
 16087                           ; BSR set to: 1
 16088                           ;../modbus/mb.c: 352:     if( xMBPortEventGet( &eEvent ) == 1 )
 16089  004482  0EAE               	movlw	low eMBPoll@eEvent
 16090  004484  0100               	movlb	0	; force () banked
 16091  004486  6F71               	movwf	xMBPortEventGet@eEvent& (0+255),b
 16092  004488  0E00               	movlw	high eMBPoll@eEvent
 16093  00448A  6F72               	movwf	(xMBPortEventGet@eEvent+1)& (0+255),b
 16094  00448C  ECF8  F059         	call	_xMBPortEventGet	;wreg free
 16095  004490  06E8               	decf	wreg,f,c
 16096  004492  B4D8               	btfsc	status,2,c
 16097  004494  D0F7               	goto	l19444
 16098  004496  D10A               	goto	l4090
 16099  004498                     l19386:
 16100                           
 16101                           ; BSR set to: 0
 16102                           ;../modbus/mb.c: 360:             eStatus = peMBFrameReceiveCur( &ucRcvAddress, &ucMBFra
      +                          me, &usLength );
 16103  004498  0EFB               	movlw	low eMBPoll@ucRcvAddress
 16104  00449A  0100               	movlb	0	; force () banked
 16105  00449C  6F7B               	movwf	eMBRTUReceive@pucRcvAddress& (0+255),b
 16106  00449E  0E01               	movlw	high eMBPoll@ucRcvAddress
 16107  0044A0  6F7C               	movwf	(eMBRTUReceive@pucRcvAddress+1)& (0+255),b
 16108  0044A2  0EF5               	movlw	low eMBPoll@ucMBFrame
 16109  0044A4  0100               	movlb	0	; force () banked
 16110  0044A6  6F7D               	movwf	eMBRTUReceive@pucFrame& (0+255),b
 16111  0044A8  0E01               	movlw	high eMBPoll@ucMBFrame
 16112  0044AA  6F7E               	movwf	(eMBRTUReceive@pucFrame+1)& (0+255),b
 16113  0044AC  0EF3               	movlw	low eMBPoll@usLength
 16114  0044AE  0100               	movlb	0	; force () banked
 16115  0044B0  6F7F               	movwf	eMBRTUReceive@pusLength& (0+255),b
 16116  0044B2  0E01               	movlw	high eMBPoll@usLength
 16117  0044B4  6F80               	movwf	(eMBRTUReceive@pusLength+1)& (0+255),b
 16118  0044B6  D801               	call	u17648
 16119  0044B8  D00A               	goto	u17649
 16120  0044BA                     u17648:
 16121  0044BA  0005               	push	
 16122  0044BC  6EFA               	movwf	pclath,c
 16123  0044BE  0102               	movlb	2	; force () banked
 16124  0044C0  5134               	movf	_peMBFrameReceiveCur& (0+255),w,b
 16125  0044C2  6EFD               	movwf	tosl,c
 16126  0044C4  5135               	movf	(_peMBFrameReceiveCur+1)& (0+255),w,b
 16127  0044C6  6EFE               	movwf	tosh,c
 16128  0044C8  6AFF               	clrf	tosu,c
 16129  0044CA  50FA               	movf	pclath,w,c
 16130  0044CC  0012               	return		;indir
 16131  0044CE                     u17649:
 16132  0044CE  0100               	movlb	0	; force () banked
 16133  0044D0  6FAD               	movwf	eMBPoll@eStatus& (0+255),b
 16134                           
 16135                           ; BSR set to: 0
 16136                           ;../modbus/mb.c: 361:             if( eStatus == MB_ENOERR )
 16137  0044D2  0100               	movlb	0	; force () banked
 16138  0044D4  51AD               	movf	eMBPoll@eStatus& (0+255),w,b
 16139  0044D6  A4D8               	btfss	status,2,c
 16140  0044D8  D0E9               	goto	l4090
 16141                           
 16142                           ; BSR set to: 0
 16143                           ;../modbus/mb.c: 362:             {;../modbus/mb.c: 364:                 if( ( ucRcvAddr
      +                          ess == ucMBAddress ) || ( ucRcvAddress == ( 0 ) ) )
 16144  0044DA  0101               	movlb	1	; force () banked
 16145  0044DC  51DF               	movf	_ucMBAddress& (0+255),w,b
 16146  0044DE  0101               	movlb	1	; force () banked
 16147  0044E0  19FB               	xorwf	eMBPoll@ucRcvAddress& (0+255),w,b
 16148  0044E2  B4D8               	btfsc	status,2,c
 16149  0044E4  D004               	goto	u17670
 16150                           
 16151                           ; BSR set to: 1
 16152  0044E6  0101               	movlb	1	; force () banked
 16153  0044E8  51FB               	movf	eMBPoll@ucRcvAddress& (0+255),w,b
 16154  0044EA  A4D8               	btfss	status,2,c
 16155  0044EC  D0DF               	goto	l4090
 16156  0044EE                     u17670:
 16157                           
 16158                           ; BSR set to: 1
 16159                           ;../modbus/mb.c: 365:                 {;../modbus/mb.c: 366:                     ( void 
      +                          )xMBPortEventPost( EV_EXECUTE );
 16160  0044EE  0E02               	movlw	2
 16161  0044F0  6EE6               	movwf	postinc1,c
 16162  0044F2  ECCD  F05D         	call	_xMBPortEventPost	;wreg free
 16163  0044F6  D0DA               	goto	l4090
 16164  0044F8                     l19396:
 16165                           
 16166                           ; BSR set to: 0
 16167                           ;../modbus/mb.c: 372:             ucFunctionCode = ucMBFrame[0];
 16168  0044F8  0060  F7D7  FFD9   	movff	eMBPoll@ucMBFrame,fsr2l
 16169  0044FE  0060  F7DB  FFDA   	movff	eMBPoll@ucMBFrame+1,fsr2h
 16170  004504  50DF               	movf	indf2,w,c
 16171  004506  0101               	movlb	1	; force () banked
 16172  004508  6FDE               	movwf	eMBPoll@ucFunctionCode& (0+255),b
 16173                           
 16174                           ; BSR set to: 1
 16175                           ;../modbus/mb.c: 373:             eException = MB_EX_ILLEGAL_FUNCTION;
 16176  00450A  0E01               	movlw	1
 16177  00450C  0101               	movlb	1	; force () banked
 16178  00450E  6FDD               	movwf	eMBPoll@eException& (0+255),b
 16179                           
 16180                           ; BSR set to: 1
 16181                           ;../modbus/mb.c: 374:             for( i = 0; i < ( 6 ); i++ )
 16182  004510  0E00               	movlw	0
 16183  004512  0100               	movlb	0	; force () banked
 16184  004514  6FB0               	movwf	(eMBPoll@i+1)& (0+255),b
 16185  004516  0E00               	movlw	0
 16186  004518  6FAF               	movwf	eMBPoll@i& (0+255),b
 16187                           
 16188                           ; BSR set to: 0
 16189  00451A  0100               	movlb	0	; force () banked
 16190  00451C  BFB0               	btfsc	(eMBPoll@i+1)& (0+255),7,b
 16191  00451E  D003               	goto	l19406
 16192  004520  51B0               	movf	(eMBPoll@i+1)& (0+255),w,b
 16193  004522  E169               	bnz	l19420
 16194  004524  D064               	goto	L16
 16195  004526                     l19406:
 16196                           
 16197                           ; BSR set to: 0
 16198                           ;../modbus/mb.c: 375:             {;../modbus/mb.c: 377:                 if( xFuncHandle
      +                          rs[i].ucFunctionCode == 0 )
 16199  004526  C0AF  F071         	movff	eMBPoll@i,___wmul@multiplier
 16200  00452A  C0B0  F072         	movff	eMBPoll@i+1,___wmul@multiplier+1
 16201  00452E  0E00               	movlw	0
 16202  004530  0100               	movlb	0	; force () banked
 16203  004532  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16204  004534  0E03               	movlw	3
 16205  004536  6F73               	movwf	___wmul@multiplicand& (0+255),b
 16206  004538  ECCD  F05A         	call	___wmul	;wreg free
 16207  00453C  0EC9               	movlw	low _xFuncHandlers
 16208  00453E  0100               	movlb	0	; force () banked
 16209  004540  2571               	addwf	?___wmul& (0+255),w,b
 16210  004542  6ED9               	movwf	fsr2l,c
 16211  004544  0E03               	movlw	high _xFuncHandlers
 16212  004546  2172               	addwfc	(?___wmul+1)& (0+255),w,b
 16213  004548  6EDA               	movwf	fsr2h,c
 16214  00454A  50DF               	movf	indf2,w,c
 16215  00454C  B4D8               	btfsc	status,2,c
 16216  00454E  D053               	goto	u17720
 16217                           
 16218                           ; BSR set to: 0
 16219  004550  C0AF  F071         	movff	eMBPoll@i,___wmul@multiplier
 16220  004554  C0B0  F072         	movff	eMBPoll@i+1,___wmul@multiplier+1
 16221  004558  0E00               	movlw	0
 16222  00455A  0100               	movlb	0	; force () banked
 16223  00455C  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16224  00455E  0E03               	movlw	3
 16225  004560  6F73               	movwf	___wmul@multiplicand& (0+255),b
 16226  004562  ECCD  F05A         	call	___wmul	;wreg free
 16227  004566  0EC9               	movlw	low _xFuncHandlers
 16228  004568  0100               	movlb	0	; force () banked
 16229  00456A  2571               	addwf	?___wmul& (0+255),w,b
 16230  00456C  6ED9               	movwf	fsr2l,c
 16231  00456E  0E03               	movlw	high _xFuncHandlers
 16232  004570  2172               	addwfc	(?___wmul+1)& (0+255),w,b
 16233  004572  6EDA               	movwf	fsr2h,c
 16234  004574  0101               	movlb	1	; force () banked
 16235  004576  51DE               	movf	eMBPoll@ucFunctionCode& (0+255),w,b
 16236  004578  18DE               	xorwf	postinc2,w,c
 16237  00457A  A4D8               	btfss	status,2,c
 16238  00457C  D030               	goto	l19416
 16239                           
 16240                           ; BSR set to: 1
 16241                           ;../modbus/mb.c: 382:                 {;../modbus/mb.c: 383:                     eExcept
      +                          ion = xFuncHandlers[i].pxHandler( ucMBFrame, &usLength );
 16242  00457E  C1F5  F096         	movff	eMBPoll@ucMBFrame,eMBFuncReadWriteMultipleHoldingRegister@pucFrame
 16243  004582  C1F6  F097         	movff	eMBPoll@ucMBFrame+1,eMBFuncReadWriteMultipleHoldingRegister@pucFrame+1
 16244  004586  0EF3               	movlw	low eMBPoll@usLength
 16245  004588  0100               	movlb	0	; force () banked
 16246  00458A  6F98               	movwf	eMBFuncReadWriteMultipleHoldingRegister@usLen& (0+255),b
 16247  00458C  0E01               	movlw	high eMBPoll@usLength
 16248  00458E  6F99               	movwf	(eMBFuncReadWriteMultipleHoldingRegister@usLen+1)& (0+255),b
 16249  004590  C0AF  F071         	movff	eMBPoll@i,___wmul@multiplier
 16250  004594  C0B0  F072         	movff	eMBPoll@i+1,___wmul@multiplier+1
 16251  004598  0E00               	movlw	0
 16252  00459A  0100               	movlb	0	; force () banked
 16253  00459C  6F74               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16254  00459E  0E03               	movlw	3
 16255  0045A0  6F73               	movwf	___wmul@multiplicand& (0+255),b
 16256  0045A2  ECCD  F05A         	call	___wmul	;wreg free
 16257  0045A6  0ECA               	movlw	low (_xFuncHandlers+1)
 16258  0045A8  0100               	movlb	0	; force () banked
 16259  0045AA  2571               	addwf	?___wmul& (0+255),w,b
 16260  0045AC  6ED9               	movwf	fsr2l,c
 16261  0045AE  0E03               	movlw	high (_xFuncHandlers+1)
 16262  0045B0  2172               	addwfc	(?___wmul+1)& (0+255),w,b
 16263  0045B2  6EDA               	movwf	fsr2h,c
 16264  0045B4  006F FF78  F0AB    	movff	postinc2,??_eMBPoll
 16265  0045BA  006F FF74  F0AC    	movff	postdec2,??_eMBPoll+1
 16266  0045C0  D801               	call	u17718
 16267  0045C2  D00A               	goto	u17719
 16268  0045C4                     u17718:
 16269  0045C4  0005               	push	
 16270  0045C6  6EFA               	movwf	pclath,c
 16271  0045C8  0100               	movlb	0	; force () banked
 16272  0045CA  51AB               	movf	??_eMBPoll& (0+255),w,b
 16273  0045CC  6EFD               	movwf	tosl,c
 16274  0045CE  51AC               	movf	(??_eMBPoll+1)& (0+255),w,b
 16275  0045D0  6EFE               	movwf	tosh,c
 16276  0045D2  6AFF               	clrf	tosu,c
 16277  0045D4  50FA               	movf	pclath,w,c
 16278  0045D6  0012               	return		;indir
 16279  0045D8                     u17719:
 16280  0045D8  0101               	movlb	1	; force () banked
 16281  0045DA  6FDD               	movwf	eMBPoll@eException& (0+255),b
 16282                           
 16283                           ;../modbus/mb.c: 384:                     break;
 16284  0045DC  D00C               	goto	u17720
 16285  0045DE                     l19416:
 16286                           
 16287                           ; BSR set to: 1
 16288                           ;../modbus/mb.c: 386:             }
 16289  0045DE  0100               	movlb	0	; force () banked
 16290  0045E0  4BAF               	infsnz	eMBPoll@i& (0+255),f,b
 16291  0045E2  2BB0               	incf	(eMBPoll@i+1)& (0+255),f,b
 16292                           
 16293                           ; BSR set to: 0
 16294  0045E4  0100               	movlb	0	; force () banked
 16295  0045E6  BFB0               	btfsc	(eMBPoll@i+1)& (0+255),7,b
 16296  0045E8  D79E               	goto	l19406
 16297  0045EA  51B0               	movf	(eMBPoll@i+1)& (0+255),w,b
 16298  0045EC  E104               	bnz	u17720
 16299  0045EE                     L16:
 16300  0045EE  0E06               	movlw	6
 16301  0045F0  5DAF               	subwf	eMBPoll@i& (0+255),w,b
 16302  0045F2  A0D8               	btfss	status,0,c
 16303  0045F4  D798               	goto	l19406
 16304  0045F6                     u17720:
 16305  0045F6                     l19420:
 16306                           
 16307                           ;../modbus/mb.c: 390:             if( ucRcvAddress != ( 0 ) )
 16308  0045F6  0101               	movlb	1	; force () banked
 16309  0045F8  51FB               	movf	eMBPoll@ucRcvAddress& (0+255),w,b
 16310  0045FA  B4D8               	btfsc	status,2,c
 16311  0045FC  D057               	goto	l4090
 16312                           
 16313                           ; BSR set to: 1
 16314                           ;../modbus/mb.c: 391:             {;../modbus/mb.c: 392:                 if( eException 
      +                          != MB_EX_NONE )
 16315  0045FE  0101               	movlb	1	; force () banked
 16316  004600  51DD               	movf	eMBPoll@eException& (0+255),w,b
 16317  004602  B4D8               	btfsc	status,2,c
 16318  004604  D026               	goto	l19434
 16319                           
 16320                           ; BSR set to: 1
 16321                           ;../modbus/mb.c: 393:                 {;../modbus/mb.c: 395:                     usLengt
      +                          h = 0;
 16322  004606  0E00               	movlw	0
 16323  004608  0101               	movlb	1	; force () banked
 16324  00460A  6FF4               	movwf	(eMBPoll@usLength+1)& (0+255),b
 16325  00460C  0E00               	movlw	0
 16326  00460E  6FF3               	movwf	eMBPoll@usLength& (0+255),b
 16327                           
 16328                           ; BSR set to: 1
 16329                           ;../modbus/mb.c: 396:                     ucMBFrame[usLength++] = ( UCHAR )( ucFunctionC
      +                          ode | ( 128 ) );
 16330  004610  0101               	movlb	1	; force () banked
 16331  004612  51F3               	movf	eMBPoll@usLength& (0+255),w,b
 16332  004614  0101               	movlb	1	; force () banked
 16333  004616  25F5               	addwf	eMBPoll@ucMBFrame& (0+255),w,b
 16334  004618  6ED9               	movwf	fsr2l,c
 16335  00461A  0101               	movlb	1	; force () banked
 16336  00461C  51F4               	movf	(eMBPoll@usLength+1)& (0+255),w,b
 16337  00461E  0101               	movlb	1	; force () banked
 16338  004620  21F6               	addwfc	(eMBPoll@ucMBFrame+1)& (0+255),w,b
 16339  004622  6EDA               	movwf	fsr2h,c
 16340  004624  0101               	movlb	1	; force () banked
 16341  004626  51DE               	movf	eMBPoll@ucFunctionCode& (0+255),w,b
 16342  004628  0980               	iorlw	128
 16343  00462A  6EDF               	movwf	indf2,c
 16344                           
 16345                           ; BSR set to: 1
 16346  00462C  0101               	movlb	1	; force () banked
 16347  00462E  4BF3               	infsnz	eMBPoll@usLength& (0+255),f,b
 16348  004630  2BF4               	incf	(eMBPoll@usLength+1)& (0+255),f,b
 16349                           
 16350                           ; BSR set to: 1
 16351                           ;../modbus/mb.c: 397:                     ucMBFrame[usLength++] = eException;
 16352  004632  0101               	movlb	1	; force () banked
 16353  004634  51F3               	movf	eMBPoll@usLength& (0+255),w,b
 16354  004636  0101               	movlb	1	; force () banked
 16355  004638  25F5               	addwf	eMBPoll@ucMBFrame& (0+255),w,b
 16356  00463A  6ED9               	movwf	fsr2l,c
 16357  00463C  0101               	movlb	1	; force () banked
 16358  00463E  51F4               	movf	(eMBPoll@usLength+1)& (0+255),w,b
 16359  004640  0101               	movlb	1	; force () banked
 16360  004642  21F6               	addwfc	(eMBPoll@ucMBFrame+1)& (0+255),w,b
 16361  004644  6EDA               	movwf	fsr2h,c
 16362  004646  0060  F777  FFDF   	movff	eMBPoll@eException,indf2
 16363                           
 16364                           ; BSR set to: 1
 16365  00464C  0101               	movlb	1	; force () banked
 16366  00464E  4BF3               	infsnz	eMBPoll@usLength& (0+255),f,b
 16367  004650  2BF4               	incf	(eMBPoll@usLength+1)& (0+255),f,b
 16368  004652                     l19434:
 16369                           
 16370                           ; BSR set to: 1
 16371                           ;../modbus/mb.c: 403:                 eStatus = peMBFrameSendCur( ucMBAddress, ucMBFrame
      +                          , usLength );
 16372                           
 16373                           ; BSR set to: 1
 16374  004652  D801               	call	u17758
 16375  004654  D014               	goto	u17759
 16376  004656                     u17758:
 16377  004656  0005               	push	
 16378  004658  6EFA               	movwf	pclath,c
 16379  00465A  0102               	movlb	2	; force () banked
 16380  00465C  513A               	movf	_peMBFrameSendCur& (0+255),w,b
 16381  00465E  6EFD               	movwf	tosl,c
 16382  004660  513B               	movf	(_peMBFrameSendCur+1)& (0+255),w,b
 16383  004662  6EFE               	movwf	tosh,c
 16384  004664  6AFF               	clrf	tosu,c
 16385  004666  50FA               	movf	pclath,w,c
 16386  004668  C1F5  F07B         	movff	eMBPoll@ucMBFrame,eMBRTUSend@pucFrame
 16387  00466C  C1F6  F07C         	movff	eMBPoll@ucMBFrame+1,eMBRTUSend@pucFrame+1
 16388  004670  C1F3  F07D         	movff	eMBPoll@usLength,eMBRTUSend@usLength
 16389  004674  C1F4  F07E         	movff	eMBPoll@usLength+1,eMBRTUSend@usLength+1
 16390  004678  0101               	movlb	1	; force () banked
 16391  00467A  51DF               	movf	_ucMBAddress& (0+255),w,b
 16392  00467C  0012               	return		;indir
 16393  00467E                     u17759:
 16394  00467E  0100               	movlb	0	; force () banked
 16395  004680  6FAD               	movwf	eMBPoll@eStatus& (0+255),b
 16396  004682  D014               	goto	l4090
 16397  004684                     l19444:
 16398                           
 16399                           ; BSR set to: 0
 16400  004684  0100               	movlb	0	; force () banked
 16401  004686  51AE               	movf	eMBPoll@eEvent& (0+255),w,b
 16402  004688  0100               	movlb	0	; force () banked
 16403  00468A  6FAB               	movwf	??_eMBPoll& (0+255),b
 16404  00468C  6BAC               	clrf	(??_eMBPoll+1)& (0+255),b
 16405                           
 16406                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16407                           ; Switch size 1, requested type "simple"
 16408                           ; Number of cases is 1, Range of values is 0 to 0
 16409                           ; switch strategies available:
 16410                           ; Name         Instructions Cycles
 16411                           ; simple_byte            4     3 (average)
 16412                           ;	Chosen strategy is simple_byte
 16413  00468E  51AC               	movf	(??_eMBPoll+1)& (0+255),w,b
 16414  004690  0A00               	xorlw	0	; case 0
 16415  004692  A4D8               	btfss	status,2,c
 16416  004694  D00B               	goto	l4090
 16417                           
 16418                           ; BSR set to: 0
 16419                           ; Switch size 1, requested type "simple"
 16420                           ; Number of cases is 4, Range of values is 0 to 3
 16421                           ; switch strategies available:
 16422                           ; Name         Instructions Cycles
 16423                           ; simple_byte           13     7 (average)
 16424                           ;	Chosen strategy is simple_byte
 16425  004696  51AB               	movf	??_eMBPoll& (0+255),w,b
 16426  004698  0A00               	xorlw	0	; case 0
 16427  00469A  B4D8               	btfsc	status,2,c
 16428  00469C  D007               	goto	l4090
 16429  00469E  0A01               	xorlw	1	; case 1
 16430  0046A0  B4D8               	btfsc	status,2,c
 16431  0046A2  D6FA               	goto	l19386
 16432  0046A4  0A03               	xorlw	3	; case 2
 16433  0046A6  B4D8               	btfsc	status,2,c
 16434  0046A8  D727               	goto	l19396
 16435  0046AA  0A01               	xorlw	1	; case 3
 16436  0046AC                     l4090:
 16437                           
 16438                           ;../modbus/mb.c: 411:     return MB_ENOERR;
 16439                           
 16440                           ; BSR set to: 1
 16441  0046AC  0E00               	movlw	0
 16442  0046AE  0012               	return		;funcret
 16443  0046B0                     __end_of_eMBPoll:
 16444                           	callstack 0
 16445                           
 16446 ;; *************** function _xMBPortEventPost *****************
 16447 ;; Defined at:
 16448 ;;		line 39 in file "../modbus/port/portevent.c"
 16449 ;; Parameters:    Size  Location     Type
 16450 ;;  eEvent          1  [STACK] enum E15531
 16451 ;; Auto vars:     Size  Location     Type
 16452 ;;		None
 16453 ;; Return value:  Size  Location     Type
 16454 ;;                  1  [STACK] unsigned char 
 16455 ;; Registers used:
 16456 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
 16457 ;; Tracked objects:
 16458 ;;		On entry : 0/0
 16459 ;;		On exit  : 3F/2
 16460 ;;		Unchanged: 0/0
 16461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16466 ;;Total ram usage:        0 bytes
 16467 ;; Hardware stack levels used:    1
 16468 ;; Hardware stack levels required when called:   11
 16469 ;; This function calls:
 16470 ;;		Nothing
 16471 ;; This function is called by:
 16472 ;;		_xMBRTUTransmitFSM
 16473 ;;		_xMBRTUTimerT35Expired
 16474 ;;		_eMBPoll
 16475 ;; This function uses a reentrant model
 16476 ;;
 16477                           
 16478                           	psect	text73
 16479  00BB9A                     __ptext73:
 16480                           	callstack 0
 16481  00BB9A                     _xMBPortEventPost:
 16482                           	callstack 1
 16483                           
 16484                           ;../modbus/port/portevent.c: 39: xMBPortEventPost( eMBEventType eEvent );../modbus/port/
      +                          portevent.c: 40: {;../modbus/port/portevent.c: 41:     xEventInQueue = 1;
 16485                           
 16486                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16487                           ;incstack = 0
 16488  00BB9A  0E01               	movlw	1
 16489  00BB9C  0102               	movlb	2	; force () banked
 16490  00BB9E  6F56               	movwf	_xEventInQueue& (0+255),b
 16491                           
 16492                           ; BSR set to: 2
 16493                           ;../modbus/port/portevent.c: 42:     eQueuedEvent = eEvent;
 16494                           ;stkvar	xMBPortEventPost@eEvent @ sp[(0)+-1]
 16495  00BBA0  0EFF               	movlw	-1
 16496  00BBA2  006F FF8C  F257    	movff	plusw1,_eQueuedEvent
 16497                           
 16498                           ; BSR set to: 2
 16499                           ;../modbus/port/portevent.c: 43:     return 1;
 16500  00BBA8  0E01               	movlw	1
 16501  00BBAA  6E01               	movwf	btemp^0,c
 16502                           
 16503                           ; BSR set to: 2
 16504                           ; _xMBPortEventPost: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 16505  00BBAC  52E5               	movf	postdec1,f,c
 16506  00BBAE  0012               	return		;funcret
 16507  00BBB0                     __end_of_xMBPortEventPost:
 16508                           	callstack 0
 16509                           
 16510 ;; *************** function _xMBPortEventGet *****************
 16511 ;; Defined at:
 16512 ;;		line 47 in file "../modbus/port/portevent.c"
 16513 ;; Parameters:    Size  Location     Type
 16514 ;;  eEvent          2   17[BANK0 ] PTR enum E15531
 16515 ;;		 -> eMBPoll@eEvent(1), 
 16516 ;; Auto vars:     Size  Location     Type
 16517 ;;  xEventHappen    1   19[BANK0 ] unsigned char 
 16518 ;; Return value:  Size  Location     Type
 16519 ;;                  1    wreg      unsigned char 
 16520 ;; Registers used:
 16521 ;;		wreg, fsr2l, fsr2h, status,2
 16522 ;; Tracked objects:
 16523 ;;		On entry : 3F/0
 16524 ;;		On exit  : 3F/0
 16525 ;;		Unchanged: 0/0
 16526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16527 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16528 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16530 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16531 ;;Total ram usage:        3 bytes
 16532 ;; Hardware stack levels used:    1
 16533 ;; Hardware stack levels required when called:   11
 16534 ;; This function calls:
 16535 ;;		Nothing
 16536 ;; This function is called by:
 16537 ;;		_eMBPoll
 16538 ;; This function uses a non-reentrant model
 16539 ;;
 16540                           
 16541                           	psect	text74
 16542  00B3F0                     __ptext74:
 16543                           	callstack 0
 16544  00B3F0                     _xMBPortEventGet:
 16545                           	callstack 16
 16546                           
 16547                           ;../modbus/port/portevent.c: 47: xMBPortEventGet( eMBEventType * eEvent );../modbus/port
      +                          /portevent.c: 48: {;../modbus/port/portevent.c: 49:     BOOL xEventHappened = 0;
 16548                           
 16549                           ; BSR set to: 2
 16550                           ;incstack = 0
 16551  00B3F0  0E00               	movlw	0
 16552  00B3F2  0100               	movlb	0	; force () banked
 16553  00B3F4  6F73               	movwf	xMBPortEventGet@xEventHappened& (0+255),b
 16554                           
 16555                           ;../modbus/port/portevent.c: 51:     if( xEventInQueue )
 16556  00B3F6  0102               	movlb	2	; force () banked
 16557  00B3F8  5156               	movf	_xEventInQueue& (0+255),w,b
 16558  00B3FA  B4D8               	btfsc	status,2,c
 16559  00B3FC  D00F               	goto	l14568
 16560                           
 16561                           ; BSR set to: 2
 16562                           ;../modbus/port/portevent.c: 52:     {;../modbus/port/portevent.c: 53:         *eEvent =
      +                           eQueuedEvent;
 16563  00B3FE  0060  F1C7  FFD9   	movff	xMBPortEventGet@eEvent,fsr2l
 16564  00B404  0060  F1CB  FFDA   	movff	xMBPortEventGet@eEvent+1,fsr2h
 16565  00B40A  0060  F95F  FFDF   	movff	_eQueuedEvent,indf2
 16566                           
 16567                           ; BSR set to: 2
 16568                           ;../modbus/port/portevent.c: 54:         xEventInQueue = 0;
 16569  00B410  0E00               	movlw	0
 16570  00B412  0102               	movlb	2	; force () banked
 16571  00B414  6F56               	movwf	_xEventInQueue& (0+255),b
 16572                           
 16573                           ; BSR set to: 2
 16574                           ;../modbus/port/portevent.c: 55:         xEventHappened = 1;
 16575  00B416  0E01               	movlw	1
 16576  00B418  0100               	movlb	0	; force () banked
 16577  00B41A  6F73               	movwf	xMBPortEventGet@xEventHappened& (0+255),b
 16578  00B41C                     l14568:
 16579                           
 16580                           ;../modbus/port/portevent.c: 57:     return xEventHappened;
 16581  00B41C  0100               	movlb	0	; force () banked
 16582  00B41E  5173               	movf	xMBPortEventGet@xEventHappened& (0+255),w,b
 16583                           
 16584                           ; BSR set to: 0
 16585  00B420  0012               	return		;funcret
 16586  00B422                     __end_of_xMBPortEventGet:
 16587                           	callstack 0
 16588                           
 16589 ;; *************** function _vMBPortTimersDelay *****************
 16590 ;; Defined at:
 16591 ;;		line 91 in file "../modbus/port/porttimer.c"
 16592 ;; Parameters:    Size  Location     Type
 16593 ;;  usTimeOutMS     2   17[BANK0 ] unsigned int 
 16594 ;; Auto vars:     Size  Location     Type
 16595 ;;		None
 16596 ;; Return value:  Size  Location     Type
 16597 ;;                  1    wreg      void 
 16598 ;; Registers used:
 16599 ;;		None
 16600 ;; Tracked objects:
 16601 ;;		On entry : 0/0
 16602 ;;		On exit  : 0/0
 16603 ;;		Unchanged: 0/0
 16604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16605 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16608 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16609 ;;Total ram usage:        2 bytes
 16610 ;; Hardware stack levels used:    1
 16611 ;; Hardware stack levels required when called:   11
 16612 ;; This function calls:
 16613 ;;		Nothing
 16614 ;; This function is called by:
 16615 ;;		_eMBPoll
 16616 ;; This function uses a non-reentrant model
 16617 ;;
 16618                           
 16619                           	psect	text75
 16620  00BD90                     __ptext75:
 16621                           	callstack 0
 16622  00BD90                     _vMBPortTimersDelay:
 16623                           	callstack 16
 16624                           
 16625                           ; BSR set to: 0
 16626                           ;incstack = 0
 16627  00BD90  0012               	return		;funcret
 16628  00BD92                     __end_of_vMBPortTimersDelay:
 16629                           	callstack 0
 16630                           
 16631 ;; *************** function _eMBRTUSend *****************
 16632 ;; Defined at:
 16633 ;;		line 187 in file "../modbus/rtu/mbrtu.c"
 16634 ;; Parameters:    Size  Location     Type
 16635 ;;  ucSlaveAddre    1    wreg     unsigned char 
 16636 ;;  pucFrame        2   27[BANK0 ] PTR const unsigned char 
 16637 ;;		 -> ucRTUBuf(256), NULL(0), 
 16638 ;;  usLength        2   29[BANK0 ] unsigned int 
 16639 ;; Auto vars:     Size  Location     Type
 16640 ;;  ucSlaveAddre    1   31[BANK0 ] unsigned char 
 16641 ;;  usCRC16         2   33[BANK0 ] unsigned int 
 16642 ;;  eStatus         1   32[BANK0 ] enum E15837
 16643 ;; Return value:  Size  Location     Type
 16644 ;;                  1    wreg      enum E15837
 16645 ;; Registers used:
 16646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16647 ;; Tracked objects:
 16648 ;;		On entry : 3F/1
 16649 ;;		On exit  : 3F/0
 16650 ;;		Unchanged: 0/0
 16651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16652 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16653 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16655 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16656 ;;Total ram usage:        8 bytes
 16657 ;; Hardware stack levels used:    1
 16658 ;; Hardware stack levels required when called:   12
 16659 ;; This function calls:
 16660 ;;		_usMBCRC16
 16661 ;;		_vMBPortSerialEnable
 16662 ;; This function is called by:
 16663 ;;		_eMBInit
 16664 ;;		_eMBPoll
 16665 ;; This function uses a non-reentrant model
 16666 ;;
 16667                           
 16668                           	psect	text76
 16669  008A34                     __ptext76:
 16670                           	callstack 0
 16671  008A34                     _eMBRTUSend:
 16672                           	callstack 15
 16673                           
 16674                           ;incstack = 0
 16675                           ;eMBRTUSend@ucSlaveAddress stored from wreg
 16676  008A34  0100               	movlb	0	; force () banked
 16677  008A36  6F7F               	movwf	eMBRTUSend@ucSlaveAddress& (0+255),b
 16678                           
 16679                           ;../modbus/rtu/mbrtu.c: 187: eMBRTUSend( UCHAR ucSlaveAddress, const UCHAR * pucFrame, U
      +                          SHORT usLength );../modbus/rtu/mbrtu.c: 188: {;../modbus/rtu/mbrtu.c: 189:     eMBErrorC
      +                          ode eStatus = MB_ENOERR;
 16680  008A38  0E00               	movlw	0
 16681  008A3A  0100               	movlb	0	; force () banked
 16682  008A3C  6F80               	movwf	eMBRTUSend@eStatus& (0+255),b
 16683                           
 16684                           ; BSR set to: 0
 16685                           ;../modbus/rtu/mbrtu.c: 190:     USHORT usCRC16;;../modbus/rtu/mbrtu.c: 192:     GIE=0;
 16686  008A3E  9ED2               	bcf	16338,7,c	;volatile
 16687                           
 16688                           ; BSR set to: 0
 16689                           ;../modbus/rtu/mbrtu.c: 198:     if( eRcvState == STATE_RX_IDLE )
 16690  008A40  0100               	movlb	0	; force () banked
 16691  008A42  05D9               	decf	_eRcvState& (0+255),w,b
 16692  008A44  A4D8               	btfss	status,2,c
 16693  008A46  D052               	goto	l14628
 16694                           
 16695                           ; BSR set to: 0
 16696                           ;../modbus/rtu/mbrtu.c: 199:     {;../modbus/rtu/mbrtu.c: 201:         pucSndBufferCur =
      +                           ( UCHAR * ) pucFrame - 1;
 16697  008A48  0EFF               	movlw	255
 16698  008A4A  0100               	movlb	0	; force () banked
 16699  008A4C  257B               	addwf	eMBRTUSend@pucFrame& (0+255),w,b
 16700  008A4E  0102               	movlb	2	; force () banked
 16701  008A50  6F40               	movwf	_pucSndBufferCur& (0+255),b
 16702  008A52  0EFF               	movlw	255
 16703  008A54  0100               	movlb	0	; force () banked
 16704  008A56  217C               	addwfc	(eMBRTUSend@pucFrame+1)& (0+255),w,b
 16705  008A58  0102               	movlb	2	; force () banked
 16706  008A5A  6F41               	movwf	(_pucSndBufferCur+1)& (0+255),b
 16707                           
 16708                           ; BSR set to: 2
 16709                           ;../modbus/rtu/mbrtu.c: 202:         usSndBufferCount = 1;
 16710  008A5C  0E00               	movlw	0
 16711  008A5E  0100               	movlb	0	; force () banked
 16712  008A60  6FD6               	movwf	(_usSndBufferCount+1)& (0+255),b	;volatile
 16713  008A62  0E01               	movlw	1
 16714  008A64  6FD5               	movwf	_usSndBufferCount& (0+255),b	;volatile
 16715                           
 16716                           ; BSR set to: 0
 16717                           ;../modbus/rtu/mbrtu.c: 205:         pucSndBufferCur[0] = ucSlaveAddress;
 16718  008A66  0060  F903  FFD9   	movff	_pucSndBufferCur,fsr2l
 16719  008A6C  0060  F907  FFDA   	movff	_pucSndBufferCur+1,fsr2h
 16720  008A72  0060  F1FF  FFDF   	movff	eMBRTUSend@ucSlaveAddress,indf2
 16721                           
 16722                           ; BSR set to: 0
 16723                           ;../modbus/rtu/mbrtu.c: 206:         usSndBufferCount += usLength;
 16724  008A78  0100               	movlb	0	; force () banked
 16725  008A7A  517D               	movf	eMBRTUSend@usLength& (0+255),w,b	;volatile
 16726  008A7C  0100               	movlb	0	; force () banked
 16727  008A7E  27D5               	addwf	_usSndBufferCount& (0+255),f,b	;volatile
 16728  008A80  0100               	movlb	0	; force () banked
 16729  008A82  517E               	movf	(eMBRTUSend@usLength+1)& (0+255),w,b	;volatile
 16730  008A84  0100               	movlb	0	; force () banked
 16731  008A86  23D6               	addwfc	(_usSndBufferCount+1)& (0+255),f,b	;volatile
 16732                           
 16733                           ; BSR set to: 0
 16734                           ;../modbus/rtu/mbrtu.c: 209:         usCRC16 = usMBCRC16( ( UCHAR * ) pucSndBufferCur, u
      +                          sSndBufferCount );
 16735  008A88  C240  F071         	movff	_pucSndBufferCur,usMBCRC16@pucFrame
 16736  008A8C  C241  F072         	movff	_pucSndBufferCur+1,usMBCRC16@pucFrame+1
 16737  008A90  C0D5  F073         	movff	_usSndBufferCount,usMBCRC16@usLen	;volatile
 16738  008A94  C0D6  F074         	movff	_usSndBufferCount+1,usMBCRC16@usLen+1	;volatile
 16739  008A98  EC4A  F049         	call	_usMBCRC16
 16740  008A9C  C071  F081         	movff	?_usMBCRC16,eMBRTUSend@usCRC16
 16741  008AA0  C072  F082         	movff	?_usMBCRC16+1,eMBRTUSend@usCRC16+1
 16742                           
 16743                           ; BSR set to: 0
 16744                           ;../modbus/rtu/mbrtu.c: 210:         ucRTUBuf[usSndBufferCount++] = ( UCHAR )( usCRC16 &
      +                           0xFF );
 16745  008AA4  0E00               	movlw	low _ucRTUBuf
 16746  008AA6  0100               	movlb	0	; force () banked
 16747  008AA8  25D5               	addwf	_usSndBufferCount& (0+255),w,b	;volatile
 16748  008AAA  6ED9               	movwf	fsr2l,c
 16749  008AAC  0E06               	movlw	high _ucRTUBuf
 16750  008AAE  21D6               	addwfc	(_usSndBufferCount+1)& (0+255),w,b	;volatile
 16751  008AB0  6EDA               	movwf	fsr2h,c
 16752  008AB2  0060  F207  FFDF   	movff	eMBRTUSend@usCRC16,indf2
 16753                           
 16754                           ; BSR set to: 0
 16755  008AB8  0100               	movlb	0	; force () banked
 16756  008ABA  4BD5               	infsnz	_usSndBufferCount& (0+255),f,b	;volatile
 16757  008ABC  2BD6               	incf	(_usSndBufferCount+1)& (0+255),f,b	;volatile
 16758                           
 16759                           ; BSR set to: 0
 16760                           ;../modbus/rtu/mbrtu.c: 211:         ucRTUBuf[usSndBufferCount++] = ( UCHAR )( usCRC16 >
      +                          > 8 );
 16761  008ABE  0E00               	movlw	low _ucRTUBuf
 16762  008AC0  0100               	movlb	0	; force () banked
 16763  008AC2  25D5               	addwf	_usSndBufferCount& (0+255),w,b	;volatile
 16764  008AC4  6ED9               	movwf	fsr2l,c
 16765  008AC6  0E06               	movlw	high _ucRTUBuf
 16766  008AC8  21D6               	addwfc	(_usSndBufferCount+1)& (0+255),w,b	;volatile
 16767  008ACA  6EDA               	movwf	fsr2h,c
 16768  008ACC  0060  F20B  FFDF   	movff	eMBRTUSend@usCRC16+1,indf2
 16769                           
 16770                           ; BSR set to: 0
 16771  008AD2  0100               	movlb	0	; force () banked
 16772  008AD4  4BD5               	infsnz	_usSndBufferCount& (0+255),f,b	;volatile
 16773  008AD6  2BD6               	incf	(_usSndBufferCount+1)& (0+255),f,b	;volatile
 16774                           
 16775                           ; BSR set to: 0
 16776                           ;../modbus/rtu/mbrtu.c: 214:         eSndState = STATE_TX_XMIT;
 16777  008AD8  0E01               	movlw	1
 16778  008ADA  0101               	movlb	1	; force () banked
 16779  008ADC  6FE0               	movwf	_eSndState& (0+255),b	;volatile
 16780                           
 16781                           ; BSR set to: 1
 16782                           ;../modbus/rtu/mbrtu.c: 215:         vMBPortSerialEnable( 0, 1 );
 16783  008ADE  0E01               	movlw	1
 16784  008AE0  0100               	movlb	0	; force () banked
 16785  008AE2  6F71               	movwf	vMBPortSerialEnable@xTxEnable& (0+255),b
 16786  008AE4  0E00               	movlw	0
 16787  008AE6  EC33  F05C         	call	_vMBPortSerialEnable
 16788                           
 16789                           ;../modbus/rtu/mbrtu.c: 216:     }
 16790  008AEA  D003               	goto	l14630
 16791  008AEC                     l14628:
 16792                           
 16793                           ; BSR set to: 0
 16794                           ;../modbus/rtu/mbrtu.c: 218:     {;../modbus/rtu/mbrtu.c: 219:         eStatus = MB_EIO;
 16795  008AEC  0E05               	movlw	5
 16796  008AEE  0100               	movlb	0	; force () banked
 16797  008AF0  6F80               	movwf	eMBRTUSend@eStatus& (0+255),b
 16798  008AF2                     l14630:
 16799                           
 16800                           ;../modbus/rtu/mbrtu.c: 221:     GIE=1;
 16801  008AF2  8ED2               	bsf	16338,7,c	;volatile
 16802                           
 16803                           ;../modbus/rtu/mbrtu.c: 222:     return eStatus;
 16804  008AF4  0100               	movlb	0	; force () banked
 16805  008AF6  5180               	movf	eMBRTUSend@eStatus& (0+255),w,b
 16806                           
 16807                           ; BSR set to: 0
 16808  008AF8  0012               	return		;funcret
 16809  008AFA                     __end_of_eMBRTUSend:
 16810                           	callstack 0
 16811                           
 16812 ;; *************** function _vMBPortSerialEnable *****************
 16813 ;; Defined at:
 16814 ;;		line 42 in file "../modbus/port/portserial.c"
 16815 ;; Parameters:    Size  Location     Type
 16816 ;;  xRxEnable       1    wreg     unsigned char 
 16817 ;;  xTxEnable       1   17[BANK0 ] unsigned char 
 16818 ;; Auto vars:     Size  Location     Type
 16819 ;;  xRxEnable       1   18[BANK0 ] unsigned char 
 16820 ;; Return value:  Size  Location     Type
 16821 ;;                  1    wreg      void 
 16822 ;; Registers used:
 16823 ;;		wreg, status,2
 16824 ;; Tracked objects:
 16825 ;;		On entry : 3F/0
 16826 ;;		On exit  : 3E/0
 16827 ;;		Unchanged: 0/0
 16828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16829 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16830 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16832 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16833 ;;Total ram usage:        2 bytes
 16834 ;; Hardware stack levels used:    1
 16835 ;; Hardware stack levels required when called:   11
 16836 ;; This function calls:
 16837 ;;		Nothing
 16838 ;; This function is called by:
 16839 ;;		_eMBRTUStart
 16840 ;;		_eMBRTUStop
 16841 ;;		_eMBRTUSend
 16842 ;;		_xMBRTUTransmitFSM
 16843 ;; This function uses a non-reentrant model
 16844 ;;
 16845                           
 16846                           	psect	text77
 16847  00B866                     __ptext77:
 16848                           	callstack 0
 16849  00B866                     _vMBPortSerialEnable:
 16850                           	callstack 16
 16851                           
 16852                           ; BSR set to: 0
 16853                           ;incstack = 0
 16854                           ;vMBPortSerialEnable@xRxEnable stored from wreg
 16855  00B866  0100               	movlb	0	; force () banked
 16856  00B868  6F72               	movwf	vMBPortSerialEnable@xRxEnable& (0+255),b
 16857                           
 16858                           ;../modbus/port/portserial.c: 42: vMBPortSerialEnable( BOOL xRxEnable, BOOL xTxEnable );
      +                          ../modbus/port/portserial.c: 43: {;../modbus/port/portserial.c: 47:     if(xRxEnable){
 16859  00B86A  0100               	movlb	0	; force () banked
 16860  00B86C  5172               	movf	vMBPortSerialEnable@xRxEnable& (0+255),w,b
 16861  00B86E  B4D8               	btfsc	status,2,c
 16862  00B870  D003               	goto	l12410
 16863                           
 16864                           ; BSR set to: 0
 16865                           ;../modbus/port/portserial.c: 50:         uartmode = 0;
 16866  00B872  0E00               	movlw	0
 16867  00B874  0101               	movlb	1	; force () banked
 16868  00B876  6FEF               	movwf	_uartmode& (0+255),b
 16869  00B878                     l12410:
 16870                           
 16871                           ;../modbus/port/portserial.c: 54:     if(xTxEnable){
 16872  00B878  0100               	movlb	0	; force () banked
 16873  00B87A  5171               	movf	vMBPortSerialEnable@xTxEnable& (0+255),w,b
 16874  00B87C  B4D8               	btfsc	status,2,c
 16875  00B87E  0012               	return	
 16876                           
 16877                           ; BSR set to: 0
 16878                           ;../modbus/port/portserial.c: 56:         uartmode = 1;
 16879  00B880  0E01               	movlw	1
 16880  00B882  0101               	movlb	1	; force () banked
 16881  00B884  6FEF               	movwf	_uartmode& (0+255),b
 16882                           
 16883                           ;../modbus/port/portserial.c: 57:     }
 16884  00B886  0012               	return		;funcret
 16885  00B888                     __end_of_vMBPortSerialEnable:
 16886                           	callstack 0
 16887                           
 16888 ;; *************** function _eMBRTUReceive *****************
 16889 ;; Defined at:
 16890 ;;		line 151 in file "../modbus/rtu/mbrtu.c"
 16891 ;; Parameters:    Size  Location     Type
 16892 ;;  pucRcvAddres    2   27[BANK0 ] PTR unsigned char 
 16893 ;;		 -> eMBPoll@ucRcvAddress(1), 
 16894 ;;  pucFrame        2   29[BANK0 ] PTR PTR unsigned char 
 16895 ;;		 -> eMBPoll@ucMBFrame(2), 
 16896 ;;  pusLength       2   31[BANK0 ] PTR unsigned int 
 16897 ;;		 -> eMBPoll@usLength(2), 
 16898 ;; Auto vars:     Size  Location     Type
 16899 ;;  eStatus         1   38[BANK0 ] enum E15837
 16900 ;;  xFrameReceiv    1   37[BANK0 ] unsigned char 
 16901 ;; Return value:  Size  Location     Type
 16902 ;;                  1    wreg      enum E15837
 16903 ;; Registers used:
 16904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16905 ;; Tracked objects:
 16906 ;;		On entry : 3F/2
 16907 ;;		On exit  : 3F/0
 16908 ;;		Unchanged: 0/0
 16909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16910 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16911 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16912 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16913 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16914 ;;Total ram usage:       12 bytes
 16915 ;; Hardware stack levels used:    1
 16916 ;; Hardware stack levels required when called:   15
 16917 ;; This function calls:
 16918 ;;		__fassert
 16919 ;;		_usMBCRC16
 16920 ;; This function is called by:
 16921 ;;		_eMBInit
 16922 ;;		_eMBPoll
 16923 ;; This function uses a non-reentrant model
 16924 ;;
 16925                           
 16926                           	psect	text78
 16927  00847C                     __ptext78:
 16928                           	callstack 0
 16929  00847C                     _eMBRTUReceive:
 16930                           	callstack 12
 16931                           
 16932                           ;../modbus/rtu/mbrtu.c: 151: eMBRTUReceive( UCHAR * pucRcvAddress, UCHAR ** pucFrame, US
      +                          HORT * pusLength );../modbus/rtu/mbrtu.c: 152: {;../modbus/rtu/mbrtu.c: 153:     BOOL xF
      +                          rameReceived = 0;
 16933                           
 16934                           ;incstack = 0
 16935  00847C  0E00               	movlw	0
 16936  00847E  0100               	movlb	0	; force () banked
 16937  008480  6F85               	movwf	eMBRTUReceive@xFrameReceived& (0+255),b
 16938                           
 16939                           ;../modbus/rtu/mbrtu.c: 154:     eMBErrorCode eStatus = MB_ENOERR;
 16940  008482  0E00               	movlw	0
 16941  008484  0100               	movlb	0	; force () banked
 16942  008486  6F86               	movwf	eMBRTUReceive@eStatus& (0+255),b
 16943                           
 16944                           ; BSR set to: 0
 16945                           ;../modbus/rtu/mbrtu.c: 156:     GIE=0;
 16946  008488  9ED2               	bcf	16338,7,c	;volatile
 16947                           
 16948                           ; BSR set to: 0
 16949                           ;../modbus/rtu/mbrtu.c: 157:     if(!(usRcvBufferPos < 256)) {_fassert(157, "../modbus/r
      +                          tu/mbrtu.c", "usRcvBufferPos < 256");};
 16950  00848A  0E00               	movlw	0
 16951  00848C  0100               	movlb	0	; force () banked
 16952  00848E  5DD3               	subwf	_usRcvBufferPos& (0+255),w,b	;volatile
 16953  008490  0E01               	movlw	1
 16954  008492  59D4               	subwfb	(_usRcvBufferPos+1)& (0+255),w,b	;volatile
 16955  008494  A0D8               	btfss	status,0,c
 16956  008496  D00E               	goto	l14582
 16957                           
 16958                           ; BSR set to: 0
 16959  008498  0EC9               	movlw	low STR_10
 16960  00849A  6EE6               	movwf	postinc1,c
 16961  00849C  0EFF               	movlw	high STR_10
 16962  00849E  6EE6               	movwf	postinc1,c
 16963  0084A0  0EB3               	movlw	low STR_9
 16964  0084A2  6EE6               	movwf	postinc1,c
 16965  0084A4  0EFF               	movlw	high STR_9
 16966  0084A6  6EE6               	movwf	postinc1,c
 16967  0084A8  0E9D               	movlw	157
 16968  0084AA  6EE6               	movwf	postinc1,c
 16969  0084AC  0E00               	movlw	0
 16970  0084AE  6EE6               	movwf	postinc1,c
 16971  0084B0  EC32  F051         	call	__fassert	;wreg free
 16972  0084B4                     l14582:
 16973                           
 16974                           ;../modbus/rtu/mbrtu.c: 160:     if( ( usRcvBufferPos >= 4 )
 16975  0084B4  0100               	movlb	0	; force () banked
 16976  0084B6  51D4               	movf	(_usRcvBufferPos+1)& (0+255),w,b	;volatile
 16977  0084B8  E104               	bnz	u11400
 16978  0084BA  0E04               	movlw	4
 16979  0084BC  5DD3               	subwf	_usRcvBufferPos& (0+255),w,b	;volatile
 16980  0084BE  A0D8               	btfss	status,0,c
 16981  0084C0  D040               	goto	l14594
 16982  0084C2                     u11400:
 16983                           
 16984                           ; BSR set to: 0
 16985  0084C2  0E00               	movlw	low _ucRTUBuf
 16986  0084C4  0100               	movlb	0	; force () banked
 16987  0084C6  6F71               	movwf	usMBCRC16@pucFrame& (0+255),b
 16988  0084C8  0E06               	movlw	high _ucRTUBuf
 16989  0084CA  6F72               	movwf	(usMBCRC16@pucFrame+1)& (0+255),b
 16990  0084CC  C0D3  F073         	movff	_usRcvBufferPos,usMBCRC16@usLen	;volatile
 16991  0084D0  C0D4  F074         	movff	_usRcvBufferPos+1,usMBCRC16@usLen+1	;volatile
 16992  0084D4  EC4A  F049         	call	_usMBCRC16	;wreg free
 16993  0084D8  0100               	movlb	0	; force () banked
 16994  0084DA  5171               	movf	?_usMBCRC16& (0+255),w,b
 16995  0084DC  1172               	iorwf	(?_usMBCRC16+1)& (0+255),w,b
 16996  0084DE  A4D8               	btfss	status,2,c
 16997  0084E0  D030               	goto	l14594
 16998                           
 16999                           ; BSR set to: 0
 17000                           ;../modbus/rtu/mbrtu.c: 162:     {;../modbus/rtu/mbrtu.c: 166:         *pucRcvAddress = 
      +                          ucRTUBuf[0];
 17001  0084E2  0060  F1EF  FFD9   	movff	eMBRTUReceive@pucRcvAddress,fsr2l
 17002  0084E8  0060  F1F3  FFDA   	movff	eMBRTUReceive@pucRcvAddress+1,fsr2h
 17003  0084EE  0061  F803  FFDF   	movff	_ucRTUBuf,indf2	;volatile
 17004                           
 17005                           ; BSR set to: 0
 17006                           ;../modbus/rtu/mbrtu.c: 171:         *pusLength = ( USHORT )( usRcvBufferPos - 1 - 2 );
 17007  0084F4  0EFD               	movlw	253
 17008  0084F6  0100               	movlb	0	; force () banked
 17009  0084F8  6F81               	movwf	??_eMBRTUReceive& (0+255),b
 17010  0084FA  0EFF               	movlw	255
 17011  0084FC  6F82               	movwf	(??_eMBRTUReceive+1)& (0+255),b
 17012  0084FE  C0D3  F083         	movff	_usRcvBufferPos,??_eMBRTUReceive+2	;volatile
 17013  008502  C0D4  F084         	movff	_usRcvBufferPos+1,??_eMBRTUReceive+3	;volatile
 17014  008506  5181               	movf	??_eMBRTUReceive& (0+255),w,b
 17015  008508  2783               	addwf	(??_eMBRTUReceive+2)& (0+255),f,b
 17016  00850A  5182               	movf	(??_eMBRTUReceive+1)& (0+255),w,b
 17017  00850C  2384               	addwfc	(??_eMBRTUReceive+3)& (0+255),f,b
 17018  00850E  0060  F1FF  FFD9   	movff	eMBRTUReceive@pusLength,fsr2l
 17019  008514  0060  F203  FFDA   	movff	eMBRTUReceive@pusLength+1,fsr2h
 17020  00851A  0060  F20F  FFDE   	movff	??_eMBRTUReceive+2,postinc2
 17021  008520  0060  F213  FFDD   	movff	??_eMBRTUReceive+3,postdec2
 17022                           
 17023                           ; BSR set to: 0
 17024                           ;../modbus/rtu/mbrtu.c: 174:         *pucFrame = ( UCHAR * ) & ucRTUBuf[1];
 17025  008526  0060  F1F7  FFD9   	movff	eMBRTUReceive@pucFrame,fsr2l
 17026  00852C  0060  F1FB  FFDA   	movff	eMBRTUReceive@pucFrame+1,fsr2h
 17027  008532  0E01               	movlw	low (_ucRTUBuf+1)
 17028  008534  6EDE               	movwf	postinc2,c
 17029  008536  0E06               	movlw	high (_ucRTUBuf+1)
 17030  008538  6EDD               	movwf	postdec2,c
 17031                           
 17032                           ; BSR set to: 0
 17033                           ;../modbus/rtu/mbrtu.c: 175:         xFrameReceived = 1;
 17034  00853A  0E01               	movlw	1
 17035  00853C  0100               	movlb	0	; force () banked
 17036  00853E  6F85               	movwf	eMBRTUReceive@xFrameReceived& (0+255),b
 17037                           
 17038                           ;../modbus/rtu/mbrtu.c: 176:     }
 17039  008540  D003               	goto	l14596
 17040  008542                     l14594:
 17041                           
 17042                           ; BSR set to: 0
 17043                           ;../modbus/rtu/mbrtu.c: 178:     {;../modbus/rtu/mbrtu.c: 179:         eStatus = MB_EIO;
 17044  008542  0E05               	movlw	5
 17045  008544  0100               	movlb	0	; force () banked
 17046  008546  6F86               	movwf	eMBRTUReceive@eStatus& (0+255),b
 17047  008548                     l14596:
 17048                           
 17049                           ; BSR set to: 0
 17050                           ;../modbus/rtu/mbrtu.c: 182:     GIE=1;
 17051  008548  8ED2               	bsf	16338,7,c	;volatile
 17052                           
 17053                           ;../modbus/rtu/mbrtu.c: 183:     return eStatus;
 17054  00854A  0100               	movlb	0	; force () banked
 17055  00854C  5186               	movf	eMBRTUReceive@eStatus& (0+255),w,b
 17056                           
 17057                           ; BSR set to: 0
 17058  00854E  0012               	return		;funcret
 17059  008550                     __end_of_eMBRTUReceive:
 17060                           	callstack 0
 17061                           
 17062 ;; *************** function _usMBCRC16 *****************
 17063 ;; Defined at:
 17064 ;;		line 85 in file "../modbus/rtu/mbcrc.c"
 17065 ;; Parameters:    Size  Location     Type
 17066 ;;  pucFrame        2   17[BANK0 ] PTR unsigned char 
 17067 ;;		 -> ucRTUBuf(256), NULL(0), 
 17068 ;;  usLen           2   19[BANK0 ] unsigned int 
 17069 ;; Auto vars:     Size  Location     Type
 17070 ;;  iIndex          2   23[BANK0 ] int 
 17071 ;;  ucCRCLo         1   26[BANK0 ] unsigned char 
 17072 ;;  ucCRCHi         1   25[BANK0 ] unsigned char 
 17073 ;; Return value:  Size  Location     Type
 17074 ;;                  2   17[BANK0 ] unsigned int 
 17075 ;; Registers used:
 17076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17077 ;; Tracked objects:
 17078 ;;		On entry : 3F/0
 17079 ;;		On exit  : 3F/0
 17080 ;;		Unchanged: 0/0
 17081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17082 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17083 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17084 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17085 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17086 ;;Total ram usage:       10 bytes
 17087 ;; Hardware stack levels used:    1
 17088 ;; Hardware stack levels required when called:   11
 17089 ;; This function calls:
 17090 ;;		Nothing
 17091 ;; This function is called by:
 17092 ;;		_eMBRTUReceive
 17093 ;;		_eMBRTUSend
 17094 ;; This function uses a non-reentrant model
 17095 ;;
 17096                           
 17097                           	psect	text79
 17098  009294                     __ptext79:
 17099                           	callstack 0
 17100  009294                     _usMBCRC16:
 17101                           	callstack 15
 17102                           
 17103                           ;../modbus/rtu/mbcrc.c: 85: usMBCRC16( UCHAR * pucFrame, USHORT usLen );../modbus/rtu/mb
      +                          crc.c: 86: {;../modbus/rtu/mbcrc.c: 87:     UCHAR ucCRCHi = 0xFF;
 17104                           
 17105                           ; BSR set to: 0
 17106                           ;incstack = 0
 17107  009294  0100               	movlb	0	; force () banked
 17108  009296  6979               	setf	usMBCRC16@ucCRCHi& (0+255),b
 17109                           
 17110                           ;../modbus/rtu/mbcrc.c: 88:     UCHAR ucCRCLo = 0xFF;
 17111  009298  0100               	movlb	0	; force () banked
 17112  00929A  697A               	setf	usMBCRC16@ucCRCLo& (0+255),b
 17113                           
 17114                           ;../modbus/rtu/mbcrc.c: 89:     int iIndex;;../modbus/rtu/mbcrc.c: 91:     while( usLen-
      +                          - )
 17115  00929C  D030               	goto	l13462
 17116  00929E                     l13454:
 17117                           
 17118                           ; BSR set to: 0
 17119                           ;../modbus/rtu/mbcrc.c: 92:     {;../modbus/rtu/mbcrc.c: 93:         iIndex = ucCRCLo ^ 
      +                          *( pucFrame++ );
 17120  00929E  0060  F1C7  FFD9   	movff	usMBCRC16@pucFrame,fsr2l
 17121  0092A4  0060  F1CB  FFDA   	movff	usMBCRC16@pucFrame+1,fsr2h
 17122  0092AA  50DF               	movf	indf2,w,c
 17123  0092AC  0100               	movlb	0	; force () banked
 17124  0092AE  197A               	xorwf	usMBCRC16@ucCRCLo& (0+255),w,b
 17125  0092B0  0100               	movlb	0	; force () banked
 17126  0092B2  6F75               	movwf	??_usMBCRC16& (0+255),b
 17127  0092B4  5175               	movf	??_usMBCRC16& (0+255),w,b
 17128  0092B6  0100               	movlb	0	; force () banked
 17129  0092B8  6F77               	movwf	usMBCRC16@iIndex& (0+255),b
 17130  0092BA  6B78               	clrf	(usMBCRC16@iIndex+1)& (0+255),b
 17131                           
 17132                           ; BSR set to: 0
 17133  0092BC  0100               	movlb	0	; force () banked
 17134  0092BE  4B71               	infsnz	usMBCRC16@pucFrame& (0+255),f,b
 17135  0092C0  2B72               	incf	(usMBCRC16@pucFrame+1)& (0+255),f,b
 17136                           
 17137                           ; BSR set to: 0
 17138                           ;../modbus/rtu/mbcrc.c: 94:         ucCRCLo = ( UCHAR )( ucCRCHi ^ aucCRCHi[iIndex] );
 17139  0092C2  0E55               	movlw	low _aucCRCHi
 17140  0092C4  0100               	movlb	0	; force () banked
 17141  0092C6  2577               	addwf	usMBCRC16@iIndex& (0+255),w,b
 17142  0092C8  6EF6               	movwf	tblptrl,c
 17143  0092CA  0EFB               	movlw	high _aucCRCHi
 17144  0092CC  2178               	addwfc	(usMBCRC16@iIndex+1)& (0+255),w,b
 17145  0092CE  6EF7               	movwf	tblptrh,c
 17146  0092D0                     	if	1	;There are 3 active tblptr bytes
 17147  0092D0  6AF8               	clrf	tblptru,c
 17148  0092D2  0E00               	movlw	low (__mediumconst shr (0+16))
 17149  0092D4  22F8               	addwfc	tblptru,f,c
 17150  0092D6                     	endif
 17151  0092D6  0008               	tblrd		*
 17152  0092D8  50F5               	movf	tablat,w,c
 17153  0092DA  0100               	movlb	0	; force () banked
 17154  0092DC  1979               	xorwf	usMBCRC16@ucCRCHi& (0+255),w,b
 17155  0092DE  0100               	movlb	0	; force () banked
 17156  0092E0  6F7A               	movwf	usMBCRC16@ucCRCLo& (0+255),b
 17157                           
 17158                           ; BSR set to: 0
 17159                           ;../modbus/rtu/mbcrc.c: 95:         ucCRCHi = aucCRCLo[iIndex];
 17160  0092E2  0E55               	movlw	low _aucCRCLo
 17161  0092E4  0100               	movlb	0	; force () banked
 17162  0092E6  2577               	addwf	usMBCRC16@iIndex& (0+255),w,b
 17163  0092E8  6EF6               	movwf	tblptrl,c
 17164  0092EA  0EFA               	movlw	high _aucCRCLo
 17165  0092EC  2178               	addwfc	(usMBCRC16@iIndex+1)& (0+255),w,b
 17166  0092EE  6EF7               	movwf	tblptrh,c
 17167  0092F0                     	if	1	;There are 3 active tblptr bytes
 17168  0092F0  6AF8               	clrf	tblptru,c
 17169  0092F2  0E00               	movlw	low (__mediumconst shr (0+16))
 17170  0092F4  22F8               	addwfc	tblptru,f,c
 17171  0092F6                     	endif
 17172  0092F6  0008               	tblrd		*
 17173  0092F8  006F FFD4  F079    	movff	tablat,usMBCRC16@ucCRCHi
 17174  0092FE                     l13462:
 17175                           
 17176                           ; BSR set to: 0
 17177                           ;../modbus/rtu/mbcrc.c: 91:     while( usLen-- )
 17178  0092FE  0100               	movlb	0	; force () banked
 17179  009300  0773               	decf	usMBCRC16@usLen& (0+255),f,b
 17180  009302  A0D8               	btfss	status,0,c
 17181  009304  0774               	decf	(usMBCRC16@usLen+1)& (0+255),f,b
 17182  009306  2973               	incf	usMBCRC16@usLen& (0+255),w,b
 17183  009308  E1CA               	bnz	l13454
 17184  00930A  2974               	incf	(usMBCRC16@usLen+1)& (0+255),w,b
 17185  00930C  A4D8               	btfss	status,2,c
 17186  00930E  D7C7               	goto	l13454
 17187                           
 17188                           ; BSR set to: 0
 17189                           ;../modbus/rtu/mbcrc.c: 97:     return ( USHORT )( ucCRCHi << 8 | ucCRCLo );
 17190  009310  0100               	movlb	0	; force () banked
 17191  009312  517A               	movf	usMBCRC16@ucCRCLo& (0+255),w,b
 17192  009314  C079  F075         	movff	usMBCRC16@ucCRCHi,??_usMBCRC16
 17193  009318  0100               	movlb	0	; force () banked
 17194  00931A  6B76               	clrf	(??_usMBCRC16+1)& (0+255),b
 17195  00931C  C075  F076         	movff	??_usMBCRC16,??_usMBCRC16+1
 17196  009320  6B75               	clrf	??_usMBCRC16& (0+255),b
 17197  009322  1175               	iorwf	??_usMBCRC16& (0+255),w,b
 17198  009324  0100               	movlb	0	; force () banked
 17199  009326  6F71               	movwf	?_usMBCRC16& (0+255),b
 17200  009328  0100               	movlb	0	; force () banked
 17201  00932A  5176               	movf	(??_usMBCRC16+1)& (0+255),w,b
 17202  00932C  0100               	movlb	0	; force () banked
 17203  00932E  6F72               	movwf	(?_usMBCRC16+1)& (0+255),b
 17204                           
 17205                           ; BSR set to: 0
 17206  009330  0012               	return		;funcret
 17207  009332                     __end_of_usMBCRC16:
 17208                           	callstack 0
 17209                           
 17210 ;; *************** function __fassert *****************
 17211 ;; Defined at:
 17212 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\assert.c"
 17213 ;; Parameters:    Size  Location     Type
 17214 ;;  line            2  [STACK] int 
 17215 ;;  file            2  [STACK] PTR const unsigned char 
 17216 ;;		 -> STR_15(22), STR_13(22), STR_11(22), STR_9(22), 
 17217 ;;		 -> STR_7(30), STR_5(30), 
 17218 ;;  exp             2  [STACK] PTR const unsigned char 
 17219 ;;		 -> STR_16(99), STR_14(27), STR_12(27), STR_10(21), 
 17220 ;;		 -> STR_8(36), STR_6(13), 
 17221 ;; Auto vars:     Size  Location     Type
 17222 ;;		None
 17223 ;; Return value:  Size  Location     Type
 17224 ;;                  1  [STACK] void 
 17225 ;; Registers used:
 17226 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 17227 ;; Tracked objects:
 17228 ;;		On entry : 3E/0
 17229 ;;		On exit  : 0/0
 17230 ;;		Unchanged: 0/0
 17231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17236 ;;Total ram usage:        0 bytes
 17237 ;; Hardware stack levels used:    1
 17238 ;; Hardware stack levels required when called:   14
 17239 ;; This function calls:
 17240 ;;		_printf
 17241 ;; This function is called by:
 17242 ;;		_eMBRTUReceive
 17243 ;;		_xMBRTUReceiveFSM
 17244 ;;		_xMBRTUTransmitFSM
 17245 ;;		_xMBRTUTimerT35Expired
 17246 ;; This function uses a reentrant model
 17247 ;;
 17248                           
 17249                           	psect	text80
 17250  00A264                     __ptext80:
 17251                           	callstack 0
 17252  00A264                     __fassert:
 17253                           	callstack 0
 17254                           
 17255                           ;stkvar	__fassert@exp @ sp[(0)+-6]
 17256                           
 17257                           ; BSR set to: 0
 17258                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17259                           ;incstack = 0
 17260 ;; hardware stack exceeded
 17261  00A264  0EFA               	movlw	-6
 17262  00A266  006F FF8C  F00B    	movff	plusw1,btemp+10
 17263  00A26C  0EFB               	movlw	-5
 17264  00A26E  006F FF8C  F00C    	movff	plusw1,btemp+11
 17265  00A274  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17266  00A27A  0060  F033  FFE6   	movff	btemp+11,postinc1
 17267  00A280  0E00               	movlw	low (__mediumconst shr (0+16))
 17268  00A282  6EE6               	movwf	postinc1,c
 17269                           
 17270                           ;stkvar	__fassert@line @ sp[(-3)+-2]
 17271  00A284  0EFB               	movlw	-5
 17272  00A286  006F FF8F FFE6     	movff	plusw1,postinc1
 17273  00A28C  006F FF8F FFE6     	movff	plusw1,postinc1
 17274                           
 17275                           ;stkvar	__fassert@file @ sp[(-5)+-4]
 17276  00A292  0EF7               	movlw	-9
 17277  00A294  006F FF8C  F00B    	movff	plusw1,btemp+10
 17278  00A29A  0EF8               	movlw	-8
 17279  00A29C  006F FF8C  F00C    	movff	plusw1,btemp+11
 17280  00A2A2  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17281  00A2A8  0060  F033  FFE6   	movff	btemp+11,postinc1
 17282  00A2AE  0E00               	movlw	low (__mediumconst shr (0+16))
 17283  00A2B0  6EE6               	movwf	postinc1,c
 17284  00A2B2  0E17               	movlw	low STR_17
 17285  00A2B4  6EE6               	movwf	postinc1,c
 17286  00A2B6  0EFF               	movlw	high STR_17
 17287  00A2B8  6EE6               	movwf	postinc1,c
 17288  00A2BA  0E0A               	movlw	10
 17289  00A2BC  6EE6               	movwf	postinc1,c
 17290  00A2BE  EC41  F010         	call	_printf	;wreg free
 17291  00A2C2  00FF               	reset		;# 
 17292                           
 17293                           ; __fassert: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 17294  00A2C4  0EFA               	movlw	250
 17295  00A2C6  26E1               	addwf	fsr1l,f,c
 17296  00A2C8  0EFF               	movlw	255
 17297  00A2CA  22E2               	addwfc	fsr1h,f,c
 17298  00A2CC  0012               	return		;funcret
 17299  00A2CE                     __end_of__fassert:
 17300                           	callstack 0
 17301                           
 17302 ;; *************** function _printf *****************
 17303 ;; Defined at:
 17304 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
 17305 ;; Parameters:    Size  Location     Type
 17306 ;;  f               2  [STACK] PTR const unsigned char 
 17307 ;;		 -> STR_17(36), 
 17308 ;; Auto vars:     Size  Location     Type
 17309 ;;  tmpval          4    0        struct .
 17310 ;;  cp              3  [STACK] PTR const unsigned char 
 17311 ;;		 -> STR_18(7), ?_printf(2), STR_16(99), STR_15(22), 
 17312 ;;		 -> STR_14(27), STR_13(22), STR_12(27), STR_11(22), 
 17313 ;;		 -> STR_10(21), STR_9(22), STR_8(36), STR_7(30), 
 17314 ;;		 -> STR_6(13), STR_5(30), 
 17315 ;;  val             2  [STACK] unsigned int 
 17316 ;;  ap              2  [STACK] PTR void [1]
 17317 ;;		 -> ?_printf(2), 
 17318 ;;  len             2    0        unsigned int 
 17319 ;;  c               1  [STACK] unsigned char 
 17320 ;;  prec            1  [STACK] char 
 17321 ;;  flag            1  [STACK] unsigned char 
 17322 ;; Return value:  Size  Location     Type
 17323 ;;                  2  [STACK] int 
 17324 ;; Registers used:
 17325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 17326 ;; Tracked objects:
 17327 ;;		On entry : 0/0
 17328 ;;		On exit  : 0/0
 17329 ;;		Unchanged: 0/0
 17330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17335 ;;Total ram usage:        0 bytes
 17336 ;; Hardware stack levels used:    1
 17337 ;; Hardware stack levels required when called:   13
 17338 ;; This function calls:
 17339 ;;		___lwdiv
 17340 ;;		___lwmod
 17341 ;;		_putch
 17342 ;; This function is called by:
 17343 ;;		__fassert
 17344 ;; This function uses a reentrant model
 17345 ;;
 17346                           
 17347                           	psect	text81
 17348  002082                     __ptext81:
 17349                           	callstack 0
 17350  002082                     _printf:
 17351                           	callstack 0
 17352                           
 17353                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 2 v
      +                          argsize = 0, retsize = 0 argfudge = 0
 17354  002082  0E0A               	movlw	10
 17355  002084  26E1               	addwf	fsr1l,f,c
 17356  002086  0E00               	movlw	0
 17357  002088  22E2               	addwfc	fsr1h,f,c
 17358                           
 17359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
 17360                           ;stkvar	?_printf @ sp[(-10)+-3]
 17361                           
 17362                           ;incstack = 0
 17363 ;; hardware stack exceeded
 17364  00208A  0EF3               	movlw	243
 17365  00208C  24E1               	addwf	fsr1l,w,c
 17366  00208E  6E0B               	movwf	(btemp+10)^0,c
 17367  002090  0EFF               	movlw	255
 17368  002092  20E2               	addwfc	fsr1h,w,c
 17369  002094  6E0C               	movwf	(btemp+11)^0,c
 17370                           
 17371                           ;stkvar	printf@ap @ sp[(-10)+5]
 17372  002096  0EFC               	movlw	-4
 17373  002098  0060  F033  FFE3   	movff	btemp+11,plusw1
 17374  00209E  0EFB               	movlw	-5
 17375  0020A0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17376                           
 17377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 17378  0020A6  D196               	goto	u10920
 17379  0020A8                     l13976:
 17380                           
 17381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
 17382                           ;stkvar	printf@c @ sp[(-10)+7]
 17383  0020A8  0EFD               	movlw	-3
 17384  0020AA  006F FF8C  F001    	movff	plusw1,btemp
 17385  0020B0  0E25               	movlw	37
 17386  0020B2  1801               	xorwf	btemp^0,w,c
 17387  0020B4  B4D8               	btfsc	status,2,c
 17388  0020B6  D006               	goto	l13980
 17389                           
 17390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
 17391                           ;stkvar	printf@c @ sp[(-10)+7]
 17392  0020B8  0EFD               	movlw	-3
 17393  0020BA  50E3               	movf	plusw1,w,c
 17394  0020BC  6EE6               	movwf	postinc1,c
 17395  0020BE  EC3C  F05E         	call	_putch	;wreg free
 17396                           
 17397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
 17398  0020C2  D188               	goto	u10920
 17399  0020C4                     l13980:
 17400                           
 17401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
 17402                           ;stkvar	printf@flag @ sp[(-10)+9]
 17403  0020C4  0EFF               	movlw	-1
 17404  0020C6  6AE3               	clrf	plusw1,c
 17405                           
 17406                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
 17407  0020C8  D0A2               	goto	l13994
 17408  0020CA                     l13982:
 17409                           
 17410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 760:     cp = (*(
      +                          const char * *)__va_arg((*(const char * **)ap), (const char *)0));
 17411                           ;stkvar	printf@ap @ sp[(-10)+5]
 17412  0020CA  0EFB               	movlw	-5
 17413  0020CC  006F FF8C  F001    	movff	plusw1,btemp
 17414  0020D2  0E03               	movlw	3
 17415  0020D4  5E01               	subwf	btemp^0,f,c
 17416  0020D6  0EFB               	movlw	-5
 17417  0020D8  0060  F007  FFE3   	movff	btemp,plusw1
 17418  0020DE  0EFC               	movlw	-4
 17419  0020E0  006F FF8C  F001    	movff	plusw1,btemp
 17420  0020E6  0E00               	movlw	0
 17421  0020E8  5A01               	subwfb	btemp^0,f,c
 17422  0020EA  0EFC               	movlw	-4
 17423  0020EC  0060  F007  FFE3   	movff	btemp,plusw1
 17424  0020F2  0EFB               	movlw	-5
 17425  0020F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 17426  0020FA  0EFC               	movlw	-4
 17427  0020FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 17428  002102  006F FF78  F00A    	movff	postinc2,btemp+9
 17429  002108  006F FF78  F00B    	movff	postinc2,btemp+10
 17430  00210E  006F FF78  F00C    	movff	postinc2,btemp+11
 17431                           
 17432                           ;stkvar	printf@cp @ sp[(-10)+0]
 17433  002114  0EF8               	movlw	-8
 17434  002116  0060  F033  FFE3   	movff	btemp+11,plusw1
 17435  00211C  0EF7               	movlw	-9
 17436  00211E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17437  002124  0EF6               	movlw	-10
 17438  002126  0060  F02B  FFE3   	movff	btemp+9,plusw1
 17439                           
 17440                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 766:    if(!cp)
 17441                           ;stkvar	printf@cp @ sp[(-10)+0]
 17442  00212C  0EF6               	movlw	-10
 17443  00212E  50E3               	movf	plusw1,w,c
 17444  002130  E149               	bnz	l13990
 17445  002132  0EF7               	movlw	-9
 17446  002134  50E3               	movf	plusw1,w,c
 17447  002136  E146               	bnz	l13990
 17448  002138  0EF8               	movlw	-8
 17449  00213A  50E3               	movf	plusw1,w,c
 17450  00213C  A4D8               	btfss	status,2,c
 17451  00213E  D042               	goto	l13990
 17452                           
 17453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 767:     cp = "(n
      +                          ull)";
 17454                           ;stkvar	printf@cp @ sp[(-10)+0]
 17455  002140  0E00               	movlw	low (__mediumconst shr (0+16))
 17456  002142  6E01               	movwf	btemp^0,c
 17457  002144  0EF8               	movlw	-8
 17458  002146  0060  F007  FFE3   	movff	btemp,plusw1
 17459  00214C  0EFF               	movlw	high STR_18
 17460  00214E  6E01               	movwf	btemp^0,c
 17461  002150  0EF7               	movlw	-9
 17462  002152  0060  F007  FFE3   	movff	btemp,plusw1
 17463  002158  0EEB               	movlw	low STR_18
 17464  00215A  6E01               	movwf	btemp^0,c
 17465  00215C  0EF6               	movlw	-10
 17466  00215E  0060  F007  FFE3   	movff	btemp,plusw1
 17467  002164  D02F               	goto	l13990
 17468  002166                     l13988:
 17469                           
 17470                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 804:     (putch(*
      +                          cp++) );
 17471                           ;stkvar	printf@cp @ sp[(-10)+0]
 17472  002166  50E1               	movf	fsr1l,w,c
 17473  002168  0FF6               	addlw	-10
 17474  00216A  6ED9               	movwf	fsr2l,c
 17475  00216C  50E2               	movf	fsr1h,w,c
 17476  00216E  6EDA               	movwf	fsr2h,c
 17477  002170  0EFF               	movlw	255
 17478  002172  22DA               	addwfc	fsr2h,f,c
 17479  002174  006F FF7C  F00A    	movff	indf2,btemp+9
 17480  00217A  0E01               	movlw	1
 17481  00217C  26DE               	addwf	postinc2,f,c
 17482  00217E  006F FF7C  F00B    	movff	indf2,btemp+10
 17483  002184  0E00               	movlw	0
 17484  002186  22DE               	addwfc	postinc2,f,c
 17485  002188  006F FF7C  F00C    	movff	indf2,btemp+11
 17486  00218E  0E00               	movlw	0
 17487  002190  22DD               	addwfc	postdec2,f,c
 17488  002192  52DD               	movf	postdec2,f,c
 17489  002194  0060  F02B  FFF6   	movff	btemp+9,tblptrl
 17490  00219A  0060  F02F  FFF7   	movff	btemp+10,tblptrh
 17491  0021A0  0060  F033  FFF8   	movff	btemp+11,tblptru
 17492  0021A6  BAF8               	btfsc	tblptru,5,c
 17493  0021A8  D003               	bra	u10847
 17494  0021AA  0008               	tblrd		*
 17495  0021AC  50F5               	movf	tablat,w,c
 17496  0021AE  D007               	bra	u10840
 17497  0021B0                     u10847:
 17498  0021B0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17499  0021B6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17500  0021BC  50EF               	movf	indf0,w,c
 17501  0021BE                     u10840:
 17502  0021BE  6EE6               	movwf	postinc1,c
 17503  0021C0  EC3C  F05E         	call	_putch	;wreg free
 17504  0021C4                     l13990:
 17505                           
 17506                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 803:    while(*cp
      +                          )
 17507                           ;stkvar	printf@cp @ sp[(-10)+0]
 17508  0021C4  0EF6               	movlw	-10
 17509  0021C6  006F FF8C  F00A    	movff	plusw1,btemp+9
 17510  0021CC  0EF7               	movlw	-9
 17511  0021CE  006F FF8C  F00B    	movff	plusw1,btemp+10
 17512  0021D4  0EF8               	movlw	-8
 17513  0021D6  006F FF8C  F00C    	movff	plusw1,btemp+11
 17514  0021DC  0060  F02B  FFF6   	movff	btemp+9,tblptrl
 17515  0021E2  0060  F02F  FFF7   	movff	btemp+10,tblptrh
 17516  0021E8  0060  F033  FFF8   	movff	btemp+11,tblptru
 17517  0021EE  BAF8               	btfsc	tblptru,5,c
 17518  0021F0  D003               	bra	u10857
 17519  0021F2  0008               	tblrd		*
 17520  0021F4  50F5               	movf	tablat,w,c
 17521  0021F6  D007               	bra	u10850
 17522  0021F8                     u10857:
 17523  0021F8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17524  0021FE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17525  002204  50EF               	movf	indf0,w,c
 17526  002206                     u10850:
 17527  002206  0900               	iorlw	0
 17528  002208  B4D8               	btfsc	status,2,c
 17529  00220A  D0E4               	goto	u10920
 17530  00220C  D7AC               	goto	l13988
 17531  00220E                     l13994:
 17532                           
 17533                           ;stkvar	printf@f @ sp[(-10)+-3]
 17534  00220E  50E1               	movf	fsr1l,w,c
 17535  002210  0FF3               	addlw	-13
 17536  002212  6ED9               	movwf	fsr2l,c
 17537  002214  50E2               	movf	fsr1h,w,c
 17538  002216  6EDA               	movwf	fsr2h,c
 17539  002218  0EFF               	movlw	255
 17540  00221A  22DA               	addwfc	fsr2h,f,c
 17541  00221C  006F FF7C  F00B    	movff	indf2,btemp+10
 17542  002222  0E01               	movlw	1
 17543  002224  26DE               	addwf	postinc2,f,c
 17544  002226  006F FF7C  F00C    	movff	indf2,btemp+11
 17545  00222C  0E00               	movlw	0
 17546  00222E  22DD               	addwfc	postdec2,f,c
 17547  002230  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 17548  002236  0060  F033  FFF7   	movff	btemp+11,tblptrh
 17549  00223C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17550  00223C  6AF8               	clrf	tblptru,c
 17551  00223E                     	endif
 17552  00223E                     	if	0	;tblptru may be non-zero
 17553  00223E                     	endif
 17554                           
 17555                           ;stkvar	printf@c @ sp[(-10)+7]
 17556  00223E  0008               	tblrd		*
 17557  002240  0EFD               	movlw	-3
 17558  002242  006F FFD7 FFE3     	movff	tablat,plusw1
 17559  002248  0EFD               	movlw	-3
 17560  00224A  50E3               	movf	plusw1,w,c
 17561  00224C  6E0B               	movwf	(btemp+10)^0,c
 17562  00224E  6A0C               	clrf	(btemp+11)^0,c
 17563                           
 17564                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17565                           ; Switch size 1, requested type "simple"
 17566                           ; Number of cases is 1, Range of values is 0 to 0
 17567                           ; switch strategies available:
 17568                           ; Name         Instructions Cycles
 17569                           ; simple_byte            4     3 (average)
 17570                           ;	Chosen strategy is simple_byte
 17571  002250  500C               	movf	(btemp+11)^0,w,c
 17572  002252  0A00               	xorlw	0	; case 0
 17573  002254  A4D8               	btfss	status,2,c
 17574  002256  D0BE               	goto	u10920
 17575                           
 17576                           ; Switch size 1, requested type "simple"
 17577                           ; Number of cases is 4, Range of values is 0 to 115
 17578                           ; switch strategies available:
 17579                           ; Name         Instructions Cycles
 17580                           ; simple_byte           13     7 (average)
 17581                           ;	Chosen strategy is simple_byte
 17582  002258  500B               	movf	(btemp+10)^0,w,c
 17583  00225A  0A00               	xorlw	0	; case 0
 17584  00225C  B4D8               	btfsc	status,2,c
 17585  00225E  D0DB               	goto	u10930
 17586  002260  0A64               	xorlw	100	; case 100
 17587  002262  B4D8               	btfsc	status,2,c
 17588  002264  D007               	goto	l13996
 17589  002266  0A0D               	xorlw	13	; case 105
 17590  002268  B4D8               	btfsc	status,2,c
 17591  00226A  D004               	goto	l13996
 17592  00226C  0A1A               	xorlw	26	; case 115
 17593  00226E  B4D8               	btfsc	status,2,c
 17594  002270  D72C               	goto	l13982
 17595  002272  D0B0               	goto	u10920
 17596  002274                     l13996:
 17597                           
 17598                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
 17599                           ;stkvar	printf@ap @ sp[(-10)+5]
 17600  002274  0EFB               	movlw	-5
 17601  002276  006F FF8C  F001    	movff	plusw1,btemp
 17602  00227C  0E02               	movlw	2
 17603  00227E  5E01               	subwf	btemp^0,f,c
 17604  002280  0EFB               	movlw	-5
 17605  002282  0060  F007  FFE3   	movff	btemp,plusw1
 17606  002288  0EFC               	movlw	-4
 17607  00228A  006F FF8C  F001    	movff	plusw1,btemp
 17608  002290  0E00               	movlw	0
 17609  002292  5A01               	subwfb	btemp^0,f,c
 17610  002294  0EFC               	movlw	-4
 17611  002296  0060  F007  FFE3   	movff	btemp,plusw1
 17612                           
 17613                           ;stkvar	printf@val @ sp[(-10)+3]
 17614  00229C  0EFB               	movlw	-5
 17615  00229E  006F FF8F FFE9     	movff	plusw1,fsr0l
 17616  0022A4  0EFC               	movlw	-4
 17617  0022A6  006F FF8F FFEA     	movff	plusw1,fsr0h
 17618  0022AC  0EF9               	movlw	-7
 17619  0022AE  006F FFBB FFE3     	movff	postinc0,plusw1
 17620  0022B4  0EFA               	movlw	-6
 17621  0022B6  006F FFB7 FFE3     	movff	postdec0,plusw1
 17622                           
 17623                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
 17624                           ;stkvar	printf@val @ sp[(-10)+3]
 17625  0022BC  0EFA               	movlw	-6
 17626  0022BE  AEE3               	btfss	plusw1,7,c
 17627  0022C0  D009               	goto	l14004
 17628                           
 17629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 17630                           ;stkvar	printf@flag @ sp[(-10)+9]
 17631  0022C2  0EFF               	movlw	-1
 17632  0022C4  80E3               	bsf	plusw1,0,c
 17633  0022C6  82E3               	bsf	plusw1,1,c	;indir
 17634                           
 17635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 17636                           ;stkvar	printf@val @ sp[(-10)+3]
 17637                           ;stkvar	printf@val @ sp[(-10)+3]
 17638  0022C8  0EF9               	movlw	-7
 17639  0022CA  6CE3               	negf	plusw1,c
 17640  0022CC  0EFA               	movlw	-6
 17641  0022CE  1EE3               	comf	plusw1,f,c
 17642  0022D0  B0D8               	btfsc	status,0,c
 17643  0022D2  2AE3               	incf	plusw1,f,c
 17644  0022D4                     l14004:
 17645                           
 17646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
 17647                           ;stkvar	printf@c @ sp[(-10)+7]
 17648  0022D4  0EFD               	movlw	-3
 17649  0022D6  6AE3               	clrf	plusw1,c
 17650  0022D8  D01D               	goto	L17
 17651  0022DA                     l14010:
 17652                           
 17653                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 17654                           ;stkvar	printf@c @ sp[(-10)+7]
 17655  0022DA  0EFD               	movlw	-3
 17656  0022DC  50E3               	movf	plusw1,w,c
 17657  0022DE  0D02               	mullw	2
 17658  0022E0  0E98               	movlw	low _dpowers
 17659  0022E2  24F3               	addwf	243,w,c
 17660  0022E4  6EF6               	movwf	tblptrl,c
 17661  0022E6  0EFE               	movlw	high _dpowers
 17662  0022E8  20F4               	addwfc	244,w,c
 17663  0022EA  6EF7               	movwf	tblptrh,c
 17664  0022EC                     	if	1	;There are 3 active tblptr bytes
 17665  0022EC  6AF8               	clrf	tblptru,c
 17666  0022EE  0E00               	movlw	low (__mediumconst shr (0+16))
 17667  0022F0  22F8               	addwfc	tblptru,f,c
 17668  0022F2                     	endif
 17669                           
 17670                           ;stkvar	printf@val @ sp[(-10)+3]
 17671  0022F2  0EF9               	movlw	-7
 17672  0022F4  006F FF8C  F001    	movff	plusw1,btemp
 17673  0022FA  0009               	tblrd		*+
 17674  0022FC  50F5               	movf	tablat,w,c
 17675  0022FE  5C01               	subwf	btemp^0,w,c
 17676  002300  0EFA               	movlw	-6
 17677  002302  006F FF8C  F001    	movff	plusw1,btemp
 17678  002308  0009               	tblrd		*+
 17679  00230A  50F5               	movf	tablat,w,c
 17680  00230C  5801               	subwfb	btemp^0,w,c
 17681  00230E  A0D8               	btfss	status,0,c
 17682  002310  D00A               	goto	u10900
 17683                           
 17684                           ;stkvar	printf@c @ sp[(-10)+7]
 17685  002312  0EFD               	movlw	-3
 17686  002314                     L17:
 17687  002314  2AE3               	incf	plusw1,f,c
 17688                           
 17689                           ;stkvar	printf@c @ sp[(-10)+7]
 17690  002316  0EFD               	movlw	-3
 17691  002318  006F FF8C  F001    	movff	plusw1,btemp
 17692  00231E  0E05               	movlw	5
 17693  002320  1801               	xorwf	btemp^0,w,c
 17694  002322  A4D8               	btfss	status,2,c
 17695  002324  D7DA               	goto	l14010
 17696  002326                     u10900:
 17697                           
 17698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
 17699                           ;stkvar	printf@flag @ sp[(-10)+9]
 17700  002326  0EFF               	movlw	-1
 17701  002328  006F FF8C  F00C    	movff	plusw1,btemp+11
 17702  00232E  0E03               	movlw	3
 17703  002330  160C               	andwf	(btemp+11)^0,f,c
 17704  002332  B4D8               	btfsc	status,2,c
 17705  002334  D004               	goto	l14022
 17706                           
 17707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     (putch(
      +                          '-') );
 17708  002336  0E2D               	movlw	45
 17709  002338  6EE6               	movwf	postinc1,c
 17710  00233A  EC3C  F05E         	call	_putch	;wreg free
 17711  00233E                     l14022:
 17712                           
 17713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
 17714                           ;stkvar	printf@c @ sp[(-10)+7]
 17715                           ;stkvar	printf@prec @ sp[(-10)+8]
 17716  00233E  0EFD               	movlw	-3
 17717  002340  006F FF8C  F001    	movff	plusw1,btemp
 17718  002346  0EFE               	movlw	-2
 17719  002348  0060  F007  FFE3   	movff	btemp,plusw1
 17720                           
 17721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 17722  00234E  D034               	goto	l14028
 17723  002350                     l14024:
 17724                           
 17725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
 17726  002350  0E0A               	movlw	10
 17727  002352  6EE6               	movwf	postinc1,c
 17728  002354  0E00               	movlw	0
 17729  002356  6EE6               	movwf	postinc1,c
 17730                           
 17731                           ;stkvar	printf@prec @ sp[(-12)+8]
 17732  002358  0EFC               	movlw	-4
 17733  00235A  50E3               	movf	plusw1,w,c
 17734  00235C  0D02               	mullw	2
 17735  00235E  0E98               	movlw	low _dpowers
 17736  002360  24F3               	addwf	243,w,c
 17737  002362  6EF6               	movwf	tblptrl,c
 17738  002364  0EFE               	movlw	high _dpowers
 17739  002366  20F4               	addwfc	244,w,c
 17740  002368  6EF7               	movwf	tblptrh,c
 17741  00236A                     	if	1	;There are 3 active tblptr bytes
 17742  00236A  6AF8               	clrf	tblptru,c
 17743  00236C  0E00               	movlw	low (__mediumconst shr (0+16))
 17744  00236E  22F8               	addwfc	tblptru,f,c
 17745  002370                     	endif
 17746  002370  0009               	tblrd		*+
 17747  002372  006F FFD7 FFE6     	movff	tablat,postinc1
 17748  002378  0009               	tblrd		*+
 17749  00237A  006F FFD7 FFE6     	movff	tablat,postinc1
 17750                           
 17751                           ;stkvar	printf@val @ sp[(-14)+3]
 17752  002380  0EF5               	movlw	-11
 17753  002382  006F FF8F FFE6     	movff	plusw1,postinc1
 17754  002388  006F FF8F FFE6     	movff	plusw1,postinc1
 17755  00238E  ECA8  F038         	call	___lwdiv	;wreg free
 17756  002392  0060  F007  FFE6   	movff	btemp,postinc1
 17757  002398  0060  F00B  FFE6   	movff	btemp+1,postinc1
 17758  00239E  ECA8  F042         	call	___lwmod	;wreg free
 17759  0023A2  0E30               	movlw	48
 17760  0023A4  2601               	addwf	btemp^0,f,c
 17761                           
 17762                           ;stkvar	printf@c @ sp[(-10)+7]
 17763  0023A6  0EFD               	movlw	-3
 17764  0023A8  0060  F007  FFE3   	movff	btemp,plusw1
 17765                           
 17766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    (putch(c) );
 17767                           ;stkvar	printf@c @ sp[(-10)+7]
 17768  0023AE  0EFD               	movlw	-3
 17769  0023B0  50E3               	movf	plusw1,w,c
 17770  0023B2  6EE6               	movwf	postinc1,c
 17771  0023B4  EC3C  F05E         	call	_putch	;wreg free
 17772  0023B8                     l14028:
 17773                           
 17774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 17775                           ;stkvar	printf@prec @ sp[(-10)+8]
 17776  0023B8  0EFE               	movlw	-2
 17777  0023BA  006F FF8C  F001    	movff	plusw1,btemp
 17778  0023C0  0EFF               	movlw	-1
 17779  0023C2  2601               	addwf	btemp^0,f,c
 17780  0023C4  0EFE               	movlw	-2
 17781  0023C6  0060  F007  FFE3   	movff	btemp,plusw1
 17782  0023CC  0EFE               	movlw	-2
 17783  0023CE  28E3               	incf	plusw1,w,c
 17784  0023D0  A4D8               	btfss	status,2,c
 17785  0023D2  D7BE               	goto	l14024
 17786  0023D4                     u10920:
 17787                           
 17788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 17789                           ;stkvar	printf@f @ sp[(-10)+-3]
 17790  0023D4  50E1               	movf	fsr1l,w,c
 17791  0023D6  0FF3               	addlw	-13
 17792  0023D8  6ED9               	movwf	fsr2l,c
 17793  0023DA  50E2               	movf	fsr1h,w,c
 17794  0023DC  6EDA               	movwf	fsr2h,c
 17795  0023DE  0EFF               	movlw	255
 17796  0023E0  22DA               	addwfc	fsr2h,f,c
 17797  0023E2  006F FF7C  F00B    	movff	indf2,btemp+10
 17798  0023E8  0E01               	movlw	1
 17799  0023EA  26DE               	addwf	postinc2,f,c
 17800  0023EC  006F FF7C  F00C    	movff	indf2,btemp+11
 17801  0023F2  0E00               	movlw	0
 17802  0023F4  22DD               	addwfc	postdec2,f,c
 17803  0023F6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 17804  0023FC  0060  F033  FFF7   	movff	btemp+11,tblptrh
 17805  002402                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17806  002402  6AF8               	clrf	tblptru,c
 17807  002404                     	endif
 17808  002404                     	if	0	;tblptru may be non-zero
 17809  002404                     	endif
 17810                           
 17811                           ;stkvar	printf@c @ sp[(-10)+7]
 17812  002404  0008               	tblrd		*
 17813  002406  0EFD               	movlw	-3
 17814  002408  006F FFD7 FFE3     	movff	tablat,plusw1
 17815  00240E  0EFD               	movlw	-3
 17816  002410  50E3               	movf	plusw1,w,c
 17817  002412  A4D8               	btfss	status,2,c
 17818  002414  D649               	goto	l13976
 17819  002416                     u10930:
 17820                           
 17821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
 17822  002416  0E00               	movlw	0
 17823  002418  6E01               	movwf	btemp^0,c
 17824  00241A  0E00               	movlw	0
 17825  00241C  6E02               	movwf	(btemp+1)^0,c
 17826                           
 17827                           ; _printf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, args
      +                          ize = 2, vargsize = 0
 17828  00241E  0EF6               	movlw	246
 17829  002420  26E1               	addwf	fsr1l,f,c
 17830  002422  0EFF               	movlw	255
 17831  002424  22E2               	addwfc	fsr1h,f,c
 17832  002426  52E5               	movf	postdec1,f,c
 17833  002428  50E7               	movf	indf1,w,c
 17834  00242A  5EE1               	subwf	fsr1l,f,c
 17835  00242C  0E00               	movlw	0
 17836  00242E  5AE2               	subwfb	fsr1h,f,c
 17837  002430  0012               	return		;funcret
 17838  002432                     __end_of_printf:
 17839                           	callstack 0
 17840                           
 17841 ;; *************** function _putch *****************
 17842 ;; Defined at:
 17843 ;;		line 242 in file "mcc_generated_files/uart1.c"
 17844 ;; Parameters:    Size  Location     Type
 17845 ;;  txData          1  [STACK] unsigned char 
 17846 ;; Auto vars:     Size  Location     Type
 17847 ;;		None
 17848 ;; Return value:  Size  Location     Type
 17849 ;;                  1  [STACK] void 
 17850 ;; Registers used:
 17851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17852 ;; Tracked objects:
 17853 ;;		On entry : 0/0
 17854 ;;		On exit  : 3F/39
 17855 ;;		Unchanged: 0/0
 17856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17861 ;;Total ram usage:        0 bytes
 17862 ;; Hardware stack levels used:    1
 17863 ;; Hardware stack levels required when called:   12
 17864 ;; This function calls:
 17865 ;;		_UART1_Write
 17866 ;; This function is called by:
 17867 ;;		_printf
 17868 ;; This function uses a reentrant model
 17869 ;;
 17870                           
 17871                           	psect	text82
 17872  00BC78                     __ptext82:
 17873                           	callstack 0
 17874  00BC78                     _putch:
 17875                           	callstack 0
 17876                           
 17877                           ;mcc_generated_files/uart1.c: 242: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          243: {;mcc_generated_files/uart1.c: 244:     UART1_Write(txData);
 17878                           ;stkvar	putch@txData @ sp[(0)+-1]
 17879                           
 17880                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17881                           ;incstack = 0
 17882 ;; hardware stack exceeded
 17883  00BC78  0EFF               	movlw	-1
 17884  00BC7A  50E3               	movf	plusw1,w,c
 17885  00BC7C  6EE6               	movwf	postinc1,c
 17886  00BC7E  ECD9  F054         	call	_UART1_Write	;wreg free
 17887                           
 17888                           ; BSR set to: 57
 17889                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 17890  00BC82  52E5               	movf	postdec1,f,c
 17891  00BC84  0012               	return		;funcret
 17892  00BC86                     __end_of_putch:
 17893                           	callstack 0
 17894                           
 17895 ;; *************** function _UART1_Write *****************
 17896 ;; Defined at:
 17897 ;;		line 210 in file "mcc_generated_files/uart1.c"
 17898 ;; Parameters:    Size  Location     Type
 17899 ;;  txData          1  [STACK] unsigned char 
 17900 ;; Auto vars:     Size  Location     Type
 17901 ;;		None
 17902 ;; Return value:  Size  Location     Type
 17903 ;;                  1  [STACK] void 
 17904 ;; Registers used:
 17905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17906 ;; Tracked objects:
 17907 ;;		On entry : 0/0
 17908 ;;		On exit  : 3F/39
 17909 ;;		Unchanged: 0/0
 17910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17915 ;;Total ram usage:        0 bytes
 17916 ;; Hardware stack levels used:    1
 17917 ;; Hardware stack levels required when called:   11
 17918 ;; This function calls:
 17919 ;;		Nothing
 17920 ;; This function is called by:
 17921 ;;		_putch
 17922 ;;		_xMBPortSerialPutByte
 17923 ;; This function uses a reentrant model
 17924 ;;
 17925                           
 17926                           	psect	text83
 17927  00A9B2                     __ptext83:
 17928                           	callstack 0
 17929  00A9B2                     _UART1_Write:
 17930                           	callstack 0
 17931                           
 17932                           ;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 17933                           
 17934                           ;mcc_generated_files/uart1.c: 210: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 211: {;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 17935                           
 17936                           ; BSR set to: 57
 17937                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17938                           ;incstack = 0
 17939 ;; hardware stack exceeded
 17940  00A9B2  0102               	movlb	2	; force () banked
 17941  00A9B4  51F4               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 17942  00A9B6  B4D8               	btfsc	status,2,c
 17943  00A9B8  D7FC               	goto	_UART1_Write
 17944                           
 17945                           ; BSR set to: 2
 17946                           ;mcc_generated_files/uart1.c: 216:     if(0 == PIE3bits.U1TXIE)
 17947  00A9BA  0139               	movlb	57	; force () banked
 17948  00A9BC  B993               	btfsc	147,4,b	;volatile
 17949  00A9BE  D005               	goto	l1939
 17950                           
 17951                           ; BSR set to: 57
 17952                           ;mcc_generated_files/uart1.c: 217:     {;mcc_generated_files/uart1.c: 222:         U1TXB
      +                           = txData;
 17953                           ;stkvar	UART1_Write@txData @ sp[(0)+-1]
 17954  00A9C0  0EFF               	movlw	-1
 17955  00A9C2  006F FF8F FDEA     	movff	plusw1,15850	;volatile
 17956                           
 17957                           ;mcc_generated_files/uart1.c: 223:     }
 17958  00A9C8  D017               	goto	l12096
 17959  00A9CA                     l1939:
 17960                           
 17961                           ; BSR set to: 57
 17962                           ;mcc_generated_files/uart1.c: 225:     {;mcc_generated_files/uart1.c: 226:         PIE3b
      +                          its.U1TXIE = 0;
 17963  00A9CA  0139               	movlb	57	; force () banked
 17964  00A9CC  9993               	bcf	147,4,b	;volatile
 17965                           
 17966                           ; BSR set to: 57
 17967                           ;mcc_generated_files/uart1.c: 227:         uart1TxBuffer[uart1TxHead++] = txData;
 17968                           ;stkvar	UART1_Write@txData @ sp[(0)+-1]
 17969  00A9CE  0E40               	movlw	low _uart1TxBuffer
 17970  00A9D0  0101               	movlb	1	; force () banked
 17971  00A9D2  25E3               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 17972  00A9D4  6ED9               	movwf	fsr2l,c
 17973  00A9D6  6ADA               	clrf	fsr2h,c
 17974  00A9D8  0E05               	movlw	high _uart1TxBuffer
 17975  00A9DA  22DA               	addwfc	fsr2h,f,c
 17976  00A9DC  0EFF               	movlw	-1
 17977  00A9DE  006F FF8F FFDF     	movff	plusw1,indf2
 17978                           
 17979                           ; BSR set to: 1
 17980  00A9E4  0101               	movlb	1	; force () banked
 17981  00A9E6  2BE3               	incf	_uart1TxHead& (0+255),f,b	;volatile
 17982                           
 17983                           ; BSR set to: 1
 17984                           ;mcc_generated_files/uart1.c: 228:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 17985  00A9E8  0E3F               	movlw	63
 17986  00A9EA  0101               	movlb	1	; force () banked
 17987  00A9EC  65E3               	cpfsgt	_uart1TxHead& (0+255),b
 17988  00A9EE  D002               	goto	l12094
 17989                           
 17990                           ; BSR set to: 1
 17991                           ;mcc_generated_files/uart1.c: 229:         {;mcc_generated_files/uart1.c: 230:          
      +                             uart1TxHead = 0;
 17992  00A9F0  0101               	movlb	1	; force () banked
 17993  00A9F2  6BE3               	clrf	_uart1TxHead& (0+255),b	;volatile
 17994  00A9F4                     l12094:
 17995                           
 17996                           ; BSR set to: 1
 17997                           ;mcc_generated_files/uart1.c: 232:         uart1TxBufferRemaining--;
 17998  00A9F4  0102               	movlb	2	; force () banked
 17999  00A9F6  07F4               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 18000  00A9F8                     l12096:
 18001                           
 18002                           ;mcc_generated_files/uart1.c: 234:     PIE3bits.U1TXIE = 1;
 18003  00A9F8  0139               	movlb	57	; force () banked
 18004  00A9FA  8993               	bsf	147,4,b	;volatile
 18005                           
 18006                           ; BSR set to: 57
 18007                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
 18008  00A9FC  52E5               	movf	postdec1,f,c
 18009  00A9FE  0012               	return		;funcret
 18010  00AA00                     __end_of_UART1_Write:
 18011                           	callstack 0
 18012                           
 18013 ;; *************** function ___lwmod *****************
 18014 ;; Defined at:
 18015 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
 18016 ;; Parameters:    Size  Location     Type
 18017 ;;  dividend        2  [STACK] unsigned int 
 18018 ;;  divisor         2  [STACK] unsigned int 
 18019 ;; Auto vars:     Size  Location     Type
 18020 ;;  counter         1  [STACK] unsigned char 
 18021 ;; Return value:  Size  Location     Type
 18022 ;;                  2  [STACK] unsigned int 
 18023 ;; Registers used:
 18024 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18025 ;; Tracked objects:
 18026 ;;		On entry : 0/0
 18027 ;;		On exit  : 0/0
 18028 ;;		Unchanged: 0/0
 18029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18034 ;;Total ram usage:        0 bytes
 18035 ;; Hardware stack levels used:    1
 18036 ;; Hardware stack levels required when called:   11
 18037 ;; This function calls:
 18038 ;;		Nothing
 18039 ;; This function is called by:
 18040 ;;		_printf
 18041 ;; This function uses a reentrant model
 18042 ;;
 18043                           
 18044                           	psect	text84
 18045  008550                     __ptext84:
 18046                           	callstack 0
 18047  008550                     ___lwmod:
 18048                           	callstack 0
 18049                           
 18050                           ; BSR set to: 57
 18051                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18052  008550  52E6               	movf	postinc1,f,c
 18053                           
 18054                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
 18055                           
 18056                           ;incstack = 0
 18057 ;; hardware stack exceeded
 18058  008552  0EFB               	movlw	-5
 18059  008554  006F FF8C  F001    	movff	plusw1,btemp
 18060  00855A  0EFC               	movlw	-4
 18061  00855C  50E3               	movf	plusw1,w,c
 18062  00855E  1001               	iorwf	btemp^0,w,c
 18063  008560  B4D8               	btfsc	status,2,c
 18064  008562  D053               	goto	u9760
 18065                           
 18066                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
 18067  008564  0EFF               	movlw	-1
 18068  008566  6AE3               	clrf	plusw1,c
 18069  008568  D012               	goto	L18
 18070  00856A                     l13088:
 18071                           
 18072                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
 18073  00856A  0EFB               	movlw	-5
 18074  00856C  50E3               	movf	plusw1,w,c
 18075  00856E  90D8               	bcf	status,0,c
 18076  008570  34E8               	rlcf	wreg,w,c
 18077  008572  6E01               	movwf	btemp^0,c
 18078  008574  0EFB               	movlw	-5
 18079  008576  0060  F007  FFE3   	movff	btemp,plusw1
 18080  00857C  0EFC               	movlw	-4
 18081  00857E  50E3               	movf	plusw1,w,c
 18082  008580  34E8               	rlcf	wreg,w,c
 18083  008582  6E01               	movwf	btemp^0,c
 18084  008584  0EFC               	movlw	-4
 18085  008586  0060  F007  FFE3   	movff	btemp,plusw1
 18086                           
 18087                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
 18088  00858C  0EFF               	movlw	-1
 18089  00858E                     L18:
 18090  00858E  2AE3               	incf	plusw1,f,c
 18091                           
 18092                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
 18093  008590  0EFC               	movlw	-4
 18094  008592  AEE3               	btfss	plusw1,7,c
 18095  008594  D7EA               	goto	l13088
 18096  008596                     u9740:
 18097                           
 18098                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
 18099  008596  0EFB               	movlw	-5
 18100  008598  006F FF8C  F00B    	movff	plusw1,btemp+10
 18101  00859E  0EFC               	movlw	-4
 18102  0085A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 18103                           
 18104                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
 18105  0085A6  0EFD               	movlw	-3
 18106  0085A8  006F FF8C  F009    	movff	plusw1,btemp+8
 18107  0085AE  0EFE               	movlw	-2
 18108  0085B0  006F FF8C  F00A    	movff	plusw1,btemp+9
 18109  0085B6  500B               	movf	(btemp+10)^0,w,c
 18110  0085B8  5C09               	subwf	(btemp+8)^0,w,c
 18111  0085BA  500C               	movf	(btemp+11)^0,w,c
 18112  0085BC  580A               	subwfb	(btemp+9)^0,w,c
 18113  0085BE  A0D8               	btfss	status,0,c
 18114  0085C0  D014               	goto	l13098
 18115                           
 18116                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
 18117                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
 18118  0085C2  0EFD               	movlw	-3
 18119  0085C4  50E3               	movf	plusw1,w,c
 18120  0085C6  6E01               	movwf	btemp^0,c
 18121  0085C8  0EFB               	movlw	-5
 18122  0085CA  50E3               	movf	plusw1,w,c
 18123  0085CC  5E01               	subwf	btemp^0,f,c
 18124  0085CE  0EFD               	movlw	-3
 18125  0085D0  0060  F007  FFE3   	movff	btemp,plusw1
 18126  0085D6  0EFE               	movlw	-2
 18127  0085D8  50E3               	movf	plusw1,w,c
 18128  0085DA  6E01               	movwf	btemp^0,c
 18129  0085DC  0EFC               	movlw	-4
 18130  0085DE  50E3               	movf	plusw1,w,c
 18131  0085E0  5A01               	subwfb	btemp^0,f,c
 18132  0085E2  0EFE               	movlw	-2
 18133  0085E4  0060  F007  FFE3   	movff	btemp,plusw1
 18134  0085EA                     l13098:
 18135                           
 18136                           ;stkvar	___lwmod@divisor @ sp[(-1)+-4]
 18137  0085EA  90D8               	bcf	status,0,c
 18138  0085EC  0EFC               	movlw	-4
 18139  0085EE  32E3               	rrcf	plusw1,f,c
 18140  0085F0  0EFB               	movlw	-5
 18141  0085F2  32E3               	rrcf	plusw1,f,c
 18142                           
 18143                           ;stkvar	___lwmod@counter @ sp[(-1)+0]
 18144  0085F4  0EFF               	movlw	-1
 18145  0085F6  50E3               	movf	plusw1,w,c
 18146  0085F8  6E01               	movwf	btemp^0,c
 18147  0085FA  0E01               	movlw	1
 18148  0085FC  5E01               	subwf	btemp^0,f,c
 18149  0085FE  0EFF               	movlw	-1
 18150  008600  0060  F007  FFE3   	movff	btemp,plusw1
 18151  008606  A4D8               	btfss	status,2,c
 18152  008608  D7C6               	goto	u9740
 18153  00860A                     u9760:
 18154                           
 18155                           ;stkvar	___lwmod@dividend @ sp[(-1)+-2]
 18156  00860A  0EFD               	movlw	-3
 18157  00860C  006F FF8C  F001    	movff	plusw1,btemp
 18158  008612  0EFE               	movlw	-2
 18159  008614  006F FF8C  F002    	movff	plusw1,btemp+1
 18160                           
 18161                           ; ___lwmod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18162  00861A  0EFB               	movlw	251
 18163  00861C  26E1               	addwf	fsr1l,f,c
 18164  00861E  0EFF               	movlw	255
 18165  008620  22E2               	addwfc	fsr1h,f,c
 18166  008622  0012               	return		;funcret
 18167  008624                     __end_of___lwmod:
 18168                           	callstack 0
 18169                           
 18170 ;; *************** function ___lwdiv *****************
 18171 ;; Defined at:
 18172 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
 18173 ;; Parameters:    Size  Location     Type
 18174 ;;  dividend        2  [STACK] unsigned int 
 18175 ;;  divisor         2  [STACK] unsigned int 
 18176 ;; Auto vars:     Size  Location     Type
 18177 ;;  quotient        2  [STACK] unsigned int 
 18178 ;;  counter         1  [STACK] unsigned char 
 18179 ;; Return value:  Size  Location     Type
 18180 ;;                  2  [STACK] unsigned int 
 18181 ;; Registers used:
 18182 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18183 ;; Tracked objects:
 18184 ;;		On entry : 0/0
 18185 ;;		On exit  : 0/0
 18186 ;;		Unchanged: 0/0
 18187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18192 ;;Total ram usage:        0 bytes
 18193 ;; Hardware stack levels used:    1
 18194 ;; Hardware stack levels required when called:   11
 18195 ;; This function calls:
 18196 ;;		Nothing
 18197 ;; This function is called by:
 18198 ;;		_CircularBufferInit
 18199 ;;		_printf
 18200 ;; This function uses a reentrant model
 18201 ;;
 18202                           
 18203                           	psect	text85
 18204  007150                     __ptext85:
 18205                           	callstack 0
 18206  007150                     ___lwdiv:
 18207                           	callstack 0
 18208                           
 18209                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18210  007150  52E6               	movf	postinc1,f,c
 18211  007152  52E6               	movf	postinc1,f,c
 18212  007154  52E6               	movf	postinc1,f,c
 18213                           
 18214                           ;stkvar	___lwdiv@quotient @ sp[(-3)+0]
 18215                           
 18216                           ;incstack = 0
 18217 ;; hardware stack exceeded
 18218  007156  0EFD               	movlw	-3
 18219  007158  6AE3               	clrf	plusw1,c
 18220  00715A  0EFE               	movlw	-2
 18221  00715C  6AE3               	clrf	plusw1,c
 18222                           
 18223                           ;stkvar	___lwdiv@divisor @ sp[(-3)+-4]
 18224  00715E  0EF9               	movlw	-7
 18225  007160  006F FF8C  F001    	movff	plusw1,btemp
 18226  007166  0EFA               	movlw	-6
 18227  007168  50E3               	movf	plusw1,w,c
 18228  00716A  1001               	iorwf	btemp^0,w,c
 18229  00716C  B4D8               	btfsc	status,2,c
 18230  00716E  D066               	goto	u9720
 18231                           
 18232                           ;stkvar	___lwdiv@counter @ sp[(-3)+2]
 18233  007170  0EFF               	movlw	-1
 18234  007172  6AE3               	clrf	plusw1,c
 18235  007174  D012               	goto	L19
 18236  007176                     l13062:
 18237                           
 18238                           ;stkvar	___lwdiv@divisor @ sp[(-3)+-4]
 18239  007176  0EF9               	movlw	-7
 18240  007178  50E3               	movf	plusw1,w,c
 18241  00717A  90D8               	bcf	status,0,c
 18242  00717C  34E8               	rlcf	wreg,w,c
 18243  00717E  6E01               	movwf	btemp^0,c
 18244  007180  0EF9               	movlw	-7
 18245  007182  0060  F007  FFE3   	movff	btemp,plusw1
 18246  007188  0EFA               	movlw	-6
 18247  00718A  50E3               	movf	plusw1,w,c
 18248  00718C  34E8               	rlcf	wreg,w,c
 18249  00718E  6E01               	movwf	btemp^0,c
 18250  007190  0EFA               	movlw	-6
 18251  007192  0060  F007  FFE3   	movff	btemp,plusw1
 18252                           
 18253                           ;stkvar	___lwdiv@counter @ sp[(-3)+2]
 18254  007198  0EFF               	movlw	-1
 18255  00719A                     L19:
 18256  00719A  2AE3               	incf	plusw1,f,c
 18257                           
 18258                           ;stkvar	___lwdiv@divisor @ sp[(-3)+-4]
 18259  00719C  0EFA               	movlw	-6
 18260  00719E  AEE3               	btfss	plusw1,7,c
 18261  0071A0  D7EA               	goto	l13062
 18262  0071A2                     u9700:
 18263                           
 18264                           ;stkvar	___lwdiv@quotient @ sp[(-3)+0]
 18265  0071A2  0EFD               	movlw	-3
 18266  0071A4  50E3               	movf	plusw1,w,c
 18267  0071A6  90D8               	bcf	status,0,c
 18268  0071A8  34E8               	rlcf	wreg,w,c
 18269  0071AA  6E01               	movwf	btemp^0,c
 18270  0071AC  0EFD               	movlw	-3
 18271  0071AE  0060  F007  FFE3   	movff	btemp,plusw1
 18272  0071B4  0EFE               	movlw	-2
 18273  0071B6  50E3               	movf	plusw1,w,c
 18274  0071B8  34E8               	rlcf	wreg,w,c
 18275  0071BA  6E01               	movwf	btemp^0,c
 18276  0071BC  0EFE               	movlw	-2
 18277  0071BE  0060  F007  FFE3   	movff	btemp,plusw1
 18278                           
 18279                           ;stkvar	___lwdiv@divisor @ sp[(-3)+-4]
 18280  0071C4  0EF9               	movlw	-7
 18281  0071C6  006F FF8C  F00B    	movff	plusw1,btemp+10
 18282  0071CC  0EFA               	movlw	-6
 18283  0071CE  006F FF8C  F00C    	movff	plusw1,btemp+11
 18284                           
 18285                           ;stkvar	___lwdiv@dividend @ sp[(-3)+-2]
 18286  0071D4  0EFB               	movlw	-5
 18287  0071D6  006F FF8C  F009    	movff	plusw1,btemp+8
 18288  0071DC  0EFC               	movlw	-4
 18289  0071DE  006F FF8C  F00A    	movff	plusw1,btemp+9
 18290  0071E4  500B               	movf	(btemp+10)^0,w,c
 18291  0071E6  5C09               	subwf	(btemp+8)^0,w,c
 18292  0071E8  500C               	movf	(btemp+11)^0,w,c
 18293  0071EA  580A               	subwfb	(btemp+9)^0,w,c
 18294  0071EC  A0D8               	btfss	status,0,c
 18295  0071EE  D016               	goto	l13076
 18296                           
 18297                           ;stkvar	___lwdiv@divisor @ sp[(-3)+-4]
 18298                           ;stkvar	___lwdiv@dividend @ sp[(-3)+-2]
 18299  0071F0  0EFB               	movlw	-5
 18300  0071F2  50E3               	movf	plusw1,w,c
 18301  0071F4  6E01               	movwf	btemp^0,c
 18302  0071F6  0EF9               	movlw	-7
 18303  0071F8  50E3               	movf	plusw1,w,c
 18304  0071FA  5E01               	subwf	btemp^0,f,c
 18305  0071FC  0EFB               	movlw	-5
 18306  0071FE  0060  F007  FFE3   	movff	btemp,plusw1
 18307  007204  0EFC               	movlw	-4
 18308  007206  50E3               	movf	plusw1,w,c
 18309  007208  6E01               	movwf	btemp^0,c
 18310  00720A  0EFA               	movlw	-6
 18311  00720C  50E3               	movf	plusw1,w,c
 18312  00720E  5A01               	subwfb	btemp^0,f,c
 18313  007210  0EFC               	movlw	-4
 18314  007212  0060  F007  FFE3   	movff	btemp,plusw1
 18315                           
 18316                           ;stkvar	___lwdiv@quotient @ sp[(-3)+0]
 18317  007218  0EFD               	movlw	-3
 18318  00721A  80E3               	bsf	plusw1,0,c
 18319  00721C                     l13076:
 18320                           
 18321                           ;stkvar	___lwdiv@divisor @ sp[(-3)+-4]
 18322  00721C  90D8               	bcf	status,0,c
 18323  00721E  0EFA               	movlw	-6
 18324  007220  32E3               	rrcf	plusw1,f,c
 18325  007222  0EF9               	movlw	-7
 18326  007224  32E3               	rrcf	plusw1,f,c
 18327                           
 18328                           ;stkvar	___lwdiv@counter @ sp[(-3)+2]
 18329  007226  0EFF               	movlw	-1
 18330  007228  50E3               	movf	plusw1,w,c
 18331  00722A  6E01               	movwf	btemp^0,c
 18332  00722C  0E01               	movlw	1
 18333  00722E  5E01               	subwf	btemp^0,f,c
 18334  007230  0EFF               	movlw	-1
 18335  007232  0060  F007  FFE3   	movff	btemp,plusw1
 18336  007238  A4D8               	btfss	status,2,c
 18337  00723A  D7B3               	goto	u9700
 18338  00723C                     u9720:
 18339                           
 18340                           ;stkvar	___lwdiv@quotient @ sp[(-3)+0]
 18341  00723C  0EFD               	movlw	-3
 18342  00723E  006F FF8C  F001    	movff	plusw1,btemp
 18343  007244  0EFE               	movlw	-2
 18344  007246  006F FF8C  F002    	movff	plusw1,btemp+1
 18345                           
 18346                           ; ___lwdiv: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18347  00724C  0EF9               	movlw	249
 18348  00724E  26E1               	addwf	fsr1l,f,c
 18349  007250  0EFF               	movlw	255
 18350  007252  22E2               	addwfc	fsr1h,f,c
 18351  007254  0012               	return		;funcret
 18352  007256                     __end_of___lwdiv:
 18353                           	callstack 0
 18354                           
 18355 ;; *************** function _eMBFuncReadWriteMultipleHoldingRegister *****************
 18356 ;; Defined at:
 18357 ;;		line 235 in file "../modbus/functions/mbfuncholding.c"
 18358 ;; Parameters:    Size  Location     Type
 18359 ;;  pucFrame        2   54[BANK0 ] PTR unsigned char 
 18360 ;;		 -> ucRTUBuf(256), NULL(0), 
 18361 ;;  usLen           2   56[BANK0 ] PTR unsigned int 
 18362 ;;		 -> eMBPoll@usLength(2), 
 18363 ;; Auto vars:     Size  Location     Type
 18364 ;;  usRegReadCou    2   73[BANK0 ] unsigned int 
 18365 ;;  usRegWriteCo    2   70[BANK0 ] unsigned int 
 18366 ;;  pucFrameCur     2   68[BANK0 ] PTR unsigned char 
 18367 ;;		 -> ucRTUBuf(256), NULL(0), 
 18368 ;;  usRegWriteAd    2   65[BANK0 ] unsigned int 
 18369 ;;  usRegReadAdd    2   63[BANK0 ] unsigned int 
 18370 ;;  eRegStatus      1   72[BANK0 ] enum E15837
 18371 ;;  eStatus         1   67[BANK0 ] enum E15805
 18372 ;;  ucRegWriteBy    1   62[BANK0 ] unsigned char 
 18373 ;; Return value:  Size  Location     Type
 18374 ;;                  1    wreg      enum E15805
 18375 ;; Registers used:
 18376 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 18377 ;; Tracked objects:
 18378 ;;		On entry : 3F/0
 18379 ;;		On exit  : 3F/0
 18380 ;;		Unchanged: 0/0
 18381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18382 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18383 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18384 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18385 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18386 ;;Total ram usage:       21 bytes
 18387 ;; Hardware stack levels used:    1
 18388 ;; Hardware stack levels required when called:   14
 18389 ;; This function calls:
 18390 ;;		_eMBRegHoldingCB
 18391 ;;		_prveMBError2Exception
 18392 ;; This function is called by:
 18393 ;;		_eMBPoll
 18394 ;; This function uses a non-reentrant model
 18395 ;;
 18396                           
 18397                           	psect	text86
 18398  003FA6                     __ptext86:
 18399                           	callstack 0
 18400  003FA6                     _eMBFuncReadWriteMultipleHoldingRegister:
 18401                           	callstack 13
 18402                           
 18403                           ;../modbus/functions/mbfuncholding.c: 235: eMBFuncReadWriteMultipleHoldingRegister( UCHA
      +                          R * pucFrame, USHORT * usLen );../modbus/functions/mbfuncholding.c: 236: {;../modbus/fun
      +                          ctions/mbfuncholding.c: 237:     USHORT usRegReadAddress;;../modbus/functions/mbfunchold
      +                          ing.c: 238:     USHORT usRegReadCount;;../modbus/functions/mbfuncholding.c: 239:     USH
      +                          ORT usRegWriteAddress;;../modbus/functions/mbfuncholding.c: 240:     USHORT usRegWriteCo
      +                          unt;;../modbus/functions/mbfuncholding.c: 241:     UCHAR ucRegWriteByteCount;
 18404                           
 18405                           ;incstack = 0
 18406  003FA6  0E00               	movlw	0
 18407  003FA8  0100               	movlb	0	; force () banked
 18408  003FAA  6FA3               	movwf	eMBFuncReadWriteMultipleHoldingRegister@eStatus& (0+255),b
 18409                           
 18410                           ; BSR set to: 0
 18411                           ;../modbus/functions/mbfuncholding.c: 245:     eMBErrorCode eRegStatus;;../modbus/functi
      +                          ons/mbfuncholding.c: 247:     if( *usLen >= ( ( 9 ) + 1 ) )
 18412  003FAC  0060  F263  FFD9   	movff	eMBFuncReadWriteMultipleHoldingRegister@usLen,fsr2l
 18413  003FB2  0060  F267  FFDA   	movff	eMBFuncReadWriteMultipleHoldingRegister@usLen+1,fsr2h
 18414  003FB8  0E01               	movlw	1
 18415  003FBA  50DB               	movf	plusw2,w,c
 18416  003FBC  E104               	bnz	u11290
 18417  003FBE  0E0A               	movlw	10
 18418  003FC0  5CDE               	subwf	postinc2,w,c
 18419  003FC2  A0D8               	btfss	status,0,c
 18420  003FC4  D125               	goto	l2353
 18421  003FC6                     u11290:
 18422                           
 18423                           ; BSR set to: 0
 18424                           ;../modbus/functions/mbfuncholding.c: 248:     {;../modbus/functions/mbfuncholding.c: 24
      +                          9:         usRegReadAddress = ( USHORT )( pucFrame[( 1 + 0 )] << 8U );
 18425  003FC6  0100               	movlb	0	; force () banked
 18426  003FC8  EE20 F001          	lfsr	2,1
 18427  003FCC  5196               	movf	eMBFuncReadWriteMultipleHoldingRegister@pucFrame& (0+255),w,b
 18428  003FCE  26D9               	addwf	fsr2l,f,c
 18429  003FD0  5197               	movf	(eMBFuncReadWriteMultipleHoldingRegister@pucFrame+1)& (0+255),w,b
 18430  003FD2  22DA               	addwfc	fsr2h,f,c
 18431  003FD4  50DF               	movf	indf2,w,c
 18432  003FD6  0100               	movlb	0	; force () banked
 18433  003FD8  6FA0               	movwf	(eMBFuncReadWriteMultipleHoldingRegister@usRegReadAddress+1)& (0+255),b
 18434  003FDA  6B9F               	clrf	eMBFuncReadWriteMultipleHoldingRegister@usRegReadAddress& (0+255),b
 18435                           
 18436                           ;../modbus/functions/mbfuncholding.c: 250:         usRegReadAddress |= ( USHORT )( pucFr
      +                          ame[( 1 + 0 ) + 1] );
 18437  003FDC  0100               	movlb	0	; force () banked
 18438  003FDE  EE20 F002          	lfsr	2,2
 18439  003FE2  5196               	movf	eMBFuncReadWriteMultipleHoldingRegister@pucFrame& (0+255),w,b
 18440  003FE4  26D9               	addwf	fsr2l,f,c
 18441  003FE6  5197               	movf	(eMBFuncReadWriteMultipleHoldingRegister@pucFrame+1)& (0+255),w,b
 18442  003FE8  22DA               	addwfc	fsr2h,f,c
 18443  003FEA  50DF               	movf	indf2,w,c
 18444  003FEC  0100               	movlb	0	; force () banked
 18445  003FEE  6F9A               	movwf	??_eMBFuncReadWriteMultipleHoldingRegister& (0+255),b
 18446  003FF0  519A               	movf	??_eMBFuncReadWriteMultipleHoldingRegister& (0+255),w,b
 18447  003FF2  0100               	movlb	0	; force () banked
 18448  003FF4  139F               	iorwf	eMBFuncReadWriteMultipleHoldingRegister@usRegReadAddress& (0+255),f,b
 18449                           
 18450                           ; BSR set to: 0
 18451                           ;../modbus/functions/mbfuncholding.c: 251:         usRegReadAddress++;
 18452  003FF6  0100               	movlb	0	; force () banked
 18453  003FF8  4B9F               	infsnz	eMBFuncReadWriteMultipleHoldingRegister@usRegReadAddress& (0+255),f,b
 18454  003FFA  2BA0               	incf	(eMBFuncReadWriteMultipleHoldingRegister@usRegReadAddress+1)& (0+255),f,b
 18455                           
 18456                           ; BSR set to: 0
 18457                           ;../modbus/functions/mbfuncholding.c: 253:         usRegReadCount = ( USHORT )( pucFrame
      +                          [( 1 + 2 )] << 8U );
 18458  003FFC  0100               	movlb	0	; force () banked
 18459  003FFE  EE20 F003          	lfsr	2,3
 18460  004002  5196               	movf	eMBFuncReadWriteMultipleHoldingRegister@pucFrame& (0+255),w,b
 18461  004004  26D9               	addwf	fsr2l,f,c
 18462  004006  5197               	movf	(eMBFuncReadWriteMultipleHoldingRegister@pucFrame+1)& (0+255),w,b
 18463  004008  22DA               	addwfc	fsr2h,f,c
 18464  00400A  50DF               	movf	indf2,w,c
 18465  00400C  0100               	movlb	0	; force () banked
 18466  00400E  6FAA               	movwf	(eMBFuncReadWriteMultipleHoldingRegister@usRegReadCount+1)& (0+255),b
 18467  004010  6BA9               	clrf	eMBFuncReadWriteMultipleHoldingRegister@usRegReadCount& (0+255),b
 18468                           
 18469                           ; BSR set to: 0
 18470                           ;../modbus/functions/mbfuncholding.c: 254:         usRegReadCount |= ( USHORT )( pucFram
      +                          e[( 1 + 2 ) + 1] );
 18471  004012  0100               	movlb	0	; force () banked
 18472  004014  EE20 F004          	lfsr	2,4
 18473  004018  5196               	movf	eMBFuncReadWriteMultipleHoldingRegister@pucFrame& (0+255),w,b
 18474  00401A  26D9               	addwf	fsr2l,f,c
 18475  00401C  5197               	movf	(eMBFuncReadWriteMultipleHoldingRegister@pucFrame+1)& (0+255),w,b
 18476  00401E  22DA               	addwfc	fsr2h,f,c
 18477  004020  50DF               	movf	indf2,w,c
 18478  004022  0100               	movlb	0	; force () banked
 18479  004024  6F9A               	movwf	??_eMBFuncReadWriteMultipleHoldingRegister& (0+255),b
 18480  004026  519A               	movf	??_eMBFuncReadWriteMultipleHoldingRegister& (0+255),w,b
 18481  004028  0100               	movlb	0	; force () banked
 18482  00402A  13A9               	iorwf	eMBFuncReadWriteMultipleHoldingRegister@usRegReadCount& (0+255),f,b
 18483                           
 18484                           ; BSR set to: 0
 18485                           ;../modbus/functions/mbfuncholding.c: 256:         usRegWriteAddress = ( USHORT )( pucFr
      +                          ame[( 1 + 4 )] << 8U );
 18486  00402C  0100               	movlb	0	; force () banked
 18487  00402E  EE20 F005          	lfsr	2,5
 18488  004032  5196               	movf	eMBFuncReadWriteMultipleHoldingRegister@pucFrame& (0+255),w,b
 18489  004034  26D9               	addwf	fsr2l,f,c
 18490  004036  5197               	movf	(eMBFuncReadWriteMultipleHoldingRegister@pucFrame+1)& (0+255),w,b
 18491  004038  22DA               	addwfc	fsr2h,f,c
 18492  00403A  50DF               	movf	indf2,w,c
 18493  00403C  0100               	movlb	0	; force () banked
 18494  00403E  6FA2               	movwf	(eMBFuncReadWriteMultipleHoldingRegister@usRegWriteAddress+1)& (0+255),b
 18495  004040  6BA1               	clrf	eMBFuncReadWriteMultipleHoldingRegister@usRegWriteAddress& (0+255),b
 18496                           
 18497                           ; BSR set to: 0
 18498                           ;../modbus/functions/mbfuncholding.c: 257:         usRegWriteAddress |= ( USHORT )( pucF
      +                          rame[( 1 + 4 ) + 1] );
 18499  004042  0100               	movlb	0	; force () banked
 18500  004044  EE20 F006          	lfsr	2,6
 18501  004048  5196               	movf	eMBFuncReadWriteMultipleHoldingRegister@pucFrame& (0+255),w,b
 18502  00404A  26D9               	addwf	fsr2l,f,c
 18503  00404C  5197               	movf	(eMBFuncReadWriteMultipleHoldingRegister@pucFrame+1)& (0+255),w,b
 18504  00404E  22DA               	addwfc	fsr2h,f,c
 18505  004050  50DF               	movf	indf2,w,c
 18506  004052  0100               	movlb	0	; force () banked
 18507  004054  6F9A               	movwf	??_eMBFuncReadWriteMultipleHoldingRegister& (0+255),b
 18508  004056  519A               	movf	??_eMBFuncReadWriteMultipleHoldingRegister& (0+255),w,b
 18509  004058  0100               	movlb	0	; force () banked
 18510  00405A  13A1               	iorwf	eMBFuncReadWriteMultipleHoldingRegister@usRegWriteAddress& (0+255),f,b
 18511                           
 18512                           ; BSR set to: 0
 18513                           ;../modbus/functions/mbfuncholding.c: 258:         usRegWriteAddress++;
 18514  00405C  0100               	movlb	0	; force () banked
 18515  00405E  4BA1               	infsnz	eMBFuncReadWriteMultipleHoldingRegister@usRegWriteAddress& (0+255),f,b
 18516  004060  2BA2               	incf	(eMBFuncReadWriteMultipleHoldingRegister@usRegWriteAddress+1)& (0+255),f,b
 18517                           
 18518                           ;../modbus/functions/mbfuncholding.c: 260:         usRegWriteCount = ( USHORT )( pucFram
      +                          e[( 1 + 6 )] << 8U );
 18519  004062  0100               	movlb	0	; force () banked
 18520  004064  EE20 F007          	lfsr	2,7
 18521  004068  5196               	movf	eMBFuncReadWriteMultipleHoldingRegister@pucFrame& (0+255),w,b
 18522  00406A  26D9               	addwf	fsr2l,f,c
 18523  00406C  5197               	movf	(eMBFuncReadWriteMultipleHoldingRegister@pucFrame+1)& (0+255),w,b
 18524  00406E  22DA               	addwfc	fsr2h,f,c
 18525  004070  50DF               	movf	indf2,w,c
 18526  004072  0100               	movlb	0	; force () banked
 18527  004074  6FA7               	movwf	(eMBFuncReadWriteMultipleHoldingRegister@usRegWriteCount+1)& (0+255),b
 18528  004076  6BA6               	clrf	eMBFuncReadWriteMultipleHoldingRegister@usRegWriteCount& (0+255),b
 18529                           
 18530                           ;../modbus/functions/mbfuncholding.c: 261:         usRegWriteCount |= ( USHORT )( pucFra
      +                          me[( 1 + 6 ) + 1] );
 18531  004078  0100               	movlb	0	; force () banked
 18532  00407A  EE20 F008          	lfsr	2,8
 18533  00407E  5196               	movf	eMBFuncReadWriteMultipleHoldingRegister@pucFrame& (0+255),w,b
 18534  004080  26D9               	addwf	fsr2l,f,c
 18535  004082  5197               	movf	(eMBFuncReadWriteMultipleHoldingRegister@pucFrame+1)& (0+255),w,b
 18536  004084  22DA               	addwfc	fsr2h,f,c
 18537  004086  50DF               	movf	indf2,w,c
 18538  004088  0100               	movlb	0	; force () banked
 18539  00408A  6F9A               	movwf	??_eMBFuncReadWriteMultipleHoldingRegister& (0+255),b
 18540  00408C  519A               	movf	??_eMBFuncReadWriteMultipleHoldingRegister& (0+255),w,b
 18541  00408E  0100               	movlb	0	; force () banked
 18542  004090  13A6               	iorwf	eMBFuncReadWriteMultipleHoldingRegister@usRegWriteCount& (0+255),f,b
 18543                           
 18544                           ;../modbus/functions/mbfuncholding.c: 263:         ucRegWriteByteCount = pucFrame[( 1 + 
      +                          8 )];
 18545  004092  0100               	movlb	0	; force () banked
 18546  004094  EE20 F009          	lfsr	2,9
 18547  004098  5196               	movf	eMBFuncReadWriteMultipleHoldingRegister@pucFrame& (0+255),w,b
 18548  00409A  26D9               	addwf	fsr2l,f,c
 18549  00409C  5197               	movf	(eMBFuncReadWriteMultipleHoldingRegister@pucFrame+1)& (0+255),w,b
 18550  00409E  22DA               	addwfc	fsr2h,f,c
 18551  0040A0  50DF               	movf	indf2,w,c
 18552  0040A2  0100               	movlb	0	; force () banked
 18553  0040A4  6F9E               	movwf	eMBFuncReadWriteMultipleHoldingRegister@ucRegWriteByteCount& (0+255),b
 18554                           
 18555                           ; BSR set to: 0
 18556                           ;../modbus/functions/mbfuncholding.c: 265:         if( ( usRegReadCount >= 1 ) && ( usRe
      +                          gReadCount <= 0x7D ) &&
 18557  0040A6  0100               	movlb	0	; force () banked
 18558  0040A8  51A9               	movf	eMBFuncReadWriteMultipleHoldingRegister@usRegReadCount& (0+255),w,b
 18559  0040AA  11AA               	iorwf	(eMBFuncReadWriteMultipleHoldingRegister@usRegReadCount+1)& (0+255),w,b
 18560  0040AC  B4D8               	btfsc	status,2,c
 18561  0040AE  D0AD               	goto	l14546
 18562                           
 18563                           ; BSR set to: 0
 18564  0040B0  0100               	movlb	0	; force () banked
 18565  0040B2  51AA               	movf	(eMBFuncReadWriteMultipleHoldingRegister@usRegReadCount+1)& (0+255),w,b
 18566  0040B4  E103               	bnz	u11311
 18567  0040B6  0E7E               	movlw	126
 18568  0040B8  5DA9               	subwf	eMBFuncReadWriteMultipleHoldingRegister@usRegReadCount& (0+255),w,b
 18569  0040BA  B0D8               	btfsc	status,0,c
 18570  0040BC                     u11311:
 18571  0040BC  D0A6               	goto	l14546
 18572                           
 18573                           ; BSR set to: 0
 18574  0040BE  0100               	movlb	0	; force () banked
 18575  0040C0  51A6               	movf	eMBFuncReadWriteMultipleHoldingRegister@usRegWriteCount& (0+255),w,b
 18576  0040C2  11A7               	iorwf	(eMBFuncReadWriteMultipleHoldingRegister@usRegWriteCount+1)& (0+255),w,b
 18577  0040C4  B4D8               	btfsc	status,2,c
 18578  0040C6  D0A1               	goto	l14546
 18579                           
 18580                           ; BSR set to: 0
 18581  0040C8  0100               	movlb	0	; force () banked
 18582  0040CA  51A7               	movf	(eMBFuncReadWriteMultipleHoldingRegister@usRegWriteCount+1)& (0+255),w,b
 18583  0040CC  E103               	bnz	u11331
 18584  0040CE  0E7A               	movlw	122
 18585  0040D0  5DA6               	subwf	eMBFuncReadWriteMultipleHoldingRegister@usRegWriteCount& (0+255),w,b
 18586  0040D2  B0D8               	btfsc	status,0,c
 18587  0040D4                     u11331:
 18588  0040D4  D09A               	goto	l14546
 18589                           
 18590                           ; BSR set to: 0
 18591  0040D6  0100               	movlb	0	; force () banked
 18592  0040D8  519E               	movf	eMBFuncReadWriteMultipleHoldingRegister@ucRegWriteByteCount& (0+255),w,b
 18593  0040DA  0100               	movlb	0	; force () banked
 18594  0040DC  6F9A               	movwf	??_eMBFuncReadWriteMultipleHoldingRegister& (0+255),b
 18595  0040DE  6B9B               	clrf	(??_eMBFuncReadWriteMultipleHoldingRegister+1)& (0+255),b
 18596  0040E0  C0A6  F09C         	movff	eMBFuncReadWriteMultipleHoldingRegister@usRegWriteCount,??_eMBFuncReadWriteMultip
      +                          leHoldingRegister+2
 18597  0040E4  C0A7  F09D         	movff	eMBFuncReadWriteMultipleHoldingRegister@usRegWriteCount+1,??_eMBFuncReadWriteMult
      +                          ipleHoldingRegister+3
 18598  0040E8  90D8               	bcf	status,0,c
 18599  0040EA  379C               	rlcf	(??_eMBFuncReadWriteMultipleHoldingRegister+2)& (0+255),f,b
 18600  0040EC  379D               	rlcf	(??_eMBFuncReadWriteMultipleHoldingRegister+3)& (0+255),f,b
 18601  0040EE  519A               	movf	??_eMBFuncReadWriteMultipleHoldingRegister& (0+255),w,b
 18602  0040F0  199C               	xorwf	(??_eMBFuncReadWriteMultipleHoldingRegister+2)& (0+255),w,b
 18603  0040F2  E103               	bnz	u11341
 18604  0040F4  519B               	movf	(??_eMBFuncReadWriteMultipleHoldingRegister+1)& (0+255),w,b
 18605  0040F6  199D               	xorwf	(??_eMBFuncReadWriteMultipleHoldingRegister+3)& (0+255),w,b
 18606  0040F8  A4D8               	btfss	status,2,c
 18607  0040FA                     u11341:
 18608  0040FA  D087               	goto	l14546
 18609                           
 18610                           ; BSR set to: 0
 18611                           ;../modbus/functions/mbfuncholding.c: 268:         {;../modbus/functions/mbfuncholding.c
      +                          : 270:             eRegStatus = eMBRegHoldingCB( &pucFrame[( 1 + 9 )],
 18612  0040FC  0E0A               	movlw	10
 18613  0040FE  0100               	movlb	0	; force () banked
 18614  004100  2596               	addwf	eMBFuncReadWriteMultipleHoldingRegister@pucFrame& (0+255),w,b
 18615  004102  0100               	movlb	0	; force () banked
 18616  004104  6F7D               	movwf	eMBRegHoldingCB@pucRegBuffer& (0+255),b
 18617  004106  0E00               	movlw	0
 18618  004108  0100               	movlb	0	; force () banked
 18619  00410A  2197               	addwfc	(eMBFuncReadWriteMultipleHoldingRegister@pucFrame+1)& (0+255),w,b
 18620  00410C  0100               	movlb	0	; force () banked
 18621  00410E  6F7E               	movwf	(eMBRegHoldingCB@pucRegBuffer+1)& (0+255),b
 18622  004110  C0A1  F07F         	movff	eMBFuncReadWriteMultipleHoldingRegister@usRegWriteAddress,eMBRegHoldingCB@usAddre
      +                          ss
 18623  004114  C0A2  F080         	movff	eMBFuncReadWriteMultipleHoldingRegister@usRegWriteAddress+1,eMBRegHoldingCB@usAdd
      +                          ress+1
 18624  004118  C0A6  F081         	movff	eMBFuncReadWriteMultipleHoldingRegister@usRegWriteCount,eMBRegHoldingCB@usNRegs
 18625  00411C  C0A7  F082         	movff	eMBFuncReadWriteMultipleHoldingRegister@usRegWriteCount+1,eMBRegHoldingCB@usNRegs
      +                          +1
 18626  004120  0E01               	movlw	1
 18627  004122  0100               	movlb	0	; force () banked
 18628  004124  6F83               	movwf	eMBRegHoldingCB@eMode& (0+255),b
 18629  004126  EC19  F012         	call	_eMBRegHoldingCB	;wreg free
 18630  00412A  0100               	movlb	0	; force () banked
 18631  00412C  6FA8               	movwf	eMBFuncReadWriteMultipleHoldingRegister@eRegStatus& (0+255),b
 18632                           
 18633                           ; BSR set to: 0
 18634                           ;../modbus/functions/mbfuncholding.c: 273:             if( eRegStatus == MB_ENOERR )
 18635  00412E  0100               	movlb	0	; force () banked
 18636  004130  51A8               	movf	eMBFuncReadWriteMultipleHoldingRegister@eRegStatus& (0+255),w,b
 18637  004132  A4D8               	btfss	status,2,c
 18638  004134  D061               	goto	l14542
 18639                           
 18640                           ; BSR set to: 0
 18641                           ;../modbus/functions/mbfuncholding.c: 274:             {;../modbus/functions/mbfuncholdi
      +                          ng.c: 276:                 pucFrameCur = &pucFrame[0];
 18642  004136  C096  F0A4         	movff	eMBFuncReadWriteMultipleHoldingRegister@pucFrame,eMBFuncReadWriteMultipleHoldingR
      +                          egister@pucFrameCur
 18643  00413A  C097  F0A5         	movff	eMBFuncReadWriteMultipleHoldingRegister@pucFrame+1,eMBFuncReadWriteMultipleHoldin
      +                          gRegister@pucFrameCur+1
 18644                           
 18645                           ; BSR set to: 0
 18646                           ;../modbus/functions/mbfuncholding.c: 277:                 *usLen = 0;
 18647  00413E  0060  F263  FFD9   	movff	eMBFuncReadWriteMultipleHoldingRegister@usLen,fsr2l
 18648  004144  0060  F267  FFDA   	movff	eMBFuncReadWriteMultipleHoldingRegister@usLen+1,fsr2h
 18649  00414A  0E00               	movlw	0
 18650  00414C  6EDE               	movwf	postinc2,c
 18651  00414E  0E00               	movlw	0
 18652  004150  6EDD               	movwf	postdec2,c
 18653                           
 18654                           ; BSR set to: 0
 18655                           ;../modbus/functions/mbfuncholding.c: 280:                 *pucFrameCur++ = ( 23 );
 18656  004152  0060  F293  FFD9   	movff	eMBFuncReadWriteMultipleHoldingRegister@pucFrameCur,fsr2l
 18657  004158  0060  F297  FFDA   	movff	eMBFuncReadWriteMultipleHoldingRegister@pucFrameCur+1,fsr2h
 18658  00415E  0E17               	movlw	23
 18659  004160  6EDF               	movwf	indf2,c
 18660                           
 18661                           ; BSR set to: 0
 18662  004162  0100               	movlb	0	; force () banked
 18663  004164  4BA4               	infsnz	eMBFuncReadWriteMultipleHoldingRegister@pucFrameCur& (0+255),f,b
 18664  004166  2BA5               	incf	(eMBFuncReadWriteMultipleHoldingRegister@pucFrameCur+1)& (0+255),f,b
 18665                           
 18666                           ; BSR set to: 0
 18667                           ;../modbus/functions/mbfuncholding.c: 281:                 *usLen += 1;
 18668  004168  0060  F263  FFD9   	movff	eMBFuncReadWriteMultipleHoldingRegister@usLen,fsr2l
 18669  00416E  0060  F267  FFDA   	movff	eMBFuncReadWriteMultipleHoldingRegister@usLen+1,fsr2h
 18670  004174  2ADE               	incf	postinc2,f,c
 18671  004176  0E00               	movlw	0
 18672  004178  22DD               	addwfc	postdec2,f,c
 18673                           
 18674                           ; BSR set to: 0
 18675                           ;../modbus/functions/mbfuncholding.c: 284:                 *pucFrameCur++ = ( UCHAR ) ( 
      +                          usRegReadCount * 2 );
 18676  00417A  0100               	movlb	0	; force () banked
 18677  00417C  51A9               	movf	eMBFuncReadWriteMultipleHoldingRegister@usRegReadCount& (0+255),w,b
 18678  00417E  25A9               	addwf	eMBFuncReadWriteMultipleHoldingRegister@usRegReadCount& (0+255),w,b
 18679  004180  0060  F293  FFD9   	movff	eMBFuncReadWriteMultipleHoldingRegister@pucFrameCur,fsr2l
 18680  004186  0060  F297  FFDA   	movff	eMBFuncReadWriteMultipleHoldingRegister@pucFrameCur+1,fsr2h
 18681  00418C  6EDF               	movwf	indf2,c
 18682                           
 18683                           ; BSR set to: 0
 18684  00418E  0100               	movlb	0	; force () banked
 18685  004190  4BA4               	infsnz	eMBFuncReadWriteMultipleHoldingRegister@pucFrameCur& (0+255),f,b
 18686  004192  2BA5               	incf	(eMBFuncReadWriteMultipleHoldingRegister@pucFrameCur+1)& (0+255),f,b
 18687                           
 18688                           ; BSR set to: 0
 18689                           ;../modbus/functions/mbfuncholding.c: 285:                 *usLen += 1;
 18690  004194  0060  F263  FFD9   	movff	eMBFuncReadWriteMultipleHoldingRegister@usLen,fsr2l
 18691  00419A  0060  F267  FFDA   	movff	eMBFuncReadWriteMultipleHoldingRegister@usLen+1,fsr2h
 18692  0041A0  2ADE               	incf	postinc2,f,c
 18693  0041A2  0E00               	movlw	0
 18694  0041A4  22DD               	addwfc	postdec2,f,c
 18695                           
 18696                           ; BSR set to: 0
 18697                           ;../modbus/functions/mbfuncholding.c: 288:                 eRegStatus =
 18698  0041A6  C0A4  F07D         	movff	eMBFuncReadWriteMultipleHoldingRegister@pucFrameCur,eMBRegHoldingCB@pucRegBuffer
 18699  0041AA  C0A5  F07E         	movff	eMBFuncReadWriteMultipleHoldingRegister@pucFrameCur+1,eMBRegHoldingCB@pucRegBuffe
      +                          r+1
 18700  0041AE  C09F  F07F         	movff	eMBFuncReadWriteMultipleHoldingRegister@usRegReadAddress,eMBRegHoldingCB@usAddres
      +                          s
 18701  0041B2  C0A0  F080         	movff	eMBFuncReadWriteMultipleHoldingRegister@usRegReadAddress+1,eMBRegHoldingCB@usAddr
      +                          ess+1
 18702  0041B6  C0A9  F081         	movff	eMBFuncReadWriteMultipleHoldingRegister@usRegReadCount,eMBRegHoldingCB@usNRegs
 18703  0041BA  C0AA  F082         	movff	eMBFuncReadWriteMultipleHoldingRegister@usRegReadCount+1,eMBRegHoldingCB@usNRegs+
      +                          1
 18704  0041BE  0E00               	movlw	0
 18705  0041C0  0100               	movlb	0	; force () banked
 18706  0041C2  6F83               	movwf	eMBRegHoldingCB@eMode& (0+255),b
 18707  0041C4  EC19  F012         	call	_eMBRegHoldingCB	;wreg free
 18708  0041C8  0100               	movlb	0	; force () banked
 18709  0041CA  6FA8               	movwf	eMBFuncReadWriteMultipleHoldingRegister@eRegStatus& (0+255),b
 18710                           
 18711                           ; BSR set to: 0
 18712                           ;../modbus/functions/mbfuncholding.c: 290:                 if( eRegStatus == MB_ENOERR )
 18713  0041CC  0100               	movlb	0	; force () banked
 18714  0041CE  51A8               	movf	eMBFuncReadWriteMultipleHoldingRegister@eRegStatus& (0+255),w,b
 18715  0041D0  A4D8               	btfss	status,2,c
 18716  0041D2  D012               	goto	l14542
 18717                           
 18718                           ; BSR set to: 0
 18719                           ;../modbus/functions/mbfuncholding.c: 291:                 {;../modbus/functions/mbfunch
      +                          olding.c: 292:                     *usLen += 2 * usRegReadCount;
 18720  0041D4  C0A9  F09A         	movff	eMBFuncReadWriteMultipleHoldingRegister@usRegReadCount,??_eMBFuncReadWriteMultipl
      +                          eHoldingRegister
 18721  0041D8  C0AA  F09B         	movff	eMBFuncReadWriteMultipleHoldingRegister@usRegReadCount+1,??_eMBFuncReadWriteMulti
      +                          pleHoldingRegister+1
 18722  0041DC  90D8               	bcf	status,0,c
 18723  0041DE  0100               	movlb	0	; force () banked
 18724  0041E0  379A               	rlcf	??_eMBFuncReadWriteMultipleHoldingRegister& (0+255),f,b
 18725  0041E2  379B               	rlcf	(??_eMBFuncReadWriteMultipleHoldingRegister+1)& (0+255),f,b
 18726  0041E4  0060  F263  FFD9   	movff	eMBFuncReadWriteMultipleHoldingRegister@usLen,fsr2l
 18727  0041EA  0060  F267  FFDA   	movff	eMBFuncReadWriteMultipleHoldingRegister@usLen+1,fsr2h
 18728  0041F0  519A               	movf	??_eMBFuncReadWriteMultipleHoldingRegister& (0+255),w,b
 18729  0041F2  26DE               	addwf	postinc2,f,c
 18730  0041F4  519B               	movf	(??_eMBFuncReadWriteMultipleHoldingRegister+1)& (0+255),w,b
 18731  0041F6  22DD               	addwfc	postdec2,f,c
 18732  0041F8                     l14542:
 18733                           
 18734                           ; BSR set to: 0
 18735                           ;../modbus/functions/mbfuncholding.c: 295:             if( eRegStatus != MB_ENOERR )
 18736  0041F8  0100               	movlb	0	; force () banked
 18737  0041FA  51A8               	movf	eMBFuncReadWriteMultipleHoldingRegister@eRegStatus& (0+255),w,b
 18738  0041FC  B4D8               	btfsc	status,2,c
 18739  0041FE  D008               	goto	l2353
 18740                           
 18741                           ; BSR set to: 0
 18742                           ;../modbus/functions/mbfuncholding.c: 296:             {;../modbus/functions/mbfuncholdi
      +                          ng.c: 297:                 eStatus = prveMBError2Exception( eRegStatus );
 18743  004200  0100               	movlb	0	; force () banked
 18744  004202  51A8               	movf	eMBFuncReadWriteMultipleHoldingRegister@eRegStatus& (0+255),w,b
 18745  004204  EC77  F056         	call	_prveMBError2Exception
 18746  004208  D001               	goto	L20
 18747  00420A                     l14546:
 18748                           
 18749                           ; BSR set to: 0
 18750                           ;../modbus/functions/mbfuncholding.c: 301:         {;../modbus/functions/mbfuncholding.c
      +                          : 302:             eStatus = MB_EX_ILLEGAL_DATA_VALUE;
 18751  00420A  0E03               	movlw	3
 18752  00420C                     L20:
 18753  00420C  0100               	movlb	0	; force () banked
 18754  00420E  6FA3               	movwf	eMBFuncReadWriteMultipleHoldingRegister@eStatus& (0+255),b
 18755  004210                     l2353:
 18756                           
 18757                           ; BSR set to: 0
 18758                           ;../modbus/functions/mbfuncholding.c: 305:     return eStatus;
 18759  004210  0100               	movlb	0	; force () banked
 18760  004212  51A3               	movf	eMBFuncReadWriteMultipleHoldingRegister@eStatus& (0+255),w,b
 18761                           
 18762                           ; BSR set to: 0
 18763  004214  0012               	return		;funcret
 18764  004216                     __end_of_eMBFuncReadWriteMultipleHoldingRegister:
 18765                           	callstack 0
 18766                           
 18767 ;; *************** function _eMBFuncReadHoldingRegister *****************
 18768 ;; Defined at:
 18769 ;;		line 170 in file "../modbus/functions/mbfuncholding.c"
 18770 ;; Parameters:    Size  Location     Type
 18771 ;;  pucFrame        2   54[BANK0 ] PTR unsigned char 
 18772 ;;		 -> ucRTUBuf(256), NULL(0), 
 18773 ;;  usLen           2   56[BANK0 ] PTR unsigned int 
 18774 ;;		 -> eMBPoll@usLength(2), 
 18775 ;; Auto vars:     Size  Location     Type
 18776 ;;  usRegCount      2   66[BANK0 ] unsigned int 
 18777 ;;  pucFrameCur     2   64[BANK0 ] PTR unsigned char 
 18778 ;;		 -> ucRTUBuf(256), NULL(0), 
 18779 ;;  usRegAddress    2   60[BANK0 ] unsigned int 
 18780 ;;  eRegStatus      1   63[BANK0 ] enum E15837
 18781 ;;  eStatus         1   62[BANK0 ] enum E15805
 18782 ;; Return value:  Size  Location     Type
 18783 ;;                  1    wreg      enum E15805
 18784 ;; Registers used:
 18785 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 18786 ;; Tracked objects:
 18787 ;;		On entry : 3F/0
 18788 ;;		On exit  : 3F/0
 18789 ;;		Unchanged: 0/0
 18790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18791 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18792 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18793 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18794 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18795 ;;Total ram usage:       14 bytes
 18796 ;; Hardware stack levels used:    1
 18797 ;; Hardware stack levels required when called:   14
 18798 ;; This function calls:
 18799 ;;		_eMBRegHoldingCB
 18800 ;;		_prveMBError2Exception
 18801 ;; This function is called by:
 18802 ;;		_eMBPoll
 18803 ;; This function uses a non-reentrant model
 18804 ;;
 18805                           
 18806                           	psect	text87
 18807  005CB4                     __ptext87:
 18808                           	callstack 0
 18809  005CB4                     _eMBFuncReadHoldingRegister:
 18810                           	callstack 13
 18811                           
 18812                           ;../modbus/functions/mbfuncholding.c: 170: eMBFuncReadHoldingRegister( UCHAR * pucFrame,
      +                           USHORT * usLen );../modbus/functions/mbfuncholding.c: 171: {;../modbus/functions/mbfunc
      +                          holding.c: 172:     USHORT usRegAddress;;../modbus/functions/mbfuncholding.c: 173:     U
      +                          SHORT usRegCount;;../modbus/functions/mbfuncholding.c: 174:     UCHAR *pucFrameCur;;../m
      +                          odbus/functions/mbfuncholding.c: 176:     eMBException eStatus = MB_EX_NONE;
 18813                           
 18814                           ; BSR set to: 0
 18815                           ;incstack = 0
 18816  005CB4  0E00               	movlw	0
 18817  005CB6  0100               	movlb	0	; force () banked
 18818  005CB8  6F9E               	movwf	eMBFuncReadHoldingRegister@eStatus& (0+255),b
 18819                           
 18820                           ; BSR set to: 0
 18821                           ;../modbus/functions/mbfuncholding.c: 177:     eMBErrorCode eRegStatus;;../modbus/functi
      +                          ons/mbfuncholding.c: 179:     if( *usLen == ( ( 4 ) + 1 ) )
 18822  005CBA  0060  F263  FFD9   	movff	eMBFuncReadHoldingRegister@usLen,fsr2l
 18823  005CC0  0060  F267  FFDA   	movff	eMBFuncReadHoldingRegister@usLen+1,fsr2h
 18824  005CC6  0E05               	movlw	5
 18825  005CC8  18DE               	xorwf	postinc2,w,c
 18826  005CCA  10DE               	iorwf	postinc2,w,c
 18827  005CCC  A4D8               	btfss	status,2,c
 18828  005CCE  D0A7               	goto	l14482
 18829                           
 18830                           ; BSR set to: 0
 18831                           ;../modbus/functions/mbfuncholding.c: 180:     {;../modbus/functions/mbfuncholding.c: 18
      +                          1:         usRegAddress = ( USHORT )( pucFrame[( 1 + 0)] << 8 );
 18832  005CD0  0100               	movlb	0	; force () banked
 18833  005CD2  EE20 F001          	lfsr	2,1
 18834  005CD6  5196               	movf	eMBFuncReadHoldingRegister@pucFrame& (0+255),w,b
 18835  005CD8  26D9               	addwf	fsr2l,f,c
 18836  005CDA  5197               	movf	(eMBFuncReadHoldingRegister@pucFrame+1)& (0+255),w,b
 18837  005CDC  22DA               	addwfc	fsr2h,f,c
 18838  005CDE  50DF               	movf	indf2,w,c
 18839  005CE0  0100               	movlb	0	; force () banked
 18840  005CE2  6F9D               	movwf	(eMBFuncReadHoldingRegister@usRegAddress+1)& (0+255),b
 18841  005CE4  6B9C               	clrf	eMBFuncReadHoldingRegister@usRegAddress& (0+255),b
 18842                           
 18843                           ;../modbus/functions/mbfuncholding.c: 182:         usRegAddress |= ( USHORT )( pucFrame[
      +                          ( 1 + 0) + 1] );
 18844  005CE6  0100               	movlb	0	; force () banked
 18845  005CE8  EE20 F002          	lfsr	2,2
 18846  005CEC  5196               	movf	eMBFuncReadHoldingRegister@pucFrame& (0+255),w,b
 18847  005CEE  26D9               	addwf	fsr2l,f,c
 18848  005CF0  5197               	movf	(eMBFuncReadHoldingRegister@pucFrame+1)& (0+255),w,b
 18849  005CF2  22DA               	addwfc	fsr2h,f,c
 18850  005CF4  50DF               	movf	indf2,w,c
 18851  005CF6  0100               	movlb	0	; force () banked
 18852  005CF8  6F9A               	movwf	??_eMBFuncReadHoldingRegister& (0+255),b
 18853  005CFA  519A               	movf	??_eMBFuncReadHoldingRegister& (0+255),w,b
 18854  005CFC  0100               	movlb	0	; force () banked
 18855  005CFE  139C               	iorwf	eMBFuncReadHoldingRegister@usRegAddress& (0+255),f,b
 18856                           
 18857                           ; BSR set to: 0
 18858                           ;../modbus/functions/mbfuncholding.c: 183:         usRegAddress++;
 18859  005D00  0100               	movlb	0	; force () banked
 18860  005D02  4B9C               	infsnz	eMBFuncReadHoldingRegister@usRegAddress& (0+255),f,b
 18861  005D04  2B9D               	incf	(eMBFuncReadHoldingRegister@usRegAddress+1)& (0+255),f,b
 18862                           
 18863                           ; BSR set to: 0
 18864                           ;../modbus/functions/mbfuncholding.c: 185:         usRegCount = ( USHORT )( pucFrame[( 1
      +                           + 2 )] << 8 );
 18865  005D06  0100               	movlb	0	; force () banked
 18866  005D08  EE20 F003          	lfsr	2,3
 18867  005D0C  5196               	movf	eMBFuncReadHoldingRegister@pucFrame& (0+255),w,b
 18868  005D0E  26D9               	addwf	fsr2l,f,c
 18869  005D10  5197               	movf	(eMBFuncReadHoldingRegister@pucFrame+1)& (0+255),w,b
 18870  005D12  22DA               	addwfc	fsr2h,f,c
 18871  005D14  50DF               	movf	indf2,w,c
 18872  005D16  0100               	movlb	0	; force () banked
 18873  005D18  6FA3               	movwf	(eMBFuncReadHoldingRegister@usRegCount+1)& (0+255),b
 18874  005D1A  6BA2               	clrf	eMBFuncReadHoldingRegister@usRegCount& (0+255),b
 18875                           
 18876                           ; BSR set to: 0
 18877                           ;../modbus/functions/mbfuncholding.c: 186:         usRegCount = ( USHORT )( pucFrame[( 1
      +                           + 2 ) + 1] );
 18878  005D1C  0100               	movlb	0	; force () banked
 18879  005D1E  EE20 F004          	lfsr	2,4
 18880  005D22  5196               	movf	eMBFuncReadHoldingRegister@pucFrame& (0+255),w,b
 18881  005D24  26D9               	addwf	fsr2l,f,c
 18882  005D26  5197               	movf	(eMBFuncReadHoldingRegister@pucFrame+1)& (0+255),w,b
 18883  005D28  22DA               	addwfc	fsr2h,f,c
 18884  005D2A  50DF               	movf	indf2,w,c
 18885  005D2C  0100               	movlb	0	; force () banked
 18886  005D2E  6F9A               	movwf	??_eMBFuncReadHoldingRegister& (0+255),b
 18887  005D30  519A               	movf	??_eMBFuncReadHoldingRegister& (0+255),w,b
 18888  005D32  0100               	movlb	0	; force () banked
 18889  005D34  6FA2               	movwf	eMBFuncReadHoldingRegister@usRegCount& (0+255),b
 18890  005D36  6BA3               	clrf	(eMBFuncReadHoldingRegister@usRegCount+1)& (0+255),b
 18891                           
 18892                           ; BSR set to: 0
 18893                           ;../modbus/functions/mbfuncholding.c: 191:         if( ( usRegCount >= 1 ) && ( usRegCou
      +                          nt <= ( 0x007D ) ) )
 18894  005D38  0100               	movlb	0	; force () banked
 18895  005D3A  51A2               	movf	eMBFuncReadHoldingRegister@usRegCount& (0+255),w,b
 18896  005D3C  11A3               	iorwf	(eMBFuncReadHoldingRegister@usRegCount+1)& (0+255),w,b
 18897  005D3E  B4D8               	btfsc	status,2,c
 18898  005D40  D06E               	goto	l14482
 18899                           
 18900                           ; BSR set to: 0
 18901  005D42  0100               	movlb	0	; force () banked
 18902  005D44  51A3               	movf	(eMBFuncReadHoldingRegister@usRegCount+1)& (0+255),w,b
 18903  005D46  E16B               	bnz	l14484
 18904  005D48  0E7E               	movlw	126
 18905  005D4A  5DA2               	subwf	eMBFuncReadHoldingRegister@usRegCount& (0+255),w,b
 18906  005D4C  B0D8               	btfsc	status,0,c
 18907  005D4E  D067               	goto	l14482
 18908                           
 18909                           ; BSR set to: 0
 18910                           ;../modbus/functions/mbfuncholding.c: 192:         {;../modbus/functions/mbfuncholding.c
      +                          : 194:             pucFrameCur = &pucFrame[0];
 18911  005D50  C096  F0A0         	movff	eMBFuncReadHoldingRegister@pucFrame,eMBFuncReadHoldingRegister@pucFrameCur
 18912  005D54  C097  F0A1         	movff	eMBFuncReadHoldingRegister@pucFrame+1,eMBFuncReadHoldingRegister@pucFrameCur+1
 18913                           
 18914                           ; BSR set to: 0
 18915                           ;../modbus/functions/mbfuncholding.c: 195:             *usLen = 0;
 18916  005D58  0060  F263  FFD9   	movff	eMBFuncReadHoldingRegister@usLen,fsr2l
 18917  005D5E  0060  F267  FFDA   	movff	eMBFuncReadHoldingRegister@usLen+1,fsr2h
 18918  005D64  0E00               	movlw	0
 18919  005D66  6EDE               	movwf	postinc2,c
 18920  005D68  0E00               	movlw	0
 18921  005D6A  6EDD               	movwf	postdec2,c
 18922                           
 18923                           ; BSR set to: 0
 18924                           ;../modbus/functions/mbfuncholding.c: 198:             *pucFrameCur++ = ( 3 );
 18925  005D6C  0060  F283  FFD9   	movff	eMBFuncReadHoldingRegister@pucFrameCur,fsr2l
 18926  005D72  0060  F287  FFDA   	movff	eMBFuncReadHoldingRegister@pucFrameCur+1,fsr2h
 18927  005D78  0E03               	movlw	3
 18928  005D7A  6EDF               	movwf	indf2,c
 18929                           
 18930                           ; BSR set to: 0
 18931  005D7C  0100               	movlb	0	; force () banked
 18932  005D7E  4BA0               	infsnz	eMBFuncReadHoldingRegister@pucFrameCur& (0+255),f,b
 18933  005D80  2BA1               	incf	(eMBFuncReadHoldingRegister@pucFrameCur+1)& (0+255),f,b
 18934                           
 18935                           ; BSR set to: 0
 18936                           ;../modbus/functions/mbfuncholding.c: 199:             *usLen += 1;
 18937  005D82  0060  F263  FFD9   	movff	eMBFuncReadHoldingRegister@usLen,fsr2l
 18938  005D88  0060  F267  FFDA   	movff	eMBFuncReadHoldingRegister@usLen+1,fsr2h
 18939  005D8E  2ADE               	incf	postinc2,f,c
 18940  005D90  0E00               	movlw	0
 18941  005D92  22DD               	addwfc	postdec2,f,c
 18942                           
 18943                           ; BSR set to: 0
 18944                           ;../modbus/functions/mbfuncholding.c: 202:             *pucFrameCur++ = ( UCHAR ) ( usRe
      +                          gCount * 2 );
 18945  005D94  0100               	movlb	0	; force () banked
 18946  005D96  51A2               	movf	eMBFuncReadHoldingRegister@usRegCount& (0+255),w,b
 18947  005D98  25A2               	addwf	eMBFuncReadHoldingRegister@usRegCount& (0+255),w,b
 18948  005D9A  0060  F283  FFD9   	movff	eMBFuncReadHoldingRegister@pucFrameCur,fsr2l
 18949  005DA0  0060  F287  FFDA   	movff	eMBFuncReadHoldingRegister@pucFrameCur+1,fsr2h
 18950  005DA6  6EDF               	movwf	indf2,c
 18951                           
 18952                           ; BSR set to: 0
 18953  005DA8  0100               	movlb	0	; force () banked
 18954  005DAA  4BA0               	infsnz	eMBFuncReadHoldingRegister@pucFrameCur& (0+255),f,b
 18955  005DAC  2BA1               	incf	(eMBFuncReadHoldingRegister@pucFrameCur+1)& (0+255),f,b
 18956                           
 18957                           ; BSR set to: 0
 18958                           ;../modbus/functions/mbfuncholding.c: 203:             *usLen += 1;
 18959  005DAE  0060  F263  FFD9   	movff	eMBFuncReadHoldingRegister@usLen,fsr2l
 18960  005DB4  0060  F267  FFDA   	movff	eMBFuncReadHoldingRegister@usLen+1,fsr2h
 18961  005DBA  2ADE               	incf	postinc2,f,c
 18962  005DBC  0E00               	movlw	0
 18963  005DBE  22DD               	addwfc	postdec2,f,c
 18964                           
 18965                           ; BSR set to: 0
 18966                           ;../modbus/functions/mbfuncholding.c: 206:             eRegStatus = eMBRegHoldingCB( puc
      +                          FrameCur, usRegAddress, usRegCount, MB_REG_READ );
 18967  005DC0  C0A0  F07D         	movff	eMBFuncReadHoldingRegister@pucFrameCur,eMBRegHoldingCB@pucRegBuffer
 18968  005DC4  C0A1  F07E         	movff	eMBFuncReadHoldingRegister@pucFrameCur+1,eMBRegHoldingCB@pucRegBuffer+1
 18969  005DC8  C09C  F07F         	movff	eMBFuncReadHoldingRegister@usRegAddress,eMBRegHoldingCB@usAddress
 18970  005DCC  C09D  F080         	movff	eMBFuncReadHoldingRegister@usRegAddress+1,eMBRegHoldingCB@usAddress+1
 18971  005DD0  C0A2  F081         	movff	eMBFuncReadHoldingRegister@usRegCount,eMBRegHoldingCB@usNRegs
 18972  005DD4  C0A3  F082         	movff	eMBFuncReadHoldingRegister@usRegCount+1,eMBRegHoldingCB@usNRegs+1
 18973  005DD8  0E00               	movlw	0
 18974  005DDA  0100               	movlb	0	; force () banked
 18975  005DDC  6F83               	movwf	eMBRegHoldingCB@eMode& (0+255),b
 18976  005DDE  EC19  F012         	call	_eMBRegHoldingCB	;wreg free
 18977  005DE2  0100               	movlb	0	; force () banked
 18978  005DE4  6F9F               	movwf	eMBFuncReadHoldingRegister@eRegStatus& (0+255),b
 18979                           
 18980                           ; BSR set to: 0
 18981                           ;../modbus/functions/mbfuncholding.c: 208:             if( eRegStatus != MB_ENOERR )
 18982  005DE6  0100               	movlb	0	; force () banked
 18983  005DE8  519F               	movf	eMBFuncReadHoldingRegister@eRegStatus& (0+255),w,b
 18984  005DEA  B4D8               	btfsc	status,2,c
 18985  005DEC  D005               	goto	l14480
 18986                           
 18987                           ; BSR set to: 0
 18988                           ;../modbus/functions/mbfuncholding.c: 209:             {;../modbus/functions/mbfuncholdi
      +                          ng.c: 210:                 eStatus = prveMBError2Exception( eRegStatus );
 18989  005DEE  0100               	movlb	0	; force () banked
 18990  005DF0  519F               	movf	eMBFuncReadHoldingRegister@eRegStatus& (0+255),w,b
 18991  005DF2  EC77  F056         	call	_prveMBError2Exception
 18992  005DF6  D014               	goto	L21
 18993  005DF8                     l14480:
 18994                           
 18995                           ; BSR set to: 0
 18996                           ;../modbus/functions/mbfuncholding.c: 213:             {;../modbus/functions/mbfuncholdi
      +                          ng.c: 214:                 *usLen += usRegCount * 2;
 18997  005DF8  C0A2  F09A         	movff	eMBFuncReadHoldingRegister@usRegCount,??_eMBFuncReadHoldingRegister
 18998  005DFC  C0A3  F09B         	movff	eMBFuncReadHoldingRegister@usRegCount+1,??_eMBFuncReadHoldingRegister+1
 18999  005E00  90D8               	bcf	status,0,c
 19000  005E02  0100               	movlb	0	; force () banked
 19001  005E04  379A               	rlcf	??_eMBFuncReadHoldingRegister& (0+255),f,b
 19002  005E06  379B               	rlcf	(??_eMBFuncReadHoldingRegister+1)& (0+255),f,b
 19003  005E08  0060  F263  FFD9   	movff	eMBFuncReadHoldingRegister@usLen,fsr2l
 19004  005E0E  0060  F267  FFDA   	movff	eMBFuncReadHoldingRegister@usLen+1,fsr2h
 19005  005E14  519A               	movf	??_eMBFuncReadHoldingRegister& (0+255),w,b
 19006  005E16  26DE               	addwf	postinc2,f,c
 19007  005E18  519B               	movf	(??_eMBFuncReadHoldingRegister+1)& (0+255),w,b
 19008  005E1A  22DD               	addwfc	postdec2,f,c
 19009  005E1C  D003               	goto	l2349
 19010  005E1E                     l14482:
 19011  005E1E                     l14484:
 19012                           
 19013                           ; BSR set to: 0
 19014                           ;../modbus/functions/mbfuncholding.c: 223:     {;../modbus/functions/mbfuncholding.c: 22
      +                          5:         eStatus = MB_EX_ILLEGAL_DATA_VALUE;
 19015  005E1E  0E03               	movlw	3
 19016  005E20                     L21:
 19017  005E20  0100               	movlb	0	; force () banked
 19018  005E22  6F9E               	movwf	eMBFuncReadHoldingRegister@eStatus& (0+255),b
 19019  005E24                     l2349:
 19020                           
 19021                           ; BSR set to: 0
 19022                           ;../modbus/functions/mbfuncholding.c: 227:     return eStatus;
 19023  005E24  0100               	movlb	0	; force () banked
 19024  005E26  519E               	movf	eMBFuncReadHoldingRegister@eStatus& (0+255),w,b
 19025                           
 19026                           ; BSR set to: 0
 19027  005E28  0012               	return		;funcret
 19028  005E2A                     __end_of_eMBFuncReadHoldingRegister:
 19029                           	callstack 0
 19030                           
 19031 ;; *************** function _eMBFuncWriteHoldingRegister *****************
 19032 ;; Defined at:
 19033 ;;		line 77 in file "../modbus/functions/mbfuncholding.c"
 19034 ;; Parameters:    Size  Location     Type
 19035 ;;  pucFrame        2   54[BANK0 ] PTR unsigned char 
 19036 ;;		 -> ucRTUBuf(256), NULL(0), 
 19037 ;;  usLen           2   56[BANK0 ] PTR unsigned int 
 19038 ;;		 -> eMBPoll@usLength(2), 
 19039 ;; Auto vars:     Size  Location     Type
 19040 ;;  usRegAddress    2   60[BANK0 ] unsigned int 
 19041 ;;  eRegStatus      1   63[BANK0 ] enum E15837
 19042 ;;  eStatus         1   62[BANK0 ] enum E15805
 19043 ;; Return value:  Size  Location     Type
 19044 ;;                  1    wreg      enum E15805
 19045 ;; Registers used:
 19046 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 19047 ;; Tracked objects:
 19048 ;;		On entry : 3F/0
 19049 ;;		On exit  : 3F/0
 19050 ;;		Unchanged: 0/0
 19051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19052 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19053 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19054 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19055 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19056 ;;Total ram usage:       10 bytes
 19057 ;; Hardware stack levels used:    1
 19058 ;; Hardware stack levels required when called:   14
 19059 ;; This function calls:
 19060 ;;		_eMBRegHoldingCB
 19061 ;;		_prveMBError2Exception
 19062 ;; This function is called by:
 19063 ;;		_eMBPoll
 19064 ;; This function uses a non-reentrant model
 19065 ;;
 19066                           
 19067                           	psect	text88
 19068  009008                     __ptext88:
 19069                           	callstack 0
 19070  009008                     _eMBFuncWriteHoldingRegister:
 19071                           	callstack 13
 19072                           
 19073                           ;../modbus/functions/mbfuncholding.c: 77: eMBFuncWriteHoldingRegister( UCHAR * pucFrame,
      +                           USHORT * usLen );../modbus/functions/mbfuncholding.c: 78: {;../modbus/functions/mbfunch
      +                          olding.c: 79:     USHORT usRegAddress;;../modbus/functions/mbfuncholding.c: 80:     eMBE
      +                          xception eStatus = MB_EX_NONE;
 19074                           
 19075                           ; BSR set to: 0
 19076                           ;incstack = 0
 19077  009008  0E00               	movlw	0
 19078  00900A  0100               	movlb	0	; force () banked
 19079  00900C  6F9E               	movwf	eMBFuncWriteHoldingRegister@eStatus& (0+255),b
 19080                           
 19081                           ; BSR set to: 0
 19082                           ;../modbus/functions/mbfuncholding.c: 81:     eMBErrorCode eRegStatus;;../modbus/functio
      +                          ns/mbfuncholding.c: 83:     if( *usLen == ( ( 4 ) + 1 ) )
 19083  00900E  0060  F263  FFD9   	movff	eMBFuncWriteHoldingRegister@usLen,fsr2l
 19084  009014  0060  F267  FFDA   	movff	eMBFuncWriteHoldingRegister@usLen+1,fsr2h
 19085  00901A  0E05               	movlw	5
 19086  00901C  18DE               	xorwf	postinc2,w,c
 19087  00901E  10DE               	iorwf	postinc2,w,c
 19088  009020  A4D8               	btfss	status,2,c
 19089  009022  D03E               	goto	l14404
 19090                           
 19091                           ; BSR set to: 0
 19092                           ;../modbus/functions/mbfuncholding.c: 84:     {;../modbus/functions/mbfuncholding.c: 85:
      +                                   usRegAddress = ( USHORT )( pucFrame[( 1 + 0)] << 8 );
 19093  009024  0100               	movlb	0	; force () banked
 19094  009026  EE20 F001          	lfsr	2,1
 19095  00902A  5196               	movf	eMBFuncWriteHoldingRegister@pucFrame& (0+255),w,b
 19096  00902C  26D9               	addwf	fsr2l,f,c
 19097  00902E  5197               	movf	(eMBFuncWriteHoldingRegister@pucFrame+1)& (0+255),w,b
 19098  009030  22DA               	addwfc	fsr2h,f,c
 19099  009032  50DF               	movf	indf2,w,c
 19100  009034  0100               	movlb	0	; force () banked
 19101  009036  6F9D               	movwf	(eMBFuncWriteHoldingRegister@usRegAddress+1)& (0+255),b
 19102  009038  6B9C               	clrf	eMBFuncWriteHoldingRegister@usRegAddress& (0+255),b
 19103                           
 19104                           ;../modbus/functions/mbfuncholding.c: 86:         usRegAddress |= ( USHORT )( pucFrame[(
      +                           1 + 0) + 1] );
 19105  00903A  0100               	movlb	0	; force () banked
 19106  00903C  EE20 F002          	lfsr	2,2
 19107  009040  5196               	movf	eMBFuncWriteHoldingRegister@pucFrame& (0+255),w,b
 19108  009042  26D9               	addwf	fsr2l,f,c
 19109  009044  5197               	movf	(eMBFuncWriteHoldingRegister@pucFrame+1)& (0+255),w,b
 19110  009046  22DA               	addwfc	fsr2h,f,c
 19111  009048  50DF               	movf	indf2,w,c
 19112  00904A  0100               	movlb	0	; force () banked
 19113  00904C  6F9A               	movwf	??_eMBFuncWriteHoldingRegister& (0+255),b
 19114  00904E  519A               	movf	??_eMBFuncWriteHoldingRegister& (0+255),w,b
 19115  009050  0100               	movlb	0	; force () banked
 19116  009052  139C               	iorwf	eMBFuncWriteHoldingRegister@usRegAddress& (0+255),f,b
 19117                           
 19118                           ; BSR set to: 0
 19119                           ;../modbus/functions/mbfuncholding.c: 87:         usRegAddress++;
 19120  009054  0100               	movlb	0	; force () banked
 19121  009056  4B9C               	infsnz	eMBFuncWriteHoldingRegister@usRegAddress& (0+255),f,b
 19122  009058  2B9D               	incf	(eMBFuncWriteHoldingRegister@usRegAddress+1)& (0+255),f,b
 19123                           
 19124                           ; BSR set to: 0
 19125                           ;../modbus/functions/mbfuncholding.c: 90:         eRegStatus = eMBRegHoldingCB( &pucFram
      +                          e[( 1 + 2 )],
 19126  00905A  0E03               	movlw	3
 19127  00905C  0100               	movlb	0	; force () banked
 19128  00905E  2596               	addwf	eMBFuncWriteHoldingRegister@pucFrame& (0+255),w,b
 19129  009060  0100               	movlb	0	; force () banked
 19130  009062  6F7D               	movwf	eMBRegHoldingCB@pucRegBuffer& (0+255),b
 19131  009064  0E00               	movlw	0
 19132  009066  0100               	movlb	0	; force () banked
 19133  009068  2197               	addwfc	(eMBFuncWriteHoldingRegister@pucFrame+1)& (0+255),w,b
 19134  00906A  0100               	movlb	0	; force () banked
 19135  00906C  6F7E               	movwf	(eMBRegHoldingCB@pucRegBuffer+1)& (0+255),b
 19136  00906E  C09C  F07F         	movff	eMBFuncWriteHoldingRegister@usRegAddress,eMBRegHoldingCB@usAddress
 19137  009072  C09D  F080         	movff	eMBFuncWriteHoldingRegister@usRegAddress+1,eMBRegHoldingCB@usAddress+1
 19138  009076  0E00               	movlw	0
 19139  009078  0100               	movlb	0	; force () banked
 19140  00907A  6F82               	movwf	(eMBRegHoldingCB@usNRegs+1)& (0+255),b
 19141  00907C  0E01               	movlw	1
 19142  00907E  6F81               	movwf	eMBRegHoldingCB@usNRegs& (0+255),b
 19143  009080  0E01               	movlw	1
 19144  009082  0100               	movlb	0	; force () banked
 19145  009084  6F83               	movwf	eMBRegHoldingCB@eMode& (0+255),b
 19146  009086  EC19  F012         	call	_eMBRegHoldingCB	;wreg free
 19147  00908A  0100               	movlb	0	; force () banked
 19148  00908C  6F9F               	movwf	eMBFuncWriteHoldingRegister@eRegStatus& (0+255),b
 19149                           
 19150                           ; BSR set to: 0
 19151                           ;../modbus/functions/mbfuncholding.c: 94:         if( eRegStatus != MB_ENOERR )
 19152  00908E  0100               	movlb	0	; force () banked
 19153  009090  519F               	movf	eMBFuncWriteHoldingRegister@eRegStatus& (0+255),w,b
 19154  009092  B4D8               	btfsc	status,2,c
 19155  009094  D008               	goto	l2331
 19156                           
 19157                           ; BSR set to: 0
 19158                           ;../modbus/functions/mbfuncholding.c: 95:         {;../modbus/functions/mbfuncholding.c:
      +                           96:             eStatus = prveMBError2Exception( eRegStatus );
 19159  009096  0100               	movlb	0	; force () banked
 19160  009098  519F               	movf	eMBFuncWriteHoldingRegister@eRegStatus& (0+255),w,b
 19161  00909A  EC77  F056         	call	_prveMBError2Exception
 19162  00909E  D001               	goto	L22
 19163  0090A0                     l14404:
 19164                           
 19165                           ; BSR set to: 0
 19166                           ;../modbus/functions/mbfuncholding.c: 100:     {;../modbus/functions/mbfuncholding.c: 10
      +                          2:         eStatus = MB_EX_ILLEGAL_DATA_VALUE;
 19167  0090A0  0E03               	movlw	3
 19168  0090A2                     L22:
 19169  0090A2  0100               	movlb	0	; force () banked
 19170  0090A4  6F9E               	movwf	eMBFuncWriteHoldingRegister@eStatus& (0+255),b
 19171  0090A6                     l2331:
 19172                           
 19173                           ; BSR set to: 0
 19174                           ;../modbus/functions/mbfuncholding.c: 104:     return eStatus;
 19175  0090A6  0100               	movlb	0	; force () banked
 19176  0090A8  519E               	movf	eMBFuncWriteHoldingRegister@eStatus& (0+255),w,b
 19177                           
 19178                           ; BSR set to: 0
 19179  0090AA  0012               	return		;funcret
 19180  0090AC                     __end_of_eMBFuncWriteHoldingRegister:
 19181                           	callstack 0
 19182                           
 19183 ;; *************** function _eMBFuncWriteMultipleHoldingRegister *****************
 19184 ;; Defined at:
 19185 ;;		line 110 in file "../modbus/functions/mbfuncholding.c"
 19186 ;; Parameters:    Size  Location     Type
 19187 ;;  pucFrame        2   54[BANK0 ] PTR unsigned char 
 19188 ;;		 -> ucRTUBuf(256), NULL(0), 
 19189 ;;  usLen           2   56[BANK0 ] PTR unsigned int 
 19190 ;;		 -> eMBPoll@usLength(2), 
 19191 ;; Auto vars:     Size  Location     Type
 19192 ;;  usRegCount      2   65[BANK0 ] unsigned int 
 19193 ;;  usRegAddress    2   61[BANK0 ] unsigned int 
 19194 ;;  eRegStatus      1   64[BANK0 ] enum E15837
 19195 ;;  eStatus         1   63[BANK0 ] enum E15805
 19196 ;;  ucRegByteCou    1   60[BANK0 ] unsigned char 
 19197 ;; Return value:  Size  Location     Type
 19198 ;;                  1    wreg      enum E15805
 19199 ;; Registers used:
 19200 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 19201 ;; Tracked objects:
 19202 ;;		On entry : 3F/0
 19203 ;;		On exit  : 3F/0
 19204 ;;		Unchanged: 0/0
 19205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19206 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19207 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19208 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19209 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19210 ;;Total ram usage:       13 bytes
 19211 ;; Hardware stack levels used:    1
 19212 ;; Hardware stack levels required when called:   14
 19213 ;; This function calls:
 19214 ;;		_eMBRegHoldingCB
 19215 ;;		_prveMBError2Exception
 19216 ;; This function is called by:
 19217 ;;		_eMBPoll
 19218 ;; This function uses a non-reentrant model
 19219 ;;
 19220                           
 19221                           	psect	text89
 19222  006AA8                     __ptext89:
 19223                           	callstack 0
 19224  006AA8                     _eMBFuncWriteMultipleHoldingRegister:
 19225                           	callstack 13
 19226                           
 19227                           ;../modbus/functions/mbfuncholding.c: 110: eMBFuncWriteMultipleHoldingRegister( UCHAR * 
      +                          pucFrame, USHORT * usLen );../modbus/functions/mbfuncholding.c: 111: {;../modbus/functio
      +                          ns/mbfuncholding.c: 112:     USHORT usRegAddress;;../modbus/functions/mbfuncholding.c: 1
      +                          13:     USHORT usRegCount;;../modbus/functions/mbfuncholding.c: 114:     UCHAR ucRegByte
      +                          Count;;../modbus/functions/mbfuncholding.c: 116:     eMBException eStatus = MB_EX_NONE;
 19228                           
 19229                           ; BSR set to: 0
 19230                           ;incstack = 0
 19231  006AA8  0E00               	movlw	0
 19232  006AAA  0100               	movlb	0	; force () banked
 19233  006AAC  6F9F               	movwf	eMBFuncWriteMultipleHoldingRegister@eStatus& (0+255),b
 19234                           
 19235                           ; BSR set to: 0
 19236                           ;../modbus/functions/mbfuncholding.c: 117:     eMBErrorCode eRegStatus;;../modbus/functi
      +                          ons/mbfuncholding.c: 119:     if( *usLen >= ( ( 5 ) + 1 ) )
 19237  006AAE  0060  F263  FFD9   	movff	eMBFuncWriteMultipleHoldingRegister@usLen,fsr2l
 19238  006AB4  0060  F267  FFDA   	movff	eMBFuncWriteMultipleHoldingRegister@usLen+1,fsr2h
 19239  006ABA  0E01               	movlw	1
 19240  006ABC  50DB               	movf	plusw2,w,c
 19241  006ABE  E104               	bnz	u11200
 19242  006AC0  0E06               	movlw	6
 19243  006AC2  5CDE               	subwf	postinc2,w,c
 19244  006AC4  A0D8               	btfss	status,0,c
 19245  006AC6  D07D               	goto	l14436
 19246  006AC8                     u11200:
 19247                           
 19248                           ; BSR set to: 0
 19249                           ;../modbus/functions/mbfuncholding.c: 120:     {;../modbus/functions/mbfuncholding.c: 12
      +                          1:         usRegAddress = ( USHORT )( pucFrame[( 1 + 0 )] << 8 );
 19250  006AC8  0100               	movlb	0	; force () banked
 19251  006ACA  EE20 F001          	lfsr	2,1
 19252  006ACE  5196               	movf	eMBFuncWriteMultipleHoldingRegister@pucFrame& (0+255),w,b
 19253  006AD0  26D9               	addwf	fsr2l,f,c
 19254  006AD2  5197               	movf	(eMBFuncWriteMultipleHoldingRegister@pucFrame+1)& (0+255),w,b
 19255  006AD4  22DA               	addwfc	fsr2h,f,c
 19256  006AD6  50DF               	movf	indf2,w,c
 19257  006AD8  0100               	movlb	0	; force () banked
 19258  006ADA  6F9E               	movwf	(eMBFuncWriteMultipleHoldingRegister@usRegAddress+1)& (0+255),b
 19259  006ADC  6B9D               	clrf	eMBFuncWriteMultipleHoldingRegister@usRegAddress& (0+255),b
 19260                           
 19261                           ;../modbus/functions/mbfuncholding.c: 122:         usRegAddress |= ( USHORT )( pucFrame[
      +                          ( 1 + 0 ) + 1] );
 19262  006ADE  0100               	movlb	0	; force () banked
 19263  006AE0  EE20 F002          	lfsr	2,2
 19264  006AE4  5196               	movf	eMBFuncWriteMultipleHoldingRegister@pucFrame& (0+255),w,b
 19265  006AE6  26D9               	addwf	fsr2l,f,c
 19266  006AE8  5197               	movf	(eMBFuncWriteMultipleHoldingRegister@pucFrame+1)& (0+255),w,b
 19267  006AEA  22DA               	addwfc	fsr2h,f,c
 19268  006AEC  50DF               	movf	indf2,w,c
 19269  006AEE  0100               	movlb	0	; force () banked
 19270  006AF0  6F9A               	movwf	??_eMBFuncWriteMultipleHoldingRegister& (0+255),b
 19271  006AF2  519A               	movf	??_eMBFuncWriteMultipleHoldingRegister& (0+255),w,b
 19272  006AF4  0100               	movlb	0	; force () banked
 19273  006AF6  139D               	iorwf	eMBFuncWriteMultipleHoldingRegister@usRegAddress& (0+255),f,b
 19274                           
 19275                           ; BSR set to: 0
 19276                           ;../modbus/functions/mbfuncholding.c: 123:         usRegAddress++;
 19277  006AF8  0100               	movlb	0	; force () banked
 19278  006AFA  4B9D               	infsnz	eMBFuncWriteMultipleHoldingRegister@usRegAddress& (0+255),f,b
 19279  006AFC  2B9E               	incf	(eMBFuncWriteMultipleHoldingRegister@usRegAddress+1)& (0+255),f,b
 19280                           
 19281                           ; BSR set to: 0
 19282                           ;../modbus/functions/mbfuncholding.c: 125:         usRegCount = ( USHORT )( pucFrame[( 1
      +                           + 2 )] << 8 );
 19283  006AFE  0100               	movlb	0	; force () banked
 19284  006B00  EE20 F003          	lfsr	2,3
 19285  006B04  5196               	movf	eMBFuncWriteMultipleHoldingRegister@pucFrame& (0+255),w,b
 19286  006B06  26D9               	addwf	fsr2l,f,c
 19287  006B08  5197               	movf	(eMBFuncWriteMultipleHoldingRegister@pucFrame+1)& (0+255),w,b
 19288  006B0A  22DA               	addwfc	fsr2h,f,c
 19289  006B0C  50DF               	movf	indf2,w,c
 19290  006B0E  0100               	movlb	0	; force () banked
 19291  006B10  6FA2               	movwf	(eMBFuncWriteMultipleHoldingRegister@usRegCount+1)& (0+255),b
 19292  006B12  6BA1               	clrf	eMBFuncWriteMultipleHoldingRegister@usRegCount& (0+255),b
 19293                           
 19294                           ; BSR set to: 0
 19295                           ;../modbus/functions/mbfuncholding.c: 126:         usRegCount |= ( USHORT )( pucFrame[( 
      +                          1 + 2 ) + 1] );
 19296  006B14  0100               	movlb	0	; force () banked
 19297  006B16  EE20 F004          	lfsr	2,4
 19298  006B1A  5196               	movf	eMBFuncWriteMultipleHoldingRegister@pucFrame& (0+255),w,b
 19299  006B1C  26D9               	addwf	fsr2l,f,c
 19300  006B1E  5197               	movf	(eMBFuncWriteMultipleHoldingRegister@pucFrame+1)& (0+255),w,b
 19301  006B20  22DA               	addwfc	fsr2h,f,c
 19302  006B22  50DF               	movf	indf2,w,c
 19303  006B24  0100               	movlb	0	; force () banked
 19304  006B26  6F9A               	movwf	??_eMBFuncWriteMultipleHoldingRegister& (0+255),b
 19305  006B28  519A               	movf	??_eMBFuncWriteMultipleHoldingRegister& (0+255),w,b
 19306  006B2A  0100               	movlb	0	; force () banked
 19307  006B2C  13A1               	iorwf	eMBFuncWriteMultipleHoldingRegister@usRegCount& (0+255),f,b
 19308                           
 19309                           ; BSR set to: 0
 19310                           ;../modbus/functions/mbfuncholding.c: 128:         ucRegByteCount = pucFrame[( 1 + 4 )];
 19311  006B2E  0100               	movlb	0	; force () banked
 19312  006B30  EE20 F005          	lfsr	2,5
 19313  006B34  5196               	movf	eMBFuncWriteMultipleHoldingRegister@pucFrame& (0+255),w,b
 19314  006B36  26D9               	addwf	fsr2l,f,c
 19315  006B38  5197               	movf	(eMBFuncWriteMultipleHoldingRegister@pucFrame+1)& (0+255),w,b
 19316  006B3A  22DA               	addwfc	fsr2h,f,c
 19317  006B3C  50DF               	movf	indf2,w,c
 19318  006B3E  0100               	movlb	0	; force () banked
 19319  006B40  6F9C               	movwf	eMBFuncWriteMultipleHoldingRegister@ucRegByteCount& (0+255),b
 19320                           
 19321                           ; BSR set to: 0
 19322                           ;../modbus/functions/mbfuncholding.c: 130:         if( ( usRegCount >= 1 ) &&
 19323  006B42  0100               	movlb	0	; force () banked
 19324  006B44  51A1               	movf	eMBFuncWriteMultipleHoldingRegister@usRegCount& (0+255),w,b
 19325  006B46  11A2               	iorwf	(eMBFuncWriteMultipleHoldingRegister@usRegCount+1)& (0+255),w,b
 19326  006B48  B4D8               	btfsc	status,2,c
 19327  006B4A  D03B               	goto	l14436
 19328                           
 19329                           ; BSR set to: 0
 19330  006B4C  0100               	movlb	0	; force () banked
 19331  006B4E  51A2               	movf	(eMBFuncWriteMultipleHoldingRegister@usRegCount+1)& (0+255),w,b
 19332  006B50  E138               	bnz	l14438
 19333  006B52  0E79               	movlw	121
 19334  006B54  5DA1               	subwf	eMBFuncWriteMultipleHoldingRegister@usRegCount& (0+255),w,b
 19335  006B56  B0D8               	btfsc	status,0,c
 19336  006B58  D034               	goto	l14436
 19337                           
 19338                           ; BSR set to: 0
 19339  006B5A  0100               	movlb	0	; force () banked
 19340  006B5C  51A1               	movf	eMBFuncWriteMultipleHoldingRegister@usRegCount& (0+255),w,b
 19341  006B5E  25A1               	addwf	eMBFuncWriteMultipleHoldingRegister@usRegCount& (0+255),w,b
 19342  006B60  0100               	movlb	0	; force () banked
 19343  006B62  199C               	xorwf	eMBFuncWriteMultipleHoldingRegister@ucRegByteCount& (0+255),w,b
 19344  006B64  A4D8               	btfss	status,2,c
 19345  006B66  D02D               	goto	l14436
 19346                           
 19347                           ; BSR set to: 0
 19348                           ;../modbus/functions/mbfuncholding.c: 133:         {;../modbus/functions/mbfuncholding.c
      +                          : 135:             eRegStatus =
 19349  006B68  0E06               	movlw	6
 19350  006B6A  0100               	movlb	0	; force () banked
 19351  006B6C  2596               	addwf	eMBFuncWriteMultipleHoldingRegister@pucFrame& (0+255),w,b
 19352  006B6E  0100               	movlb	0	; force () banked
 19353  006B70  6F7D               	movwf	eMBRegHoldingCB@pucRegBuffer& (0+255),b
 19354  006B72  0E00               	movlw	0
 19355  006B74  0100               	movlb	0	; force () banked
 19356  006B76  2197               	addwfc	(eMBFuncWriteMultipleHoldingRegister@pucFrame+1)& (0+255),w,b
 19357  006B78  0100               	movlb	0	; force () banked
 19358  006B7A  6F7E               	movwf	(eMBRegHoldingCB@pucRegBuffer+1)& (0+255),b
 19359  006B7C  C09D  F07F         	movff	eMBFuncWriteMultipleHoldingRegister@usRegAddress,eMBRegHoldingCB@usAddress
 19360  006B80  C09E  F080         	movff	eMBFuncWriteMultipleHoldingRegister@usRegAddress+1,eMBRegHoldingCB@usAddress+1
 19361  006B84  C0A1  F081         	movff	eMBFuncWriteMultipleHoldingRegister@usRegCount,eMBRegHoldingCB@usNRegs
 19362  006B88  C0A2  F082         	movff	eMBFuncWriteMultipleHoldingRegister@usRegCount+1,eMBRegHoldingCB@usNRegs+1
 19363  006B8C  0E01               	movlw	1
 19364  006B8E  0100               	movlb	0	; force () banked
 19365  006B90  6F83               	movwf	eMBRegHoldingCB@eMode& (0+255),b
 19366  006B92  EC19  F012         	call	_eMBRegHoldingCB	;wreg free
 19367  006B96  0100               	movlb	0	; force () banked
 19368  006B98  6FA0               	movwf	eMBFuncWriteMultipleHoldingRegister@eRegStatus& (0+255),b
 19369                           
 19370                           ; BSR set to: 0
 19371                           ;../modbus/functions/mbfuncholding.c: 140:             if( eRegStatus != MB_ENOERR )
 19372  006B9A  0100               	movlb	0	; force () banked
 19373  006B9C  51A0               	movf	eMBFuncWriteMultipleHoldingRegister@eRegStatus& (0+255),w,b
 19374  006B9E  B4D8               	btfsc	status,2,c
 19375  006BA0  D005               	goto	l14434
 19376                           
 19377                           ; BSR set to: 0
 19378                           ;../modbus/functions/mbfuncholding.c: 141:             {;../modbus/functions/mbfuncholdi
      +                          ng.c: 142:                 eStatus = prveMBError2Exception( eRegStatus );
 19379  006BA2  0100               	movlb	0	; force () banked
 19380  006BA4  51A0               	movf	eMBFuncWriteMultipleHoldingRegister@eRegStatus& (0+255),w,b
 19381  006BA6  EC77  F056         	call	_prveMBError2Exception
 19382  006BAA  D00C               	goto	L23
 19383  006BAC                     l14434:
 19384                           
 19385                           ; BSR set to: 0
 19386                           ;../modbus/functions/mbfuncholding.c: 145:             {;../modbus/functions/mbfuncholdi
      +                          ng.c: 150:                 *usLen = ( 1 + 4 );
 19387  006BAC  0060  F263  FFD9   	movff	eMBFuncWriteMultipleHoldingRegister@usLen,fsr2l
 19388  006BB2  0060  F267  FFDA   	movff	eMBFuncWriteMultipleHoldingRegister@usLen+1,fsr2h
 19389  006BB8  0E05               	movlw	5
 19390  006BBA  6EDE               	movwf	postinc2,c
 19391  006BBC  0E00               	movlw	0
 19392  006BBE  6EDD               	movwf	postdec2,c
 19393  006BC0  D003               	goto	l2340
 19394  006BC2                     l14436:
 19395  006BC2                     l14438:
 19396                           
 19397                           ; BSR set to: 0
 19398                           ;../modbus/functions/mbfuncholding.c: 159:     {;../modbus/functions/mbfuncholding.c: 16
      +                          1:         eStatus = MB_EX_ILLEGAL_DATA_VALUE;
 19399  006BC2  0E03               	movlw	3
 19400  006BC4                     L23:
 19401  006BC4  0100               	movlb	0	; force () banked
 19402  006BC6  6F9F               	movwf	eMBFuncWriteMultipleHoldingRegister@eStatus& (0+255),b
 19403  006BC8                     l2340:
 19404                           
 19405                           ; BSR set to: 0
 19406                           ;../modbus/functions/mbfuncholding.c: 163:     return eStatus;
 19407  006BC8  0100               	movlb	0	; force () banked
 19408  006BCA  519F               	movf	eMBFuncWriteMultipleHoldingRegister@eStatus& (0+255),w,b
 19409                           
 19410                           ; BSR set to: 0
 19411  006BCC  0012               	return		;funcret
 19412  006BCE                     __end_of_eMBFuncWriteMultipleHoldingRegister:
 19413                           	callstack 0
 19414                           
 19415 ;; *************** function _prveMBError2Exception *****************
 19416 ;; Defined at:
 19417 ;;		line 117 in file "../modbus/functions/mbutils.c"
 19418 ;; Parameters:    Size  Location     Type
 19419 ;;  eErrorCode      1    wreg     enum E15837
 19420 ;; Auto vars:     Size  Location     Type
 19421 ;;  eErrorCode      1   19[BANK0 ] enum E15837
 19422 ;;  eStatus         1   20[BANK0 ] enum E15805
 19423 ;; Return value:  Size  Location     Type
 19424 ;;                  1    wreg      enum E15805
 19425 ;; Registers used:
 19426 ;;		wreg, status,2, status,0
 19427 ;; Tracked objects:
 19428 ;;		On entry : 3F/0
 19429 ;;		On exit  : 3F/0
 19430 ;;		Unchanged: 0/0
 19431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19433 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19434 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19435 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19436 ;;Total ram usage:        4 bytes
 19437 ;; Hardware stack levels used:    1
 19438 ;; Hardware stack levels required when called:   11
 19439 ;; This function calls:
 19440 ;;		Nothing
 19441 ;; This function is called by:
 19442 ;;		_eMBFuncWriteHoldingRegister
 19443 ;;		_eMBFuncWriteMultipleHoldingRegister
 19444 ;;		_eMBFuncReadHoldingRegister
 19445 ;;		_eMBFuncReadWriteMultipleHoldingRegister
 19446 ;; This function uses a non-reentrant model
 19447 ;;
 19448                           
 19449                           	psect	text90
 19450  00ACEE                     __ptext90:
 19451                           	callstack 0
 19452  00ACEE                     _prveMBError2Exception:
 19453                           	callstack 15
 19454                           
 19455                           ; BSR set to: 0
 19456                           ;incstack = 0
 19457                           ;prveMBError2Exception@eErrorCode stored from wreg
 19458  00ACEE  0100               	movlb	0	; force () banked
 19459  00ACF0  6F73               	movwf	prveMBError2Exception@eErrorCode& (0+255),b
 19460                           
 19461                           ;../modbus/functions/mbutils.c: 117: prveMBError2Exception( eMBErrorCode eErrorCode );..
      +                          /modbus/functions/mbutils.c: 118: {;../modbus/functions/mbutils.c: 119:     eMBException
      +                           eStatus;;../modbus/functions/mbutils.c: 121:     switch ( eErrorCode )
 19462  00ACF2  D00A               	goto	l13422
 19463  00ACF4                     l13412:
 19464                           
 19465                           ; BSR set to: 0
 19466                           ;../modbus/functions/mbutils.c: 124:             eStatus = MB_EX_NONE;
 19467  00ACF4  0E00               	movlw	0
 19468  00ACF6  D005               	goto	L26
 19469  00ACF8                     l13414:
 19470                           
 19471                           ; BSR set to: 0
 19472                           ;../modbus/functions/mbutils.c: 128:             eStatus = MB_EX_ILLEGAL_DATA_ADDRESS;
 19473  00ACF8  0E02               	movlw	2
 19474  00ACFA  D003               	goto	L26
 19475  00ACFC                     l13416:
 19476                           
 19477                           ; BSR set to: 0
 19478                           ;../modbus/functions/mbutils.c: 132:             eStatus = MB_EX_SLAVE_BUSY;
 19479  00ACFC  0E06               	movlw	6
 19480  00ACFE  D001               	goto	L26
 19481  00AD00                     l13418:
 19482                           
 19483                           ; BSR set to: 0
 19484                           ;../modbus/functions/mbutils.c: 136:             eStatus = MB_EX_SLAVE_DEVICE_FAILURE;
 19485  00AD00  0E04               	movlw	4
 19486  00AD02                     L26:
 19487  00AD02  0100               	movlb	0	; force () banked
 19488  00AD04  6F74               	movwf	prveMBError2Exception@eStatus& (0+255),b
 19489                           
 19490                           ;../modbus/functions/mbutils.c: 137:             break;
 19491  00AD06  D014               	goto	l13424
 19492  00AD08                     l13422:
 19493  00AD08  0100               	movlb	0	; force () banked
 19494  00AD0A  5173               	movf	prveMBError2Exception@eErrorCode& (0+255),w,b
 19495  00AD0C  0100               	movlb	0	; force () banked
 19496  00AD0E  6F71               	movwf	??_prveMBError2Exception& (0+255),b
 19497  00AD10  6B72               	clrf	(??_prveMBError2Exception+1)& (0+255),b
 19498                           
 19499                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19500                           ; Switch size 1, requested type "simple"
 19501                           ; Number of cases is 1, Range of values is 0 to 0
 19502                           ; switch strategies available:
 19503                           ; Name         Instructions Cycles
 19504                           ; simple_byte            4     3 (average)
 19505                           ;	Chosen strategy is simple_byte
 19506  00AD12  5172               	movf	(??_prveMBError2Exception+1)& (0+255),w,b
 19507  00AD14  0A00               	xorlw	0	; case 0
 19508  00AD16  A4D8               	btfss	status,2,c
 19509  00AD18  D7F3               	goto	l13418
 19510                           
 19511                           ; BSR set to: 0
 19512                           ; Switch size 1, requested type "simple"
 19513                           ; Number of cases is 3, Range of values is 0 to 7
 19514                           ; switch strategies available:
 19515                           ; Name         Instructions Cycles
 19516                           ; simple_byte           10     6 (average)
 19517                           ;	Chosen strategy is simple_byte
 19518  00AD1A  5171               	movf	??_prveMBError2Exception& (0+255),w,b
 19519  00AD1C  0A00               	xorlw	0	; case 0
 19520  00AD1E  B4D8               	btfsc	status,2,c
 19521  00AD20  D7E9               	goto	l13412
 19522  00AD22  0A01               	xorlw	1	; case 1
 19523  00AD24  B4D8               	btfsc	status,2,c
 19524  00AD26  D7E8               	goto	l13414
 19525  00AD28  0A06               	xorlw	6	; case 7
 19526  00AD2A  B4D8               	btfsc	status,2,c
 19527  00AD2C  D7E7               	goto	l13416
 19528  00AD2E  D7E8               	goto	l13418
 19529  00AD30                     l13424:
 19530                           
 19531                           ; BSR set to: 0
 19532                           ;../modbus/functions/mbutils.c: 140:     return eStatus;
 19533  00AD30  0100               	movlb	0	; force () banked
 19534  00AD32  5174               	movf	prveMBError2Exception@eStatus& (0+255),w,b
 19535                           
 19536                           ; BSR set to: 0
 19537  00AD34  0012               	return		;funcret
 19538  00AD36                     __end_of_prveMBError2Exception:
 19539                           	callstack 0
 19540                           
 19541 ;; *************** function _eMBRegHoldingCB *****************
 19542 ;; Defined at:
 19543 ;;		line 2347 in file "../app/app_src/application.c"
 19544 ;; Parameters:    Size  Location     Type
 19545 ;;  pucRegBuffer    2   29[BANK0 ] PTR unsigned char 
 19546 ;;		 -> ucRTUBuf(256), NULL(0), 
 19547 ;;  usAddress       2   31[BANK0 ] unsigned int 
 19548 ;;  usNRegs         2   33[BANK0 ] unsigned int 
 19549 ;;  eMode           1   35[BANK0 ] enum E16534
 19550 ;; Auto vars:     Size  Location     Type
 19551 ;;  tempptr         2   52[BANK0 ] PTR unsigned int 
 19552 ;;		 -> rx_ctl_mb_regs(120), 
 19553 ;;  tempptr         2   50[BANK0 ] PTR unsigned int 
 19554 ;;		 -> rx_ctl_mb_regs(120), 
 19555 ;;  tempptr         2   48[BANK0 ] PTR unsigned int 
 19556 ;;		 -> tx_ctl_mb_regs(118), 
 19557 ;;  tempptr         2   46[BANK0 ] PTR unsigned int 
 19558 ;;		 -> tx_ctl_mb_regs(118), 
 19559 ;;  tempptr         2   44[BANK0 ] PTR unsigned int 
 19560 ;;		 -> read_write_mb_regs(66), 
 19561 ;;  tempptr         2   42[BANK0 ] PTR unsigned int 
 19562 ;;		 -> read_write_mb_regs(66), 
 19563 ;;  tempptr         2   40[BANK0 ] PTR unsigned int 
 19564 ;;		 -> write_only_mb_regs(36), 
 19565 ;;  tempptr         2   38[BANK0 ] PTR unsigned int 
 19566 ;;		 -> read_only_mb_regs(34), 
 19567 ;; Return value:  Size  Location     Type
 19568 ;;                  1    wreg      enum E16538
 19569 ;; Registers used:
 19570 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 19571 ;; Tracked objects:
 19572 ;;		On entry : 3F/0
 19573 ;;		On exit  : 3E/0
 19574 ;;		Unchanged: 0/0
 19575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19576 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19577 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19578 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19579 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19580 ;;Total ram usage:       25 bytes
 19581 ;; Hardware stack levels used:    1
 19582 ;; Hardware stack levels required when called:   13
 19583 ;; This function calls:
 19584 ;;		_load_on_demand_mb_regs
 19585 ;;		_rw_mb_regs
 19586 ;; This function is called by:
 19587 ;;		_eMBFuncWriteHoldingRegister
 19588 ;;		_eMBFuncWriteMultipleHoldingRegister
 19589 ;;		_eMBFuncReadHoldingRegister
 19590 ;;		_eMBFuncReadWriteMultipleHoldingRegister
 19591 ;; This function uses a non-reentrant model
 19592 ;;
 19593                           
 19594                           	psect	text91
 19595  002432                     __ptext91:
 19596                           	callstack 0
 19597  002432                     _eMBRegHoldingCB:
 19598                           	callstack 13
 19599                           
 19600                           ;../app/app_src/application.c: 2347: eMBRegHoldingCB( UCHAR * pucRegBuffer, USHORT usAdd
      +                          ress, USHORT usNRegs,;../app/app_src/application.c: 2348:                  eMBRegisterMo
      +                          de eMode );../app/app_src/application.c: 2349: {;../app/app_src/application.c: 2350:    
      +                           if((usAddress >= 1)
 19601                           
 19602                           ; BSR set to: 0
 19603                           ;incstack = 0
 19604  002432  0100               	movlb	0	; force () banked
 19605  002434  517F               	movf	eMBRegHoldingCB@usAddress& (0+255),w,b
 19606  002436  1180               	iorwf	(eMBRegHoldingCB@usAddress+1)& (0+255),w,b
 19607  002438  B4D8               	btfsc	status,2,c
 19608  00243A  D03B               	goto	l13252
 19609                           
 19610                           ; BSR set to: 0
 19611  00243C  0100               	movlb	0	; force () banked
 19612  00243E  5181               	movf	eMBRegHoldingCB@usNRegs& (0+255),w,b
 19613  002440  0100               	movlb	0	; force () banked
 19614  002442  257F               	addwf	eMBRegHoldingCB@usAddress& (0+255),w,b
 19615  002444  0100               	movlb	0	; force () banked
 19616  002446  6F84               	movwf	??_eMBRegHoldingCB& (0+255),b
 19617  002448  0100               	movlb	0	; force () banked
 19618  00244A  5182               	movf	(eMBRegHoldingCB@usNRegs+1)& (0+255),w,b
 19619  00244C  0100               	movlb	0	; force () banked
 19620  00244E  2180               	addwfc	(eMBRegHoldingCB@usAddress+1)& (0+255),w,b
 19621  002450  0100               	movlb	0	; force () banked
 19622  002452  6F85               	movwf	(??_eMBRegHoldingCB+1)& (0+255),b
 19623  002454  5185               	movf	(??_eMBRegHoldingCB+1)& (0+255),w,b
 19624  002456  E12D               	bnz	l13252
 19625  002458  0E12               	movlw	18
 19626  00245A  5D84               	subwf	??_eMBRegHoldingCB& (0+255),w,b
 19627  00245C  B0D8               	btfsc	status,0,c
 19628  00245E  D029               	goto	l13252
 19629                           
 19630                           ; BSR set to: 0
 19631                           ;../app/app_src/application.c: 2351:             && ((usAddress + usNRegs) <= 17)){;../a
      +                          pp/app_src/application.c: 2353:         if(MB_REG_READ == eMode){
 19632  002460  0100               	movlb	0	; force () banked
 19633  002462  5183               	movf	eMBRegHoldingCB@eMode& (0+255),w,b
 19634  002464  A4D8               	btfss	status,2,c
 19635  002466  D023               	goto	l13248
 19636                           
 19637                           ; BSR set to: 0
 19638                           ;../app/app_src/application.c: 2354:             uint16_t* tempptr = (uint16_t*)&read_on
      +                          ly_mb_regs[usAddress -
 19639  002468  C07F  F084         	movff	eMBRegHoldingCB@usAddress,??_eMBRegHoldingCB
 19640  00246C  C080  F085         	movff	eMBRegHoldingCB@usAddress+1,??_eMBRegHoldingCB+1
 19641  002470  90D8               	bcf	status,0,c
 19642  002472  0100               	movlb	0	; force () banked
 19643  002474  3784               	rlcf	??_eMBRegHoldingCB& (0+255),f,b
 19644  002476  3785               	rlcf	(??_eMBRegHoldingCB+1)& (0+255),f,b
 19645  002478  0E50               	movlw	low _read_only_mb_regs
 19646  00247A  2584               	addwf	??_eMBRegHoldingCB& (0+255),w,b
 19647  00247C  0100               	movlb	0	; force () banked
 19648  00247E  6F86               	movwf	eMBRegHoldingCB@tempptr& (0+255),b
 19649  002480  0E03               	movlw	high _read_only_mb_regs
 19650  002482  0100               	movlb	0	; force () banked
 19651  002484  2185               	addwfc	(??_eMBRegHoldingCB+1)& (0+255),w,b
 19652  002486  0100               	movlb	0	; force () banked
 19653  002488  6F87               	movwf	(eMBRegHoldingCB@tempptr+1)& (0+255),b
 19654                           
 19655                           ; BSR set to: 0
 19656                           ;../app/app_src/application.c: 2356:             rw_mb_regs(eMode, tempptr, pucRegBuffer
      +                          , usNRegs);
 19657  00248A  C086  F071         	movff	eMBRegHoldingCB@tempptr,rw_mb_regs@tempptr
 19658  00248E  C087  F072         	movff	eMBRegHoldingCB@tempptr+1,rw_mb_regs@tempptr+1
 19659  002492  C07D  F073         	movff	eMBRegHoldingCB@pucRegBuffer,rw_mb_regs@pucRegBuffer
 19660  002496  C07E  F074         	movff	eMBRegHoldingCB@pucRegBuffer+1,rw_mb_regs@pucRegBuffer+1
 19661  00249A  C081  F075         	movff	eMBRegHoldingCB@usNRegs,rw_mb_regs@usNRegs
 19662  00249E  C082  F076         	movff	eMBRegHoldingCB@usNRegs+1,rw_mb_regs@usNRegs+1
 19663  0024A2  0100               	movlb	0	; force () banked
 19664  0024A4  5183               	movf	eMBRegHoldingCB@eMode& (0+255),w,b
 19665  0024A6  EC0A  F037         	call	_rw_mb_regs
 19666                           
 19667                           ; BSR set to: 0
 19668                           ;../app/app_src/application.c: 2357:             return MB_ENOERR;
 19669  0024AA  0E00               	movlw	0
 19670  0024AC  0012               	return	
 19671  0024AE                     l13248:
 19672                           
 19673                           ; BSR set to: 0
 19674                           ;../app/app_src/application.c: 2360:             return MB_EINVAL;
 19675  0024AE  0E02               	movlw	2
 19676  0024B0  0012               	return	
 19677  0024B2                     l13252:
 19678                           
 19679                           ; BSR set to: 0
 19680  0024B2  0EF5               	movlw	245
 19681  0024B4  0100               	movlb	0	; force () banked
 19682  0024B6  5D7F               	subwf	eMBRegHoldingCB@usAddress& (0+255),w,b
 19683  0024B8  0E01               	movlw	1
 19684  0024BA  5980               	subwfb	(eMBRegHoldingCB@usAddress+1)& (0+255),w,b
 19685  0024BC  A0D8               	btfss	status,0,c
 19686  0024BE  D03E               	goto	l13274
 19687                           
 19688                           ; BSR set to: 0
 19689  0024C0  0100               	movlb	0	; force () banked
 19690  0024C2  5181               	movf	eMBRegHoldingCB@usNRegs& (0+255),w,b
 19691  0024C4  0100               	movlb	0	; force () banked
 19692  0024C6  257F               	addwf	eMBRegHoldingCB@usAddress& (0+255),w,b
 19693  0024C8  0100               	movlb	0	; force () banked
 19694  0024CA  6F84               	movwf	??_eMBRegHoldingCB& (0+255),b
 19695  0024CC  0100               	movlb	0	; force () banked
 19696  0024CE  5182               	movf	(eMBRegHoldingCB@usNRegs+1)& (0+255),w,b
 19697  0024D0  0100               	movlb	0	; force () banked
 19698  0024D2  2180               	addwfc	(eMBRegHoldingCB@usAddress+1)& (0+255),w,b
 19699  0024D4  0100               	movlb	0	; force () banked
 19700  0024D6  6F85               	movwf	(??_eMBRegHoldingCB+1)& (0+255),b
 19701  0024D8  0E07               	movlw	7
 19702  0024DA  5D84               	subwf	??_eMBRegHoldingCB& (0+255),w,b
 19703  0024DC  0E02               	movlw	2
 19704  0024DE  5985               	subwfb	(??_eMBRegHoldingCB+1)& (0+255),w,b
 19705  0024E0  B0D8               	btfsc	status,0,c
 19706  0024E2  D02C               	goto	l13274
 19707                           
 19708                           ; BSR set to: 0
 19709                           ;../app/app_src/application.c: 2364:             && ((usAddress + usNRegs) <= (501 + 17)
      +                          )){;../app/app_src/application.c: 2366:         if(MB_REG_WRITE == eMode){
 19710  0024E4  0100               	movlb	0	; force () banked
 19711  0024E6  0583               	decf	eMBRegHoldingCB@eMode& (0+255),w,b
 19712  0024E8  A4D8               	btfss	status,2,c
 19713  0024EA  D026               	goto	l13270
 19714                           
 19715                           ; BSR set to: 0
 19716                           ;../app/app_src/application.c: 2367:             uint16_t* tempptr = (uint16_t*)&write_o
      +                          nly_mb_regs[usAddress -
 19717  0024EC  C07F  F084         	movff	eMBRegHoldingCB@usAddress,??_eMBRegHoldingCB
 19718  0024F0  C080  F085         	movff	eMBRegHoldingCB@usAddress+1,??_eMBRegHoldingCB+1
 19719  0024F4  90D8               	bcf	status,0,c
 19720  0024F6  0100               	movlb	0	; force () banked
 19721  0024F8  3784               	rlcf	??_eMBRegHoldingCB& (0+255),f,b
 19722  0024FA  3785               	rlcf	(??_eMBRegHoldingCB+1)& (0+255),f,b
 19723  0024FC  0E44               	movlw	low (_write_only_mb_regs+64536)
 19724  0024FE  2584               	addwf	??_eMBRegHoldingCB& (0+255),w,b
 19725  002500  0100               	movlb	0	; force () banked
 19726  002502  6F88               	movwf	eMBRegHoldingCB@tempptr_1279& (0+255),b
 19727  002504  0EFF               	movlw	high (_write_only_mb_regs+64536)
 19728  002506  0100               	movlb	0	; force () banked
 19729  002508  2185               	addwfc	(??_eMBRegHoldingCB+1)& (0+255),w,b
 19730  00250A  0100               	movlb	0	; force () banked
 19731  00250C  6F89               	movwf	(eMBRegHoldingCB@tempptr_1279+1)& (0+255),b
 19732                           
 19733                           ; BSR set to: 0
 19734                           ;../app/app_src/application.c: 2369:             rw_mb_regs(eMode, tempptr, pucRegBuffer
      +                          , usNRegs);
 19735  00250E  C088  F071         	movff	eMBRegHoldingCB@tempptr_1279,rw_mb_regs@tempptr
 19736  002512  C089  F072         	movff	eMBRegHoldingCB@tempptr_1279+1,rw_mb_regs@tempptr+1
 19737  002516  C07D  F073         	movff	eMBRegHoldingCB@pucRegBuffer,rw_mb_regs@pucRegBuffer
 19738  00251A  C07E  F074         	movff	eMBRegHoldingCB@pucRegBuffer+1,rw_mb_regs@pucRegBuffer+1
 19739  00251E  C081  F075         	movff	eMBRegHoldingCB@usNRegs,rw_mb_regs@usNRegs
 19740  002522  C082  F076         	movff	eMBRegHoldingCB@usNRegs+1,rw_mb_regs@usNRegs+1
 19741  002526  0100               	movlb	0	; force () banked
 19742  002528  5183               	movf	eMBRegHoldingCB@eMode& (0+255),w,b
 19743  00252A  EC0A  F037         	call	_rw_mb_regs
 19744                           
 19745                           ; BSR set to: 0
 19746                           ;../app/app_src/application.c: 2370:             write_only_mb_regs_update = 1;
 19747  00252E  0E01               	movlw	1
 19748  002530  0101               	movlb	1	; force () banked
 19749  002532  6FE9               	movwf	_write_only_mb_regs_update& (0+255),b
 19750                           
 19751                           ; BSR set to: 1
 19752                           ;../app/app_src/application.c: 2371:             return MB_ENOERR;
 19753  002534  0E00               	movlw	0
 19754  002536  0012               	return	
 19755  002538                     l13270:
 19756                           
 19757                           ; BSR set to: 0
 19758                           ;../app/app_src/application.c: 2374:             return MB_EINVAL;
 19759  002538  0E02               	movlw	2
 19760  00253A  0012               	return	
 19761  00253C                     l13274:
 19762                           
 19763                           ; BSR set to: 0
 19764  00253C  0EE9               	movlw	233
 19765  00253E  0100               	movlb	0	; force () banked
 19766  002540  5D7F               	subwf	eMBRegHoldingCB@usAddress& (0+255),w,b
 19767  002542  0E03               	movlw	3
 19768  002544  5980               	subwfb	(eMBRegHoldingCB@usAddress+1)& (0+255),w,b
 19769  002546  A0D8               	btfss	status,0,c
 19770  002548  D067               	goto	l13308
 19771                           
 19772                           ; BSR set to: 0
 19773  00254A  0100               	movlb	0	; force () banked
 19774  00254C  5181               	movf	eMBRegHoldingCB@usNRegs& (0+255),w,b
 19775  00254E  0100               	movlb	0	; force () banked
 19776  002550  257F               	addwf	eMBRegHoldingCB@usAddress& (0+255),w,b
 19777  002552  0100               	movlb	0	; force () banked
 19778  002554  6F84               	movwf	??_eMBRegHoldingCB& (0+255),b
 19779  002556  0100               	movlb	0	; force () banked
 19780  002558  5182               	movf	(eMBRegHoldingCB@usNRegs+1)& (0+255),w,b
 19781  00255A  0100               	movlb	0	; force () banked
 19782  00255C  2180               	addwfc	(eMBRegHoldingCB@usAddress+1)& (0+255),w,b
 19783  00255E  0100               	movlb	0	; force () banked
 19784  002560  6F85               	movwf	(??_eMBRegHoldingCB+1)& (0+255),b
 19785  002562  0E0A               	movlw	10
 19786  002564  5D84               	subwf	??_eMBRegHoldingCB& (0+255),w,b
 19787  002566  0E04               	movlw	4
 19788  002568  5985               	subwfb	(??_eMBRegHoldingCB+1)& (0+255),w,b
 19789  00256A  B0D8               	btfsc	status,0,c
 19790  00256C  D055               	goto	l13308
 19791                           
 19792                           ; BSR set to: 0
 19793                           ;../app/app_src/application.c: 2378:             && ((usAddress + usNRegs) <= (1001 + 32
      +                          ))){;../app/app_src/application.c: 2379:         if(MB_REG_READ == eMode){
 19794  00256E  0100               	movlb	0	; force () banked
 19795  002570  5183               	movf	eMBRegHoldingCB@eMode& (0+255),w,b
 19796  002572  A4D8               	btfss	status,2,c
 19797  002574  D025               	goto	l13290
 19798                           
 19799                           ; BSR set to: 0
 19800                           ;../app/app_src/application.c: 2380:             uint16_t* tempptr = (uint16_t*)&read_wr
      +                          ite_mb_regs[usAddress -
 19801  002576  C07F  F084         	movff	eMBRegHoldingCB@usAddress,??_eMBRegHoldingCB
 19802  00257A  C080  F085         	movff	eMBRegHoldingCB@usAddress+1,??_eMBRegHoldingCB+1
 19803  00257E  90D8               	bcf	status,0,c
 19804  002580  0100               	movlb	0	; force () banked
 19805  002582  3784               	rlcf	??_eMBRegHoldingCB& (0+255),f,b
 19806  002584  3785               	rlcf	(??_eMBRegHoldingCB+1)& (0+255),f,b
 19807  002586  0EA0               	movlw	low (_read_write_mb_regs+63536)
 19808  002588  2584               	addwf	??_eMBRegHoldingCB& (0+255),w,b
 19809  00258A  0100               	movlb	0	; force () banked
 19810  00258C  6F8A               	movwf	eMBRegHoldingCB@tempptr_1280& (0+255),b
 19811  00258E  0EFA               	movlw	high (_read_write_mb_regs+63536)
 19812  002590  0100               	movlb	0	; force () banked
 19813  002592  2185               	addwfc	(??_eMBRegHoldingCB+1)& (0+255),w,b
 19814  002594  0100               	movlb	0	; force () banked
 19815  002596  6F8B               	movwf	(eMBRegHoldingCB@tempptr_1280+1)& (0+255),b
 19816                           
 19817                           ; BSR set to: 0
 19818                           ;../app/app_src/application.c: 2382:             load_on_demand_mb_regs();
 19819  002598  EC24  F05B         	call	_load_on_demand_mb_regs	;wreg free
 19820                           
 19821                           ;../app/app_src/application.c: 2383:             rw_mb_regs(eMode, tempptr, pucRegBuffer
      +                          , usNRegs);
 19822  00259C  C08A  F071         	movff	eMBRegHoldingCB@tempptr_1280,rw_mb_regs@tempptr
 19823  0025A0  C08B  F072         	movff	eMBRegHoldingCB@tempptr_1280+1,rw_mb_regs@tempptr+1
 19824  0025A4  C07D  F073         	movff	eMBRegHoldingCB@pucRegBuffer,rw_mb_regs@pucRegBuffer
 19825  0025A8  C07E  F074         	movff	eMBRegHoldingCB@pucRegBuffer+1,rw_mb_regs@pucRegBuffer+1
 19826  0025AC  C081  F075         	movff	eMBRegHoldingCB@usNRegs,rw_mb_regs@usNRegs
 19827  0025B0  C082  F076         	movff	eMBRegHoldingCB@usNRegs+1,rw_mb_regs@usNRegs+1
 19828  0025B4  0100               	movlb	0	; force () banked
 19829  0025B6  5183               	movf	eMBRegHoldingCB@eMode& (0+255),w,b
 19830  0025B8  EC0A  F037         	call	_rw_mb_regs
 19831                           
 19832                           ; BSR set to: 0
 19833                           ;../app/app_src/application.c: 2384:             return MB_ENOERR;
 19834  0025BC  0E00               	movlw	0
 19835  0025BE  0012               	return	
 19836  0025C0                     l13290:
 19837                           
 19838                           ; BSR set to: 0
 19839                           ;../app/app_src/application.c: 2386:         if(MB_REG_WRITE == eMode){
 19840  0025C0  0100               	movlb	0	; force () banked
 19841  0025C2  0583               	decf	eMBRegHoldingCB@eMode& (0+255),w,b
 19842  0025C4  A4D8               	btfss	status,2,c
 19843  0025C6  D026               	goto	l13304
 19844                           
 19845                           ; BSR set to: 0
 19846                           ;../app/app_src/application.c: 2387:             uint16_t* tempptr = (uint16_t*)&read_wr
      +                          ite_mb_regs[usAddress -
 19847  0025C8  C07F  F084         	movff	eMBRegHoldingCB@usAddress,??_eMBRegHoldingCB
 19848  0025CC  C080  F085         	movff	eMBRegHoldingCB@usAddress+1,??_eMBRegHoldingCB+1
 19849  0025D0  90D8               	bcf	status,0,c
 19850  0025D2  0100               	movlb	0	; force () banked
 19851  0025D4  3784               	rlcf	??_eMBRegHoldingCB& (0+255),f,b
 19852  0025D6  3785               	rlcf	(??_eMBRegHoldingCB+1)& (0+255),f,b
 19853  0025D8  0EA0               	movlw	low (_read_write_mb_regs+63536)
 19854  0025DA  2584               	addwf	??_eMBRegHoldingCB& (0+255),w,b
 19855  0025DC  0100               	movlb	0	; force () banked
 19856  0025DE  6F8C               	movwf	eMBRegHoldingCB@tempptr_1282& (0+255),b
 19857  0025E0  0EFA               	movlw	high (_read_write_mb_regs+63536)
 19858  0025E2  0100               	movlb	0	; force () banked
 19859  0025E4  2185               	addwfc	(??_eMBRegHoldingCB+1)& (0+255),w,b
 19860  0025E6  0100               	movlb	0	; force () banked
 19861  0025E8  6F8D               	movwf	(eMBRegHoldingCB@tempptr_1282+1)& (0+255),b
 19862                           
 19863                           ; BSR set to: 0
 19864                           ;../app/app_src/application.c: 2389:             rw_mb_regs(eMode, tempptr, pucRegBuffer
      +                          , usNRegs);
 19865  0025EA  C08C  F071         	movff	eMBRegHoldingCB@tempptr_1282,rw_mb_regs@tempptr
 19866  0025EE  C08D  F072         	movff	eMBRegHoldingCB@tempptr_1282+1,rw_mb_regs@tempptr+1
 19867  0025F2  C07D  F073         	movff	eMBRegHoldingCB@pucRegBuffer,rw_mb_regs@pucRegBuffer
 19868  0025F6  C07E  F074         	movff	eMBRegHoldingCB@pucRegBuffer+1,rw_mb_regs@pucRegBuffer+1
 19869  0025FA  C081  F075         	movff	eMBRegHoldingCB@usNRegs,rw_mb_regs@usNRegs
 19870  0025FE  C082  F076         	movff	eMBRegHoldingCB@usNRegs+1,rw_mb_regs@usNRegs+1
 19871  002602  0100               	movlb	0	; force () banked
 19872  002604  5183               	movf	eMBRegHoldingCB@eMode& (0+255),w,b
 19873  002606  EC0A  F037         	call	_rw_mb_regs
 19874                           
 19875                           ; BSR set to: 0
 19876                           ;../app/app_src/application.c: 2390:             read_write_mb_regs_update = 1;
 19877  00260A  0E01               	movlw	1
 19878  00260C  0101               	movlb	1	; force () banked
 19879  00260E  6FE8               	movwf	_read_write_mb_regs_update& (0+255),b
 19880                           
 19881                           ; BSR set to: 1
 19882                           ;../app/app_src/application.c: 2391:             return MB_ENOERR;
 19883  002610  0E00               	movlw	0
 19884  002612  0012               	return	
 19885  002614                     l13304:
 19886                           
 19887                           ; BSR set to: 0
 19888                           ;../app/app_src/application.c: 2394:             return MB_EINVAL;
 19889  002614  0E02               	movlw	2
 19890  002616  0012               	return	
 19891  002618                     l13308:
 19892                           
 19893                           ; BSR set to: 0
 19894  002618  0ED1               	movlw	209
 19895  00261A  0100               	movlb	0	; force () banked
 19896  00261C  5D7F               	subwf	eMBRegHoldingCB@usAddress& (0+255),w,b
 19897  00261E  0E07               	movlw	7
 19898  002620  5980               	subwfb	(eMBRegHoldingCB@usAddress+1)& (0+255),w,b
 19899  002622  A0D8               	btfss	status,0,c
 19900  002624  D065               	goto	l13340
 19901                           
 19902                           ; BSR set to: 0
 19903  002626  0100               	movlb	0	; force () banked
 19904  002628  5181               	movf	eMBRegHoldingCB@usNRegs& (0+255),w,b
 19905  00262A  0100               	movlb	0	; force () banked
 19906  00262C  257F               	addwf	eMBRegHoldingCB@usAddress& (0+255),w,b
 19907  00262E  0100               	movlb	0	; force () banked
 19908  002630  6F84               	movwf	??_eMBRegHoldingCB& (0+255),b
 19909  002632  0100               	movlb	0	; force () banked
 19910  002634  5182               	movf	(eMBRegHoldingCB@usNRegs+1)& (0+255),w,b
 19911  002636  0100               	movlb	0	; force () banked
 19912  002638  2180               	addwfc	(eMBRegHoldingCB@usAddress+1)& (0+255),w,b
 19913  00263A  0100               	movlb	0	; force () banked
 19914  00263C  6F85               	movwf	(??_eMBRegHoldingCB+1)& (0+255),b
 19915  00263E  0E0C               	movlw	12
 19916  002640  5D84               	subwf	??_eMBRegHoldingCB& (0+255),w,b
 19917  002642  0E08               	movlw	8
 19918  002644  5985               	subwfb	(??_eMBRegHoldingCB+1)& (0+255),w,b
 19919  002646  B0D8               	btfsc	status,0,c
 19920  002648  D053               	goto	l13340
 19921                           
 19922                           ; BSR set to: 0
 19923                           ;../app/app_src/application.c: 2398:             && ((usAddress + usNRegs) <= (2001 + 58
      +                          ))){;../app/app_src/application.c: 2399:         if(MB_REG_READ == eMode){
 19924  00264A  0100               	movlb	0	; force () banked
 19925  00264C  5183               	movf	eMBRegHoldingCB@eMode& (0+255),w,b
 19926  00264E  A4D8               	btfss	status,2,c
 19927  002650  D023               	goto	l13322
 19928                           
 19929                           ; BSR set to: 0
 19930                           ;../app/app_src/application.c: 2400:             uint16_t* tempptr = (uint16_t*)&tx_ctl_
      +                          mb_regs[usAddress -
 19931  002652  C07F  F084         	movff	eMBRegHoldingCB@usAddress,??_eMBRegHoldingCB
 19932  002656  C080  F085         	movff	eMBRegHoldingCB@usAddress+1,??_eMBRegHoldingCB+1
 19933  00265A  90D8               	bcf	status,0,c
 19934  00265C  0100               	movlb	0	; force () banked
 19935  00265E  3784               	rlcf	??_eMBRegHoldingCB& (0+255),f,b
 19936  002660  3785               	rlcf	(??_eMBRegHoldingCB+1)& (0+255),f,b
 19937  002662  0EBE               	movlw	low (_tx_ctl_mb_regs+61536)
 19938  002664  2584               	addwf	??_eMBRegHoldingCB& (0+255),w,b
 19939  002666  0100               	movlb	0	; force () banked
 19940  002668  6F8E               	movwf	eMBRegHoldingCB@tempptr_1283& (0+255),b
 19941  00266A  0EF4               	movlw	high (_tx_ctl_mb_regs+61536)
 19942  00266C  0100               	movlb	0	; force () banked
 19943  00266E  2185               	addwfc	(??_eMBRegHoldingCB+1)& (0+255),w,b
 19944  002670  0100               	movlb	0	; force () banked
 19945  002672  6F8F               	movwf	(eMBRegHoldingCB@tempptr_1283+1)& (0+255),b
 19946                           
 19947                           ; BSR set to: 0
 19948                           ;../app/app_src/application.c: 2402:             rw_mb_regs(eMode, tempptr, pucRegBuffer
      +                          , usNRegs);
 19949  002674  C08E  F071         	movff	eMBRegHoldingCB@tempptr_1283,rw_mb_regs@tempptr
 19950  002678  C08F  F072         	movff	eMBRegHoldingCB@tempptr_1283+1,rw_mb_regs@tempptr+1
 19951  00267C  C07D  F073         	movff	eMBRegHoldingCB@pucRegBuffer,rw_mb_regs@pucRegBuffer
 19952  002680  C07E  F074         	movff	eMBRegHoldingCB@pucRegBuffer+1,rw_mb_regs@pucRegBuffer+1
 19953  002684  C081  F075         	movff	eMBRegHoldingCB@usNRegs,rw_mb_regs@usNRegs
 19954  002688  C082  F076         	movff	eMBRegHoldingCB@usNRegs+1,rw_mb_regs@usNRegs+1
 19955  00268C  0100               	movlb	0	; force () banked
 19956  00268E  5183               	movf	eMBRegHoldingCB@eMode& (0+255),w,b
 19957  002690  EC0A  F037         	call	_rw_mb_regs
 19958                           
 19959                           ; BSR set to: 0
 19960                           ;../app/app_src/application.c: 2403:             return MB_ENOERR;
 19961  002694  0E00               	movlw	0
 19962  002696  0012               	return	
 19963  002698                     l13322:
 19964                           
 19965                           ; BSR set to: 0
 19966                           ;../app/app_src/application.c: 2405:         if(MB_REG_WRITE == eMode){
 19967  002698  0100               	movlb	0	; force () banked
 19968  00269A  0583               	decf	eMBRegHoldingCB@eMode& (0+255),w,b
 19969  00269C  A4D8               	btfss	status,2,c
 19970  00269E  D026               	goto	l13336
 19971                           
 19972                           ; BSR set to: 0
 19973                           ;../app/app_src/application.c: 2406:             uint16_t* tempptr = (uint16_t*)&tx_ctl_
      +                          mb_regs[usAddress -
 19974  0026A0  C07F  F084         	movff	eMBRegHoldingCB@usAddress,??_eMBRegHoldingCB
 19975  0026A4  C080  F085         	movff	eMBRegHoldingCB@usAddress+1,??_eMBRegHoldingCB+1
 19976  0026A8  90D8               	bcf	status,0,c
 19977  0026AA  0100               	movlb	0	; force () banked
 19978  0026AC  3784               	rlcf	??_eMBRegHoldingCB& (0+255),f,b
 19979  0026AE  3785               	rlcf	(??_eMBRegHoldingCB+1)& (0+255),f,b
 19980  0026B0  0EBE               	movlw	low (_tx_ctl_mb_regs+61536)
 19981  0026B2  2584               	addwf	??_eMBRegHoldingCB& (0+255),w,b
 19982  0026B4  0100               	movlb	0	; force () banked
 19983  0026B6  6F90               	movwf	eMBRegHoldingCB@tempptr_1284& (0+255),b
 19984  0026B8  0EF4               	movlw	high (_tx_ctl_mb_regs+61536)
 19985  0026BA  0100               	movlb	0	; force () banked
 19986  0026BC  2185               	addwfc	(??_eMBRegHoldingCB+1)& (0+255),w,b
 19987  0026BE  0100               	movlb	0	; force () banked
 19988  0026C0  6F91               	movwf	(eMBRegHoldingCB@tempptr_1284+1)& (0+255),b
 19989                           
 19990                           ; BSR set to: 0
 19991                           ;../app/app_src/application.c: 2408:             rw_mb_regs(eMode, tempptr, pucRegBuffer
      +                          , usNRegs);
 19992  0026C2  C090  F071         	movff	eMBRegHoldingCB@tempptr_1284,rw_mb_regs@tempptr
 19993  0026C6  C091  F072         	movff	eMBRegHoldingCB@tempptr_1284+1,rw_mb_regs@tempptr+1
 19994  0026CA  C07D  F073         	movff	eMBRegHoldingCB@pucRegBuffer,rw_mb_regs@pucRegBuffer
 19995  0026CE  C07E  F074         	movff	eMBRegHoldingCB@pucRegBuffer+1,rw_mb_regs@pucRegBuffer+1
 19996  0026D2  C081  F075         	movff	eMBRegHoldingCB@usNRegs,rw_mb_regs@usNRegs
 19997  0026D6  C082  F076         	movff	eMBRegHoldingCB@usNRegs+1,rw_mb_regs@usNRegs+1
 19998  0026DA  0100               	movlb	0	; force () banked
 19999  0026DC  5183               	movf	eMBRegHoldingCB@eMode& (0+255),w,b
 20000  0026DE  EC0A  F037         	call	_rw_mb_regs
 20001                           
 20002                           ; BSR set to: 0
 20003                           ;../app/app_src/application.c: 2409:             tx_ctl_mb_regs_upadte = 1;
 20004  0026E2  0E01               	movlw	1
 20005  0026E4  0101               	movlb	1	; force () banked
 20006  0026E6  6FE7               	movwf	_tx_ctl_mb_regs_upadte& (0+255),b
 20007                           
 20008                           ; BSR set to: 1
 20009                           ;../app/app_src/application.c: 2410:             return MB_ENOERR;
 20010  0026E8  0E00               	movlw	0
 20011  0026EA  0012               	return	
 20012  0026EC                     l13336:
 20013                           
 20014                           ; BSR set to: 0
 20015                           ;../app/app_src/application.c: 2413:             return MB_EINVAL;
 20016  0026EC  0E02               	movlw	2
 20017  0026EE  0012               	return	
 20018  0026F0                     l13340:
 20019                           
 20020                           ; BSR set to: 0
 20021  0026F0  0EB9               	movlw	185
 20022  0026F2  0100               	movlb	0	; force () banked
 20023  0026F4  5D7F               	subwf	eMBRegHoldingCB@usAddress& (0+255),w,b
 20024  0026F6  0E0B               	movlw	11
 20025  0026F8  5980               	subwfb	(eMBRegHoldingCB@usAddress+1)& (0+255),w,b
 20026  0026FA  A0D8               	btfss	status,0,c
 20027  0026FC  D065               	goto	l713
 20028                           
 20029                           ; BSR set to: 0
 20030  0026FE  0100               	movlb	0	; force () banked
 20031  002700  5181               	movf	eMBRegHoldingCB@usNRegs& (0+255),w,b
 20032  002702  0100               	movlb	0	; force () banked
 20033  002704  257F               	addwf	eMBRegHoldingCB@usAddress& (0+255),w,b
 20034  002706  0100               	movlb	0	; force () banked
 20035  002708  6F84               	movwf	??_eMBRegHoldingCB& (0+255),b
 20036  00270A  0100               	movlb	0	; force () banked
 20037  00270C  5182               	movf	(eMBRegHoldingCB@usNRegs+1)& (0+255),w,b
 20038  00270E  0100               	movlb	0	; force () banked
 20039  002710  2180               	addwfc	(eMBRegHoldingCB@usAddress+1)& (0+255),w,b
 20040  002712  0100               	movlb	0	; force () banked
 20041  002714  6F85               	movwf	(??_eMBRegHoldingCB+1)& (0+255),b
 20042  002716  0EF5               	movlw	245
 20043  002718  5D84               	subwf	??_eMBRegHoldingCB& (0+255),w,b
 20044  00271A  0E0B               	movlw	11
 20045  00271C  5985               	subwfb	(??_eMBRegHoldingCB+1)& (0+255),w,b
 20046  00271E  B0D8               	btfsc	status,0,c
 20047  002720  D053               	goto	l713
 20048                           
 20049                           ; BSR set to: 0
 20050                           ;../app/app_src/application.c: 2417:             && ((usAddress + usNRegs) <= (3001 + 59
      +                          ))){;../app/app_src/application.c: 2418:         if(MB_REG_READ == eMode){
 20051  002722  0100               	movlb	0	; force () banked
 20052  002724  5183               	movf	eMBRegHoldingCB@eMode& (0+255),w,b
 20053  002726  A4D8               	btfss	status,2,c
 20054  002728  D023               	goto	l13354
 20055                           
 20056                           ; BSR set to: 0
 20057                           ;../app/app_src/application.c: 2419:             uint16_t* tempptr = (uint16_t*)&rx_ctl_
      +                          mb_regs[usAddress -
 20058  00272A  C07F  F084         	movff	eMBRegHoldingCB@usAddress,??_eMBRegHoldingCB
 20059  00272E  C080  F085         	movff	eMBRegHoldingCB@usAddress+1,??_eMBRegHoldingCB+1
 20060  002732  90D8               	bcf	status,0,c
 20061  002734  0100               	movlb	0	; force () banked
 20062  002736  3784               	rlcf	??_eMBRegHoldingCB& (0+255),f,b
 20063  002738  3785               	rlcf	(??_eMBRegHoldingCB+1)& (0+255),f,b
 20064  00273A  0E10               	movlw	low (_rx_ctl_mb_regs+59536)
 20065  00273C  2584               	addwf	??_eMBRegHoldingCB& (0+255),w,b
 20066  00273E  0100               	movlb	0	; force () banked
 20067  002740  6F92               	movwf	eMBRegHoldingCB@tempptr_1285& (0+255),b
 20068  002742  0EEE               	movlw	high (_rx_ctl_mb_regs+59536)
 20069  002744  0100               	movlb	0	; force () banked
 20070  002746  2185               	addwfc	(??_eMBRegHoldingCB+1)& (0+255),w,b
 20071  002748  0100               	movlb	0	; force () banked
 20072  00274A  6F93               	movwf	(eMBRegHoldingCB@tempptr_1285+1)& (0+255),b
 20073                           
 20074                           ; BSR set to: 0
 20075                           ;../app/app_src/application.c: 2421:             rw_mb_regs(eMode, tempptr, pucRegBuffer
      +                          , usNRegs);
 20076  00274C  C092  F071         	movff	eMBRegHoldingCB@tempptr_1285,rw_mb_regs@tempptr
 20077  002750  C093  F072         	movff	eMBRegHoldingCB@tempptr_1285+1,rw_mb_regs@tempptr+1
 20078  002754  C07D  F073         	movff	eMBRegHoldingCB@pucRegBuffer,rw_mb_regs@pucRegBuffer
 20079  002758  C07E  F074         	movff	eMBRegHoldingCB@pucRegBuffer+1,rw_mb_regs@pucRegBuffer+1
 20080  00275C  C081  F075         	movff	eMBRegHoldingCB@usNRegs,rw_mb_regs@usNRegs
 20081  002760  C082  F076         	movff	eMBRegHoldingCB@usNRegs+1,rw_mb_regs@usNRegs+1
 20082  002764  0100               	movlb	0	; force () banked
 20083  002766  5183               	movf	eMBRegHoldingCB@eMode& (0+255),w,b
 20084  002768  EC0A  F037         	call	_rw_mb_regs
 20085                           
 20086                           ; BSR set to: 0
 20087                           ;../app/app_src/application.c: 2422:             return MB_ENOERR;
 20088  00276C  0E00               	movlw	0
 20089  00276E  0012               	return	
 20090  002770                     l13354:
 20091                           
 20092                           ; BSR set to: 0
 20093                           ;../app/app_src/application.c: 2424:         if(MB_REG_WRITE == eMode){
 20094  002770  0100               	movlb	0	; force () banked
 20095  002772  0583               	decf	eMBRegHoldingCB@eMode& (0+255),w,b
 20096  002774  A4D8               	btfss	status,2,c
 20097  002776  D026               	goto	l13368
 20098                           
 20099                           ; BSR set to: 0
 20100                           ;../app/app_src/application.c: 2425:             uint16_t* tempptr = (uint16_t*)&rx_ctl_
      +                          mb_regs[usAddress -
 20101  002778  C07F  F084         	movff	eMBRegHoldingCB@usAddress,??_eMBRegHoldingCB
 20102  00277C  C080  F085         	movff	eMBRegHoldingCB@usAddress+1,??_eMBRegHoldingCB+1
 20103  002780  90D8               	bcf	status,0,c
 20104  002782  0100               	movlb	0	; force () banked
 20105  002784  3784               	rlcf	??_eMBRegHoldingCB& (0+255),f,b
 20106  002786  3785               	rlcf	(??_eMBRegHoldingCB+1)& (0+255),f,b
 20107  002788  0E10               	movlw	low (_rx_ctl_mb_regs+59536)
 20108  00278A  2584               	addwf	??_eMBRegHoldingCB& (0+255),w,b
 20109  00278C  0100               	movlb	0	; force () banked
 20110  00278E  6F94               	movwf	eMBRegHoldingCB@tempptr_1286& (0+255),b
 20111  002790  0EEE               	movlw	high (_rx_ctl_mb_regs+59536)
 20112  002792  0100               	movlb	0	; force () banked
 20113  002794  2185               	addwfc	(??_eMBRegHoldingCB+1)& (0+255),w,b
 20114  002796  0100               	movlb	0	; force () banked
 20115  002798  6F95               	movwf	(eMBRegHoldingCB@tempptr_1286+1)& (0+255),b
 20116                           
 20117                           ; BSR set to: 0
 20118                           ;../app/app_src/application.c: 2427:             rw_mb_regs(eMode, tempptr, pucRegBuffer
      +                          , usNRegs);
 20119  00279A  C094  F071         	movff	eMBRegHoldingCB@tempptr_1286,rw_mb_regs@tempptr
 20120  00279E  C095  F072         	movff	eMBRegHoldingCB@tempptr_1286+1,rw_mb_regs@tempptr+1
 20121  0027A2  C07D  F073         	movff	eMBRegHoldingCB@pucRegBuffer,rw_mb_regs@pucRegBuffer
 20122  0027A6  C07E  F074         	movff	eMBRegHoldingCB@pucRegBuffer+1,rw_mb_regs@pucRegBuffer+1
 20123  0027AA  C081  F075         	movff	eMBRegHoldingCB@usNRegs,rw_mb_regs@usNRegs
 20124  0027AE  C082  F076         	movff	eMBRegHoldingCB@usNRegs+1,rw_mb_regs@usNRegs+1
 20125  0027B2  0100               	movlb	0	; force () banked
 20126  0027B4  5183               	movf	eMBRegHoldingCB@eMode& (0+255),w,b
 20127  0027B6  EC0A  F037         	call	_rw_mb_regs
 20128                           
 20129                           ; BSR set to: 0
 20130                           ;../app/app_src/application.c: 2428:             rx_ctl_mb_regs_upadte = 1;
 20131  0027BA  0E01               	movlw	1
 20132  0027BC  0101               	movlb	1	; force () banked
 20133  0027BE  6FE6               	movwf	_rx_ctl_mb_regs_upadte& (0+255),b
 20134                           
 20135                           ; BSR set to: 1
 20136                           ;../app/app_src/application.c: 2429:             return MB_ENOERR;
 20137  0027C0  0E00               	movlw	0
 20138  0027C2  0012               	return	
 20139  0027C4                     l13368:
 20140                           
 20141                           ; BSR set to: 0
 20142                           ;../app/app_src/application.c: 2432:             return MB_EINVAL;
 20143  0027C4  0E02               	movlw	2
 20144  0027C6  0012               	return	
 20145  0027C8                     l713:
 20146                           
 20147                           ; BSR set to: 0
 20148                           ;../app/app_src/application.c: 2435:     return MB_ENOREG;
 20149                           
 20150                           ; BSR set to: 0
 20151  0027C8  0E01               	movlw	1
 20152  0027CA  0012               	return		;funcret
 20153  0027CC                     __end_of_eMBRegHoldingCB:
 20154                           	callstack 0
 20155                           
 20156 ;; *************** function _rw_mb_regs *****************
 20157 ;; Defined at:
 20158 ;;		line 2328 in file "../app/app_src/application.c"
 20159 ;; Parameters:    Size  Location     Type
 20160 ;;  eMode           1    wreg     enum E16534
 20161 ;;  tempptr         2   17[BANK0 ] PTR unsigned int 
 20162 ;;		 -> rx_ctl_mb_regs(120), tx_ctl_mb_regs(118), write_only_mb_regs(36), read_only_mb_regs(34), 
 20163 ;;		 -> read_write_mb_regs(66), 
 20164 ;;  pucRegBuffer    2   19[BANK0 ] PTR unsigned char 
 20165 ;;		 -> ucRTUBuf(256), NULL(0), 
 20166 ;;  usNRegs         2   21[BANK0 ] unsigned int 
 20167 ;; Auto vars:     Size  Location     Type
 20168 ;;  eMode           1   28[BANK0 ] enum E16534
 20169 ;; Return value:  Size  Location     Type
 20170 ;;                  1    wreg      void 
 20171 ;; Registers used:
 20172 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 20173 ;; Tracked objects:
 20174 ;;		On entry : 3F/0
 20175 ;;		On exit  : 3F/0
 20176 ;;		Unchanged: 0/0
 20177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20178 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20179 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20180 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20181 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20182 ;;Total ram usage:       12 bytes
 20183 ;; Hardware stack levels used:    1
 20184 ;; Hardware stack levels required when called:   11
 20185 ;; This function calls:
 20186 ;;		Nothing
 20187 ;; This function is called by:
 20188 ;;		_eMBRegHoldingCB
 20189 ;; This function uses a non-reentrant model
 20190 ;;
 20191                           
 20192                           	psect	text92
 20193  006E14                     __ptext92:
 20194                           	callstack 0
 20195  006E14                     _rw_mb_regs:
 20196                           	callstack 14
 20197                           
 20198                           ;incstack = 0
 20199                           ;rw_mb_regs@eMode stored from wreg
 20200  006E14  0100               	movlb	0	; force () banked
 20201  006E16  6F7C               	movwf	rw_mb_regs@eMode& (0+255),b
 20202                           
 20203                           ;../app/app_src/application.c: 2328: static void rw_mb_regs(eMBRegisterMode eMode, uint1
      +                          6_t* tempptr,;../app/app_src/application.c: 2329:                         UCHAR* pucRegB
      +                          uffer, USHORT usNRegs){;../app/app_src/application.c: 2330:     if(MB_REG_READ == eMode)
      +                          {
 20204  006E18  0100               	movlb	0	; force () banked
 20205  006E1A  517C               	movf	rw_mb_regs@eMode& (0+255),w,b
 20206  006E1C  B4D8               	btfsc	status,2,c
 20207  006E1E  D037               	goto	l12376
 20208  006E20  D03B               	goto	u8780
 20209  006E22                     l12364:
 20210                           
 20211                           ; BSR set to: 0
 20212                           ;../app/app_src/application.c: 2332:                 *pucRegBuffer++ = (*tempptr>>8) & 0
      +                          xFF;
 20213  006E22  0060  F1C7  FFD9   	movff	rw_mb_regs@tempptr,fsr2l
 20214  006E28  0060  F1CB  FFDA   	movff	rw_mb_regs@tempptr+1,fsr2h
 20215  006E2E  006F FF78  F077    	movff	postinc2,??_rw_mb_regs
 20216  006E34  006F FF74  F078    	movff	postdec2,??_rw_mb_regs+1
 20217  006E3A  C078  F077         	movff	??_rw_mb_regs+1,??_rw_mb_regs
 20218  006E3E  0100               	movlb	0	; force () banked
 20219  006E40  6B78               	clrf	(??_rw_mb_regs+1)& (0+255),b
 20220  006E42  5177               	movf	??_rw_mb_regs& (0+255),w,b
 20221  006E44  0060  F1CF  FFD9   	movff	rw_mb_regs@pucRegBuffer,fsr2l
 20222  006E4A  0060  F1D3  FFDA   	movff	rw_mb_regs@pucRegBuffer+1,fsr2h
 20223  006E50  6EDF               	movwf	indf2,c
 20224                           
 20225                           ; BSR set to: 0
 20226  006E52  0100               	movlb	0	; force () banked
 20227  006E54  4B73               	infsnz	rw_mb_regs@pucRegBuffer& (0+255),f,b
 20228  006E56  2B74               	incf	(rw_mb_regs@pucRegBuffer+1)& (0+255),f,b
 20229                           
 20230                           ; BSR set to: 0
 20231                           ;../app/app_src/application.c: 2333:                 *pucRegBuffer++ = *tempptr++ & 0xFF
      +                          ;
 20232  006E58  0060  F1C7  FFD9   	movff	rw_mb_regs@tempptr,fsr2l
 20233  006E5E  0060  F1CB  FFDA   	movff	rw_mb_regs@tempptr+1,fsr2h
 20234  006E64  0060  F1CF  FFE9   	movff	rw_mb_regs@pucRegBuffer,fsr0l
 20235  006E6A  0060  F1D3  FFEA   	movff	rw_mb_regs@pucRegBuffer+1,fsr0h
 20236  006E70  006F FF7F FFEF     	movff	indf2,indf0
 20237                           
 20238                           ; BSR set to: 0
 20239  006E76  0E02               	movlw	2
 20240  006E78  0100               	movlb	0	; force () banked
 20241  006E7A  2771               	addwf	rw_mb_regs@tempptr& (0+255),f,b
 20242  006E7C  0E00               	movlw	0
 20243  006E7E  2372               	addwfc	(rw_mb_regs@tempptr+1)& (0+255),f,b
 20244                           
 20245                           ; BSR set to: 0
 20246  006E80  0100               	movlb	0	; force () banked
 20247  006E82  4B73               	infsnz	rw_mb_regs@pucRegBuffer& (0+255),f,b
 20248  006E84  2B74               	incf	(rw_mb_regs@pucRegBuffer+1)& (0+255),f,b
 20249                           
 20250                           ; BSR set to: 0
 20251                           ;../app/app_src/application.c: 2334:                 usNRegs--;
 20252  006E86  0100               	movlb	0	; force () banked
 20253  006E88  0775               	decf	rw_mb_regs@usNRegs& (0+255),f,b
 20254  006E8A  A0D8               	btfss	status,0,c
 20255  006E8C  0776               	decf	(rw_mb_regs@usNRegs+1)& (0+255),f,b
 20256  006E8E                     l12376:
 20257                           
 20258                           ; BSR set to: 0
 20259                           ;../app/app_src/application.c: 2331:         while(usNRegs){
 20260  006E8E  0100               	movlb	0	; force () banked
 20261  006E90  5175               	movf	rw_mb_regs@usNRegs& (0+255),w,b
 20262  006E92  1176               	iorwf	(rw_mb_regs@usNRegs+1)& (0+255),w,b
 20263  006E94  A4D8               	btfss	status,2,c
 20264  006E96  D7C5               	goto	l12364
 20265  006E98                     u8780:
 20266                           
 20267                           ; BSR set to: 0
 20268                           ;../app/app_src/application.c: 2337:     if(MB_REG_WRITE == eMode){
 20269  006E98  0100               	movlb	0	; force () banked
 20270  006E9A  057C               	decf	rw_mb_regs@eMode& (0+255),w,b
 20271  006E9C  A4D8               	btfss	status,2,c
 20272  006E9E  0012               	return	
 20273  006EA0  D042               	goto	l699
 20274  006EA2                     l12382:
 20275                           
 20276                           ; BSR set to: 0
 20277                           ;../app/app_src/application.c: 2339:             *tempptr = (*pucRegBuffer++ << 8) & 0xF
      +                          F00;
 20278  006EA2  0E00               	movlw	0
 20279  006EA4  0100               	movlb	0	; force () banked
 20280  006EA6  6F77               	movwf	??_rw_mb_regs& (0+255),b
 20281  006EA8  0EFF               	movlw	255
 20282  006EAA  6F78               	movwf	(??_rw_mb_regs+1)& (0+255),b
 20283  006EAC  0060  F1CF  FFD9   	movff	rw_mb_regs@pucRegBuffer,fsr2l
 20284  006EB2  0060  F1D3  FFDA   	movff	rw_mb_regs@pucRegBuffer+1,fsr2h
 20285  006EB8  50DF               	movf	indf2,w,c
 20286  006EBA  6F79               	movwf	(??_rw_mb_regs+2)& (0+255),b
 20287  006EBC  5179               	movf	(??_rw_mb_regs+2)& (0+255),w,b
 20288  006EBE  6F7B               	movwf	(??_rw_mb_regs+4)& (0+255),b
 20289  006EC0  6B7A               	clrf	(??_rw_mb_regs+3)& (0+255),b
 20290  006EC2  5177               	movf	??_rw_mb_regs& (0+255),w,b
 20291  006EC4  177A               	andwf	(??_rw_mb_regs+3)& (0+255),f,b
 20292  006EC6  5178               	movf	(??_rw_mb_regs+1)& (0+255),w,b
 20293  006EC8  177B               	andwf	(??_rw_mb_regs+4)& (0+255),f,b
 20294  006ECA  0060  F1C7  FFD9   	movff	rw_mb_regs@tempptr,fsr2l
 20295  006ED0  0060  F1CB  FFDA   	movff	rw_mb_regs@tempptr+1,fsr2h
 20296  006ED6  0060  F1EB  FFDE   	movff	??_rw_mb_regs+3,postinc2
 20297  006EDC  0060  F1EF  FFDD   	movff	??_rw_mb_regs+4,postdec2
 20298                           
 20299                           ; BSR set to: 0
 20300  006EE2  0100               	movlb	0	; force () banked
 20301  006EE4  4B73               	infsnz	rw_mb_regs@pucRegBuffer& (0+255),f,b
 20302  006EE6  2B74               	incf	(rw_mb_regs@pucRegBuffer+1)& (0+255),f,b
 20303                           
 20304                           ; BSR set to: 0
 20305                           ;../app/app_src/application.c: 2340:             *tempptr++ |= *pucRegBuffer++;
 20306  006EE8  0060  F1CF  FFD9   	movff	rw_mb_regs@pucRegBuffer,fsr2l
 20307  006EEE  0060  F1D3  FFDA   	movff	rw_mb_regs@pucRegBuffer+1,fsr2h
 20308  006EF4  50DF               	movf	indf2,w,c
 20309  006EF6  0100               	movlb	0	; force () banked
 20310  006EF8  6F77               	movwf	??_rw_mb_regs& (0+255),b
 20311  006EFA  5177               	movf	??_rw_mb_regs& (0+255),w,b
 20312  006EFC  0060  F1C7  FFD9   	movff	rw_mb_regs@tempptr,fsr2l
 20313  006F02  0060  F1CB  FFDA   	movff	rw_mb_regs@tempptr+1,fsr2h
 20314  006F08  12DE               	iorwf	postinc2,f,c
 20315  006F0A  0E00               	movlw	0
 20316  006F0C  12DD               	iorwf	postdec2,f,c
 20317  006F0E  0100               	movlb	0	; force () banked
 20318  006F10  4B73               	infsnz	rw_mb_regs@pucRegBuffer& (0+255),f,b
 20319  006F12  2B74               	incf	(rw_mb_regs@pucRegBuffer+1)& (0+255),f,b
 20320                           
 20321                           ; BSR set to: 0
 20322  006F14  0E02               	movlw	2
 20323  006F16  0100               	movlb	0	; force () banked
 20324  006F18  2771               	addwf	rw_mb_regs@tempptr& (0+255),f,b
 20325  006F1A  0E00               	movlw	0
 20326  006F1C  2372               	addwfc	(rw_mb_regs@tempptr+1)& (0+255),f,b
 20327                           
 20328                           ; BSR set to: 0
 20329                           ;../app/app_src/application.c: 2341:             usNRegs--;
 20330  006F1E  0100               	movlb	0	; force () banked
 20331  006F20  0775               	decf	rw_mb_regs@usNRegs& (0+255),f,b
 20332  006F22  A0D8               	btfss	status,0,c
 20333  006F24  0776               	decf	(rw_mb_regs@usNRegs+1)& (0+255),f,b
 20334  006F26                     l699:
 20335                           
 20336                           ; BSR set to: 0
 20337                           ;../app/app_src/application.c: 2338:         while(usNRegs){
 20338  006F26  0100               	movlb	0	; force () banked
 20339  006F28  5175               	movf	rw_mb_regs@usNRegs& (0+255),w,b
 20340  006F2A  1176               	iorwf	(rw_mb_regs@usNRegs+1)& (0+255),w,b
 20341  006F2C  B4D8               	btfsc	status,2,c
 20342  006F2E  0012               	return	
 20343  006F30  D7B8               	goto	l12382
 20344  006F32                     __end_of_rw_mb_regs:
 20345                           	callstack 0
 20346                           
 20347 ;; *************** function _load_on_demand_mb_regs *****************
 20348 ;; Defined at:
 20349 ;;		line 2270 in file "../app/app_src/application.c"
 20350 ;; Parameters:    Size  Location     Type
 20351 ;;		None
 20352 ;; Auto vars:     Size  Location     Type
 20353 ;;  max             2   23[BANK0 ] unsigned int 
 20354 ;;  min             2   21[BANK0 ] unsigned int 
 20355 ;; Return value:  Size  Location     Type
 20356 ;;                  1    wreg      void 
 20357 ;; Registers used:
 20358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20359 ;; Tracked objects:
 20360 ;;		On entry : 3F/0
 20361 ;;		On exit  : 0/0
 20362 ;;		Unchanged: 0/0
 20363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20365 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20367 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20368 ;;Total ram usage:        4 bytes
 20369 ;; Hardware stack levels used:    1
 20370 ;; Hardware stack levels required when called:   12
 20371 ;; This function calls:
 20372 ;;		_get_loop_time
 20373 ;; This function is called by:
 20374 ;;		_eMBRegHoldingCB
 20375 ;; This function uses a non-reentrant model
 20376 ;;
 20377                           
 20378                           	psect	text93
 20379  00B648                     __ptext93:
 20380                           	callstack 0
 20381  00B648                     _load_on_demand_mb_regs:
 20382                           	callstack 13
 20383                           
 20384                           ;../app/app_src/application.c: 2271:     uint16_t min, max;;../app/app_src/application.c
      +                          : 2272:     get_loop_time(&min, &max);
 20385                           
 20386                           ; BSR set to: 0
 20387                           ;incstack = 0
 20388  00B648  0E75               	movlw	low load_on_demand_mb_regs@min
 20389  00B64A  0100               	movlb	0	; force () banked
 20390  00B64C  6F71               	movwf	get_loop_time@min& (0+255),b
 20391  00B64E  0E00               	movlw	high load_on_demand_mb_regs@min
 20392  00B650  6F72               	movwf	(get_loop_time@min+1)& (0+255),b
 20393  00B652  0E77               	movlw	low load_on_demand_mb_regs@max
 20394  00B654  0100               	movlb	0	; force () banked
 20395  00B656  6F73               	movwf	get_loop_time@max& (0+255),b
 20396  00B658  0E00               	movlw	high load_on_demand_mb_regs@max
 20397  00B65A  6F74               	movwf	(get_loop_time@max+1)& (0+255),b
 20398  00B65C  EC11  F05A         	call	_get_loop_time	;wreg free
 20399                           
 20400                           ;../app/app_src/application.c: 2273:     read_write_mb_regs[RW_MB_MIN_LOOP_TIME] = min;
 20401  00B660  C075  F294         	movff	load_on_demand_mb_regs@min,_read_write_mb_regs+36
 20402  00B664  C076  F295         	movff	load_on_demand_mb_regs@min+1,_read_write_mb_regs+37
 20403                           
 20404                           ;../app/app_src/application.c: 2274:     read_write_mb_regs[RW_MB_MAX_LOOP_TIME] = max;
 20405  00B668  C077  F296         	movff	load_on_demand_mb_regs@max,_read_write_mb_regs+38
 20406  00B66C  C078  F297         	movff	load_on_demand_mb_regs@max+1,_read_write_mb_regs+39
 20407  00B670  0012               	return		;funcret
 20408  00B672                     __end_of_load_on_demand_mb_regs:
 20409                           	callstack 0
 20410                           
 20411 ;; *************** function _get_loop_time *****************
 20412 ;; Defined at:
 20413 ;;		line 50 in file "../wdt/wdt_src/wdt.c"
 20414 ;; Parameters:    Size  Location     Type
 20415 ;;  min             2   17[BANK0 ] PTR unsigned int 
 20416 ;;		 -> load_on_demand_mb_regs@min(2), 
 20417 ;;  max             2   19[BANK0 ] PTR unsigned int 
 20418 ;;		 -> load_on_demand_mb_regs@max(2), 
 20419 ;; Auto vars:     Size  Location     Type
 20420 ;;		None
 20421 ;; Return value:  Size  Location     Type
 20422 ;;                  1    wreg      void 
 20423 ;; Registers used:
 20424 ;;		fsr2l, fsr2h
 20425 ;; Tracked objects:
 20426 ;;		On entry : 3F/0
 20427 ;;		On exit  : 0/0
 20428 ;;		Unchanged: 0/0
 20429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20430 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20433 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20434 ;;Total ram usage:        4 bytes
 20435 ;; Hardware stack levels used:    1
 20436 ;; Hardware stack levels required when called:   11
 20437 ;; This function calls:
 20438 ;;		Nothing
 20439 ;; This function is called by:
 20440 ;;		_load_on_demand_mb_regs
 20441 ;; This function uses a non-reentrant model
 20442 ;;
 20443                           
 20444                           	psect	text94
 20445  00B422                     __ptext94:
 20446                           	callstack 0
 20447  00B422                     _get_loop_time:
 20448                           	callstack 13
 20449                           
 20450                           ;../wdt/wdt_src/wdt.c: 51:  *min = min_loop_time;
 20451                           
 20452                           ;incstack = 0
 20453  00B422  0060  F1C7  FFD9   	movff	get_loop_time@min,fsr2l
 20454  00B428  0060  F1CB  FFDA   	movff	get_loop_time@min+1,fsr2h
 20455  00B42E  0060  FBE7  FFDE   	movff	_min_loop_time,postinc2
 20456  00B434  0060  FBEB  FFDD   	movff	_min_loop_time+1,postdec2
 20457                           
 20458                           ;../wdt/wdt_src/wdt.c: 52:     *max = max_loop_time;
 20459  00B43A  0060  F1CF  FFD9   	movff	get_loop_time@max,fsr2l
 20460  00B440  0060  F1D3  FFDA   	movff	get_loop_time@max+1,fsr2h
 20461  00B446  0060  F8F3  FFDE   	movff	_max_loop_time,postinc2
 20462  00B44C  0060  F8F7  FFDD   	movff	_max_loop_time+1,postdec2
 20463  00B452  0012               	return		;funcret
 20464  00B454                     __end_of_get_loop_time:
 20465                           	callstack 0
 20466                           
 20467 ;; *************** function _UART_error_handler *****************
 20468 ;; Defined at:
 20469 ;;		line 309 in file "../app/app_src/application.c"
 20470 ;; Parameters:    Size  Location     Type
 20471 ;;		None
 20472 ;; Auto vars:     Size  Location     Type
 20473 ;;  temp            2  [STACK] volatile int 
 20474 ;; Return value:  Size  Location     Type
 20475 ;;                  1  [STACK] void 
 20476 ;; Registers used:
 20477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
 20478 ;; Tracked objects:
 20479 ;;		On entry : 0/3D
 20480 ;;		On exit  : 3F/3D
 20481 ;;		Unchanged: 0/0
 20482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20487 ;;Total ram usage:        0 bytes
 20488 ;; Hardware stack levels used:    1
 20489 ;; Hardware stack levels required when called:   12
 20490 ;; This function calls:
 20491 ;;		_UART1_Read
 20492 ;;		_UART1_is_rx_ready
 20493 ;; This function is called by:
 20494 ;;		_bootLoadApplication
 20495 ;;		_MBRTUStack
 20496 ;;		_UART1_Receive_ISR
 20497 ;; This function uses a reentrant model
 20498 ;;
 20499                           
 20500                           	psect	text95
 20501  00B274                     __ptext95:
 20502                           	callstack 0
 20503  00B274                     _UART_error_handler:
 20504                           	callstack 0
 20505                           
 20506                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20507  00B274  52E6               	movf	postinc1,f,c
 20508  00B276  52E6               	movf	postinc1,f,c
 20509                           
 20510                           ;../app/app_src/application.c: 311:     volatile temp = U1RXB;
 20511                           
 20512                           ;incstack = 0
 20513  00B278  013D               	movlb	61	; force () banked
 20514  00B27A  51E8               	movf	232,w,b	;volatile
 20515  00B27C  6E0B               	movwf	(btemp+10)^0,c
 20516  00B27E  6A0C               	clrf	(btemp+11)^0,c
 20517                           
 20518                           ;stkvar	UART_error_handler@temp @ sp[(-2)+0]
 20519  00B280  0EFE               	movlw	-2
 20520  00B282  0060  F02F  FFE3   	movff	btemp+10,plusw1
 20521  00B288  0EFF               	movlw	-1
 20522  00B28A  0060  F033  FFE3   	movff	btemp+11,plusw1
 20523                           
 20524                           ;../app/app_src/application.c: 313:     while(UART1_is_rx_ready()){
 20525  00B290  D002               	goto	l15922
 20526  00B292                     l15920:
 20527                           
 20528                           ; BSR set to: 0
 20529                           ;../app/app_src/application.c: 314:         UART1_Read();
 20530  00B292  EC37  F052         	call	_UART1_Read	;wreg free
 20531  00B296                     l15922:
 20532                           
 20533                           ;../app/app_src/application.c: 313:     while(UART1_is_rx_ready()){
 20534  00B296  EC0A  F05E         	call	_UART1_is_rx_ready	;wreg free
 20535  00B29A  5001               	movf	btemp^0,w,c
 20536  00B29C  0100               	movlb	0	; force () banked
 20537  00B29E  A4D8               	btfss	status,2,c
 20538  00B2A0  D7F8               	goto	l15920
 20539                           
 20540                           ; BSR set to: 0
 20541                           ;../app/app_src/application.c: 316:     U1ERRIRbits.RXFOIF = 0;
 20542  00B2A2  013D               	movlb	61	; force () banked
 20543  00B2A4  93F9               	bcf	249,1,b	;volatile
 20544                           
 20545                           ; BSR set to: 61
 20546                           ; _UART_error_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 20547  00B2A6  52E5               	movf	postdec1,f,c
 20548  00B2A8  52E5               	movf	postdec1,f,c
 20549  00B2AA  0012               	return		;funcret
 20550  00B2AC                     __end_of_UART_error_handler:
 20551                           	callstack 0
 20552                           
 20553 ;; *************** function _UART1_is_rx_ready *****************
 20554 ;; Defined at:
 20555 ;;		line 169 in file "mcc_generated_files/uart1.c"
 20556 ;; Parameters:    Size  Location     Type
 20557 ;;		None
 20558 ;; Auto vars:     Size  Location     Type
 20559 ;;		None
 20560 ;; Return value:  Size  Location     Type
 20561 ;;                  1  [STACK] _Bool 
 20562 ;; Registers used:
 20563 ;;		wreg, status,2, btemp
 20564 ;; Tracked objects:
 20565 ;;		On entry : 3/1
 20566 ;;		On exit  : 0/0
 20567 ;;		Unchanged: 0/0
 20568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20573 ;;Total ram usage:        0 bytes
 20574 ;; Hardware stack levels used:    1
 20575 ;; Hardware stack levels required when called:   11
 20576 ;; This function calls:
 20577 ;;		Nothing
 20578 ;; This function is called by:
 20579 ;;		_UART_error_handler
 20580 ;;		_MBRTUStack
 20581 ;; This function uses a reentrant model
 20582 ;;
 20583                           
 20584                           	psect	text96
 20585  00BC14                     __ptext96:
 20586                           	callstack 0
 20587  00BC14                     _UART1_is_rx_ready:
 20588                           	callstack 2
 20589                           
 20590                           ;mcc_generated_files/uart1.c: 171:     return (uart1RxCount ? 1 : 0);
 20591                           
 20592                           ; BSR set to: 61
 20593                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20594                           ;incstack = 0
 20595  00BC14  0101               	movlb	1	; force () banked
 20596  00BC16  51E1               	movf	_uart1RxCount& (0+255),w,b	;volatile
 20597  00BC18  B4D8               	btfsc	status,2,c
 20598  00BC1A  D003               	goto	u12190
 20599  00BC1C  6A01               	clrf	btemp^0,c
 20600  00BC1E  2A01               	incf	btemp^0,f,c
 20601  00BC20  0012               	return	
 20602  00BC22                     u12190:
 20603  00BC22  6A01               	clrf	btemp^0,c
 20604                           
 20605                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 20606  00BC24  0012               	return		;funcret
 20607  00BC26                     __end_of_UART1_is_rx_ready:
 20608                           	callstack 0
 20609                           
 20610 ;; *************** function _UART1_Read *****************
 20611 ;; Defined at:
 20612 ;;		line 188 in file "mcc_generated_files/uart1.c"
 20613 ;; Parameters:    Size  Location     Type
 20614 ;;		None
 20615 ;; Auto vars:     Size  Location     Type
 20616 ;;  readValue       1  [STACK] unsigned char 
 20617 ;; Return value:  Size  Location     Type
 20618 ;;                  1  [STACK] unsigned char 
 20619 ;; Registers used:
 20620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
 20621 ;; Tracked objects:
 20622 ;;		On entry : 0/0
 20623 ;;		On exit  : 3F/39
 20624 ;;		Unchanged: 0/0
 20625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20630 ;;Total ram usage:        0 bytes
 20631 ;; Hardware stack levels used:    1
 20632 ;; Hardware stack levels required when called:   11
 20633 ;; This function calls:
 20634 ;;		Nothing
 20635 ;; This function is called by:
 20636 ;;		_UART_error_handler
 20637 ;;		_xMBPortSerialGetByte
 20638 ;; This function uses a reentrant model
 20639 ;;
 20640                           
 20641                           	psect	text97
 20642  00A46E                     __ptext97:
 20643                           	callstack 0
 20644  00A46E                     _UART1_Read:
 20645                           	callstack 0
 20646                           
 20647                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20648  00A46E  52E6               	movf	postinc1,f,c
 20649                           
 20650                           ;mcc_generated_files/uart1.c: 190:     uint8_t readValue = 0;
 20651                           ;stkvar	UART1_Read@readValue @ sp[(-1)+0]
 20652                           
 20653                           ;incstack = 0
 20654  00A470  0EFF               	movlw	-1
 20655  00A472  6AE3               	clrf	plusw1,c
 20656  00A474                     l15098:
 20657                           
 20658                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 20659  00A474  0101               	movlb	1	; force () banked
 20660  00A476  51E1               	movf	_uart1RxCount& (0+255),w,b	;volatile
 20661  00A478  B4D8               	btfsc	status,2,c
 20662  00A47A  D7FC               	goto	l15098
 20663                           
 20664                           ; BSR set to: 1
 20665                           ;mcc_generated_files/uart1.c: 196:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 20666  00A47C  0E00               	movlw	low _uart1RxStatusBuffer
 20667  00A47E  0100               	movlb	0	; force () banked
 20668  00A480  25DA               	addwf	_uart1RxTail& (0+255),w,b	;volatile
 20669  00A482  6ED9               	movwf	fsr2l,c
 20670  00A484  6ADA               	clrf	fsr2h,c
 20671  00A486  0E04               	movlw	high _uart1RxStatusBuffer
 20672  00A488  22DA               	addwfc	fsr2h,f,c
 20673  00A48A  50DF               	movf	indf2,w,c
 20674  00A48C  0102               	movlb	2	; force () banked
 20675  00A48E  6F58               	movwf	_uart1RxLastError& (0+255),b	;volatile
 20676                           
 20677                           ; BSR set to: 2
 20678                           ;mcc_generated_files/uart1.c: 198:     readValue = uart1RxBuffer[uart1RxTail++];
 20679  00A490  0E00               	movlw	low _uart1RxBuffer
 20680  00A492  0100               	movlb	0	; force () banked
 20681  00A494  25DA               	addwf	_uart1RxTail& (0+255),w,b	;volatile
 20682  00A496  6ED9               	movwf	fsr2l,c
 20683  00A498  6ADA               	clrf	fsr2h,c
 20684  00A49A  0E05               	movlw	high _uart1RxBuffer
 20685  00A49C  22DA               	addwfc	fsr2h,f,c
 20686  00A49E  50DF               	movf	indf2,w,c
 20687  00A4A0  6E0C               	movwf	(btemp+11)^0,c
 20688                           
 20689                           ;stkvar	UART1_Read@readValue @ sp[(-1)+0]
 20690  00A4A2  0EFF               	movlw	-1
 20691  00A4A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 20692                           
 20693                           ; BSR set to: 0
 20694  00A4AA  0100               	movlb	0	; force () banked
 20695  00A4AC  2BDA               	incf	_uart1RxTail& (0+255),f,b	;volatile
 20696                           
 20697                           ; BSR set to: 0
 20698                           ;mcc_generated_files/uart1.c: 199:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 20699  00A4AE  0E3F               	movlw	63
 20700  00A4B0  0100               	movlb	0	; force () banked
 20701  00A4B2  65DA               	cpfsgt	_uart1RxTail& (0+255),b
 20702  00A4B4  D002               	goto	l1932
 20703                           
 20704                           ; BSR set to: 0
 20705                           ;mcc_generated_files/uart1.c: 200:     {;mcc_generated_files/uart1.c: 201:         uart1
      +                          RxTail = 0;
 20706  00A4B6  0100               	movlb	0	; force () banked
 20707  00A4B8  6BDA               	clrf	_uart1RxTail& (0+255),b	;volatile
 20708  00A4BA                     l1932:
 20709                           
 20710                           ; BSR set to: 0
 20711                           ;mcc_generated_files/uart1.c: 203:     PIE3bits.U1RXIE = 0;
 20712  00A4BA  0139               	movlb	57	; force () banked
 20713  00A4BC  9793               	bcf	147,3,b	;volatile
 20714                           
 20715                           ; BSR set to: 57
 20716                           ;mcc_generated_files/uart1.c: 204:     uart1RxCount--;
 20717  00A4BE  0101               	movlb	1	; force () banked
 20718  00A4C0  07E1               	decf	_uart1RxCount& (0+255),f,b	;volatile
 20719                           
 20720                           ; BSR set to: 1
 20721                           ;mcc_generated_files/uart1.c: 205:     PIE3bits.U1RXIE = 1;
 20722  00A4C2  0139               	movlb	57	; force () banked
 20723  00A4C4  8793               	bsf	147,3,b	;volatile
 20724                           
 20725                           ; BSR set to: 57
 20726                           ;mcc_generated_files/uart1.c: 207:     return readValue;
 20727                           ;stkvar	UART1_Read@readValue @ sp[(-1)+0]
 20728  00A4C6  0EFF               	movlw	-1
 20729  00A4C8  006F FF8C  F001    	movff	plusw1,btemp
 20730                           
 20731                           ; BSR set to: 57
 20732                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 20733  00A4CE  52E5               	movf	postdec1,f,c
 20734  00A4D0  0012               	return		;funcret
 20735  00A4D2                     __end_of_UART1_Read:
 20736                           	callstack 0
 20737                           
 20738 ;; *************** function _UART1_is_tx_ready *****************
 20739 ;; Defined at:
 20740 ;;		line 174 in file "mcc_generated_files/uart1.c"
 20741 ;; Parameters:    Size  Location     Type
 20742 ;;		None
 20743 ;; Auto vars:     Size  Location     Type
 20744 ;;		None
 20745 ;; Return value:  Size  Location     Type
 20746 ;;                  1    wreg      _Bool 
 20747 ;; Registers used:
 20748 ;;		wreg, status,2
 20749 ;; Tracked objects:
 20750 ;;		On entry : 3F/1
 20751 ;;		On exit  : 3F/2
 20752 ;;		Unchanged: 0/0
 20753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20758 ;;Total ram usage:        0 bytes
 20759 ;; Hardware stack levels used:    1
 20760 ;; Hardware stack levels required when called:   11
 20761 ;; This function calls:
 20762 ;;		Nothing
 20763 ;; This function is called by:
 20764 ;;		_MBRTUStack
 20765 ;; This function uses a non-reentrant model
 20766 ;;
 20767                           
 20768                           	psect	text98
 20769  00BC38                     __ptext98:
 20770                           	callstack 0
 20771  00BC38                     _UART1_is_tx_ready:
 20772                           	callstack 17
 20773                           
 20774                           ;mcc_generated_files/uart1.c: 176:     return (uart1TxBufferRemaining ? 1 : 0);
 20775                           
 20776                           ; BSR set to: 57
 20777                           ;incstack = 0
 20778  00BC38  0102               	movlb	2	; force () banked
 20779  00BC3A  51F4               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 20780  00BC3C  B4D8               	btfsc	status,2,c
 20781  00BC3E  D002               	goto	u12850
 20782  00BC40  0E01               	movlw	1
 20783  00BC42  0012               	return	
 20784  00BC44                     u12850:
 20785  00BC44  0E00               	movlw	0
 20786                           
 20787                           ; BSR set to: 2
 20788  00BC46  0012               	return		;funcret
 20789  00BC48                     __end_of_UART1_is_tx_ready:
 20790                           	callstack 0
 20791                           
 20792 ;; *************** function _SYS_TaskHandler *****************
 20793 ;; Defined at:
 20794 ;;		line 67 in file "../sys/sys_src/sys.c"
 20795 ;; Parameters:    Size  Location     Type
 20796 ;;		None
 20797 ;; Auto vars:     Size  Location     Type
 20798 ;;		None
 20799 ;; Return value:  Size  Location     Type
 20800 ;;                  1    wreg      void 
 20801 ;; Registers used:
 20802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 20803 ;; Tracked objects:
 20804 ;;		On entry : 0/0
 20805 ;;		On exit  : 3E/0
 20806 ;;		Unchanged: 0/0
 20807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20812 ;;Total ram usage:        0 bytes
 20813 ;; Hardware stack levels used:    1
 20814 ;; Hardware stack levels required when called:   21
 20815 ;; This function calls:
 20816 ;;		_NWK_TaskHandler
 20817 ;;		_PHY_TaskHandler
 20818 ;;		_SYS_TimerTaskHandler
 20819 ;; This function is called by:
 20820 ;;		_main
 20821 ;; This function uses a non-reentrant model
 20822 ;;
 20823                           
 20824                           	psect	text99
 20825  00BC86                     __ptext99:
 20826                           	callstack 0
 20827  00BC86                     _SYS_TaskHandler:
 20828                           	callstack 9
 20829                           
 20830                           ;../sys/sys_src/sys.c: 69:   PHY_TaskHandler();
 20831                           
 20832                           ; BSR set to: 2
 20833                           ;incstack = 0
 20834  00BC86  ECAC  F05E         	call	_PHY_TaskHandler	;wreg free
 20835                           
 20836                           ;../sys/sys_src/sys.c: 70:   NWK_TaskHandler();
 20837  00BC8A  EC51  F05E         	call	_NWK_TaskHandler	;wreg free
 20838                           
 20839                           ; BSR set to: 0
 20840                           ;../sys/sys_src/sys.c: 71:   SYS_TimerTaskHandler();
 20841  00BC8E  ECE7  F035         	call	_SYS_TimerTaskHandler	;wreg free
 20842  00BC92  0012               	return		;funcret
 20843  00BC94                     __end_of_SYS_TaskHandler:
 20844                           	callstack 0
 20845                           
 20846 ;; *************** function _SYS_TimerTaskHandler *****************
 20847 ;; Defined at:
 20848 ;;		line 112 in file "../sys/sys_src/sysTimer.c"
 20849 ;; Parameters:    Size  Location     Type
 20850 ;;		None
 20851 ;; Auto vars:     Size  Location     Type
 20852 ;;  timer           2   49[BANK0 ] PTR struct SYS_Timer_t
 20853 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 20854 ;;  elapsed         4   45[BANK0 ] unsigned long 
 20855 ;;  cnt             1   44[BANK0 ] unsigned char 
 20856 ;; Return value:  Size  Location     Type
 20857 ;;                  1    wreg      void 
 20858 ;; Registers used:
 20859 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20860 ;; Tracked objects:
 20861 ;;		On entry : 3F/0
 20862 ;;		On exit  : 3E/0
 20863 ;;		Unchanged: 0/0
 20864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20866 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20867 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20868 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20869 ;;Total ram usage:       11 bytes
 20870 ;; Hardware stack levels used:    1
 20871 ;; Hardware stack levels required when called:   14
 20872 ;; This function calls:
 20873 ;;		_nwkRxDuplicateRejectionTimerHandler
 20874 ;;		_nwkTxAckWaitTimerHandler
 20875 ;;		_nwkTxDelayTimerHandler
 20876 ;;		_placeTimer
 20877 ;; This function is called by:
 20878 ;;		_SYS_TaskHandler
 20879 ;; This function uses a non-reentrant model
 20880 ;;
 20881                           
 20882                           	psect	text100
 20883  006BCE                     __ptext100:
 20884                           	callstack 0
 20885  006BCE                     _SYS_TimerTaskHandler:
 20886                           	callstack 15
 20887                           
 20888                           ;../sys/sys_src/sysTimer.c: 114:     uint32_t elapsed;;../sys/sys_src/sysTimer.c: 115:  
      +                             uint8_t cnt;;../sys/sys_src/sysTimer.c: 117:     if (0 == halTimerIrqCount){
 20889                           
 20890                           ;incstack = 0
 20891  006BCE  0101               	movlb	1	; force () banked
 20892  006BD0  51D9               	movf	_halTimerIrqCount& (0+255),w,b	;volatile
 20893  006BD2  11DA               	iorwf	(_halTimerIrqCount+1)& (0+255),w,b	;volatile
 20894  006BD4  B4D8               	btfsc	status,2,c
 20895  006BD6  0012               	return	
 20896                           
 20897                           ; BSR set to: 1
 20898                           ;../sys/sys_src/sysTimer.c: 121:     PIE3bits.TMR0IE = 0;
 20899                           
 20900                           ;../sys/sys_src/sysTimer.c: 119:     }
 20901  006BD8  0139               	movlb	57	; force () banked
 20902  006BDA  9F93               	bcf	147,7,b	;volatile
 20903                           
 20904                           ;../sys/sys_src/sysTimer.c: 122:     cnt = halTimerIrqCount;
 20905  006BDC  C1D9  F08C         	movff	_halTimerIrqCount,SYS_TimerTaskHandler@cnt	;volatile
 20906                           
 20907                           ; BSR set to: 57
 20908                           ;../sys/sys_src/sysTimer.c: 123:     halTimerIrqCount = 0;
 20909  006BE0  0E00               	movlw	0
 20910  006BE2  0101               	movlb	1	; force () banked
 20911  006BE4  6FDA               	movwf	(_halTimerIrqCount+1)& (0+255),b	;volatile
 20912  006BE6  0E00               	movlw	0
 20913  006BE8  6FD9               	movwf	_halTimerIrqCount& (0+255),b	;volatile
 20914                           
 20915                           ; BSR set to: 1
 20916                           ;../sys/sys_src/sysTimer.c: 124:     PIE3bits.TMR0IE = 1;
 20917  006BEA  0139               	movlb	57	; force () banked
 20918  006BEC  8F93               	bsf	147,7,b	;volatile
 20919                           
 20920                           ;../sys/sys_src/sysTimer.c: 126:     elapsed = cnt * 1ul;
 20921  006BEE  0100               	movlb	0	; force () banked
 20922  006BF0  518C               	movf	SYS_TimerTaskHandler@cnt& (0+255),w,b
 20923  006BF2  0100               	movlb	0	; force () banked
 20924  006BF4  6F8D               	movwf	SYS_TimerTaskHandler@elapsed& (0+255),b
 20925  006BF6  6B8E               	clrf	(SYS_TimerTaskHandler@elapsed+1)& (0+255),b
 20926  006BF8  6B8F               	clrf	(SYS_TimerTaskHandler@elapsed+2)& (0+255),b
 20927  006BFA  6B90               	clrf	(SYS_TimerTaskHandler@elapsed+3)& (0+255),b
 20928                           
 20929                           ;../sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
 20930  006BFC  D04D               	goto	u18699
 20931  006BFE                     l20016:
 20932                           
 20933                           ; BSR set to: 0
 20934                           ;../sys/sys_src/sysTimer.c: 129:     {;../sys/sys_src/sysTimer.c: 130:         SYS_Timer
      +                          _t *timer = timers;
 20935  006BFE  C0D1  F091         	movff	_timers,SYS_TimerTaskHandler@timer
 20936  006C02  C0D2  F092         	movff	_timers+1,SYS_TimerTaskHandler@timer+1
 20937                           
 20938                           ; BSR set to: 0
 20939                           ;../sys/sys_src/sysTimer.c: 132:         elapsed -= timers->timeout;
 20940  006C06  0100               	movlb	0	; force () banked
 20941  006C08  EE20 F002          	lfsr	2,2
 20942  006C0C  51D1               	movf	_timers& (0+255),w,b
 20943  006C0E  26D9               	addwf	fsr2l,f,c
 20944  006C10  51D2               	movf	(_timers+1)& (0+255),w,b
 20945  006C12  22DA               	addwfc	fsr2h,f,c
 20946  006C14  50DE               	movf	postinc2,w,c
 20947  006C16  0100               	movlb	0	; force () banked
 20948  006C18  5F8D               	subwf	SYS_TimerTaskHandler@elapsed& (0+255),f,b
 20949  006C1A  50DE               	movf	postinc2,w,c
 20950  006C1C  5B8E               	subwfb	(SYS_TimerTaskHandler@elapsed+1)& (0+255),f,b
 20951  006C1E  50DE               	movf	postinc2,w,c
 20952  006C20  5B8F               	subwfb	(SYS_TimerTaskHandler@elapsed+2)& (0+255),f,b
 20953  006C22  50DD               	movf	postdec2,w,c
 20954  006C24  5B90               	subwfb	(SYS_TimerTaskHandler@elapsed+3)& (0+255),f,b
 20955                           
 20956                           ;../sys/sys_src/sysTimer.c: 133:         timers = timers->next;
 20957  006C26  0060  F347  FFD9   	movff	_timers,fsr2l
 20958  006C2C  0060  F34B  FFDA   	movff	_timers+1,fsr2h
 20959  006C32  006F FF78  F0D1    	movff	postinc2,_timers
 20960  006C38  006F FF74  F0D2    	movff	postdec2,_timers+1
 20961                           
 20962                           ; BSR set to: 0
 20963                           ;../sys/sys_src/sysTimer.c: 134:         if (SYS_TIMER_PERIODIC_MODE == timer->mode)
 20964  006C3E  0100               	movlb	0	; force () banked
 20965  006C40  EE20 F00A          	lfsr	2,10
 20966  006C44  5191               	movf	SYS_TimerTaskHandler@timer& (0+255),w,b
 20967  006C46  26D9               	addwf	fsr2l,f,c
 20968  006C48  5192               	movf	(SYS_TimerTaskHandler@timer+1)& (0+255),w,b
 20969  006C4A  22DA               	addwfc	fsr2h,f,c
 20970  006C4C  04DE               	decf	postinc2,w,c
 20971  006C4E  A4D8               	btfss	status,2,c
 20972  006C50  D006               	goto	l20024
 20973                           
 20974                           ; BSR set to: 0
 20975                           ;../sys/sys_src/sysTimer.c: 135:           placeTimer(timer);
 20976  006C52  C091  F071         	movff	SYS_TimerTaskHandler@timer,placeTimer@timer
 20977  006C56  C092  F072         	movff	SYS_TimerTaskHandler@timer+1,placeTimer@timer+1
 20978  006C5A  EC44  F027         	call	_placeTimer	;wreg free
 20979  006C5E                     l20024:
 20980                           
 20981                           ; BSR set to: 0
 20982                           ;../sys/sys_src/sysTimer.c: 136:         timer->handler(timer);
 20983  006C5E  C091  F081         	movff	SYS_TimerTaskHandler@timer,nwkTxDelayTimerHandler@timer
 20984  006C62  C092  F082         	movff	SYS_TimerTaskHandler@timer+1,nwkTxDelayTimerHandler@timer+1
 20985  006C66  0100               	movlb	0	; force () banked
 20986  006C68  EE20 F00B          	lfsr	2,11
 20987  006C6C  5191               	movf	SYS_TimerTaskHandler@timer& (0+255),w,b
 20988  006C6E  26D9               	addwf	fsr2l,f,c
 20989  006C70  5192               	movf	(SYS_TimerTaskHandler@timer+1)& (0+255),w,b
 20990  006C72  22DA               	addwfc	fsr2h,f,c
 20991  006C74  006F FF78  F088    	movff	postinc2,??_SYS_TimerTaskHandler
 20992  006C7A  006F FF74  F089    	movff	postdec2,??_SYS_TimerTaskHandler+1
 20993  006C80  D801               	call	u18698
 20994  006C82  D00A               	goto	u18699
 20995  006C84                     u18698:
 20996  006C84  0005               	push	
 20997  006C86  6EFA               	movwf	pclath,c
 20998  006C88  0100               	movlb	0	; force () banked
 20999  006C8A  5188               	movf	??_SYS_TimerTaskHandler& (0+255),w,b
 21000  006C8C  6EFD               	movwf	tosl,c
 21001  006C8E  5189               	movf	(??_SYS_TimerTaskHandler+1)& (0+255),w,b
 21002  006C90  6EFE               	movwf	tosh,c
 21003  006C92  6AFF               	clrf	tosu,c
 21004  006C94  50FA               	movf	pclath,w,c
 21005  006C96  0012               	return		;indir
 21006  006C98                     u18699:
 21007                           
 21008                           ; BSR set to: 0
 21009                           ;../sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
 21010  006C98  0100               	movlb	0	; force () banked
 21011  006C9A  51D1               	movf	_timers& (0+255),w,b
 21012  006C9C  11D2               	iorwf	(_timers+1)& (0+255),w,b
 21013  006C9E  B4D8               	btfsc	status,2,c
 21014  006CA0  D012               	goto	u18710
 21015                           
 21016                           ; BSR set to: 0
 21017  006CA2  0100               	movlb	0	; force () banked
 21018  006CA4  EE20 F002          	lfsr	2,2
 21019  006CA8  51D1               	movf	_timers& (0+255),w,b
 21020  006CAA  26D9               	addwf	fsr2l,f,c
 21021  006CAC  51D2               	movf	(_timers+1)& (0+255),w,b
 21022  006CAE  22DA               	addwfc	fsr2h,f,c
 21023  006CB0  50DE               	movf	postinc2,w,c
 21024  006CB2  0100               	movlb	0	; force () banked
 21025  006CB4  5D8D               	subwf	SYS_TimerTaskHandler@elapsed& (0+255),w,b
 21026  006CB6  50DE               	movf	postinc2,w,c
 21027  006CB8  598E               	subwfb	(SYS_TimerTaskHandler@elapsed+1)& (0+255),w,b
 21028  006CBA  50DE               	movf	postinc2,w,c
 21029  006CBC  598F               	subwfb	(SYS_TimerTaskHandler@elapsed+2)& (0+255),w,b
 21030  006CBE  50DE               	movf	postinc2,w,c
 21031  006CC0  5990               	subwfb	(SYS_TimerTaskHandler@elapsed+3)& (0+255),w,b
 21032  006CC2  B0D8               	btfsc	status,0,c
 21033  006CC4  D79C               	goto	l20016
 21034  006CC6                     u18710:
 21035                           
 21036                           ; BSR set to: 0
 21037                           ;../sys/sys_src/sysTimer.c: 139:     if (timers){
 21038  006CC6  0100               	movlb	0	; force () banked
 21039  006CC8  51D1               	movf	_timers& (0+255),w,b
 21040  006CCA  11D2               	iorwf	(_timers+1)& (0+255),w,b
 21041  006CCC  B4D8               	btfsc	status,2,c
 21042  006CCE  0012               	return	
 21043                           
 21044                           ; BSR set to: 0
 21045                           ;../sys/sys_src/sysTimer.c: 140:         timers->timeout -= elapsed;
 21046  006CD0  0100               	movlb	0	; force () banked
 21047  006CD2  EE20 F002          	lfsr	2,2
 21048  006CD6  51D1               	movf	_timers& (0+255),w,b
 21049  006CD8  26D9               	addwf	fsr2l,f,c
 21050  006CDA  51D2               	movf	(_timers+1)& (0+255),w,b
 21051  006CDC  22DA               	addwfc	fsr2h,f,c
 21052  006CDE  0100               	movlb	0	; force () banked
 21053  006CE0  518D               	movf	SYS_TimerTaskHandler@elapsed& (0+255),w,b
 21054  006CE2  5EDE               	subwf	postinc2,f,c
 21055  006CE4  518E               	movf	(SYS_TimerTaskHandler@elapsed+1)& (0+255),w,b
 21056  006CE6  5ADE               	subwfb	postinc2,f,c
 21057  006CE8  518F               	movf	(SYS_TimerTaskHandler@elapsed+2)& (0+255),w,b
 21058  006CEA  5ADE               	subwfb	postinc2,f,c
 21059  006CEC  5190               	movf	(SYS_TimerTaskHandler@elapsed+3)& (0+255),w,b
 21060  006CEE  5ADE               	subwfb	postinc2,f,c
 21061  006CF0  0012               	return		;funcret
 21062  006CF2                     __end_of_SYS_TimerTaskHandler:
 21063                           	callstack 0
 21064                           
 21065 ;; *************** function _nwkTxAckWaitTimerHandler *****************
 21066 ;; Defined at:
 21067 ;;		line 205 in file "../nwk/nwk_src/nwkTx.c"
 21068 ;; Parameters:    Size  Location     Type
 21069 ;;  timer           2   33[BANK0 ] PTR struct SYS_Timer_t
 21070 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 21071 ;; Auto vars:     Size  Location     Type
 21072 ;;  frame           2   38[BANK0 ] PTR struct NwkFrame_t
 21073 ;;		 -> nwkFrameFrames(690), NULL(0), 
 21074 ;;  restart         1   37[BANK0 ] _Bool 
 21075 ;; Return value:  Size  Location     Type
 21076 ;;                  1    wreg      void 
 21077 ;; Registers used:
 21078 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 21079 ;; Tracked objects:
 21080 ;;		On entry : 3F/0
 21081 ;;		On exit  : 3F/0
 21082 ;;		Unchanged: 0/0
 21083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21084 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21085 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21086 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21087 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21088 ;;Total ram usage:        7 bytes
 21089 ;; Hardware stack levels used:    1
 21090 ;; Hardware stack levels required when called:   13
 21091 ;; This function calls:
 21092 ;;		_SYS_TimerStart
 21093 ;;		_nwkFrameNext
 21094 ;;		_nwkTxConfirm
 21095 ;; This function is called by:
 21096 ;;		_nwkTxInit
 21097 ;;		_SYS_TimerTaskHandler
 21098 ;; This function uses a non-reentrant model
 21099 ;;
 21100                           
 21101                           	psect	text101
 21102  009A36                     __ptext101:
 21103                           	callstack 0
 21104  009A36                     _nwkTxAckWaitTimerHandler:
 21105                           	callstack 15
 21106                           
 21107                           ;../nwk/nwk_src/nwkTx.c: 205: static void nwkTxAckWaitTimerHandler(SYS_Timer_t *timer);.
      +                          ./nwk/nwk_src/nwkTx.c: 206: {;../nwk/nwk_src/nwkTx.c: 207:   NwkFrame_t *frame = (0);
 21108                           
 21109                           ;incstack = 0
 21110  009A36  0E00               	movlw	0
 21111  009A38  0100               	movlb	0	; force () banked
 21112  009A3A  6F86               	movwf	nwkTxAckWaitTimerHandler@frame& (0+255),b
 21113  009A3C  0E00               	movlw	0
 21114  009A3E  6F87               	movwf	(nwkTxAckWaitTimerHandler@frame+1)& (0+255),b
 21115                           
 21116                           ; BSR set to: 0
 21117                           ;../nwk/nwk_src/nwkTx.c: 208:   _Bool restart = 0;
 21118  009A40  0E00               	movlw	0
 21119  009A42  0100               	movlb	0	; force () banked
 21120  009A44  6F85               	movwf	nwkTxAckWaitTimerHandler@restart& (0+255),b
 21121                           
 21122                           ;../nwk/nwk_src/nwkTx.c: 210:   while ((0) != (frame = nwkFrameNext(frame)))
 21123  009A46  D024               	goto	l3181
 21124  009A48                     l19588:
 21125                           
 21126                           ; BSR set to: 0
 21127                           ;../nwk/nwk_src/nwkTx.c: 211:   {;../nwk/nwk_src/nwkTx.c: 212:     if (NWK_TX_STATE_WAIT
      +                          _ACK == frame->state)
 21128  009A48  0060  F21B  FFD9   	movff	nwkTxAckWaitTimerHandler@frame,fsr2l
 21129  009A4E  0060  F21F  FFDA   	movff	nwkTxAckWaitTimerHandler@frame+1,fsr2h
 21130  009A54  0E16               	movlw	22
 21131  009A56  18DE               	xorwf	postinc2,w,c
 21132  009A58  A4D8               	btfss	status,2,c
 21133  009A5A  D01A               	goto	l3181
 21134                           
 21135                           ; BSR set to: 0
 21136                           ;../nwk/nwk_src/nwkTx.c: 213:     {;../nwk/nwk_src/nwkTx.c: 214:       restart = 1;
 21137  009A5C  0E01               	movlw	1
 21138  009A5E  0100               	movlb	0	; force () banked
 21139  009A60  6F85               	movwf	nwkTxAckWaitTimerHandler@restart& (0+255),b
 21140                           
 21141                           ; BSR set to: 0
 21142                           ;../nwk/nwk_src/nwkTx.c: 216:       if (0 == --frame->tx.timeout)
 21143  009A62  0100               	movlb	0	; force () banked
 21144  009A64  EE20 F085          	lfsr	2,133
 21145  009A68  5186               	movf	nwkTxAckWaitTimerHandler@frame& (0+255),w,b
 21146  009A6A  26D9               	addwf	fsr2l,f,c
 21147  009A6C  5187               	movf	(nwkTxAckWaitTimerHandler@frame+1)& (0+255),w,b
 21148  009A6E  22DA               	addwfc	fsr2h,f,c
 21149  009A70  06DE               	decf	postinc2,f,c
 21150  009A72  0E00               	movlw	0
 21151  009A74  5ADD               	subwfb	postdec2,f,c
 21152  009A76  50DE               	movf	postinc2,w,c
 21153  009A78  10DE               	iorwf	postinc2,w,c
 21154  009A7A  A4D8               	btfss	status,2,c
 21155  009A7C  D009               	goto	l3181
 21156                           
 21157                           ; BSR set to: 0
 21158                           ;../nwk/nwk_src/nwkTx.c: 217:         nwkTxConfirm(frame, NWK_NO_ACK_STATUS);
 21159  009A7E  C086  F071         	movff	nwkTxAckWaitTimerHandler@frame,nwkTxConfirm@frame
 21160  009A82  C087  F072         	movff	nwkTxAckWaitTimerHandler@frame+1,nwkTxConfirm@frame+1
 21161  009A86  0E10               	movlw	16
 21162  009A88  0100               	movlb	0	; force () banked
 21163  009A8A  6F73               	movwf	nwkTxConfirm@status& (0+255),b
 21164  009A8C  ECA0  F05B         	call	_nwkTxConfirm	;wreg free
 21165  009A90                     l3181:
 21166                           
 21167                           ; BSR set to: 0
 21168                           ;../nwk/nwk_src/nwkTx.c: 210:   while ((0) != (frame = nwkFrameNext(frame)))
 21169  009A90  C086  F071         	movff	nwkTxAckWaitTimerHandler@frame,nwkFrameNext@frame
 21170  009A94  C087  F072         	movff	nwkTxAckWaitTimerHandler@frame+1,nwkFrameNext@frame+1
 21171  009A98  EC99  F049         	call	_nwkFrameNext	;wreg free
 21172  009A9C  C071  F086         	movff	?_nwkFrameNext,nwkTxAckWaitTimerHandler@frame
 21173  009AA0  C072  F087         	movff	?_nwkFrameNext+1,nwkTxAckWaitTimerHandler@frame+1
 21174  009AA4  0100               	movlb	0	; force () banked
 21175  009AA6  5186               	movf	nwkTxAckWaitTimerHandler@frame& (0+255),w,b
 21176  009AA8  1187               	iorwf	(nwkTxAckWaitTimerHandler@frame+1)& (0+255),w,b
 21177  009AAA  A4D8               	btfss	status,2,c
 21178  009AAC  D7CD               	goto	l19588
 21179                           
 21180                           ; BSR set to: 0
 21181                           ;../nwk/nwk_src/nwkTx.c: 221:   if (restart)
 21182  009AAE  0100               	movlb	0	; force () banked
 21183  009AB0  5185               	movf	nwkTxAckWaitTimerHandler@restart& (0+255),w,b
 21184  009AB2  B4D8               	btfsc	status,2,c
 21185  009AB4  0012               	return	
 21186                           
 21187                           ; BSR set to: 0
 21188                           ;../nwk/nwk_src/nwkTx.c: 222:     SYS_TimerStart(timer);
 21189  009AB6  C081  F07F         	movff	nwkTxAckWaitTimerHandler@timer,SYS_TimerStart@timer
 21190  009ABA  C082  F080         	movff	nwkTxAckWaitTimerHandler@timer+1,SYS_TimerStart@timer+1
 21191  009ABE  ECBB  F05C         	call	_SYS_TimerStart	;wreg free
 21192                           
 21193                           ; BSR set to: 0
 21194  009AC2  0012               	return		;funcret
 21195  009AC4                     __end_of_nwkTxAckWaitTimerHandler:
 21196                           	callstack 0
 21197                           
 21198 ;; *************** function _nwkRxDuplicateRejectionTimerHandler *****************
 21199 ;; Defined at:
 21200 ;;		line 181 in file "../nwk/nwk_src/nwkRx.c"
 21201 ;; Parameters:    Size  Location     Type
 21202 ;;  timer           2   33[BANK0 ] PTR struct SYS_Timer_t
 21203 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 21204 ;; Auto vars:     Size  Location     Type
 21205 ;;  i               1   36[BANK0 ] unsigned char 
 21206 ;;  restart         1   35[BANK0 ] _Bool 
 21207 ;; Return value:  Size  Location     Type
 21208 ;;                  1    wreg      void 
 21209 ;; Registers used:
 21210 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21211 ;; Tracked objects:
 21212 ;;		On entry : 3F/0
 21213 ;;		On exit  : 3F/0
 21214 ;;		Unchanged: 0/0
 21215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21216 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21217 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21219 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21220 ;;Total ram usage:        4 bytes
 21221 ;; Hardware stack levels used:    1
 21222 ;; Hardware stack levels required when called:   13
 21223 ;; This function calls:
 21224 ;;		_SYS_TimerStart
 21225 ;; This function is called by:
 21226 ;;		_nwkRxInit
 21227 ;;		_SYS_TimerTaskHandler
 21228 ;; This function uses a non-reentrant model
 21229 ;;
 21230                           
 21231                           	psect	text102
 21232  00A4D2                     __ptext102:
 21233                           	callstack 0
 21234  00A4D2                     _nwkRxDuplicateRejectionTimerHandler:
 21235                           	callstack 15
 21236                           
 21237                           ;../nwk/nwk_src/nwkRx.c: 181: static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_
      +                          t *timer);../nwk/nwk_src/nwkRx.c: 182: {;../nwk/nwk_src/nwkRx.c: 183:   _Bool restart = 
      +                          0;
 21238                           
 21239                           ; BSR set to: 0
 21240                           ;incstack = 0
 21241  00A4D2  0E00               	movlw	0
 21242  00A4D4  0100               	movlb	0	; force () banked
 21243  00A4D6  6F83               	movwf	nwkRxDuplicateRejectionTimerHandler@restart& (0+255),b
 21244                           
 21245                           ;../nwk/nwk_src/nwkRx.c: 185:   for (uint8_t i = 0; i < 32; i++)
 21246  00A4D8  0E00               	movlw	0
 21247  00A4DA  0100               	movlb	0	; force () banked
 21248  00A4DC  6F84               	movwf	nwkRxDuplicateRejectionTimerHandler@i& (0+255),b
 21249  00A4DE  D01B               	goto	l15764
 21250  00A4E0                     l15756:
 21251                           
 21252                           ; BSR set to: 0
 21253                           ;../nwk/nwk_src/nwkRx.c: 186:   {;../nwk/nwk_src/nwkRx.c: 187:     if (nwkRxDuplicateRej
      +                          ectionTable[i].ttl)
 21254  00A4E0  0100               	movlb	0	; force () banked
 21255  00A4E2  5184               	movf	nwkRxDuplicateRejectionTimerHandler@i& (0+255),w,b
 21256  00A4E4  0D05               	mullw	5
 21257  00A4E6  0E04               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 21258  00A4E8  24F3               	addwf	243,w,c
 21259  00A4EA  6ED9               	movwf	fsr2l,c
 21260  00A4EC  0E0A               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 21261  00A4EE  20F4               	addwfc	prodh,w,c
 21262  00A4F0  6EDA               	movwf	fsr2h,c
 21263  00A4F2  50DF               	movf	indf2,w,c
 21264  00A4F4  B4D8               	btfsc	status,2,c
 21265  00A4F6  D00D               	goto	l15762
 21266                           
 21267                           ; BSR set to: 0
 21268                           ;../nwk/nwk_src/nwkRx.c: 188:     {;../nwk/nwk_src/nwkRx.c: 189:       nwkRxDuplicateRej
      +                          ectionTable[i].ttl--;
 21269  00A4F8  0100               	movlb	0	; force () banked
 21270  00A4FA  5184               	movf	nwkRxDuplicateRejectionTimerHandler@i& (0+255),w,b
 21271  00A4FC  0D05               	mullw	5
 21272  00A4FE  0E04               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 21273  00A500  24F3               	addwf	243,w,c
 21274  00A502  6ED9               	movwf	fsr2l,c
 21275  00A504  0E0A               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 21276  00A506  20F4               	addwfc	prodh,w,c
 21277  00A508  6EDA               	movwf	fsr2h,c
 21278  00A50A  06DF               	decf	indf2,f,c
 21279                           
 21280                           ; BSR set to: 0
 21281                           ;../nwk/nwk_src/nwkRx.c: 190:       restart = 1;
 21282  00A50C  0E01               	movlw	1
 21283  00A50E  0100               	movlb	0	; force () banked
 21284  00A510  6F83               	movwf	nwkRxDuplicateRejectionTimerHandler@restart& (0+255),b
 21285  00A512                     l15762:
 21286                           
 21287                           ; BSR set to: 0
 21288                           ;../nwk/nwk_src/nwkRx.c: 192:   }
 21289  00A512  0100               	movlb	0	; force () banked
 21290  00A514  2B84               	incf	nwkRxDuplicateRejectionTimerHandler@i& (0+255),f,b
 21291  00A516                     l15764:
 21292                           
 21293                           ; BSR set to: 0
 21294  00A516  0E1F               	movlw	31
 21295  00A518  0100               	movlb	0	; force () banked
 21296  00A51A  6584               	cpfsgt	nwkRxDuplicateRejectionTimerHandler@i& (0+255),b
 21297  00A51C  D7E1               	goto	l15756
 21298                           
 21299                           ; BSR set to: 0
 21300                           ;../nwk/nwk_src/nwkRx.c: 194:   if (restart)
 21301  00A51E  0100               	movlb	0	; force () banked
 21302  00A520  5183               	movf	nwkRxDuplicateRejectionTimerHandler@restart& (0+255),w,b
 21303  00A522  B4D8               	btfsc	status,2,c
 21304  00A524  0012               	return	
 21305                           
 21306                           ; BSR set to: 0
 21307                           ;../nwk/nwk_src/nwkRx.c: 195:     SYS_TimerStart(timer);
 21308  00A526  C081  F07F         	movff	nwkRxDuplicateRejectionTimerHandler@timer,SYS_TimerStart@timer
 21309  00A52A  C082  F080         	movff	nwkRxDuplicateRejectionTimerHandler@timer+1,SYS_TimerStart@timer+1
 21310  00A52E  ECBB  F05C         	call	_SYS_TimerStart	;wreg free
 21311                           
 21312                           ; BSR set to: 0
 21313  00A532  0012               	return		;funcret
 21314  00A534                     __end_of_nwkRxDuplicateRejectionTimerHandler:
 21315                           	callstack 0
 21316                           
 21317 ;; *************** function _nwkTxDelayTimerHandler *****************
 21318 ;; Defined at:
 21319 ;;		line 244 in file "../nwk/nwk_src/nwkTx.c"
 21320 ;; Parameters:    Size  Location     Type
 21321 ;;  timer           2   33[BANK0 ] PTR struct SYS_Timer_t
 21322 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 21323 ;; Auto vars:     Size  Location     Type
 21324 ;;  frame           2   38[BANK0 ] PTR struct NwkFrame_t
 21325 ;;		 -> nwkFrameFrames(690), NULL(0), 
 21326 ;;  restart         1   37[BANK0 ] _Bool 
 21327 ;; Return value:  Size  Location     Type
 21328 ;;                  1    wreg      void 
 21329 ;; Registers used:
 21330 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 21331 ;; Tracked objects:
 21332 ;;		On entry : 3F/0
 21333 ;;		On exit  : 3F/0
 21334 ;;		Unchanged: 0/0
 21335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21336 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21337 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21338 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21339 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21340 ;;Total ram usage:        7 bytes
 21341 ;; Hardware stack levels used:    1
 21342 ;; Hardware stack levels required when called:   13
 21343 ;; This function calls:
 21344 ;;		_SYS_TimerStart
 21345 ;;		_nwkFrameNext
 21346 ;; This function is called by:
 21347 ;;		_nwkTxInit
 21348 ;;		_SYS_TimerTaskHandler
 21349 ;; This function uses a non-reentrant model
 21350 ;;
 21351                           
 21352                           	psect	text103
 21353  009B52                     __ptext103:
 21354                           	callstack 0
 21355  009B52                     _nwkTxDelayTimerHandler:
 21356                           	callstack 15
 21357                           
 21358                           ;../nwk/nwk_src/nwkTx.c: 244: static void nwkTxDelayTimerHandler(SYS_Timer_t *timer);../
      +                          nwk/nwk_src/nwkTx.c: 245: {;../nwk/nwk_src/nwkTx.c: 246:   NwkFrame_t *frame = (0);
 21359                           
 21360                           ; BSR set to: 0
 21361                           ;incstack = 0
 21362  009B52  0E00               	movlw	0
 21363  009B54  0100               	movlb	0	; force () banked
 21364  009B56  6F86               	movwf	nwkTxDelayTimerHandler@frame& (0+255),b
 21365  009B58  0E00               	movlw	0
 21366  009B5A  6F87               	movwf	(nwkTxDelayTimerHandler@frame+1)& (0+255),b
 21367                           
 21368                           ; BSR set to: 0
 21369                           ;../nwk/nwk_src/nwkTx.c: 247:   _Bool restart = 0;
 21370  009B5C  0E00               	movlw	0
 21371  009B5E  0100               	movlb	0	; force () banked
 21372  009B60  6F85               	movwf	nwkTxDelayTimerHandler@restart& (0+255),b
 21373                           
 21374                           ;../nwk/nwk_src/nwkTx.c: 249:   while ((0) != (frame = nwkFrameNext(frame)))
 21375  009B62  D023               	goto	l19612
 21376  009B64                     l19604:
 21377                           
 21378                           ; BSR set to: 0
 21379                           ;../nwk/nwk_src/nwkTx.c: 250:   {;../nwk/nwk_src/nwkTx.c: 251:     if (NWK_TX_STATE_WAIT
      +                          _DELAY == frame->state)
 21380  009B64  0060  F21B  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
 21381  009B6A  0060  F21F  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
 21382  009B70  0E11               	movlw	17
 21383  009B72  18DE               	xorwf	postinc2,w,c
 21384  009B74  A4D8               	btfss	status,2,c
 21385  009B76  D019               	goto	l19612
 21386                           
 21387                           ; BSR set to: 0
 21388                           ;../nwk/nwk_src/nwkTx.c: 252:     {;../nwk/nwk_src/nwkTx.c: 253:       restart = 1;
 21389  009B78  0E01               	movlw	1
 21390  009B7A  0100               	movlb	0	; force () banked
 21391  009B7C  6F85               	movwf	nwkTxDelayTimerHandler@restart& (0+255),b
 21392                           
 21393                           ; BSR set to: 0
 21394                           ;../nwk/nwk_src/nwkTx.c: 255:       if (0 == --frame->tx.timeout)
 21395  009B7E  0100               	movlb	0	; force () banked
 21396  009B80  EE20 F085          	lfsr	2,133
 21397  009B84  5186               	movf	nwkTxDelayTimerHandler@frame& (0+255),w,b
 21398  009B86  26D9               	addwf	fsr2l,f,c
 21399  009B88  5187               	movf	(nwkTxDelayTimerHandler@frame+1)& (0+255),w,b
 21400  009B8A  22DA               	addwfc	fsr2h,f,c
 21401  009B8C  06DE               	decf	postinc2,f,c
 21402  009B8E  0E00               	movlw	0
 21403  009B90  5ADD               	subwfb	postdec2,f,c
 21404  009B92  50DE               	movf	postinc2,w,c
 21405  009B94  10DE               	iorwf	postinc2,w,c
 21406  009B96  A4D8               	btfss	status,2,c
 21407  009B98  D008               	goto	l19612
 21408                           
 21409                           ; BSR set to: 0
 21410                           ;../nwk/nwk_src/nwkTx.c: 256:         frame->state = NWK_TX_STATE_SEND;
 21411  009B9A  0060  F21B  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
 21412  009BA0  0060  F21F  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
 21413  009BA6  0E13               	movlw	19
 21414  009BA8  6EDF               	movwf	indf2,c
 21415  009BAA                     l19612:
 21416                           
 21417                           ; BSR set to: 0
 21418                           ;../nwk/nwk_src/nwkTx.c: 249:   while ((0) != (frame = nwkFrameNext(frame)))
 21419  009BAA  C086  F071         	movff	nwkTxDelayTimerHandler@frame,nwkFrameNext@frame
 21420  009BAE  C087  F072         	movff	nwkTxDelayTimerHandler@frame+1,nwkFrameNext@frame+1
 21421  009BB2  EC99  F049         	call	_nwkFrameNext	;wreg free
 21422  009BB6  C071  F086         	movff	?_nwkFrameNext,nwkTxDelayTimerHandler@frame
 21423  009BBA  C072  F087         	movff	?_nwkFrameNext+1,nwkTxDelayTimerHandler@frame+1
 21424  009BBE  0100               	movlb	0	; force () banked
 21425  009BC0  5186               	movf	nwkTxDelayTimerHandler@frame& (0+255),w,b
 21426  009BC2  1187               	iorwf	(nwkTxDelayTimerHandler@frame+1)& (0+255),w,b
 21427  009BC4  A4D8               	btfss	status,2,c
 21428  009BC6  D7CE               	goto	l19604
 21429                           
 21430                           ; BSR set to: 0
 21431                           ;../nwk/nwk_src/nwkTx.c: 260:   if (restart)
 21432  009BC8  0100               	movlb	0	; force () banked
 21433  009BCA  5185               	movf	nwkTxDelayTimerHandler@restart& (0+255),w,b
 21434  009BCC  B4D8               	btfsc	status,2,c
 21435  009BCE  0012               	return	
 21436                           
 21437                           ; BSR set to: 0
 21438                           ;../nwk/nwk_src/nwkTx.c: 261:     SYS_TimerStart(timer);
 21439  009BD0  C081  F07F         	movff	nwkTxDelayTimerHandler@timer,SYS_TimerStart@timer
 21440  009BD4  C082  F080         	movff	nwkTxDelayTimerHandler@timer+1,SYS_TimerStart@timer+1
 21441  009BD8  ECBB  F05C         	call	_SYS_TimerStart	;wreg free
 21442                           
 21443                           ; BSR set to: 0
 21444  009BDC  0012               	return		;funcret
 21445  009BDE                     __end_of_nwkTxDelayTimerHandler:
 21446                           	callstack 0
 21447                           
 21448 ;; *************** function _nwkTxConfirm *****************
 21449 ;; Defined at:
 21450 ;;		line 227 in file "../nwk/nwk_src/nwkTx.c"
 21451 ;; Parameters:    Size  Location     Type
 21452 ;;  frame           2   17[BANK0 ] PTR struct NwkFrame_t
 21453 ;;		 -> nwkFrameFrames(690), NULL(0), 
 21454 ;;  status          1   19[BANK0 ] unsigned char 
 21455 ;; Auto vars:     Size  Location     Type
 21456 ;;		None
 21457 ;; Return value:  Size  Location     Type
 21458 ;;                  1    wreg      void 
 21459 ;; Registers used:
 21460 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21461 ;; Tracked objects:
 21462 ;;		On entry : 3F/0
 21463 ;;		On exit  : 3F/0
 21464 ;;		Unchanged: 0/0
 21465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21466 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21469 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21470 ;;Total ram usage:        3 bytes
 21471 ;; Hardware stack levels used:    1
 21472 ;; Hardware stack levels required when called:   11
 21473 ;; This function calls:
 21474 ;;		Nothing
 21475 ;; This function is called by:
 21476 ;;		_nwkTxAckWaitTimerHandler
 21477 ;; This function uses a non-reentrant model
 21478 ;;
 21479                           
 21480                           	psect	text104
 21481  00B740                     __ptext104:
 21482                           	callstack 0
 21483  00B740                     _nwkTxConfirm:
 21484                           	callstack 16
 21485                           
 21486                           ;../nwk/nwk_src/nwkTx.c: 227: void nwkTxConfirm(NwkFrame_t *frame, uint8_t status);../nw
      +                          k/nwk_src/nwkTx.c: 228: {;../nwk/nwk_src/nwkTx.c: 229:   frame->state = NWK_TX_STATE_CON
      +                          FIRM;
 21487                           
 21488                           ; BSR set to: 0
 21489                           ;incstack = 0
 21490  00B740  0060  F1C7  FFD9   	movff	nwkTxConfirm@frame,fsr2l
 21491  00B746  0060  F1CB  FFDA   	movff	nwkTxConfirm@frame+1,fsr2h
 21492  00B74C  0E17               	movlw	23
 21493  00B74E  6EDF               	movwf	indf2,c
 21494                           
 21495                           ;../nwk/nwk_src/nwkTx.c: 230:   frame->tx.status = status;
 21496  00B750  0100               	movlb	0	; force () banked
 21497  00B752  EE20 F084          	lfsr	2,132
 21498  00B756  5171               	movf	nwkTxConfirm@frame& (0+255),w,b
 21499  00B758  26D9               	addwf	fsr2l,f,c
 21500  00B75A  5172               	movf	(nwkTxConfirm@frame+1)& (0+255),w,b
 21501  00B75C  22DA               	addwfc	fsr2h,f,c
 21502  00B75E  0060  F1CF  FFDF   	movff	nwkTxConfirm@status,indf2
 21503                           
 21504                           ; BSR set to: 0
 21505  00B764  0012               	return		;funcret
 21506  00B766                     __end_of_nwkTxConfirm:
 21507                           	callstack 0
 21508                           
 21509 ;; *************** function _PHY_TaskHandler *****************
 21510 ;; Defined at:
 21511 ;;		line 75 in file "../phy/phy_src/phy.c"
 21512 ;; Parameters:    Size  Location     Type
 21513 ;;		None
 21514 ;; Auto vars:     Size  Location     Type
 21515 ;;		None
 21516 ;; Return value:  Size  Location     Type
 21517 ;;                  1    wreg      void 
 21518 ;; Registers used:
 21519 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21520 ;; Tracked objects:
 21521 ;;		On entry : 0/0
 21522 ;;		On exit  : 3C/0
 21523 ;;		Unchanged: 0/0
 21524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21529 ;;Total ram usage:        0 bytes
 21530 ;; Hardware stack levels used:    1
 21531 ;; Hardware stack levels required when called:   19
 21532 ;; This function calls:
 21533 ;;		_radio_engine
 21534 ;; This function is called by:
 21535 ;;		_SYS_TaskHandler
 21536 ;; This function uses a non-reentrant model
 21537 ;;
 21538                           
 21539                           	psect	text105
 21540  00BD58                     __ptext105:
 21541                           	callstack 0
 21542  00BD58                     _PHY_TaskHandler:
 21543                           	callstack 10
 21544                           
 21545                           ;../phy/phy_src/phy.c: 76:     radio_engine();
 21546                           
 21547                           ; BSR set to: 0
 21548                           ;incstack = 0
 21549  00BD58  EC97  F01E         	call	_radio_engine	;wreg free
 21550  00BD5C  0012               	return		;funcret
 21551  00BD5E                     __end_of_PHY_TaskHandler:
 21552                           	callstack 0
 21553                           
 21554 ;; *************** function _radio_engine *****************
 21555 ;; Defined at:
 21556 ;;		line 710 in file "../phy/sx1276/sx1276_src/sx1276.c"
 21557 ;; Parameters:    Size  Location     Type
 21558 ;;		None
 21559 ;; Auto vars:     Size  Location     Type
 21560 ;;  temp_time       2   93[BANK0 ] unsigned int 
 21561 ;; Return value:  Size  Location     Type
 21562 ;;                  1    wreg      void 
 21563 ;; Registers used:
 21564 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21565 ;; Tracked objects:
 21566 ;;		On entry : 0/0
 21567 ;;		On exit  : 3C/0
 21568 ;;		Unchanged: 0/0
 21569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21571 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21572 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21573 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21574 ;;Total ram usage:        4 bytes
 21575 ;; Hardware stack levels used:    1
 21576 ;; Hardware stack levels required when called:   18
 21577 ;; This function calls:
 21578 ;;		_DIO0_Receive_ISR
 21579 ;;		_PHY_DataConf
 21580 ;;		_SX1276Read
 21581 ;;		_cad
 21582 ;;		_get_timer0base
 21583 ;;		_initRadio
 21584 ;;		_queue_tx_led_event
 21585 ;;		_rand
 21586 ;;		_receive
 21587 ;;		_set_timer0base
 21588 ;;		_sx1276_send
 21589 ;; This function is called by:
 21590 ;;		_PHY_TaskHandler
 21591 ;; This function uses a non-reentrant model
 21592 ;;
 21593                           
 21594                           	psect	text106
 21595  003D2E                     __ptext106:
 21596                           	callstack 0
 21597  003D2E                     _radio_engine:
 21598                           	callstack 10
 21599                           
 21600                           ;../phy/sx1276/sx1276_src/sx1276.c: 711:     switch(radio_state_var){
 21601                           
 21602                           ;incstack = 0
 21603  003D2E  D10F               	goto	l19706
 21604  003D30                     l3649:
 21605                           
 21606                           ; BSR set to: 0
 21607  003D30  9ABC               	bcf	188,5,c	;volatile
 21608                           
 21609                           ; BSR set to: 0
 21610                           ;../phy/sx1276/sx1276_src/sx1276.c: 714:             set_timer0base(&txTimeOut, 100);
 21611  003D32  0EE2               	movlw	low _txTimeOut
 21612  003D34  0100               	movlb	0	; force () banked
 21613  003D36  6F71               	movwf	set_timer0base@timer& (0+255),b
 21614  003D38  0E00               	movlw	high _txTimeOut
 21615  003D3A  6F72               	movwf	(set_timer0base@timer+1)& (0+255),b
 21616  003D3C  0E00               	movlw	0
 21617  003D3E  0100               	movlb	0	; force () banked
 21618  003D40  6F74               	movwf	(set_timer0base@tval+1)& (0+255),b
 21619  003D42  0E64               	movlw	100
 21620  003D44  6F73               	movwf	set_timer0base@tval& (0+255),b
 21621  003D46  EC44  F05C         	call	_set_timer0base	;wreg free
 21622                           
 21623                           ; BSR set to: 57
 21624                           ;../phy/sx1276/sx1276_src/sx1276.c: 715:             radio_state_var = RAD_RESET_LOW_WAI
      +                          T;
 21625  003D4A  0E01               	movlw	1
 21626  003D4C  0101               	movlb	1	; force () banked
 21627  003D4E  6FFD               	movwf	_radio_state_var& (0+255),b
 21628                           
 21629                           ;../phy/sx1276/sx1276_src/sx1276.c: 716:             break;
 21630  003D50  0012               	return	
 21631  003D52                     l19624:
 21632                           
 21633                           ; BSR set to: 0
 21634                           ;../phy/sx1276/sx1276_src/sx1276.c: 718:             if(!get_timer0base(&txTimeOut)){
 21635  003D52  0EE2               	movlw	low _txTimeOut
 21636  003D54  0100               	movlb	0	; force () banked
 21637  003D56  6F71               	movwf	get_timer0base@timer& (0+255),b
 21638  003D58  0E00               	movlw	high _txTimeOut
 21639  003D5A  6F72               	movwf	(get_timer0base@timer+1)& (0+255),b
 21640  003D5C  EC39  F05B         	call	_get_timer0base	;wreg free
 21641  003D60  0100               	movlb	0	; force () banked
 21642  003D62  5171               	movf	?_get_timer0base& (0+255),w,b
 21643  003D64  1172               	iorwf	(?_get_timer0base+1)& (0+255),w,b
 21644  003D66  A4D8               	btfss	status,2,c
 21645  003D68  0012               	return	
 21646                           
 21647                           ; BSR set to: 0
 21648                           
 21649                           ;../phy/sx1276/sx1276_src/sx1276.c: 719:                 do { LATCbits.LATC5 = 1; } whil
      +                          e(0);
 21650  003D6A  8ABC               	bsf	188,5,c	;volatile
 21651                           
 21652                           ; BSR set to: 0
 21653                           ;../phy/sx1276/sx1276_src/sx1276.c: 720:                 set_timer0base(&txTimeOut, 700)
      +                          ;
 21654  003D6C  0EE2               	movlw	low _txTimeOut
 21655  003D6E  0100               	movlb	0	; force () banked
 21656  003D70  6F71               	movwf	set_timer0base@timer& (0+255),b
 21657  003D72  0E00               	movlw	high _txTimeOut
 21658  003D74  6F72               	movwf	(set_timer0base@timer+1)& (0+255),b
 21659  003D76  0E02               	movlw	2
 21660  003D78  0100               	movlb	0	; force () banked
 21661  003D7A  6F74               	movwf	(set_timer0base@tval+1)& (0+255),b
 21662  003D7C  0EBC               	movlw	188
 21663  003D7E  6F73               	movwf	set_timer0base@tval& (0+255),b
 21664  003D80  EC44  F05C         	call	_set_timer0base	;wreg free
 21665                           
 21666                           ; BSR set to: 57
 21667                           ;../phy/sx1276/sx1276_src/sx1276.c: 721:                 radio_state_var = RAD_RESET_HIG
      +                          H_WAIT;
 21668  003D84  0E03               	movlw	3
 21669  003D86  0101               	movlb	1	; force () banked
 21670  003D88  6FFD               	movwf	_radio_state_var& (0+255),b
 21671  003D8A  0012               	return	
 21672  003D8C                     l19630:
 21673                           
 21674                           ; BSR set to: 0
 21675                           ;../phy/sx1276/sx1276_src/sx1276.c: 725:             if(!get_timer0base(&txTimeOut)){
 21676  003D8C  0EE2               	movlw	low _txTimeOut
 21677  003D8E  0100               	movlb	0	; force () banked
 21678  003D90  6F71               	movwf	get_timer0base@timer& (0+255),b
 21679  003D92  0E00               	movlw	high _txTimeOut
 21680  003D94  6F72               	movwf	(get_timer0base@timer+1)& (0+255),b
 21681  003D96  EC39  F05B         	call	_get_timer0base	;wreg free
 21682  003D9A  0100               	movlb	0	; force () banked
 21683  003D9C  5171               	movf	?_get_timer0base& (0+255),w,b
 21684  003D9E  1172               	iorwf	(?_get_timer0base+1)& (0+255),w,b
 21685  003DA0  A4D8               	btfss	status,2,c
 21686  003DA2  0012               	return	
 21687                           
 21688                           ; BSR set to: 0
 21689                           ;../phy/sx1276/sx1276_src/sx1276.c: 726:                 radio_state_var = INIT_RADIO;
 21690  003DA4  0E04               	movlw	4
 21691  003DA6  0101               	movlb	1	; force () banked
 21692  003DA8  6FFD               	movwf	_radio_state_var& (0+255),b
 21693  003DAA  0012               	return	
 21694  003DAC                     l19634:
 21695                           
 21696                           ; BSR set to: 0
 21697                           ;../phy/sx1276/sx1276_src/sx1276.c: 730:             initRadio();
 21698  003DAC  EC79  F036         	call	_initRadio	;wreg free
 21699                           
 21700                           ; BSR set to: 2
 21701                           ;../phy/sx1276/sx1276_src/sx1276.c: 731:             radio_state_var = START_RX;
 21702  003DB0  0E05               	movlw	5
 21703  003DB2  0101               	movlb	1	; force () banked
 21704  003DB4  6FFD               	movwf	_radio_state_var& (0+255),b
 21705                           
 21706                           ; BSR set to: 1
 21707                           ;../phy/sx1276/sx1276_src/sx1276.c: 732:             need_radio_reset = 0;
 21708  003DB6  0E00               	movlw	0
 21709  003DB8  0101               	movlb	1	; force () banked
 21710  003DBA  6FEC               	movwf	_need_radio_reset& (0+255),b
 21711                           
 21712                           ;../phy/sx1276/sx1276_src/sx1276.c: 733:             break;
 21713  003DBC  0012               	return	
 21714  003DBE                     l19640:
 21715                           
 21716                           ; BSR set to: 0
 21717                           ;../phy/sx1276/sx1276_src/sx1276.c: 735:             if(need_radio_reset){
 21718  003DBE  0101               	movlb	1	; force () banked
 21719  003DC0  51EC               	movf	_need_radio_reset& (0+255),w,b
 21720  003DC2  B4D8               	btfsc	status,2,c
 21721  003DC4  D004               	goto	l19644
 21722                           
 21723                           ; BSR set to: 1
 21724                           ;../phy/sx1276/sx1276_src/sx1276.c: 736:                 radio_state_var = INIT_RADIO;
 21725  003DC6  0E04               	movlw	4
 21726  003DC8  0101               	movlb	1	; force () banked
 21727  003DCA  6FFD               	movwf	_radio_state_var& (0+255),b
 21728                           
 21729                           ;../phy/sx1276/sx1276_src/sx1276.c: 737:                 break;
 21730  003DCC  0012               	return	
 21731  003DCE                     l19644:
 21732                           
 21733                           ; BSR set to: 1
 21734                           ;../phy/sx1276/sx1276_src/sx1276.c: 739:             receive(0);
 21735  003DCE  0E00               	movlw	0
 21736  003DD0  ECBF  F056         	call	_receive
 21737                           
 21738                           ; BSR set to: 0
 21739                           ;../phy/sx1276/sx1276_src/sx1276.c: 740:             radio_state_var = WAIT_FOR_RX;
 21740  003DD4  0E06               	movlw	6
 21741  003DD6  0101               	movlb	1	; force () banked
 21742  003DD8  6FFD               	movwf	_radio_state_var& (0+255),b
 21743                           
 21744                           ;../phy/sx1276/sx1276_src/sx1276.c: 741:             break;
 21745  003DDA  0012               	return	
 21746  003DDC                     l3661:
 21747                           
 21748                           ; BSR set to: 0
 21749                           ;../phy/sx1276/sx1276_src/sx1276.c: 743:             if(PORTBbits.RB4){
 21750  003DDC  A8CB               	btfss	203,4,c	;volatile
 21751  003DDE  D003               	goto	l3662
 21752                           
 21753                           ; BSR set to: 0
 21754                           ;../phy/sx1276/sx1276_src/sx1276.c: 744:                 radio_state_var = RX_MESSAGE;
 21755  003DE0  0E07               	movlw	7
 21756  003DE2  0101               	movlb	1	; force () banked
 21757  003DE4  6FFD               	movwf	_radio_state_var& (0+255),b
 21758  003DE6                     l3662:
 21759                           
 21760                           ;../phy/sx1276/sx1276_src/sx1276.c: 746:             if(phyTxSize){
 21761  003DE6  0101               	movlb	1	; force () banked
 21762  003DE8  51EA               	movf	_phyTxSize& (0+255),w,b
 21763  003DEA  B4D8               	btfsc	status,2,c
 21764  003DEC  0012               	return	
 21765                           
 21766                           ; BSR set to: 1
 21767                           ;../phy/sx1276/sx1276_src/sx1276.c: 748:                 uint16_t temp_time = rand();
 21768  003DEE  EC27  F053         	call	_rand	;wreg free
 21769  003DF2  C07D  F0BD         	movff	?_rand,radio_engine@temp_time
 21770  003DF6  C07E  F0BE         	movff	?_rand+1,radio_engine@temp_time+1
 21771                           
 21772                           ;../phy/sx1276/sx1276_src/sx1276.c: 749:                 while(temp_time > 200){
 21773  003DFA  D005               	goto	l3664
 21774  003DFC                     l19652:
 21775                           
 21776                           ; BSR set to: 0
 21777                           ;../phy/sx1276/sx1276_src/sx1276.c: 750:                    temp_time -= 200;
 21778  003DFC  0EC8               	movlw	200
 21779  003DFE  0100               	movlb	0	; force () banked
 21780  003E00  5FBD               	subwf	radio_engine@temp_time& (0+255),f,b
 21781  003E02  0E00               	movlw	0
 21782  003E04  5BBE               	subwfb	(radio_engine@temp_time+1)& (0+255),f,b
 21783  003E06                     l3664:
 21784                           
 21785                           ; BSR set to: 0
 21786                           ;../phy/sx1276/sx1276_src/sx1276.c: 749:                 while(temp_time > 200){
 21787  003E06  0100               	movlb	0	; force () banked
 21788  003E08  51BE               	movf	(radio_engine@temp_time+1)& (0+255),w,b
 21789  003E0A  E1F8               	bnz	l19652
 21790  003E0C  0EC9               	movlw	201
 21791  003E0E  5DBD               	subwf	radio_engine@temp_time& (0+255),w,b
 21792  003E10  B0D8               	btfsc	status,0,c
 21793  003E12  D7F4               	goto	l19652
 21794                           
 21795                           ; BSR set to: 0
 21796                           ;../phy/sx1276/sx1276_src/sx1276.c: 752:                 set_timer0base(&_cadBackoffTime
      +                          r, temp_time);
 21797  003E14  0EE6               	movlw	low __cadBackoffTimer
 21798  003E16  0100               	movlb	0	; force () banked
 21799  003E18  6F71               	movwf	set_timer0base@timer& (0+255),b
 21800  003E1A  0E00               	movlw	high __cadBackoffTimer
 21801  003E1C  6F72               	movwf	(set_timer0base@timer+1)& (0+255),b
 21802  003E1E  C0BD  F073         	movff	radio_engine@temp_time,set_timer0base@tval
 21803  003E22  C0BE  F074         	movff	radio_engine@temp_time+1,set_timer0base@tval+1
 21804  003E26  EC44  F05C         	call	_set_timer0base	;wreg free
 21805                           
 21806                           ; BSR set to: 57
 21807                           ;../phy/sx1276/sx1276_src/sx1276.c: 753:                 radio_state_var = WAIT_RANDOM_T
      +                          X;
 21808  003E2A  0E08               	movlw	8
 21809  003E2C  0101               	movlb	1	; force () banked
 21810  003E2E  6FFD               	movwf	_radio_state_var& (0+255),b
 21811  003E30  0012               	return	
 21812  003E32                     l19658:
 21813                           
 21814                           ; BSR set to: 0
 21815                           ;../phy/sx1276/sx1276_src/sx1276.c: 757:             DIO0_Receive_ISR();
 21816  003E32  ECFC  F040         	call	_DIO0_Receive_ISR	;wreg free
 21817                           
 21818                           ; BSR set to: 0
 21819                           ;../phy/sx1276/sx1276_src/sx1276.c: 758:             radio_state_var = START_RX;
 21820  003E36  0E05               	movlw	5
 21821  003E38  0101               	movlb	1	; force () banked
 21822  003E3A  6FFD               	movwf	_radio_state_var& (0+255),b
 21823                           
 21824                           ;../phy/sx1276/sx1276_src/sx1276.c: 759:             break;
 21825  003E3C  0012               	return	
 21826  003E3E                     l19662:
 21827                           
 21828                           ; BSR set to: 0
 21829                           ;../phy/sx1276/sx1276_src/sx1276.c: 761:             if(!get_timer0base(&_cadBackoffTime
      +                          r)){
 21830  003E3E  0EE6               	movlw	low __cadBackoffTimer
 21831  003E40  0100               	movlb	0	; force () banked
 21832  003E42  6F71               	movwf	get_timer0base@timer& (0+255),b
 21833  003E44  0E00               	movlw	high __cadBackoffTimer
 21834  003E46  6F72               	movwf	(get_timer0base@timer+1)& (0+255),b
 21835  003E48  EC39  F05B         	call	_get_timer0base	;wreg free
 21836  003E4C  0100               	movlb	0	; force () banked
 21837  003E4E  5171               	movf	?_get_timer0base& (0+255),w,b
 21838  003E50  1172               	iorwf	(?_get_timer0base+1)& (0+255),w,b
 21839  003E52  A4D8               	btfss	status,2,c
 21840  003E54  D003               	goto	l19666
 21841                           
 21842                           ; BSR set to: 0
 21843                           ;../phy/sx1276/sx1276_src/sx1276.c: 762:                 radio_state_var = START_CAD;
 21844  003E56  0E09               	movlw	9
 21845  003E58  0101               	movlb	1	; force () banked
 21846  003E5A  6FFD               	movwf	_radio_state_var& (0+255),b
 21847  003E5C                     l19666:
 21848                           
 21849                           ;../phy/sx1276/sx1276_src/sx1276.c: 764:             if(PORTBbits.RB4){
 21850  003E5C  A8CB               	btfss	203,4,c	;volatile
 21851  003E5E  0012               	return	
 21852                           
 21853                           ;../phy/sx1276/sx1276_src/sx1276.c: 765:                 DIO0_Receive_ISR();
 21854  003E60  ECFC  F040         	call	_DIO0_Receive_ISR	;wreg free
 21855  003E64  0012               	return	
 21856  003E66                     l19670:
 21857                           
 21858                           ; BSR set to: 0
 21859                           ;../phy/sx1276/sx1276_src/sx1276.c: 769:             if(!get_timer0base(&_cadBackoffTime
      +                          r)){
 21860  003E66  0EE6               	movlw	low __cadBackoffTimer
 21861  003E68  0100               	movlb	0	; force () banked
 21862  003E6A  6F71               	movwf	get_timer0base@timer& (0+255),b
 21863  003E6C  0E00               	movlw	high __cadBackoffTimer
 21864  003E6E  6F72               	movwf	(get_timer0base@timer+1)& (0+255),b
 21865  003E70  EC39  F05B         	call	_get_timer0base	;wreg free
 21866  003E74  0100               	movlb	0	; force () banked
 21867  003E76  5171               	movf	?_get_timer0base& (0+255),w,b
 21868  003E78  1172               	iorwf	(?_get_timer0base+1)& (0+255),w,b
 21869  003E7A  A4D8               	btfss	status,2,c
 21870  003E7C  D01F               	goto	l19684
 21871                           
 21872                           ; BSR set to: 0
 21873                           ;../phy/sx1276/sx1276_src/sx1276.c: 770:                 if(cad()){
 21874  003E7E  EC63  F03E         	call	_cad	;wreg free
 21875  003E82  0900               	iorlw	0
 21876  003E84  B4D8               	btfsc	status,2,c
 21877  003E86  D016               	goto	l19682
 21878                           
 21879                           ; BSR set to: 0
 21880                           ;../phy/sx1276/sx1276_src/sx1276.c: 772:                     set_timer0base(&_cadBackoff
      +                          Timer, 2000);
 21881  003E88  0EE6               	movlw	low __cadBackoffTimer
 21882  003E8A  0100               	movlb	0	; force () banked
 21883  003E8C  6F71               	movwf	set_timer0base@timer& (0+255),b
 21884  003E8E  0E00               	movlw	high __cadBackoffTimer
 21885  003E90  6F72               	movwf	(set_timer0base@timer+1)& (0+255),b
 21886  003E92  0E07               	movlw	7
 21887  003E94  0100               	movlb	0	; force () banked
 21888  003E96  6F74               	movwf	(set_timer0base@tval+1)& (0+255),b
 21889  003E98  0ED0               	movlw	208
 21890  003E9A  6F73               	movwf	set_timer0base@tval& (0+255),b
 21891  003E9C  EC44  F05C         	call	_set_timer0base	;wreg free
 21892                           
 21893                           ; BSR set to: 57
 21894                           ;../phy/sx1276/sx1276_src/sx1276.c: 774:                     radio_state_var = START_RX;
 21895  003EA0  0E05               	movlw	5
 21896  003EA2  0101               	movlb	1	; force () banked
 21897  003EA4  6FFD               	movwf	_radio_state_var& (0+255),b
 21898                           
 21899                           ; BSR set to: 1
 21900                           ;../phy/sx1276/sx1276_src/sx1276.c: 775:                     if(cadCounter < 10){
 21901  003EA6  0E0A               	movlw	10
 21902  003EA8  0101               	movlb	1	; force () banked
 21903  003EAA  61ED               	cpfslt	_cadCounter& (0+255),b
 21904  003EAC  0012               	return	
 21905                           
 21906                           ; BSR set to: 1
 21907                           ;../phy/sx1276/sx1276_src/sx1276.c: 776:                         cadCounter++;
 21908  003EAE  0101               	movlb	1	; force () banked
 21909  003EB0  2BED               	incf	_cadCounter& (0+255),f,b
 21910  003EB2  0012               	return	
 21911  003EB4                     l19682:
 21912                           
 21913                           ; BSR set to: 0
 21914                           ;../phy/sx1276/sx1276_src/sx1276.c: 781:                 radio_state_var = START_TX;
 21915  003EB4  0E0B               	movlw	11
 21916  003EB6  0101               	movlb	1	; force () banked
 21917  003EB8  6FFD               	movwf	_radio_state_var& (0+255),b
 21918  003EBA  0012               	return	
 21919  003EBC                     l19684:
 21920                           
 21921                           ; BSR set to: 0
 21922                           ;../phy/sx1276/sx1276_src/sx1276.c: 786:                 radio_state_var = WAIT_FOR_RX;
 21923  003EBC  0E06               	movlw	6
 21924  003EBE  0101               	movlb	1	; force () banked
 21925  003EC0  6FFD               	movwf	_radio_state_var& (0+255),b
 21926  003EC2  0012               	return	
 21927  003EC4                     l19686:
 21928                           
 21929                           ; BSR set to: 0
 21930                           ;../phy/sx1276/sx1276_src/sx1276.c: 790:             sx1276_send();
 21931  003EC4  ECB0  F053         	call	_sx1276_send	;wreg free
 21932                           
 21933                           ;../phy/sx1276/sx1276_src/sx1276.c: 791:             set_timer0base(&txTimeOut, 1000);
 21934  003EC8  0EE2               	movlw	low _txTimeOut
 21935  003ECA  0100               	movlb	0	; force () banked
 21936  003ECC  6F71               	movwf	set_timer0base@timer& (0+255),b
 21937  003ECE  0E00               	movlw	high _txTimeOut
 21938  003ED0  6F72               	movwf	(set_timer0base@timer+1)& (0+255),b
 21939  003ED2  0E03               	movlw	3
 21940  003ED4  0100               	movlb	0	; force () banked
 21941  003ED6  6F74               	movwf	(set_timer0base@tval+1)& (0+255),b
 21942  003ED8  0EE8               	movlw	232
 21943  003EDA  6F73               	movwf	set_timer0base@tval& (0+255),b
 21944  003EDC  EC44  F05C         	call	_set_timer0base	;wreg free
 21945                           
 21946                           ; BSR set to: 57
 21947                           ;../phy/sx1276/sx1276_src/sx1276.c: 792:             radio_state_var = WAIT_FOR_TX;
 21948  003EE0  0E0C               	movlw	12
 21949  003EE2  0101               	movlb	1	; force () banked
 21950  003EE4  6FFD               	movwf	_radio_state_var& (0+255),b
 21951                           
 21952                           ;../phy/sx1276/sx1276_src/sx1276.c: 793:             break;
 21953  003EE6  0012               	return	
 21954  003EE8                     l19690:
 21955                           
 21956                           ; BSR set to: 0
 21957                           ;../phy/sx1276/sx1276_src/sx1276.c: 795:             if((!get_timer0base(&txTimeOut)) ||
      +                           ((SX1276Read(0x12) & 0x08))){
 21958  003EE8  0EE2               	movlw	low _txTimeOut
 21959  003EEA  0100               	movlb	0	; force () banked
 21960  003EEC  6F71               	movwf	get_timer0base@timer& (0+255),b
 21961  003EEE  0E00               	movlw	high _txTimeOut
 21962  003EF0  6F72               	movwf	(get_timer0base@timer+1)& (0+255),b
 21963  003EF2  EC39  F05B         	call	_get_timer0base	;wreg free
 21964  003EF6  0100               	movlb	0	; force () banked
 21965  003EF8  5171               	movf	?_get_timer0base& (0+255),w,b
 21966  003EFA  1172               	iorwf	(?_get_timer0base+1)& (0+255),w,b
 21967  003EFC  B4D8               	btfsc	status,2,c
 21968  003EFE  D007               	goto	u18080
 21969                           
 21970                           ; BSR set to: 0
 21971  003F00  0E12               	movlw	18
 21972  003F02  EC55  F05C         	call	_SX1276Read
 21973  003F06  0100               	movlb	0	; force () banked
 21974  003F08  6FBB               	movwf	??_radio_engine& (0+255),b
 21975  003F0A  A7BB               	btfss	??_radio_engine& (0+255),3,b
 21976  003F0C  0012               	return	
 21977  003F0E                     u18080:
 21978                           
 21979                           ; BSR set to: 0
 21980                           ;../phy/sx1276/sx1276_src/sx1276.c: 796:                 phyTxSize = 0;
 21981  003F0E  0E00               	movlw	0
 21982  003F10  0101               	movlb	1	; force () banked
 21983  003F12  6FEA               	movwf	_phyTxSize& (0+255),b
 21984                           
 21985                           ;../phy/sx1276/sx1276_src/sx1276.c: 797:                 radio_state_var = START_RX;
 21986  003F14  0E05               	movlw	5
 21987  003F16  0101               	movlb	1	; force () banked
 21988  003F18  6FFD               	movwf	_radio_state_var& (0+255),b
 21989                           
 21990                           ; BSR set to: 1
 21991                           ;../phy/sx1276/sx1276_src/sx1276.c: 798:                 if(get_timer0base(&txTimeOut)){
 21992  003F1A  0EE2               	movlw	low _txTimeOut
 21993  003F1C  0100               	movlb	0	; force () banked
 21994  003F1E  6F71               	movwf	get_timer0base@timer& (0+255),b
 21995  003F20  0E00               	movlw	high _txTimeOut
 21996  003F22  6F72               	movwf	(get_timer0base@timer+1)& (0+255),b
 21997  003F24  EC39  F05B         	call	_get_timer0base	;wreg free
 21998  003F28  0100               	movlb	0	; force () banked
 21999  003F2A  5171               	movf	?_get_timer0base& (0+255),w,b
 22000  003F2C  1172               	iorwf	(?_get_timer0base+1)& (0+255),w,b
 22001  003F2E  B4D8               	btfsc	status,2,c
 22002  003F30  D006               	goto	l19702
 22003                           
 22004                           ; BSR set to: 0
 22005                           ;../phy/sx1276/sx1276_src/sx1276.c: 799:                     PHY_DataConf(PHY_STATUS_SUC
      +                          CESS);
 22006  003F32  0E00               	movlw	0
 22007  003F34  ECEC  F057         	call	_PHY_DataConf
 22008                           
 22009                           ; BSR set to: 2
 22010                           ;../phy/sx1276/sx1276_src/sx1276.c: 801:                     queue_tx_led_event();
 22011  003F38  EC43  F04C         	call	_queue_tx_led_event	;wreg free
 22012                           
 22013                           ;../phy/sx1276/sx1276_src/sx1276.c: 803:                 }
 22014  003F3C  0012               	return	
 22015  003F3E                     l19702:
 22016                           
 22017                           ; BSR set to: 0
 22018                           ;../phy/sx1276/sx1276_src/sx1276.c: 805:                     PHY_DataConf(PHY_STATUS_NO_
      +                          ACK);
 22019  003F3E  0E02               	movlw	2
 22020  003F40  ECEC  F057         	call	_PHY_DataConf
 22021  003F44  0012               	return	
 22022  003F46                     l19704:
 22023                           
 22024                           ; BSR set to: 0
 22025                           ;../phy/sx1276/sx1276_src/sx1276.c: 810:             radio_state_var = RAD_RESET_LOW;
 22026  003F46  0E00               	movlw	0
 22027  003F48  0101               	movlb	1	; force () banked
 22028  003F4A  6FFD               	movwf	_radio_state_var& (0+255),b
 22029                           
 22030                           ;../phy/sx1276/sx1276_src/sx1276.c: 811:     }
 22031  003F4C  0012               	return	
 22032  003F4E                     l19706:
 22033  003F4E  0101               	movlb	1	; force () banked
 22034  003F50  51FD               	movf	_radio_state_var& (0+255),w,b
 22035  003F52  0100               	movlb	0	; force () banked
 22036  003F54  6FBB               	movwf	??_radio_engine& (0+255),b
 22037  003F56  6BBC               	clrf	(??_radio_engine+1)& (0+255),b
 22038                           
 22039                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22040                           ; Switch size 1, requested type "simple"
 22041                           ; Number of cases is 1, Range of values is 0 to 0
 22042                           ; switch strategies available:
 22043                           ; Name         Instructions Cycles
 22044                           ; simple_byte            4     3 (average)
 22045                           ;	Chosen strategy is simple_byte
 22046  003F58  51BC               	movf	(??_radio_engine+1)& (0+255),w,b
 22047  003F5A  0A00               	xorlw	0	; case 0
 22048  003F5C  A4D8               	btfss	status,2,c
 22049  003F5E  D7F3               	goto	l19704
 22050                           
 22051                           ; BSR set to: 0
 22052                           ; Switch size 1, requested type "simple"
 22053                           ; Number of cases is 11, Range of values is 0 to 12
 22054                           ; switch strategies available:
 22055                           ; Name         Instructions Cycles
 22056                           ; simple_byte           34    18 (average)
 22057                           ;	Chosen strategy is simple_byte
 22058  003F60  51BB               	movf	??_radio_engine& (0+255),w,b
 22059  003F62  0A00               	xorlw	0	; case 0
 22060  003F64  B4D8               	btfsc	status,2,c
 22061  003F66  D6E4               	goto	l3649
 22062  003F68  0A01               	xorlw	1	; case 1
 22063  003F6A  B4D8               	btfsc	status,2,c
 22064  003F6C  D6F2               	goto	l19624
 22065  003F6E  0A02               	xorlw	2	; case 3
 22066  003F70  B4D8               	btfsc	status,2,c
 22067  003F72  D70C               	goto	l19630
 22068  003F74  0A07               	xorlw	7	; case 4
 22069  003F76  B4D8               	btfsc	status,2,c
 22070  003F78  D719               	goto	l19634
 22071  003F7A  0A01               	xorlw	1	; case 5
 22072  003F7C  B4D8               	btfsc	status,2,c
 22073  003F7E  D71F               	goto	l19640
 22074  003F80  0A03               	xorlw	3	; case 6
 22075  003F82  B4D8               	btfsc	status,2,c
 22076  003F84  D72B               	goto	l3661
 22077  003F86  0A01               	xorlw	1	; case 7
 22078  003F88  B4D8               	btfsc	status,2,c
 22079  003F8A  D753               	goto	l19658
 22080  003F8C  0A0F               	xorlw	15	; case 8
 22081  003F8E  B4D8               	btfsc	status,2,c
 22082  003F90  D756               	goto	l19662
 22083  003F92  0A01               	xorlw	1	; case 9
 22084  003F94  B4D8               	btfsc	status,2,c
 22085  003F96  D767               	goto	l19670
 22086  003F98  0A02               	xorlw	2	; case 11
 22087  003F9A  B4D8               	btfsc	status,2,c
 22088  003F9C  D793               	goto	l19686
 22089  003F9E  0A07               	xorlw	7	; case 12
 22090  003FA0  B4D8               	btfsc	status,2,c
 22091  003FA2  D7A2               	goto	l19690
 22092  003FA4  D7D0               	goto	l19704
 22093  003FA6                     __end_of_radio_engine:
 22094                           	callstack 0
 22095                           
 22096 ;; *************** function _sx1276_send *****************
 22097 ;; Defined at:
 22098 ;;		line 664 in file "../phy/sx1276/sx1276_src/sx1276.c"
 22099 ;; Parameters:    Size  Location     Type
 22100 ;;		None
 22101 ;; Auto vars:     Size  Location     Type
 22102 ;;		None
 22103 ;; Return value:  Size  Location     Type
 22104 ;;                  1    wreg      void 
 22105 ;; Registers used:
 22106 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22107 ;; Tracked objects:
 22108 ;;		On entry : 0/0
 22109 ;;		On exit  : 3F/0
 22110 ;;		Unchanged: 0/0
 22111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22116 ;;Total ram usage:        0 bytes
 22117 ;; Hardware stack levels used:    1
 22118 ;; Hardware stack levels required when called:   16
 22119 ;; This function calls:
 22120 ;;		_SPI1_ExchangeByte
 22121 ;;		_SPI1_WriteBlock
 22122 ;;		_SX1276Write
 22123 ;;		_explicitHeaderMode
 22124 ;;		_idle
 22125 ;; This function is called by:
 22126 ;;		_radio_engine
 22127 ;; This function uses a non-reentrant model
 22128 ;;
 22129                           
 22130                           	psect	text107
 22131  00A760                     __ptext107:
 22132                           	callstack 0
 22133  00A760                     _sx1276_send:
 22134                           	callstack 11
 22135                           
 22136                           ;../phy/sx1276/sx1276_src/sx1276.c: 665:     idle();
 22137                           
 22138                           ;incstack = 0
 22139  00A760  EC4A  F05E         	call	_idle	;wreg free
 22140                           
 22141                           ;../phy/sx1276/sx1276_src/sx1276.c: 666:     explicitHeaderMode();
 22142  00A764  EC4B  F05D         	call	_explicitHeaderMode	;wreg free
 22143                           
 22144                           ;../phy/sx1276/sx1276_src/sx1276.c: 668:     SX1276Write(0x0E, 0x0);
 22145  00A768  0E00               	movlw	0
 22146  00A76A  0100               	movlb	0	; force () banked
 22147  00A76C  6F7E               	movwf	SX1276Write@data& (0+255),b
 22148  00A76E  0E0E               	movlw	14
 22149  00A770  ECEA  F05C         	call	_SX1276Write
 22150                           
 22151                           ;../phy/sx1276/sx1276_src/sx1276.c: 669:     SX1276Write(0x0D, 0x00);
 22152  00A774  0E00               	movlw	0
 22153  00A776  0100               	movlb	0	; force () banked
 22154  00A778  6F7E               	movwf	SX1276Write@data& (0+255),b
 22155  00A77A  0E0D               	movlw	13
 22156  00A77C  ECEA  F05C         	call	_SX1276Write
 22157                           
 22158                           ;../phy/sx1276/sx1276_src/sx1276.c: 670:     SX1276Write(0x22, phyTxSize);
 22159  00A780  C1EA  F07E         	movff	_phyTxSize,SX1276Write@data
 22160  00A784  0E22               	movlw	34
 22161  00A786  ECEA  F05C         	call	_SX1276Write
 22162                           
 22163                           ; BSR set to: 0
 22164  00A78A  9CBC               	bcf	188,6,c	;volatile
 22165                           
 22166                           ; BSR set to: 0
 22167                           ;../phy/sx1276/sx1276_src/sx1276.c: 673:     SPI1_ExchangeByte(0x00 | 0x80);
 22168  00A78C  0E80               	movlw	128
 22169  00A78E  EC15  F05D         	call	_SPI1_ExchangeByte
 22170                           
 22171                           ; BSR set to: 61
 22172                           ;../phy/sx1276/sx1276_src/sx1276.c: 674:     SPI1_WriteBlock(phyTxBuffer,phyTxSize);
 22173  00A792  0E00               	movlw	low _phyTxBuffer
 22174  00A794  0100               	movlb	0	; force () banked
 22175  00A796  6F72               	movwf	SPI1_WriteBlock@block& (0+255),b
 22176  00A798  0E09               	movlw	high _phyTxBuffer
 22177  00A79A  6F73               	movwf	(SPI1_WriteBlock@block+1)& (0+255),b
 22178  00A79C  C1EA  F074         	movff	_phyTxSize,SPI1_WriteBlock@blockSize
 22179  00A7A0  0100               	movlb	0	; force () banked
 22180  00A7A2  6B75               	clrf	(SPI1_WriteBlock@blockSize+1)& (0+255),b
 22181  00A7A4  EC8E  F059         	call	_SPI1_WriteBlock	;wreg free
 22182                           
 22183                           ; BSR set to: 0
 22184  00A7A8  8CBC               	bsf	188,6,c	;volatile
 22185                           
 22186                           ; BSR set to: 0
 22187                           ;../phy/sx1276/sx1276_src/sx1276.c: 676:     SX1276Write(0x01,
 22188  00A7AA  0E83               	movlw	131
 22189  00A7AC  0100               	movlb	0	; force () banked
 22190  00A7AE  6F7E               	movwf	SX1276Write@data& (0+255),b
 22191  00A7B0  0E01               	movlw	1
 22192  00A7B2  ECEA  F05C         	call	_SX1276Write
 22193                           
 22194                           ; BSR set to: 0
 22195  00A7B6  0012               	return		;funcret
 22196  00A7B8                     __end_of_sx1276_send:
 22197                           	callstack 0
 22198                           
 22199 ;; *************** function _queue_tx_led_event *****************
 22200 ;; Defined at:
 22201 ;;		line 119 in file "../app/app_src/led.c"
 22202 ;; Parameters:    Size  Location     Type
 22203 ;;		None
 22204 ;; Auto vars:     Size  Location     Type
 22205 ;;  i               2   55[BANK0 ] int 
 22206 ;; Return value:  Size  Location     Type
 22207 ;;                  1    wreg      void 
 22208 ;; Registers used:
 22209 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22210 ;; Tracked objects:
 22211 ;;		On entry : 3F/2
 22212 ;;		On exit  : 3F/0
 22213 ;;		Unchanged: 0/0
 22214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22216 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22218 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22219 ;;Total ram usage:        2 bytes
 22220 ;; Hardware stack levels used:    1
 22221 ;; Hardware stack levels required when called:   14
 22222 ;; This function calls:
 22223 ;;		_queueLedEvent
 22224 ;; This function is called by:
 22225 ;;		_radio_engine
 22226 ;; This function uses a non-reentrant model
 22227 ;;
 22228                           
 22229                           	psect	text108
 22230  009886                     __ptext108:
 22231                           	callstack 0
 22232  009886                     _queue_tx_led_event:
 22233                           	callstack 13
 22234                           
 22235                           ;../app/app_src/led.c: 121:     (void)queueLedEvent(0,400);
 22236                           
 22237                           ; BSR set to: 0
 22238                           ;incstack = 0
 22239  009886  0E01               	movlw	1
 22240  009888  0100               	movlb	0	; force () banked
 22241  00988A  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
 22242  00988C  0E90               	movlw	144
 22243  00988E  6F90               	movwf	queueLedEvent@duration& (0+255),b
 22244  009890  0E00               	movlw	0
 22245  009892  EC88  F054         	call	_queueLedEvent
 22246                           
 22247                           ; BSR set to: 0
 22248                           ;../app/app_src/led.c: 122:     for(int i = 0; i < 2; i++)
 22249  009896  0E00               	movlw	0
 22250  009898  0100               	movlb	0	; force () banked
 22251  00989A  6F98               	movwf	(queue_tx_led_event@i+1)& (0+255),b
 22252  00989C  0E00               	movlw	0
 22253  00989E  6F97               	movwf	queue_tx_led_event@i& (0+255),b
 22254                           
 22255                           ; BSR set to: 0
 22256  0098A0  0100               	movlb	0	; force () banked
 22257  0098A2  BF98               	btfsc	(queue_tx_led_event@i+1)& (0+255),7,b
 22258  0098A4  D003               	goto	l18826
 22259  0098A6  5198               	movf	(queue_tx_led_event@i+1)& (0+255),w,b
 22260  0098A8  E11D               	bnz	l18832
 22261  0098AA  D018               	goto	L27
 22262  0098AC                     l18826:
 22263                           
 22264                           ; BSR set to: 0
 22265                           ;../app/app_src/led.c: 123:     {;../app/app_src/led.c: 124:         (void)queueLedEvent
      +                          (1,100);
 22266  0098AC  0E00               	movlw	0
 22267  0098AE  0100               	movlb	0	; force () banked
 22268  0098B0  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
 22269  0098B2  0E64               	movlw	100
 22270  0098B4  6F90               	movwf	queueLedEvent@duration& (0+255),b
 22271  0098B6  0E01               	movlw	1
 22272  0098B8  EC88  F054         	call	_queueLedEvent
 22273                           
 22274                           ;../app/app_src/led.c: 125:         (void)queueLedEvent(0,100);
 22275  0098BC  0E00               	movlw	0
 22276  0098BE  0100               	movlb	0	; force () banked
 22277  0098C0  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
 22278  0098C2  0E64               	movlw	100
 22279  0098C4  6F90               	movwf	queueLedEvent@duration& (0+255),b
 22280  0098C6  0E00               	movlw	0
 22281  0098C8  EC88  F054         	call	_queueLedEvent
 22282                           
 22283                           ; BSR set to: 0
 22284                           ;../app/app_src/led.c: 126:     }
 22285  0098CC  0100               	movlb	0	; force () banked
 22286  0098CE  4B97               	infsnz	queue_tx_led_event@i& (0+255),f,b
 22287  0098D0  2B98               	incf	(queue_tx_led_event@i+1)& (0+255),f,b
 22288                           
 22289                           ; BSR set to: 0
 22290  0098D2  0100               	movlb	0	; force () banked
 22291  0098D4  BF98               	btfsc	(queue_tx_led_event@i+1)& (0+255),7,b
 22292  0098D6  D7EA               	goto	l18826
 22293  0098D8  5198               	movf	(queue_tx_led_event@i+1)& (0+255),w,b
 22294  0098DA  E104               	bnz	u16520
 22295  0098DC                     L27:
 22296  0098DC  0E02               	movlw	2
 22297  0098DE  5D97               	subwf	queue_tx_led_event@i& (0+255),w,b
 22298  0098E0  A0D8               	btfss	status,0,c
 22299  0098E2  D7E4               	goto	l18826
 22300  0098E4                     u16520:
 22301  0098E4                     l18832:
 22302                           
 22303                           ; BSR set to: 0
 22304                           ;../app/app_src/led.c: 127:     (void)queueLedEvent(1,300);
 22305  0098E4  0E01               	movlw	1
 22306  0098E6  0100               	movlb	0	; force () banked
 22307  0098E8  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
 22308  0098EA  0E2C               	movlw	44
 22309  0098EC  6F90               	movwf	queueLedEvent@duration& (0+255),b
 22310  0098EE  0E01               	movlw	1
 22311  0098F0  EC88  F054         	call	_queueLedEvent
 22312                           
 22313                           ;../app/app_src/led.c: 128:     (void)queueLedEvent(0,300);
 22314  0098F4  0E01               	movlw	1
 22315  0098F6  0100               	movlb	0	; force () banked
 22316  0098F8  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
 22317  0098FA  0E2C               	movlw	44
 22318  0098FC  6F90               	movwf	queueLedEvent@duration& (0+255),b
 22319  0098FE  0E00               	movlw	0
 22320  009900  EC88  F054         	call	_queueLedEvent
 22321                           
 22322                           ;../app/app_src/led.c: 129:     (void)queueLedEvent(1,100);
 22323  009904  0E00               	movlw	0
 22324  009906  0100               	movlb	0	; force () banked
 22325  009908  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
 22326  00990A  0E64               	movlw	100
 22327  00990C  6F90               	movwf	queueLedEvent@duration& (0+255),b
 22328  00990E  0E01               	movlw	1
 22329  009910  EC88  F054         	call	_queueLedEvent
 22330                           
 22331                           ; BSR set to: 0
 22332  009914  0012               	return		;funcret
 22333  009916                     __end_of_queue_tx_led_event:
 22334                           	callstack 0
 22335                           
 22336 ;; *************** function _initRadio *****************
 22337 ;; Defined at:
 22338 ;;		line 443 in file "../phy/sx1276/sx1276_src/sx1276.c"
 22339 ;; Parameters:    Size  Location     Type
 22340 ;;		None
 22341 ;; Auto vars:     Size  Location     Type
 22342 ;;  wideRSSI        2   71[BANK0 ] unsigned int 
 22343 ;;  version         1   70[BANK0 ] unsigned char 
 22344 ;; Return value:  Size  Location     Type
 22345 ;;                  1    wreg      void 
 22346 ;; Registers used:
 22347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22348 ;; Tracked objects:
 22349 ;;		On entry : 0/0
 22350 ;;		On exit  : 3F/2
 22351 ;;		Unchanged: 0/0
 22352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22354 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22355 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22356 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22357 ;;Total ram usage:        7 bytes
 22358 ;; Hardware stack levels used:    1
 22359 ;; Hardware stack levels required when called:   17
 22360 ;; This function calls:
 22361 ;;		_PHY_SetChannel
 22362 ;;		_SX1276Read
 22363 ;;		_SX1276Write
 22364 ;;		_enableCrc
 22365 ;;		_explicitHeaderMode
 22366 ;;		_receive
 22367 ;;		_setCodingRate4
 22368 ;;		_setPreambleLength
 22369 ;;		_setSignalBandwidth
 22370 ;;		_setSpreadingFactor
 22371 ;;		_setSyncWord
 22372 ;;		_setTxPower
 22373 ;;		_srand
 22374 ;; This function is called by:
 22375 ;;		_radio_engine
 22376 ;; This function uses a non-reentrant model
 22377 ;;
 22378                           
 22379                           	psect	text109
 22380  006CF2                     __ptext109:
 22381                           	callstack 0
 22382  006CF2                     _initRadio:
 22383                           	callstack 10
 22384                           
 22385                           ;../phy/sx1276/sx1276_src/sx1276.c: 445:     uint8_t version;;../phy/sx1276/sx1276_src/s
      +                          x1276.c: 446:     uint16_t wideRSSI;;../phy/sx1276/sx1276_src/sx1276.c: 448:     version
      +                           = SX1276Read(0x42);
 22386                           
 22387                           ; BSR set to: 0
 22388                           ;incstack = 0
 22389  006CF2  0E42               	movlw	66
 22390  006CF4  EC55  F05C         	call	_SX1276Read
 22391  006CF8  0100               	movlb	0	; force () banked
 22392  006CFA  6FA6               	movwf	initRadio@version& (0+255),b
 22393                           
 22394                           ; BSR set to: 0
 22395                           ;../phy/sx1276/sx1276_src/sx1276.c: 449:     version++;
 22396  006CFC  0100               	movlb	0	; force () banked
 22397  006CFE  2BA6               	incf	initRadio@version& (0+255),f,b
 22398                           
 22399                           ; BSR set to: 0
 22400                           ;../phy/sx1276/sx1276_src/sx1276.c: 451:     SX1276Write(0x01,0x00);
 22401  006D00  0E00               	movlw	0
 22402  006D02  0100               	movlb	0	; force () banked
 22403  006D04  6F7E               	movwf	SX1276Write@data& (0+255),b
 22404  006D06  0E01               	movlw	1
 22405  006D08  ECEA  F05C         	call	_SX1276Write
 22406                           
 22407                           ; BSR set to: 0
 22408                           ;../phy/sx1276/sx1276_src/sx1276.c: 452:     SX1276Write(0x01,0x80);
 22409  006D0C  0E80               	movlw	128
 22410  006D0E  0100               	movlb	0	; force () banked
 22411  006D10  6F7E               	movwf	SX1276Write@data& (0+255),b
 22412  006D12  0E01               	movlw	1
 22413  006D14  ECEA  F05C         	call	_SX1276Write
 22414                           
 22415                           ; BSR set to: 0
 22416                           ;../phy/sx1276/sx1276_src/sx1276.c: 454:     PHY_SetChannel(channel);
 22417  006D18  0100               	movlb	0	; force () banked
 22418  006D1A  51DD               	movf	_channel& (0+255),w,b
 22419  006D1C  EC4A  F057         	call	_PHY_SetChannel
 22420                           
 22421                           ; BSR set to: 0
 22422                           ;../phy/sx1276/sx1276_src/sx1276.c: 455:     setSpreadingFactor(7);
 22423  006D20  0E07               	movlw	7
 22424  006D22  EC9E  F03B         	call	_setSpreadingFactor
 22425                           
 22426                           ; BSR set to: 0
 22427                           ;../phy/sx1276/sx1276_src/sx1276.c: 456:     setTxPower(TXPower);
 22428  006D26  0100               	movlb	0	; force () banked
 22429  006D28  51DC               	movf	_TXPower& (0+255),w,b
 22430  006D2A  ECE3  F058         	call	_setTxPower
 22431                           
 22432                           ; BSR set to: 0
 22433                           ;../phy/sx1276/sx1276_src/sx1276.c: 457:     setSignalBandwidth(500E3);
 22434  006D2E  0E20               	movlw	32
 22435  006D30  0100               	movlb	0	; force () banked
 22436  006D32  6F92               	movwf	setSignalBandwidth@sbw& (0+255),b
 22437  006D34  0EA1               	movlw	161
 22438  006D36  6F93               	movwf	(setSignalBandwidth@sbw+1)& (0+255),b
 22439  006D38  0E07               	movlw	7
 22440  006D3A  6F94               	movwf	(setSignalBandwidth@sbw+2)& (0+255),b
 22441  006D3C  0E00               	movlw	0
 22442  006D3E  6F95               	movwf	(setSignalBandwidth@sbw+3)& (0+255),b
 22443  006D40  EC8E  F015         	call	_setSignalBandwidth	;wreg free
 22444                           
 22445                           ; BSR set to: 0
 22446                           ;../phy/sx1276/sx1276_src/sx1276.c: 458:     explicitHeaderMode();
 22447  006D44  EC4B  F05D         	call	_explicitHeaderMode	;wreg free
 22448                           
 22449                           ; BSR set to: 0
 22450                           ;../phy/sx1276/sx1276_src/sx1276.c: 459:     setCodingRate4(4);
 22451  006D48  0E04               	movlw	4
 22452  006D4A  ECBF  F055         	call	_setCodingRate4
 22453                           
 22454                           ; BSR set to: 0
 22455                           ;../phy/sx1276/sx1276_src/sx1276.c: 460:     setPreambleLength(12);
 22456  006D4E  0E00               	movlw	0
 22457  006D50  0100               	movlb	0	; force () banked
 22458  006D52  6F81               	movwf	(setPreambleLength@length+1)& (0+255),b
 22459  006D54  0E0C               	movlw	12
 22460  006D56  6F80               	movwf	setPreambleLength@length& (0+255),b
 22461  006D58  ECD8  F05D         	call	_setPreambleLength	;wreg free
 22462                           
 22463                           ; BSR set to: 0
 22464                           ;../phy/sx1276/sx1276_src/sx1276.c: 461:     enableCrc();
 22465  006D5C  ECED  F05D         	call	_enableCrc	;wreg free
 22466                           
 22467                           ; BSR set to: 0
 22468                           ;../phy/sx1276/sx1276_src/sx1276.c: 462:     setSyncWord(pan_id & 0xFF);
 22469  006D60  0101               	movlb	1	; force () banked
 22470  006D62  51DB               	movf	_pan_id& (0+255),w,b
 22471  006D64  EC2C  F05E         	call	_setSyncWord
 22472                           
 22473                           ; BSR set to: 0
 22474                           ;../phy/sx1276/sx1276_src/sx1276.c: 463:     SX1276Write(0x0E, 0x0);
 22475  006D68  0E00               	movlw	0
 22476  006D6A  0100               	movlb	0	; force () banked
 22477  006D6C  6F7E               	movwf	SX1276Write@data& (0+255),b
 22478  006D6E  0E0E               	movlw	14
 22479  006D70  ECEA  F05C         	call	_SX1276Write
 22480                           
 22481                           ; BSR set to: 0
 22482                           ;../phy/sx1276/sx1276_src/sx1276.c: 464:     SX1276Write(0x0F, 0);
 22483  006D74  0E00               	movlw	0
 22484  006D76  0100               	movlb	0	; force () banked
 22485  006D78  6F7E               	movwf	SX1276Write@data& (0+255),b
 22486  006D7A  0E0F               	movlw	15
 22487  006D7C  ECEA  F05C         	call	_SX1276Write
 22488                           
 22489                           ; BSR set to: 0
 22490                           ;../phy/sx1276/sx1276_src/sx1276.c: 467:     SX1276Write(0x0C, SX1276Read(0x0C) | 0x03);
 22491  006D80  0E0C               	movlw	12
 22492  006D82  EC55  F05C         	call	_SX1276Read
 22493  006D86  0903               	iorlw	3
 22494  006D88  0100               	movlb	0	; force () banked
 22495  006D8A  6F7E               	movwf	SX1276Write@data& (0+255),b
 22496  006D8C  0E0C               	movlw	12
 22497  006D8E  ECEA  F05C         	call	_SX1276Write
 22498                           
 22499                           ; BSR set to: 0
 22500                           ;../phy/sx1276/sx1276_src/sx1276.c: 470:     SX1276Write(0x26, 0x04);
 22501  006D92  0E04               	movlw	4
 22502  006D94  0100               	movlb	0	; force () banked
 22503  006D96  6F7E               	movwf	SX1276Write@data& (0+255),b
 22504  006D98  0E26               	movlw	38
 22505  006D9A  ECEA  F05C         	call	_SX1276Write
 22506                           
 22507                           ; BSR set to: 0
 22508                           ;../phy/sx1276/sx1276_src/sx1276.c: 473:     SX1276Write(0x36,0x02);
 22509  006D9E  0E02               	movlw	2
 22510  006DA0  0100               	movlb	0	; force () banked
 22511  006DA2  6F7E               	movwf	SX1276Write@data& (0+255),b
 22512  006DA4  0E36               	movlw	54
 22513  006DA6  ECEA  F05C         	call	_SX1276Write
 22514                           
 22515                           ; BSR set to: 0
 22516                           ;../phy/sx1276/sx1276_src/sx1276.c: 474:     SX1276Write(0x3A,0x64);
 22517  006DAA  0E64               	movlw	100
 22518  006DAC  0100               	movlb	0	; force () banked
 22519  006DAE  6F7E               	movwf	SX1276Write@data& (0+255),b
 22520  006DB0  0E3A               	movlw	58
 22521  006DB2  ECEA  F05C         	call	_SX1276Write
 22522                           
 22523                           ; BSR set to: 0
 22524                           ;../phy/sx1276/sx1276_src/sx1276.c: 486:     SX1276Write(0x1F,255);
 22525  006DB6  0EFF               	movlw	255
 22526  006DB8  0100               	movlb	0	; force () banked
 22527  006DBA  6F7E               	movwf	SX1276Write@data& (0+255),b
 22528  006DBC  0E1F               	movlw	31
 22529  006DBE  ECEA  F05C         	call	_SX1276Write
 22530                           
 22531                           ; BSR set to: 0
 22532                           ;../phy/sx1276/sx1276_src/sx1276.c: 488:     receive(0);
 22533  006DC2  0E00               	movlw	0
 22534  006DC4  ECBF  F056         	call	_receive
 22535                           
 22536                           ; BSR set to: 0
 22537                           ;../phy/sx1276/sx1276_src/sx1276.c: 489:     _delay((unsigned long)((10)*(64000000/4000.
      +                          0)));
 22538  006DC8  0ED0               	movlw	208
 22539  006DCA  0100               	movlb	0	; force () banked
 22540  006DCC  6FA2               	movwf	??_initRadio& (0+255),b
 22541  006DCE  0EC9               	movlw	201
 22542  006DD0                     u19037:
 22543  006DD0  2EE8               	decfsz	wreg,f,c
 22544  006DD2  D7FE               	bra	u19037
 22545  006DD4  2FA2               	decfsz	??_initRadio& (0+255),f,b
 22546  006DD6  D7FC               	bra	u19037
 22547  006DD8  D000               	nop2	
 22548                           
 22549                           ;../phy/sx1276/sx1276_src/sx1276.c: 491:     wideRSSI = (SX1276Read(0x2C)<<8) + SX1276Re
      +                          ad(0x2C);
 22550  006DDA  0E2C               	movlw	44
 22551  006DDC  EC55  F05C         	call	_SX1276Read
 22552  006DE0  0100               	movlb	0	; force () banked
 22553  006DE2  6FA2               	movwf	??_initRadio& (0+255),b
 22554  006DE4  0E2C               	movlw	44
 22555  006DE6  EC55  F05C         	call	_SX1276Read
 22556  006DEA  0100               	movlb	0	; force () banked
 22557  006DEC  6FA3               	movwf	(??_initRadio+1)& (0+255),b
 22558  006DEE  51A3               	movf	(??_initRadio+1)& (0+255),w,b
 22559  006DF0  6FA5               	movwf	(??_initRadio+3)& (0+255),b
 22560  006DF2  6BA4               	clrf	(??_initRadio+2)& (0+255),b
 22561  006DF4  51A2               	movf	??_initRadio& (0+255),w,b
 22562  006DF6  25A4               	addwf	(??_initRadio+2)& (0+255),w,b
 22563  006DF8  0100               	movlb	0	; force () banked
 22564  006DFA  6FA7               	movwf	initRadio@wideRSSI& (0+255),b
 22565  006DFC  0100               	movlb	0	; force () banked
 22566  006DFE  0E00               	movlw	0
 22567  006E00  21A5               	addwfc	(??_initRadio+3)& (0+255),w,b
 22568  006E02  0100               	movlb	0	; force () banked
 22569  006E04  6FA8               	movwf	(initRadio@wideRSSI+1)& (0+255),b
 22570                           
 22571                           ; BSR set to: 0
 22572                           ;../phy/sx1276/sx1276_src/sx1276.c: 493:     srand(wideRSSI);
 22573  006E06  C0A7  F071         	movff	initRadio@wideRSSI,srand@x
 22574  006E0A  C0A8  F072         	movff	initRadio@wideRSSI+1,srand@x+1
 22575  006E0E  EC24  F05E         	call	_srand	;wreg free
 22576                           
 22577                           ; BSR set to: 2
 22578  006E12  0012               	return		;funcret
 22579  006E14                     __end_of_initRadio:
 22580                           	callstack 0
 22581                           
 22582 ;; *************** function _srand *****************
 22583 ;; Defined at:
 22584 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\rand.c"
 22585 ;; Parameters:    Size  Location     Type
 22586 ;;  x               2   17[BANK0 ] unsigned int 
 22587 ;; Auto vars:     Size  Location     Type
 22588 ;;		None
 22589 ;; Return value:  Size  Location     Type
 22590 ;;                  1    wreg      void 
 22591 ;; Registers used:
 22592 ;;		status,2
 22593 ;; Tracked objects:
 22594 ;;		On entry : 3F/0
 22595 ;;		On exit  : 3F/2
 22596 ;;		Unchanged: 0/0
 22597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22598 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22601 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22602 ;;Total ram usage:        2 bytes
 22603 ;; Hardware stack levels used:    1
 22604 ;; Hardware stack levels required when called:   11
 22605 ;; This function calls:
 22606 ;;		Nothing
 22607 ;; This function is called by:
 22608 ;;		_initRadio
 22609 ;; This function uses a non-reentrant model
 22610 ;;
 22611                           
 22612                           	psect	text110
 22613  00BC48                     __ptext110:
 22614                           	callstack 0
 22615  00BC48                     _srand:
 22616                           	callstack 15
 22617                           
 22618                           ; BSR set to: 2
 22619                           ;incstack = 0
 22620  00BC48  C071  F2F5         	movff	srand@x,_randx
 22621  00BC4C  C072  F2F6         	movff	srand@x+1,_randx+1
 22622  00BC50  0102               	movlb	2	; () banked
 22623  00BC52  6BF7               	clrf	(_randx+2)& (0+255),b
 22624  00BC54  6BF8               	clrf	(_randx+3)& (0+255),b
 22625                           
 22626                           ; BSR set to: 2
 22627  00BC56  0012               	return		;funcret
 22628  00BC58                     __end_of_srand:
 22629                           	callstack 0
 22630                           
 22631 ;; *************** function _setTxPower *****************
 22632 ;; Defined at:
 22633 ;;		line 139 in file "../phy/sx1276/sx1276_src/sx1276.c"
 22634 ;; Parameters:    Size  Location     Type
 22635 ;;  power           1    wreg     unsigned char 
 22636 ;; Auto vars:     Size  Location     Type
 22637 ;;  power           1   32[BANK0 ] unsigned char 
 22638 ;; Return value:  Size  Location     Type
 22639 ;;                  1    wreg      void 
 22640 ;; Registers used:
 22641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22642 ;; Tracked objects:
 22643 ;;		On entry : 3F/0
 22644 ;;		On exit  : 3F/0
 22645 ;;		Unchanged: 0/0
 22646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22648 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22650 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22651 ;;Total ram usage:        1 bytes
 22652 ;; Hardware stack levels used:    1
 22653 ;; Hardware stack levels required when called:   15
 22654 ;; This function calls:
 22655 ;;		_SX1276Write
 22656 ;; This function is called by:
 22657 ;;		_initRadio
 22658 ;; This function uses a non-reentrant model
 22659 ;;
 22660                           
 22661                           	psect	text111
 22662  00B1C6                     __ptext111:
 22663                           	callstack 0
 22664  00B1C6                     _setTxPower:
 22665                           	callstack 11
 22666                           
 22667                           ; BSR set to: 2
 22668                           ;incstack = 0
 22669                           ;setTxPower@power stored from wreg
 22670  00B1C6  0100               	movlb	0	; force () banked
 22671  00B1C8  6F80               	movwf	setTxPower@power& (0+255),b
 22672                           
 22673                           ;../phy/sx1276/sx1276_src/sx1276.c: 139: void setTxPower(uint8_t power);../phy/sx1276/sx
      +                          1276_src/sx1276.c: 140: {;../phy/sx1276/sx1276_src/sx1276.c: 141:     if(power < 2)
 22674  00B1CA  0E02               	movlw	2
 22675  00B1CC  0100               	movlb	0	; force () banked
 22676  00B1CE  6180               	cpfslt	setTxPower@power& (0+255),b
 22677  00B1D0  D003               	goto	l13866
 22678                           
 22679                           ; BSR set to: 0
 22680                           ;../phy/sx1276/sx1276_src/sx1276.c: 142:     {;../phy/sx1276/sx1276_src/sx1276.c: 143:  
      +                                 power = 2;
 22681  00B1D2  0E02               	movlw	2
 22682  00B1D4  0100               	movlb	0	; force () banked
 22683  00B1D6  6F80               	movwf	setTxPower@power& (0+255),b
 22684  00B1D8                     l13866:
 22685                           
 22686                           ; BSR set to: 0
 22687                           ;../phy/sx1276/sx1276_src/sx1276.c: 145:     if(power > 17)
 22688  00B1D8  0E11               	movlw	17
 22689  00B1DA  0100               	movlb	0	; force () banked
 22690  00B1DC  6580               	cpfsgt	setTxPower@power& (0+255),b
 22691  00B1DE  D003               	goto	l13870
 22692                           
 22693                           ; BSR set to: 0
 22694                           ;../phy/sx1276/sx1276_src/sx1276.c: 146:     {;../phy/sx1276/sx1276_src/sx1276.c: 147:  
      +                                 power = 17;
 22695  00B1E0  0E11               	movlw	17
 22696  00B1E2  0100               	movlb	0	; force () banked
 22697  00B1E4  6F80               	movwf	setTxPower@power& (0+255),b
 22698  00B1E6                     l13870:
 22699                           
 22700                           ; BSR set to: 0
 22701                           ;../phy/sx1276/sx1276_src/sx1276.c: 149:     power = power -2;
 22702  00B1E6  0100               	movlb	0	; force () banked
 22703  00B1E8  5180               	movf	setTxPower@power& (0+255),w,b
 22704  00B1EA  0FFE               	addlw	254
 22705  00B1EC  6F80               	movwf	setTxPower@power& (0+255),b
 22706                           
 22707                           ; BSR set to: 0
 22708                           ;../phy/sx1276/sx1276_src/sx1276.c: 150:     SX1276Write(0x09, 0x70 | power | 0x80);
 22709  00B1EE  0100               	movlb	0	; force () banked
 22710  00B1F0  5180               	movf	setTxPower@power& (0+255),w,b
 22711  00B1F2  09F0               	iorlw	240
 22712  00B1F4  0100               	movlb	0	; force () banked
 22713  00B1F6  6F7E               	movwf	SX1276Write@data& (0+255),b
 22714  00B1F8  0E09               	movlw	9
 22715  00B1FA  ECEA  F05C         	call	_SX1276Write
 22716                           
 22717                           ; BSR set to: 0
 22718  00B1FE  0012               	return		;funcret
 22719  00B200                     __end_of_setTxPower:
 22720                           	callstack 0
 22721                           
 22722 ;; *************** function _setSyncWord *****************
 22723 ;; Defined at:
 22724 ;;		line 328 in file "../phy/sx1276/sx1276_src/sx1276.c"
 22725 ;; Parameters:    Size  Location     Type
 22726 ;;  sw              1    wreg     unsigned char 
 22727 ;; Auto vars:     Size  Location     Type
 22728 ;;  sw              1   32[BANK0 ] unsigned char 
 22729 ;; Return value:  Size  Location     Type
 22730 ;;                  1    wreg      void 
 22731 ;; Registers used:
 22732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22733 ;; Tracked objects:
 22734 ;;		On entry : 3F/1
 22735 ;;		On exit  : 3F/0
 22736 ;;		Unchanged: 0/0
 22737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22739 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22741 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22742 ;;Total ram usage:        1 bytes
 22743 ;; Hardware stack levels used:    1
 22744 ;; Hardware stack levels required when called:   15
 22745 ;; This function calls:
 22746 ;;		_SX1276Write
 22747 ;; This function is called by:
 22748 ;;		_initRadio
 22749 ;; This function uses a non-reentrant model
 22750 ;;
 22751                           
 22752                           	psect	text112
 22753  00BC58                     __ptext112:
 22754                           	callstack 0
 22755  00BC58                     _setSyncWord:
 22756                           	callstack 11
 22757                           
 22758                           ; BSR set to: 0
 22759                           ;incstack = 0
 22760                           ;setSyncWord@sw stored from wreg
 22761  00BC58  0100               	movlb	0	; force () banked
 22762  00BC5A  6F80               	movwf	setSyncWord@sw& (0+255),b
 22763                           
 22764                           ;../phy/sx1276/sx1276_src/sx1276.c: 328: void setSyncWord(uint8_t sw);../phy/sx1276/sx12
      +                          76_src/sx1276.c: 329: {;../phy/sx1276/sx1276_src/sx1276.c: 330:   SX1276Write(0x39, sw);
 22765  00BC5C  C080  F07E         	movff	setSyncWord@sw,SX1276Write@data
 22766  00BC60  0E39               	movlw	57
 22767  00BC62  ECEA  F05C         	call	_SX1276Write
 22768                           
 22769                           ; BSR set to: 0
 22770  00BC66  0012               	return		;funcret
 22771  00BC68                     __end_of_setSyncWord:
 22772                           	callstack 0
 22773                           
 22774 ;; *************** function _setSpreadingFactor *****************
 22775 ;; Defined at:
 22776 ;;		line 197 in file "../phy/sx1276/sx1276_src/sx1276.c"
 22777 ;; Parameters:    Size  Location     Type
 22778 ;;  sf              1    wreg     unsigned char 
 22779 ;; Auto vars:     Size  Location     Type
 22780 ;;  sf              1   58[BANK0 ] unsigned char 
 22781 ;; Return value:  Size  Location     Type
 22782 ;;                  1    wreg      void 
 22783 ;; Registers used:
 22784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22785 ;; Tracked objects:
 22786 ;;		On entry : 3F/0
 22787 ;;		On exit  : 3F/0
 22788 ;;		Unchanged: 0/0
 22789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22791 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22792 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22793 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22794 ;;Total ram usage:        9 bytes
 22795 ;; Hardware stack levels used:    1
 22796 ;; Hardware stack levels required when called:   16
 22797 ;; This function calls:
 22798 ;;		_SX1276Read
 22799 ;;		_SX1276Write
 22800 ;;		___lldiv
 22801 ;;		_getSignalBandwidth
 22802 ;;		_getSpreadingFactor
 22803 ;; This function is called by:
 22804 ;;		_initRadio
 22805 ;; This function uses a non-reentrant model
 22806 ;;
 22807                           
 22808                           	psect	text113
 22809  00773C                     __ptext113:
 22810                           	callstack 0
 22811  00773C                     _setSpreadingFactor:
 22812                           	callstack 10
 22813                           
 22814                           ; BSR set to: 0
 22815                           ;incstack = 0
 22816                           ;setSpreadingFactor@sf stored from wreg
 22817  00773C  0100               	movlb	0	; force () banked
 22818  00773E  6F9A               	movwf	setSpreadingFactor@sf& (0+255),b
 22819                           
 22820                           ;../phy/sx1276/sx1276_src/sx1276.c: 197: void setSpreadingFactor(uint8_t sf);../phy/sx12
      +                          76/sx1276_src/sx1276.c: 198: {;../phy/sx1276/sx1276_src/sx1276.c: 199:     if (sf < 7)
 22821  007740  0E07               	movlw	7
 22822  007742  0100               	movlb	0	; force () banked
 22823  007744  619A               	cpfslt	setSpreadingFactor@sf& (0+255),b
 22824  007746  D002               	goto	l13878
 22825                           
 22826                           ; BSR set to: 0
 22827                           ;../phy/sx1276/sx1276_src/sx1276.c: 200:     {;../phy/sx1276/sx1276_src/sx1276.c: 201:  
      +                                 sf = 7;
 22828  007748  0E07               	movlw	7
 22829  00774A  D005               	goto	L28
 22830  00774C                     l13878:
 22831                           
 22832                           ; BSR set to: 0
 22833  00774C  0E0C               	movlw	12
 22834  00774E  0100               	movlb	0	; force () banked
 22835  007750  659A               	cpfsgt	setSpreadingFactor@sf& (0+255),b
 22836  007752  D003               	goto	l13882
 22837                           
 22838                           ; BSR set to: 0
 22839                           ;../phy/sx1276/sx1276_src/sx1276.c: 204:     {;../phy/sx1276/sx1276_src/sx1276.c: 205:  
      +                                 sf = 12;
 22840  007754  0E0C               	movlw	12
 22841  007756                     L28:
 22842  007756  0100               	movlb	0	; force () banked
 22843  007758  6F9A               	movwf	setSpreadingFactor@sf& (0+255),b
 22844  00775A                     l13882:
 22845                           
 22846                           ; BSR set to: 0
 22847                           ;../phy/sx1276/sx1276_src/sx1276.c: 208:     SX1276Write(0x31, 0xc3);
 22848  00775A  0EC3               	movlw	195
 22849  00775C  0100               	movlb	0	; force () banked
 22850  00775E  6F7E               	movwf	SX1276Write@data& (0+255),b
 22851  007760  0E31               	movlw	49
 22852  007762  ECEA  F05C         	call	_SX1276Write
 22853                           
 22854                           ; BSR set to: 0
 22855                           ;../phy/sx1276/sx1276_src/sx1276.c: 209:     SX1276Write(0x37, 0x0a);
 22856  007766  0E0A               	movlw	10
 22857  007768  0100               	movlb	0	; force () banked
 22858  00776A  6F7E               	movwf	SX1276Write@data& (0+255),b
 22859  00776C  0E37               	movlw	55
 22860  00776E  ECEA  F05C         	call	_SX1276Write
 22861                           
 22862                           ; BSR set to: 0
 22863                           ;../phy/sx1276/sx1276_src/sx1276.c: 210:     SX1276Write(0x1E, (SX1276Read(0x1E) & 0x0f)
      +                           | ((sf << 4) & 0xf0));
 22864  007772  C09A  F092         	movff	setSpreadingFactor@sf,??_setSpreadingFactor
 22865  007776  0100               	movlb	0	; force () banked
 22866  007778  3B92               	swapf	??_setSpreadingFactor& (0+255),f,b
 22867  00777A  0EF0               	movlw	240
 22868  00777C  1792               	andwf	??_setSpreadingFactor& (0+255),f,b
 22869  00777E  0EF0               	movlw	240
 22870  007780  1792               	andwf	??_setSpreadingFactor& (0+255),f,b
 22871  007782  0E1E               	movlw	30
 22872  007784  EC55  F05C         	call	_SX1276Read
 22873  007788  0B0F               	andlw	15
 22874  00778A  0100               	movlb	0	; force () banked
 22875  00778C  1192               	iorwf	??_setSpreadingFactor& (0+255),w,b
 22876  00778E  0100               	movlb	0	; force () banked
 22877  007790  6F7E               	movwf	SX1276Write@data& (0+255),b
 22878  007792  0E1E               	movlw	30
 22879  007794  ECEA  F05C         	call	_SX1276Write
 22880                           
 22881                           ; BSR set to: 0
 22882                           ;../phy/sx1276/sx1276_src/sx1276.c: 212:     symbolDuration = 1000 / ( getSignalBandwidt
      +                          h() / (1L << getSpreadingFactor()) ) ;
 22883  007798  ECDB  F05C         	call	_getSpreadingFactor	;wreg free
 22884  00779C  0E01               	movlw	1
 22885  00779E  0100               	movlb	0	; force () banked
 22886  0077A0  6F92               	movwf	??_setSpreadingFactor& (0+255),b
 22887  0077A2  6B93               	clrf	(??_setSpreadingFactor+1)& (0+255),b
 22888  0077A4  6B94               	clrf	(??_setSpreadingFactor+2)& (0+255),b
 22889  0077A6  6B95               	clrf	(??_setSpreadingFactor+3)& (0+255),b
 22890  0077A8  0100               	movlb	0	; force () banked
 22891  0077AA  2B7E               	incf	?_getSpreadingFactor& (0+255),f,b
 22892  0077AC  D006               	goto	u10670
 22893  0077AE                     u10675:
 22894  0077AE  90D8               	bcf	status,0,c
 22895  0077B0  0100               	movlb	0	; force () banked
 22896  0077B2  3792               	rlcf	??_setSpreadingFactor& (0+255),f,b
 22897  0077B4  3793               	rlcf	(??_setSpreadingFactor+1)& (0+255),f,b
 22898  0077B6  3794               	rlcf	(??_setSpreadingFactor+2)& (0+255),f,b
 22899  0077B8  3795               	rlcf	(??_setSpreadingFactor+3)& (0+255),f,b
 22900  0077BA                     u10670:
 22901  0077BA  0100               	movlb	0	; force () banked
 22902  0077BC  2F7E               	decfsz	?_getSpreadingFactor& (0+255),f,b
 22903  0077BE  D7F7               	goto	u10675
 22904  0077C0  C092  F089         	movff	??_setSpreadingFactor,___lldiv@divisor
 22905  0077C4  C093  F08A         	movff	??_setSpreadingFactor+1,___lldiv@divisor+1
 22906  0077C8  C094  F08B         	movff	??_setSpreadingFactor+2,___lldiv@divisor+2
 22907  0077CC  C095  F08C         	movff	??_setSpreadingFactor+3,___lldiv@divisor+3
 22908  0077D0  EC0C  F031         	call	_getSignalBandwidth	;wreg free
 22909  0077D4  C07E  F085         	movff	?_getSignalBandwidth,___lldiv@dividend
 22910  0077D8  C07F  F086         	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 22911  0077DC  C080  F087         	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 22912  0077E0  C081  F088         	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 22913  0077E4  EC3D  F04F         	call	___lldiv	;wreg free
 22914  0077E8  C085  F096         	movff	?___lldiv,_setSpreadingFactor$10480
 22915  0077EC  C086  F097         	movff	?___lldiv+1,_setSpreadingFactor$10480+1
 22916  0077F0  C087  F098         	movff	?___lldiv+2,_setSpreadingFactor$10480+2
 22917  0077F4  C088  F099         	movff	?___lldiv+3,_setSpreadingFactor$10480+3
 22918                           
 22919                           ; BSR set to: 0
 22920                           ;../phy/sx1276/sx1276_src/sx1276.c: 212:     symbolDuration = 1000 / ( getSignalBandwidt
      +                          h() / (1L << getSpreadingFactor()) ) ;
 22921  0077F8  0EE8               	movlw	232
 22922  0077FA  0100               	movlb	0	; force () banked
 22923  0077FC  6F85               	movwf	___lldiv@dividend& (0+255),b
 22924  0077FE  0E03               	movlw	3
 22925  007800  6F86               	movwf	(___lldiv@dividend+1)& (0+255),b
 22926  007802  0E00               	movlw	0
 22927  007804  6F87               	movwf	(___lldiv@dividend+2)& (0+255),b
 22928  007806  0E00               	movlw	0
 22929  007808  6F88               	movwf	(___lldiv@dividend+3)& (0+255),b
 22930  00780A  C096  F089         	movff	_setSpreadingFactor$10480,___lldiv@divisor
 22931  00780E  C097  F08A         	movff	_setSpreadingFactor$10480+1,___lldiv@divisor+1
 22932  007812  C098  F08B         	movff	_setSpreadingFactor$10480+2,___lldiv@divisor+2
 22933  007816  C099  F08C         	movff	_setSpreadingFactor$10480+3,___lldiv@divisor+3
 22934  00781A  EC3D  F04F         	call	___lldiv	;wreg free
 22935  00781E  C085  F328         	movff	?___lldiv,_symbolDuration
 22936  007822  C086  F329         	movff	?___lldiv+1,_symbolDuration+1
 22937  007826  C087  F32A         	movff	?___lldiv+2,_symbolDuration+2
 22938  00782A  C088  F32B         	movff	?___lldiv+3,_symbolDuration+3
 22939                           
 22940                           ; BSR set to: 0
 22941  00782E  0012               	return		;funcret
 22942  007830                     __end_of_setSpreadingFactor:
 22943                           	callstack 0
 22944                           
 22945 ;; *************** function _setSignalBandwidth *****************
 22946 ;; Defined at:
 22947 ;;		line 222 in file "../phy/sx1276/sx1276_src/sx1276.c"
 22948 ;; Parameters:    Size  Location     Type
 22949 ;;  sbw             4   50[BANK0 ] unsigned long 
 22950 ;; Auto vars:     Size  Location     Type
 22951 ;;  bw              4   62[BANK0 ] unsigned long 
 22952 ;; Return value:  Size  Location     Type
 22953 ;;                  1    wreg      void 
 22954 ;; Registers used:
 22955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22956 ;; Tracked objects:
 22957 ;;		On entry : 3F/0
 22958 ;;		On exit  : 3F/0
 22959 ;;		Unchanged: 0/0
 22960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22961 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22962 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22963 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22964 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22965 ;;Total ram usage:       16 bytes
 22966 ;; Hardware stack levels used:    1
 22967 ;; Hardware stack levels required when called:   16
 22968 ;; This function calls:
 22969 ;;		_SX1276Read
 22970 ;;		_SX1276Write
 22971 ;;		___flge
 22972 ;;		___lldiv
 22973 ;;		___xxtofl
 22974 ;;		_getSignalBandwidth
 22975 ;;		_getSpreadingFactor
 22976 ;; This function is called by:
 22977 ;;		_initRadio
 22978 ;; This function uses a non-reentrant model
 22979 ;;
 22980                           
 22981                           	psect	text114
 22982  002B1C                     __ptext114:
 22983                           	callstack 0
 22984  002B1C                     _setSignalBandwidth:
 22985                           	callstack 10
 22986                           
 22987                           ;../phy/sx1276/sx1276_src/sx1276.c: 222: void setSignalBandwidth(uint32_t sbw);../phy/sx
      +                          1276/sx1276_src/sx1276.c: 223: {;../phy/sx1276/sx1276_src/sx1276.c: 224:   uint32_t bw;;
      +                          ../phy/sx1276/sx1276_src/sx1276.c: 226:   if (sbw <= 7.8E3) {
 22988                           
 22989                           ; BSR set to: 0
 22990                           ;incstack = 0
 22991  002B1C  0E00               	movlw	0
 22992  002B1E  0100               	movlb	0	; force () banked
 22993  002B20  6F7F               	movwf	___flge@ff1& (0+255),b
 22994  002B22  0EC0               	movlw	192
 22995  002B24  6F80               	movwf	(___flge@ff1+1)& (0+255),b
 22996  002B26  0EF3               	movlw	243
 22997  002B28  6F81               	movwf	(___flge@ff1+2)& (0+255),b
 22998  002B2A  0E45               	movlw	69
 22999  002B2C  6F82               	movwf	(___flge@ff1+3)& (0+255),b
 23000  002B2E  C092  F071         	movff	setSignalBandwidth@sbw,___xxtofl@val
 23001  002B32  C093  F072         	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 23002  002B36  C094  F073         	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 23003  002B3A  C095  F074         	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 23004  002B3E  0E00               	movlw	0
 23005  002B40  EC6A  F030         	call	___xxtofl
 23006  002B44  C071  F083         	movff	?___xxtofl,___flge@ff2
 23007  002B48  C072  F084         	movff	?___xxtofl+1,___flge@ff2+1
 23008  002B4C  C073  F085         	movff	?___xxtofl+2,___flge@ff2+2
 23009  002B50  C074  F086         	movff	?___xxtofl+3,___flge@ff2+3
 23010  002B54  EC7C  F043         	call	___flge	;wreg free
 23011  002B58  0100               	movlb	0	; force () banked
 23012  002B5A  A0D8               	btfss	status,0,c
 23013  002B5C  D002               	goto	l13896
 23014                           
 23015                           ; BSR set to: 0
 23016                           ;../phy/sx1276/sx1276_src/sx1276.c: 227:     bw = 0;
 23017  002B5E  0E00               	movlw	0
 23018  002B60  D119               	goto	L29
 23019  002B62                     l13896:
 23020                           
 23021                           ; BSR set to: 0
 23022  002B62  0E00               	movlw	0
 23023  002B64  0100               	movlb	0	; force () banked
 23024  002B66  6F7F               	movwf	___flge@ff1& (0+255),b
 23025  002B68  0E80               	movlw	128
 23026  002B6A  6F80               	movwf	(___flge@ff1+1)& (0+255),b
 23027  002B6C  0E22               	movlw	34
 23028  002B6E  6F81               	movwf	(___flge@ff1+2)& (0+255),b
 23029  002B70  0E46               	movlw	70
 23030  002B72  6F82               	movwf	(___flge@ff1+3)& (0+255),b
 23031  002B74  C092  F071         	movff	setSignalBandwidth@sbw,___xxtofl@val
 23032  002B78  C093  F072         	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 23033  002B7C  C094  F073         	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 23034  002B80  C095  F074         	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 23035  002B84  0E00               	movlw	0
 23036  002B86  EC6A  F030         	call	___xxtofl
 23037  002B8A  C071  F083         	movff	?___xxtofl,___flge@ff2
 23038  002B8E  C072  F084         	movff	?___xxtofl+1,___flge@ff2+1
 23039  002B92  C073  F085         	movff	?___xxtofl+2,___flge@ff2+2
 23040  002B96  C074  F086         	movff	?___xxtofl+3,___flge@ff2+3
 23041  002B9A  EC7C  F043         	call	___flge	;wreg free
 23042  002B9E  0100               	movlb	0	; force () banked
 23043  002BA0  A0D8               	btfss	status,0,c
 23044  002BA2  D002               	goto	l13900
 23045                           
 23046                           ; BSR set to: 0
 23047                           ;../phy/sx1276/sx1276_src/sx1276.c: 229:     bw = 1;
 23048  002BA4  0E01               	movlw	1
 23049  002BA6  D0F6               	goto	L29
 23050  002BA8                     l13900:
 23051                           
 23052                           ; BSR set to: 0
 23053  002BA8  0E00               	movlw	0
 23054  002BAA  0100               	movlb	0	; force () banked
 23055  002BAC  6F7F               	movwf	___flge@ff1& (0+255),b
 23056  002BAE  0EC0               	movlw	192
 23057  002BB0  6F80               	movwf	(___flge@ff1+1)& (0+255),b
 23058  002BB2  0E73               	movlw	115
 23059  002BB4  6F81               	movwf	(___flge@ff1+2)& (0+255),b
 23060  002BB6  0E46               	movlw	70
 23061  002BB8  6F82               	movwf	(___flge@ff1+3)& (0+255),b
 23062  002BBA  C092  F071         	movff	setSignalBandwidth@sbw,___xxtofl@val
 23063  002BBE  C093  F072         	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 23064  002BC2  C094  F073         	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 23065  002BC6  C095  F074         	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 23066  002BCA  0E00               	movlw	0
 23067  002BCC  EC6A  F030         	call	___xxtofl
 23068  002BD0  C071  F083         	movff	?___xxtofl,___flge@ff2
 23069  002BD4  C072  F084         	movff	?___xxtofl+1,___flge@ff2+1
 23070  002BD8  C073  F085         	movff	?___xxtofl+2,___flge@ff2+2
 23071  002BDC  C074  F086         	movff	?___xxtofl+3,___flge@ff2+3
 23072  002BE0  EC7C  F043         	call	___flge	;wreg free
 23073  002BE4  0100               	movlb	0	; force () banked
 23074  002BE6  A0D8               	btfss	status,0,c
 23075  002BE8  D002               	goto	l13904
 23076                           
 23077                           ; BSR set to: 0
 23078                           ;../phy/sx1276/sx1276_src/sx1276.c: 231:     bw = 2;
 23079  002BEA  0E02               	movlw	2
 23080  002BEC  D0D3               	goto	L29
 23081  002BEE                     l13904:
 23082                           
 23083                           ; BSR set to: 0
 23084  002BEE  0E00               	movlw	0
 23085  002BF0  0100               	movlb	0	; force () banked
 23086  002BF2  6F7F               	movwf	___flge@ff1& (0+255),b
 23087  002BF4  0E80               	movlw	128
 23088  002BF6  6F80               	movwf	(___flge@ff1+1)& (0+255),b
 23089  002BF8  0EA2               	movlw	162
 23090  002BFA  6F81               	movwf	(___flge@ff1+2)& (0+255),b
 23091  002BFC  0E46               	movlw	70
 23092  002BFE  6F82               	movwf	(___flge@ff1+3)& (0+255),b
 23093  002C00  C092  F071         	movff	setSignalBandwidth@sbw,___xxtofl@val
 23094  002C04  C093  F072         	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 23095  002C08  C094  F073         	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 23096  002C0C  C095  F074         	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 23097  002C10  0E00               	movlw	0
 23098  002C12  EC6A  F030         	call	___xxtofl
 23099  002C16  C071  F083         	movff	?___xxtofl,___flge@ff2
 23100  002C1A  C072  F084         	movff	?___xxtofl+1,___flge@ff2+1
 23101  002C1E  C073  F085         	movff	?___xxtofl+2,___flge@ff2+2
 23102  002C22  C074  F086         	movff	?___xxtofl+3,___flge@ff2+3
 23103  002C26  EC7C  F043         	call	___flge	;wreg free
 23104  002C2A  0100               	movlb	0	; force () banked
 23105  002C2C  A0D8               	btfss	status,0,c
 23106  002C2E  D002               	goto	l13908
 23107                           
 23108                           ; BSR set to: 0
 23109                           ;../phy/sx1276/sx1276_src/sx1276.c: 233:     bw = 3;
 23110  002C30  0E03               	movlw	3
 23111  002C32  D0B0               	goto	L29
 23112  002C34                     l13908:
 23113                           
 23114                           ; BSR set to: 0
 23115  002C34  0E00               	movlw	0
 23116  002C36  0100               	movlb	0	; force () banked
 23117  002C38  6F7F               	movwf	___flge@ff1& (0+255),b
 23118  002C3A  0E24               	movlw	36
 23119  002C3C  6F80               	movwf	(___flge@ff1+1)& (0+255),b
 23120  002C3E  0EF4               	movlw	244
 23121  002C40  6F81               	movwf	(___flge@ff1+2)& (0+255),b
 23122  002C42  0E46               	movlw	70
 23123  002C44  6F82               	movwf	(___flge@ff1+3)& (0+255),b
 23124  002C46  C092  F071         	movff	setSignalBandwidth@sbw,___xxtofl@val
 23125  002C4A  C093  F072         	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 23126  002C4E  C094  F073         	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 23127  002C52  C095  F074         	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 23128  002C56  0E00               	movlw	0
 23129  002C58  EC6A  F030         	call	___xxtofl
 23130  002C5C  C071  F083         	movff	?___xxtofl,___flge@ff2
 23131  002C60  C072  F084         	movff	?___xxtofl+1,___flge@ff2+1
 23132  002C64  C073  F085         	movff	?___xxtofl+2,___flge@ff2+2
 23133  002C68  C074  F086         	movff	?___xxtofl+3,___flge@ff2+3
 23134  002C6C  EC7C  F043         	call	___flge	;wreg free
 23135  002C70  0100               	movlb	0	; force () banked
 23136  002C72  A0D8               	btfss	status,0,c
 23137  002C74  D002               	goto	l13912
 23138                           
 23139                           ; BSR set to: 0
 23140                           ;../phy/sx1276/sx1276_src/sx1276.c: 235:     bw = 4;
 23141  002C76  0E04               	movlw	4
 23142  002C78  D08D               	goto	L29
 23143  002C7A                     l13912:
 23144                           
 23145                           ; BSR set to: 0
 23146  002C7A  0E00               	movlw	0
 23147  002C7C  0100               	movlb	0	; force () banked
 23148  002C7E  6F7F               	movwf	___flge@ff1& (0+255),b
 23149  002C80  0EE4               	movlw	228
 23150  002C82  6F80               	movwf	(___flge@ff1+1)& (0+255),b
 23151  002C84  0E22               	movlw	34
 23152  002C86  6F81               	movwf	(___flge@ff1+2)& (0+255),b
 23153  002C88  0E47               	movlw	71
 23154  002C8A  6F82               	movwf	(___flge@ff1+3)& (0+255),b
 23155  002C8C  C092  F071         	movff	setSignalBandwidth@sbw,___xxtofl@val
 23156  002C90  C093  F072         	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 23157  002C94  C094  F073         	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 23158  002C98  C095  F074         	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 23159  002C9C  0E00               	movlw	0
 23160  002C9E  EC6A  F030         	call	___xxtofl
 23161  002CA2  C071  F083         	movff	?___xxtofl,___flge@ff2
 23162  002CA6  C072  F084         	movff	?___xxtofl+1,___flge@ff2+1
 23163  002CAA  C073  F085         	movff	?___xxtofl+2,___flge@ff2+2
 23164  002CAE  C074  F086         	movff	?___xxtofl+3,___flge@ff2+3
 23165  002CB2  EC7C  F043         	call	___flge	;wreg free
 23166  002CB6  0100               	movlb	0	; force () banked
 23167  002CB8  A0D8               	btfss	status,0,c
 23168  002CBA  D002               	goto	l13916
 23169                           
 23170                           ; BSR set to: 0
 23171                           ;../phy/sx1276/sx1276_src/sx1276.c: 237:     bw = 5;
 23172  002CBC  0E05               	movlw	5
 23173  002CBE  D06A               	goto	L29
 23174  002CC0                     l13916:
 23175                           
 23176                           ; BSR set to: 0
 23177  002CC0  0E00               	movlw	0
 23178  002CC2  0100               	movlb	0	; force () banked
 23179  002CC4  6F7F               	movwf	___flge@ff1& (0+255),b
 23180  002CC6  0E24               	movlw	36
 23181  002CC8  6F80               	movwf	(___flge@ff1+1)& (0+255),b
 23182  002CCA  0E74               	movlw	116
 23183  002CCC  6F81               	movwf	(___flge@ff1+2)& (0+255),b
 23184  002CCE  0E47               	movlw	71
 23185  002CD0  6F82               	movwf	(___flge@ff1+3)& (0+255),b
 23186  002CD2  C092  F071         	movff	setSignalBandwidth@sbw,___xxtofl@val
 23187  002CD6  C093  F072         	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 23188  002CDA  C094  F073         	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 23189  002CDE  C095  F074         	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 23190  002CE2  0E00               	movlw	0
 23191  002CE4  EC6A  F030         	call	___xxtofl
 23192  002CE8  C071  F083         	movff	?___xxtofl,___flge@ff2
 23193  002CEC  C072  F084         	movff	?___xxtofl+1,___flge@ff2+1
 23194  002CF0  C073  F085         	movff	?___xxtofl+2,___flge@ff2+2
 23195  002CF4  C074  F086         	movff	?___xxtofl+3,___flge@ff2+3
 23196  002CF8  EC7C  F043         	call	___flge	;wreg free
 23197  002CFC  0100               	movlb	0	; force () banked
 23198  002CFE  A0D8               	btfss	status,0,c
 23199  002D00  D002               	goto	l13920
 23200                           
 23201                           ; BSR set to: 0
 23202                           ;../phy/sx1276/sx1276_src/sx1276.c: 239:     bw = 6;
 23203  002D02  0E06               	movlw	6
 23204  002D04  D047               	goto	L29
 23205  002D06                     l13920:
 23206                           
 23207                           ; BSR set to: 0
 23208  002D06  0E00               	movlw	0
 23209  002D08  0100               	movlb	0	; force () banked
 23210  002D0A  6F7F               	movwf	___flge@ff1& (0+255),b
 23211  002D0C  0E24               	movlw	36
 23212  002D0E  6F80               	movwf	(___flge@ff1+1)& (0+255),b
 23213  002D10  0EF4               	movlw	244
 23214  002D12  6F81               	movwf	(___flge@ff1+2)& (0+255),b
 23215  002D14  0E47               	movlw	71
 23216  002D16  6F82               	movwf	(___flge@ff1+3)& (0+255),b
 23217  002D18  C092  F071         	movff	setSignalBandwidth@sbw,___xxtofl@val
 23218  002D1C  C093  F072         	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 23219  002D20  C094  F073         	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 23220  002D24  C095  F074         	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 23221  002D28  0E00               	movlw	0
 23222  002D2A  EC6A  F030         	call	___xxtofl
 23223  002D2E  C071  F083         	movff	?___xxtofl,___flge@ff2
 23224  002D32  C072  F084         	movff	?___xxtofl+1,___flge@ff2+1
 23225  002D36  C073  F085         	movff	?___xxtofl+2,___flge@ff2+2
 23226  002D3A  C074  F086         	movff	?___xxtofl+3,___flge@ff2+3
 23227  002D3E  EC7C  F043         	call	___flge	;wreg free
 23228  002D42  0100               	movlb	0	; force () banked
 23229  002D44  A0D8               	btfss	status,0,c
 23230  002D46  D002               	goto	l13924
 23231                           
 23232                           ; BSR set to: 0
 23233                           ;../phy/sx1276/sx1276_src/sx1276.c: 241:     bw = 7;
 23234  002D48  0E07               	movlw	7
 23235  002D4A  D024               	goto	L29
 23236  002D4C                     l13924:
 23237                           
 23238                           ; BSR set to: 0
 23239  002D4C  0E00               	movlw	0
 23240  002D4E  0100               	movlb	0	; force () banked
 23241  002D50  6F7F               	movwf	___flge@ff1& (0+255),b
 23242  002D52  0E24               	movlw	36
 23243  002D54  6F80               	movwf	(___flge@ff1+1)& (0+255),b
 23244  002D56  0E74               	movlw	116
 23245  002D58  6F81               	movwf	(___flge@ff1+2)& (0+255),b
 23246  002D5A  0E48               	movlw	72
 23247  002D5C  6F82               	movwf	(___flge@ff1+3)& (0+255),b
 23248  002D5E  C092  F071         	movff	setSignalBandwidth@sbw,___xxtofl@val
 23249  002D62  C093  F072         	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 23250  002D66  C094  F073         	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 23251  002D6A  C095  F074         	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 23252  002D6E  0E00               	movlw	0
 23253  002D70  EC6A  F030         	call	___xxtofl
 23254  002D74  C071  F083         	movff	?___xxtofl,___flge@ff2
 23255  002D78  C072  F084         	movff	?___xxtofl+1,___flge@ff2+1
 23256  002D7C  C073  F085         	movff	?___xxtofl+2,___flge@ff2+2
 23257  002D80  C074  F086         	movff	?___xxtofl+3,___flge@ff2+3
 23258  002D84  EC7C  F043         	call	___flge	;wreg free
 23259  002D88  0100               	movlb	0	; force () banked
 23260  002D8A  A0D8               	btfss	status,0,c
 23261  002D8C  D002               	goto	l13928
 23262                           
 23263                           ; BSR set to: 0
 23264                           ;../phy/sx1276/sx1276_src/sx1276.c: 243:     bw = 8;
 23265  002D8E  0E08               	movlw	8
 23266  002D90  D001               	goto	L29
 23267  002D92                     l13928:
 23268                           
 23269                           ; BSR set to: 0
 23270                           ;../phy/sx1276/sx1276_src/sx1276.c: 245:     bw = 9;
 23271  002D92  0E09               	movlw	9
 23272  002D94                     L29:
 23273  002D94  0100               	movlb	0	; force () banked
 23274  002D96  6F9E               	movwf	setSignalBandwidth@bw& (0+255),b
 23275  002D98  0E00               	movlw	0
 23276  002D9A  6F9F               	movwf	(setSignalBandwidth@bw+1)& (0+255),b
 23277  002D9C  0E00               	movlw	0
 23278  002D9E  6FA0               	movwf	(setSignalBandwidth@bw+2)& (0+255),b
 23279  002DA0  0E00               	movlw	0
 23280  002DA2  6FA1               	movwf	(setSignalBandwidth@bw+3)& (0+255),b
 23281                           
 23282                           ; BSR set to: 0
 23283                           ;../phy/sx1276/sx1276_src/sx1276.c: 248:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0x0f) |
      +                           (bw << 4));
 23284  002DA4  C09E  F096         	movff	setSignalBandwidth@bw,??_setSignalBandwidth
 23285  002DA8  0100               	movlb	0	; force () banked
 23286  002DAA  3B96               	swapf	??_setSignalBandwidth& (0+255),f,b
 23287  002DAC  0EF0               	movlw	240
 23288  002DAE  1796               	andwf	??_setSignalBandwidth& (0+255),f,b
 23289  002DB0  0E1D               	movlw	29
 23290  002DB2  EC55  F05C         	call	_SX1276Read
 23291  002DB6  0B0F               	andlw	15
 23292  002DB8  0100               	movlb	0	; force () banked
 23293  002DBA  1196               	iorwf	??_setSignalBandwidth& (0+255),w,b
 23294  002DBC  0100               	movlb	0	; force () banked
 23295  002DBE  6F7E               	movwf	SX1276Write@data& (0+255),b
 23296  002DC0  0E1D               	movlw	29
 23297  002DC2  ECEA  F05C         	call	_SX1276Write
 23298                           
 23299                           ; BSR set to: 0
 23300                           ;../phy/sx1276/sx1276_src/sx1276.c: 249:   symbolDuration = 1000 / ( getSignalBandwidth(
      +                          ) / (1L << getSpreadingFactor()) ) ;
 23301  002DC6  ECDB  F05C         	call	_getSpreadingFactor	;wreg free
 23302  002DCA  0E01               	movlw	1
 23303  002DCC  0100               	movlb	0	; force () banked
 23304  002DCE  6F96               	movwf	??_setSignalBandwidth& (0+255),b
 23305  002DD0  6B97               	clrf	(??_setSignalBandwidth+1)& (0+255),b
 23306  002DD2  6B98               	clrf	(??_setSignalBandwidth+2)& (0+255),b
 23307  002DD4  6B99               	clrf	(??_setSignalBandwidth+3)& (0+255),b
 23308  002DD6  0100               	movlb	0	; force () banked
 23309  002DD8  2B7E               	incf	?_getSpreadingFactor& (0+255),f,b
 23310  002DDA  D006               	goto	u10770
 23311  002DDC                     u10775:
 23312  002DDC  90D8               	bcf	status,0,c
 23313  002DDE  0100               	movlb	0	; force () banked
 23314  002DE0  3796               	rlcf	??_setSignalBandwidth& (0+255),f,b
 23315  002DE2  3797               	rlcf	(??_setSignalBandwidth+1)& (0+255),f,b
 23316  002DE4  3798               	rlcf	(??_setSignalBandwidth+2)& (0+255),f,b
 23317  002DE6  3799               	rlcf	(??_setSignalBandwidth+3)& (0+255),f,b
 23318  002DE8                     u10770:
 23319  002DE8  0100               	movlb	0	; force () banked
 23320  002DEA  2F7E               	decfsz	?_getSpreadingFactor& (0+255),f,b
 23321  002DEC  D7F7               	goto	u10775
 23322  002DEE  C096  F089         	movff	??_setSignalBandwidth,___lldiv@divisor
 23323  002DF2  C097  F08A         	movff	??_setSignalBandwidth+1,___lldiv@divisor+1
 23324  002DF6  C098  F08B         	movff	??_setSignalBandwidth+2,___lldiv@divisor+2
 23325  002DFA  C099  F08C         	movff	??_setSignalBandwidth+3,___lldiv@divisor+3
 23326  002DFE  EC0C  F031         	call	_getSignalBandwidth	;wreg free
 23327  002E02  C07E  F085         	movff	?_getSignalBandwidth,___lldiv@dividend
 23328  002E06  C07F  F086         	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 23329  002E0A  C080  F087         	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 23330  002E0E  C081  F088         	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 23331  002E12  EC3D  F04F         	call	___lldiv	;wreg free
 23332  002E16  C085  F09A         	movff	?___lldiv,_setSignalBandwidth$10481
 23333  002E1A  C086  F09B         	movff	?___lldiv+1,_setSignalBandwidth$10481+1
 23334  002E1E  C087  F09C         	movff	?___lldiv+2,_setSignalBandwidth$10481+2
 23335  002E22  C088  F09D         	movff	?___lldiv+3,_setSignalBandwidth$10481+3
 23336                           
 23337                           ; BSR set to: 0
 23338                           ;../phy/sx1276/sx1276_src/sx1276.c: 249:   symbolDuration = 1000 / ( getSignalBandwidth(
      +                          ) / (1L << getSpreadingFactor()) ) ;
 23339  002E26  0EE8               	movlw	232
 23340  002E28  0100               	movlb	0	; force () banked
 23341  002E2A  6F85               	movwf	___lldiv@dividend& (0+255),b
 23342  002E2C  0E03               	movlw	3
 23343  002E2E  6F86               	movwf	(___lldiv@dividend+1)& (0+255),b
 23344  002E30  0E00               	movlw	0
 23345  002E32  6F87               	movwf	(___lldiv@dividend+2)& (0+255),b
 23346  002E34  0E00               	movlw	0
 23347  002E36  6F88               	movwf	(___lldiv@dividend+3)& (0+255),b
 23348  002E38  C09A  F089         	movff	_setSignalBandwidth$10481,___lldiv@divisor
 23349  002E3C  C09B  F08A         	movff	_setSignalBandwidth$10481+1,___lldiv@divisor+1
 23350  002E40  C09C  F08B         	movff	_setSignalBandwidth$10481+2,___lldiv@divisor+2
 23351  002E44  C09D  F08C         	movff	_setSignalBandwidth$10481+3,___lldiv@divisor+3
 23352  002E48  EC3D  F04F         	call	___lldiv	;wreg free
 23353  002E4C  C085  F328         	movff	?___lldiv,_symbolDuration
 23354  002E50  C086  F329         	movff	?___lldiv+1,_symbolDuration+1
 23355  002E54  C087  F32A         	movff	?___lldiv+2,_symbolDuration+2
 23356  002E58  C088  F32B         	movff	?___lldiv+3,_symbolDuration+3
 23357                           
 23358                           ; BSR set to: 0
 23359  002E5C  0012               	return		;funcret
 23360  002E5E                     __end_of_setSignalBandwidth:
 23361                           	callstack 0
 23362                           
 23363 ;; *************** function _getSpreadingFactor *****************
 23364 ;; Defined at:
 23365 ;;		line 260 in file "../phy/sx1276/sx1276_src/sx1276.c"
 23366 ;; Parameters:    Size  Location     Type
 23367 ;;		None
 23368 ;; Auto vars:     Size  Location     Type
 23369 ;;		None
 23370 ;; Return value:  Size  Location     Type
 23371 ;;                  4   30[BANK0 ] unsigned long 
 23372 ;; Registers used:
 23373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23374 ;; Tracked objects:
 23375 ;;		On entry : 3F/0
 23376 ;;		On exit  : 3F/0
 23377 ;;		Unchanged: 0/0
 23378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23379 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23381 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23382 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23383 ;;Total ram usage:        5 bytes
 23384 ;; Hardware stack levels used:    1
 23385 ;; Hardware stack levels required when called:   15
 23386 ;; This function calls:
 23387 ;;		_SX1276Read
 23388 ;; This function is called by:
 23389 ;;		_setSpreadingFactor
 23390 ;;		_setSignalBandwidth
 23391 ;; This function uses a non-reentrant model
 23392 ;;
 23393                           
 23394                           	psect	text115
 23395  00B9B6                     __ptext115:
 23396                           	callstack 0
 23397  00B9B6                     _getSpreadingFactor:
 23398                           	callstack 10
 23399                           
 23400                           ;../phy/sx1276/sx1276_src/sx1276.c: 262:   return SX1276Read(0x1E) >> 4;
 23401                           
 23402                           ; BSR set to: 0
 23403                           ;incstack = 0
 23404  00B9B6  0E1E               	movlw	30
 23405  00B9B8  EC55  F05C         	call	_SX1276Read
 23406  00B9BC  0100               	movlb	0	; force () banked
 23407  00B9BE  6F82               	movwf	??_getSpreadingFactor& (0+255),b
 23408  00B9C0  3B82               	swapf	??_getSpreadingFactor& (0+255),f,b
 23409  00B9C2  0E0F               	movlw	15
 23410  00B9C4  1782               	andwf	??_getSpreadingFactor& (0+255),f,b
 23411  00B9C6  5182               	movf	??_getSpreadingFactor& (0+255),w,b
 23412  00B9C8  0100               	movlb	0	; force () banked
 23413  00B9CA  6F7E               	movwf	?_getSpreadingFactor& (0+255),b
 23414  00B9CC  6B7F               	clrf	(?_getSpreadingFactor+1)& (0+255),b
 23415  00B9CE  6B80               	clrf	(?_getSpreadingFactor+2)& (0+255),b
 23416  00B9D0  6B81               	clrf	(?_getSpreadingFactor+3)& (0+255),b
 23417                           
 23418                           ; BSR set to: 0
 23419  00B9D2  0012               	return		;funcret
 23420  00B9D4                     __end_of_getSpreadingFactor:
 23421                           	callstack 0
 23422                           
 23423 ;; *************** function _getSignalBandwidth *****************
 23424 ;; Defined at:
 23425 ;;		line 271 in file "../phy/sx1276/sx1276_src/sx1276.c"
 23426 ;; Parameters:    Size  Location     Type
 23427 ;;		None
 23428 ;; Auto vars:     Size  Location     Type
 23429 ;;  bw              1   36[BANK0 ] unsigned char 
 23430 ;; Return value:  Size  Location     Type
 23431 ;;                  4   30[BANK0 ] unsigned long 
 23432 ;; Registers used:
 23433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23434 ;; Tracked objects:
 23435 ;;		On entry : 3F/0
 23436 ;;		On exit  : 3F/0
 23437 ;;		Unchanged: 0/0
 23438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23439 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23440 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23441 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23442 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23443 ;;Total ram usage:        7 bytes
 23444 ;; Hardware stack levels used:    1
 23445 ;; Hardware stack levels required when called:   15
 23446 ;; This function calls:
 23447 ;;		_SX1276Read
 23448 ;; This function is called by:
 23449 ;;		_setSpreadingFactor
 23450 ;;		_setSignalBandwidth
 23451 ;; This function uses a non-reentrant model
 23452 ;;
 23453                           
 23454                           	psect	text116
 23455  006218                     __ptext116:
 23456                           	callstack 0
 23457  006218                     _getSignalBandwidth:
 23458                           	callstack 10
 23459                           
 23460                           ;../phy/sx1276/sx1276_src/sx1276.c: 273:   uint8_t bw = (SX1276Read(0x1D) >> 4);
 23461                           
 23462                           ; BSR set to: 0
 23463                           ;incstack = 0
 23464  006218  0E1D               	movlw	29
 23465  00621A  EC55  F05C         	call	_SX1276Read
 23466  00621E  0100               	movlb	0	; force () banked
 23467  006220  6F82               	movwf	??_getSignalBandwidth& (0+255),b
 23468  006222  3982               	swapf	??_getSignalBandwidth& (0+255),w,b
 23469  006224  0B0F               	andlw	15
 23470  006226  0100               	movlb	0	; force () banked
 23471  006228  6F84               	movwf	getSignalBandwidth@bw& (0+255),b
 23472                           
 23473                           ;../phy/sx1276/sx1276_src/sx1276.c: 274:   switch (bw) {
 23474  00622A  D064               	goto	l12636
 23475  00622C                     l12594:
 23476                           
 23477                           ; BSR set to: 0
 23478  00622C  0E78               	movlw	120
 23479  00622E  0100               	movlb	0	; force () banked
 23480  006230  6F7E               	movwf	?_getSignalBandwidth& (0+255),b
 23481  006232  0E1E               	movlw	30
 23482  006234  6F7F               	movwf	(?_getSignalBandwidth+1)& (0+255),b
 23483  006236  0E00               	movlw	0
 23484  006238  6F80               	movwf	(?_getSignalBandwidth+2)& (0+255),b
 23485  00623A  0E00               	movlw	0
 23486  00623C  6F81               	movwf	(?_getSignalBandwidth+3)& (0+255),b
 23487  00623E  0012               	return	
 23488  006240                     l12598:
 23489                           
 23490                           ; BSR set to: 0
 23491  006240  0EA0               	movlw	160
 23492  006242  0100               	movlb	0	; force () banked
 23493  006244  6F7E               	movwf	?_getSignalBandwidth& (0+255),b
 23494  006246  0E28               	movlw	40
 23495  006248  6F7F               	movwf	(?_getSignalBandwidth+1)& (0+255),b
 23496  00624A  0E00               	movlw	0
 23497  00624C  6F80               	movwf	(?_getSignalBandwidth+2)& (0+255),b
 23498  00624E  0E00               	movlw	0
 23499  006250  6F81               	movwf	(?_getSignalBandwidth+3)& (0+255),b
 23500  006252  0012               	return	
 23501  006254                     l12602:
 23502                           
 23503                           ; BSR set to: 0
 23504  006254  0EF0               	movlw	240
 23505  006256  0100               	movlb	0	; force () banked
 23506  006258  6F7E               	movwf	?_getSignalBandwidth& (0+255),b
 23507  00625A  0E3C               	movlw	60
 23508  00625C  6F7F               	movwf	(?_getSignalBandwidth+1)& (0+255),b
 23509  00625E  0E00               	movlw	0
 23510  006260  6F80               	movwf	(?_getSignalBandwidth+2)& (0+255),b
 23511  006262  0E00               	movlw	0
 23512  006264  6F81               	movwf	(?_getSignalBandwidth+3)& (0+255),b
 23513  006266  0012               	return	
 23514  006268                     l12606:
 23515                           
 23516                           ; BSR set to: 0
 23517  006268  0E40               	movlw	64
 23518  00626A  0100               	movlb	0	; force () banked
 23519  00626C  6F7E               	movwf	?_getSignalBandwidth& (0+255),b
 23520  00626E  0E51               	movlw	81
 23521  006270  6F7F               	movwf	(?_getSignalBandwidth+1)& (0+255),b
 23522  006272  0E00               	movlw	0
 23523  006274  6F80               	movwf	(?_getSignalBandwidth+2)& (0+255),b
 23524  006276  0E00               	movlw	0
 23525  006278  6F81               	movwf	(?_getSignalBandwidth+3)& (0+255),b
 23526  00627A  0012               	return	
 23527  00627C                     l12610:
 23528                           
 23529                           ; BSR set to: 0
 23530  00627C  0E12               	movlw	18
 23531  00627E  0100               	movlb	0	; force () banked
 23532  006280  6F7E               	movwf	?_getSignalBandwidth& (0+255),b
 23533  006282  0E7A               	movlw	122
 23534  006284  6F7F               	movwf	(?_getSignalBandwidth+1)& (0+255),b
 23535  006286  0E00               	movlw	0
 23536  006288  6F80               	movwf	(?_getSignalBandwidth+2)& (0+255),b
 23537  00628A  0E00               	movlw	0
 23538  00628C  6F81               	movwf	(?_getSignalBandwidth+3)& (0+255),b
 23539  00628E  0012               	return	
 23540  006290                     l12614:
 23541                           
 23542                           ; BSR set to: 0
 23543  006290  0EE4               	movlw	228
 23544  006292  0100               	movlb	0	; force () banked
 23545  006294  6F7E               	movwf	?_getSignalBandwidth& (0+255),b
 23546  006296  0EA2               	movlw	162
 23547  006298  6F7F               	movwf	(?_getSignalBandwidth+1)& (0+255),b
 23548  00629A  0E00               	movlw	0
 23549  00629C  6F80               	movwf	(?_getSignalBandwidth+2)& (0+255),b
 23550  00629E  0E00               	movlw	0
 23551  0062A0  6F81               	movwf	(?_getSignalBandwidth+3)& (0+255),b
 23552  0062A2  0012               	return	
 23553  0062A4                     l12618:
 23554                           
 23555                           ; BSR set to: 0
 23556  0062A4  0E24               	movlw	36
 23557  0062A6  0100               	movlb	0	; force () banked
 23558  0062A8  6F7E               	movwf	?_getSignalBandwidth& (0+255),b
 23559  0062AA  0EF4               	movlw	244
 23560  0062AC  6F7F               	movwf	(?_getSignalBandwidth+1)& (0+255),b
 23561  0062AE  0E00               	movlw	0
 23562  0062B0  6F80               	movwf	(?_getSignalBandwidth+2)& (0+255),b
 23563  0062B2  0E00               	movlw	0
 23564  0062B4  6F81               	movwf	(?_getSignalBandwidth+3)& (0+255),b
 23565  0062B6  0012               	return	
 23566  0062B8                     l12622:
 23567                           
 23568                           ; BSR set to: 0
 23569  0062B8  0E48               	movlw	72
 23570  0062BA  0100               	movlb	0	; force () banked
 23571  0062BC  6F7E               	movwf	?_getSignalBandwidth& (0+255),b
 23572  0062BE  0EE8               	movlw	232
 23573  0062C0  6F7F               	movwf	(?_getSignalBandwidth+1)& (0+255),b
 23574  0062C2  0E01               	movlw	1
 23575  0062C4  6F80               	movwf	(?_getSignalBandwidth+2)& (0+255),b
 23576  0062C6  0E00               	movlw	0
 23577  0062C8  6F81               	movwf	(?_getSignalBandwidth+3)& (0+255),b
 23578  0062CA  0012               	return	
 23579  0062CC                     l12626:
 23580                           
 23581                           ; BSR set to: 0
 23582  0062CC  0E90               	movlw	144
 23583  0062CE  0100               	movlb	0	; force () banked
 23584  0062D0  6F7E               	movwf	?_getSignalBandwidth& (0+255),b
 23585  0062D2  0ED0               	movlw	208
 23586  0062D4  6F7F               	movwf	(?_getSignalBandwidth+1)& (0+255),b
 23587  0062D6  0E03               	movlw	3
 23588  0062D8  6F80               	movwf	(?_getSignalBandwidth+2)& (0+255),b
 23589  0062DA  0E00               	movlw	0
 23590  0062DC  6F81               	movwf	(?_getSignalBandwidth+3)& (0+255),b
 23591  0062DE  0012               	return	
 23592  0062E0                     l12630:
 23593                           
 23594                           ; BSR set to: 0
 23595  0062E0  0E20               	movlw	32
 23596  0062E2  0100               	movlb	0	; force () banked
 23597  0062E4  6F7E               	movwf	?_getSignalBandwidth& (0+255),b
 23598  0062E6  0EA1               	movlw	161
 23599  0062E8  6F7F               	movwf	(?_getSignalBandwidth+1)& (0+255),b
 23600  0062EA  0E07               	movlw	7
 23601  0062EC  6F80               	movwf	(?_getSignalBandwidth+2)& (0+255),b
 23602  0062EE  0E00               	movlw	0
 23603  0062F0  6F81               	movwf	(?_getSignalBandwidth+3)& (0+255),b
 23604  0062F2  0012               	return	
 23605  0062F4                     l12636:
 23606                           
 23607                           ; BSR set to: 0
 23608  0062F4  0100               	movlb	0	; force () banked
 23609  0062F6  5184               	movf	getSignalBandwidth@bw& (0+255),w,b
 23610  0062F8  0100               	movlb	0	; force () banked
 23611  0062FA  6F82               	movwf	??_getSignalBandwidth& (0+255),b
 23612  0062FC  6B83               	clrf	(??_getSignalBandwidth+1)& (0+255),b
 23613                           
 23614                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23615                           ; Switch size 1, requested type "simple"
 23616                           ; Number of cases is 1, Range of values is 0 to 0
 23617                           ; switch strategies available:
 23618                           ; Name         Instructions Cycles
 23619                           ; simple_byte            4     3 (average)
 23620                           ;	Chosen strategy is simple_byte
 23621  0062FE  5183               	movf	(??_getSignalBandwidth+1)& (0+255),w,b
 23622  006300  0A00               	xorlw	0	; case 0
 23623  006302  A4D8               	btfss	status,2,c
 23624  006304  D01F               	goto	l12638
 23625                           
 23626                           ; BSR set to: 0
 23627                           ; Switch size 1, requested type "simple"
 23628                           ; Number of cases is 10, Range of values is 0 to 9
 23629                           ; switch strategies available:
 23630                           ; Name         Instructions Cycles
 23631                           ; simple_byte           31    16 (average)
 23632                           ;	Chosen strategy is simple_byte
 23633  006306  5182               	movf	??_getSignalBandwidth& (0+255),w,b
 23634  006308  0A00               	xorlw	0	; case 0
 23635  00630A  B4D8               	btfsc	status,2,c
 23636  00630C  D78F               	goto	l12594
 23637  00630E  0A01               	xorlw	1	; case 1
 23638  006310  B4D8               	btfsc	status,2,c
 23639  006312  D796               	goto	l12598
 23640  006314  0A03               	xorlw	3	; case 2
 23641  006316  B4D8               	btfsc	status,2,c
 23642  006318  D79D               	goto	l12602
 23643  00631A  0A01               	xorlw	1	; case 3
 23644  00631C  B4D8               	btfsc	status,2,c
 23645  00631E  D7A4               	goto	l12606
 23646  006320  0A07               	xorlw	7	; case 4
 23647  006322  B4D8               	btfsc	status,2,c
 23648  006324  D7AB               	goto	l12610
 23649  006326  0A01               	xorlw	1	; case 5
 23650  006328  B4D8               	btfsc	status,2,c
 23651  00632A  D7B2               	goto	l12614
 23652  00632C  0A03               	xorlw	3	; case 6
 23653  00632E  B4D8               	btfsc	status,2,c
 23654  006330  D7B9               	goto	l12618
 23655  006332  0A01               	xorlw	1	; case 7
 23656  006334  B4D8               	btfsc	status,2,c
 23657  006336  D7C0               	goto	l12622
 23658  006338  0A0F               	xorlw	15	; case 8
 23659  00633A  B4D8               	btfsc	status,2,c
 23660  00633C  D7C7               	goto	l12626
 23661  00633E  0A01               	xorlw	1	; case 9
 23662  006340  B4D8               	btfsc	status,2,c
 23663  006342  D7CE               	goto	l12630
 23664  006344                     l12638:
 23665                           
 23666                           ; BSR set to: 0
 23667                           ;../phy/sx1276/sx1276_src/sx1276.c: 286:   return 0;
 23668  006344  0E00               	movlw	0
 23669  006346  0100               	movlb	0	; force () banked
 23670  006348  6F7E               	movwf	?_getSignalBandwidth& (0+255),b
 23671  00634A  0E00               	movlw	0
 23672  00634C  6F7F               	movwf	(?_getSignalBandwidth+1)& (0+255),b
 23673  00634E  0E00               	movlw	0
 23674  006350  6F80               	movwf	(?_getSignalBandwidth+2)& (0+255),b
 23675  006352  0E00               	movlw	0
 23676  006354  6F81               	movwf	(?_getSignalBandwidth+3)& (0+255),b
 23677                           
 23678                           ; BSR set to: 0
 23679  006356  0012               	return		;funcret
 23680  006358                     __end_of_getSignalBandwidth:
 23681                           	callstack 0
 23682                           
 23683 ;; *************** function ___flge *****************
 23684 ;; Defined at:
 23685 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
 23686 ;; Parameters:    Size  Location     Type
 23687 ;;  ff1             4   31[BANK0 ] unsigned long 
 23688 ;;  ff2             4   35[BANK0 ] unsigned long 
 23689 ;; Auto vars:     Size  Location     Type
 23690 ;;		None
 23691 ;; Return value:  Size  Location     Type
 23692 ;;		None               void
 23693 ;; Registers used:
 23694 ;;		wreg, status,2, status,0
 23695 ;; Tracked objects:
 23696 ;;		On entry : 3F/0
 23697 ;;		On exit  : 3F/0
 23698 ;;		Unchanged: 0/0
 23699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23700 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23702 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23703 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23704 ;;Total ram usage:       12 bytes
 23705 ;; Hardware stack levels used:    1
 23706 ;; Hardware stack levels required when called:   11
 23707 ;; This function calls:
 23708 ;;		Nothing
 23709 ;; This function is called by:
 23710 ;;		_setSignalBandwidth
 23711 ;; This function uses a non-reentrant model
 23712 ;;
 23713                           
 23714                           	psect	text117
 23715  0086F8                     __ptext117:
 23716                           	callstack 0
 23717  0086F8                     ___flge:
 23718                           	callstack 14
 23719                           
 23720                           ; BSR set to: 0
 23721                           ;incstack = 0
 23722  0086F8  0E00               	movlw	0
 23723  0086FA  0100               	movlb	0	; () banked
 23724  0086FC  157F               	andwf	___flge@ff1& (0+255),w,b
 23725  0086FE  6F87               	movwf	??___flge& (0+255),b
 23726  008700  0E00               	movlw	0
 23727  008702  1580               	andwf	(___flge@ff1+1)& (0+255),w,b
 23728  008704  6F88               	movwf	(??___flge+1)& (0+255),b
 23729  008706  0E80               	movlw	128
 23730  008708  1581               	andwf	(___flge@ff1+2)& (0+255),w,b
 23731  00870A  6F89               	movwf	(??___flge+2)& (0+255),b
 23732  00870C  0E7F               	movlw	127
 23733  00870E  1582               	andwf	(___flge@ff1+3)& (0+255),w,b
 23734  008710  6F8A               	movwf	(??___flge+3)& (0+255),b
 23735  008712  5187               	movf	??___flge& (0+255),w,b
 23736  008714  1188               	iorwf	(??___flge+1)& (0+255),w,b
 23737  008716  1189               	iorwf	(??___flge+2)& (0+255),w,b
 23738  008718  118A               	iorwf	(??___flge+3)& (0+255),w,b
 23739  00871A  A4D8               	btfss	status,2,c
 23740  00871C  D008               	goto	l12994
 23741                           
 23742                           ; BSR set to: 0
 23743  00871E  0E00               	movlw	0
 23744  008720  6F7F               	movwf	___flge@ff1& (0+255),b
 23745  008722  0E00               	movlw	0
 23746  008724  6F80               	movwf	(___flge@ff1+1)& (0+255),b
 23747  008726  0E00               	movlw	0
 23748  008728  6F81               	movwf	(___flge@ff1+2)& (0+255),b
 23749  00872A  0E00               	movlw	0
 23750  00872C  6F82               	movwf	(___flge@ff1+3)& (0+255),b
 23751  00872E                     l12994:
 23752                           
 23753                           ; BSR set to: 0
 23754  00872E  0E00               	movlw	0
 23755  008730  1583               	andwf	___flge@ff2& (0+255),w,b
 23756  008732  6F87               	movwf	??___flge& (0+255),b
 23757  008734  0E00               	movlw	0
 23758  008736  1584               	andwf	(___flge@ff2+1)& (0+255),w,b
 23759  008738  6F88               	movwf	(??___flge+1)& (0+255),b
 23760  00873A  0E80               	movlw	128
 23761  00873C  1585               	andwf	(___flge@ff2+2)& (0+255),w,b
 23762  00873E  6F89               	movwf	(??___flge+2)& (0+255),b
 23763  008740  0E7F               	movlw	127
 23764  008742  1586               	andwf	(___flge@ff2+3)& (0+255),w,b
 23765  008744  6F8A               	movwf	(??___flge+3)& (0+255),b
 23766  008746  5187               	movf	??___flge& (0+255),w,b
 23767  008748  1188               	iorwf	(??___flge+1)& (0+255),w,b
 23768  00874A  1189               	iorwf	(??___flge+2)& (0+255),w,b
 23769  00874C  118A               	iorwf	(??___flge+3)& (0+255),w,b
 23770  00874E  A4D8               	btfss	status,2,c
 23771  008750  D008               	goto	l12998
 23772                           
 23773                           ; BSR set to: 0
 23774  008752  0E00               	movlw	0
 23775  008754  6F83               	movwf	___flge@ff2& (0+255),b
 23776  008756  0E00               	movlw	0
 23777  008758  6F84               	movwf	(___flge@ff2+1)& (0+255),b
 23778  00875A  0E00               	movlw	0
 23779  00875C  6F85               	movwf	(___flge@ff2+2)& (0+255),b
 23780  00875E  0E00               	movlw	0
 23781  008760  6F86               	movwf	(___flge@ff2+3)& (0+255),b
 23782  008762                     l12998:
 23783                           
 23784                           ; BSR set to: 0
 23785  008762  AF82               	btfss	(___flge@ff1+3)& (0+255),7,b
 23786  008764  D009               	goto	l13002
 23787                           
 23788                           ; BSR set to: 0
 23789  008766  6D7F               	negf	___flge@ff1& (0+255),b
 23790  008768  1F80               	comf	(___flge@ff1+1)& (0+255),f,b
 23791  00876A  B0D8               	btfsc	status,0,c
 23792  00876C  2B80               	incf	(___flge@ff1+1)& (0+255),f,b
 23793  00876E  1F81               	comf	(___flge@ff1+2)& (0+255),f,b
 23794  008770  B0D8               	btfsc	status,0,c
 23795  008772  2B81               	incf	(___flge@ff1+2)& (0+255),f,b
 23796  008774  0E80               	movlw	128
 23797  008776  5782               	subfwb	(___flge@ff1+3)& (0+255),f,b
 23798  008778                     l13002:
 23799                           
 23800                           ; BSR set to: 0
 23801  008778  AF86               	btfss	(___flge@ff2+3)& (0+255),7,b
 23802  00877A  D009               	goto	l4372
 23803                           
 23804                           ; BSR set to: 0
 23805  00877C  6D83               	negf	___flge@ff2& (0+255),b
 23806  00877E  1F84               	comf	(___flge@ff2+1)& (0+255),f,b
 23807  008780  B0D8               	btfsc	status,0,c
 23808  008782  2B84               	incf	(___flge@ff2+1)& (0+255),f,b
 23809  008784  1F85               	comf	(___flge@ff2+2)& (0+255),f,b
 23810  008786  B0D8               	btfsc	status,0,c
 23811  008788  2B85               	incf	(___flge@ff2+2)& (0+255),f,b
 23812  00878A  0E80               	movlw	128
 23813  00878C  5786               	subfwb	(___flge@ff2+3)& (0+255),f,b
 23814  00878E                     l4372:
 23815                           
 23816                           ; BSR set to: 0
 23817  00878E  0E00               	movlw	0
 23818  008790  1B7F               	xorwf	___flge@ff1& (0+255),f,b
 23819  008792  0E00               	movlw	0
 23820  008794  1B80               	xorwf	(___flge@ff1+1)& (0+255),f,b
 23821  008796  0E00               	movlw	0
 23822  008798  1B81               	xorwf	(___flge@ff1+2)& (0+255),f,b
 23823  00879A  0E80               	movlw	128
 23824  00879C  1B82               	xorwf	(___flge@ff1+3)& (0+255),f,b
 23825  00879E  0E00               	movlw	0
 23826  0087A0  1B83               	xorwf	___flge@ff2& (0+255),f,b
 23827  0087A2  0E00               	movlw	0
 23828  0087A4  1B84               	xorwf	(___flge@ff2+1)& (0+255),f,b
 23829  0087A6  0E00               	movlw	0
 23830  0087A8  1B85               	xorwf	(___flge@ff2+2)& (0+255),f,b
 23831  0087AA  0E80               	movlw	128
 23832  0087AC  1B86               	xorwf	(___flge@ff2+3)& (0+255),f,b
 23833  0087AE  5183               	movf	___flge@ff2& (0+255),w,b
 23834  0087B0  5D7F               	subwf	___flge@ff1& (0+255),w,b
 23835  0087B2  5184               	movf	(___flge@ff2+1)& (0+255),w,b
 23836  0087B4  5980               	subwfb	(___flge@ff1+1)& (0+255),w,b
 23837  0087B6  5185               	movf	(___flge@ff2+2)& (0+255),w,b
 23838  0087B8  5981               	subwfb	(___flge@ff1+2)& (0+255),w,b
 23839  0087BA  5186               	movf	(___flge@ff2+3)& (0+255),w,b
 23840  0087BC  5982               	subwfb	(___flge@ff1+3)& (0+255),w,b
 23841  0087BE  B0D8               	btfsc	status,0,c
 23842  0087C0  D002               	goto	l13008
 23843                           
 23844                           ; BSR set to: 0
 23845  0087C2  90D8               	bcf	status,0,c
 23846  0087C4  0012               	return	
 23847  0087C6                     l13008:
 23848                           
 23849                           ; BSR set to: 0
 23850  0087C6  80D8               	bsf	status,0,c
 23851                           
 23852                           ; BSR set to: 0
 23853  0087C8  0012               	return		;funcret
 23854  0087CA                     __end_of___flge:
 23855                           	callstack 0
 23856                           
 23857 ;; *************** function _setPreambleLength *****************
 23858 ;; Defined at:
 23859 ;;		line 315 in file "../phy/sx1276/sx1276_src/sx1276.c"
 23860 ;; Parameters:    Size  Location     Type
 23861 ;;  length          2   32[BANK0 ] unsigned int 
 23862 ;; Auto vars:     Size  Location     Type
 23863 ;;		None
 23864 ;; Return value:  Size  Location     Type
 23865 ;;                  1    wreg      void 
 23866 ;; Registers used:
 23867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23868 ;; Tracked objects:
 23869 ;;		On entry : 3F/0
 23870 ;;		On exit  : 3F/0
 23871 ;;		Unchanged: 0/0
 23872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23873 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23876 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23877 ;;Total ram usage:        2 bytes
 23878 ;; Hardware stack levels used:    1
 23879 ;; Hardware stack levels required when called:   15
 23880 ;; This function calls:
 23881 ;;		_SX1276Write
 23882 ;; This function is called by:
 23883 ;;		_initRadio
 23884 ;; This function uses a non-reentrant model
 23885 ;;
 23886                           
 23887                           	psect	text118
 23888  00BBB0                     __ptext118:
 23889                           	callstack 0
 23890  00BBB0                     _setPreambleLength:
 23891                           	callstack 11
 23892                           
 23893                           ;../phy/sx1276/sx1276_src/sx1276.c: 315: void setPreambleLength(uint16_t length);../phy/
      +                          sx1276/sx1276_src/sx1276.c: 316: {;../phy/sx1276/sx1276_src/sx1276.c: 317:   SX1276Write
      +                          (0x20, (uint8_t)(length >> 8));
 23894                           
 23895                           ; BSR set to: 0
 23896                           ;incstack = 0
 23897  00BBB0  C081  F07E         	movff	setPreambleLength@length+1,SX1276Write@data
 23898  00BBB4  0E20               	movlw	32
 23899  00BBB6  ECEA  F05C         	call	_SX1276Write
 23900                           
 23901                           ;../phy/sx1276/sx1276_src/sx1276.c: 318:   SX1276Write(0x21, (uint8_t)(length >> 0));
 23902  00BBBA  C080  F07E         	movff	setPreambleLength@length,SX1276Write@data
 23903  00BBBE  0E21               	movlw	33
 23904  00BBC0  ECEA  F05C         	call	_SX1276Write
 23905                           
 23906                           ; BSR set to: 0
 23907  00BBC4  0012               	return		;funcret
 23908  00BBC6                     __end_of_setPreambleLength:
 23909                           	callstack 0
 23910                           
 23911 ;; *************** function _setCodingRate4 *****************
 23912 ;; Defined at:
 23913 ;;		line 296 in file "../phy/sx1276/sx1276_src/sx1276.c"
 23914 ;; Parameters:    Size  Location     Type
 23915 ;;  denominator     1    wreg     unsigned char 
 23916 ;; Auto vars:     Size  Location     Type
 23917 ;;  denominator     1   34[BANK0 ] unsigned char 
 23918 ;;  cr              1   33[BANK0 ] unsigned char 
 23919 ;; Return value:  Size  Location     Type
 23920 ;;                  1    wreg      void 
 23921 ;; Registers used:
 23922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23923 ;; Tracked objects:
 23924 ;;		On entry : 3F/0
 23925 ;;		On exit  : 3F/0
 23926 ;;		Unchanged: 0/0
 23927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23929 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23930 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23931 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23932 ;;Total ram usage:        3 bytes
 23933 ;; Hardware stack levels used:    1
 23934 ;; Hardware stack levels required when called:   15
 23935 ;; This function calls:
 23936 ;;		_SX1276Read
 23937 ;;		_SX1276Write
 23938 ;; This function is called by:
 23939 ;;		_initRadio
 23940 ;; This function uses a non-reentrant model
 23941 ;;
 23942                           
 23943                           	psect	text119
 23944  00AB7E                     __ptext119:
 23945                           	callstack 0
 23946  00AB7E                     _setCodingRate4:
 23947                           	callstack 11
 23948                           
 23949                           ; BSR set to: 0
 23950                           ;incstack = 0
 23951                           ;setCodingRate4@denominator stored from wreg
 23952  00AB7E  0100               	movlb	0	; force () banked
 23953  00AB80  6F82               	movwf	setCodingRate4@denominator& (0+255),b
 23954                           
 23955                           ;../phy/sx1276/sx1276_src/sx1276.c: 296: void setCodingRate4(uint8_t denominator);../phy
      +                          /sx1276/sx1276_src/sx1276.c: 297: {;../phy/sx1276/sx1276_src/sx1276.c: 298:   if (denomi
      +                          nator < 5) {
 23956  00AB82  0E05               	movlw	5
 23957  00AB84  0100               	movlb	0	; force () banked
 23958  00AB86  6182               	cpfslt	setCodingRate4@denominator& (0+255),b
 23959  00AB88  D002               	goto	l13940
 23960                           
 23961                           ; BSR set to: 0
 23962                           ;../phy/sx1276/sx1276_src/sx1276.c: 299:     denominator = 5;
 23963  00AB8A  0E05               	movlw	5
 23964  00AB8C  D005               	goto	L30
 23965  00AB8E                     l13940:
 23966                           
 23967                           ; BSR set to: 0
 23968  00AB8E  0E08               	movlw	8
 23969  00AB90  0100               	movlb	0	; force () banked
 23970  00AB92  6582               	cpfsgt	setCodingRate4@denominator& (0+255),b
 23971  00AB94  D003               	goto	l13944
 23972                           
 23973                           ; BSR set to: 0
 23974                           ;../phy/sx1276/sx1276_src/sx1276.c: 301:     denominator = 8;
 23975  00AB96  0E08               	movlw	8
 23976  00AB98                     L30:
 23977  00AB98  0100               	movlb	0	; force () banked
 23978  00AB9A  6F82               	movwf	setCodingRate4@denominator& (0+255),b
 23979  00AB9C                     l13944:
 23980                           
 23981                           ; BSR set to: 0
 23982                           ;../phy/sx1276/sx1276_src/sx1276.c: 304:   uint8_t cr = denominator - 4;
 23983  00AB9C  0100               	movlb	0	; force () banked
 23984  00AB9E  5182               	movf	setCodingRate4@denominator& (0+255),w,b
 23985  00ABA0  0FFC               	addlw	252
 23986  00ABA2  0100               	movlb	0	; force () banked
 23987  00ABA4  6F81               	movwf	setCodingRate4@cr& (0+255),b
 23988                           
 23989                           ; BSR set to: 0
 23990                           ;../phy/sx1276/sx1276_src/sx1276.c: 306:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0xf1) |
      +                           (cr << 1));
 23991  00ABA6  0100               	movlb	0	; force () banked
 23992  00ABA8  90D8               	bcf	status,0,c
 23993  00ABAA  3581               	rlcf	setCodingRate4@cr& (0+255),w,b
 23994  00ABAC  0100               	movlb	0	; force () banked
 23995  00ABAE  6F80               	movwf	??_setCodingRate4& (0+255),b
 23996  00ABB0  0E1D               	movlw	29
 23997  00ABB2  EC55  F05C         	call	_SX1276Read
 23998  00ABB6  0BF1               	andlw	241
 23999  00ABB8  0100               	movlb	0	; force () banked
 24000  00ABBA  1180               	iorwf	??_setCodingRate4& (0+255),w,b
 24001  00ABBC  0100               	movlb	0	; force () banked
 24002  00ABBE  6F7E               	movwf	SX1276Write@data& (0+255),b
 24003  00ABC0  0E1D               	movlw	29
 24004  00ABC2  ECEA  F05C         	call	_SX1276Write
 24005                           
 24006                           ; BSR set to: 0
 24007  00ABC6  0012               	return		;funcret
 24008  00ABC8                     __end_of_setCodingRate4:
 24009                           	callstack 0
 24010                           
 24011 ;; *************** function _enableCrc *****************
 24012 ;; Defined at:
 24013 ;;		line 350 in file "../phy/sx1276/sx1276_src/sx1276.c"
 24014 ;; Parameters:    Size  Location     Type
 24015 ;;		None
 24016 ;; Auto vars:     Size  Location     Type
 24017 ;;		None
 24018 ;; Return value:  Size  Location     Type
 24019 ;;                  1    wreg      void 
 24020 ;; Registers used:
 24021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24022 ;; Tracked objects:
 24023 ;;		On entry : 3F/0
 24024 ;;		On exit  : 3F/0
 24025 ;;		Unchanged: 0/0
 24026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24031 ;;Total ram usage:        0 bytes
 24032 ;; Hardware stack levels used:    1
 24033 ;; Hardware stack levels required when called:   15
 24034 ;; This function calls:
 24035 ;;		_SX1276Read
 24036 ;;		_SX1276Write
 24037 ;; This function is called by:
 24038 ;;		_initRadio
 24039 ;; This function uses a non-reentrant model
 24040 ;;
 24041                           
 24042                           	psect	text120
 24043  00BBDA                     __ptext120:
 24044                           	callstack 0
 24045  00BBDA                     _enableCrc:
 24046                           	callstack 11
 24047                           
 24048                           ;../phy/sx1276/sx1276_src/sx1276.c: 352:   SX1276Write(0x1E, SX1276Read(0x1E) | 0x04);
 24049                           
 24050                           ; BSR set to: 0
 24051                           ;incstack = 0
 24052  00BBDA  0E1E               	movlw	30
 24053  00BBDC  EC55  F05C         	call	_SX1276Read
 24054  00BBE0  0904               	iorlw	4
 24055  00BBE2  0100               	movlb	0	; force () banked
 24056  00BBE4  6F7E               	movwf	SX1276Write@data& (0+255),b
 24057  00BBE6  0E1E               	movlw	30
 24058  00BBE8  ECEA  F05C         	call	_SX1276Write
 24059                           
 24060                           ; BSR set to: 0
 24061  00BBEC  0012               	return		;funcret
 24062  00BBEE                     __end_of_enableCrc:
 24063                           	callstack 0
 24064                           
 24065 ;; *************** function _PHY_SetChannel *****************
 24066 ;; Defined at:
 24067 ;;		line 43 in file "../phy/phy_src/phy.c"
 24068 ;; Parameters:    Size  Location     Type
 24069 ;;  channel         1    wreg     unsigned char 
 24070 ;; Auto vars:     Size  Location     Type
 24071 ;;  channel         1   62[BANK0 ] unsigned char 
 24072 ;; Return value:  Size  Location     Type
 24073 ;;                  1    wreg      void 
 24074 ;; Registers used:
 24075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24076 ;; Tracked objects:
 24077 ;;		On entry : 3F/0
 24078 ;;		On exit  : 3F/0
 24079 ;;		Unchanged: 0/0
 24080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24082 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24084 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24085 ;;Total ram usage:        1 bytes
 24086 ;; Hardware stack levels used:    1
 24087 ;; Hardware stack levels required when called:   16
 24088 ;; This function calls:
 24089 ;;		_setFrequency
 24090 ;; This function is called by:
 24091 ;;		_initRadio
 24092 ;; This function uses a non-reentrant model
 24093 ;;
 24094                           
 24095                           	psect	text121
 24096  00AE94                     __ptext121:
 24097                           	callstack 0
 24098  00AE94                     _PHY_SetChannel:
 24099                           	callstack 10
 24100                           
 24101                           ; BSR set to: 0
 24102                           ;incstack = 0
 24103                           ;PHY_SetChannel@channel stored from wreg
 24104  00AE94  0100               	movlb	0	; force () banked
 24105  00AE96  6F9E               	movwf	PHY_SetChannel@channel& (0+255),b
 24106                           
 24107                           ;../phy/phy_src/phy.c: 44:     setFrequency(fhssList[channel]);
 24108  00AE98  0100               	movlb	0	; force () banked
 24109  00AE9A  519E               	movf	PHY_SetChannel@channel& (0+255),w,b
 24110  00AE9C  0D04               	mullw	4
 24111  00AE9E  0E55               	movlw	low _fhssList
 24112  00AEA0  24F3               	addwf	243,w,c
 24113  00AEA2  6EF6               	movwf	tblptrl,c
 24114  00AEA4  0EFE               	movlw	high _fhssList
 24115  00AEA6  20F4               	addwfc	244,w,c
 24116  00AEA8  6EF7               	movwf	tblptrh,c
 24117  00AEAA                     	if	1	;There are 3 active tblptr bytes
 24118  00AEAA  6AF8               	clrf	tblptru,c
 24119  00AEAC  0E00               	movlw	low (__mediumconst shr (0+16))
 24120  00AEAE  22F8               	addwfc	tblptru,f,c
 24121  00AEB0                     	endif
 24122  00AEB0  0009               	tblrd		*+
 24123  00AEB2  006F FFD4  F092    	movff	tablat,setFrequency@frequency
 24124  00AEB8  0009               	tblrd		*+
 24125  00AEBA  006F FFD4  F093    	movff	tablat,setFrequency@frequency+1
 24126  00AEC0  0009               	tblrd		*+
 24127  00AEC2  006F FFD4  F094    	movff	tablat,setFrequency@frequency+2
 24128  00AEC8  000A               	tblrd		*-
 24129  00AECA  006F FFD4  F095    	movff	tablat,setFrequency@frequency+3
 24130  00AED0  EC99  F037         	call	_setFrequency	;wreg free
 24131                           
 24132                           ; BSR set to: 0
 24133  00AED4  0012               	return		;funcret
 24134  00AED6                     __end_of_PHY_SetChannel:
 24135                           	callstack 0
 24136                           
 24137 ;; *************** function _setFrequency *****************
 24138 ;; Defined at:
 24139 ;;		line 159 in file "../phy/sx1276/sx1276_src/sx1276.c"
 24140 ;; Parameters:    Size  Location     Type
 24141 ;;  frequency       4   50[BANK0 ] unsigned long 
 24142 ;; Auto vars:     Size  Location     Type
 24143 ;;  num             4   58[BANK0 ] unsigned long 
 24144 ;;  num_mod         4   54[BANK0 ] unsigned long 
 24145 ;; Return value:  Size  Location     Type
 24146 ;;                  4   50[BANK0 ] unsigned long 
 24147 ;; Registers used:
 24148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24149 ;; Tracked objects:
 24150 ;;		On entry : 3F/0
 24151 ;;		On exit  : 3F/0
 24152 ;;		Unchanged: 0/0
 24153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24154 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24155 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24157 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24158 ;;Total ram usage:       12 bytes
 24159 ;; Hardware stack levels used:    1
 24160 ;; Hardware stack levels required when called:   15
 24161 ;; This function calls:
 24162 ;;		_SX1276Write
 24163 ;;		___lldiv
 24164 ;;		___llmod
 24165 ;; This function is called by:
 24166 ;;		_PHY_SetChannel
 24167 ;; This function uses a non-reentrant model
 24168 ;;
 24169                           
 24170                           	psect	text122
 24171  006F32                     __ptext122:
 24172                           	callstack 0
 24173  006F32                     _setFrequency:
 24174                           	callstack 10
 24175                           
 24176                           ;../phy/sx1276/sx1276_src/sx1276.c: 159: uint32_t setFrequency(uint32_t frequency);../ph
      +                          y/sx1276/sx1276_src/sx1276.c: 160: {;../phy/sx1276/sx1276_src/sx1276.c: 161:     uint32_
      +                          t num, num_mod;;../phy/sx1276/sx1276_src/sx1276.c: 169:     num = frequency / 15625;
 24177                           
 24178                           ; BSR set to: 0
 24179                           ;incstack = 0
 24180  006F32  C092  F085         	movff	setFrequency@frequency,___lldiv@dividend
 24181  006F36  C093  F086         	movff	setFrequency@frequency+1,___lldiv@dividend+1
 24182  006F3A  C094  F087         	movff	setFrequency@frequency+2,___lldiv@dividend+2
 24183  006F3E  C095  F088         	movff	setFrequency@frequency+3,___lldiv@dividend+3
 24184  006F42  0E09               	movlw	9
 24185  006F44  0100               	movlb	0	; force () banked
 24186  006F46  6F89               	movwf	___lldiv@divisor& (0+255),b
 24187  006F48  0E3D               	movlw	61
 24188  006F4A  6F8A               	movwf	(___lldiv@divisor+1)& (0+255),b
 24189  006F4C  0E00               	movlw	0
 24190  006F4E  6F8B               	movwf	(___lldiv@divisor+2)& (0+255),b
 24191  006F50  0E00               	movlw	0
 24192  006F52  6F8C               	movwf	(___lldiv@divisor+3)& (0+255),b
 24193  006F54  EC3D  F04F         	call	___lldiv	;wreg free
 24194  006F58  C085  F09A         	movff	?___lldiv,setFrequency@num
 24195  006F5C  C086  F09B         	movff	?___lldiv+1,setFrequency@num+1
 24196  006F60  C087  F09C         	movff	?___lldiv+2,setFrequency@num+2
 24197  006F64  C088  F09D         	movff	?___lldiv+3,setFrequency@num+3
 24198                           
 24199                           ;../phy/sx1276/sx1276_src/sx1276.c: 170:     num_mod = frequency % 15625;
 24200  006F68  C092  F071         	movff	setFrequency@frequency,___llmod@dividend
 24201  006F6C  C093  F072         	movff	setFrequency@frequency+1,___llmod@dividend+1
 24202  006F70  C094  F073         	movff	setFrequency@frequency+2,___llmod@dividend+2
 24203  006F74  C095  F074         	movff	setFrequency@frequency+3,___llmod@dividend+3
 24204  006F78  0E09               	movlw	9
 24205  006F7A  0100               	movlb	0	; force () banked
 24206  006F7C  6F75               	movwf	___llmod@divisor& (0+255),b
 24207  006F7E  0E3D               	movlw	61
 24208  006F80  6F76               	movwf	(___llmod@divisor+1)& (0+255),b
 24209  006F82  0E00               	movlw	0
 24210  006F84  6F77               	movwf	(___llmod@divisor+2)& (0+255),b
 24211  006F86  0E00               	movlw	0
 24212  006F88  6F78               	movwf	(___llmod@divisor+3)& (0+255),b
 24213  006F8A  EC9C  F051         	call	___llmod	;wreg free
 24214  006F8E  C071  F096         	movff	?___llmod,setFrequency@num_mod
 24215  006F92  C072  F097         	movff	?___llmod+1,setFrequency@num_mod+1
 24216  006F96  C073  F098         	movff	?___llmod+2,setFrequency@num_mod+2
 24217  006F9A  C074  F099         	movff	?___llmod+3,setFrequency@num_mod+3
 24218                           
 24219                           ; BSR set to: 0
 24220                           ;../phy/sx1276/sx1276_src/sx1276.c: 174:     num <<= 8;
 24221  006F9E  C09C  F09D         	movff	setFrequency@num+2,setFrequency@num+3
 24222  006FA2  C09B  F09C         	movff	setFrequency@num+1,setFrequency@num+2
 24223  006FA6  C09A  F09B         	movff	setFrequency@num,setFrequency@num+1
 24224  006FAA  0100               	movlb	0	; force () banked
 24225  006FAC  6B9A               	clrf	setFrequency@num& (0+255),b
 24226                           
 24227                           ; BSR set to: 0
 24228                           ;../phy/sx1276/sx1276_src/sx1276.c: 175:     num_mod <<= 8;
 24229  006FAE  C098  F099         	movff	setFrequency@num_mod+2,setFrequency@num_mod+3
 24230  006FB2  C097  F098         	movff	setFrequency@num_mod+1,setFrequency@num_mod+2
 24231  006FB6  C096  F097         	movff	setFrequency@num_mod,setFrequency@num_mod+1
 24232  006FBA  0100               	movlb	0	; force () banked
 24233  006FBC  6B96               	clrf	setFrequency@num_mod& (0+255),b
 24234                           
 24235                           ;../phy/sx1276/sx1276_src/sx1276.c: 179:     num_mod = num_mod / 15625;
 24236  006FBE  C096  F085         	movff	setFrequency@num_mod,___lldiv@dividend
 24237  006FC2  C097  F086         	movff	setFrequency@num_mod+1,___lldiv@dividend+1
 24238  006FC6  C098  F087         	movff	setFrequency@num_mod+2,___lldiv@dividend+2
 24239  006FCA  C099  F088         	movff	setFrequency@num_mod+3,___lldiv@dividend+3
 24240  006FCE  0E09               	movlw	9
 24241  006FD0  0100               	movlb	0	; force () banked
 24242  006FD2  6F89               	movwf	___lldiv@divisor& (0+255),b
 24243  006FD4  0E3D               	movlw	61
 24244  006FD6  6F8A               	movwf	(___lldiv@divisor+1)& (0+255),b
 24245  006FD8  0E00               	movlw	0
 24246  006FDA  6F8B               	movwf	(___lldiv@divisor+2)& (0+255),b
 24247  006FDC  0E00               	movlw	0
 24248  006FDE  6F8C               	movwf	(___lldiv@divisor+3)& (0+255),b
 24249  006FE0  EC3D  F04F         	call	___lldiv	;wreg free
 24250  006FE4  C085  F096         	movff	?___lldiv,setFrequency@num_mod
 24251  006FE8  C086  F097         	movff	?___lldiv+1,setFrequency@num_mod+1
 24252  006FEC  C087  F098         	movff	?___lldiv+2,setFrequency@num_mod+2
 24253  006FF0  C088  F099         	movff	?___lldiv+3,setFrequency@num_mod+3
 24254                           
 24255                           ; BSR set to: 0
 24256                           ;../phy/sx1276/sx1276_src/sx1276.c: 180:     num += num_mod;
 24257  006FF4  0100               	movlb	0	; force () banked
 24258  006FF6  5196               	movf	setFrequency@num_mod& (0+255),w,b
 24259  006FF8  0100               	movlb	0	; force () banked
 24260  006FFA  279A               	addwf	setFrequency@num& (0+255),f,b
 24261  006FFC  0100               	movlb	0	; force () banked
 24262  006FFE  5197               	movf	(setFrequency@num_mod+1)& (0+255),w,b
 24263  007000  0100               	movlb	0	; force () banked
 24264  007002  239B               	addwfc	(setFrequency@num+1)& (0+255),f,b
 24265  007004  0100               	movlb	0	; force () banked
 24266  007006  5198               	movf	(setFrequency@num_mod+2)& (0+255),w,b
 24267  007008  0100               	movlb	0	; force () banked
 24268  00700A  239C               	addwfc	(setFrequency@num+2)& (0+255),f,b
 24269  00700C  0100               	movlb	0	; force () banked
 24270  00700E  5199               	movf	(setFrequency@num_mod+3)& (0+255),w,b
 24271  007010  0100               	movlb	0	; force () banked
 24272  007012  239D               	addwfc	(setFrequency@num+3)& (0+255),f,b
 24273                           
 24274                           ; BSR set to: 0
 24275                           ;../phy/sx1276/sx1276_src/sx1276.c: 183:     SX1276Write(0x06, (uint8_t)(num >> 16));
 24276  007014  C09C  F07E         	movff	setFrequency@num+2,SX1276Write@data
 24277  007018  0E06               	movlw	6
 24278  00701A  ECEA  F05C         	call	_SX1276Write
 24279                           
 24280                           ; BSR set to: 0
 24281                           ;../phy/sx1276/sx1276_src/sx1276.c: 184:     SX1276Write(0x07, (uint8_t)(num >> 8));
 24282  00701E  C09B  F07E         	movff	setFrequency@num+1,SX1276Write@data
 24283  007022  0E07               	movlw	7
 24284  007024  ECEA  F05C         	call	_SX1276Write
 24285                           
 24286                           ; BSR set to: 0
 24287                           ;../phy/sx1276/sx1276_src/sx1276.c: 185:     SX1276Write(0x08, (uint8_t)(num));
 24288  007028  C09A  F07E         	movff	setFrequency@num,SX1276Write@data
 24289  00702C  0E08               	movlw	8
 24290  00702E  ECEA  F05C         	call	_SX1276Write
 24291                           
 24292                           ; BSR set to: 0
 24293                           ;../phy/sx1276/sx1276_src/sx1276.c: 187:     return(num);
 24294  007032  C09A  F092         	movff	setFrequency@num,?_setFrequency
 24295  007036  C09B  F093         	movff	setFrequency@num+1,?_setFrequency+1
 24296  00703A  C09C  F094         	movff	setFrequency@num+2,?_setFrequency+2
 24297  00703E  C09D  F095         	movff	setFrequency@num+3,?_setFrequency+3
 24298                           
 24299                           ; BSR set to: 0
 24300  007042  0012               	return		;funcret
 24301  007044                     __end_of_setFrequency:
 24302                           	callstack 0
 24303                           
 24304 ;; *************** function ___llmod *****************
 24305 ;; Defined at:
 24306 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
 24307 ;; Parameters:    Size  Location     Type
 24308 ;;  dividend        4   17[BANK0 ] unsigned long 
 24309 ;;  divisor         4   21[BANK0 ] unsigned long 
 24310 ;; Auto vars:     Size  Location     Type
 24311 ;;  counter         1   25[BANK0 ] unsigned char 
 24312 ;; Return value:  Size  Location     Type
 24313 ;;                  4   17[BANK0 ] unsigned long 
 24314 ;; Registers used:
 24315 ;;		wreg, status,2, status,0
 24316 ;; Tracked objects:
 24317 ;;		On entry : 3F/0
 24318 ;;		On exit  : 3F/0
 24319 ;;		Unchanged: 0/0
 24320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24321 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24322 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24324 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24325 ;;Total ram usage:        9 bytes
 24326 ;; Hardware stack levels used:    1
 24327 ;; Hardware stack levels required when called:   11
 24328 ;; This function calls:
 24329 ;;		Nothing
 24330 ;; This function is called by:
 24331 ;;		_setFrequency
 24332 ;; This function uses a non-reentrant model
 24333 ;;
 24334                           
 24335                           	psect	text123
 24336  00A338                     __ptext123:
 24337                           	callstack 0
 24338  00A338                     ___llmod:
 24339                           	callstack 13
 24340                           
 24341                           ; BSR set to: 0
 24342                           ;incstack = 0
 24343  00A338  0100               	movlb	0	; () banked
 24344  00A33A  5175               	movf	___llmod@divisor& (0+255),w,b
 24345  00A33C  1176               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 24346  00A33E  1177               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 24347  00A340  1178               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 24348  00A342  B4D8               	btfsc	status,2,c
 24349  00A344  D024               	goto	l4519
 24350                           
 24351                           ; BSR set to: 0
 24352  00A346  0E01               	movlw	1
 24353  00A348  6F79               	movwf	___llmod@counter& (0+255),b
 24354  00A34A  D006               	goto	l12248
 24355  00A34C                     l12246:
 24356                           
 24357                           ; BSR set to: 0
 24358  00A34C  90D8               	bcf	status,0,c
 24359  00A34E  3775               	rlcf	___llmod@divisor& (0+255),f,b
 24360  00A350  3776               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 24361  00A352  3777               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 24362  00A354  3778               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 24363  00A356  2B79               	incf	___llmod@counter& (0+255),f,b
 24364  00A358                     l12248:
 24365                           
 24366                           ; BSR set to: 0
 24367  00A358  AF78               	btfss	(___llmod@divisor+3)& (0+255),7,b
 24368  00A35A  D7F8               	goto	l12246
 24369  00A35C                     u8630:
 24370                           
 24371                           ; BSR set to: 0
 24372  00A35C  5175               	movf	___llmod@divisor& (0+255),w,b
 24373  00A35E  5D71               	subwf	___llmod@dividend& (0+255),w,b
 24374  00A360  5176               	movf	(___llmod@divisor+1)& (0+255),w,b
 24375  00A362  5972               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 24376  00A364  5177               	movf	(___llmod@divisor+2)& (0+255),w,b
 24377  00A366  5973               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 24378  00A368  5178               	movf	(___llmod@divisor+3)& (0+255),w,b
 24379  00A36A  5974               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 24380  00A36C  A0D8               	btfss	status,0,c
 24381  00A36E  D008               	goto	l12254
 24382                           
 24383                           ; BSR set to: 0
 24384  00A370  5175               	movf	___llmod@divisor& (0+255),w,b
 24385  00A372  5F71               	subwf	___llmod@dividend& (0+255),f,b
 24386  00A374  5176               	movf	(___llmod@divisor+1)& (0+255),w,b
 24387  00A376  5B72               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 24388  00A378  5177               	movf	(___llmod@divisor+2)& (0+255),w,b
 24389  00A37A  5B73               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 24390  00A37C  5178               	movf	(___llmod@divisor+3)& (0+255),w,b
 24391  00A37E  5B74               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 24392  00A380                     l12254:
 24393                           
 24394                           ; BSR set to: 0
 24395  00A380  90D8               	bcf	status,0,c
 24396  00A382  3378               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 24397  00A384  3377               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 24398  00A386  3376               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 24399  00A388  3375               	rrcf	___llmod@divisor& (0+255),f,b
 24400                           
 24401                           ; BSR set to: 0
 24402  00A38A  2F79               	decfsz	___llmod@counter& (0+255),f,b
 24403  00A38C  D7E7               	goto	u8630
 24404  00A38E                     l4519:
 24405                           
 24406                           ; BSR set to: 0
 24407  00A38E  C071  F071         	movff	___llmod@dividend,?___llmod
 24408  00A392  C072  F072         	movff	___llmod@dividend+1,?___llmod+1
 24409  00A396  C073  F073         	movff	___llmod@dividend+2,?___llmod+2
 24410  00A39A  C074  F074         	movff	___llmod@dividend+3,?___llmod+3
 24411                           
 24412                           ; BSR set to: 0
 24413  00A39E  0012               	return		;funcret
 24414  00A3A0                     __end_of___llmod:
 24415                           	callstack 0
 24416                           
 24417 ;; *************** function ___lldiv *****************
 24418 ;; Defined at:
 24419 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
 24420 ;; Parameters:    Size  Location     Type
 24421 ;;  dividend        4   37[BANK0 ] unsigned long 
 24422 ;;  divisor         4   41[BANK0 ] unsigned long 
 24423 ;; Auto vars:     Size  Location     Type
 24424 ;;  quotient        4   45[BANK0 ] unsigned long 
 24425 ;;  counter         1   49[BANK0 ] unsigned char 
 24426 ;; Return value:  Size  Location     Type
 24427 ;;                  4   37[BANK0 ] unsigned long 
 24428 ;; Registers used:
 24429 ;;		wreg, status,2, status,0
 24430 ;; Tracked objects:
 24431 ;;		On entry : 3F/0
 24432 ;;		On exit  : 3F/0
 24433 ;;		Unchanged: 0/0
 24434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24435 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24436 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24438 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24439 ;;Total ram usage:       13 bytes
 24440 ;; Hardware stack levels used:    1
 24441 ;; Hardware stack levels required when called:   11
 24442 ;; This function calls:
 24443 ;;		Nothing
 24444 ;; This function is called by:
 24445 ;;		_eMBRTUInit
 24446 ;;		_setFrequency
 24447 ;;		_setSpreadingFactor
 24448 ;;		_setSignalBandwidth
 24449 ;; This function uses a non-reentrant model
 24450 ;;
 24451                           
 24452                           	psect	text124
 24453  009E7A                     __ptext124:
 24454                           	callstack 0
 24455  009E7A                     ___lldiv:
 24456                           	callstack 16
 24457                           
 24458                           ; BSR set to: 0
 24459                           ;incstack = 0
 24460  009E7A  0E00               	movlw	0
 24461  009E7C  0100               	movlb	0	; () banked
 24462  009E7E  6F8D               	movwf	___lldiv@quotient& (0+255),b
 24463  009E80  0E00               	movlw	0
 24464  009E82  6F8E               	movwf	(___lldiv@quotient+1)& (0+255),b
 24465  009E84  0E00               	movlw	0
 24466  009E86  6F8F               	movwf	(___lldiv@quotient+2)& (0+255),b
 24467  009E88  0E00               	movlw	0
 24468  009E8A  6F90               	movwf	(___lldiv@quotient+3)& (0+255),b
 24469                           
 24470                           ; BSR set to: 0
 24471  009E8C  5189               	movf	___lldiv@divisor& (0+255),w,b
 24472  009E8E  118A               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 24473  009E90  118B               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 24474  009E92  118C               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 24475  009E94  B4D8               	btfsc	status,2,c
 24476  009E96  D02A               	goto	l4138
 24477                           
 24478                           ; BSR set to: 0
 24479  009E98  0E01               	movlw	1
 24480  009E9A  6F91               	movwf	___lldiv@counter& (0+255),b
 24481  009E9C  D006               	goto	l12228
 24482  009E9E                     l12226:
 24483                           
 24484                           ; BSR set to: 0
 24485  009E9E  90D8               	bcf	status,0,c
 24486  009EA0  3789               	rlcf	___lldiv@divisor& (0+255),f,b
 24487  009EA2  378A               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 24488  009EA4  378B               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 24489  009EA6  378C               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 24490  009EA8  2B91               	incf	___lldiv@counter& (0+255),f,b
 24491  009EAA                     l12228:
 24492                           
 24493                           ; BSR set to: 0
 24494  009EAA  AF8C               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 24495  009EAC  D7F8               	goto	l12226
 24496  009EAE                     u8600:
 24497                           
 24498                           ; BSR set to: 0
 24499  009EAE  90D8               	bcf	status,0,c
 24500  009EB0  378D               	rlcf	___lldiv@quotient& (0+255),f,b
 24501  009EB2  378E               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 24502  009EB4  378F               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 24503  009EB6  3790               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 24504                           
 24505                           ; BSR set to: 0
 24506  009EB8  5189               	movf	___lldiv@divisor& (0+255),w,b
 24507  009EBA  5D85               	subwf	___lldiv@dividend& (0+255),w,b
 24508  009EBC  518A               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24509  009EBE  5986               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 24510  009EC0  518B               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24511  009EC2  5987               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 24512  009EC4  518C               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24513  009EC6  5988               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 24514  009EC8  A0D8               	btfss	status,0,c
 24515  009ECA  D009               	goto	l12238
 24516                           
 24517                           ; BSR set to: 0
 24518  009ECC  5189               	movf	___lldiv@divisor& (0+255),w,b
 24519  009ECE  5F85               	subwf	___lldiv@dividend& (0+255),f,b
 24520  009ED0  518A               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24521  009ED2  5B86               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 24522  009ED4  518B               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24523  009ED6  5B87               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 24524  009ED8  518C               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24525  009EDA  5B88               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 24526                           
 24527                           ; BSR set to: 0
 24528  009EDC  818D               	bsf	___lldiv@quotient& (0+255),0,b
 24529  009EDE                     l12238:
 24530                           
 24531                           ; BSR set to: 0
 24532  009EDE  90D8               	bcf	status,0,c
 24533  009EE0  338C               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 24534  009EE2  338B               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 24535  009EE4  338A               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 24536  009EE6  3389               	rrcf	___lldiv@divisor& (0+255),f,b
 24537                           
 24538                           ; BSR set to: 0
 24539  009EE8  2F91               	decfsz	___lldiv@counter& (0+255),f,b
 24540  009EEA  D7E1               	goto	u8600
 24541  009EEC                     l4138:
 24542                           
 24543                           ; BSR set to: 0
 24544  009EEC  C08D  F085         	movff	___lldiv@quotient,?___lldiv
 24545  009EF0  C08E  F086         	movff	___lldiv@quotient+1,?___lldiv+1
 24546  009EF4  C08F  F087         	movff	___lldiv@quotient+2,?___lldiv+2
 24547  009EF8  C090  F088         	movff	___lldiv@quotient+3,?___lldiv+3
 24548                           
 24549                           ; BSR set to: 0
 24550  009EFC  0012               	return		;funcret
 24551  009EFE                     __end_of___lldiv:
 24552                           	callstack 0
 24553                           
 24554 ;; *************** function _cad *****************
 24555 ;; Defined at:
 24556 ;;		line 502 in file "../phy/sx1276/sx1276_src/sx1276.c"
 24557 ;; Parameters:    Size  Location     Type
 24558 ;;		None
 24559 ;; Auto vars:     Size  Location     Type
 24560 ;;  RSSI_loc        2   33[BANK0 ] int 
 24561 ;;  temp            1   35[BANK0 ] unsigned char 
 24562 ;; Return value:  Size  Location     Type
 24563 ;;                  1    wreg      unsigned char 
 24564 ;; Registers used:
 24565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24566 ;; Tracked objects:
 24567 ;;		On entry : 3F/0
 24568 ;;		On exit  : 3F/0
 24569 ;;		Unchanged: 0/0
 24570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24572 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24573 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24574 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24575 ;;Total ram usage:        4 bytes
 24576 ;; Hardware stack levels used:    1
 24577 ;; Hardware stack levels required when called:   17
 24578 ;; This function calls:
 24579 ;;		_SX1276Read
 24580 ;;		_SX1276Write
 24581 ;;		_get_timer0base
 24582 ;;		_set_timer0base
 24583 ;;		_start_radio_cad
 24584 ;; This function is called by:
 24585 ;;		_radio_engine
 24586 ;; This function uses a non-reentrant model
 24587 ;;
 24588                           
 24589                           	psect	text125
 24590  007CC6                     __ptext125:
 24591                           	callstack 0
 24592  007CC6                     _cad:
 24593                           	callstack 10
 24594                           
 24595                           ;../phy/sx1276/sx1276_src/sx1276.c: 503:     uint8_t temp;;../phy/sx1276/sx1276_src/sx12
      +                          76.c: 504:     int16_t RSSI_loc;;../phy/sx1276/sx1276_src/sx1276.c: 506:     temp = SX12
      +                          76Read(0x18);
 24596                           
 24597                           ; BSR set to: 0
 24598                           ;incstack = 0
 24599  007CC6  0E18               	movlw	24
 24600  007CC8  EC55  F05C         	call	_SX1276Read
 24601  007CCC  0100               	movlb	0	; force () banked
 24602  007CCE  6F83               	movwf	cad@temp& (0+255),b
 24603                           
 24604                           ;../phy/sx1276/sx1276_src/sx1276.c: 507:     RSSI_loc = -157 + SX1276Read(0x1B);
 24605  007CD0  0E1B               	movlw	27
 24606  007CD2  EC55  F05C         	call	_SX1276Read
 24607  007CD6  0100               	movlb	0	; force () banked
 24608  007CD8  6F80               	movwf	??_cad& (0+255),b
 24609  007CDA  0E63               	movlw	99
 24610  007CDC  2580               	addwf	??_cad& (0+255),w,b
 24611  007CDE  0100               	movlb	0	; force () banked
 24612  007CE0  6F81               	movwf	cad@RSSI_loc& (0+255),b
 24613  007CE2  6B82               	clrf	(cad@RSSI_loc+1)& (0+255),b
 24614  007CE4  0EFF               	movlw	255
 24615  007CE6  2382               	addwfc	(cad@RSSI_loc+1)& (0+255),f,b
 24616                           
 24617                           ; BSR set to: 0
 24618                           ;../phy/sx1276/sx1276_src/sx1276.c: 508:     if((temp & 0x01) || (temp & 0x02) || (RSSI_
      +                          loc > RSSITarget)){
 24619  007CE8  0100               	movlb	0	; force () banked
 24620  007CEA  B183               	btfsc	cad@temp& (0+255),0,b
 24621  007CEC  D014               	goto	u12060
 24622                           
 24623                           ; BSR set to: 0
 24624  007CEE  0100               	movlb	0	; force () banked
 24625  007CF0  B383               	btfsc	cad@temp& (0+255),1,b
 24626  007CF2  D011               	goto	u12060
 24627                           
 24628                           ; BSR set to: 0
 24629  007CF4  0E80               	movlw	128
 24630  007CF6  0100               	movlb	0	; force () banked
 24631  007CF8  BFE8               	btfsc	_RSSITarget& (0+255),7,b
 24632  007CFA  0E7F               	movlw	127
 24633  007CFC  0100               	movlb	0	; force () banked
 24634  007CFE  6F80               	movwf	??_cad& (0+255),b
 24635  007D00  0100               	movlb	0	; force () banked
 24636  007D02  5181               	movf	cad@RSSI_loc& (0+255),w,b
 24637  007D04  0100               	movlb	0	; force () banked
 24638  007D06  5DE8               	subwf	_RSSITarget& (0+255),w,b
 24639  007D08  0100               	movlb	0	; force () banked
 24640  007D0A  5182               	movf	(cad@RSSI_loc+1)& (0+255),w,b
 24641  007D0C  0A80               	xorlw	128
 24642  007D0E  0100               	movlb	0	; force () banked
 24643  007D10  5980               	subwfb	??_cad& (0+255),w,b
 24644  007D12  B0D8               	btfsc	status,0,c
 24645  007D14  D002               	goto	l15014
 24646  007D16                     u12060:
 24647                           
 24648                           ; BSR set to: 0
 24649                           ;../phy/sx1276/sx1276_src/sx1276.c: 509:         return 1;
 24650  007D16  0E01               	movlw	1
 24651  007D18  0012               	return	
 24652  007D1A                     l15014:
 24653                           
 24654                           ; BSR set to: 0
 24655                           ;../phy/sx1276/sx1276_src/sx1276.c: 511:     start_radio_cad();
 24656  007D1A  EC13  F05E         	call	_start_radio_cad	;wreg free
 24657                           
 24658                           ; BSR set to: 0
 24659                           ;../phy/sx1276/sx1276_src/sx1276.c: 512:     cadDone = 0;
 24660  007D1E  0E00               	movlw	0
 24661  007D20  0101               	movlb	1	; force () banked
 24662  007D22  6FEE               	movwf	_cadDone& (0+255),b
 24663                           
 24664                           ; BSR set to: 1
 24665                           ;../phy/sx1276/sx1276_src/sx1276.c: 513:     set_timer0base(&cadTimeOut, 2000);
 24666  007D24  0EE4               	movlw	low _cadTimeOut
 24667  007D26  0100               	movlb	0	; force () banked
 24668  007D28  6F71               	movwf	set_timer0base@timer& (0+255),b
 24669  007D2A  0E00               	movlw	high _cadTimeOut
 24670  007D2C  6F72               	movwf	(set_timer0base@timer+1)& (0+255),b
 24671  007D2E  0E07               	movlw	7
 24672  007D30  0100               	movlb	0	; force () banked
 24673  007D32  6F74               	movwf	(set_timer0base@tval+1)& (0+255),b
 24674  007D34  0ED0               	movlw	208
 24675  007D36  6F73               	movwf	set_timer0base@tval& (0+255),b
 24676  007D38  EC44  F05C         	call	_set_timer0base	;wreg free
 24677                           
 24678                           ;../phy/sx1276/sx1276_src/sx1276.c: 515:     while((cadDone == 0) && (get_timer0base(&ca
      +                          dTimeOut)))
 24679  007D3C  D017               	goto	l15038
 24680  007D3E                     l15020:
 24681                           
 24682                           ; BSR set to: 0
 24683                           ;../phy/sx1276/sx1276_src/sx1276.c: 516:     {;../phy/sx1276/sx1276_src/sx1276.c: 517:  
      +                                 temp = SX1276Read(0x12);
 24684  007D3E  0E12               	movlw	18
 24685  007D40  EC55  F05C         	call	_SX1276Read
 24686  007D44  0100               	movlb	0	; force () banked
 24687  007D46  6F83               	movwf	cad@temp& (0+255),b
 24688                           
 24689                           ;../phy/sx1276/sx1276_src/sx1276.c: 518:         SX1276Write(0x12,temp);
 24690  007D48  C083  F07E         	movff	cad@temp,SX1276Write@data
 24691  007D4C  0E12               	movlw	18
 24692  007D4E  ECEA  F05C         	call	_SX1276Write
 24693                           
 24694                           ; BSR set to: 0
 24695                           ;../phy/sx1276/sx1276_src/sx1276.c: 519:         if(temp & 0x04)
 24696  007D52  0100               	movlb	0	; force () banked
 24697  007D54  A583               	btfss	cad@temp& (0+255),2,b
 24698  007D56  D00A               	goto	l15038
 24699                           
 24700                           ; BSR set to: 0
 24701                           ;../phy/sx1276/sx1276_src/sx1276.c: 520:         {;../phy/sx1276/sx1276_src/sx1276.c: 52
      +                          1:             cadDone = 1;
 24702  007D58  0E01               	movlw	1
 24703  007D5A  0101               	movlb	1	; force () banked
 24704  007D5C  6FEE               	movwf	_cadDone& (0+255),b
 24705                           
 24706                           ; BSR set to: 1
 24707                           ;../phy/sx1276/sx1276_src/sx1276.c: 522:             if(temp & 0x01)
 24708  007D5E  0100               	movlb	0	; force () banked
 24709  007D60  A183               	btfss	cad@temp& (0+255),0,b
 24710  007D62  D002               	goto	l15034
 24711                           
 24712                           ; BSR set to: 0
 24713                           ;../phy/sx1276/sx1276_src/sx1276.c: 523:             {;../phy/sx1276/sx1276_src/sx1276.c
      +                          : 524:                 return 1;
 24714  007D64  0E01               	movlw	1
 24715  007D66  0012               	return	
 24716  007D68                     l15034:
 24717                           
 24718                           ; BSR set to: 0
 24719                           ;../phy/sx1276/sx1276_src/sx1276.c: 527:             {;../phy/sx1276/sx1276_src/sx1276.c
      +                          : 528:                 return 0;
 24720  007D68  0E00               	movlw	0
 24721  007D6A  0012               	return	
 24722  007D6C                     l15038:
 24723                           
 24724                           ;../phy/sx1276/sx1276_src/sx1276.c: 515:     while((cadDone == 0) && (get_timer0base(&ca
      +                          dTimeOut)))
 24725  007D6C  0101               	movlb	1	; force () banked
 24726  007D6E  51EE               	movf	_cadDone& (0+255),w,b
 24727  007D70  A4D8               	btfss	status,2,c
 24728  007D72  D00C               	goto	u12100
 24729                           
 24730                           ; BSR set to: 1
 24731  007D74  0EE4               	movlw	low _cadTimeOut
 24732  007D76  0100               	movlb	0	; force () banked
 24733  007D78  6F71               	movwf	get_timer0base@timer& (0+255),b
 24734  007D7A  0E00               	movlw	high _cadTimeOut
 24735  007D7C  6F72               	movwf	(get_timer0base@timer+1)& (0+255),b
 24736  007D7E  EC39  F05B         	call	_get_timer0base	;wreg free
 24737  007D82  0100               	movlb	0	; force () banked
 24738  007D84  5171               	movf	?_get_timer0base& (0+255),w,b
 24739  007D86  1172               	iorwf	(?_get_timer0base+1)& (0+255),w,b
 24740  007D88  A4D8               	btfss	status,2,c
 24741  007D8A  D7D9               	goto	l15020
 24742  007D8C                     u12100:
 24743                           
 24744                           ;../phy/sx1276/sx1276_src/sx1276.c: 532:     if(!get_timer0base(&cadTimeOut))
 24745  007D8C  0EE4               	movlw	low _cadTimeOut
 24746  007D8E  0100               	movlb	0	; force () banked
 24747  007D90  6F71               	movwf	get_timer0base@timer& (0+255),b
 24748  007D92  0E00               	movlw	high _cadTimeOut
 24749  007D94  6F72               	movwf	(get_timer0base@timer+1)& (0+255),b
 24750  007D96  EC39  F05B         	call	_get_timer0base	;wreg free
 24751  007D9A  0100               	movlb	0	; force () banked
 24752  007D9C  5171               	movf	?_get_timer0base& (0+255),w,b
 24753  007D9E  1172               	iorwf	(?_get_timer0base+1)& (0+255),w,b
 24754  007DA0  A4D8               	btfss	status,2,c
 24755  007DA2  0012               	return	
 24756                           
 24757                           ; BSR set to: 0
 24758                           ;../phy/sx1276/sx1276_src/sx1276.c: 533:     {;../phy/sx1276/sx1276_src/sx1276.c: 535:  
      +                                 return 1;
 24759  007DA4  0E01               	movlw	1
 24760                           
 24761                           ; BSR set to: 0
 24762  007DA6  0012               	return		;funcret
 24763  007DA8                     __end_of_cad:
 24764                           	callstack 0
 24765                           
 24766 ;; *************** function _start_radio_cad *****************
 24767 ;; Defined at:
 24768 ;;		line 545 in file "../phy/sx1276/sx1276_src/sx1276.c"
 24769 ;; Parameters:    Size  Location     Type
 24770 ;;		None
 24771 ;; Auto vars:     Size  Location     Type
 24772 ;;		None
 24773 ;; Return value:  Size  Location     Type
 24774 ;;                  1    wreg      void 
 24775 ;; Registers used:
 24776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24777 ;; Tracked objects:
 24778 ;;		On entry : 3F/0
 24779 ;;		On exit  : 3F/0
 24780 ;;		Unchanged: 0/0
 24781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24786 ;;Total ram usage:        0 bytes
 24787 ;; Hardware stack levels used:    1
 24788 ;; Hardware stack levels required when called:   16
 24789 ;; This function calls:
 24790 ;;		_SX1276Write
 24791 ;;		_idle
 24792 ;; This function is called by:
 24793 ;;		_cad
 24794 ;; This function uses a non-reentrant model
 24795 ;;
 24796                           
 24797                           	psect	text126
 24798  00BC26                     __ptext126:
 24799                           	callstack 0
 24800  00BC26                     _start_radio_cad:
 24801                           	callstack 10
 24802                           
 24803                           ;../phy/sx1276/sx1276_src/sx1276.c: 547:     idle();
 24804                           
 24805                           ; BSR set to: 0
 24806                           ;incstack = 0
 24807  00BC26  EC4A  F05E         	call	_idle	;wreg free
 24808                           
 24809                           ;../phy/sx1276/sx1276_src/sx1276.c: 548:     SX1276Write(0x01,0x80 | 0x07);
 24810  00BC2A  0E87               	movlw	135
 24811  00BC2C  0100               	movlb	0	; force () banked
 24812  00BC2E  6F7E               	movwf	SX1276Write@data& (0+255),b
 24813  00BC30  0E01               	movlw	1
 24814  00BC32  ECEA  F05C         	call	_SX1276Write
 24815                           
 24816                           ; BSR set to: 0
 24817  00BC36  0012               	return		;funcret
 24818  00BC38                     __end_of_start_radio_cad:
 24819                           	callstack 0
 24820                           
 24821 ;; *************** function _idle *****************
 24822 ;; Defined at:
 24823 ;;		line 116 in file "../phy/sx1276/sx1276_src/sx1276.c"
 24824 ;; Parameters:    Size  Location     Type
 24825 ;;		None
 24826 ;; Auto vars:     Size  Location     Type
 24827 ;;		None
 24828 ;; Return value:  Size  Location     Type
 24829 ;;                  1    wreg      void 
 24830 ;; Registers used:
 24831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24832 ;; Tracked objects:
 24833 ;;		On entry : 0/0
 24834 ;;		On exit  : 3F/0
 24835 ;;		Unchanged: 0/0
 24836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24841 ;;Total ram usage:        0 bytes
 24842 ;; Hardware stack levels used:    1
 24843 ;; Hardware stack levels required when called:   15
 24844 ;; This function calls:
 24845 ;;		_SX1276Write
 24846 ;; This function is called by:
 24847 ;;		_start_radio_cad
 24848 ;;		_sx1276_send
 24849 ;; This function uses a non-reentrant model
 24850 ;;
 24851                           
 24852                           	psect	text127
 24853  00BC94                     __ptext127:
 24854                           	callstack 0
 24855  00BC94                     _idle:
 24856                           	callstack 11
 24857                           
 24858                           ;../phy/sx1276/sx1276_src/sx1276.c: 118:     SX1276Write(0x01,0x80 | 0x01);
 24859                           
 24860                           ; BSR set to: 0
 24861                           ;incstack = 0
 24862  00BC94  0E81               	movlw	129
 24863  00BC96  0100               	movlb	0	; force () banked
 24864  00BC98  6F7E               	movwf	SX1276Write@data& (0+255),b
 24865  00BC9A  0E01               	movlw	1
 24866  00BC9C  ECEA  F05C         	call	_SX1276Write
 24867                           
 24868                           ; BSR set to: 0
 24869  00BCA0  0012               	return		;funcret
 24870  00BCA2                     __end_of_idle:
 24871                           	callstack 0
 24872                           
 24873 ;; *************** function _set_timer0base *****************
 24874 ;; Defined at:
 24875 ;;		line 63 in file "../hal/hal_src/Timers.c"
 24876 ;; Parameters:    Size  Location     Type
 24877 ;;  timer           2   17[BANK0 ] PTR unsigned int 
 24878 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), blen_sample_timer(2), 
 24879 ;;		 -> ledtimer(2), 
 24880 ;;  tval            2   19[BANK0 ] unsigned int 
 24881 ;; Auto vars:     Size  Location     Type
 24882 ;;		None
 24883 ;; Return value:  Size  Location     Type
 24884 ;;                  1    wreg      void 
 24885 ;; Registers used:
 24886 ;;		fsr2l, fsr2h
 24887 ;; Tracked objects:
 24888 ;;		On entry : 3F/0
 24889 ;;		On exit  : 3F/39
 24890 ;;		Unchanged: 0/0
 24891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24892 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24895 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24896 ;;Total ram usage:        4 bytes
 24897 ;; Hardware stack levels used:    1
 24898 ;; Hardware stack levels required when called:   11
 24899 ;; This function calls:
 24900 ;;		Nothing
 24901 ;; This function is called by:
 24902 ;;		_handle_led_events
 24903 ;;		_uart_default_engine
 24904 ;;		_cad
 24905 ;;		_radio_engine
 24906 ;; This function uses a non-reentrant model
 24907 ;;
 24908                           
 24909                           	psect	text128
 24910  00B888                     __ptext128:
 24911                           	callstack 0
 24912  00B888                     _set_timer0base:
 24913                           	callstack 17
 24914                           
 24915                           ;../hal/hal_src/Timers.c: 64:     PIE3bits.TMR0IE = 0;;
 24916                           
 24917                           ; BSR set to: 0
 24918                           ;incstack = 0
 24919  00B888  0139               	movlb	57	; force () banked
 24920  00B88A  9F93               	bcf	147,7,b	;volatile
 24921                           
 24922                           ; BSR set to: 57
 24923                           ;../hal/hal_src/Timers.c: 65:     *timer = tval;
 24924  00B88C  0060  F1C7  FFD9   	movff	set_timer0base@timer,fsr2l
 24925  00B892  0060  F1CB  FFDA   	movff	set_timer0base@timer+1,fsr2h
 24926  00B898  0060  F1CF  FFDE   	movff	set_timer0base@tval,postinc2
 24927  00B89E  0060  F1D3  FFDD   	movff	set_timer0base@tval+1,postdec2
 24928                           
 24929                           ; BSR set to: 57
 24930                           ;../hal/hal_src/Timers.c: 66:     PIE3bits.TMR0IE = 1;;
 24931  00B8A4  0139               	movlb	57	; force () banked
 24932  00B8A6  8F93               	bsf	147,7,b	;volatile
 24933                           
 24934                           ; BSR set to: 57
 24935  00B8A8  0012               	return		;funcret
 24936  00B8AA                     __end_of_set_timer0base:
 24937                           	callstack 0
 24938                           
 24939 ;; *************** function _get_timer0base *****************
 24940 ;; Defined at:
 24941 ;;		line 55 in file "../hal/hal_src/Timers.c"
 24942 ;; Parameters:    Size  Location     Type
 24943 ;;  timer           2   17[BANK0 ] PTR unsigned int 
 24944 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), blen_sample_timer(2), 
 24945 ;;		 -> ledtimer(2), 
 24946 ;; Auto vars:     Size  Location     Type
 24947 ;;  tval            2   19[BANK0 ] unsigned int 
 24948 ;; Return value:  Size  Location     Type
 24949 ;;                  2   17[BANK0 ] unsigned int 
 24950 ;; Registers used:
 24951 ;;		fsr2l, fsr2h
 24952 ;; Tracked objects:
 24953 ;;		On entry : 3F/0
 24954 ;;		On exit  : 3F/39
 24955 ;;		Unchanged: 0/0
 24956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24957 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24958 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24960 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24961 ;;Total ram usage:        4 bytes
 24962 ;; Hardware stack levels used:    1
 24963 ;; Hardware stack levels required when called:   11
 24964 ;; This function calls:
 24965 ;;		Nothing
 24966 ;; This function is called by:
 24967 ;;		_handle_led_events
 24968 ;;		_uart_default_engine
 24969 ;;		_cad
 24970 ;;		_radio_engine
 24971 ;; This function uses a non-reentrant model
 24972 ;;
 24973                           
 24974                           	psect	text129
 24975  00B672                     __ptext129:
 24976                           	callstack 0
 24977  00B672                     _get_timer0base:
 24978                           	callstack 17
 24979                           
 24980                           ;../hal/hal_src/Timers.c: 56:     uint16_t tval;;../hal/hal_src/Timers.c: 57:     PIE3bi
      +                          ts.TMR0IE = 0;;
 24981                           
 24982                           ; BSR set to: 57
 24983                           ;incstack = 0
 24984  00B672  0139               	movlb	57	; force () banked
 24985  00B674  9F93               	bcf	147,7,b	;volatile
 24986                           
 24987                           ; BSR set to: 57
 24988                           ;../hal/hal_src/Timers.c: 58:     tval = *timer;
 24989  00B676  0060  F1C7  FFD9   	movff	get_timer0base@timer,fsr2l
 24990  00B67C  0060  F1CB  FFDA   	movff	get_timer0base@timer+1,fsr2h
 24991  00B682  006F FF78  F073    	movff	postinc2,get_timer0base@tval
 24992  00B688  006F FF74  F074    	movff	postdec2,get_timer0base@tval+1
 24993                           
 24994                           ; BSR set to: 57
 24995                           ;../hal/hal_src/Timers.c: 59:     PIE3bits.TMR0IE = 1;;
 24996  00B68E  0139               	movlb	57	; force () banked
 24997  00B690  8F93               	bsf	147,7,b	;volatile
 24998                           
 24999                           ; BSR set to: 57
 25000                           ;../hal/hal_src/Timers.c: 60:     return tval;
 25001  00B692  C073  F071         	movff	get_timer0base@tval,?_get_timer0base
 25002  00B696  C074  F072         	movff	get_timer0base@tval+1,?_get_timer0base+1
 25003                           
 25004                           ; BSR set to: 57
 25005  00B69A  0012               	return		;funcret
 25006  00B69C                     __end_of_get_timer0base:
 25007                           	callstack 0
 25008                           
 25009 ;; *************** function _PHY_DataConf *****************
 25010 ;; Defined at:
 25011 ;;		line 286 in file "../nwk/nwk_src/nwkTx.c"
 25012 ;; Parameters:    Size  Location     Type
 25013 ;;  status          1    wreg     unsigned char 
 25014 ;; Auto vars:     Size  Location     Type
 25015 ;;  status          1   20[BANK0 ] unsigned char 
 25016 ;; Return value:  Size  Location     Type
 25017 ;;                  1    wreg      void 
 25018 ;; Registers used:
 25019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25020 ;; Tracked objects:
 25021 ;;		On entry : 3F/0
 25022 ;;		On exit  : 3F/2
 25023 ;;		Unchanged: 0/0
 25024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25026 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25028 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25029 ;;Total ram usage:        1 bytes
 25030 ;; Hardware stack levels used:    1
 25031 ;; Hardware stack levels required when called:   12
 25032 ;; This function calls:
 25033 ;;		_nwkTxConvertPhyStatus
 25034 ;; This function is called by:
 25035 ;;		_radio_engine
 25036 ;; This function uses a non-reentrant model
 25037 ;;
 25038                           
 25039                           	psect	text130
 25040  00AFD8                     __ptext130:
 25041                           	callstack 0
 25042  00AFD8                     _PHY_DataConf:
 25043                           	callstack 15
 25044                           
 25045                           ; BSR set to: 57
 25046                           ;incstack = 0
 25047                           ;PHY_DataConf@status stored from wreg
 25048  00AFD8  0100               	movlb	0	; force () banked
 25049  00AFDA  6F74               	movwf	PHY_DataConf@status& (0+255),b
 25050                           
 25051                           ;../nwk/nwk_src/nwkTx.c: 286: void PHY_DataConf(uint8_t status);../nwk/nwk_src/nwkTx.c: 
      +                          287: {;../nwk/nwk_src/nwkTx.c: 288:   nwkTxPhyActiveFrame->tx.status = nwkTxConvertPhySt
      +                          atus(status);
 25052  00AFDC  0102               	movlb	2	; force () banked
 25053  00AFDE  EE20 F084          	lfsr	2,132
 25054  00AFE2  513E               	movf	_nwkTxPhyActiveFrame& (0+255),w,b
 25055  00AFE4  26D9               	addwf	fsr2l,f,c
 25056  00AFE6  513F               	movf	(_nwkTxPhyActiveFrame+1)& (0+255),w,b
 25057  00AFE8  22DA               	addwfc	fsr2h,f,c
 25058  00AFEA  0100               	movlb	0	; force () banked
 25059  00AFEC  5174               	movf	PHY_DataConf@status& (0+255),w,b
 25060  00AFEE  EC4C  F058         	call	_nwkTxConvertPhyStatus
 25061  00AFF2  6EDF               	movwf	indf2,c
 25062                           
 25063                           ; BSR set to: 0
 25064                           ;../nwk/nwk_src/nwkTx.c: 289:   nwkTxPhyActiveFrame->state = NWK_TX_STATE_SENT;
 25065  00AFF4  0060  F8FB  FFD9   	movff	_nwkTxPhyActiveFrame,fsr2l
 25066  00AFFA  0060  F8FF  FFDA   	movff	_nwkTxPhyActiveFrame+1,fsr2h
 25067  00B000  0E15               	movlw	21
 25068  00B002  6EDF               	movwf	indf2,c
 25069                           
 25070                           ; BSR set to: 0
 25071                           ;../nwk/nwk_src/nwkTx.c: 290:   nwkTxPhyActiveFrame = (0);
 25072  00B004  0E00               	movlw	0
 25073  00B006  0102               	movlb	2	; force () banked
 25074  00B008  6F3E               	movwf	_nwkTxPhyActiveFrame& (0+255),b
 25075  00B00A  0E00               	movlw	0
 25076  00B00C  6F3F               	movwf	(_nwkTxPhyActiveFrame+1)& (0+255),b
 25077                           
 25078                           ; BSR set to: 2
 25079                           ;../nwk/nwk_src/nwkTx.c: 291:   nwkIb.lock--;
 25080  00B00E  0102               	movlb	2	; force () banked
 25081  00B010  0726               	decf	(_nwkIb+38)& (0+255),f,b
 25082  00B012  A0D8               	btfss	status,0,c
 25083  00B014  0727               	decf	(_nwkIb+39)& (0+255),f,b
 25084                           
 25085                           ; BSR set to: 2
 25086  00B016  0012               	return		;funcret
 25087  00B018                     __end_of_PHY_DataConf:
 25088                           	callstack 0
 25089                           
 25090 ;; *************** function _nwkTxConvertPhyStatus *****************
 25091 ;; Defined at:
 25092 ;;		line 266 in file "../nwk/nwk_src/nwkTx.c"
 25093 ;; Parameters:    Size  Location     Type
 25094 ;;  status          1    wreg     unsigned char 
 25095 ;; Auto vars:     Size  Location     Type
 25096 ;;  status          1   19[BANK0 ] unsigned char 
 25097 ;; Return value:  Size  Location     Type
 25098 ;;                  1    wreg      unsigned char 
 25099 ;; Registers used:
 25100 ;;		wreg, status,2, status,0
 25101 ;; Tracked objects:
 25102 ;;		On entry : 3F/0
 25103 ;;		On exit  : 3F/0
 25104 ;;		Unchanged: 0/0
 25105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25107 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25108 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25109 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25110 ;;Total ram usage:        3 bytes
 25111 ;; Hardware stack levels used:    1
 25112 ;; Hardware stack levels required when called:   11
 25113 ;; This function calls:
 25114 ;;		Nothing
 25115 ;; This function is called by:
 25116 ;;		_PHY_DataConf
 25117 ;; This function uses a non-reentrant model
 25118 ;;
 25119                           
 25120                           	psect	text131
 25121  00B098                     __ptext131:
 25122                           	callstack 0
 25123  00B098                     _nwkTxConvertPhyStatus:
 25124                           	callstack 15
 25125                           
 25126                           ; BSR set to: 2
 25127                           ;incstack = 0
 25128                           ;nwkTxConvertPhyStatus@status stored from wreg
 25129  00B098  0100               	movlb	0	; force () banked
 25130  00B09A  6F73               	movwf	nwkTxConvertPhyStatus@status& (0+255),b
 25131                           
 25132                           ;../nwk/nwk_src/nwkTx.c: 266: static uint8_t nwkTxConvertPhyStatus(uint8_t status);../nw
      +                          k/nwk_src/nwkTx.c: 267: {;../nwk/nwk_src/nwkTx.c: 268:   switch (status)
 25133  00B09C  D008               	goto	l13846
 25134  00B09E                     l13828:
 25135                           
 25136                           ; BSR set to: 0
 25137                           ;../nwk/nwk_src/nwkTx.c: 271:       return NWK_SUCCESS_STATUS;
 25138  00B09E  0E00               	movlw	0
 25139  00B0A0  0012               	return	
 25140  00B0A2                     l13832:
 25141                           
 25142                           ; BSR set to: 0
 25143                           ;../nwk/nwk_src/nwkTx.c: 274:       return NWK_PHY_CHANNEL_ACCESS_FAILURE_STATUS;
 25144  00B0A2  0E20               	movlw	32
 25145  00B0A4  0012               	return	
 25146  00B0A6                     l13836:
 25147                           
 25148                           ; BSR set to: 0
 25149                           ;../nwk/nwk_src/nwkTx.c: 277:       return NWK_PHY_NO_ACK_STATUS;
 25150  00B0A6  0E21               	movlw	33
 25151  00B0A8  0012               	return	
 25152  00B0AA                     l13840:
 25153                           
 25154                           ; BSR set to: 0
 25155                           ;../nwk/nwk_src/nwkTx.c: 280:       return NWK_ERROR_STATUS;
 25156  00B0AA  0E01               	movlw	1
 25157  00B0AC  0012               	return	
 25158  00B0AE                     l13846:
 25159  00B0AE  0100               	movlb	0	; force () banked
 25160  00B0B0  5173               	movf	nwkTxConvertPhyStatus@status& (0+255),w,b
 25161  00B0B2  0100               	movlb	0	; force () banked
 25162  00B0B4  6F71               	movwf	??_nwkTxConvertPhyStatus& (0+255),b
 25163  00B0B6  6B72               	clrf	(??_nwkTxConvertPhyStatus+1)& (0+255),b
 25164                           
 25165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25166                           ; Switch size 1, requested type "simple"
 25167                           ; Number of cases is 1, Range of values is 0 to 0
 25168                           ; switch strategies available:
 25169                           ; Name         Instructions Cycles
 25170                           ; simple_byte            4     3 (average)
 25171                           ;	Chosen strategy is simple_byte
 25172  00B0B8  5172               	movf	(??_nwkTxConvertPhyStatus+1)& (0+255),w,b
 25173  00B0BA  0A00               	xorlw	0	; case 0
 25174  00B0BC  A4D8               	btfss	status,2,c
 25175  00B0BE  D7F5               	goto	l13840
 25176                           
 25177                           ; BSR set to: 0
 25178                           ; Switch size 1, requested type "simple"
 25179                           ; Number of cases is 3, Range of values is 0 to 2
 25180                           ; switch strategies available:
 25181                           ; Name         Instructions Cycles
 25182                           ; simple_byte           10     6 (average)
 25183                           ;	Chosen strategy is simple_byte
 25184  00B0C0  5171               	movf	??_nwkTxConvertPhyStatus& (0+255),w,b
 25185  00B0C2  0A00               	xorlw	0	; case 0
 25186  00B0C4  B4D8               	btfsc	status,2,c
 25187  00B0C6  D7EB               	goto	l13828
 25188  00B0C8  0A01               	xorlw	1	; case 1
 25189  00B0CA  B4D8               	btfsc	status,2,c
 25190  00B0CC  D7EA               	goto	l13832
 25191  00B0CE  0A03               	xorlw	3	; case 2
 25192  00B0D0  B4D8               	btfsc	status,2,c
 25193  00B0D2  D7E9               	goto	l13836
 25194  00B0D4  D7EA               	goto	l13840
 25195  00B0D6                     __end_of_nwkTxConvertPhyStatus:
 25196                           	callstack 0
 25197                           
 25198 ;; *************** function _DIO0_Receive_ISR *****************
 25199 ;; Defined at:
 25200 ;;		line 625 in file "../phy/sx1276/sx1276_src/sx1276.c"
 25201 ;; Parameters:    Size  Location     Type
 25202 ;;		None
 25203 ;; Auto vars:     Size  Location     Type
 25204 ;;  ind             5   86[BANK0 ] struct PHY_DataInd_t
 25205 ;;  packetLength    1   84[BANK0 ] unsigned char 
 25206 ;;  irqFlags        1   85[BANK0 ] unsigned char 
 25207 ;; Return value:  Size  Location     Type
 25208 ;;                  1    wreg      void 
 25209 ;; Registers used:
 25210 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25211 ;; Tracked objects:
 25212 ;;		On entry : 0/0
 25213 ;;		On exit  : 3F/0
 25214 ;;		Unchanged: 0/0
 25215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25217 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25218 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25219 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25220 ;;Total ram usage:        8 bytes
 25221 ;; Hardware stack levels used:    1
 25222 ;; Hardware stack levels required when called:   17
 25223 ;; This function calls:
 25224 ;;		_PHY_DataInd
 25225 ;;		_SX1276Read
 25226 ;;		_SX1276ReadBuffer
 25227 ;;		_SX1276Write
 25228 ;;		_get_lqi
 25229 ;;		_get_rssi
 25230 ;;		_queue_rx_led_event
 25231 ;;		_receive
 25232 ;; This function is called by:
 25233 ;;		_radio_engine
 25234 ;; This function uses a non-reentrant model
 25235 ;;
 25236                           
 25237                           	psect	text132
 25238  0081F8                     __ptext132:
 25239                           	callstack 0
 25240  0081F8                     _DIO0_Receive_ISR:
 25241                           	callstack 10
 25242                           
 25243                           ;../phy/sx1276/sx1276_src/sx1276.c: 627:     uint8_t irqFlags = SX1276Read(0x12);
 25244                           
 25245                           ; BSR set to: 0
 25246                           ;incstack = 0
 25247  0081F8  0E12               	movlw	18
 25248  0081FA  EC55  F05C         	call	_SX1276Read
 25249  0081FE  0100               	movlb	0	; force () banked
 25250  008200  6FB5               	movwf	DIO0_Receive_ISR@irqFlags& (0+255),b
 25251                           
 25252                           ;../phy/sx1276/sx1276_src/sx1276.c: 630:     SX1276Write(0x12, irqFlags);
 25253  008202  C0B5  F07E         	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
 25254  008206  0E12               	movlw	18
 25255  008208  ECEA  F05C         	call	_SX1276Write
 25256                           
 25257                           ;../phy/sx1276/sx1276_src/sx1276.c: 631:     SX1276Write(0x12, irqFlags);
 25258  00820C  C0B5  F07E         	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
 25259  008210  0E12               	movlw	18
 25260  008212  ECEA  F05C         	call	_SX1276Write
 25261                           
 25262                           ; BSR set to: 0
 25263                           ;../phy/sx1276/sx1276_src/sx1276.c: 633:     if (((irqFlags & 0x20) == 0) && (irqFlags &
      +                           0x40) && ((irqFlags & 0x80) == 0))
 25264  008216  0100               	movlb	0	; force () banked
 25265  008218  BBB5               	btfsc	DIO0_Receive_ISR@irqFlags& (0+255),5,b
 25266  00821A  D056               	goto	l19086
 25267                           
 25268                           ; BSR set to: 0
 25269  00821C  0100               	movlb	0	; force () banked
 25270  00821E  ADB5               	btfss	DIO0_Receive_ISR@irqFlags& (0+255),6,b
 25271  008220  D053               	goto	l19086
 25272                           
 25273                           ; BSR set to: 0
 25274  008222  0100               	movlb	0	; force () banked
 25275  008224  BFB5               	btfsc	DIO0_Receive_ISR@irqFlags& (0+255),7,b
 25276  008226  D050               	goto	l19086
 25277                           
 25278                           ; BSR set to: 0
 25279                           ;../phy/sx1276/sx1276_src/sx1276.c: 634:     {;../phy/sx1276/sx1276_src/sx1276.c: 635:  
      +                                 PHY_DataInd_t ind;;../phy/sx1276/sx1276_src/sx1276.c: 636:         uint8_t packet
      +                          Length;;../phy/sx1276/sx1276_src/sx1276.c: 639:         packetLength = SX1276Read(0x13);
 25280  008228  0E13               	movlw	19
 25281  00822A  EC55  F05C         	call	_SX1276Read
 25282  00822E  0100               	movlb	0	; force () banked
 25283  008230  6FB4               	movwf	DIO0_Receive_ISR@packetLength& (0+255),b
 25284                           
 25285                           ; BSR set to: 0
 25286                           ;../phy/sx1276/sx1276_src/sx1276.c: 640:         if(packetLength > sizeof(phyRxBuffer)){
 25287  008232  0E80               	movlw	128
 25288  008234  0100               	movlb	0	; force () banked
 25289  008236  65B4               	cpfsgt	DIO0_Receive_ISR@packetLength& (0+255),b
 25290  008238  D003               	goto	l19066
 25291                           
 25292                           ; BSR set to: 0
 25293                           ;../phy/sx1276/sx1276_src/sx1276.c: 641:             packetLength = sizeof(phyRxBuffer);
 25294  00823A  0E80               	movlw	128
 25295  00823C  0100               	movlb	0	; force () banked
 25296  00823E  6FB4               	movwf	DIO0_Receive_ISR@packetLength& (0+255),b
 25297  008240                     l19066:
 25298                           
 25299                           ; BSR set to: 0
 25300                           ;../phy/sx1276/sx1276_src/sx1276.c: 645:         SX1276Write(0x0D, SX1276Read(0x10));
 25301  008240  0E10               	movlw	16
 25302  008242  EC55  F05C         	call	_SX1276Read
 25303  008246  0100               	movlb	0	; force () banked
 25304  008248  6F7E               	movwf	SX1276Write@data& (0+255),b
 25305  00824A  0E0D               	movlw	13
 25306  00824C  ECEA  F05C         	call	_SX1276Write
 25307                           
 25308                           ; BSR set to: 0
 25309                           ;../phy/sx1276/sx1276_src/sx1276.c: 646:         SX1276ReadBuffer(0x00, &phyRxBuffer, pa
      +                          cketLength);
 25310  008250  0E00               	movlw	low _phyRxBuffer
 25311  008252  0100               	movlb	0	; force () banked
 25312  008254  6F78               	movwf	SX1276ReadBuffer@buffer& (0+255),b
 25313  008256  0E07               	movlw	high _phyRxBuffer
 25314  008258  6F79               	movwf	(SX1276ReadBuffer@buffer+1)& (0+255),b
 25315  00825A  C0B4  F07A         	movff	DIO0_Receive_ISR@packetLength,SX1276ReadBuffer@size
 25316  00825E  0E00               	movlw	0
 25317  008260  EC8C  F05B         	call	_SX1276ReadBuffer
 25318                           
 25319                           ; BSR set to: 0
 25320                           ;../phy/sx1276/sx1276_src/sx1276.c: 648:         SNR = SX1276Read(0x19);
 25321  008264  0E19               	movlw	25
 25322  008266  EC55  F05C         	call	_SX1276Read
 25323  00826A  0102               	movlb	2	; force () banked
 25324  00826C  6F5F               	movwf	_SNR& (0+255),b
 25325                           
 25326                           ; BSR set to: 2
 25327                           ;../phy/sx1276/sx1276_src/sx1276.c: 649:         packetRSSI = SX1276Read(0x1A);
 25328  00826E  0E1A               	movlw	26
 25329  008270  EC55  F05C         	call	_SX1276Read
 25330  008274  0101               	movlb	1	; force () banked
 25331  008276  6FEB               	movwf	_packetRSSI& (0+255),b
 25332                           
 25333                           ; BSR set to: 1
 25334                           ;../phy/sx1276/sx1276_src/sx1276.c: 650:         ind.data = phyRxBuffer;
 25335  008278  0E00               	movlw	low _phyRxBuffer
 25336  00827A  0100               	movlb	0	; force () banked
 25337  00827C  6FB6               	movwf	DIO0_Receive_ISR@ind& (0+255),b
 25338  00827E  0E07               	movlw	high _phyRxBuffer
 25339  008280  6FB7               	movwf	(DIO0_Receive_ISR@ind+1)& (0+255),b
 25340                           
 25341                           ; BSR set to: 0
 25342                           ;../phy/sx1276/sx1276_src/sx1276.c: 651:         ind.size = packetLength;
 25343  008282  C0B4  F0B8         	movff	DIO0_Receive_ISR@packetLength,DIO0_Receive_ISR@ind+2
 25344                           
 25345                           ; BSR set to: 0
 25346                           ;../phy/sx1276/sx1276_src/sx1276.c: 652:         ind.rssi = get_rssi(packetRSSI);
 25347  008286  0101               	movlb	1	; force () banked
 25348  008288  51EB               	movf	_packetRSSI& (0+255),w,b
 25349  00828A  ECC4  F059         	call	_get_rssi
 25350  00828E  0100               	movlb	0	; force () banked
 25351  008290  6FBA               	movwf	(DIO0_Receive_ISR@ind+4)& (0+255),b
 25352                           
 25353                           ; BSR set to: 0
 25354                           ;../phy/sx1276/sx1276_src/sx1276.c: 653:         ind.lqi = get_lqi(ind.rssi);
 25355  008292  0100               	movlb	0	; force () banked
 25356  008294  51BA               	movf	(DIO0_Receive_ISR@ind+4)& (0+255),w,b
 25357  008296  EC67  F04B         	call	_get_lqi
 25358  00829A  0100               	movlb	0	; force () banked
 25359  00829C  6FB9               	movwf	(DIO0_Receive_ISR@ind+3)& (0+255),b
 25360                           
 25361                           ; BSR set to: 0
 25362                           ;../phy/sx1276/sx1276_src/sx1276.c: 654:         if(ind.rssi > rssi_debug){
 25363  00829E  0101               	movlb	1	; force () banked
 25364  0082A0  51FE               	movf	_rssi_debug& (0+255),w,b
 25365  0082A2  0A80               	xorlw	128
 25366  0082A4  0100               	movlb	0	; force () banked
 25367  0082A6  6FB3               	movwf	??_DIO0_Receive_ISR& (0+255),b
 25368  0082A8  0100               	movlb	0	; force () banked
 25369  0082AA  51BA               	movf	(DIO0_Receive_ISR@ind+4)& (0+255),w,b
 25370  0082AC  0A80               	xorlw	128
 25371  0082AE  0100               	movlb	0	; force () banked
 25372  0082B0  5DB3               	subwf	??_DIO0_Receive_ISR& (0+255),w,b
 25373  0082B2  B0D8               	btfsc	status,0,c
 25374  0082B4  D009               	goto	l19086
 25375                           
 25376                           ; BSR set to: 0
 25377                           ;../phy/sx1276/sx1276_src/sx1276.c: 655:             PHY_DataInd(&ind);
 25378  0082B6  0EB6               	movlw	low DIO0_Receive_ISR@ind
 25379  0082B8  0100               	movlb	0	; force () banked
 25380  0082BA  6F84               	movwf	PHY_DataInd@ind& (0+255),b
 25381  0082BC  0E00               	movlw	high DIO0_Receive_ISR@ind
 25382  0082BE  6F85               	movwf	(PHY_DataInd@ind+1)& (0+255),b
 25383  0082C0  EC9C  F02D         	call	_PHY_DataInd	;wreg free
 25384                           
 25385                           ;../phy/sx1276/sx1276_src/sx1276.c: 657:             queue_rx_led_event();
 25386  0082C4  EC8B  F04C         	call	_queue_rx_led_event	;wreg free
 25387  0082C8                     l19086:
 25388                           
 25389                           ; BSR set to: 0
 25390                           ;../phy/sx1276/sx1276_src/sx1276.c: 661:     receive(0);
 25391  0082C8  0E00               	movlw	0
 25392  0082CA  ECBF  F056         	call	_receive
 25393                           
 25394                           ; BSR set to: 0
 25395  0082CE  0012               	return		;funcret
 25396  0082D0                     __end_of_DIO0_Receive_ISR:
 25397                           	callstack 0
 25398                           
 25399 ;; *************** function _receive *****************
 25400 ;; Defined at:
 25401 ;;		line 401 in file "../phy/sx1276/sx1276_src/sx1276.c"
 25402 ;; Parameters:    Size  Location     Type
 25403 ;;  size            1    wreg     unsigned char 
 25404 ;; Auto vars:     Size  Location     Type
 25405 ;;  size            1   32[BANK0 ] unsigned char 
 25406 ;; Return value:  Size  Location     Type
 25407 ;;                  1    wreg      void 
 25408 ;; Registers used:
 25409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25410 ;; Tracked objects:
 25411 ;;		On entry : 3E/1
 25412 ;;		On exit  : 3F/0
 25413 ;;		Unchanged: 0/0
 25414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25416 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25418 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25419 ;;Total ram usage:        1 bytes
 25420 ;; Hardware stack levels used:    1
 25421 ;; Hardware stack levels required when called:   16
 25422 ;; This function calls:
 25423 ;;		_SX1276Write
 25424 ;;		_explicitHeaderMode
 25425 ;;		_implicitHeaderMode
 25426 ;; This function is called by:
 25427 ;;		_initRadio
 25428 ;;		_DIO0_Receive_ISR
 25429 ;;		_radio_engine
 25430 ;; This function uses a non-reentrant model
 25431 ;;
 25432                           
 25433                           	psect	text133
 25434  00AD7E                     __ptext133:
 25435                           	callstack 0
 25436  00AD7E                     _receive:
 25437                           	callstack 11
 25438                           
 25439                           ; BSR set to: 0
 25440                           ;incstack = 0
 25441                           ;receive@size stored from wreg
 25442  00AD7E  0100               	movlb	0	; force () banked
 25443  00AD80  6F80               	movwf	receive@size& (0+255),b
 25444                           
 25445                           ;../phy/sx1276/sx1276_src/sx1276.c: 401: void receive(uint8_t size);../phy/sx1276/sx1276
      +                          _src/sx1276.c: 402: {;../phy/sx1276/sx1276_src/sx1276.c: 403:   if (size > 0) {
 25446  00AD82  0100               	movlb	0	; force () banked
 25447  00AD84  5180               	movf	receive@size& (0+255),w,b
 25448  00AD86  B4D8               	btfsc	status,2,c
 25449  00AD88  D008               	goto	l13858
 25450                           
 25451                           ; BSR set to: 0
 25452                           ;../phy/sx1276/sx1276_src/sx1276.c: 404:     implicitHeaderMode();
 25453  00AD8A  EC3E  F05D         	call	_implicitHeaderMode	;wreg free
 25454                           
 25455                           ;../phy/sx1276/sx1276_src/sx1276.c: 406:     SX1276Write(0x22, size & 0xff);
 25456  00AD8E  C080  F07E         	movff	receive@size,SX1276Write@data
 25457  00AD92  0E22               	movlw	34
 25458  00AD94  ECEA  F05C         	call	_SX1276Write
 25459                           
 25460                           ;../phy/sx1276/sx1276_src/sx1276.c: 407:   } else {
 25461  00AD98  D002               	goto	l3583
 25462  00AD9A                     l13858:
 25463                           
 25464                           ; BSR set to: 0
 25465                           ;../phy/sx1276/sx1276_src/sx1276.c: 408:     explicitHeaderMode();
 25466  00AD9A  EC4B  F05D         	call	_explicitHeaderMode	;wreg free
 25467  00AD9E                     l3583:
 25468                           
 25469                           ; BSR set to: 0
 25470                           ;../phy/sx1276/sx1276_src/sx1276.c: 411:   SX1276Write(0x0D, 0);
 25471  00AD9E  0E00               	movlw	0
 25472  00ADA0  0100               	movlb	0	; force () banked
 25473  00ADA2  6F7E               	movwf	SX1276Write@data& (0+255),b
 25474  00ADA4  0E0D               	movlw	13
 25475  00ADA6  ECEA  F05C         	call	_SX1276Write
 25476                           
 25477                           ;../phy/sx1276/sx1276_src/sx1276.c: 412:   SX1276Write(0x12, 0xFF);
 25478  00ADAA  0EFF               	movlw	255
 25479  00ADAC  0100               	movlb	0	; force () banked
 25480  00ADAE  6F7E               	movwf	SX1276Write@data& (0+255),b
 25481  00ADB0  0E12               	movlw	18
 25482  00ADB2  ECEA  F05C         	call	_SX1276Write
 25483                           
 25484                           ;../phy/sx1276/sx1276_src/sx1276.c: 413:   SX1276Write(0x01,0x80 | 0x05);
 25485  00ADB6  0E85               	movlw	133
 25486  00ADB8  0100               	movlb	0	; force () banked
 25487  00ADBA  6F7E               	movwf	SX1276Write@data& (0+255),b
 25488  00ADBC  0E01               	movlw	1
 25489  00ADBE  ECEA  F05C         	call	_SX1276Write
 25490                           
 25491                           ; BSR set to: 0
 25492  00ADC2  0012               	return		;funcret
 25493  00ADC4                     __end_of_receive:
 25494                           	callstack 0
 25495                           
 25496 ;; *************** function _implicitHeaderMode *****************
 25497 ;; Defined at:
 25498 ;;		line 387 in file "../phy/sx1276/sx1276_src/sx1276.c"
 25499 ;; Parameters:    Size  Location     Type
 25500 ;;		None
 25501 ;; Auto vars:     Size  Location     Type
 25502 ;;		None
 25503 ;; Return value:  Size  Location     Type
 25504 ;;                  1    wreg      void 
 25505 ;; Registers used:
 25506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25507 ;; Tracked objects:
 25508 ;;		On entry : 3F/0
 25509 ;;		On exit  : 3F/0
 25510 ;;		Unchanged: 0/0
 25511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25516 ;;Total ram usage:        0 bytes
 25517 ;; Hardware stack levels used:    1
 25518 ;; Hardware stack levels required when called:   15
 25519 ;; This function calls:
 25520 ;;		_SX1276Read
 25521 ;;		_SX1276Write
 25522 ;; This function is called by:
 25523 ;;		_receive
 25524 ;; This function uses a non-reentrant model
 25525 ;;
 25526                           
 25527                           	psect	text134
 25528  00BA7C                     __ptext134:
 25529                           	callstack 0
 25530  00BA7C                     _implicitHeaderMode:
 25531                           	callstack 11
 25532                           
 25533                           ;../phy/sx1276/sx1276_src/sx1276.c: 389:   _implicitHeaderMode = 1;
 25534                           
 25535                           ; BSR set to: 0
 25536                           ;incstack = 0
 25537  00BA7C  0E01               	movlw	1
 25538  00BA7E  0102               	movlb	2	; force () banked
 25539  00BA80  6F62               	movwf	__implicitHeaderMode& (0+255),b
 25540                           
 25541                           ; BSR set to: 2
 25542                           ;../phy/sx1276/sx1276_src/sx1276.c: 391:   SX1276Write(0x1D, SX1276Read(0x1D) | 0x01);
 25543  00BA82  0E1D               	movlw	29
 25544  00BA84  EC55  F05C         	call	_SX1276Read
 25545  00BA88  0901               	iorlw	1
 25546  00BA8A  0100               	movlb	0	; force () banked
 25547  00BA8C  6F7E               	movwf	SX1276Write@data& (0+255),b
 25548  00BA8E  0E1D               	movlw	29
 25549  00BA90  ECEA  F05C         	call	_SX1276Write
 25550                           
 25551                           ; BSR set to: 0
 25552  00BA94  0012               	return		;funcret
 25553  00BA96                     __end_of_implicitHeaderMode:
 25554                           	callstack 0
 25555                           
 25556 ;; *************** function _explicitHeaderMode *****************
 25557 ;; Defined at:
 25558 ;;		line 373 in file "../phy/sx1276/sx1276_src/sx1276.c"
 25559 ;; Parameters:    Size  Location     Type
 25560 ;;		None
 25561 ;; Auto vars:     Size  Location     Type
 25562 ;;		None
 25563 ;; Return value:  Size  Location     Type
 25564 ;;                  1    wreg      void 
 25565 ;; Registers used:
 25566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25567 ;; Tracked objects:
 25568 ;;		On entry : 3F/0
 25569 ;;		On exit  : 3F/0
 25570 ;;		Unchanged: 0/0
 25571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25576 ;;Total ram usage:        0 bytes
 25577 ;; Hardware stack levels used:    1
 25578 ;; Hardware stack levels required when called:   15
 25579 ;; This function calls:
 25580 ;;		_SX1276Read
 25581 ;;		_SX1276Write
 25582 ;; This function is called by:
 25583 ;;		_receive
 25584 ;;		_initRadio
 25585 ;;		_sx1276_send
 25586 ;; This function uses a non-reentrant model
 25587 ;;
 25588                           
 25589                           	psect	text135
 25590  00BA96                     __ptext135:
 25591                           	callstack 0
 25592  00BA96                     _explicitHeaderMode:
 25593                           	callstack 11
 25594                           
 25595                           ;../phy/sx1276/sx1276_src/sx1276.c: 375:   _implicitHeaderMode = 0;
 25596                           
 25597                           ; BSR set to: 0
 25598                           ;incstack = 0
 25599  00BA96  0E00               	movlw	0
 25600  00BA98  0102               	movlb	2	; force () banked
 25601  00BA9A  6F62               	movwf	__implicitHeaderMode& (0+255),b
 25602                           
 25603                           ; BSR set to: 2
 25604                           ;../phy/sx1276/sx1276_src/sx1276.c: 377:   SX1276Write(0x1D, SX1276Read(0x1D) & 0xfe);
 25605  00BA9C  0E1D               	movlw	29
 25606  00BA9E  EC55  F05C         	call	_SX1276Read
 25607  00BAA2  0BFE               	andlw	254
 25608  00BAA4  0100               	movlb	0	; force () banked
 25609  00BAA6  6F7E               	movwf	SX1276Write@data& (0+255),b
 25610  00BAA8  0E1D               	movlw	29
 25611  00BAAA  ECEA  F05C         	call	_SX1276Write
 25612                           
 25613                           ; BSR set to: 0
 25614  00BAAE  0012               	return		;funcret
 25615  00BAB0                     __end_of_explicitHeaderMode:
 25616                           	callstack 0
 25617                           
 25618 ;; *************** function _SX1276Write *****************
 25619 ;; Defined at:
 25620 ;;		line 47 in file "../phy/sx1276/sx1276_src/sx1276.c"
 25621 ;; Parameters:    Size  Location     Type
 25622 ;;  addr            1    wreg     unsigned char 
 25623 ;;  data            1   30[BANK0 ] unsigned char 
 25624 ;; Auto vars:     Size  Location     Type
 25625 ;;  addr            1   31[BANK0 ] unsigned char 
 25626 ;; Return value:  Size  Location     Type
 25627 ;;                  1    wreg      void 
 25628 ;; Registers used:
 25629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25630 ;; Tracked objects:
 25631 ;;		On entry : 0/0
 25632 ;;		On exit  : 3F/0
 25633 ;;		Unchanged: 0/0
 25634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25635 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25636 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25638 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25639 ;;Total ram usage:        2 bytes
 25640 ;; Hardware stack levels used:    1
 25641 ;; Hardware stack levels required when called:   14
 25642 ;; This function calls:
 25643 ;;		_SX1276WriteBuffer
 25644 ;; This function is called by:
 25645 ;;		_idle
 25646 ;;		_setTxPower
 25647 ;;		_setFrequency
 25648 ;;		_setSpreadingFactor
 25649 ;;		_setSignalBandwidth
 25650 ;;		_setCodingRate4
 25651 ;;		_setPreambleLength
 25652 ;;		_setSyncWord
 25653 ;;		_enableCrc
 25654 ;;		_explicitHeaderMode
 25655 ;;		_implicitHeaderMode
 25656 ;;		_receive
 25657 ;;		_initRadio
 25658 ;;		_cad
 25659 ;;		_start_radio_cad
 25660 ;;		_DIO0_Receive_ISR
 25661 ;;		_sx1276_send
 25662 ;; This function uses a non-reentrant model
 25663 ;;
 25664                           
 25665                           	psect	text136
 25666  00B9D4                     __ptext136:
 25667                           	callstack 0
 25668  00B9D4                     _SX1276Write:
 25669                           	callstack 11
 25670                           
 25671                           ; BSR set to: 0
 25672                           ;incstack = 0
 25673                           ;SX1276Write@addr stored from wreg
 25674  00B9D4  0100               	movlb	0	; force () banked
 25675  00B9D6  6F7F               	movwf	SX1276Write@addr& (0+255),b
 25676                           
 25677                           ;../phy/sx1276/sx1276_src/sx1276.c: 47: static void SX1276Write( uint8_t addr, uint8_t d
      +                          ata );../phy/sx1276/sx1276_src/sx1276.c: 48: {;../phy/sx1276/sx1276_src/sx1276.c: 49:   
      +                            SX1276WriteBuffer( addr, &data, 1 );
 25678  00B9D8  0E7E               	movlw	low SX1276Write@data
 25679  00B9DA  0100               	movlb	0	; force () banked
 25680  00B9DC  6F78               	movwf	SX1276WriteBuffer@buffer& (0+255),b
 25681  00B9DE  0E00               	movlw	high SX1276Write@data
 25682  00B9E0  6F79               	movwf	(SX1276WriteBuffer@buffer+1)& (0+255),b
 25683  00B9E2  0E01               	movlw	1
 25684  00B9E4  0100               	movlb	0	; force () banked
 25685  00B9E6  6F7A               	movwf	SX1276WriteBuffer@size& (0+255),b
 25686  00B9E8  0100               	movlb	0	; force () banked
 25687  00B9EA  517F               	movf	SX1276Write@addr& (0+255),w,b
 25688  00B9EC  EC78  F05B         	call	_SX1276WriteBuffer
 25689                           
 25690                           ; BSR set to: 0
 25691  00B9F0  0012               	return		;funcret
 25692  00B9F2                     __end_of_SX1276Write:
 25693                           	callstack 0
 25694                           
 25695 ;; *************** function _SX1276WriteBuffer *****************
 25696 ;; Defined at:
 25697 ;;		line 76 in file "../phy/sx1276/sx1276_src/sx1276.c"
 25698 ;; Parameters:    Size  Location     Type
 25699 ;;  addr            1    wreg     unsigned char 
 25700 ;;  buffer          2   24[BANK0 ] PTR unsigned char 
 25701 ;;		 -> SX1276Write@data(1), 
 25702 ;;  size            1   26[BANK0 ] unsigned char 
 25703 ;; Auto vars:     Size  Location     Type
 25704 ;;  addr            1   27[BANK0 ] unsigned char 
 25705 ;; Return value:  Size  Location     Type
 25706 ;;                  1    wreg      void 
 25707 ;; Registers used:
 25708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25709 ;; Tracked objects:
 25710 ;;		On entry : 3F/0
 25711 ;;		On exit  : 3F/0
 25712 ;;		Unchanged: 0/0
 25713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25714 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25715 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25717 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25718 ;;Total ram usage:        4 bytes
 25719 ;; Hardware stack levels used:    1
 25720 ;; Hardware stack levels required when called:   13
 25721 ;; This function calls:
 25722 ;;		_SPI1_ExchangeByte
 25723 ;;		_SPI1_WriteBlock
 25724 ;; This function is called by:
 25725 ;;		_SX1276Write
 25726 ;; This function uses a non-reentrant model
 25727 ;;
 25728                           
 25729                           	psect	text137
 25730  00B6F0                     __ptext137:
 25731                           	callstack 0
 25732  00B6F0                     _SX1276WriteBuffer:
 25733                           	callstack 11
 25734                           
 25735                           ; BSR set to: 0
 25736                           ;incstack = 0
 25737                           ;SX1276WriteBuffer@addr stored from wreg
 25738  00B6F0  0100               	movlb	0	; force () banked
 25739  00B6F2  6F7B               	movwf	SX1276WriteBuffer@addr& (0+255),b
 25740                           
 25741                           ;../phy/sx1276/sx1276_src/sx1276.c: 76: static void SX1276WriteBuffer( uint8_t addr, uin
      +                          t8_t *buffer, uint8_t size );../phy/sx1276/sx1276_src/sx1276.c: 77: {;../phy/sx1276/sx12
      +                          76_src/sx1276.c: 79:     do { LATCbits.LATC6 = 0; } while(0);
 25742  00B6F4  9CBC               	bcf	188,6,c	;volatile
 25743                           
 25744                           ;../phy/sx1276/sx1276_src/sx1276.c: 80:     SPI1_ExchangeByte(addr | 0x80);
 25745  00B6F6  0100               	movlb	0	; force () banked
 25746  00B6F8  517B               	movf	SX1276WriteBuffer@addr& (0+255),w,b
 25747  00B6FA  0980               	iorlw	128
 25748  00B6FC  EC15  F05D         	call	_SPI1_ExchangeByte
 25749                           
 25750                           ; BSR set to: 61
 25751                           ;../phy/sx1276/sx1276_src/sx1276.c: 81:     SPI1_WriteBlock(buffer, size);
 25752  00B700  C078  F072         	movff	SX1276WriteBuffer@buffer,SPI1_WriteBlock@block
 25753  00B704  C079  F073         	movff	SX1276WriteBuffer@buffer+1,SPI1_WriteBlock@block+1
 25754  00B708  C07A  F074         	movff	SX1276WriteBuffer@size,SPI1_WriteBlock@blockSize
 25755  00B70C  0100               	movlb	0	; force () banked
 25756  00B70E  6B75               	clrf	(SPI1_WriteBlock@blockSize+1)& (0+255),b
 25757  00B710  EC8E  F059         	call	_SPI1_WriteBlock	;wreg free
 25758                           
 25759                           ; BSR set to: 0
 25760  00B714  8CBC               	bsf	188,6,c	;volatile
 25761                           
 25762                           ; BSR set to: 0
 25763  00B716  0012               	return		;funcret
 25764  00B718                     __end_of_SX1276WriteBuffer:
 25765                           	callstack 0
 25766                           
 25767 ;; *************** function _SPI1_WriteBlock *****************
 25768 ;; Defined at:
 25769 ;;		line 121 in file "mcc_generated_files/spi1.c"
 25770 ;; Parameters:    Size  Location     Type
 25771 ;;  block           2   18[BANK0 ] PTR void 
 25772 ;;		 -> SX1276Write@data(1), phyTxBuffer(128), 
 25773 ;;  blockSize       2   20[BANK0 ] unsigned int 
 25774 ;; Auto vars:     Size  Location     Type
 25775 ;;  data            2   22[BANK0 ] PTR unsigned char 
 25776 ;;		 -> SX1276Write@data(1), phyTxBuffer(128), 
 25777 ;; Return value:  Size  Location     Type
 25778 ;;                  1    wreg      void 
 25779 ;; Registers used:
 25780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25781 ;; Tracked objects:
 25782 ;;		On entry : 3F/0
 25783 ;;		On exit  : 3F/0
 25784 ;;		Unchanged: 0/0
 25785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25786 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25787 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25789 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25790 ;;Total ram usage:        6 bytes
 25791 ;; Hardware stack levels used:    1
 25792 ;; Hardware stack levels required when called:   12
 25793 ;; This function calls:
 25794 ;;		_SPI1_ExchangeByte
 25795 ;; This function is called by:
 25796 ;;		_SX1276WriteBuffer
 25797 ;;		_sx1276_send
 25798 ;; This function uses a non-reentrant model
 25799 ;;
 25800                           
 25801                           	psect	text138
 25802  00B31C                     __ptext138:
 25803                           	callstack 0
 25804  00B31C                     _SPI1_WriteBlock:
 25805                           	callstack 11
 25806                           
 25807                           ;mcc_generated_files/spi1.c: 121: void SPI1_WriteBlock(void *block, size_t blockSize);mc
      +                          c_generated_files/spi1.c: 122: {;mcc_generated_files/spi1.c: 123:     uint8_t *data = bl
      +                          ock;
 25808                           
 25809                           ; BSR set to: 0
 25810                           ;incstack = 0
 25811  00B31C  C072  F076         	movff	SPI1_WriteBlock@block,SPI1_WriteBlock@data
 25812  00B320  C073  F077         	movff	SPI1_WriteBlock@block+1,SPI1_WriteBlock@data+1
 25813                           
 25814                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 25815  00B324  D00C               	goto	l11506
 25816  00B326                     l11502:
 25817                           
 25818                           ; BSR set to: 0
 25819                           ;mcc_generated_files/spi1.c: 125:     {;mcc_generated_files/spi1.c: 126:         SPI1_Ex
      +                          changeByte(*data++);
 25820  00B326  0060  F1DB  FFD9   	movff	SPI1_WriteBlock@data,fsr2l
 25821  00B32C  0060  F1DF  FFDA   	movff	SPI1_WriteBlock@data+1,fsr2h
 25822  00B332  50DF               	movf	indf2,w,c
 25823  00B334  EC15  F05D         	call	_SPI1_ExchangeByte
 25824                           
 25825                           ; BSR set to: 61
 25826  00B338  0100               	movlb	0	; force () banked
 25827  00B33A  4B76               	infsnz	SPI1_WriteBlock@data& (0+255),f,b
 25828  00B33C  2B77               	incf	(SPI1_WriteBlock@data+1)& (0+255),f,b
 25829  00B33E                     l11506:
 25830                           
 25831                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 25832  00B33E  0100               	movlb	0	; force () banked
 25833  00B340  0774               	decf	SPI1_WriteBlock@blockSize& (0+255),f,b
 25834  00B342  A0D8               	btfss	status,0,c
 25835  00B344  0775               	decf	(SPI1_WriteBlock@blockSize+1)& (0+255),f,b
 25836  00B346  2974               	incf	SPI1_WriteBlock@blockSize& (0+255),w,b
 25837  00B348  E1EE               	bnz	l11502
 25838  00B34A  2975               	incf	(SPI1_WriteBlock@blockSize+1)& (0+255),w,b
 25839  00B34C  B4D8               	btfsc	status,2,c
 25840  00B34E  0012               	return	
 25841  00B350  D7EA               	goto	l11502
 25842  00B352                     __end_of_SPI1_WriteBlock:
 25843                           	callstack 0
 25844                           
 25845 ;; *************** function _SX1276Read *****************
 25846 ;; Defined at:
 25847 ;;		line 34 in file "../phy/sx1276/sx1276_src/sx1276.c"
 25848 ;; Parameters:    Size  Location     Type
 25849 ;;  addr            1    wreg     unsigned char 
 25850 ;; Auto vars:     Size  Location     Type
 25851 ;;  addr            1   28[BANK0 ] unsigned char 
 25852 ;;  data            1   29[BANK0 ] unsigned char 
 25853 ;; Return value:  Size  Location     Type
 25854 ;;                  1    wreg      unsigned char 
 25855 ;; Registers used:
 25856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25857 ;; Tracked objects:
 25858 ;;		On entry : 0/0
 25859 ;;		On exit  : 3F/0
 25860 ;;		Unchanged: 0/0
 25861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25863 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25865 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25866 ;;Total ram usage:        2 bytes
 25867 ;; Hardware stack levels used:    1
 25868 ;; Hardware stack levels required when called:   14
 25869 ;; This function calls:
 25870 ;;		_SX1276ReadBuffer
 25871 ;; This function is called by:
 25872 ;;		_setSpreadingFactor
 25873 ;;		_setSignalBandwidth
 25874 ;;		_getSpreadingFactor
 25875 ;;		_getSignalBandwidth
 25876 ;;		_setCodingRate4
 25877 ;;		_enableCrc
 25878 ;;		_explicitHeaderMode
 25879 ;;		_implicitHeaderMode
 25880 ;;		_initRadio
 25881 ;;		_cad
 25882 ;;		_DIO0_Receive_ISR
 25883 ;;		_radio_engine
 25884 ;; This function uses a non-reentrant model
 25885 ;;
 25886                           
 25887                           	psect	text139
 25888  00B8AA                     __ptext139:
 25889                           	callstack 0
 25890  00B8AA                     _SX1276Read:
 25891                           	callstack 11
 25892                           
 25893                           ; BSR set to: 0
 25894                           ;incstack = 0
 25895                           ;SX1276Read@addr stored from wreg
 25896  00B8AA  0100               	movlb	0	; force () banked
 25897  00B8AC  6F7C               	movwf	SX1276Read@addr& (0+255),b
 25898                           
 25899                           ;../phy/sx1276/sx1276_src/sx1276.c: 34: static uint8_t SX1276Read( uint8_t addr );../phy
      +                          /sx1276/sx1276_src/sx1276.c: 35: {;../phy/sx1276/sx1276_src/sx1276.c: 36:     uint8_t da
      +                          ta;;../phy/sx1276/sx1276_src/sx1276.c: 37:     SX1276ReadBuffer( addr, &data, 1 );
 25900  00B8AE  0E7D               	movlw	low SX1276Read@data
 25901  00B8B0  0100               	movlb	0	; force () banked
 25902  00B8B2  6F78               	movwf	SX1276ReadBuffer@buffer& (0+255),b
 25903  00B8B4  0E00               	movlw	high SX1276Read@data
 25904  00B8B6  6F79               	movwf	(SX1276ReadBuffer@buffer+1)& (0+255),b
 25905  00B8B8  0E01               	movlw	1
 25906  00B8BA  0100               	movlb	0	; force () banked
 25907  00B8BC  6F7A               	movwf	SX1276ReadBuffer@size& (0+255),b
 25908  00B8BE  0100               	movlb	0	; force () banked
 25909  00B8C0  517C               	movf	SX1276Read@addr& (0+255),w,b
 25910  00B8C2  EC8C  F05B         	call	_SX1276ReadBuffer
 25911                           
 25912                           ; BSR set to: 0
 25913                           ;../phy/sx1276/sx1276_src/sx1276.c: 38:     return data;
 25914  00B8C6  0100               	movlb	0	; force () banked
 25915  00B8C8  517D               	movf	SX1276Read@data& (0+255),w,b
 25916                           
 25917                           ; BSR set to: 0
 25918  00B8CA  0012               	return		;funcret
 25919  00B8CC                     __end_of_SX1276Read:
 25920                           	callstack 0
 25921                           
 25922 ;; *************** function _SX1276ReadBuffer *****************
 25923 ;; Defined at:
 25924 ;;		line 59 in file "../phy/sx1276/sx1276_src/sx1276.c"
 25925 ;; Parameters:    Size  Location     Type
 25926 ;;  addr            1    wreg     unsigned char 
 25927 ;;  buffer          2   24[BANK0 ] PTR unsigned char 
 25928 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 25929 ;;  size            1   26[BANK0 ] unsigned char 
 25930 ;; Auto vars:     Size  Location     Type
 25931 ;;  addr            1   27[BANK0 ] unsigned char 
 25932 ;; Return value:  Size  Location     Type
 25933 ;;                  1    wreg      void 
 25934 ;; Registers used:
 25935 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25936 ;; Tracked objects:
 25937 ;;		On entry : 3F/0
 25938 ;;		On exit  : 3F/0
 25939 ;;		Unchanged: 0/0
 25940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25941 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25942 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25944 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25945 ;;Total ram usage:        4 bytes
 25946 ;; Hardware stack levels used:    1
 25947 ;; Hardware stack levels required when called:   13
 25948 ;; This function calls:
 25949 ;;		_SPI1_ExchangeByte
 25950 ;;		_SPI1_ReadBlock
 25951 ;; This function is called by:
 25952 ;;		_SX1276Read
 25953 ;;		_DIO0_Receive_ISR
 25954 ;; This function uses a non-reentrant model
 25955 ;;
 25956                           
 25957                           	psect	text140
 25958  00B718                     __ptext140:
 25959                           	callstack 0
 25960  00B718                     _SX1276ReadBuffer:
 25961                           	callstack 11
 25962                           
 25963                           ; BSR set to: 0
 25964                           ;incstack = 0
 25965                           ;SX1276ReadBuffer@addr stored from wreg
 25966  00B718  0100               	movlb	0	; force () banked
 25967  00B71A  6F7B               	movwf	SX1276ReadBuffer@addr& (0+255),b
 25968                           
 25969                           ;../phy/sx1276/sx1276_src/sx1276.c: 59: static void SX1276ReadBuffer( uint8_t addr, uint
      +                          8_t *buffer, uint8_t size );../phy/sx1276/sx1276_src/sx1276.c: 60: {;../phy/sx1276/sx127
      +                          6_src/sx1276.c: 62:     do { LATCbits.LATC6 = 0; } while(0);
 25970  00B71C  9CBC               	bcf	188,6,c	;volatile
 25971                           
 25972                           ;../phy/sx1276/sx1276_src/sx1276.c: 63:     SPI1_ExchangeByte(addr & 0x7F);
 25973  00B71E  0100               	movlb	0	; force () banked
 25974  00B720  517B               	movf	SX1276ReadBuffer@addr& (0+255),w,b
 25975  00B722  0B7F               	andlw	127
 25976  00B724  EC15  F05D         	call	_SPI1_ExchangeByte
 25977                           
 25978                           ; BSR set to: 61
 25979                           ;../phy/sx1276/sx1276_src/sx1276.c: 64:     SPI1_ReadBlock(buffer, size);
 25980  00B728  C078  F072         	movff	SX1276ReadBuffer@buffer,SPI1_ReadBlock@block
 25981  00B72C  C079  F073         	movff	SX1276ReadBuffer@buffer+1,SPI1_ReadBlock@block+1
 25982  00B730  C07A  F074         	movff	SX1276ReadBuffer@size,SPI1_ReadBlock@blockSize
 25983  00B734  0100               	movlb	0	; force () banked
 25984  00B736  6B75               	clrf	(SPI1_ReadBlock@blockSize+1)& (0+255),b
 25985  00B738  EC56  F059         	call	_SPI1_ReadBlock	;wreg free
 25986                           
 25987                           ; BSR set to: 0
 25988  00B73C  8CBC               	bsf	188,6,c	;volatile
 25989                           
 25990                           ; BSR set to: 0
 25991  00B73E  0012               	return		;funcret
 25992  00B740                     __end_of_SX1276ReadBuffer:
 25993                           	callstack 0
 25994                           
 25995 ;; *************** function _SPI1_ReadBlock *****************
 25996 ;; Defined at:
 25997 ;;		line 130 in file "mcc_generated_files/spi1.c"
 25998 ;; Parameters:    Size  Location     Type
 25999 ;;  block           2   18[BANK0 ] PTR void 
 26000 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 26001 ;;  blockSize       2   20[BANK0 ] unsigned int 
 26002 ;; Auto vars:     Size  Location     Type
 26003 ;;  data            2   22[BANK0 ] PTR unsigned char 
 26004 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 26005 ;; Return value:  Size  Location     Type
 26006 ;;                  1    wreg      void 
 26007 ;; Registers used:
 26008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26009 ;; Tracked objects:
 26010 ;;		On entry : 3F/0
 26011 ;;		On exit  : 3F/0
 26012 ;;		Unchanged: 0/0
 26013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26014 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26015 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26017 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26018 ;;Total ram usage:        6 bytes
 26019 ;; Hardware stack levels used:    1
 26020 ;; Hardware stack levels required when called:   12
 26021 ;; This function calls:
 26022 ;;		_SPI1_ExchangeByte
 26023 ;; This function is called by:
 26024 ;;		_SX1276ReadBuffer
 26025 ;; This function uses a non-reentrant model
 26026 ;;
 26027                           
 26028                           	psect	text141
 26029  00B2AC                     __ptext141:
 26030                           	callstack 0
 26031  00B2AC                     _SPI1_ReadBlock:
 26032                           	callstack 11
 26033                           
 26034                           ;mcc_generated_files/spi1.c: 130: void SPI1_ReadBlock(void *block, size_t blockSize);mcc
      +                          _generated_files/spi1.c: 131: {;mcc_generated_files/spi1.c: 132:     uint8_t *data = blo
      +                          ck;
 26035                           
 26036                           ; BSR set to: 0
 26037                           ;incstack = 0
 26038  00B2AC  C072  F076         	movff	SPI1_ReadBlock@block,SPI1_ReadBlock@data
 26039  00B2B0  C073  F077         	movff	SPI1_ReadBlock@block+1,SPI1_ReadBlock@data+1
 26040                           
 26041                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 26042  00B2B4  D00D               	goto	l11514
 26043  00B2B6                     l11510:
 26044                           
 26045                           ; BSR set to: 0
 26046                           ;mcc_generated_files/spi1.c: 134:     {;mcc_generated_files/spi1.c: 135:         *data++
      +                           = SPI1_ExchangeByte(0);
 26047  00B2B6  0E00               	movlw	0
 26048  00B2B8  EC15  F05D         	call	_SPI1_ExchangeByte
 26049  00B2BC  0060  F1DB  FFD9   	movff	SPI1_ReadBlock@data,fsr2l
 26050  00B2C2  0060  F1DF  FFDA   	movff	SPI1_ReadBlock@data+1,fsr2h
 26051  00B2C8  6EDF               	movwf	indf2,c
 26052                           
 26053                           ; BSR set to: 61
 26054  00B2CA  0100               	movlb	0	; force () banked
 26055  00B2CC  4B76               	infsnz	SPI1_ReadBlock@data& (0+255),f,b
 26056  00B2CE  2B77               	incf	(SPI1_ReadBlock@data+1)& (0+255),f,b
 26057  00B2D0                     l11514:
 26058                           
 26059                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 26060  00B2D0  0100               	movlb	0	; force () banked
 26061  00B2D2  0774               	decf	SPI1_ReadBlock@blockSize& (0+255),f,b
 26062  00B2D4  A0D8               	btfss	status,0,c
 26063  00B2D6  0775               	decf	(SPI1_ReadBlock@blockSize+1)& (0+255),f,b
 26064  00B2D8  2974               	incf	SPI1_ReadBlock@blockSize& (0+255),w,b
 26065  00B2DA  E1ED               	bnz	l11510
 26066  00B2DC  2975               	incf	(SPI1_ReadBlock@blockSize+1)& (0+255),w,b
 26067  00B2DE  B4D8               	btfsc	status,2,c
 26068  00B2E0  0012               	return	
 26069  00B2E2  D7E9               	goto	l11510
 26070  00B2E4                     __end_of_SPI1_ReadBlock:
 26071                           	callstack 0
 26072                           
 26073 ;; *************** function _SPI1_ExchangeByte *****************
 26074 ;; Defined at:
 26075 ;;		line 100 in file "mcc_generated_files/spi1.c"
 26076 ;; Parameters:    Size  Location     Type
 26077 ;;  data            1    wreg     unsigned char 
 26078 ;; Auto vars:     Size  Location     Type
 26079 ;;  data            1   17[BANK0 ] unsigned char 
 26080 ;; Return value:  Size  Location     Type
 26081 ;;                  1    wreg      unsigned char 
 26082 ;; Registers used:
 26083 ;;		wreg, status,2
 26084 ;; Tracked objects:
 26085 ;;		On entry : 0/0
 26086 ;;		On exit  : 3F/3D
 26087 ;;		Unchanged: 0/0
 26088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26092 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26093 ;;Total ram usage:        1 bytes
 26094 ;; Hardware stack levels used:    1
 26095 ;; Hardware stack levels required when called:   11
 26096 ;; This function calls:
 26097 ;;		Nothing
 26098 ;; This function is called by:
 26099 ;;		_SPI1_WriteBlock
 26100 ;;		_SPI1_ReadBlock
 26101 ;;		_SX1276ReadBuffer
 26102 ;;		_SX1276WriteBuffer
 26103 ;;		_sx1276_send
 26104 ;; This function uses a non-reentrant model
 26105 ;;
 26106                           
 26107                           	psect	text142
 26108  00BA2A                     __ptext142:
 26109                           	callstack 0
 26110  00BA2A                     _SPI1_ExchangeByte:
 26111                           	callstack 11
 26112                           
 26113                           ; BSR set to: 0
 26114                           ;incstack = 0
 26115                           ;SPI1_ExchangeByte@data stored from wreg
 26116  00BA2A  0100               	movlb	0	; force () banked
 26117  00BA2C  6F71               	movwf	SPI1_ExchangeByte@data& (0+255),b
 26118                           
 26119                           ;mcc_generated_files/spi1.c: 100: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     SPI1TCNTL = 1;
 26120  00BA2E  0E01               	movlw	1
 26121  00BA30  013D               	movlb	61	; force () banked
 26122  00BA32  6F12               	movwf	18,b	;volatile
 26123                           
 26124                           ; BSR set to: 61
 26125                           ;mcc_generated_files/spi1.c: 103:     SPI1TXB = data;
 26126  00BA34  0060  F1C7  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 26127  00BA3A                     l1563:
 26128  00BA3A  0139               	movlb	57	; force () banked
 26129  00BA3C  A9A2               	btfss	162,4,b	;volatile
 26130  00BA3E  D7FD               	goto	l1563
 26131                           
 26132                           ; BSR set to: 57
 26133                           ;mcc_generated_files/spi1.c: 105:     return SPI1RXB;
 26134  00BA40  013D               	movlb	61	; force () banked
 26135  00BA42  5110               	movf	16,w,b	;volatile
 26136                           
 26137                           ; BSR set to: 61
 26138  00BA44  0012               	return		;funcret
 26139  00BA46                     __end_of_SPI1_ExchangeByte:
 26140                           	callstack 0
 26141                           
 26142 ;; *************** function _queue_rx_led_event *****************
 26143 ;; Defined at:
 26144 ;;		line 132 in file "../app/app_src/led.c"
 26145 ;; Parameters:    Size  Location     Type
 26146 ;;		None
 26147 ;; Auto vars:     Size  Location     Type
 26148 ;;  i               2   55[BANK0 ] int 
 26149 ;; Return value:  Size  Location     Type
 26150 ;;                  1    wreg      void 
 26151 ;; Registers used:
 26152 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26153 ;; Tracked objects:
 26154 ;;		On entry : 0/0
 26155 ;;		On exit  : 3F/0
 26156 ;;		Unchanged: 0/0
 26157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26159 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26161 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26162 ;;Total ram usage:        2 bytes
 26163 ;; Hardware stack levels used:    1
 26164 ;; Hardware stack levels required when called:   14
 26165 ;; This function calls:
 26166 ;;		_queueLedEvent
 26167 ;; This function is called by:
 26168 ;;		_DIO0_Receive_ISR
 26169 ;; This function uses a non-reentrant model
 26170 ;;
 26171                           
 26172                           	psect	text143
 26173  009916                     __ptext143:
 26174                           	callstack 0
 26175  009916                     _queue_rx_led_event:
 26176                           	callstack 12
 26177                           
 26178                           ;../app/app_src/led.c: 134:     (void)queueLedEvent(0,400);
 26179                           
 26180                           ; BSR set to: 61
 26181                           ;incstack = 0
 26182  009916  0E01               	movlw	1
 26183  009918  0100               	movlb	0	; force () banked
 26184  00991A  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
 26185  00991C  0E90               	movlw	144
 26186  00991E  6F90               	movwf	queueLedEvent@duration& (0+255),b
 26187  009920  0E00               	movlw	0
 26188  009922  EC88  F054         	call	_queueLedEvent
 26189                           
 26190                           ; BSR set to: 0
 26191                           ;../app/app_src/led.c: 135:     for(int i = 0; i < 2; i++)
 26192  009926  0E00               	movlw	0
 26193  009928  0100               	movlb	0	; force () banked
 26194  00992A  6F98               	movwf	(queue_rx_led_event@i+1)& (0+255),b
 26195  00992C  0E00               	movlw	0
 26196  00992E  6F97               	movwf	queue_rx_led_event@i& (0+255),b
 26197                           
 26198                           ; BSR set to: 0
 26199  009930  0100               	movlb	0	; force () banked
 26200  009932  BF98               	btfsc	(queue_rx_led_event@i+1)& (0+255),7,b
 26201  009934  D003               	goto	l18394
 26202  009936  5198               	movf	(queue_rx_led_event@i+1)& (0+255),w,b
 26203  009938  E11D               	bnz	l18400
 26204  00993A  D018               	goto	L31
 26205  00993C                     l18394:
 26206                           
 26207                           ; BSR set to: 0
 26208                           ;../app/app_src/led.c: 136:     {;../app/app_src/led.c: 137:         (void)queueLedEvent
      +                          (1,300);
 26209  00993C  0E01               	movlw	1
 26210  00993E  0100               	movlb	0	; force () banked
 26211  009940  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
 26212  009942  0E2C               	movlw	44
 26213  009944  6F90               	movwf	queueLedEvent@duration& (0+255),b
 26214  009946  0E01               	movlw	1
 26215  009948  EC88  F054         	call	_queueLedEvent
 26216                           
 26217                           ;../app/app_src/led.c: 138:         (void)queueLedEvent(0,300);
 26218  00994C  0E01               	movlw	1
 26219  00994E  0100               	movlb	0	; force () banked
 26220  009950  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
 26221  009952  0E2C               	movlw	44
 26222  009954  6F90               	movwf	queueLedEvent@duration& (0+255),b
 26223  009956  0E00               	movlw	0
 26224  009958  EC88  F054         	call	_queueLedEvent
 26225                           
 26226                           ; BSR set to: 0
 26227                           ;../app/app_src/led.c: 139:     }
 26228  00995C  0100               	movlb	0	; force () banked
 26229  00995E  4B97               	infsnz	queue_rx_led_event@i& (0+255),f,b
 26230  009960  2B98               	incf	(queue_rx_led_event@i+1)& (0+255),f,b
 26231                           
 26232                           ; BSR set to: 0
 26233  009962  0100               	movlb	0	; force () banked
 26234  009964  BF98               	btfsc	(queue_rx_led_event@i+1)& (0+255),7,b
 26235  009966  D7EA               	goto	l18394
 26236  009968  5198               	movf	(queue_rx_led_event@i+1)& (0+255),w,b
 26237  00996A  E104               	bnz	u16000
 26238  00996C                     L31:
 26239  00996C  0E02               	movlw	2
 26240  00996E  5D97               	subwf	queue_rx_led_event@i& (0+255),w,b
 26241  009970  A0D8               	btfss	status,0,c
 26242  009972  D7E4               	goto	l18394
 26243  009974                     u16000:
 26244  009974                     l18400:
 26245                           
 26246                           ; BSR set to: 0
 26247                           ;../app/app_src/led.c: 140:     (void)queueLedEvent(1,100);
 26248  009974  0E00               	movlw	0
 26249  009976  0100               	movlb	0	; force () banked
 26250  009978  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
 26251  00997A  0E64               	movlw	100
 26252  00997C  6F90               	movwf	queueLedEvent@duration& (0+255),b
 26253  00997E  0E01               	movlw	1
 26254  009980  EC88  F054         	call	_queueLedEvent
 26255                           
 26256                           ;../app/app_src/led.c: 141:     (void)queueLedEvent(0,300);
 26257  009984  0E01               	movlw	1
 26258  009986  0100               	movlb	0	; force () banked
 26259  009988  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
 26260  00998A  0E2C               	movlw	44
 26261  00998C  6F90               	movwf	queueLedEvent@duration& (0+255),b
 26262  00998E  0E00               	movlw	0
 26263  009990  EC88  F054         	call	_queueLedEvent
 26264                           
 26265                           ;../app/app_src/led.c: 142:     (void)queueLedEvent(1,100);
 26266  009994  0E00               	movlw	0
 26267  009996  0100               	movlb	0	; force () banked
 26268  009998  6F91               	movwf	(queueLedEvent@duration+1)& (0+255),b
 26269  00999A  0E64               	movlw	100
 26270  00999C  6F90               	movwf	queueLedEvent@duration& (0+255),b
 26271  00999E  0E01               	movlw	1
 26272  0099A0  EC88  F054         	call	_queueLedEvent
 26273                           
 26274                           ; BSR set to: 0
 26275  0099A4  0012               	return		;funcret
 26276  0099A6                     __end_of_queue_rx_led_event:
 26277                           	callstack 0
 26278                           
 26279 ;; *************** function _queueLedEvent *****************
 26280 ;; Defined at:
 26281 ;;		line 58 in file "../app/app_src/led.c"
 26282 ;; Parameters:    Size  Location     Type
 26283 ;;  LEDState        1    wreg     unsigned char 
 26284 ;;  duration        2   48[BANK0 ] unsigned int 
 26285 ;; Auto vars:     Size  Location     Type
 26286 ;;  LEDState        1   50[BANK0 ] unsigned char 
 26287 ;;  temp            3   52[BANK0 ] struct ledEvent
 26288 ;;  ret_var         1   51[BANK0 ] char 
 26289 ;; Return value:  Size  Location     Type
 26290 ;;                  1    wreg      char 
 26291 ;; Registers used:
 26292 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26293 ;; Tracked objects:
 26294 ;;		On entry : 3F/0
 26295 ;;		On exit  : 3F/0
 26296 ;;		Unchanged: 0/0
 26297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26298 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26299 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26301 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26302 ;;Total ram usage:        7 bytes
 26303 ;; Hardware stack levels used:    1
 26304 ;; Hardware stack levels required when called:   13
 26305 ;; This function calls:
 26306 ;;		_CircularBufferPushBack
 26307 ;;		_CircularBufferSpace
 26308 ;; This function is called by:
 26309 ;;		_ledInit
 26310 ;;		_queue_tx_led_event
 26311 ;;		_queue_rx_led_event
 26312 ;; This function uses a non-reentrant model
 26313 ;;
 26314                           
 26315                           	psect	text144
 26316  00A910                     __ptext144:
 26317                           	callstack 0
 26318  00A910                     _queueLedEvent:
 26319                           	callstack 15
 26320                           
 26321                           ; BSR set to: 0
 26322                           ;incstack = 0
 26323                           ;queueLedEvent@LEDState stored from wreg
 26324  00A910  0100               	movlb	0	; force () banked
 26325  00A912  6F92               	movwf	queueLedEvent@LEDState& (0+255),b
 26326                           
 26327                           ;../app/app_src/led.c: 58: int8_t queueLedEvent(uint8_t LEDState,uint16_t duration);../a
      +                          pp/app_src/led.c: 59: {;../app/app_src/led.c: 60:     int8_t ret_var;;../app/app_src/led
      +                          .c: 61:     if(0 != CircularBufferSpace(&ledtasksbuf))
 26328  00A914  0ECC               	movlw	low _ledtasksbuf
 26329  00A916  0100               	movlb	0	; force () banked
 26330  00A918  6F79               	movwf	CircularBufferSpace@ctx& (0+255),b
 26331  00A91A  0E02               	movlw	high _ledtasksbuf
 26332  00A91C  6F7A               	movwf	(CircularBufferSpace@ctx+1)& (0+255),b
 26333  00A91E  EC0C  F058         	call	_CircularBufferSpace	;wreg free
 26334  00A922  0100               	movlb	0	; force () banked
 26335  00A924  5179               	movf	?_CircularBufferSpace& (0+255),w,b
 26336  00A926  117A               	iorwf	(?_CircularBufferSpace+1)& (0+255),w,b
 26337  00A928  B4D8               	btfsc	status,2,c
 26338  00A92A  D016               	goto	l1039
 26339                           
 26340                           ; BSR set to: 0
 26341                           ;../app/app_src/led.c: 62:     {;../app/app_src/led.c: 63:         struct ledEvent temp;
      +                          ;../app/app_src/led.c: 64:         temp.LEDCondition = LEDState;
 26342  00A92C  C092  F094         	movff	queueLedEvent@LEDState,queueLedEvent@temp
 26343                           
 26344                           ;../app/app_src/led.c: 65:         temp.eventDuration = duration;
 26345  00A930  C090  F095         	movff	queueLedEvent@duration,queueLedEvent@temp+1
 26346  00A934  C091  F096         	movff	queueLedEvent@duration+1,queueLedEvent@temp+2
 26347                           
 26348                           ; BSR set to: 0
 26349                           ;../app/app_src/led.c: 66:         CircularBufferPushBack(&ledtasksbuf,&temp);
 26350  00A938  0ECC               	movlw	low _ledtasksbuf
 26351  00A93A  0100               	movlb	0	; force () banked
 26352  00A93C  6F84               	movwf	CircularBufferPushBack@ctx& (0+255),b
 26353  00A93E  0E02               	movlw	high _ledtasksbuf
 26354  00A940  6F85               	movwf	(CircularBufferPushBack@ctx+1)& (0+255),b
 26355  00A942  0E94               	movlw	low queueLedEvent@temp
 26356  00A944  0100               	movlb	0	; force () banked
 26357  00A946  6F86               	movwf	CircularBufferPushBack@val& (0+255),b
 26358  00A948  0E00               	movlw	high queueLedEvent@temp
 26359  00A94A  6F87               	movwf	(CircularBufferPushBack@val+1)& (0+255),b
 26360  00A94C  EC23  F034         	call	_CircularBufferPushBack	;wreg free
 26361                           
 26362                           ; BSR set to: 0
 26363                           ;../app/app_src/led.c: 67:         ret_var = 0;
 26364  00A950  0E00               	movlw	0
 26365  00A952  0100               	movlb	0	; force () banked
 26366  00A954  6F93               	movwf	queueLedEvent@ret_var& (0+255),b
 26367                           
 26368                           ;../app/app_src/led.c: 68:     }
 26369  00A956  D002               	goto	l18244
 26370  00A958                     l1039:
 26371                           
 26372                           ; BSR set to: 0
 26373                           ;../app/app_src/led.c: 70:     {;../app/app_src/led.c: 71:         ret_var = -1;
 26374  00A958  0100               	movlb	0	; force () banked
 26375  00A95A  6993               	setf	queueLedEvent@ret_var& (0+255),b
 26376  00A95C                     l18244:
 26377                           
 26378                           ; BSR set to: 0
 26379                           ;../app/app_src/led.c: 73:     return ret_var;
 26380  00A95C  0100               	movlb	0	; force () banked
 26381  00A95E  5193               	movf	queueLedEvent@ret_var& (0+255),w,b
 26382                           
 26383                           ; BSR set to: 0
 26384  00A960  0012               	return		;funcret
 26385  00A962                     __end_of_queueLedEvent:
 26386                           	callstack 0
 26387                           
 26388 ;; *************** function _CircularBufferSpace *****************
 26389 ;; Defined at:
 26390 ;;		line 132 in file "../app/app_src/circular_buffer.c"
 26391 ;; Parameters:    Size  Location     Type
 26392 ;;  ctx             2   25[BANK0 ] PTR const struct .
 26393 ;;		 -> ledtasksbuf(10), 
 26394 ;; Auto vars:     Size  Location     Type
 26395 ;;		None
 26396 ;; Return value:  Size  Location     Type
 26397 ;;                  2   25[BANK0 ] unsigned int 
 26398 ;; Registers used:
 26399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26400 ;; Tracked objects:
 26401 ;;		On entry : 3F/0
 26402 ;;		On exit  : 3F/0
 26403 ;;		Unchanged: 0/0
 26404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26405 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26407 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26408 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26409 ;;Total ram usage:        4 bytes
 26410 ;; Hardware stack levels used:    1
 26411 ;; Hardware stack levels required when called:   12
 26412 ;; This function calls:
 26413 ;;		_CircularBufferSize
 26414 ;; This function is called by:
 26415 ;;		_queueLedEvent
 26416 ;; This function uses a non-reentrant model
 26417 ;;
 26418                           
 26419                           	psect	text145
 26420  00B018                     __ptext145:
 26421                           	callstack 0
 26422  00B018                     _CircularBufferSpace:
 26423                           	callstack 15
 26424                           
 26425                           ;../app/app_src/circular_buffer.c: 134:     return (ctx->max_size - CircularBufferSize(c
      +                          tx));
 26426                           
 26427                           ; BSR set to: 0
 26428                           ;incstack = 0
 26429  00B018  C079  F071         	movff	CircularBufferSpace@ctx,CircularBufferSize@ctx
 26430  00B01C  C07A  F072         	movff	CircularBufferSpace@ctx+1,CircularBufferSize@ctx+1
 26431  00B020  ECD0  F051         	call	_CircularBufferSize	;wreg free
 26432  00B024  0100               	movlb	0	; force () banked
 26433  00B026  EE20 F008          	lfsr	2,8
 26434  00B02A  5179               	movf	CircularBufferSpace@ctx& (0+255),w,b
 26435  00B02C  26D9               	addwf	fsr2l,f,c
 26436  00B02E  517A               	movf	(CircularBufferSpace@ctx+1)& (0+255),w,b
 26437  00B030  22DA               	addwfc	fsr2h,f,c
 26438  00B032  006F FF78  F07B    	movff	postinc2,??_CircularBufferSpace
 26439  00B038  006F FF74  F07C    	movff	postdec2,??_CircularBufferSpace+1
 26440  00B03E  0100               	movlb	0	; force () banked
 26441  00B040  5171               	movf	?_CircularBufferSize& (0+255),w,b
 26442  00B042  0100               	movlb	0	; force () banked
 26443  00B044  5D7B               	subwf	??_CircularBufferSpace& (0+255),w,b
 26444  00B046  0100               	movlb	0	; force () banked
 26445  00B048  6F79               	movwf	?_CircularBufferSpace& (0+255),b
 26446  00B04A  0100               	movlb	0	; force () banked
 26447  00B04C  5172               	movf	(?_CircularBufferSize+1)& (0+255),w,b
 26448  00B04E  0100               	movlb	0	; force () banked
 26449  00B050  597C               	subwfb	(??_CircularBufferSpace+1)& (0+255),w,b
 26450  00B052  0100               	movlb	0	; force () banked
 26451  00B054  6F7A               	movwf	(?_CircularBufferSpace+1)& (0+255),b
 26452                           
 26453                           ; BSR set to: 0
 26454  00B056  0012               	return		;funcret
 26455  00B058                     __end_of_CircularBufferSpace:
 26456                           	callstack 0
 26457                           
 26458 ;; *************** function _get_rssi *****************
 26459 ;; Defined at:
 26460 ;;		line 598 in file "../phy/sx1276/sx1276_src/sx1276.c"
 26461 ;; Parameters:    Size  Location     Type
 26462 ;;  rssi_reg        1    wreg     unsigned char 
 26463 ;; Auto vars:     Size  Location     Type
 26464 ;;  rssi_reg        1   17[BANK0 ] unsigned char 
 26465 ;;  temp_rssi       2   18[BANK0 ] int 
 26466 ;; Return value:  Size  Location     Type
 26467 ;;                  1    wreg      char 
 26468 ;; Registers used:
 26469 ;;		wreg, status,2, status,0
 26470 ;; Tracked objects:
 26471 ;;		On entry : 3F/1
 26472 ;;		On exit  : 3F/0
 26473 ;;		Unchanged: 0/0
 26474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26476 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26478 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26479 ;;Total ram usage:        3 bytes
 26480 ;; Hardware stack levels used:    1
 26481 ;; Hardware stack levels required when called:   11
 26482 ;; This function calls:
 26483 ;;		Nothing
 26484 ;; This function is called by:
 26485 ;;		_DIO0_Receive_ISR
 26486 ;; This function uses a non-reentrant model
 26487 ;;
 26488                           
 26489                           	psect	text146
 26490  00B388                     __ptext146:
 26491                           	callstack 0
 26492  00B388                     _get_rssi:
 26493                           	callstack 15
 26494                           
 26495                           ; BSR set to: 0
 26496                           ;incstack = 0
 26497                           ;get_rssi@rssi_reg stored from wreg
 26498  00B388  0100               	movlb	0	; force () banked
 26499  00B38A  6F71               	movwf	get_rssi@rssi_reg& (0+255),b
 26500                           
 26501                           ;../phy/sx1276/sx1276_src/sx1276.c: 599:     int16_t temp_rssi = -157 + rssi_reg;
 26502  00B38C  0E63               	movlw	99
 26503  00B38E  0100               	movlb	0	; force () banked
 26504  00B390  2571               	addwf	get_rssi@rssi_reg& (0+255),w,b
 26505  00B392  0100               	movlb	0	; force () banked
 26506  00B394  6F72               	movwf	get_rssi@temp_rssi& (0+255),b
 26507  00B396  6B73               	clrf	(get_rssi@temp_rssi+1)& (0+255),b
 26508  00B398  0EFF               	movlw	255
 26509  00B39A  2373               	addwfc	(get_rssi@temp_rssi+1)& (0+255),f,b
 26510                           
 26511                           ;../phy/sx1276/sx1276_src/sx1276.c: 600:     if(temp_rssi < -127){
 26512  00B39C  AF73               	btfss	(get_rssi@temp_rssi+1)& (0+255),7,b
 26513  00B39E  D00B               	goto	l3623
 26514  00B3A0  0E81               	movlw	129
 26515  00B3A2  5D72               	subwf	get_rssi@temp_rssi& (0+255),w,b
 26516  00B3A4  0EFF               	movlw	255
 26517  00B3A6  5973               	subwfb	(get_rssi@temp_rssi+1)& (0+255),w,b
 26518  00B3A8  B0D8               	btfsc	status,0,c
 26519  00B3AA  D005               	goto	l3623
 26520                           
 26521                           ; BSR set to: 0
 26522                           ;../phy/sx1276/sx1276_src/sx1276.c: 601:         temp_rssi = -127;
 26523  00B3AC  0EFF               	movlw	255
 26524  00B3AE  0100               	movlb	0	; force () banked
 26525  00B3B0  6F73               	movwf	(get_rssi@temp_rssi+1)& (0+255),b
 26526  00B3B2  0E81               	movlw	129
 26527  00B3B4  6F72               	movwf	get_rssi@temp_rssi& (0+255),b
 26528  00B3B6                     l3623:
 26529                           
 26530                           ; BSR set to: 0
 26531                           ;../phy/sx1276/sx1276_src/sx1276.c: 603:     return (temp_rssi);
 26532  00B3B6  0100               	movlb	0	; force () banked
 26533  00B3B8  5172               	movf	get_rssi@temp_rssi& (0+255),w,b
 26534                           
 26535                           ; BSR set to: 0
 26536  00B3BA  0012               	return		;funcret
 26537  00B3BC                     __end_of_get_rssi:
 26538                           	callstack 0
 26539                           
 26540 ;; *************** function _get_lqi *****************
 26541 ;; Defined at:
 26542 ;;		line 612 in file "../phy/sx1276/sx1276_src/sx1276.c"
 26543 ;; Parameters:    Size  Location     Type
 26544 ;;  rssi            1    wreg     char 
 26545 ;; Auto vars:     Size  Location     Type
 26546 ;;  rssi            1   82[BANK0 ] char 
 26547 ;; Return value:  Size  Location     Type
 26548 ;;                  1    wreg      unsigned char 
 26549 ;; Registers used:
 26550 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 26551 ;; Tracked objects:
 26552 ;;		On entry : 3F/0
 26553 ;;		On exit  : 3F/0
 26554 ;;		Unchanged: 0/0
 26555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26557 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26559 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26560 ;;Total ram usage:        1 bytes
 26561 ;; Hardware stack levels used:    1
 26562 ;; Hardware stack levels required when called:   12
 26563 ;; This function calls:
 26564 ;;		___fladd
 26565 ;;		___flmul
 26566 ;;		___fltol
 26567 ;;		___xxtofl
 26568 ;; This function is called by:
 26569 ;;		_DIO0_Receive_ISR
 26570 ;; This function uses a non-reentrant model
 26571 ;;
 26572                           
 26573                           	psect	text147
 26574  0096CE                     __ptext147:
 26575                           	callstack 0
 26576  0096CE                     _get_lqi:
 26577                           	callstack 14
 26578                           
 26579                           ; BSR set to: 0
 26580                           ;incstack = 0
 26581                           ;get_lqi@rssi stored from wreg
 26582  0096CE  0100               	movlb	0	; force () banked
 26583  0096D0  6FB2               	movwf	get_lqi@rssi& (0+255),b
 26584                           
 26585                           ;../phy/sx1276/sx1276_src/sx1276.c: 613:     if(rssi > -10){
 26586  0096D2  0100               	movlb	0	; force () banked
 26587  0096D4  51B2               	movf	get_lqi@rssi& (0+255),w,b
 26588  0096D6  0A80               	xorlw	128
 26589  0096D8  0F89               	addlw	137
 26590  0096DA  A0D8               	btfss	status,0,c
 26591  0096DC  D002               	goto	l13970
 26592                           
 26593                           ; BSR set to: 0
 26594                           ;../phy/sx1276/sx1276_src/sx1276.c: 614:         return 255;
 26595  0096DE  0EFF               	movlw	255
 26596  0096E0  0012               	return	
 26597  0096E2                     l13970:
 26598                           
 26599                           ; BSR set to: 0
 26600                           ;../phy/sx1276/sx1276_src/sx1276.c: 616:     return ((2.18*(int16_t)rssi) + 10795);
 26601  0096E2  0E00               	movlw	0
 26602  0096E4  0100               	movlb	0	; force () banked
 26603  0096E6  6F9C               	movwf	___fladd@a& (0+255),b
 26604  0096E8  0EAC               	movlw	172
 26605  0096EA  6F9D               	movwf	(___fladd@a+1)& (0+255),b
 26606  0096EC  0E28               	movlw	40
 26607  0096EE  6F9E               	movwf	(___fladd@a+2)& (0+255),b
 26608  0096F0  0E46               	movlw	70
 26609  0096F2  6F9F               	movwf	(___fladd@a+3)& (0+255),b
 26610  0096F4  0E1F               	movlw	31
 26611  0096F6  0100               	movlb	0	; force () banked
 26612  0096F8  6F83               	movwf	___flmul@a& (0+255),b
 26613  0096FA  0E85               	movlw	133
 26614  0096FC  6F84               	movwf	(___flmul@a+1)& (0+255),b
 26615  0096FE  0E0B               	movlw	11
 26616  009700  6F85               	movwf	(___flmul@a+2)& (0+255),b
 26617  009702  0E40               	movlw	64
 26618  009704  6F86               	movwf	(___flmul@a+3)& (0+255),b
 26619  009706  0100               	movlb	0	; force () banked
 26620  009708  51B2               	movf	get_lqi@rssi& (0+255),w,b
 26621  00970A  0100               	movlb	0	; force () banked
 26622  00970C  6F71               	movwf	___xxtofl@val& (0+255),b
 26623  00970E  0E00               	movlw	0
 26624  009710  BF71               	btfsc	___xxtofl@val& (0+255),7,b
 26625  009712  0EFF               	movlw	-1
 26626  009714  6F72               	movwf	(___xxtofl@val+1)& (0+255),b
 26627  009716  6F73               	movwf	(___xxtofl@val+2)& (0+255),b
 26628  009718  6F74               	movwf	(___xxtofl@val+3)& (0+255),b
 26629  00971A  0E01               	movlw	1
 26630  00971C  EC6A  F030         	call	___xxtofl
 26631  009720  C071  F07F         	movff	?___xxtofl,___flmul@b
 26632  009724  C072  F080         	movff	?___xxtofl+1,___flmul@b+1
 26633  009728  C073  F081         	movff	?___xxtofl+2,___flmul@b+2
 26634  00972C  C074  F082         	movff	?___xxtofl+3,___flmul@b+3
 26635  009730  ECE6  F013         	call	___flmul	;wreg free
 26636  009734  C07F  F098         	movff	?___flmul,___fladd@b
 26637  009738  C080  F099         	movff	?___flmul+1,___fladd@b+1
 26638  00973C  C081  F09A         	movff	?___flmul+2,___fladd@b+2
 26639  009740  C082  F09B         	movff	?___flmul+3,___fladd@b+3
 26640  009744  EC53  F01A         	call	___fladd	;wreg free
 26641  009748  C098  F0A8         	movff	?___fladd,___fltol@f1
 26642  00974C  C099  F0A9         	movff	?___fladd+1,___fltol@f1+1
 26643  009750  C09A  F0AA         	movff	?___fladd+2,___fltol@f1+2
 26644  009754  C09B  F0AB         	movff	?___fladd+3,___fltol@f1+3
 26645  009758  EC43  F03F         	call	___fltol	;wreg free
 26646  00975C  0100               	movlb	0	; force () banked
 26647  00975E  51A8               	movf	?___fltol& (0+255),w,b
 26648                           
 26649                           ; BSR set to: 0
 26650  009760  0012               	return		;funcret
 26651  009762                     __end_of_get_lqi:
 26652                           	callstack 0
 26653                           
 26654 ;; *************** function ___xxtofl *****************
 26655 ;; Defined at:
 26656 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
 26657 ;; Parameters:    Size  Location     Type
 26658 ;;  sign            1    wreg     unsigned char 
 26659 ;;  val             4   17[BANK0 ] long 
 26660 ;; Auto vars:     Size  Location     Type
 26661 ;;  sign            1   25[BANK0 ] unsigned char 
 26662 ;;  arg             4   27[BANK0 ] unsigned long 
 26663 ;;  exp             1   26[BANK0 ] unsigned char 
 26664 ;; Return value:  Size  Location     Type
 26665 ;;                  4   17[BANK0 ] unsigned char 
 26666 ;; Registers used:
 26667 ;;		wreg, status,2, status,0
 26668 ;; Tracked objects:
 26669 ;;		On entry : 3F/0
 26670 ;;		On exit  : 3F/0
 26671 ;;		Unchanged: 0/0
 26672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26673 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26674 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26675 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26676 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26677 ;;Total ram usage:       14 bytes
 26678 ;; Hardware stack levels used:    1
 26679 ;; Hardware stack levels required when called:   11
 26680 ;; This function calls:
 26681 ;;		Nothing
 26682 ;; This function is called by:
 26683 ;;		_setSignalBandwidth
 26684 ;;		_get_lqi
 26685 ;; This function uses a non-reentrant model
 26686 ;;
 26687                           
 26688                           	psect	text148
 26689  0060D4                     __ptext148:
 26690                           	callstack 0
 26691  0060D4                     ___xxtofl:
 26692                           	callstack 14
 26693                           
 26694                           ; BSR set to: 0
 26695                           ;incstack = 0
 26696                           ;___xxtofl@sign stored from wreg
 26697  0060D4  0100               	movlb	0	; () banked
 26698  0060D6  6F79               	movwf	___xxtofl@sign& (0+255),b
 26699  0060D8  0100               	movlb	0	; () banked
 26700  0060DA  5179               	movf	___xxtofl@sign& (0+255),w,b
 26701  0060DC  A4D8               	btfss	status,2,c
 26702                           
 26703                           ; BSR set to: 0
 26704  0060DE  AF74               	btfss	(___xxtofl@val+3)& (0+255),7,b
 26705  0060E0  D01A               	goto	l4754
 26706                           
 26707                           ; BSR set to: 0
 26708  0060E2  C071  F075         	movff	___xxtofl@val,??___xxtofl
 26709  0060E6  C072  F076         	movff	___xxtofl@val+1,??___xxtofl+1
 26710  0060EA  C073  F077         	movff	___xxtofl@val+2,??___xxtofl+2
 26711  0060EE  C074  F078         	movff	___xxtofl@val+3,??___xxtofl+3
 26712  0060F2  1F75               	comf	??___xxtofl& (0+255),f,b
 26713  0060F4  1F76               	comf	(??___xxtofl+1)& (0+255),f,b
 26714  0060F6  1F77               	comf	(??___xxtofl+2)& (0+255),f,b
 26715  0060F8  1F78               	comf	(??___xxtofl+3)& (0+255),f,b
 26716  0060FA  2B75               	incf	??___xxtofl& (0+255),f,b
 26717  0060FC  0E00               	movlw	0
 26718  0060FE  2376               	addwfc	(??___xxtofl+1)& (0+255),f,b
 26719  006100  2377               	addwfc	(??___xxtofl+2)& (0+255),f,b
 26720  006102  2378               	addwfc	(??___xxtofl+3)& (0+255),f,b
 26721  006104  C075  F07B         	movff	??___xxtofl,___xxtofl@arg
 26722  006108  C076  F07C         	movff	??___xxtofl+1,___xxtofl@arg+1
 26723  00610C  C077  F07D         	movff	??___xxtofl+2,___xxtofl@arg+2
 26724  006110  C078  F07E         	movff	??___xxtofl+3,___xxtofl@arg+3
 26725  006114  D008               	goto	l13112
 26726  006116                     l4754:
 26727                           
 26728                           ; BSR set to: 0
 26729  006116  C071  F07B         	movff	___xxtofl@val,___xxtofl@arg
 26730  00611A  C072  F07C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 26731  00611E  C073  F07D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 26732  006122  C074  F07E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 26733  006126                     l13112:
 26734                           
 26735                           ; BSR set to: 0
 26736  006126  5171               	movf	___xxtofl@val& (0+255),w,b
 26737  006128  1172               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 26738  00612A  1173               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 26739  00612C  1174               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 26740  00612E  A4D8               	btfss	status,2,c
 26741  006130  D009               	goto	l13118
 26742                           
 26743                           ; BSR set to: 0
 26744  006132  0E00               	movlw	0
 26745  006134  6F71               	movwf	?___xxtofl& (0+255),b
 26746  006136  0E00               	movlw	0
 26747  006138  6F72               	movwf	(?___xxtofl+1)& (0+255),b
 26748  00613A  0E00               	movlw	0
 26749  00613C  6F73               	movwf	(?___xxtofl+2)& (0+255),b
 26750  00613E  0E00               	movlw	0
 26751  006140  6F74               	movwf	(?___xxtofl+3)& (0+255),b
 26752  006142  0012               	return	
 26753  006144                     l13118:
 26754                           
 26755                           ; BSR set to: 0
 26756  006144  0E96               	movlw	150
 26757  006146  6F7A               	movwf	___xxtofl@exp& (0+255),b
 26758  006148  D006               	goto	l13122
 26759  00614A                     l13120:
 26760                           
 26761                           ; BSR set to: 0
 26762  00614A  2B7A               	incf	___xxtofl@exp& (0+255),f,b
 26763  00614C  90D8               	bcf	status,0,c
 26764  00614E  337E               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 26765  006150  337D               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 26766  006152  337C               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 26767  006154  337B               	rrcf	___xxtofl@arg& (0+255),f,b
 26768  006156                     l13122:
 26769                           
 26770                           ; BSR set to: 0
 26771  006156  0E00               	movlw	0
 26772  006158  157B               	andwf	___xxtofl@arg& (0+255),w,b
 26773  00615A  6F75               	movwf	??___xxtofl& (0+255),b
 26774  00615C  0E00               	movlw	0
 26775  00615E  157C               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 26776  006160  6F76               	movwf	(??___xxtofl+1)& (0+255),b
 26777  006162  0E00               	movlw	0
 26778  006164  157D               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 26779  006166  6F77               	movwf	(??___xxtofl+2)& (0+255),b
 26780  006168  0EFE               	movlw	254
 26781  00616A  157E               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 26782  00616C  6F78               	movwf	(??___xxtofl+3)& (0+255),b
 26783  00616E  5175               	movf	??___xxtofl& (0+255),w,b
 26784  006170  1176               	iorwf	(??___xxtofl+1)& (0+255),w,b
 26785  006172  1177               	iorwf	(??___xxtofl+2)& (0+255),w,b
 26786  006174  1178               	iorwf	(??___xxtofl+3)& (0+255),w,b
 26787  006176  B4D8               	btfsc	status,2,c
 26788  006178  D00D               	goto	l4761
 26789  00617A  D7E7               	goto	l13120
 26790  00617C                     l13124:
 26791                           
 26792                           ; BSR set to: 0
 26793  00617C  2B7A               	incf	___xxtofl@exp& (0+255),f,b
 26794                           
 26795                           ; BSR set to: 0
 26796  00617E  0E01               	movlw	1
 26797  006180  277B               	addwf	___xxtofl@arg& (0+255),f,b
 26798  006182  0E00               	movlw	0
 26799  006184  237C               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 26800  006186  237D               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 26801  006188  237E               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 26802                           
 26803                           ; BSR set to: 0
 26804  00618A  90D8               	bcf	status,0,c
 26805  00618C  337E               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 26806  00618E  337D               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 26807  006190  337C               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 26808  006192  337B               	rrcf	___xxtofl@arg& (0+255),f,b
 26809  006194                     l4761:
 26810                           
 26811                           ; BSR set to: 0
 26812  006194  0E00               	movlw	0
 26813  006196  157B               	andwf	___xxtofl@arg& (0+255),w,b
 26814  006198  6F75               	movwf	??___xxtofl& (0+255),b
 26815  00619A  0E00               	movlw	0
 26816  00619C  157C               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 26817  00619E  6F76               	movwf	(??___xxtofl+1)& (0+255),b
 26818  0061A0  0E00               	movlw	0
 26819  0061A2  157D               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 26820  0061A4  6F77               	movwf	(??___xxtofl+2)& (0+255),b
 26821  0061A6  0EFF               	movlw	255
 26822  0061A8  157E               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 26823  0061AA  6F78               	movwf	(??___xxtofl+3)& (0+255),b
 26824  0061AC  5175               	movf	??___xxtofl& (0+255),w,b
 26825  0061AE  1176               	iorwf	(??___xxtofl+1)& (0+255),w,b
 26826  0061B0  1177               	iorwf	(??___xxtofl+2)& (0+255),w,b
 26827  0061B2  1178               	iorwf	(??___xxtofl+3)& (0+255),w,b
 26828  0061B4  B4D8               	btfsc	status,2,c
 26829  0061B6  D007               	goto	l13132
 26830  0061B8  D7E1               	goto	l13124
 26831  0061BA                     l13130:
 26832                           
 26833                           ; BSR set to: 0
 26834  0061BA  077A               	decf	___xxtofl@exp& (0+255),f,b
 26835  0061BC  90D8               	bcf	status,0,c
 26836  0061BE  377B               	rlcf	___xxtofl@arg& (0+255),f,b
 26837  0061C0  377C               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 26838  0061C2  377D               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 26839  0061C4  377E               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 26840  0061C6                     l13132:
 26841                           
 26842                           ; BSR set to: 0
 26843  0061C6  BF7D               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 26844  0061C8  D003               	goto	u9830
 26845                           
 26846                           ; BSR set to: 0
 26847  0061CA  0E02               	movlw	2
 26848  0061CC  617A               	cpfslt	___xxtofl@exp& (0+255),b
 26849  0061CE  D7F5               	goto	l13130
 26850  0061D0                     u9830:
 26851                           
 26852                           ; BSR set to: 0
 26853  0061D0  A17A               	btfss	___xxtofl@exp& (0+255),0,b
 26854                           
 26855                           ; BSR set to: 0
 26856  0061D2  9F7D               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 26857                           
 26858                           ; BSR set to: 0
 26859  0061D4  90D8               	bcf	status,0,c
 26860  0061D6  337A               	rrcf	___xxtofl@exp& (0+255),f,b
 26861                           
 26862                           ; BSR set to: 0
 26863  0061D8  C07A  F075         	movff	___xxtofl@exp,??___xxtofl
 26864  0061DC  6B76               	clrf	(??___xxtofl+1)& (0+255),b
 26865  0061DE  6B77               	clrf	(??___xxtofl+2)& (0+255),b
 26866  0061E0  6B78               	clrf	(??___xxtofl+3)& (0+255),b
 26867  0061E2  C075  F078         	movff	??___xxtofl,??___xxtofl+3
 26868  0061E6  6B77               	clrf	(??___xxtofl+2)& (0+255),b
 26869  0061E8  6B76               	clrf	(??___xxtofl+1)& (0+255),b
 26870  0061EA  6B75               	clrf	??___xxtofl& (0+255),b
 26871  0061EC  5175               	movf	??___xxtofl& (0+255),w,b
 26872  0061EE  137B               	iorwf	___xxtofl@arg& (0+255),f,b
 26873  0061F0  5176               	movf	(??___xxtofl+1)& (0+255),w,b
 26874  0061F2  137C               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 26875  0061F4  5177               	movf	(??___xxtofl+2)& (0+255),w,b
 26876  0061F6  137D               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 26877  0061F8  5178               	movf	(??___xxtofl+3)& (0+255),w,b
 26878  0061FA  137E               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 26879                           
 26880                           ; BSR set to: 0
 26881  0061FC  5179               	movf	___xxtofl@sign& (0+255),w,b
 26882  0061FE  A4D8               	btfss	status,2,c
 26883                           
 26884                           ; BSR set to: 0
 26885  006200  AF74               	btfss	(___xxtofl@val+3)& (0+255),7,b
 26886  006202  D001               	goto	l13148
 26887                           
 26888                           ; BSR set to: 0
 26889  006204  8F7E               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 26890  006206                     l13148:
 26891                           
 26892                           ; BSR set to: 0
 26893  006206  C07B  F071         	movff	___xxtofl@arg,?___xxtofl
 26894  00620A  C07C  F072         	movff	___xxtofl@arg+1,?___xxtofl+1
 26895  00620E  C07D  F073         	movff	___xxtofl@arg+2,?___xxtofl+2
 26896  006212  C07E  F074         	movff	___xxtofl@arg+3,?___xxtofl+3
 26897                           
 26898                           ; BSR set to: 0
 26899  006216  0012               	return		;funcret
 26900  006218                     __end_of___xxtofl:
 26901                           	callstack 0
 26902                           
 26903 ;; *************** function ___fltol *****************
 26904 ;; Defined at:
 26905 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
 26906 ;; Parameters:    Size  Location     Type
 26907 ;;  f1              4   72[BANK0 ] unsigned char 
 26908 ;; Auto vars:     Size  Location     Type
 26909 ;;  exp1            1   81[BANK0 ] unsigned char 
 26910 ;;  sign1           1   80[BANK0 ] unsigned char 
 26911 ;; Return value:  Size  Location     Type
 26912 ;;                  4   72[BANK0 ] long 
 26913 ;; Registers used:
 26914 ;;		wreg, status,2, status,0
 26915 ;; Tracked objects:
 26916 ;;		On entry : 3F/0
 26917 ;;		On exit  : 3F/0
 26918 ;;		Unchanged: 0/0
 26919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26920 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26921 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26922 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26923 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26924 ;;Total ram usage:       10 bytes
 26925 ;; Hardware stack levels used:    1
 26926 ;; Hardware stack levels required when called:   11
 26927 ;; This function calls:
 26928 ;;		Nothing
 26929 ;; This function is called by:
 26930 ;;		_get_lqi
 26931 ;; This function uses a non-reentrant model
 26932 ;;
 26933                           
 26934                           	psect	text149
 26935  007E86                     __ptext149:
 26936                           	callstack 0
 26937  007E86                     ___fltol:
 26938                           	callstack 14
 26939                           
 26940                           ; BSR set to: 0
 26941                           ;incstack = 0
 26942  007E86  0100               	movlb	0	; () banked
 26943  007E88  35AA               	rlcf	(___fltol@f1+2)& (0+255),w,b
 26944  007E8A  35AB               	rlcf	(___fltol@f1+3)& (0+255),w,b
 26945  007E8C  6FB1               	movwf	___fltol@exp1& (0+255),b
 26946  007E8E  51B1               	movf	___fltol@exp1& (0+255),w,b
 26947  007E90  A4D8               	btfss	status,2,c
 26948  007E92  D009               	goto	l13018
 26949                           
 26950                           ; BSR set to: 0
 26951  007E94  0E00               	movlw	0
 26952  007E96  6FA8               	movwf	?___fltol& (0+255),b
 26953  007E98  0E00               	movlw	0
 26954  007E9A  6FA9               	movwf	(?___fltol+1)& (0+255),b
 26955  007E9C  0E00               	movlw	0
 26956  007E9E  6FAA               	movwf	(?___fltol+2)& (0+255),b
 26957  007EA0  0E00               	movlw	0
 26958  007EA2  6FAB               	movwf	(?___fltol+3)& (0+255),b
 26959  007EA4  0012               	return	
 26960  007EA6                     l13018:
 26961                           
 26962                           ; BSR set to: 0
 26963  007EA6  C0A8  F0AC         	movff	___fltol@f1,??___fltol
 26964  007EAA  C0A9  F0AD         	movff	___fltol@f1+1,??___fltol+1
 26965  007EAE  C0AA  F0AE         	movff	___fltol@f1+2,??___fltol+2
 26966  007EB2  C0AB  F0AF         	movff	___fltol@f1+3,??___fltol+3
 26967  007EB6  0E20               	movlw	32
 26968  007EB8  D005               	goto	u9630
 26969  007EBA                     u9635:
 26970  007EBA  90D8               	bcf	status,0,c
 26971  007EBC  33AF               	rrcf	(??___fltol+3)& (0+255),f,b
 26972  007EBE  33AE               	rrcf	(??___fltol+2)& (0+255),f,b
 26973  007EC0  33AD               	rrcf	(??___fltol+1)& (0+255),f,b
 26974  007EC2  33AC               	rrcf	??___fltol& (0+255),f,b
 26975  007EC4                     u9630:
 26976  007EC4  2EE8               	decfsz	wreg,f,c
 26977  007EC6  D7F9               	goto	u9635
 26978  007EC8  51AC               	movf	??___fltol& (0+255),w,b
 26979  007ECA  6FB0               	movwf	___fltol@sign1& (0+255),b
 26980                           
 26981                           ; BSR set to: 0
 26982  007ECC  8FAA               	bsf	(___fltol@f1+2)& (0+255),7,b
 26983                           
 26984                           ; BSR set to: 0
 26985  007ECE  0EFF               	movlw	255
 26986  007ED0  17A8               	andwf	___fltol@f1& (0+255),f,b
 26987  007ED2  0EFF               	movlw	255
 26988  007ED4  17A9               	andwf	(___fltol@f1+1)& (0+255),f,b
 26989  007ED6  0EFF               	movlw	255
 26990  007ED8  17AA               	andwf	(___fltol@f1+2)& (0+255),f,b
 26991  007EDA  0E00               	movlw	0
 26992  007EDC  17AB               	andwf	(___fltol@f1+3)& (0+255),f,b
 26993                           
 26994                           ; BSR set to: 0
 26995  007EDE  0E96               	movlw	150
 26996  007EE0  5FB1               	subwf	___fltol@exp1& (0+255),f,b
 26997                           
 26998                           ; BSR set to: 0
 26999  007EE2  AFB1               	btfss	___fltol@exp1& (0+255),7,b
 27000  007EE4  D016               	goto	l13038
 27001                           
 27002                           ; BSR set to: 0
 27003  007EE6  51B1               	movf	___fltol@exp1& (0+255),w,b
 27004  007EE8  0A80               	xorlw	128
 27005  007EEA  0F97               	addlw	151
 27006  007EEC  B0D8               	btfsc	status,0,c
 27007  007EEE  D009               	goto	l13034
 27008                           
 27009                           ; BSR set to: 0
 27010  007EF0  0E00               	movlw	0
 27011  007EF2  6FA8               	movwf	?___fltol& (0+255),b
 27012  007EF4  0E00               	movlw	0
 27013  007EF6  6FA9               	movwf	(?___fltol+1)& (0+255),b
 27014  007EF8  0E00               	movlw	0
 27015  007EFA  6FAA               	movwf	(?___fltol+2)& (0+255),b
 27016  007EFC  0E00               	movlw	0
 27017  007EFE  6FAB               	movwf	(?___fltol+3)& (0+255),b
 27018  007F00  0012               	return	
 27019  007F02                     l13034:
 27020                           
 27021                           ; BSR set to: 0
 27022  007F02  90D8               	bcf	status,0,c
 27023  007F04  33AB               	rrcf	(___fltol@f1+3)& (0+255),f,b
 27024  007F06  33AA               	rrcf	(___fltol@f1+2)& (0+255),f,b
 27025  007F08  33A9               	rrcf	(___fltol@f1+1)& (0+255),f,b
 27026  007F0A  33A8               	rrcf	___fltol@f1& (0+255),f,b
 27027                           
 27028                           ; BSR set to: 0
 27029  007F0C  3FB1               	incfsz	___fltol@exp1& (0+255),f,b
 27030  007F0E  D7F9               	goto	l13034
 27031  007F10  D015               	goto	u9670
 27032  007F12                     l13038:
 27033                           
 27034                           ; BSR set to: 0
 27035  007F12  0E1F               	movlw	31
 27036  007F14  65B1               	cpfsgt	___fltol@exp1& (0+255),b
 27037  007F16  D00F               	goto	l13046
 27038                           
 27039                           ; BSR set to: 0
 27040  007F18  0E00               	movlw	0
 27041  007F1A  6FA8               	movwf	?___fltol& (0+255),b
 27042  007F1C  0E00               	movlw	0
 27043  007F1E  6FA9               	movwf	(?___fltol+1)& (0+255),b
 27044  007F20  0E00               	movlw	0
 27045  007F22  6FAA               	movwf	(?___fltol+2)& (0+255),b
 27046  007F24  0E00               	movlw	0
 27047  007F26  6FAB               	movwf	(?___fltol+3)& (0+255),b
 27048  007F28  0012               	return	
 27049  007F2A                     l13044:
 27050                           
 27051                           ; BSR set to: 0
 27052  007F2A  90D8               	bcf	status,0,c
 27053  007F2C  37A8               	rlcf	___fltol@f1& (0+255),f,b
 27054  007F2E  37A9               	rlcf	(___fltol@f1+1)& (0+255),f,b
 27055  007F30  37AA               	rlcf	(___fltol@f1+2)& (0+255),f,b
 27056  007F32  37AB               	rlcf	(___fltol@f1+3)& (0+255),f,b
 27057  007F34  07B1               	decf	___fltol@exp1& (0+255),f,b
 27058  007F36                     l13046:
 27059                           
 27060                           ; BSR set to: 0
 27061  007F36  51B1               	movf	___fltol@exp1& (0+255),w,b
 27062  007F38  A4D8               	btfss	status,2,c
 27063  007F3A  D7F7               	goto	l13044
 27064  007F3C                     u9670:
 27065                           
 27066                           ; BSR set to: 0
 27067  007F3C  51B0               	movf	___fltol@sign1& (0+255),w,b
 27068  007F3E  B4D8               	btfsc	status,2,c
 27069  007F40  D008               	goto	l13052
 27070                           
 27071                           ; BSR set to: 0
 27072  007F42  1FAB               	comf	(___fltol@f1+3)& (0+255),f,b
 27073  007F44  1FAA               	comf	(___fltol@f1+2)& (0+255),f,b
 27074  007F46  1FA9               	comf	(___fltol@f1+1)& (0+255),f,b
 27075  007F48  6DA8               	negf	___fltol@f1& (0+255),b
 27076  007F4A  0E00               	movlw	0
 27077  007F4C  23A9               	addwfc	(___fltol@f1+1)& (0+255),f,b
 27078  007F4E  23AA               	addwfc	(___fltol@f1+2)& (0+255),f,b
 27079  007F50  23AB               	addwfc	(___fltol@f1+3)& (0+255),f,b
 27080  007F52                     l13052:
 27081                           
 27082                           ; BSR set to: 0
 27083  007F52  C0A8  F0A8         	movff	___fltol@f1,?___fltol
 27084  007F56  C0A9  F0A9         	movff	___fltol@f1+1,?___fltol+1
 27085  007F5A  C0AA  F0AA         	movff	___fltol@f1+2,?___fltol+2
 27086  007F5E  C0AB  F0AB         	movff	___fltol@f1+3,?___fltol+3
 27087                           
 27088                           ; BSR set to: 0
 27089  007F62  0012               	return		;funcret
 27090  007F64                     __end_of___fltol:
 27091                           	callstack 0
 27092                           
 27093 ;; *************** function ___flmul *****************
 27094 ;; Defined at:
 27095 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
 27096 ;; Parameters:    Size  Location     Type
 27097 ;;  b               4   31[BANK0 ] long 
 27098 ;;  a               4   35[BANK0 ] long 
 27099 ;; Auto vars:     Size  Location     Type
 27100 ;;  prod            4   50[BANK0 ] struct .
 27101 ;;  grs             4   45[BANK0 ] unsigned long 
 27102 ;;  temp            2   54[BANK0 ] struct .
 27103 ;;  bexp            1   49[BANK0 ] unsigned char 
 27104 ;;  aexp            1   44[BANK0 ] unsigned char 
 27105 ;;  sign            1   43[BANK0 ] unsigned char 
 27106 ;; Return value:  Size  Location     Type
 27107 ;;                  4   31[BANK0 ] unsigned char 
 27108 ;; Registers used:
 27109 ;;		wreg, status,2, status,0, prodl, prodh
 27110 ;; Tracked objects:
 27111 ;;		On entry : 3F/0
 27112 ;;		On exit  : 3F/0
 27113 ;;		Unchanged: 0/0
 27114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27115 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27116 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27117 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27118 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27119 ;;Total ram usage:       25 bytes
 27120 ;; Hardware stack levels used:    1
 27121 ;; Hardware stack levels required when called:   11
 27122 ;; This function calls:
 27123 ;;		Nothing
 27124 ;; This function is called by:
 27125 ;;		_get_lqi
 27126 ;; This function uses a non-reentrant model
 27127 ;;
 27128                           
 27129                           	psect	text150
 27130  0027CC                     __ptext150:
 27131                           	callstack 0
 27132  0027CC                     ___flmul:
 27133                           	callstack 14
 27134                           
 27135                           ; BSR set to: 0
 27136                           ;incstack = 0
 27137  0027CC  0100               	movlb	0	; () banked
 27138  0027CE  5182               	movf	(___flmul@b+3)& (0+255),w,b
 27139  0027D0  0B80               	andlw	128
 27140  0027D2  6F8B               	movwf	___flmul@sign& (0+255),b
 27141  0027D4  5182               	movf	(___flmul@b+3)& (0+255),w,b
 27142  0027D6  2582               	addwf	(___flmul@b+3)& (0+255),w,b
 27143  0027D8  6F91               	movwf	___flmul@bexp& (0+255),b
 27144                           
 27145                           ; BSR set to: 0
 27146  0027DA  BF81               	btfsc	(___flmul@b+2)& (0+255),7,b
 27147                           
 27148                           ; BSR set to: 0
 27149  0027DC  8191               	bsf	___flmul@bexp& (0+255),0,b
 27150                           
 27151                           ; BSR set to: 0
 27152  0027DE  5191               	movf	___flmul@bexp& (0+255),w,b
 27153  0027E0  B4D8               	btfsc	status,2,c
 27154  0027E2  D00D               	goto	l12874
 27155                           
 27156                           ; BSR set to: 0
 27157  0027E4  2991               	incf	___flmul@bexp& (0+255),w,b
 27158  0027E6  A4D8               	btfss	status,2,c
 27159  0027E8  D008               	goto	l12872
 27160                           
 27161                           ; BSR set to: 0
 27162  0027EA  0E00               	movlw	0
 27163  0027EC  6F7F               	movwf	___flmul@b& (0+255),b
 27164  0027EE  0E00               	movlw	0
 27165  0027F0  6F80               	movwf	(___flmul@b+1)& (0+255),b
 27166  0027F2  0E00               	movlw	0
 27167  0027F4  6F81               	movwf	(___flmul@b+2)& (0+255),b
 27168  0027F6  0E00               	movlw	0
 27169  0027F8  6F82               	movwf	(___flmul@b+3)& (0+255),b
 27170  0027FA                     l12872:
 27171                           
 27172                           ; BSR set to: 0
 27173  0027FA  8F81               	bsf	(___flmul@b+2)& (0+255),7,b
 27174  0027FC  D008               	goto	l12876
 27175  0027FE                     l12874:
 27176                           
 27177                           ; BSR set to: 0
 27178  0027FE  0E00               	movlw	0
 27179  002800  6F7F               	movwf	___flmul@b& (0+255),b
 27180  002802  0E00               	movlw	0
 27181  002804  6F80               	movwf	(___flmul@b+1)& (0+255),b
 27182  002806  0E00               	movlw	0
 27183  002808  6F81               	movwf	(___flmul@b+2)& (0+255),b
 27184  00280A  0E00               	movlw	0
 27185  00280C  6F82               	movwf	(___flmul@b+3)& (0+255),b
 27186  00280E                     l12876:
 27187                           
 27188                           ; BSR set to: 0
 27189  00280E  5186               	movf	(___flmul@a+3)& (0+255),w,b
 27190  002810  0B80               	andlw	128
 27191  002812  1B8B               	xorwf	___flmul@sign& (0+255),f,b
 27192                           
 27193                           ; BSR set to: 0
 27194  002814  5186               	movf	(___flmul@a+3)& (0+255),w,b
 27195  002816  2586               	addwf	(___flmul@a+3)& (0+255),w,b
 27196  002818  6F8C               	movwf	___flmul@aexp& (0+255),b
 27197                           
 27198                           ; BSR set to: 0
 27199  00281A  BF85               	btfsc	(___flmul@a+2)& (0+255),7,b
 27200                           
 27201                           ; BSR set to: 0
 27202  00281C  818C               	bsf	___flmul@aexp& (0+255),0,b
 27203                           
 27204                           ; BSR set to: 0
 27205  00281E  518C               	movf	___flmul@aexp& (0+255),w,b
 27206  002820  B4D8               	btfsc	status,2,c
 27207  002822  D00D               	goto	l12892
 27208                           
 27209                           ; BSR set to: 0
 27210  002824  298C               	incf	___flmul@aexp& (0+255),w,b
 27211  002826  A4D8               	btfss	status,2,c
 27212  002828  D008               	goto	l12890
 27213                           
 27214                           ; BSR set to: 0
 27215  00282A  0E00               	movlw	0
 27216  00282C  6F83               	movwf	___flmul@a& (0+255),b
 27217  00282E  0E00               	movlw	0
 27218  002830  6F84               	movwf	(___flmul@a+1)& (0+255),b
 27219  002832  0E00               	movlw	0
 27220  002834  6F85               	movwf	(___flmul@a+2)& (0+255),b
 27221  002836  0E00               	movlw	0
 27222  002838  6F86               	movwf	(___flmul@a+3)& (0+255),b
 27223  00283A                     l12890:
 27224                           
 27225                           ; BSR set to: 0
 27226  00283A  8F85               	bsf	(___flmul@a+2)& (0+255),7,b
 27227  00283C  D008               	goto	l4713
 27228  00283E                     l12892:
 27229                           
 27230                           ; BSR set to: 0
 27231  00283E  0E00               	movlw	0
 27232  002840  6F83               	movwf	___flmul@a& (0+255),b
 27233  002842  0E00               	movlw	0
 27234  002844  6F84               	movwf	(___flmul@a+1)& (0+255),b
 27235  002846  0E00               	movlw	0
 27236  002848  6F85               	movwf	(___flmul@a+2)& (0+255),b
 27237  00284A  0E00               	movlw	0
 27238  00284C  6F86               	movwf	(___flmul@a+3)& (0+255),b
 27239  00284E                     l4713:
 27240                           
 27241                           ; BSR set to: 0
 27242  00284E  518C               	movf	___flmul@aexp& (0+255),w,b
 27243  002850  B4D8               	btfsc	status,2,c
 27244  002852  D003               	goto	u9460
 27245                           
 27246                           ; BSR set to: 0
 27247  002854  5191               	movf	___flmul@bexp& (0+255),w,b
 27248  002856  A4D8               	btfss	status,2,c
 27249  002858  D009               	goto	l12900
 27250  00285A                     u9460:
 27251                           
 27252                           ; BSR set to: 0
 27253  00285A  0E00               	movlw	0
 27254  00285C  6F7F               	movwf	?___flmul& (0+255),b
 27255  00285E  0E00               	movlw	0
 27256  002860  6F80               	movwf	(?___flmul+1)& (0+255),b
 27257  002862  0E00               	movlw	0
 27258  002864  6F81               	movwf	(?___flmul+2)& (0+255),b
 27259  002866  0E00               	movlw	0
 27260  002868  6F82               	movwf	(?___flmul+3)& (0+255),b
 27261  00286A  0012               	return	
 27262  00286C                     l12900:
 27263                           
 27264                           ; BSR set to: 0
 27265  00286C  5185               	movf	(___flmul@a+2)& (0+255),w,b
 27266  00286E  037F               	mulwf	___flmul@b& (0+255),b
 27267  002870  006F FFCC  F096    	movff	prodl,___flmul@temp
 27268  002876  006F FFD0  F097    	movff	prodh,___flmul@temp+1
 27269                           
 27270                           ; BSR set to: 0
 27271  00287C  5196               	movf	___flmul@temp& (0+255),w,b
 27272  00287E  6F8D               	movwf	___flmul@grs& (0+255),b
 27273  002880  6B8E               	clrf	(___flmul@grs+1)& (0+255),b
 27274  002882  6B8F               	clrf	(___flmul@grs+2)& (0+255),b
 27275  002884  6B90               	clrf	(___flmul@grs+3)& (0+255),b
 27276                           
 27277                           ; BSR set to: 0
 27278  002886  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 27279  002888  6F92               	movwf	___flmul@prod& (0+255),b
 27280  00288A  6B93               	clrf	(___flmul@prod+1)& (0+255),b
 27281  00288C  6B94               	clrf	(___flmul@prod+2)& (0+255),b
 27282  00288E  6B95               	clrf	(___flmul@prod+3)& (0+255),b
 27283  002890  5184               	movf	(___flmul@a+1)& (0+255),w,b
 27284  002892  0380               	mulwf	(___flmul@b+1)& (0+255),b
 27285  002894  006F FFCC  F096    	movff	prodl,___flmul@temp
 27286  00289A  006F FFD0  F097    	movff	prodh,___flmul@temp+1
 27287                           
 27288                           ; BSR set to: 0
 27289  0028A0  5196               	movf	___flmul@temp& (0+255),w,b
 27290  0028A2  278D               	addwf	___flmul@grs& (0+255),f,b
 27291  0028A4  0E00               	movlw	0
 27292  0028A6  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 27293  0028A8  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 27294  0028AA  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 27295                           
 27296                           ; BSR set to: 0
 27297  0028AC  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 27298  0028AE  2792               	addwf	___flmul@prod& (0+255),f,b
 27299  0028B0  0E00               	movlw	0
 27300  0028B2  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27301  0028B4  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27302  0028B6  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27303  0028B8  5183               	movf	___flmul@a& (0+255),w,b
 27304  0028BA  0381               	mulwf	(___flmul@b+2)& (0+255),b
 27305  0028BC  006F FFCC  F096    	movff	prodl,___flmul@temp
 27306  0028C2  006F FFD0  F097    	movff	prodh,___flmul@temp+1
 27307                           
 27308                           ; BSR set to: 0
 27309  0028C8  5196               	movf	___flmul@temp& (0+255),w,b
 27310  0028CA  278D               	addwf	___flmul@grs& (0+255),f,b
 27311  0028CC  0E00               	movlw	0
 27312  0028CE  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 27313  0028D0  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 27314  0028D2  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 27315                           
 27316                           ; BSR set to: 0
 27317  0028D4  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 27318  0028D6  2792               	addwf	___flmul@prod& (0+255),f,b
 27319  0028D8  0E00               	movlw	0
 27320  0028DA  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27321  0028DC  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27322  0028DE  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27323                           
 27324                           ; BSR set to: 0
 27325  0028E0  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
 27326  0028E4  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
 27327  0028E8  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
 27328  0028EC  6B8D               	clrf	___flmul@grs& (0+255),b
 27329                           
 27330                           ; BSR set to: 0
 27331  0028EE  5183               	movf	___flmul@a& (0+255),w,b
 27332  0028F0  0380               	mulwf	(___flmul@b+1)& (0+255),b
 27333  0028F2  006F FFCC  F096    	movff	prodl,___flmul@temp
 27334  0028F8  006F FFD0  F097    	movff	prodh,___flmul@temp+1
 27335                           
 27336                           ; BSR set to: 0
 27337  0028FE  5196               	movf	___flmul@temp& (0+255),w,b
 27338  002900  278D               	addwf	___flmul@grs& (0+255),f,b
 27339  002902  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 27340  002904  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 27341  002906  0E00               	movlw	0
 27342  002908  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 27343  00290A  0E00               	movlw	0
 27344  00290C  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 27345                           
 27346                           ; BSR set to: 0
 27347  00290E  5184               	movf	(___flmul@a+1)& (0+255),w,b
 27348  002910  037F               	mulwf	___flmul@b& (0+255),b
 27349  002912  006F FFCC  F096    	movff	prodl,___flmul@temp
 27350  002918  006F FFD0  F097    	movff	prodh,___flmul@temp+1
 27351                           
 27352                           ; BSR set to: 0
 27353  00291E  5196               	movf	___flmul@temp& (0+255),w,b
 27354  002920  278D               	addwf	___flmul@grs& (0+255),f,b
 27355  002922  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 27356  002924  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 27357  002926  0E00               	movlw	0
 27358  002928  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 27359  00292A  0E00               	movlw	0
 27360  00292C  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 27361                           
 27362                           ; BSR set to: 0
 27363  00292E  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
 27364  002932  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
 27365  002936  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
 27366  00293A  6B8D               	clrf	___flmul@grs& (0+255),b
 27367  00293C  5183               	movf	___flmul@a& (0+255),w,b
 27368  00293E  037F               	mulwf	___flmul@b& (0+255),b
 27369  002940  006F FFCC  F096    	movff	prodl,___flmul@temp
 27370  002946  006F FFD0  F097    	movff	prodh,___flmul@temp+1
 27371                           
 27372                           ; BSR set to: 0
 27373  00294C  5196               	movf	___flmul@temp& (0+255),w,b
 27374  00294E  278D               	addwf	___flmul@grs& (0+255),f,b
 27375  002950  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 27376  002952  238E               	addwfc	(___flmul@grs+1)& (0+255),f,b
 27377  002954  0E00               	movlw	0
 27378  002956  238F               	addwfc	(___flmul@grs+2)& (0+255),f,b
 27379  002958  0E00               	movlw	0
 27380  00295A  2390               	addwfc	(___flmul@grs+3)& (0+255),f,b
 27381                           
 27382                           ; BSR set to: 0
 27383  00295C  5185               	movf	(___flmul@a+2)& (0+255),w,b
 27384  00295E  0380               	mulwf	(___flmul@b+1)& (0+255),b
 27385  002960  006F FFCC  F096    	movff	prodl,___flmul@temp
 27386  002966  006F FFD0  F097    	movff	prodh,___flmul@temp+1
 27387  00296C  5196               	movf	___flmul@temp& (0+255),w,b
 27388  00296E  2792               	addwf	___flmul@prod& (0+255),f,b
 27389  002970  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 27390  002972  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27391  002974  0E00               	movlw	0
 27392  002976  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27393  002978  0E00               	movlw	0
 27394  00297A  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27395                           
 27396                           ; BSR set to: 0
 27397  00297C  5184               	movf	(___flmul@a+1)& (0+255),w,b
 27398  00297E  0381               	mulwf	(___flmul@b+2)& (0+255),b
 27399  002980  006F FFCC  F096    	movff	prodl,___flmul@temp
 27400  002986  006F FFD0  F097    	movff	prodh,___flmul@temp+1
 27401                           
 27402                           ; BSR set to: 0
 27403  00298C  5196               	movf	___flmul@temp& (0+255),w,b
 27404  00298E  2792               	addwf	___flmul@prod& (0+255),f,b
 27405  002990  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 27406  002992  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27407  002994  0E00               	movlw	0
 27408  002996  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27409  002998  0E00               	movlw	0
 27410  00299A  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27411  00299C  5185               	movf	(___flmul@a+2)& (0+255),w,b
 27412  00299E  0381               	mulwf	(___flmul@b+2)& (0+255),b
 27413  0029A0  006F FFCC  F096    	movff	prodl,___flmul@temp
 27414  0029A6  006F FFD0  F097    	movff	prodh,___flmul@temp+1
 27415                           
 27416                           ; BSR set to: 0
 27417  0029AC  5196               	movf	___flmul@temp& (0+255),w,b
 27418  0029AE  6F87               	movwf	??___flmul& (0+255),b
 27419  0029B0  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 27420  0029B2  6F88               	movwf	(??___flmul+1)& (0+255),b
 27421  0029B4  6B89               	clrf	(??___flmul+2)& (0+255),b
 27422  0029B6  6B8A               	clrf	(??___flmul+3)& (0+255),b
 27423  0029B8  C089  F08A         	movff	??___flmul+2,??___flmul+3
 27424  0029BC  C088  F089         	movff	??___flmul+1,??___flmul+2
 27425  0029C0  C087  F088         	movff	??___flmul,??___flmul+1
 27426  0029C4  6B87               	clrf	??___flmul& (0+255),b
 27427  0029C6  5187               	movf	??___flmul& (0+255),w,b
 27428  0029C8  2792               	addwf	___flmul@prod& (0+255),f,b
 27429  0029CA  5188               	movf	(??___flmul+1)& (0+255),w,b
 27430  0029CC  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27431  0029CE  5189               	movf	(??___flmul+2)& (0+255),w,b
 27432  0029D0  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27433  0029D2  518A               	movf	(??___flmul+3)& (0+255),w,b
 27434  0029D4  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27435                           
 27436                           ; BSR set to: 0
 27437  0029D6  5190               	movf	(___flmul@grs+3)& (0+255),w,b
 27438  0029D8  2792               	addwf	___flmul@prod& (0+255),f,b
 27439  0029DA  0E00               	movlw	0
 27440  0029DC  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27441  0029DE  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27442  0029E0  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27443                           
 27444                           ; BSR set to: 0
 27445  0029E2  C08F  F090         	movff	___flmul@grs+2,___flmul@grs+3
 27446  0029E6  C08E  F08F         	movff	___flmul@grs+1,___flmul@grs+2
 27447  0029EA  C08D  F08E         	movff	___flmul@grs,___flmul@grs+1
 27448  0029EE  6B8D               	clrf	___flmul@grs& (0+255),b
 27449                           
 27450                           ; BSR set to: 0
 27451  0029F0  518C               	movf	___flmul@aexp& (0+255),w,b
 27452  0029F2  C091  F087         	movff	___flmul@bexp,??___flmul
 27453  0029F6  6B88               	clrf	(??___flmul+1)& (0+255),b
 27454  0029F8  2787               	addwf	??___flmul& (0+255),f,b
 27455  0029FA  0E00               	movlw	0
 27456  0029FC  2388               	addwfc	(??___flmul+1)& (0+255),f,b
 27457  0029FE  0E82               	movlw	130
 27458  002A00  2587               	addwf	??___flmul& (0+255),w,b
 27459  002A02  6F96               	movwf	___flmul@temp& (0+255),b
 27460  002A04  0EFF               	movlw	255
 27461  002A06  2188               	addwfc	(??___flmul+1)& (0+255),w,b
 27462  002A08  6F97               	movwf	(___flmul@temp+1)& (0+255),b
 27463  002A0A  D00F               	goto	l12948
 27464  002A0C                     l12942:
 27465                           
 27466                           ; BSR set to: 0
 27467  002A0C  90D8               	bcf	status,0,c
 27468  002A0E  3792               	rlcf	___flmul@prod& (0+255),f,b
 27469  002A10  3793               	rlcf	(___flmul@prod+1)& (0+255),f,b
 27470  002A12  3794               	rlcf	(___flmul@prod+2)& (0+255),f,b
 27471  002A14  3795               	rlcf	(___flmul@prod+3)& (0+255),f,b
 27472                           
 27473                           ; BSR set to: 0
 27474  002A16  BF90               	btfsc	(___flmul@grs+3)& (0+255),7,b
 27475                           
 27476                           ; BSR set to: 0
 27477  002A18  8192               	bsf	___flmul@prod& (0+255),0,b
 27478                           
 27479                           ; BSR set to: 0
 27480  002A1A  90D8               	bcf	status,0,c
 27481  002A1C  378D               	rlcf	___flmul@grs& (0+255),f,b
 27482  002A1E  378E               	rlcf	(___flmul@grs+1)& (0+255),f,b
 27483  002A20  378F               	rlcf	(___flmul@grs+2)& (0+255),f,b
 27484  002A22  3790               	rlcf	(___flmul@grs+3)& (0+255),f,b
 27485  002A24  0796               	decf	___flmul@temp& (0+255),f,b
 27486  002A26  A0D8               	btfss	status,0,c
 27487  002A28  0797               	decf	(___flmul@temp+1)& (0+255),f,b
 27488  002A2A                     l12948:
 27489                           
 27490                           ; BSR set to: 0
 27491  002A2A  AF94               	btfss	(___flmul@prod+2)& (0+255),7,b
 27492  002A2C  D7EF               	goto	l12942
 27493                           
 27494                           ; BSR set to: 0
 27495  002A2E  0E00               	movlw	0
 27496  002A30  6F8C               	movwf	___flmul@aexp& (0+255),b
 27497                           
 27498                           ; BSR set to: 0
 27499  002A32  AF90               	btfss	(___flmul@grs+3)& (0+255),7,b
 27500  002A34  D016               	goto	l4722
 27501                           
 27502                           ; BSR set to: 0
 27503  002A36  0EFF               	movlw	255
 27504  002A38  158D               	andwf	___flmul@grs& (0+255),w,b
 27505  002A3A  6F87               	movwf	??___flmul& (0+255),b
 27506  002A3C  0EFF               	movlw	255
 27507  002A3E  158E               	andwf	(___flmul@grs+1)& (0+255),w,b
 27508  002A40  6F88               	movwf	(??___flmul+1)& (0+255),b
 27509  002A42  0EFF               	movlw	255
 27510  002A44  158F               	andwf	(___flmul@grs+2)& (0+255),w,b
 27511  002A46  6F89               	movwf	(??___flmul+2)& (0+255),b
 27512  002A48  0E7F               	movlw	127
 27513  002A4A  1590               	andwf	(___flmul@grs+3)& (0+255),w,b
 27514  002A4C  6F8A               	movwf	(??___flmul+3)& (0+255),b
 27515  002A4E  5187               	movf	??___flmul& (0+255),w,b
 27516  002A50  1188               	iorwf	(??___flmul+1)& (0+255),w,b
 27517  002A52  1189               	iorwf	(??___flmul+2)& (0+255),w,b
 27518  002A54  118A               	iorwf	(??___flmul+3)& (0+255),w,b
 27519  002A56  A4D8               	btfss	status,2,c
 27520  002A58  D002               	goto	u9510
 27521                           
 27522                           ; BSR set to: 0
 27523                           
 27524                           ; BSR set to: 0
 27525  002A5A  A192               	btfss	___flmul@prod& (0+255),0,b
 27526  002A5C  D002               	goto	l4722
 27527  002A5E                     u9510:
 27528                           
 27529                           ; BSR set to: 0
 27530  002A5E  0E01               	movlw	1
 27531  002A60  6F8C               	movwf	___flmul@aexp& (0+255),b
 27532  002A62                     l4722:
 27533                           
 27534                           ; BSR set to: 0
 27535  002A62  518C               	movf	___flmul@aexp& (0+255),w,b
 27536  002A64  B4D8               	btfsc	status,2,c
 27537  002A66  D01F               	goto	l12968
 27538                           
 27539                           ; BSR set to: 0
 27540  002A68  0E01               	movlw	1
 27541  002A6A  2792               	addwf	___flmul@prod& (0+255),f,b
 27542  002A6C  0E00               	movlw	0
 27543  002A6E  2393               	addwfc	(___flmul@prod+1)& (0+255),f,b
 27544  002A70  2394               	addwfc	(___flmul@prod+2)& (0+255),f,b
 27545  002A72  2395               	addwfc	(___flmul@prod+3)& (0+255),f,b
 27546                           
 27547                           ; BSR set to: 0
 27548  002A74  A195               	btfss	(___flmul@prod+3)& (0+255),0,b
 27549  002A76  D017               	goto	l12968
 27550                           
 27551                           ; BSR set to: 0
 27552  002A78  C092  F087         	movff	___flmul@prod,??___flmul
 27553  002A7C  C093  F088         	movff	___flmul@prod+1,??___flmul+1
 27554  002A80  C094  F089         	movff	___flmul@prod+2,??___flmul+2
 27555  002A84  C095  F08A         	movff	___flmul@prod+3,??___flmul+3
 27556  002A88  358A               	rlcf	(??___flmul+3)& (0+255),w,b
 27557  002A8A  338A               	rrcf	(??___flmul+3)& (0+255),f,b
 27558  002A8C  3389               	rrcf	(??___flmul+2)& (0+255),f,b
 27559  002A8E  3388               	rrcf	(??___flmul+1)& (0+255),f,b
 27560  002A90  3387               	rrcf	??___flmul& (0+255),f,b
 27561  002A92  C087  F092         	movff	??___flmul,___flmul@prod
 27562  002A96  C088  F093         	movff	??___flmul+1,___flmul@prod+1
 27563  002A9A  C089  F094         	movff	??___flmul+2,___flmul@prod+2
 27564  002A9E  C08A  F095         	movff	??___flmul+3,___flmul@prod+3
 27565                           
 27566                           ; BSR set to: 0
 27567  002AA2  4B96               	infsnz	___flmul@temp& (0+255),f,b
 27568  002AA4  2B97               	incf	(___flmul@temp+1)& (0+255),f,b
 27569  002AA6                     l12968:
 27570                           
 27571                           ; BSR set to: 0
 27572  002AA6  BF97               	btfsc	(___flmul@temp+1)& (0+255),7,b
 27573  002AA8  D00D               	goto	l12972
 27574  002AAA  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 27575  002AAC  E103               	bnz	u9540
 27576  002AAE  2996               	incf	___flmul@temp& (0+255),w,b
 27577  002AB0  A0D8               	btfss	status,0,c
 27578  002AB2  D008               	goto	l12972
 27579  002AB4                     u9540:
 27580                           
 27581                           ; BSR set to: 0
 27582  002AB4  0E00               	movlw	0
 27583  002AB6  6F92               	movwf	___flmul@prod& (0+255),b
 27584  002AB8  0E00               	movlw	0
 27585  002ABA  6F93               	movwf	(___flmul@prod+1)& (0+255),b
 27586  002ABC  0E80               	movlw	128
 27587  002ABE  6F94               	movwf	(___flmul@prod+2)& (0+255),b
 27588  002AC0  0E7F               	movlw	127
 27589  002AC2  D020               	goto	L32
 27590  002AC4                     l12972:
 27591                           
 27592                           ; BSR set to: 0
 27593  002AC4  BF97               	btfsc	(___flmul@temp+1)& (0+255),7,b
 27594  002AC6  D005               	goto	u9550
 27595  002AC8  5197               	movf	(___flmul@temp+1)& (0+255),w,b
 27596  002ACA  E10E               	bnz	l4730
 27597  002ACC  0596               	decf	___flmul@temp& (0+255),w,b
 27598  002ACE  B0D8               	btfsc	status,0,c
 27599  002AD0  D00B               	goto	l4730
 27600  002AD2                     u9550:
 27601                           
 27602                           ; BSR set to: 0
 27603  002AD2  0E00               	movlw	0
 27604  002AD4  6F92               	movwf	___flmul@prod& (0+255),b
 27605  002AD6  0E00               	movlw	0
 27606  002AD8  6F93               	movwf	(___flmul@prod+1)& (0+255),b
 27607  002ADA  0E00               	movlw	0
 27608  002ADC  6F94               	movwf	(___flmul@prod+2)& (0+255),b
 27609  002ADE  0E00               	movlw	0
 27610  002AE0  6F95               	movwf	(___flmul@prod+3)& (0+255),b
 27611  002AE2  0E00               	movlw	0
 27612  002AE4  6F8B               	movwf	___flmul@sign& (0+255),b
 27613  002AE6  D00F               	goto	l12984
 27614  002AE8                     l4730:
 27615                           
 27616                           ; BSR set to: 0
 27617  002AE8  C096  F091         	movff	___flmul@temp,___flmul@bexp
 27618                           
 27619                           ; BSR set to: 0
 27620  002AEC  0EFF               	movlw	255
 27621  002AEE  1792               	andwf	___flmul@prod& (0+255),f,b
 27622  002AF0  0EFF               	movlw	255
 27623  002AF2  1793               	andwf	(___flmul@prod+1)& (0+255),f,b
 27624  002AF4  0E7F               	movlw	127
 27625  002AF6  1794               	andwf	(___flmul@prod+2)& (0+255),f,b
 27626  002AF8  0E00               	movlw	0
 27627  002AFA  1795               	andwf	(___flmul@prod+3)& (0+255),f,b
 27628                           
 27629                           ; BSR set to: 0
 27630  002AFC  B191               	btfsc	___flmul@bexp& (0+255),0,b
 27631                           
 27632                           ; BSR set to: 0
 27633  002AFE  8F94               	bsf	(___flmul@prod+2)& (0+255),7,b
 27634                           
 27635                           ; BSR set to: 0
 27636  002B00  90D8               	bcf	status,0,c
 27637  002B02  3191               	rrcf	___flmul@bexp& (0+255),w,b
 27638  002B04                     L32:
 27639  002B04  6F95               	movwf	(___flmul@prod+3)& (0+255),b
 27640  002B06                     l12984:
 27641                           
 27642                           ; BSR set to: 0
 27643  002B06  518B               	movf	___flmul@sign& (0+255),w,b
 27644  002B08  1395               	iorwf	(___flmul@prod+3)& (0+255),f,b
 27645                           
 27646                           ; BSR set to: 0
 27647  002B0A  C092  F07F         	movff	___flmul@prod,?___flmul
 27648  002B0E  C093  F080         	movff	___flmul@prod+1,?___flmul+1
 27649  002B12  C094  F081         	movff	___flmul@prod+2,?___flmul+2
 27650  002B16  C095  F082         	movff	___flmul@prod+3,?___flmul+3
 27651                           
 27652                           ; BSR set to: 0
 27653  002B1A  0012               	return		;funcret
 27654  002B1C                     __end_of___flmul:
 27655                           	callstack 0
 27656                           
 27657 ;; *************** function ___fladd *****************
 27658 ;; Defined at:
 27659 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
 27660 ;; Parameters:    Size  Location     Type
 27661 ;;  b               4   56[BANK0 ] unsigned char 
 27662 ;;  a               4   60[BANK0 ] unsigned char 
 27663 ;; Auto vars:     Size  Location     Type
 27664 ;;  grs             1   71[BANK0 ] unsigned char 
 27665 ;;  bexp            1   70[BANK0 ] unsigned char 
 27666 ;;  aexp            1   69[BANK0 ] unsigned char 
 27667 ;;  signs           1   68[BANK0 ] unsigned char 
 27668 ;; Return value:  Size  Location     Type
 27669 ;;                  4   56[BANK0 ] unsigned char 
 27670 ;; Registers used:
 27671 ;;		wreg, status,2, status,0
 27672 ;; Tracked objects:
 27673 ;;		On entry : 3F/0
 27674 ;;		On exit  : 3F/0
 27675 ;;		Unchanged: 0/0
 27676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27677 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27678 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27679 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27680 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27681 ;;Total ram usage:       16 bytes
 27682 ;; Hardware stack levels used:    1
 27683 ;; Hardware stack levels required when called:   11
 27684 ;; This function calls:
 27685 ;;		Nothing
 27686 ;; This function is called by:
 27687 ;;		_get_lqi
 27688 ;; This function uses a non-reentrant model
 27689 ;;
 27690                           
 27691                           	psect	text151
 27692  0034A6                     __ptext151:
 27693                           	callstack 0
 27694  0034A6                     ___fladd:
 27695                           	callstack 14
 27696                           
 27697                           ; BSR set to: 0
 27698                           ;incstack = 0
 27699  0034A6  0100               	movlb	0	; () banked
 27700  0034A8  519B               	movf	(___fladd@b+3)& (0+255),w,b
 27701  0034AA  0B80               	andlw	128
 27702  0034AC  6FA4               	movwf	___fladd@signs& (0+255),b
 27703  0034AE  519B               	movf	(___fladd@b+3)& (0+255),w,b
 27704  0034B0  259B               	addwf	(___fladd@b+3)& (0+255),w,b
 27705  0034B2  6FA6               	movwf	___fladd@bexp& (0+255),b
 27706                           
 27707                           ; BSR set to: 0
 27708  0034B4  BF9A               	btfsc	(___fladd@b+2)& (0+255),7,b
 27709                           
 27710                           ; BSR set to: 0
 27711  0034B6  81A6               	bsf	___fladd@bexp& (0+255),0,b
 27712                           
 27713                           ; BSR set to: 0
 27714  0034B8  51A6               	movf	___fladd@bexp& (0+255),w,b
 27715  0034BA  B4D8               	btfsc	status,2,c
 27716  0034BC  D00D               	goto	l12674
 27717                           
 27718                           ; BSR set to: 0
 27719  0034BE  29A6               	incf	___fladd@bexp& (0+255),w,b
 27720  0034C0  A4D8               	btfss	status,2,c
 27721  0034C2  D008               	goto	l12670
 27722                           
 27723                           ; BSR set to: 0
 27724  0034C4  0E00               	movlw	0
 27725  0034C6  6F98               	movwf	___fladd@b& (0+255),b
 27726  0034C8  0E00               	movlw	0
 27727  0034CA  6F99               	movwf	(___fladd@b+1)& (0+255),b
 27728  0034CC  0E00               	movlw	0
 27729  0034CE  6F9A               	movwf	(___fladd@b+2)& (0+255),b
 27730  0034D0  0E00               	movlw	0
 27731  0034D2  6F9B               	movwf	(___fladd@b+3)& (0+255),b
 27732  0034D4                     l12670:
 27733                           
 27734                           ; BSR set to: 0
 27735  0034D4  8F9A               	bsf	(___fladd@b+2)& (0+255),7,b
 27736  0034D6  D006               	goto	L33
 27737  0034D8                     l12674:
 27738                           
 27739                           ; BSR set to: 0
 27740  0034D8  0E00               	movlw	0
 27741  0034DA  6F98               	movwf	___fladd@b& (0+255),b
 27742  0034DC  0E00               	movlw	0
 27743  0034DE  6F99               	movwf	(___fladd@b+1)& (0+255),b
 27744  0034E0  0E00               	movlw	0
 27745  0034E2  6F9A               	movwf	(___fladd@b+2)& (0+255),b
 27746  0034E4                     L33:
 27747  0034E4  0E00               	movlw	0
 27748  0034E6  6F9B               	movwf	(___fladd@b+3)& (0+255),b
 27749                           
 27750                           ; BSR set to: 0
 27751  0034E8  519F               	movf	(___fladd@a+3)& (0+255),w,b
 27752  0034EA  0B80               	andlw	128
 27753  0034EC  6FA5               	movwf	___fladd@aexp& (0+255),b
 27754                           
 27755                           ; BSR set to: 0
 27756  0034EE  51A4               	movf	___fladd@signs& (0+255),w,b
 27757  0034F0  19A5               	xorwf	___fladd@aexp& (0+255),w,b
 27758  0034F2  A4D8               	btfss	status,2,c
 27759                           
 27760                           ; BSR set to: 0
 27761  0034F4  8DA4               	bsf	___fladd@signs& (0+255),6,b
 27762                           
 27763                           ; BSR set to: 0
 27764  0034F6  519F               	movf	(___fladd@a+3)& (0+255),w,b
 27765  0034F8  259F               	addwf	(___fladd@a+3)& (0+255),w,b
 27766  0034FA  6FA5               	movwf	___fladd@aexp& (0+255),b
 27767                           
 27768                           ; BSR set to: 0
 27769  0034FC  BF9E               	btfsc	(___fladd@a+2)& (0+255),7,b
 27770                           
 27771                           ; BSR set to: 0
 27772  0034FE  81A5               	bsf	___fladd@aexp& (0+255),0,b
 27773                           
 27774                           ; BSR set to: 0
 27775  003500  51A5               	movf	___fladd@aexp& (0+255),w,b
 27776  003502  B4D8               	btfsc	status,2,c
 27777  003504  D00D               	goto	l12698
 27778                           
 27779                           ; BSR set to: 0
 27780  003506  29A5               	incf	___fladd@aexp& (0+255),w,b
 27781  003508  A4D8               	btfss	status,2,c
 27782  00350A  D008               	goto	l12694
 27783                           
 27784                           ; BSR set to: 0
 27785  00350C  0E00               	movlw	0
 27786  00350E  6F9C               	movwf	___fladd@a& (0+255),b
 27787  003510  0E00               	movlw	0
 27788  003512  6F9D               	movwf	(___fladd@a+1)& (0+255),b
 27789  003514  0E00               	movlw	0
 27790  003516  6F9E               	movwf	(___fladd@a+2)& (0+255),b
 27791  003518  0E00               	movlw	0
 27792  00351A  6F9F               	movwf	(___fladd@a+3)& (0+255),b
 27793  00351C                     l12694:
 27794                           
 27795                           ; BSR set to: 0
 27796  00351C  8F9E               	bsf	(___fladd@a+2)& (0+255),7,b
 27797  00351E  D006               	goto	L34
 27798  003520                     l12698:
 27799                           
 27800                           ; BSR set to: 0
 27801  003520  0E00               	movlw	0
 27802  003522  6F9C               	movwf	___fladd@a& (0+255),b
 27803  003524  0E00               	movlw	0
 27804  003526  6F9D               	movwf	(___fladd@a+1)& (0+255),b
 27805  003528  0E00               	movlw	0
 27806  00352A  6F9E               	movwf	(___fladd@a+2)& (0+255),b
 27807  00352C                     L34:
 27808  00352C  0E00               	movlw	0
 27809  00352E  6F9F               	movwf	(___fladd@a+3)& (0+255),b
 27810                           
 27811                           ; BSR set to: 0
 27812  003530  51A6               	movf	___fladd@bexp& (0+255),w,b
 27813  003532  5DA5               	subwf	___fladd@aexp& (0+255),w,b
 27814  003534  B0D8               	btfsc	status,0,c
 27815  003536  D022               	goto	l12736
 27816                           
 27817                           ; BSR set to: 0
 27818  003538  ADA4               	btfss	___fladd@signs& (0+255),6,b
 27819  00353A  D002               	goto	l12706
 27820                           
 27821                           ; BSR set to: 0
 27822  00353C  0E80               	movlw	128
 27823  00353E  1BA4               	xorwf	___fladd@signs& (0+255),f,b
 27824  003540                     l12706:
 27825                           
 27826                           ; BSR set to: 0
 27827  003540  C0A6  F0A7         	movff	___fladd@bexp,___fladd@grs
 27828                           
 27829                           ; BSR set to: 0
 27830  003544  C0A5  F0A6         	movff	___fladd@aexp,___fladd@bexp
 27831                           
 27832                           ; BSR set to: 0
 27833  003548  C0A7  F0A5         	movff	___fladd@grs,___fladd@aexp
 27834                           
 27835                           ; BSR set to: 0
 27836  00354C  C098  F0A7         	movff	___fladd@b,___fladd@grs
 27837                           
 27838                           ; BSR set to: 0
 27839  003550  C09C  F098         	movff	___fladd@a,___fladd@b
 27840                           
 27841                           ; BSR set to: 0
 27842  003554  C0A7  F09C         	movff	___fladd@grs,___fladd@a
 27843                           
 27844                           ; BSR set to: 0
 27845  003558  C099  F0A7         	movff	___fladd@b+1,___fladd@grs
 27846                           
 27847                           ; BSR set to: 0
 27848  00355C  C09D  F099         	movff	___fladd@a+1,___fladd@b+1
 27849                           
 27850                           ; BSR set to: 0
 27851  003560  C0A7  F09D         	movff	___fladd@grs,___fladd@a+1
 27852                           
 27853                           ; BSR set to: 0
 27854  003564  C09A  F0A7         	movff	___fladd@b+2,___fladd@grs
 27855                           
 27856                           ; BSR set to: 0
 27857  003568  C09E  F09A         	movff	___fladd@a+2,___fladd@b+2
 27858                           
 27859                           ; BSR set to: 0
 27860  00356C  C0A7  F09E         	movff	___fladd@grs,___fladd@a+2
 27861                           
 27862                           ; BSR set to: 0
 27863  003570  C09B  F0A7         	movff	___fladd@b+3,___fladd@grs
 27864                           
 27865                           ; BSR set to: 0
 27866  003574  C09F  F09B         	movff	___fladd@a+3,___fladd@b+3
 27867                           
 27868                           ; BSR set to: 0
 27869  003578  C0A7  F09F         	movff	___fladd@grs,___fladd@a+3
 27870  00357C                     l12736:
 27871                           
 27872                           ; BSR set to: 0
 27873  00357C  0E00               	movlw	0
 27874  00357E  6FA7               	movwf	___fladd@grs& (0+255),b
 27875                           
 27876                           ; BSR set to: 0
 27877  003580  51A6               	movf	___fladd@bexp& (0+255),w,b
 27878  003582  C0A5  F0A0         	movff	___fladd@aexp,??___fladd
 27879  003586  6BA1               	clrf	(??___fladd+1)& (0+255),b
 27880  003588  5FA0               	subwf	??___fladd& (0+255),f,b
 27881  00358A  0E00               	movlw	0
 27882  00358C  5BA1               	subwfb	(??___fladd+1)& (0+255),f,b
 27883  00358E  BFA1               	btfsc	(??___fladd+1)& (0+255),7,b
 27884  003590  D02C               	goto	l4628
 27885  003592  51A1               	movf	(??___fladd+1)& (0+255),w,b
 27886  003594  E104               	bnz	u9090
 27887  003596  0E1A               	movlw	26
 27888  003598  5DA0               	subwf	??___fladd& (0+255),w,b
 27889  00359A  A0D8               	btfss	status,0,c
 27890  00359C  D026               	goto	l4628
 27891  00359E                     u9090:
 27892                           
 27893                           ; BSR set to: 0
 27894  00359E  5198               	movf	___fladd@b& (0+255),w,b
 27895  0035A0  1199               	iorwf	(___fladd@b+1)& (0+255),w,b
 27896  0035A2  119A               	iorwf	(___fladd@b+2)& (0+255),w,b
 27897  0035A4  119B               	iorwf	(___fladd@b+3)& (0+255),w,b
 27898  0035A6  B4D8               	btfsc	status,2,c
 27899  0035A8  D002               	goto	u9100
 27900  0035AA  0E01               	movlw	1
 27901  0035AC  D001               	goto	u9110
 27902  0035AE                     u9100:
 27903  0035AE  0E00               	movlw	0
 27904  0035B0                     u9110:
 27905  0035B0  6FA7               	movwf	___fladd@grs& (0+255),b
 27906                           
 27907                           ; BSR set to: 0
 27908  0035B2  0E00               	movlw	0
 27909  0035B4  6F98               	movwf	___fladd@b& (0+255),b
 27910  0035B6  0E00               	movlw	0
 27911  0035B8  6F99               	movwf	(___fladd@b+1)& (0+255),b
 27912  0035BA  0E00               	movlw	0
 27913  0035BC  6F9A               	movwf	(___fladd@b+2)& (0+255),b
 27914  0035BE  0E00               	movlw	0
 27915  0035C0  6F9B               	movwf	(___fladd@b+3)& (0+255),b
 27916                           
 27917                           ; BSR set to: 0
 27918  0035C2  C0A5  F0A6         	movff	___fladd@aexp,___fladd@bexp
 27919  0035C6  D015               	goto	u9140
 27920  0035C8                     l4629:
 27921                           
 27922                           ; BSR set to: 0
 27923  0035C8  A1A7               	btfss	___fladd@grs& (0+255),0,b
 27924  0035CA  D005               	goto	l12748
 27925                           
 27926                           ; BSR set to: 0
 27927  0035CC  90D8               	bcf	status,0,c
 27928  0035CE  31A7               	rrcf	___fladd@grs& (0+255),w,b
 27929  0035D0  0901               	iorlw	1
 27930  0035D2  6FA7               	movwf	___fladd@grs& (0+255),b
 27931  0035D4  D002               	goto	l12750
 27932  0035D6                     l12748:
 27933                           
 27934                           ; BSR set to: 0
 27935  0035D6  90D8               	bcf	status,0,c
 27936  0035D8  33A7               	rrcf	___fladd@grs& (0+255),f,b
 27937  0035DA                     l12750:
 27938                           
 27939                           ; BSR set to: 0
 27940  0035DA  B198               	btfsc	___fladd@b& (0+255),0,b
 27941                           
 27942                           ; BSR set to: 0
 27943  0035DC  8FA7               	bsf	___fladd@grs& (0+255),7,b
 27944                           
 27945                           ; BSR set to: 0
 27946  0035DE  359B               	rlcf	(___fladd@b+3)& (0+255),w,b
 27947  0035E0  339B               	rrcf	(___fladd@b+3)& (0+255),f,b
 27948  0035E2  339A               	rrcf	(___fladd@b+2)& (0+255),f,b
 27949  0035E4  3399               	rrcf	(___fladd@b+1)& (0+255),f,b
 27950  0035E6  3398               	rrcf	___fladd@b& (0+255),f,b
 27951                           
 27952                           ; BSR set to: 0
 27953  0035E8  2BA6               	incf	___fladd@bexp& (0+255),f,b
 27954  0035EA                     l4628:
 27955                           
 27956                           ; BSR set to: 0
 27957  0035EA  51A5               	movf	___fladd@aexp& (0+255),w,b
 27958  0035EC  5DA6               	subwf	___fladd@bexp& (0+255),w,b
 27959  0035EE  A0D8               	btfss	status,0,c
 27960  0035F0  D7EB               	goto	l4629
 27961  0035F2                     u9140:
 27962                           
 27963                           ; BSR set to: 0
 27964  0035F2  BDA4               	btfsc	___fladd@signs& (0+255),6,b
 27965  0035F4  D028               	goto	l12782
 27966                           
 27967                           ; BSR set to: 0
 27968  0035F6  51A6               	movf	___fladd@bexp& (0+255),w,b
 27969  0035F8  A4D8               	btfss	status,2,c
 27970  0035FA  D009               	goto	l12764
 27971                           
 27972                           ; BSR set to: 0
 27973  0035FC  0E00               	movlw	0
 27974  0035FE  6F98               	movwf	?___fladd& (0+255),b
 27975  003600  0E00               	movlw	0
 27976  003602  6F99               	movwf	(?___fladd+1)& (0+255),b
 27977  003604  0E00               	movlw	0
 27978  003606  6F9A               	movwf	(?___fladd+2)& (0+255),b
 27979  003608  0E00               	movlw	0
 27980  00360A  6F9B               	movwf	(?___fladd+3)& (0+255),b
 27981  00360C  0012               	return	
 27982  00360E                     l12764:
 27983                           
 27984                           ; BSR set to: 0
 27985  00360E  519C               	movf	___fladd@a& (0+255),w,b
 27986  003610  2798               	addwf	___fladd@b& (0+255),f,b
 27987  003612  519D               	movf	(___fladd@a+1)& (0+255),w,b
 27988  003614  2399               	addwfc	(___fladd@b+1)& (0+255),f,b
 27989  003616  519E               	movf	(___fladd@a+2)& (0+255),w,b
 27990  003618  239A               	addwfc	(___fladd@b+2)& (0+255),f,b
 27991  00361A  519F               	movf	(___fladd@a+3)& (0+255),w,b
 27992  00361C  239B               	addwfc	(___fladd@b+3)& (0+255),f,b
 27993                           
 27994                           ; BSR set to: 0
 27995  00361E  A19B               	btfss	(___fladd@b+3)& (0+255),0,b
 27996  003620  D071               	goto	u9270
 27997                           
 27998                           ; BSR set to: 0
 27999  003622  A1A7               	btfss	___fladd@grs& (0+255),0,b
 28000  003624  D005               	goto	l12772
 28001                           
 28002                           ; BSR set to: 0
 28003  003626  90D8               	bcf	status,0,c
 28004  003628  31A7               	rrcf	___fladd@grs& (0+255),w,b
 28005  00362A  0901               	iorlw	1
 28006  00362C  6FA7               	movwf	___fladd@grs& (0+255),b
 28007  00362E  D002               	goto	l12774
 28008  003630                     l12772:
 28009                           
 28010                           ; BSR set to: 0
 28011  003630  90D8               	bcf	status,0,c
 28012  003632  33A7               	rrcf	___fladd@grs& (0+255),f,b
 28013  003634                     l12774:
 28014                           
 28015                           ; BSR set to: 0
 28016  003634  B198               	btfsc	___fladd@b& (0+255),0,b
 28017                           
 28018                           ; BSR set to: 0
 28019  003636  8FA7               	bsf	___fladd@grs& (0+255),7,b
 28020                           
 28021                           ; BSR set to: 0
 28022  003638  359B               	rlcf	(___fladd@b+3)& (0+255),w,b
 28023  00363A  339B               	rrcf	(___fladd@b+3)& (0+255),f,b
 28024  00363C  339A               	rrcf	(___fladd@b+2)& (0+255),f,b
 28025  00363E  3399               	rrcf	(___fladd@b+1)& (0+255),f,b
 28026  003640  3398               	rrcf	___fladd@b& (0+255),f,b
 28027                           
 28028                           ; BSR set to: 0
 28029  003642  2BA6               	incf	___fladd@bexp& (0+255),f,b
 28030  003644  D05F               	goto	u9270
 28031  003646                     l12782:
 28032                           
 28033                           ; BSR set to: 0
 28034  003646  519C               	movf	___fladd@a& (0+255),w,b
 28035  003648  5D98               	subwf	___fladd@b& (0+255),w,b
 28036  00364A  519D               	movf	(___fladd@a+1)& (0+255),w,b
 28037  00364C  5999               	subwfb	(___fladd@b+1)& (0+255),w,b
 28038  00364E  519E               	movf	(___fladd@a+2)& (0+255),w,b
 28039  003650  599A               	subwfb	(___fladd@b+2)& (0+255),w,b
 28040  003652  519B               	movf	(___fladd@b+3)& (0+255),w,b
 28041  003654  0A80               	xorlw	128
 28042  003656  6FA0               	movwf	??___fladd& (0+255),b
 28043  003658  519F               	movf	(___fladd@a+3)& (0+255),w,b
 28044  00365A  0A80               	xorlw	128
 28045  00365C  59A0               	subwfb	??___fladd& (0+255),w,b
 28046  00365E  B0D8               	btfsc	status,0,c
 28047  003660  D025               	goto	l12792
 28048                           
 28049                           ; BSR set to: 0
 28050  003662  5198               	movf	___fladd@b& (0+255),w,b
 28051  003664  5D9C               	subwf	___fladd@a& (0+255),w,b
 28052  003666  6FA0               	movwf	??___fladd& (0+255),b
 28053  003668  5199               	movf	(___fladd@b+1)& (0+255),w,b
 28054  00366A  599D               	subwfb	(___fladd@a+1)& (0+255),w,b
 28055  00366C  6FA1               	movwf	(??___fladd+1)& (0+255),b
 28056  00366E  519A               	movf	(___fladd@b+2)& (0+255),w,b
 28057  003670  599E               	subwfb	(___fladd@a+2)& (0+255),w,b
 28058  003672  6FA2               	movwf	(??___fladd+2)& (0+255),b
 28059  003674  519B               	movf	(___fladd@b+3)& (0+255),w,b
 28060  003676  599F               	subwfb	(___fladd@a+3)& (0+255),w,b
 28061  003678  6FA3               	movwf	(??___fladd+3)& (0+255),b
 28062  00367A  0EFF               	movlw	255
 28063  00367C  25A0               	addwf	??___fladd& (0+255),w,b
 28064  00367E  6F98               	movwf	___fladd@b& (0+255),b
 28065  003680  0EFF               	movlw	255
 28066  003682  21A1               	addwfc	(??___fladd+1)& (0+255),w,b
 28067  003684  6F99               	movwf	(___fladd@b+1)& (0+255),b
 28068  003686  0EFF               	movlw	255
 28069  003688  21A2               	addwfc	(??___fladd+2)& (0+255),w,b
 28070  00368A  6F9A               	movwf	(___fladd@b+2)& (0+255),b
 28071  00368C  0EFF               	movlw	255
 28072  00368E  21A3               	addwfc	(??___fladd+3)& (0+255),w,b
 28073  003690  6F9B               	movwf	(___fladd@b+3)& (0+255),b
 28074  003692  0E80               	movlw	128
 28075  003694  1BA4               	xorwf	___fladd@signs& (0+255),f,b
 28076                           
 28077                           ; BSR set to: 0
 28078  003696  6DA7               	negf	___fladd@grs& (0+255),b
 28079                           
 28080                           ; BSR set to: 0
 28081  003698  51A7               	movf	___fladd@grs& (0+255),w,b
 28082  00369A  A4D8               	btfss	status,2,c
 28083  00369C  D00F               	goto	l4644
 28084                           
 28085                           ; BSR set to: 0
 28086  00369E  0E01               	movlw	1
 28087  0036A0  2798               	addwf	___fladd@b& (0+255),f,b
 28088  0036A2  0E00               	movlw	0
 28089  0036A4  2399               	addwfc	(___fladd@b+1)& (0+255),f,b
 28090  0036A6  239A               	addwfc	(___fladd@b+2)& (0+255),f,b
 28091  0036A8  239B               	addwfc	(___fladd@b+3)& (0+255),f,b
 28092  0036AA  D008               	goto	l4644
 28093  0036AC                     l12792:
 28094                           
 28095                           ; BSR set to: 0
 28096  0036AC  519C               	movf	___fladd@a& (0+255),w,b
 28097  0036AE  5F98               	subwf	___fladd@b& (0+255),f,b
 28098  0036B0  519D               	movf	(___fladd@a+1)& (0+255),w,b
 28099  0036B2  5B99               	subwfb	(___fladd@b+1)& (0+255),f,b
 28100  0036B4  519E               	movf	(___fladd@a+2)& (0+255),w,b
 28101  0036B6  5B9A               	subwfb	(___fladd@b+2)& (0+255),f,b
 28102  0036B8  519F               	movf	(___fladd@a+3)& (0+255),w,b
 28103  0036BA  5B9B               	subwfb	(___fladd@b+3)& (0+255),f,b
 28104  0036BC                     l4644:
 28105                           
 28106                           ; BSR set to: 0
 28107  0036BC  5198               	movf	___fladd@b& (0+255),w,b
 28108  0036BE  1199               	iorwf	(___fladd@b+1)& (0+255),w,b
 28109  0036C0  119A               	iorwf	(___fladd@b+2)& (0+255),w,b
 28110  0036C2  119B               	iorwf	(___fladd@b+3)& (0+255),w,b
 28111  0036C4  A4D8               	btfss	status,2,c
 28112  0036C6  D01C               	goto	l12816
 28113                           
 28114                           ; BSR set to: 0
 28115  0036C8  51A7               	movf	___fladd@grs& (0+255),w,b
 28116  0036CA  A4D8               	btfss	status,2,c
 28117  0036CC  D019               	goto	l12816
 28118                           
 28119                           ; BSR set to: 0
 28120  0036CE  0E00               	movlw	0
 28121  0036D0  6F98               	movwf	?___fladd& (0+255),b
 28122  0036D2  0E00               	movlw	0
 28123  0036D4  6F99               	movwf	(?___fladd+1)& (0+255),b
 28124  0036D6  0E00               	movlw	0
 28125  0036D8  6F9A               	movwf	(?___fladd+2)& (0+255),b
 28126  0036DA  0E00               	movlw	0
 28127  0036DC  6F9B               	movwf	(?___fladd+3)& (0+255),b
 28128  0036DE  0012               	return	
 28129  0036E0                     l12800:
 28130                           
 28131                           ; BSR set to: 0
 28132  0036E0  90D8               	bcf	status,0,c
 28133  0036E2  3798               	rlcf	___fladd@b& (0+255),f,b
 28134  0036E4  3799               	rlcf	(___fladd@b+1)& (0+255),f,b
 28135  0036E6  379A               	rlcf	(___fladd@b+2)& (0+255),f,b
 28136  0036E8  379B               	rlcf	(___fladd@b+3)& (0+255),f,b
 28137                           
 28138                           ; BSR set to: 0
 28139  0036EA  BFA7               	btfsc	___fladd@grs& (0+255),7,b
 28140                           
 28141                           ; BSR set to: 0
 28142  0036EC  8198               	bsf	___fladd@b& (0+255),0,b
 28143                           
 28144                           ; BSR set to: 0
 28145  0036EE  A1A7               	btfss	___fladd@grs& (0+255),0,b
 28146  0036F0  D002               	goto	l12810
 28147                           
 28148                           ; BSR set to: 0
 28149  0036F2  80D8               	bsf	status,0,c
 28150  0036F4  D001               	goto	L35
 28151  0036F6                     l12810:
 28152                           
 28153                           ; BSR set to: 0
 28154  0036F6  90D8               	bcf	status,0,c
 28155  0036F8                     L35:
 28156  0036F8  37A7               	rlcf	___fladd@grs& (0+255),f,b
 28157                           
 28158                           ; BSR set to: 0
 28159  0036FA  51A6               	movf	___fladd@bexp& (0+255),w,b
 28160  0036FC  A4D8               	btfss	status,2,c
 28161                           
 28162                           ; BSR set to: 0
 28163  0036FE  07A6               	decf	___fladd@bexp& (0+255),f,b
 28164  003700                     l12816:
 28165                           
 28166                           ; BSR set to: 0
 28167  003700  AF9A               	btfss	(___fladd@b+2)& (0+255),7,b
 28168  003702  D7EE               	goto	l12800
 28169  003704                     u9270:
 28170                           
 28171                           ; BSR set to: 0
 28172  003704  0E00               	movlw	0
 28173  003706  6FA5               	movwf	___fladd@aexp& (0+255),b
 28174                           
 28175                           ; BSR set to: 0
 28176  003708  AFA7               	btfss	___fladd@grs& (0+255),7,b
 28177  00370A  D00A               	goto	l4653
 28178                           
 28179                           ; BSR set to: 0
 28180  00370C  C0A7  F0A0         	movff	___fladd@grs,??___fladd
 28181  003710  0E7F               	movlw	127
 28182  003712  17A0               	andwf	??___fladd& (0+255),f,b
 28183  003714  A4D8               	btfss	status,2,c
 28184  003716  D002               	goto	u9300
 28185                           
 28186                           ; BSR set to: 0
 28187                           
 28188                           ; BSR set to: 0
 28189  003718  A198               	btfss	___fladd@b& (0+255),0,b
 28190  00371A  D002               	goto	l4653
 28191  00371C                     u9300:
 28192                           
 28193                           ; BSR set to: 0
 28194  00371C  0E01               	movlw	1
 28195  00371E  6FA5               	movwf	___fladd@aexp& (0+255),b
 28196  003720                     l4653:
 28197                           
 28198                           ; BSR set to: 0
 28199  003720  51A5               	movf	___fladd@aexp& (0+255),w,b
 28200  003722  B4D8               	btfsc	status,2,c
 28201  003724  D020               	goto	l12836
 28202                           
 28203                           ; BSR set to: 0
 28204  003726  0E01               	movlw	1
 28205  003728  2798               	addwf	___fladd@b& (0+255),f,b
 28206  00372A  0E00               	movlw	0
 28207  00372C  2399               	addwfc	(___fladd@b+1)& (0+255),f,b
 28208  00372E  239A               	addwfc	(___fladd@b+2)& (0+255),f,b
 28209  003730  239B               	addwfc	(___fladd@b+3)& (0+255),f,b
 28210                           
 28211                           ; BSR set to: 0
 28212  003732  A19B               	btfss	(___fladd@b+3)& (0+255),0,b
 28213  003734  D018               	goto	l12836
 28214                           
 28215                           ; BSR set to: 0
 28216  003736  C098  F0A0         	movff	___fladd@b,??___fladd
 28217  00373A  C099  F0A1         	movff	___fladd@b+1,??___fladd+1
 28218  00373E  C09A  F0A2         	movff	___fladd@b+2,??___fladd+2
 28219  003742  C09B  F0A3         	movff	___fladd@b+3,??___fladd+3
 28220  003746  35A3               	rlcf	(??___fladd+3)& (0+255),w,b
 28221  003748  33A3               	rrcf	(??___fladd+3)& (0+255),f,b
 28222  00374A  33A2               	rrcf	(??___fladd+2)& (0+255),f,b
 28223  00374C  33A1               	rrcf	(??___fladd+1)& (0+255),f,b
 28224  00374E  33A0               	rrcf	??___fladd& (0+255),f,b
 28225  003750  C0A0  F098         	movff	??___fladd,___fladd@b
 28226  003754  C0A1  F099         	movff	??___fladd+1,___fladd@b+1
 28227  003758  C0A2  F09A         	movff	??___fladd+2,___fladd@b+2
 28228  00375C  C0A3  F09B         	movff	??___fladd+3,___fladd@b+3
 28229  003760  29A6               	incf	___fladd@bexp& (0+255),w,b
 28230  003762  A4D8               	btfss	status,2,c
 28231                           
 28232                           ; BSR set to: 0
 28233  003764  2BA6               	incf	___fladd@bexp& (0+255),f,b
 28234  003766                     l12836:
 28235                           
 28236                           ; BSR set to: 0
 28237  003766  29A6               	incf	___fladd@bexp& (0+255),w,b
 28238  003768  B4D8               	btfsc	status,2,c
 28239  00376A  D003               	goto	u9350
 28240                           
 28241                           ; BSR set to: 0
 28242  00376C  51A6               	movf	___fladd@bexp& (0+255),w,b
 28243  00376E  A4D8               	btfss	status,2,c
 28244  003770  D00D               	goto	l12844
 28245  003772                     u9350:
 28246                           
 28247                           ; BSR set to: 0
 28248  003772  0E00               	movlw	0
 28249  003774  6F98               	movwf	___fladd@b& (0+255),b
 28250  003776  0E00               	movlw	0
 28251  003778  6F99               	movwf	(___fladd@b+1)& (0+255),b
 28252  00377A  0E00               	movlw	0
 28253  00377C  6F9A               	movwf	(___fladd@b+2)& (0+255),b
 28254  00377E  0E00               	movlw	0
 28255  003780  6F9B               	movwf	(___fladd@b+3)& (0+255),b
 28256  003782  51A6               	movf	___fladd@bexp& (0+255),w,b
 28257  003784  A4D8               	btfss	status,2,c
 28258  003786  D002               	goto	l12844
 28259                           
 28260                           ; BSR set to: 0
 28261  003788  0E00               	movlw	0
 28262  00378A  6FA4               	movwf	___fladd@signs& (0+255),b
 28263  00378C                     l12844:
 28264                           
 28265                           ; BSR set to: 0
 28266  00378C  A1A6               	btfss	___fladd@bexp& (0+255),0,b
 28267  00378E  D002               	goto	l12848
 28268                           
 28269                           ; BSR set to: 0
 28270  003790  8F9A               	bsf	(___fladd@b+2)& (0+255),7,b
 28271  003792  D001               	goto	l12850
 28272  003794                     l12848:
 28273                           
 28274                           ; BSR set to: 0
 28275  003794  9F9A               	bcf	(___fladd@b+2)& (0+255),7,b
 28276  003796                     l12850:
 28277                           
 28278                           ; BSR set to: 0
 28279  003796  90D8               	bcf	status,0,c
 28280  003798  31A6               	rrcf	___fladd@bexp& (0+255),w,b
 28281  00379A  6F9B               	movwf	(___fladd@b+3)& (0+255),b
 28282                           
 28283                           ; BSR set to: 0
 28284  00379C  BFA4               	btfsc	___fladd@signs& (0+255),7,b
 28285                           
 28286                           ; BSR set to: 0
 28287  00379E  8F9B               	bsf	(___fladd@b+3)& (0+255),7,b
 28288                           
 28289                           ; BSR set to: 0
 28290  0037A0  C098  F098         	movff	___fladd@b,?___fladd
 28291  0037A4  C099  F099         	movff	___fladd@b+1,?___fladd+1
 28292  0037A8  C09A  F09A         	movff	___fladd@b+2,?___fladd+2
 28293  0037AC  C09B  F09B         	movff	___fladd@b+3,?___fladd+3
 28294                           
 28295                           ; BSR set to: 0
 28296  0037B0  0012               	return		;funcret
 28297  0037B2                     __end_of___fladd:
 28298                           	callstack 0
 28299                           
 28300 ;; *************** function _PHY_DataInd *****************
 28301 ;; Defined at:
 28302 ;;		line 116 in file "../nwk/nwk_src/nwkRx.c"
 28303 ;; Parameters:    Size  Location     Type
 28304 ;;  ind             2   36[BANK0 ] PTR struct PHY_DataInd_t
 28305 ;;		 -> DIO0_Receive_ISR@ind(5), 
 28306 ;; Auto vars:     Size  Location     Type
 28307 ;;  frame           2   41[BANK0 ] PTR struct NwkFrame_t
 28308 ;;		 -> nwkFrameFrames(690), NULL(0), 
 28309 ;; Return value:  Size  Location     Type
 28310 ;;                  1    wreg      void 
 28311 ;; Registers used:
 28312 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28313 ;; Tracked objects:
 28314 ;;		On entry : 3F/0
 28315 ;;		On exit  : 0/0
 28316 ;;		Unchanged: 0/0
 28317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28318 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28319 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28320 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28321 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28322 ;;Total ram usage:        7 bytes
 28323 ;; Hardware stack levels used:    1
 28324 ;; Hardware stack levels required when called:   13
 28325 ;; This function calls:
 28326 ;;		_memcpy
 28327 ;;		_nwkFrameAlloc
 28328 ;; This function is called by:
 28329 ;;		_DIO0_Receive_ISR
 28330 ;; This function uses a non-reentrant model
 28331 ;;
 28332                           
 28333                           	psect	text152
 28334  005B38                     __ptext152:
 28335                           	callstack 0
 28336  005B38                     _PHY_DataInd:
 28337                           	callstack 13
 28338                           
 28339                           ;../nwk/nwk_src/nwkRx.c: 116: void PHY_DataInd(PHY_DataInd_t *ind);../nwk/nwk_src/nwkRx.
      +                          c: 117: {;../nwk/nwk_src/nwkRx.c: 118:   NwkFrame_t *frame;;../nwk/nwk_src/nwkRx.c: 120:
      +                             if (0x88 != ind->data[1] || (0x61 != ind->data[0] && 0x41 != ind->data[0]) ||
 28340                           
 28341                           ; BSR set to: 0
 28342                           ;incstack = 0
 28343  005B38  0060  F213  FFD9   	movff	PHY_DataInd@ind,fsr2l
 28344  005B3E  0060  F217  FFDA   	movff	PHY_DataInd@ind+1,fsr2h
 28345  005B44  EE00 F001          	lfsr	0,1
 28346  005B48  50DE               	movf	postinc2,w,c
 28347  005B4A  26E9               	addwf	fsr0l,f,c
 28348  005B4C  50DD               	movf	postdec2,w,c
 28349  005B4E  22EA               	addwfc	fsr0h,f,c
 28350  005B50  0E88               	movlw	136
 28351  005B52  18EE               	xorwf	postinc0,w,c
 28352  005B54  A4D8               	btfss	status,2,c
 28353  005B56  0012               	return	
 28354  005B58  0060  F213  FFD9   	movff	PHY_DataInd@ind,fsr2l
 28355  005B5E  0060  F217  FFDA   	movff	PHY_DataInd@ind+1,fsr2h
 28356  005B64  006F FF78  F086    	movff	postinc2,??_PHY_DataInd
 28357  005B6A  006F FF74  F087    	movff	postdec2,??_PHY_DataInd+1
 28358  005B70  0060  F21B  FFD9   	movff	??_PHY_DataInd,fsr2l
 28359  005B76  0060  F21F  FFDA   	movff	??_PHY_DataInd+1,fsr2h
 28360  005B7C  0E61               	movlw	97
 28361  005B7E  18DE               	xorwf	postinc2,w,c
 28362  005B80  B4D8               	btfsc	status,2,c
 28363  005B82  D016               	goto	u16160
 28364  005B84  0060  F213  FFD9   	movff	PHY_DataInd@ind,fsr2l
 28365  005B8A  0060  F217  FFDA   	movff	PHY_DataInd@ind+1,fsr2h
 28366  005B90  006F FF78  F086    	movff	postinc2,??_PHY_DataInd
 28367  005B96  006F FF74  F087    	movff	postdec2,??_PHY_DataInd+1
 28368  005B9C  0060  F21B  FFD9   	movff	??_PHY_DataInd,fsr2l
 28369  005BA2  0060  F21F  FFDA   	movff	??_PHY_DataInd+1,fsr2h
 28370  005BA8  0E41               	movlw	65
 28371  005BAA  18DE               	xorwf	postinc2,w,c
 28372  005BAC  A4D8               	btfss	status,2,c
 28373  005BAE  0012               	return	
 28374  005BB0                     u16160:
 28375  005BB0  0100               	movlb	0	; force () banked
 28376  005BB2  EE20 F002          	lfsr	2,2
 28377  005BB6  5184               	movf	PHY_DataInd@ind& (0+255),w,b
 28378  005BB8  26D9               	addwf	fsr2l,f,c
 28379  005BBA  5185               	movf	(PHY_DataInd@ind+1)& (0+255),w,b
 28380  005BBC  22DA               	addwfc	fsr2h,f,c
 28381  005BBE  0E10               	movlw	16
 28382  005BC0  60DF               	cpfslt	indf2,c
 28383  005BC2  D001               	goto	l18492
 28384  005BC4  0012               	return	
 28385  005BC6                     l18492:
 28386                           
 28387                           ; BSR set to: 0
 28388                           ;../nwk/nwk_src/nwkRx.c: 124:   if ((0) == (frame = nwkFrameAlloc()))
 28389  005BC6  EC12  F043         	call	_nwkFrameAlloc	;wreg free
 28390  005BCA  C079  F089         	movff	?_nwkFrameAlloc,PHY_DataInd@frame
 28391  005BCE  C07A  F08A         	movff	?_nwkFrameAlloc+1,PHY_DataInd@frame+1
 28392  005BD2  0100               	movlb	0	; force () banked
 28393  005BD4  5189               	movf	PHY_DataInd@frame& (0+255),w,b
 28394  005BD6  118A               	iorwf	(PHY_DataInd@frame+1)& (0+255),w,b
 28395  005BD8  B4D8               	btfsc	status,2,c
 28396  005BDA  0012               	return	
 28397                           
 28398                           ; BSR set to: 0
 28399                           ;../nwk/nwk_src/nwkRx.c: 127:   frame->state = NWK_RX_STATE_RECEIVED;
 28400  005BDC  0060  F227  FFD9   	movff	PHY_DataInd@frame,fsr2l
 28401  005BE2  0060  F22B  FFDA   	movff	PHY_DataInd@frame+1,fsr2h
 28402  005BE8  0E20               	movlw	32
 28403  005BEA  6EDF               	movwf	indf2,c
 28404                           
 28405                           ; BSR set to: 0
 28406                           ;../nwk/nwk_src/nwkRx.c: 128:   frame->size = ind->size;
 28407  005BEC  0100               	movlb	0	; force () banked
 28408  005BEE  EE20 F002          	lfsr	2,2
 28409  005BF2  5184               	movf	PHY_DataInd@ind& (0+255),w,b
 28410  005BF4  26D9               	addwf	fsr2l,f,c
 28411  005BF6  5185               	movf	(PHY_DataInd@ind+1)& (0+255),w,b
 28412  005BF8  22DA               	addwfc	fsr2h,f,c
 28413  005BFA  0100               	movlb	0	; force () banked
 28414  005BFC  EE00 F001          	lfsr	0,1
 28415  005C00  5189               	movf	PHY_DataInd@frame& (0+255),w,b
 28416  005C02  26E9               	addwf	fsr0l,f,c
 28417  005C04  518A               	movf	(PHY_DataInd@frame+1)& (0+255),w,b
 28418  005C06  22EA               	addwfc	fsr0h,f,c
 28419  005C08  006F FF7F FFEF     	movff	indf2,indf0
 28420                           
 28421                           ; BSR set to: 0
 28422                           ;../nwk/nwk_src/nwkRx.c: 129:   frame->rx.lqi = ind->lqi;
 28423  005C0E  0100               	movlb	0	; force () banked
 28424  005C10  EE20 F003          	lfsr	2,3
 28425  005C14  5184               	movf	PHY_DataInd@ind& (0+255),w,b
 28426  005C16  26D9               	addwf	fsr2l,f,c
 28427  005C18  5185               	movf	(PHY_DataInd@ind+1)& (0+255),w,b
 28428  005C1A  22DA               	addwfc	fsr2h,f,c
 28429  005C1C  0100               	movlb	0	; force () banked
 28430  005C1E  EE00 F084          	lfsr	0,132
 28431  005C22  5189               	movf	PHY_DataInd@frame& (0+255),w,b
 28432  005C24  26E9               	addwf	fsr0l,f,c
 28433  005C26  518A               	movf	(PHY_DataInd@frame+1)& (0+255),w,b
 28434  005C28  22EA               	addwfc	fsr0h,f,c
 28435  005C2A  006F FF7F FFEF     	movff	indf2,indf0
 28436                           
 28437                           ; BSR set to: 0
 28438                           ;../nwk/nwk_src/nwkRx.c: 130:   frame->rx.rssi = ind->rssi;
 28439  005C30  0100               	movlb	0	; force () banked
 28440  005C32  EE20 F004          	lfsr	2,4
 28441  005C36  5184               	movf	PHY_DataInd@ind& (0+255),w,b
 28442  005C38  26D9               	addwf	fsr2l,f,c
 28443  005C3A  5185               	movf	(PHY_DataInd@ind+1)& (0+255),w,b
 28444  005C3C  22DA               	addwfc	fsr2h,f,c
 28445  005C3E  0100               	movlb	0	; force () banked
 28446  005C40  EE00 F085          	lfsr	0,133
 28447  005C44  5189               	movf	PHY_DataInd@frame& (0+255),w,b
 28448  005C46  26E9               	addwf	fsr0l,f,c
 28449  005C48  518A               	movf	(PHY_DataInd@frame+1)& (0+255),w,b
 28450  005C4A  22EA               	addwfc	fsr0h,f,c
 28451  005C4C  006F FF7F FFEF     	movff	indf2,indf0
 28452                           
 28453                           ; BSR set to: 0
 28454                           ;../nwk/nwk_src/nwkRx.c: 131:   memcpy(frame->data, ind->data, ind->size);
 28455  005C52  0E02               	movlw	2
 28456  005C54  0100               	movlb	0	; force () banked
 28457  005C56  2589               	addwf	PHY_DataInd@frame& (0+255),w,b
 28458  005C58  0100               	movlb	0	; force () banked
 28459  005C5A  6F77               	movwf	memcpy@d1& (0+255),b
 28460  005C5C  0E00               	movlw	0
 28461  005C5E  0100               	movlb	0	; force () banked
 28462  005C60  218A               	addwfc	(PHY_DataInd@frame+1)& (0+255),w,b
 28463  005C62  0100               	movlb	0	; force () banked
 28464  005C64  6F78               	movwf	(memcpy@d1+1)& (0+255),b
 28465  005C66  0060  F213  FFD9   	movff	PHY_DataInd@ind,fsr2l
 28466  005C6C  0060  F217  FFDA   	movff	PHY_DataInd@ind+1,fsr2h
 28467  005C72  006F FF78  F086    	movff	postinc2,??_PHY_DataInd
 28468  005C78  006F FF74  F087    	movff	postdec2,??_PHY_DataInd+1
 28469  005C7E  C086  F079         	movff	??_PHY_DataInd,memcpy@s1
 28470  005C82  C087  F07A         	movff	??_PHY_DataInd+1,memcpy@s1+1
 28471  005C86  0100               	movlb	0	; force () banked
 28472  005C88  5179               	movf	memcpy@s1& (0+255),w,b
 28473  005C8A  117A               	iorwf	(memcpy@s1+1)& (0+255),w,b
 28474  005C8C  A4D8               	btfss	status,2,c
 28475  005C8E  0E20               	movlw	32
 28476  005C90  6F7B               	movwf	(memcpy@s1+2)& (0+255),b
 28477  005C92  0100               	movlb	0	; force () banked
 28478  005C94  EE20 F002          	lfsr	2,2
 28479  005C98  5184               	movf	PHY_DataInd@ind& (0+255),w,b
 28480  005C9A  26D9               	addwf	fsr2l,f,c
 28481  005C9C  5185               	movf	(PHY_DataInd@ind+1)& (0+255),w,b
 28482  005C9E  22DA               	addwfc	fsr2h,f,c
 28483  005CA0  50DF               	movf	indf2,w,c
 28484  005CA2  0100               	movlb	0	; force () banked
 28485  005CA4  6F88               	movwf	(??_PHY_DataInd+2)& (0+255),b
 28486  005CA6  5188               	movf	(??_PHY_DataInd+2)& (0+255),w,b
 28487  005CA8  0100               	movlb	0	; force () banked
 28488  005CAA  6F7C               	movwf	memcpy@n& (0+255),b
 28489  005CAC  6B7D               	clrf	(memcpy@n+1)& (0+255),b
 28490  005CAE  ECC1  F04F         	call	_memcpy	;wreg free
 28491  005CB2  0012               	return		;funcret
 28492  005CB4                     __end_of_PHY_DataInd:
 28493                           	callstack 0
 28494                           
 28495 ;; *************** function _NWK_TaskHandler *****************
 28496 ;; Defined at:
 28497 ;;		line 196 in file "../nwk/nwk_src/nwk.c"
 28498 ;; Parameters:    Size  Location     Type
 28499 ;;		None
 28500 ;; Auto vars:     Size  Location     Type
 28501 ;;		None
 28502 ;; Return value:  Size  Location     Type
 28503 ;;                  1    wreg      void 
 28504 ;; Registers used:
 28505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 28506 ;; Tracked objects:
 28507 ;;		On entry : 3C/0
 28508 ;;		On exit  : 3F/0
 28509 ;;		Unchanged: 0/0
 28510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28515 ;;Total ram usage:        0 bytes
 28516 ;; Hardware stack levels used:    1
 28517 ;; Hardware stack levels required when called:   20
 28518 ;; This function calls:
 28519 ;;		_nwkDataReqTaskHandler
 28520 ;;		_nwkRxTaskHandler
 28521 ;;		_nwkTxTaskHandler
 28522 ;; This function is called by:
 28523 ;;		_SYS_TaskHandler
 28524 ;; This function uses a non-reentrant model
 28525 ;;
 28526                           
 28527                           	psect	text153
 28528  00BCA2                     __ptext153:
 28529                           	callstack 0
 28530  00BCA2                     _NWK_TaskHandler:
 28531                           	callstack 9
 28532                           
 28533                           ;../nwk/nwk_src/nwk.c: 198:   nwkRxTaskHandler();
 28534                           
 28535                           ;incstack = 0
 28536  00BCA2  EC37  F04A         	call	_nwkRxTaskHandler	;wreg free
 28537                           
 28538                           ; BSR set to: 0
 28539                           ;../nwk/nwk_src/nwk.c: 199:   nwkTxTaskHandler();
 28540  00BCA6  EC6C  F024         	call	_nwkTxTaskHandler	;wreg free
 28541                           
 28542                           ; BSR set to: 0
 28543                           ;../nwk/nwk_src/nwk.c: 200:   nwkDataReqTaskHandler();
 28544  00BCAA  ECBE  F050         	call	_nwkDataReqTaskHandler	;wreg free
 28545                           
 28546                           ; BSR set to: 0
 28547  00BCAE  0012               	return		;funcret
 28548  00BCB0                     __end_of_NWK_TaskHandler:
 28549                           	callstack 0
 28550                           
 28551 ;; *************** function _nwkTxTaskHandler *****************
 28552 ;; Defined at:
 28553 ;;		line 297 in file "../nwk/nwk_src/nwkTx.c"
 28554 ;; Parameters:    Size  Location     Type
 28555 ;;		None
 28556 ;; Auto vars:     Size  Location     Type
 28557 ;;  frame           2   41[BANK0 ] PTR struct NwkFrame_t
 28558 ;;		 -> nwkFrameFrames(690), NULL(0), 
 28559 ;; Return value:  Size  Location     Type
 28560 ;;                  1    wreg      void 
 28561 ;; Registers used:
 28562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15, btemp+16, bt
      +emp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27, btemp+28, bt
      +emp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 28563 ;; Tracked objects:
 28564 ;;		On entry : 3F/0
 28565 ;;		On exit  : 3F/0
 28566 ;;		Unchanged: 0/0
 28567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28569 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28570 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28571 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28572 ;;Total ram usage:        4 bytes
 28573 ;; Hardware stack levels used:    1
 28574 ;; Hardware stack levels required when called:   13
 28575 ;; This function calls:
 28576 ;;		Absolute function
 28577 ;;		_PHY_DataReq
 28578 ;;		_SYS_TimerStart
 28579 ;;		_nwkDataReqTxConf
 28580 ;;		_nwkFrameFree
 28581 ;;		_nwkFrameNext
 28582 ;;		_nwkRouteFrameSent
 28583 ;; This function is called by:
 28584 ;;		_NWK_TaskHandler
 28585 ;; This function uses a non-reentrant model
 28586 ;;
 28587                           
 28588                           	psect	text154
 28589  0048D8                     __ptext154:
 28590                           	callstack 0
 28591  0048D8                     _nwkTxTaskHandler:
 28592                           	callstack 15
 28593                           
 28594                           ;../nwk/nwk_src/nwkTx.c: 299:   NwkFrame_t *frame = (0);
 28595                           
 28596                           ; BSR set to: 0
 28597                           ;incstack = 0
 28598  0048D8  0E00               	movlw	0
 28599  0048DA  0100               	movlb	0	; force () banked
 28600  0048DC  6F89               	movwf	nwkTxTaskHandler@frame& (0+255),b
 28601  0048DE  0E00               	movlw	0
 28602  0048E0  6F8A               	movwf	(nwkTxTaskHandler@frame+1)& (0+255),b
 28603                           
 28604                           ;../nwk/nwk_src/nwkTx.c: 301:   while ((0) != (frame = nwkFrameNext(frame)))
 28605  0048E2  D0EA               	goto	l19550
 28606  0048E4                     l19504:
 28607                           
 28608                           ; BSR set to: 0
 28609                           ;../nwk/nwk_src/nwkTx.c: 313:       {;../nwk/nwk_src/nwkTx.c: 314:         if (frame->tx
      +                          .timeout > 0)
 28610  0048E4  0100               	movlb	0	; force () banked
 28611  0048E6  EE20 F085          	lfsr	2,133
 28612  0048EA  5189               	movf	nwkTxTaskHandler@frame& (0+255),w,b
 28613  0048EC  26D9               	addwf	fsr2l,f,c
 28614  0048EE  518A               	movf	(nwkTxTaskHandler@frame+1)& (0+255),w,b
 28615  0048F0  22DA               	addwfc	fsr2h,f,c
 28616  0048F2  50DE               	movf	postinc2,w,c
 28617  0048F4  10DE               	iorwf	postinc2,w,c
 28618  0048F6  B4D8               	btfsc	status,2,c
 28619  0048F8  D010               	goto	l19510
 28620                           
 28621                           ; BSR set to: 0
 28622                           ;../nwk/nwk_src/nwkTx.c: 315:         {;../nwk/nwk_src/nwkTx.c: 316:           frame->st
      +                          ate = NWK_TX_STATE_WAIT_DELAY;
 28623  0048FA  0060  F227  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 28624  004900  0060  F22B  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 28625  004906  0E11               	movlw	17
 28626  004908  6EDF               	movwf	indf2,c
 28627                           
 28628                           ; BSR set to: 0
 28629                           ;../nwk/nwk_src/nwkTx.c: 317:           SYS_TimerStart(&nwkTxDelayTimer);
 28630  00490A  0EA6               	movlw	low _nwkTxDelayTimer
 28631  00490C  0100               	movlb	0	; force () banked
 28632  00490E  6F7F               	movwf	SYS_TimerStart@timer& (0+255),b
 28633  004910  0E03               	movlw	high _nwkTxDelayTimer
 28634  004912  6F80               	movwf	(SYS_TimerStart@timer+1)& (0+255),b
 28635  004914  ECBB  F05C         	call	_SYS_TimerStart	;wreg free
 28636                           
 28637                           ;../nwk/nwk_src/nwkTx.c: 318:         }
 28638  004918  D0CF               	goto	l19550
 28639  00491A                     l19510:
 28640                           
 28641                           ; BSR set to: 0
 28642                           ;../nwk/nwk_src/nwkTx.c: 320:         {;../nwk/nwk_src/nwkTx.c: 321:           frame->st
      +                          ate = NWK_TX_STATE_SEND;
 28643  00491A  0060  F227  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 28644  004920  0060  F22B  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 28645  004926  0E13               	movlw	19
 28646  004928  D06F               	goto	L37
 28647  00492A                     l19512:
 28648                           
 28649                           ; BSR set to: 0
 28650                           ;../nwk/nwk_src/nwkTx.c: 326:       {;../nwk/nwk_src/nwkTx.c: 327:         if ((0) == nw
      +                          kTxPhyActiveFrame)
 28651  00492A  0102               	movlb	2	; force () banked
 28652  00492C  513E               	movf	_nwkTxPhyActiveFrame& (0+255),w,b
 28653  00492E  113F               	iorwf	(_nwkTxPhyActiveFrame+1)& (0+255),w,b
 28654  004930  A4D8               	btfss	status,2,c
 28655  004932  D0C2               	goto	l19550
 28656                           
 28657                           ; BSR set to: 2
 28658                           ;../nwk/nwk_src/nwkTx.c: 328:         {;../nwk/nwk_src/nwkTx.c: 329:           nwkTxPhyA
      +                          ctiveFrame = frame;
 28659  004934  C089  F23E         	movff	nwkTxTaskHandler@frame,_nwkTxPhyActiveFrame
 28660  004938  C08A  F23F         	movff	nwkTxTaskHandler@frame+1,_nwkTxPhyActiveFrame+1
 28661                           
 28662                           ; BSR set to: 2
 28663                           ;../nwk/nwk_src/nwkTx.c: 330:           frame->state = NWK_TX_STATE_WAIT_CONF;
 28664  00493C  0060  F227  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 28665  004942  0060  F22B  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 28666  004948  0E14               	movlw	20
 28667  00494A  6EDF               	movwf	indf2,c
 28668                           
 28669                           ; BSR set to: 2
 28670                           ;../nwk/nwk_src/nwkTx.c: 331:           PHY_DataReq(frame->data, frame->size);
 28671  00494C  0E02               	movlw	2
 28672  00494E  0100               	movlb	0	; force () banked
 28673  004950  2589               	addwf	nwkTxTaskHandler@frame& (0+255),w,b
 28674  004952  0100               	movlb	0	; force () banked
 28675  004954  6F84               	movwf	PHY_DataReq@data& (0+255),b
 28676  004956  0E00               	movlw	0
 28677  004958  0100               	movlb	0	; force () banked
 28678  00495A  218A               	addwfc	(nwkTxTaskHandler@frame+1)& (0+255),w,b
 28679  00495C  0100               	movlb	0	; force () banked
 28680  00495E  6F85               	movwf	(PHY_DataReq@data+1)& (0+255),b
 28681  004960  0100               	movlb	0	; force () banked
 28682  004962  EE20 F001          	lfsr	2,1
 28683  004966  5189               	movf	nwkTxTaskHandler@frame& (0+255),w,b
 28684  004968  26D9               	addwf	fsr2l,f,c
 28685  00496A  518A               	movf	(nwkTxTaskHandler@frame+1)& (0+255),w,b
 28686  00496C  22DA               	addwfc	fsr2h,f,c
 28687  00496E  50DF               	movf	indf2,w,c
 28688  004970  0100               	movlb	0	; force () banked
 28689  004972  6F86               	movwf	PHY_DataReq@size& (0+255),b
 28690  004974  EC72  F059         	call	_PHY_DataReq	;wreg free
 28691                           
 28692                           ; BSR set to: 0
 28693                           ;../nwk/nwk_src/nwkTx.c: 332:           nwkIb.lock++;
 28694  004978  0102               	movlb	2	; force () banked
 28695  00497A  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 28696  00497C  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 28697  00497E  D09C               	goto	l19550
 28698  004980                     l19522:
 28699                           
 28700                           ; BSR set to: 0
 28701                           ;../nwk/nwk_src/nwkTx.c: 340:       {;../nwk/nwk_src/nwkTx.c: 341:         if (NWK_SUCCE
      +                          SS_STATUS == frame->tx.status)
 28702  004980  0100               	movlb	0	; force () banked
 28703  004982  EE20 F084          	lfsr	2,132
 28704  004986  5189               	movf	nwkTxTaskHandler@frame& (0+255),w,b
 28705  004988  26D9               	addwf	fsr2l,f,c
 28706  00498A  518A               	movf	(nwkTxTaskHandler@frame+1)& (0+255),w,b
 28707  00498C  22DA               	addwfc	fsr2h,f,c
 28708  00498E  50DF               	movf	indf2,w,c
 28709  004990  A4D8               	btfss	status,2,c
 28710  004992  D033               	goto	l19534
 28711                           
 28712                           ; BSR set to: 0
 28713                           ;../nwk/nwk_src/nwkTx.c: 342:         {;../nwk/nwk_src/nwkTx.c: 343:           if (frame
      +                          ->header.nwkSrcAddr == nwkIb.addr && frame->header.nwkFcf.ackRequest)
 28714  004994  0100               	movlb	0	; force () banked
 28715  004996  EE20 F00D          	lfsr	2,13
 28716  00499A  5189               	movf	nwkTxTaskHandler@frame& (0+255),w,b
 28717  00499C  26D9               	addwf	fsr2l,f,c
 28718  00499E  518A               	movf	(nwkTxTaskHandler@frame+1)& (0+255),w,b
 28719  0049A0  22DA               	addwfc	fsr2h,f,c
 28720  0049A2  0102               	movlb	2	; force () banked
 28721  0049A4  5100               	movf	_nwkIb& (0+255),w,b
 28722  0049A6  18DE               	xorwf	postinc2,w,c
 28723  0049A8  E128               	bnz	l19536
 28724  0049AA  5101               	movf	(_nwkIb+1)& (0+255),w,b
 28725  0049AC  18DE               	xorwf	postinc2,w,c
 28726  0049AE  A4D8               	btfss	status,2,c
 28727  0049B0  D024               	goto	l19534
 28728                           
 28729                           ; BSR set to: 2
 28730  0049B2  0100               	movlb	0	; force () banked
 28731  0049B4  EE20 F00B          	lfsr	2,11
 28732  0049B8  5189               	movf	nwkTxTaskHandler@frame& (0+255),w,b
 28733  0049BA  26D9               	addwf	fsr2l,f,c
 28734  0049BC  518A               	movf	(nwkTxTaskHandler@frame+1)& (0+255),w,b
 28735  0049BE  22DA               	addwfc	fsr2h,f,c
 28736  0049C0  A0DF               	btfss	indf2,0,c
 28737  0049C2  D01B               	goto	l19534
 28738                           
 28739                           ; BSR set to: 0
 28740                           ;../nwk/nwk_src/nwkTx.c: 344:           {;../nwk/nwk_src/nwkTx.c: 345:             frame
      +                          ->state = NWK_TX_STATE_WAIT_ACK;
 28741  0049C4  0060  F227  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 28742  0049CA  0060  F22B  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 28743  0049D0  0E16               	movlw	22
 28744  0049D2  6EDF               	movwf	indf2,c
 28745                           
 28746                           ; BSR set to: 0
 28747                           ;../nwk/nwk_src/nwkTx.c: 346:             frame->tx.timeout = 4500 / 200 + 1;
 28748  0049D4  0100               	movlb	0	; force () banked
 28749  0049D6  EE20 F085          	lfsr	2,133
 28750  0049DA  5189               	movf	nwkTxTaskHandler@frame& (0+255),w,b
 28751  0049DC  26D9               	addwf	fsr2l,f,c
 28752  0049DE  518A               	movf	(nwkTxTaskHandler@frame+1)& (0+255),w,b
 28753  0049E0  22DA               	addwfc	fsr2h,f,c
 28754  0049E2  0E17               	movlw	23
 28755  0049E4  6EDE               	movwf	postinc2,c
 28756  0049E6  0E00               	movlw	0
 28757  0049E8  6EDD               	movwf	postdec2,c
 28758                           
 28759                           ; BSR set to: 0
 28760                           ;../nwk/nwk_src/nwkTx.c: 347:             SYS_TimerStart(&nwkTxAckWaitTimer);
 28761  0049EA  0EB2               	movlw	low _nwkTxAckWaitTimer
 28762  0049EC  0100               	movlb	0	; force () banked
 28763  0049EE  6F7F               	movwf	SYS_TimerStart@timer& (0+255),b
 28764  0049F0  0E02               	movlw	high _nwkTxAckWaitTimer
 28765  0049F2  6F80               	movwf	(SYS_TimerStart@timer+1)& (0+255),b
 28766  0049F4  ECBB  F05C         	call	_SYS_TimerStart	;wreg free
 28767                           
 28768                           ;../nwk/nwk_src/nwkTx.c: 348:           }
 28769  0049F8  D05F               	goto	l19550
 28770  0049FA                     l19534:
 28771  0049FA                     l19536:
 28772                           
 28773                           ; BSR set to: 0
 28774                           ;../nwk/nwk_src/nwkTx.c: 355:         {;../nwk/nwk_src/nwkTx.c: 356:           frame->st
      +                          ate = NWK_TX_STATE_CONFIRM;
 28775  0049FA  0060  F227  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 28776  004A00  0060  F22B  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 28777  004A06  0E17               	movlw	23
 28778  004A08                     L37:
 28779  004A08  6EDF               	movwf	indf2,c
 28780  004A0A  D056               	goto	l19550
 28781  004A0C                     l19538:
 28782                           
 28783                           ; BSR set to: 0
 28784                           ;../nwk/nwk_src/nwkTx.c: 364:       {;../nwk/nwk_src/nwkTx.c: 366:         nwkRouteFrame
      +                          Sent(frame);
 28785  004A0C  C089  F077         	movff	nwkTxTaskHandler@frame,nwkRouteFrameSent@frame
 28786  004A10  C08A  F078         	movff	nwkTxTaskHandler@frame+1,nwkRouteFrameSent@frame+1
 28787  004A14  EC2B  F039         	call	_nwkRouteFrameSent	;wreg free
 28788                           
 28789                           ; BSR set to: 0
 28790                           ;../nwk/nwk_src/nwkTx.c: 368:         if ((0) == frame->tx.confirm)
 28791  004A18  0100               	movlb	0	; force () banked
 28792  004A1A  EE20 F088          	lfsr	2,136
 28793  004A1E  5189               	movf	nwkTxTaskHandler@frame& (0+255),w,b
 28794  004A20  26D9               	addwf	fsr2l,f,c
 28795  004A22  518A               	movf	(nwkTxTaskHandler@frame+1)& (0+255),w,b
 28796  004A24  22DA               	addwfc	fsr2h,f,c
 28797  004A26  50DE               	movf	postinc2,w,c
 28798  004A28  10DE               	iorwf	postinc2,w,c
 28799  004A2A  A4D8               	btfss	status,2,c
 28800  004A2C  D007               	goto	l19544
 28801                           
 28802                           ; BSR set to: 0
 28803                           ;../nwk/nwk_src/nwkTx.c: 369:           nwkFrameFree(frame);
 28804  004A2E  C089  F071         	movff	nwkTxTaskHandler@frame,nwkFrameFree@frame
 28805  004A32  C08A  F072         	movff	nwkTxTaskHandler@frame+1,nwkFrameFree@frame+1
 28806  004A36  EC58  F05D         	call	_nwkFrameFree	;wreg free
 28807  004A3A  D03E               	goto	l19550
 28808  004A3C                     l19544:
 28809                           
 28810                           ; BSR set to: 0
 28811                           ;../nwk/nwk_src/nwkTx.c: 371:           frame->tx.confirm(frame);
 28812  004A3C  C089  F073         	movff	nwkTxTaskHandler@frame,nwkDataReqTxConf@frame
 28813  004A40  C08A  F074         	movff	nwkTxTaskHandler@frame+1,nwkDataReqTxConf@frame+1
 28814  004A44  0100               	movlb	0	; force () banked
 28815  004A46  EE20 F088          	lfsr	2,136
 28816  004A4A  5189               	movf	nwkTxTaskHandler@frame& (0+255),w,b
 28817  004A4C  26D9               	addwf	fsr2l,f,c
 28818  004A4E  518A               	movf	(nwkTxTaskHandler@frame+1)& (0+255),w,b
 28819  004A50  22DA               	addwfc	fsr2h,f,c
 28820  004A52  006F FF78  F087    	movff	postinc2,??_nwkTxTaskHandler
 28821  004A58  006F FF74  F088    	movff	postdec2,??_nwkTxTaskHandler+1
 28822  004A5E  D801               	call	u17858
 28823  004A60  D02B               	goto	l19550
 28824  004A62                     u17858:
 28825  004A62  0005               	push	
 28826  004A64  6EFA               	movwf	pclath,c
 28827  004A66  0100               	movlb	0	; force () banked
 28828  004A68  5187               	movf	??_nwkTxTaskHandler& (0+255),w,b
 28829  004A6A  6EFD               	movwf	tosl,c
 28830  004A6C  5188               	movf	(??_nwkTxTaskHandler+1)& (0+255),w,b
 28831  004A6E  6EFE               	movwf	tosh,c
 28832  004A70  6AFF               	clrf	tosu,c
 28833  004A72  50FA               	movf	pclath,w,c
 28834  004A74  0012               	return		;indir
 28835  004A76                     l19548:
 28836                           
 28837                           ; BSR set to: 0
 28838  004A76  0060  F227  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 28839  004A7C  0060  F22B  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 28840  004A82  50DF               	movf	indf2,w,c
 28841  004A84  0100               	movlb	0	; force () banked
 28842  004A86  6F87               	movwf	??_nwkTxTaskHandler& (0+255),b
 28843  004A88  6B88               	clrf	(??_nwkTxTaskHandler+1)& (0+255),b
 28844                           
 28845                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28846                           ; Switch size 1, requested type "simple"
 28847                           ; Number of cases is 1, Range of values is 0 to 0
 28848                           ; switch strategies available:
 28849                           ; Name         Instructions Cycles
 28850                           ; simple_byte            4     3 (average)
 28851                           ;	Chosen strategy is simple_byte
 28852  004A8A  5188               	movf	(??_nwkTxTaskHandler+1)& (0+255),w,b
 28853  004A8C  0A00               	xorlw	0	; case 0
 28854  004A8E  A4D8               	btfss	status,2,c
 28855  004A90  D013               	goto	l19550
 28856                           
 28857                           ; BSR set to: 0
 28858                           ; Switch size 1, requested type "simple"
 28859                           ; Number of cases is 6, Range of values is 18 to 23
 28860                           ; switch strategies available:
 28861                           ; Name         Instructions Cycles
 28862                           ; simple_byte           19    10 (average)
 28863                           ;	Chosen strategy is simple_byte
 28864  004A92  5187               	movf	??_nwkTxTaskHandler& (0+255),w,b
 28865  004A94  0A12               	xorlw	18	; case 18
 28866  004A96  B4D8               	btfsc	status,2,c
 28867  004A98  D725               	goto	l19504
 28868  004A9A  0A01               	xorlw	1	; case 19
 28869  004A9C  B4D8               	btfsc	status,2,c
 28870  004A9E  D745               	goto	l19512
 28871  004AA0  0A07               	xorlw	7	; case 20
 28872  004AA2  B4D8               	btfsc	status,2,c
 28873  004AA4  D009               	goto	l19550
 28874  004AA6  0A01               	xorlw	1	; case 21
 28875  004AA8  B4D8               	btfsc	status,2,c
 28876  004AAA  D76A               	goto	l19522
 28877  004AAC  0A03               	xorlw	3	; case 22
 28878  004AAE  B4D8               	btfsc	status,2,c
 28879  004AB0  D003               	goto	l19550
 28880  004AB2  0A01               	xorlw	1	; case 23
 28881  004AB4  B4D8               	btfsc	status,2,c
 28882  004AB6  D7AA               	goto	l19538
 28883  004AB8                     l19550:
 28884                           
 28885                           ;../nwk/nwk_src/nwkTx.c: 301:   while ((0) != (frame = nwkFrameNext(frame)))
 28886  004AB8  C089  F071         	movff	nwkTxTaskHandler@frame,nwkFrameNext@frame
 28887  004ABC  C08A  F072         	movff	nwkTxTaskHandler@frame+1,nwkFrameNext@frame+1
 28888  004AC0  EC99  F049         	call	_nwkFrameNext	;wreg free
 28889  004AC4  C071  F089         	movff	?_nwkFrameNext,nwkTxTaskHandler@frame
 28890  004AC8  C072  F08A         	movff	?_nwkFrameNext+1,nwkTxTaskHandler@frame+1
 28891  004ACC  0100               	movlb	0	; force () banked
 28892  004ACE  5189               	movf	nwkTxTaskHandler@frame& (0+255),w,b
 28893  004AD0  118A               	iorwf	(nwkTxTaskHandler@frame+1)& (0+255),w,b
 28894  004AD2  B4D8               	btfsc	status,2,c
 28895  004AD4  0012               	return	
 28896  004AD6  D7CF               	goto	l19548
 28897  004AD8                     __end_of_nwkTxTaskHandler:
 28898                           	callstack 0
 28899                           
 28900 ;; *************** function _nwkRouteFrameSent *****************
 28901 ;; Defined at:
 28902 ;;		line 246 in file "../nwk/nwk_src/nwkRoute.c"
 28903 ;; Parameters:    Size  Location     Type
 28904 ;;  frame           2   23[BANK0 ] PTR struct NwkFrame_t
 28905 ;;		 -> nwkFrameFrames(690), NULL(0), 
 28906 ;; Auto vars:     Size  Location     Type
 28907 ;;  entry           2   27[BANK0 ] PTR struct NWK_RouteTabl
 28908 ;;		 -> nwkRouteTable(224), NULL(0), 
 28909 ;; Return value:  Size  Location     Type
 28910 ;;                  1    wreg      void 
 28911 ;; Registers used:
 28912 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28913 ;; Tracked objects:
 28914 ;;		On entry : 0/0
 28915 ;;		On exit  : 3F/0
 28916 ;;		Unchanged: 0/0
 28917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28918 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28919 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28920 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28921 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28922 ;;Total ram usage:        6 bytes
 28923 ;; Hardware stack levels used:    1
 28924 ;; Hardware stack levels required when called:   12
 28925 ;; This function calls:
 28926 ;;		_NWK_RouteFindEntry
 28927 ;;		_NWK_RouteFreeEntry
 28928 ;;		_nwkRouteNormalizeRanks
 28929 ;; This function is called by:
 28930 ;;		_nwkTxTaskHandler
 28931 ;; This function uses a non-reentrant model
 28932 ;;
 28933                           
 28934                           	psect	text155
 28935  007256                     __ptext155:
 28936                           	callstack 0
 28937  007256                     _nwkRouteFrameSent:
 28938                           	callstack 15
 28939                           
 28940                           ;../nwk/nwk_src/nwkRoute.c: 246: void nwkRouteFrameSent(NwkFrame_t *frame);../nwk/nwk_sr
      +                          c/nwkRoute.c: 247: {;../nwk/nwk_src/nwkRoute.c: 248:   NWK_RouteTableEntry_t *entry;;../
      +                          nwk/nwk_src/nwkRoute.c: 250:   if (0xffff == frame->header.nwkDstAddr)
 28941                           
 28942                           ; BSR set to: 0
 28943                           ;incstack = 0
 28944  007256  0100               	movlb	0	; force () banked
 28945  007258  EE20 F00F          	lfsr	2,15
 28946  00725C  5177               	movf	nwkRouteFrameSent@frame& (0+255),w,b
 28947  00725E  26D9               	addwf	fsr2l,f,c
 28948  007260  5178               	movf	(nwkRouteFrameSent@frame+1)& (0+255),w,b
 28949  007262  22DA               	addwfc	fsr2h,f,c
 28950  007264  28DE               	incf	postinc2,w,c
 28951  007266  E103               	bnz	l18892
 28952  007268  28DE               	incf	postinc2,w,c
 28953  00726A  B4D8               	btfsc	status,2,c
 28954  00726C  0012               	return	
 28955  00726E                     l18892:
 28956                           
 28957                           ; BSR set to: 0
 28958                           ;../nwk/nwk_src/nwkRoute.c: 253:   entry = NWK_RouteFindEntry(frame->header.nwkDstAddr, 
      +                          frame->header.nwkFcf.multicast);
 28959  00726E  0100               	movlb	0	; force () banked
 28960  007270  EE20 F00F          	lfsr	2,15
 28961  007274  5177               	movf	nwkRouteFrameSent@frame& (0+255),w,b
 28962  007276  26D9               	addwf	fsr2l,f,c
 28963  007278  5178               	movf	(nwkRouteFrameSent@frame+1)& (0+255),w,b
 28964  00727A  22DA               	addwfc	fsr2h,f,c
 28965  00727C  006F FF78  F071    	movff	postinc2,NWK_RouteFindEntry@dst
 28966  007282  006F FF74  F072    	movff	postdec2,NWK_RouteFindEntry@dst+1
 28967  007288  EE20 F00B          	lfsr	2,11
 28968  00728C  5177               	movf	nwkRouteFrameSent@frame& (0+255),w,b
 28969  00728E  26D9               	addwf	fsr2l,f,c
 28970  007290  5178               	movf	(nwkRouteFrameSent@frame+1)& (0+255),w,b
 28971  007292  22DA               	addwfc	fsr2h,f,c
 28972  007294  0E00               	movlw	0
 28973  007296  B6DF               	btfsc	indf2,3,c
 28974  007298  0E01               	movlw	1
 28975  00729A  0100               	movlb	0	; force () banked
 28976  00729C  6F73               	movwf	NWK_RouteFindEntry@multicast& (0+255),b
 28977  00729E  EC41  F050         	call	_NWK_RouteFindEntry	;wreg free
 28978  0072A2  C071  F07B         	movff	?_NWK_RouteFindEntry,nwkRouteFrameSent@entry
 28979  0072A6  C072  F07C         	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameSent@entry+1
 28980                           
 28981                           ; BSR set to: 0
 28982                           ;../nwk/nwk_src/nwkRoute.c: 255:   if ((0) == entry || entry->fixed)
 28983  0072AA  0100               	movlb	0	; force () banked
 28984  0072AC  517B               	movf	nwkRouteFrameSent@entry& (0+255),w,b
 28985  0072AE  117C               	iorwf	(nwkRouteFrameSent@entry+1)& (0+255),w,b
 28986  0072B0  B4D8               	btfsc	status,2,c
 28987  0072B2  0012               	return	
 28988                           
 28989                           ; BSR set to: 0
 28990  0072B4  0060  F1EF  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 28991  0072BA  0060  F1F3  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 28992  0072C0  0100               	movlb	0	; force () banked
 28993  0072C2  B0DF               	btfsc	indf2,0,c
 28994  0072C4  0012               	return	
 28995                           
 28996                           ; BSR set to: 0
 28997                           ;../nwk/nwk_src/nwkRoute.c: 258:   if (NWK_SUCCESS_STATUS == frame->tx.status)
 28998  0072C6  0100               	movlb	0	; force () banked
 28999  0072C8  EE20 F084          	lfsr	2,132
 29000  0072CC  5177               	movf	nwkRouteFrameSent@frame& (0+255),w,b
 29001  0072CE  26D9               	addwf	fsr2l,f,c
 29002  0072D0  5178               	movf	(nwkRouteFrameSent@frame+1)& (0+255),w,b
 29003  0072D2  22DA               	addwfc	fsr2h,f,c
 29004  0072D4  50DF               	movf	indf2,w,c
 29005  0072D6  A4D8               	btfss	status,2,c
 29006  0072D8  D019               	goto	l18906
 29007                           
 29008                           ; BSR set to: 0
 29009                           ;../nwk/nwk_src/nwkRoute.c: 259:   {;../nwk/nwk_src/nwkRoute.c: 260:     entry->score = 
      +                          3;
 29010  0072DA  0060  F1EF  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 29011  0072E0  0060  F1F3  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 29012  0072E6  0100               	movlb	0	; force () banked
 29013  0072E8  50DF               	movf	223,w,c
 29014  0072EA  0B0F               	andlw	-241
 29015  0072EC  0930               	iorlw	48
 29016  0072EE  6EDF               	movwf	223,c
 29017                           
 29018                           ; BSR set to: 0
 29019                           ;../nwk/nwk_src/nwkRoute.c: 262:     if (255 == ++entry->rank)
 29020  0072F0  0100               	movlb	0	; force () banked
 29021  0072F2  EE20 F005          	lfsr	2,5
 29022  0072F6  517B               	movf	nwkRouteFrameSent@entry& (0+255),w,b
 29023  0072F8  26D9               	addwf	fsr2l,f,c
 29024  0072FA  517C               	movf	(nwkRouteFrameSent@entry+1)& (0+255),w,b
 29025  0072FC  22DA               	addwfc	fsr2h,f,c
 29026  0072FE  2ADF               	incf	indf2,f,c
 29027  007300  28DE               	incf	postinc2,w,c
 29028  007302  A4D8               	btfss	status,2,c
 29029  007304  0012               	return	
 29030                           
 29031                           ; BSR set to: 0
 29032                           ;../nwk/nwk_src/nwkRoute.c: 263:       nwkRouteNormalizeRanks();
 29033  007306  ECE2  F056         	call	_nwkRouteNormalizeRanks	;wreg free
 29034  00730A  0012               	return	
 29035  00730C                     l18906:
 29036                           
 29037                           ; BSR set to: 0
 29038                           ;../nwk/nwk_src/nwkRoute.c: 266:   {;../nwk/nwk_src/nwkRoute.c: 267:     if (0 == --entr
      +                          y->score)
 29039  00730C  0E01               	movlw	1
 29040  00730E  0100               	movlb	0	; force () banked
 29041  007310  6F79               	movwf	??_nwkRouteFrameSent& (0+255),b
 29042  007312  0060  F1EF  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 29043  007318  0060  F1F3  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 29044  00731E  0100               	movlb	0	; force () banked
 29045  007320  38DF               	swapf	223,w,c
 29046  007322  0B0F               	andlw	15
 29047  007324  0100               	movlb	0	; force () banked
 29048  007326  6F7A               	movwf	(??_nwkRouteFrameSent+1)& (0+255),b
 29049  007328  5179               	movf	??_nwkRouteFrameSent& (0+255),w,b
 29050  00732A  5F7A               	subwf	(??_nwkRouteFrameSent+1)& (0+255),f,b
 29051  00732C  3B7A               	swapf	(??_nwkRouteFrameSent+1)& (0+255),f,b
 29052  00732E  0100               	movlb	0	; force () banked
 29053  007330  50DF               	movf	223,w,c
 29054  007332  0100               	movlb	0	; force () banked
 29055  007334  197A               	xorwf	(??_nwkRouteFrameSent+1)& (0+255),w,b
 29056  007336  0B0F               	andlw	-241
 29057  007338  197A               	xorwf	(??_nwkRouteFrameSent+1)& (0+255),w,b
 29058  00733A  0100               	movlb	0	; force () banked
 29059  00733C  6EDF               	movwf	223,c
 29060  00733E  38DF               	swapf	223,w,c
 29061  007340  0B0F               	andlw	15
 29062  007342  0900               	iorlw	0
 29063  007344  A4D8               	btfss	status,2,c
 29064  007346  0012               	return	
 29065                           
 29066                           ; BSR set to: 0
 29067                           ;../nwk/nwk_src/nwkRoute.c: 268:       NWK_RouteFreeEntry(entry);
 29068  007348  C07B  F071         	movff	nwkRouteFrameSent@entry,NWK_RouteFreeEntry@entry
 29069  00734C  C07C  F072         	movff	nwkRouteFrameSent@entry+1,NWK_RouteFreeEntry@entry+1
 29070  007350  EC00  F059         	call	_NWK_RouteFreeEntry	;wreg free
 29071                           
 29072                           ; BSR set to: 0
 29073  007354  0012               	return		;funcret
 29074  007356                     __end_of_nwkRouteFrameSent:
 29075                           	callstack 0
 29076                           
 29077 ;; *************** function _nwkRouteNormalizeRanks *****************
 29078 ;; Defined at:
 29079 ;;		line 371 in file "../nwk/nwk_src/nwkRoute.c"
 29080 ;; Parameters:    Size  Location     Type
 29081 ;;		None
 29082 ;; Auto vars:     Size  Location     Type
 29083 ;;  i               1   18[BANK0 ] unsigned char 
 29084 ;; Return value:  Size  Location     Type
 29085 ;;                  1    wreg      void 
 29086 ;; Registers used:
 29087 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29088 ;; Tracked objects:
 29089 ;;		On entry : 3F/0
 29090 ;;		On exit  : 3F/0
 29091 ;;		Unchanged: 0/0
 29092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29094 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29095 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29096 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29097 ;;Total ram usage:        2 bytes
 29098 ;; Hardware stack levels used:    1
 29099 ;; Hardware stack levels required when called:   11
 29100 ;; This function calls:
 29101 ;;		Nothing
 29102 ;; This function is called by:
 29103 ;;		_nwkRouteFrameSent
 29104 ;; This function uses a non-reentrant model
 29105 ;;
 29106                           
 29107                           	psect	text156
 29108  00ADC4                     __ptext156:
 29109                           	callstack 0
 29110  00ADC4                     _nwkRouteNormalizeRanks:
 29111                           	callstack 15
 29112                           
 29113                           ;../nwk/nwk_src/nwkRoute.c: 373:   for (uint8_t i = 0; i < 32; i++)
 29114                           
 29115                           ; BSR set to: 0
 29116                           ;incstack = 0
 29117  00ADC4  0E00               	movlw	0
 29118  00ADC6  0100               	movlb	0	; force () banked
 29119  00ADC8  6F72               	movwf	nwkRouteNormalizeRanks@i& (0+255),b
 29120  00ADCA  D01A               	goto	l13584
 29121  00ADCC                     l13580:
 29122                           
 29123                           ; BSR set to: 0
 29124                           ;../nwk/nwk_src/nwkRoute.c: 374:     nwkRouteTable[i].rank = (nwkRouteTable[i].rank >> 1
      +                          ) + 1;
 29125  00ADCC  0100               	movlb	0	; force () banked
 29126  00ADCE  5172               	movf	nwkRouteNormalizeRanks@i& (0+255),w,b
 29127  00ADD0  0D07               	mullw	7
 29128  00ADD2  0E05               	movlw	low (_nwkRouteTable+5)
 29129  00ADD4  24F3               	addwf	243,w,c
 29130  00ADD6  6ED9               	movwf	fsr2l,c
 29131  00ADD8  0E08               	movlw	high (_nwkRouteTable+5)
 29132  00ADDA  20F4               	addwfc	prodh,w,c
 29133  00ADDC  6EDA               	movwf	fsr2h,c
 29134  00ADDE  5172               	movf	nwkRouteNormalizeRanks@i& (0+255),w,b
 29135  00ADE0  0D07               	mullw	7
 29136  00ADE2  0E05               	movlw	low (_nwkRouteTable+5)
 29137  00ADE4  24F3               	addwf	243,w,c
 29138  00ADE6  6EE9               	movwf	fsr0l,c
 29139  00ADE8  0E08               	movlw	high (_nwkRouteTable+5)
 29140  00ADEA  20F4               	addwfc	prodh,w,c
 29141  00ADEC  6EEA               	movwf	fsr0h,c
 29142  00ADEE  50EF               	movf	indf0,w,c
 29143  00ADF0  0100               	movlb	0	; force () banked
 29144  00ADF2  6F71               	movwf	??_nwkRouteNormalizeRanks& (0+255),b
 29145  00ADF4  90D8               	bcf	status,0,c
 29146  00ADF6  3371               	rrcf	??_nwkRouteNormalizeRanks& (0+255),f,b
 29147  00ADF8  2971               	incf	??_nwkRouteNormalizeRanks& (0+255),w,b
 29148  00ADFA  6EDF               	movwf	indf2,c
 29149                           
 29150                           ; BSR set to: 0
 29151  00ADFC  0100               	movlb	0	; force () banked
 29152  00ADFE  2B72               	incf	nwkRouteNormalizeRanks@i& (0+255),f,b
 29153  00AE00                     l13584:
 29154                           
 29155                           ; BSR set to: 0
 29156  00AE00  0E1F               	movlw	31
 29157  00AE02  0100               	movlb	0	; force () banked
 29158  00AE04  6572               	cpfsgt	nwkRouteNormalizeRanks@i& (0+255),b
 29159  00AE06  D7E2               	goto	l13580
 29160  00AE08  0012               	return	
 29161  00AE0A                     __end_of_nwkRouteNormalizeRanks:
 29162                           	callstack 0
 29163                           
 29164 ;; *************** function _nwkDataReqTxConf *****************
 29165 ;; Defined at:
 29166 ;;		line 170 in file "../nwk/nwk_src/nwkDataReq.c"
 29167 ;; Parameters:    Size  Location     Type
 29168 ;;  frame           2   19[BANK0 ] PTR struct NwkFrame_t
 29169 ;;		 -> nwkFrameFrames(690), NULL(0), 
 29170 ;; Auto vars:     Size  Location     Type
 29171 ;;  req             2   23[BANK0 ] PTR struct NWK_DataReq_t
 29172 ;;		 -> tx_buffer(264), NULL(0), 
 29173 ;; Return value:  Size  Location     Type
 29174 ;;                  1    wreg      void 
 29175 ;; Registers used:
 29176 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 29177 ;; Tracked objects:
 29178 ;;		On entry : 3F/0
 29179 ;;		On exit  : 3F/2
 29180 ;;		Unchanged: 0/0
 29181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29182 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29183 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29184 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29185 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29186 ;;Total ram usage:        6 bytes
 29187 ;; Hardware stack levels used:    1
 29188 ;; Hardware stack levels required when called:   12
 29189 ;; This function calls:
 29190 ;;		_nwkFrameFree
 29191 ;; This function is called by:
 29192 ;;		_nwkDataReqSendFrame
 29193 ;;		_nwkTxTaskHandler
 29194 ;; This function uses a non-reentrant model
 29195 ;;
 29196                           
 29197                           	psect	text157
 29198  008EAA                     __ptext157:
 29199                           	callstack 0
 29200  008EAA                     _nwkDataReqTxConf:
 29201                           	callstack 15
 29202                           
 29203                           ;../nwk/nwk_src/nwkDataReq.c: 170: static void nwkDataReqTxConf(NwkFrame_t *frame);../nw
      +                          k/nwk_src/nwkDataReq.c: 171: {;../nwk/nwk_src/nwkDataReq.c: 172:   for (NWK_DataReq_t *r
      +                          eq = nwkDataReqQueue; req; req = req->next)
 29204                           
 29205                           ; BSR set to: 0
 29206                           ;incstack = 0
 29207  008EAA  C1D7  F077         	movff	_nwkDataReqQueue,nwkDataReqTxConf@req
 29208  008EAE  C1D8  F078         	movff	_nwkDataReqQueue+1,nwkDataReqTxConf@req+1
 29209  008EB2  D047               	goto	l14758
 29210  008EB4                     l14750:
 29211                           
 29212                           ; BSR set to: 0
 29213                           ;../nwk/nwk_src/nwkDataReq.c: 173:   {;../nwk/nwk_src/nwkDataReq.c: 174:     if (req->fr
      +                          ame == frame)
 29214  008EB4  0100               	movlb	0	; force () banked
 29215  008EB6  EE20 F002          	lfsr	2,2
 29216  008EBA  5177               	movf	nwkDataReqTxConf@req& (0+255),w,b
 29217  008EBC  26D9               	addwf	fsr2l,f,c
 29218  008EBE  5178               	movf	(nwkDataReqTxConf@req+1)& (0+255),w,b
 29219  008EC0  22DA               	addwfc	fsr2h,f,c
 29220  008EC2  0100               	movlb	0	; force () banked
 29221  008EC4  5173               	movf	nwkDataReqTxConf@frame& (0+255),w,b
 29222  008EC6  18DE               	xorwf	postinc2,w,c
 29223  008EC8  E130               	bnz	l14756
 29224  008ECA  5174               	movf	(nwkDataReqTxConf@frame+1)& (0+255),w,b
 29225  008ECC  18DE               	xorwf	postinc2,w,c
 29226  008ECE  A4D8               	btfss	status,2,c
 29227  008ED0  D02C               	goto	l14756
 29228                           
 29229                           ; BSR set to: 0
 29230                           ;../nwk/nwk_src/nwkDataReq.c: 175:     {;../nwk/nwk_src/nwkDataReq.c: 176:       req->st
      +                          atus = frame->tx.status;
 29231  008ED2  0100               	movlb	0	; force () banked
 29232  008ED4  EE20 F084          	lfsr	2,132
 29233  008ED8  5173               	movf	nwkDataReqTxConf@frame& (0+255),w,b
 29234  008EDA  26D9               	addwf	fsr2l,f,c
 29235  008EDC  5174               	movf	(nwkDataReqTxConf@frame+1)& (0+255),w,b
 29236  008EDE  22DA               	addwfc	fsr2h,f,c
 29237  008EE0  0100               	movlb	0	; force () banked
 29238  008EE2  EE00 F011          	lfsr	0,17
 29239  008EE6  5177               	movf	nwkDataReqTxConf@req& (0+255),w,b
 29240  008EE8  26E9               	addwf	fsr0l,f,c
 29241  008EEA  5178               	movf	(nwkDataReqTxConf@req+1)& (0+255),w,b
 29242  008EEC  22EA               	addwfc	fsr0h,f,c
 29243  008EEE  006F FF7F FFEF     	movff	indf2,indf0
 29244                           
 29245                           ;../nwk/nwk_src/nwkDataReq.c: 177:       req->control = frame->tx.control;
 29246  008EF4  0100               	movlb	0	; force () banked
 29247  008EF6  EE20 F087          	lfsr	2,135
 29248  008EFA  5173               	movf	nwkDataReqTxConf@frame& (0+255),w,b
 29249  008EFC  26D9               	addwf	fsr2l,f,c
 29250  008EFE  5174               	movf	(nwkDataReqTxConf@frame+1)& (0+255),w,b
 29251  008F00  22DA               	addwfc	fsr2h,f,c
 29252  008F02  0100               	movlb	0	; force () banked
 29253  008F04  EE00 F012          	lfsr	0,18
 29254  008F08  5177               	movf	nwkDataReqTxConf@req& (0+255),w,b
 29255  008F0A  26E9               	addwf	fsr0l,f,c
 29256  008F0C  5178               	movf	(nwkDataReqTxConf@req+1)& (0+255),w,b
 29257  008F0E  22EA               	addwfc	fsr0h,f,c
 29258  008F10  006F FF7F FFEF     	movff	indf2,indf0
 29259                           
 29260                           ; BSR set to: 0
 29261                           ;../nwk/nwk_src/nwkDataReq.c: 178:       req->state = NWK_DATA_REQ_STATE_CONFIRM;
 29262  008F16  0100               	movlb	0	; force () banked
 29263  008F18  EE20 F004          	lfsr	2,4
 29264  008F1C  5177               	movf	nwkDataReqTxConf@req& (0+255),w,b
 29265  008F1E  26D9               	addwf	fsr2l,f,c
 29266  008F20  5178               	movf	(nwkDataReqTxConf@req+1)& (0+255),w,b
 29267  008F22  22DA               	addwfc	fsr2h,f,c
 29268  008F24  0E02               	movlw	2
 29269  008F26  6EDF               	movwf	indf2,c
 29270                           
 29271                           ;../nwk/nwk_src/nwkDataReq.c: 179:       break;
 29272  008F28  D011               	goto	u11580
 29273  008F2A                     l14756:
 29274                           
 29275                           ; BSR set to: 0
 29276                           ;../nwk/nwk_src/nwkDataReq.c: 181:   }
 29277  008F2A  0060  F1DF  FFD9   	movff	nwkDataReqTxConf@req,fsr2l
 29278  008F30  0060  F1E3  FFDA   	movff	nwkDataReqTxConf@req+1,fsr2h
 29279  008F36  006F FF78  F077    	movff	postinc2,nwkDataReqTxConf@req
 29280  008F3C  006F FF74  F078    	movff	postdec2,nwkDataReqTxConf@req+1
 29281  008F42                     l14758:
 29282  008F42  0100               	movlb	0	; force () banked
 29283  008F44  5177               	movf	nwkDataReqTxConf@req& (0+255),w,b
 29284  008F46  1178               	iorwf	(nwkDataReqTxConf@req+1)& (0+255),w,b
 29285  008F48  A4D8               	btfss	status,2,c
 29286  008F4A  D7B4               	goto	l14750
 29287  008F4C                     u11580:
 29288                           
 29289                           ; BSR set to: 0
 29290                           ;../nwk/nwk_src/nwkDataReq.c: 183:   nwkFrameFree(frame);
 29291  008F4C  C073  F071         	movff	nwkDataReqTxConf@frame,nwkFrameFree@frame
 29292  008F50  C074  F072         	movff	nwkDataReqTxConf@frame+1,nwkFrameFree@frame+1
 29293  008F54  EC58  F05D         	call	_nwkFrameFree	;wreg free
 29294                           
 29295                           ; BSR set to: 2
 29296  008F58  0012               	return		;funcret
 29297  008F5A                     __end_of_nwkDataReqTxConf:
 29298                           	callstack 0
 29299                           
 29300 ;; *************** function _PHY_DataReq *****************
 29301 ;; Defined at:
 29302 ;;		line 67 in file "../phy/phy_src/phy.c"
 29303 ;; Parameters:    Size  Location     Type
 29304 ;;  data            2   36[BANK0 ] PTR unsigned char 
 29305 ;;		 -> nwkFrameFrames..(128), nwkFrameFrames(690), NULL(0), 
 29306 ;;  size            1   38[BANK0 ] unsigned char 
 29307 ;; Auto vars:     Size  Location     Type
 29308 ;;		None
 29309 ;; Return value:  Size  Location     Type
 29310 ;;                  1    wreg      void 
 29311 ;; Registers used:
 29312 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29313 ;; Tracked objects:
 29314 ;;		On entry : 3F/0
 29315 ;;		On exit  : 3F/0
 29316 ;;		Unchanged: 0/0
 29317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29318 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29321 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29322 ;;Total ram usage:        3 bytes
 29323 ;; Hardware stack levels used:    1
 29324 ;; Hardware stack levels required when called:   12
 29325 ;; This function calls:
 29326 ;;		_memcpy
 29327 ;; This function is called by:
 29328 ;;		_nwkTxTaskHandler
 29329 ;; This function uses a non-reentrant model
 29330 ;;
 29331                           
 29332                           	psect	text158
 29333  00B2E4                     __ptext158:
 29334                           	callstack 0
 29335  00B2E4                     _PHY_DataReq:
 29336                           	callstack 15
 29337                           
 29338                           ;../phy/phy_src/phy.c: 69:     if(size < sizeof(phyTxBuffer)){
 29339                           
 29340                           ; BSR set to: 2
 29341                           ;incstack = 0
 29342  00B2E4  0E80               	movlw	128
 29343  00B2E6  0100               	movlb	0	; force () banked
 29344  00B2E8  6186               	cpfslt	PHY_DataReq@size& (0+255),b
 29345  00B2EA  D015               	goto	l19050
 29346                           
 29347                           ; BSR set to: 0
 29348                           ;../phy/phy_src/phy.c: 70:         memcpy(phyTxBuffer, data, size);
 29349  00B2EC  0E00               	movlw	low _phyTxBuffer
 29350  00B2EE  0100               	movlb	0	; force () banked
 29351  00B2F0  6F77               	movwf	memcpy@d1& (0+255),b
 29352  00B2F2  0E09               	movlw	high _phyTxBuffer
 29353  00B2F4  6F78               	movwf	(memcpy@d1+1)& (0+255),b
 29354  00B2F6  C084  F079         	movff	PHY_DataReq@data,memcpy@s1
 29355  00B2FA  C085  F07A         	movff	PHY_DataReq@data+1,memcpy@s1+1
 29356  00B2FE  0100               	movlb	0	; force () banked
 29357  00B300  5179               	movf	memcpy@s1& (0+255),w,b
 29358  00B302  117A               	iorwf	(memcpy@s1+1)& (0+255),w,b
 29359  00B304  A4D8               	btfss	status,2,c
 29360  00B306  0E20               	movlw	32
 29361  00B308  6F7B               	movwf	(memcpy@s1+2)& (0+255),b
 29362  00B30A  C086  F07C         	movff	PHY_DataReq@size,memcpy@n
 29363  00B30E  0100               	movlb	0	; force () banked
 29364  00B310  6B7D               	clrf	(memcpy@n+1)& (0+255),b
 29365  00B312  ECC1  F04F         	call	_memcpy	;wreg free
 29366  00B316                     l19050:
 29367                           
 29368                           ; BSR set to: 0
 29369                           ;../phy/phy_src/phy.c: 72:     phyTxSize = size;
 29370  00B316  C086  F1EA         	movff	PHY_DataReq@size,_phyTxSize
 29371                           
 29372                           ; BSR set to: 0
 29373  00B31A  0012               	return		;funcret
 29374  00B31C                     __end_of_PHY_DataReq:
 29375                           	callstack 0
 29376                           
 29377 ;; *************** function _nwkRxTaskHandler *****************
 29378 ;; Defined at:
 29379 ;;		line 483 in file "../nwk/nwk_src/nwkRx.c"
 29380 ;; Parameters:    Size  Location     Type
 29381 ;;		None
 29382 ;; Auto vars:     Size  Location     Type
 29383 ;;  frame           2  111[BANK0 ] PTR struct NwkFrame_t
 29384 ;;		 -> nwkFrameFrames(690), NULL(0), 
 29385 ;; Return value:  Size  Location     Type
 29386 ;;                  1    wreg      void 
 29387 ;; Registers used:
 29388 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29389 ;; Tracked objects:
 29390 ;;		On entry : 0/0
 29391 ;;		On exit  : 3F/0
 29392 ;;		Unchanged: 0/0
 29393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29395 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29396 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29397 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29398 ;;Total ram usage:        4 bytes
 29399 ;; Hardware stack levels used:    1
 29400 ;; Hardware stack levels required when called:   19
 29401 ;; This function calls:
 29402 ;;		_nwkFrameFree
 29403 ;;		_nwkFrameNext
 29404 ;;		_nwkRouteFrame
 29405 ;;		_nwkRxHandleIndication
 29406 ;;		_nwkRxHandleReceivedFrame
 29407 ;; This function is called by:
 29408 ;;		_NWK_TaskHandler
 29409 ;; This function uses a non-reentrant model
 29410 ;;
 29411                           
 29412                           	psect	text159
 29413  00946E                     __ptext159:
 29414                           	callstack 0
 29415  00946E                     _nwkRxTaskHandler:
 29416                           	callstack 9
 29417                           
 29418                           ;../nwk/nwk_src/nwkRx.c: 485:   NwkFrame_t *frame = (0);
 29419                           
 29420                           ; BSR set to: 0
 29421                           ;incstack = 0
 29422  00946E  0E00               	movlw	0
 29423  009470  0100               	movlb	0	; force () banked
 29424  009472  6FCF               	movwf	nwkRxTaskHandler@frame& (0+255),b
 29425  009474  0E00               	movlw	0
 29426  009476  6FD0               	movwf	(nwkRxTaskHandler@frame+1)& (0+255),b
 29427                           
 29428                           ;../nwk/nwk_src/nwkRx.c: 487:   while ((0) != (frame = nwkFrameNext(frame)))
 29429  009478  D037               	goto	l19496
 29430  00947A                     l19484:
 29431                           
 29432                           ; BSR set to: 0
 29433                           ;../nwk/nwk_src/nwkRx.c: 492:       {;../nwk/nwk_src/nwkRx.c: 493:         nwkRxHandleRe
      +                          ceivedFrame(frame);
 29434  00947A  C0CF  F08E         	movff	nwkRxTaskHandler@frame,nwkRxHandleReceivedFrame@frame
 29435  00947E  C0D0  F08F         	movff	nwkRxTaskHandler@frame+1,nwkRxHandleReceivedFrame@frame+1
 29436  009482  EC5A  F00E         	call	_nwkRxHandleReceivedFrame	;wreg free
 29437                           
 29438                           ;../nwk/nwk_src/nwkRx.c: 494:       } break;
 29439  009486  D030               	goto	l19496
 29440  009488                     l19486:
 29441                           
 29442                           ; BSR set to: 0
 29443                           ;../nwk/nwk_src/nwkRx.c: 504:       {;../nwk/nwk_src/nwkRx.c: 505:         nwkRxHandleIn
      +                          dication(frame);
 29444  009488  C0CF  F0C8         	movff	nwkRxTaskHandler@frame,nwkRxHandleIndication@frame
 29445  00948C  C0D0  F0C9         	movff	nwkRxTaskHandler@frame+1,nwkRxHandleIndication@frame+1
 29446  009490  ECE5  F043         	call	_nwkRxHandleIndication	;wreg free
 29447                           
 29448                           ;../nwk/nwk_src/nwkRx.c: 506:       } break;
 29449  009494  D029               	goto	l19496
 29450  009496                     l19488:
 29451                           
 29452                           ; BSR set to: 0
 29453                           ;../nwk/nwk_src/nwkRx.c: 510:       {;../nwk/nwk_src/nwkRx.c: 511:         nwkRouteFrame
      +                          (frame);
 29454  009496  C0CF  F091         	movff	nwkRxTaskHandler@frame,nwkRouteFrame@frame
 29455  00949A  C0D0  F092         	movff	nwkRxTaskHandler@frame+1,nwkRouteFrame@frame+1
 29456  00949E  ECAB  F039         	call	_nwkRouteFrame	;wreg free
 29457                           
 29458                           ;../nwk/nwk_src/nwkRx.c: 512:       } break;
 29459  0094A2  D022               	goto	l19496
 29460  0094A4                     l19490:
 29461                           
 29462                           ; BSR set to: 0
 29463                           ;../nwk/nwk_src/nwkRx.c: 516:       {;../nwk/nwk_src/nwkRx.c: 517:         nwkFrameFree(
      +                          frame);
 29464  0094A4  C0CF  F071         	movff	nwkRxTaskHandler@frame,nwkFrameFree@frame
 29465  0094A8  C0D0  F072         	movff	nwkRxTaskHandler@frame+1,nwkFrameFree@frame+1
 29466  0094AC  EC58  F05D         	call	_nwkFrameFree	;wreg free
 29467                           
 29468                           ;../nwk/nwk_src/nwkRx.c: 518:       } break;
 29469  0094B0  D01B               	goto	l19496
 29470  0094B2                     l19494:
 29471                           
 29472                           ; BSR set to: 0
 29473  0094B2  0060  F33F  FFD9   	movff	nwkRxTaskHandler@frame,fsr2l
 29474  0094B8  0060  F343  FFDA   	movff	nwkRxTaskHandler@frame+1,fsr2h
 29475  0094BE  50DF               	movf	indf2,w,c
 29476  0094C0  0100               	movlb	0	; force () banked
 29477  0094C2  6FCD               	movwf	??_nwkRxTaskHandler& (0+255),b
 29478  0094C4  6BCE               	clrf	(??_nwkRxTaskHandler+1)& (0+255),b
 29479                           
 29480                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 29481                           ; Switch size 1, requested type "simple"
 29482                           ; Number of cases is 1, Range of values is 0 to 0
 29483                           ; switch strategies available:
 29484                           ; Name         Instructions Cycles
 29485                           ; simple_byte            4     3 (average)
 29486                           ;	Chosen strategy is simple_byte
 29487  0094C6  51CE               	movf	(??_nwkRxTaskHandler+1)& (0+255),w,b
 29488  0094C8  0A00               	xorlw	0	; case 0
 29489  0094CA  A4D8               	btfss	status,2,c
 29490  0094CC  D00D               	goto	l19496
 29491                           
 29492                           ; BSR set to: 0
 29493                           ; Switch size 1, requested type "simple"
 29494                           ; Number of cases is 4, Range of values is 32 to 36
 29495                           ; switch strategies available:
 29496                           ; Name         Instructions Cycles
 29497                           ; simple_byte           13     7 (average)
 29498                           ;	Chosen strategy is simple_byte
 29499  0094CE  51CD               	movf	??_nwkRxTaskHandler& (0+255),w,b
 29500  0094D0  0A20               	xorlw	32	; case 32
 29501  0094D2  B4D8               	btfsc	status,2,c
 29502  0094D4  D7D2               	goto	l19484
 29503  0094D6  0A02               	xorlw	2	; case 34
 29504  0094D8  B4D8               	btfsc	status,2,c
 29505  0094DA  D7D6               	goto	l19486
 29506  0094DC  0A01               	xorlw	1	; case 35
 29507  0094DE  B4D8               	btfsc	status,2,c
 29508  0094E0  D7DA               	goto	l19488
 29509  0094E2  0A07               	xorlw	7	; case 36
 29510  0094E4  B4D8               	btfsc	status,2,c
 29511  0094E6  D7DE               	goto	l19490
 29512  0094E8                     l19496:
 29513                           
 29514                           ;../nwk/nwk_src/nwkRx.c: 487:   while ((0) != (frame = nwkFrameNext(frame)))
 29515  0094E8  C0CF  F071         	movff	nwkRxTaskHandler@frame,nwkFrameNext@frame
 29516  0094EC  C0D0  F072         	movff	nwkRxTaskHandler@frame+1,nwkFrameNext@frame+1
 29517  0094F0  EC99  F049         	call	_nwkFrameNext	;wreg free
 29518  0094F4  C071  F0CF         	movff	?_nwkFrameNext,nwkRxTaskHandler@frame
 29519  0094F8  C072  F0D0         	movff	?_nwkFrameNext+1,nwkRxTaskHandler@frame+1
 29520  0094FC  0100               	movlb	0	; force () banked
 29521  0094FE  51CF               	movf	nwkRxTaskHandler@frame& (0+255),w,b
 29522  009500  11D0               	iorwf	(nwkRxTaskHandler@frame+1)& (0+255),w,b
 29523  009502  B4D8               	btfsc	status,2,c
 29524  009504  0012               	return	
 29525  009506  D7D5               	goto	l19494
 29526  009508                     __end_of_nwkRxTaskHandler:
 29527                           	callstack 0
 29528                           
 29529 ;; *************** function _nwkRxHandleReceivedFrame *****************
 29530 ;; Defined at:
 29531 ;;		line 292 in file "../nwk/nwk_src/nwkRx.c"
 29532 ;; Parameters:    Size  Location     Type
 29533 ;;  frame           2   46[BANK0 ] PTR struct NwkFrame_t
 29534 ;;		 -> nwkFrameFrames(690), NULL(0), 
 29535 ;; Auto vars:     Size  Location     Type
 29536 ;;  mcHeader        2   52[BANK0 ] PTR struct NwkFrameMulti
 29537 ;;		 -> nwkFrameFrames..(128), nwkFrameFrames(690), 
 29538 ;;  member          1   51[BANK0 ] _Bool 
 29539 ;;  broadcast       1   50[BANK0 ] _Bool 
 29540 ;;  header          2   54[BANK0 ] PTR struct NwkFrameHeade
 29541 ;;		 -> nwkFrameFrames..(128), nwkFrameFrames(690), NULL(0), 
 29542 ;; Return value:  Size  Location     Type
 29543 ;;                  1    wreg      void 
 29544 ;; Registers used:
 29545 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29546 ;; Tracked objects:
 29547 ;;		On entry : 0/0
 29548 ;;		On exit  : 3D/0
 29549 ;;		Unchanged: 0/0
 29550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29551 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29552 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29553 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29554 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29555 ;;Total ram usage:       10 bytes
 29556 ;; Hardware stack levels used:    1
 29557 ;; Hardware stack levels required when called:   14
 29558 ;; This function calls:
 29559 ;;		_NWK_GroupIsMember
 29560 ;;		_nwkRouteFrameReceived
 29561 ;;		_nwkRxRejectDuplicate
 29562 ;;		_nwkTxBroadcastFrame
 29563 ;; This function is called by:
 29564 ;;		_nwkRxTaskHandler
 29565 ;; This function uses a non-reentrant model
 29566 ;;
 29567                           
 29568                           	psect	text160
 29569  001CB4                     __ptext160:
 29570                           	callstack 0
 29571  001CB4                     _nwkRxHandleReceivedFrame:
 29572                           	callstack 13
 29573                           
 29574                           ;../nwk/nwk_src/nwkRx.c: 292: static void nwkRxHandleReceivedFrame(NwkFrame_t *frame);..
      +                          /nwk/nwk_src/nwkRx.c: 293: {;../nwk/nwk_src/nwkRx.c: 294:   NwkFrameHeader_t *header = &
      +                          frame->header;
 29575                           
 29576                           ; BSR set to: 0
 29577                           ;incstack = 0
 29578  001CB4  0E02               	movlw	2
 29579  001CB6  0100               	movlb	0	; force () banked
 29580  001CB8  258E               	addwf	nwkRxHandleReceivedFrame@frame& (0+255),w,b
 29581  001CBA  0100               	movlb	0	; force () banked
 29582  001CBC  6F96               	movwf	nwkRxHandleReceivedFrame@header& (0+255),b
 29583  001CBE  0E00               	movlw	0
 29584  001CC0  0100               	movlb	0	; force () banked
 29585  001CC2  218F               	addwfc	(nwkRxHandleReceivedFrame@frame+1)& (0+255),w,b
 29586  001CC4  0100               	movlb	0	; force () banked
 29587  001CC6  6F97               	movwf	(nwkRxHandleReceivedFrame@header+1)& (0+255),b
 29588                           
 29589                           ; BSR set to: 0
 29590                           ;../nwk/nwk_src/nwkRx.c: 296:   frame->state = NWK_RX_STATE_FINISH;
 29591  001CC8  0060  F23B  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 29592  001CCE  0060  F23F  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 29593  001CD4  0E24               	movlw	36
 29594  001CD6  6EDF               	movwf	indf2,c
 29595                           
 29596                           ; BSR set to: 0
 29597                           ;../nwk/nwk_src/nwkRx.c: 299:   if (header->nwkFcf.security)
 29598  001CD8  0100               	movlb	0	; force () banked
 29599  001CDA  EE20 F009          	lfsr	2,9
 29600  001CDE  5196               	movf	nwkRxHandleReceivedFrame@header& (0+255),w,b
 29601  001CE0  26D9               	addwf	fsr2l,f,c
 29602  001CE2  5197               	movf	(nwkRxHandleReceivedFrame@header+1)& (0+255),w,b
 29603  001CE4  22DA               	addwfc	fsr2h,f,c
 29604  001CE6  B2DF               	btfsc	indf2,1,c
 29605  001CE8  0012               	return	
 29606                           
 29607                           ; BSR set to: 0
 29608                           ;../nwk/nwk_src/nwkRx.c: 304:   if (header->nwkFcf.multicast && header->nwkFcf.ackReques
      +                          t)
 29609  001CEA  0100               	movlb	0	; force () banked
 29610  001CEC  EE20 F009          	lfsr	2,9
 29611  001CF0  5196               	movf	nwkRxHandleReceivedFrame@header& (0+255),w,b
 29612  001CF2  26D9               	addwf	fsr2l,f,c
 29613  001CF4  5197               	movf	(nwkRxHandleReceivedFrame@header+1)& (0+255),w,b
 29614  001CF6  22DA               	addwfc	fsr2h,f,c
 29615  001CF8  A6DF               	btfss	indf2,3,c
 29616  001CFA  D009               	goto	l18942
 29617                           
 29618                           ; BSR set to: 0
 29619  001CFC  0100               	movlb	0	; force () banked
 29620  001CFE  EE20 F009          	lfsr	2,9
 29621  001D02  5196               	movf	nwkRxHandleReceivedFrame@header& (0+255),w,b
 29622  001D04  26D9               	addwf	fsr2l,f,c
 29623  001D06  5197               	movf	(nwkRxHandleReceivedFrame@header+1)& (0+255),w,b
 29624  001D08  22DA               	addwfc	fsr2h,f,c
 29625  001D0A  B0DF               	btfsc	indf2,0,c
 29626  001D0C  0012               	return	
 29627  001D0E                     l18942:
 29628                           
 29629                           ; BSR set to: 0
 29630                           ;../nwk/nwk_src/nwkRx.c: 311:   if (0xffff == header->macDstPanId)
 29631  001D0E  0100               	movlb	0	; force () banked
 29632  001D10  EE20 F003          	lfsr	2,3
 29633  001D14  5196               	movf	nwkRxHandleReceivedFrame@header& (0+255),w,b
 29634  001D16  26D9               	addwf	fsr2l,f,c
 29635  001D18  5197               	movf	(nwkRxHandleReceivedFrame@header+1)& (0+255),w,b
 29636  001D1A  22DA               	addwfc	fsr2h,f,c
 29637  001D1C  28DE               	incf	postinc2,w,c
 29638  001D1E  E127               	bnz	l18952
 29639  001D20  28DE               	incf	postinc2,w,c
 29640  001D22  A4D8               	btfss	status,2,c
 29641  001D24  D024               	goto	l18952
 29642                           
 29643                           ; BSR set to: 0
 29644                           ;../nwk/nwk_src/nwkRx.c: 312:   {;../nwk/nwk_src/nwkRx.c: 313:     if (nwkIb.addr == hea
      +                          der->nwkDstAddr || 0xffff == header->nwkDstAddr)
 29645  001D26  0100               	movlb	0	; force () banked
 29646  001D28  EE20 F00D          	lfsr	2,13
 29647  001D2C  5196               	movf	nwkRxHandleReceivedFrame@header& (0+255),w,b
 29648  001D2E  26D9               	addwf	fsr2l,f,c
 29649  001D30  5197               	movf	(nwkRxHandleReceivedFrame@header+1)& (0+255),w,b
 29650  001D32  22DA               	addwfc	fsr2h,f,c
 29651  001D34  0102               	movlb	2	; force () banked
 29652  001D36  5100               	movf	_nwkIb& (0+255),w,b
 29653  001D38  18DE               	xorwf	postinc2,w,c
 29654  001D3A  E104               	bnz	u16780
 29655  001D3C  5101               	movf	(_nwkIb+1)& (0+255),w,b
 29656  001D3E  18DE               	xorwf	postinc2,w,c
 29657  001D40  B4D8               	btfsc	status,2,c
 29658  001D42  D00C               	goto	u16790
 29659  001D44                     u16780:
 29660                           
 29661                           ; BSR set to: 2
 29662  001D44  0100               	movlb	0	; force () banked
 29663  001D46  EE20 F00D          	lfsr	2,13
 29664  001D4A  5196               	movf	nwkRxHandleReceivedFrame@header& (0+255),w,b
 29665  001D4C  26D9               	addwf	fsr2l,f,c
 29666  001D4E  5197               	movf	(nwkRxHandleReceivedFrame@header+1)& (0+255),w,b
 29667  001D50  22DA               	addwfc	fsr2h,f,c
 29668  001D52  28DE               	incf	postinc2,w,c
 29669  001D54  E102               	bnz	u16791
 29670  001D56  28DE               	incf	postinc2,w,c
 29671  001D58  A4D8               	btfss	status,2,c
 29672  001D5A                     u16791:
 29673  001D5A  0012               	return	
 29674  001D5C                     u16790:
 29675                           
 29676                           ;../nwk/nwk_src/nwkRx.c: 314:     {;../nwk/nwk_src/nwkRx.c: 320:         frame->state = 
      +                          NWK_RX_STATE_INDICATE;
 29677  001D5C  0060  F23B  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 29678  001D62  0060  F23F  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 29679  001D68  0E22               	movlw	34
 29680  001D6A  6EDF               	movwf	indf2,c
 29681  001D6C  0012               	return	
 29682  001D6E                     l18952:
 29683                           
 29684                           ; BSR set to: 0
 29685                           ;../nwk/nwk_src/nwkRx.c: 330:   if (0xffff == header->nwkDstAddr && header->nwkFcf.ackRe
      +                          quest)
 29686  001D6E  0100               	movlb	0	; force () banked
 29687  001D70  EE20 F00D          	lfsr	2,13
 29688  001D74  5196               	movf	nwkRxHandleReceivedFrame@header& (0+255),w,b
 29689  001D76  26D9               	addwf	fsr2l,f,c
 29690  001D78  5197               	movf	(nwkRxHandleReceivedFrame@header+1)& (0+255),w,b
 29691  001D7A  22DA               	addwfc	fsr2h,f,c
 29692  001D7C  28DE               	incf	postinc2,w,c
 29693  001D7E  E10C               	bnz	l18958
 29694  001D80  28DE               	incf	postinc2,w,c
 29695  001D82  A4D8               	btfss	status,2,c
 29696  001D84  D009               	goto	l18958
 29697                           
 29698                           ; BSR set to: 0
 29699  001D86  0100               	movlb	0	; force () banked
 29700  001D88  EE20 F009          	lfsr	2,9
 29701  001D8C  5196               	movf	nwkRxHandleReceivedFrame@header& (0+255),w,b
 29702  001D8E  26D9               	addwf	fsr2l,f,c
 29703  001D90  5197               	movf	(nwkRxHandleReceivedFrame@header+1)& (0+255),w,b
 29704  001D92  22DA               	addwfc	fsr2h,f,c
 29705  001D94  B0DF               	btfsc	indf2,0,c
 29706  001D96  0012               	return	
 29707  001D98                     l18958:
 29708                           
 29709                           ; BSR set to: 0
 29710                           ;../nwk/nwk_src/nwkRx.c: 333:   if (nwkIb.addr == header->nwkSrcAddr)
 29711  001D98  0100               	movlb	0	; force () banked
 29712  001D9A  EE20 F00B          	lfsr	2,11
 29713  001D9E  5196               	movf	nwkRxHandleReceivedFrame@header& (0+255),w,b
 29714  001DA0  26D9               	addwf	fsr2l,f,c
 29715  001DA2  5197               	movf	(nwkRxHandleReceivedFrame@header+1)& (0+255),w,b
 29716  001DA4  22DA               	addwfc	fsr2h,f,c
 29717  001DA6  0102               	movlb	2	; force () banked
 29718  001DA8  5100               	movf	_nwkIb& (0+255),w,b
 29719  001DAA  18DE               	xorwf	postinc2,w,c
 29720  001DAC  E104               	bnz	l18962
 29721  001DAE  5101               	movf	(_nwkIb+1)& (0+255),w,b
 29722  001DB0  18DE               	xorwf	postinc2,w,c
 29723  001DB2  B4D8               	btfsc	status,2,c
 29724  001DB4  0012               	return	
 29725  001DB6                     l18962:
 29726                           
 29727                           ; BSR set to: 2
 29728                           ;../nwk/nwk_src/nwkRx.c: 337:   nwkRouteFrameReceived(frame);
 29729  001DB6  C08E  F07A         	movff	nwkRxHandleReceivedFrame@frame,nwkRouteFrameReceived@frame
 29730  001DBA  C08F  F07B         	movff	nwkRxHandleReceivedFrame@frame+1,nwkRouteFrameReceived@frame+1
 29731  001DBE  EC5E  F026         	call	_nwkRouteFrameReceived	;wreg free
 29732                           
 29733                           ;../nwk/nwk_src/nwkRx.c: 340:   if (nwkRxRejectDuplicate(header))
 29734  001DC2  C096  F081         	movff	nwkRxHandleReceivedFrame@header,nwkRxRejectDuplicate@header
 29735  001DC6  C097  F082         	movff	nwkRxHandleReceivedFrame@header+1,nwkRxRejectDuplicate@header+1
 29736  001DCA  EC58  F01D         	call	_nwkRxRejectDuplicate	;wreg free
 29737  001DCE  0900               	iorlw	0
 29738  001DD0  A4D8               	btfss	status,2,c
 29739  001DD2  0012               	return	
 29740                           
 29741                           ;../nwk/nwk_src/nwkRx.c: 344:   if (header->nwkFcf.multicast)
 29742  001DD4  0100               	movlb	0	; force () banked
 29743  001DD6  EE20 F009          	lfsr	2,9
 29744  001DDA  5196               	movf	nwkRxHandleReceivedFrame@header& (0+255),w,b
 29745  001DDC  26D9               	addwf	fsr2l,f,c
 29746  001DDE  5197               	movf	(nwkRxHandleReceivedFrame@header+1)& (0+255),w,b
 29747  001DE0  22DA               	addwfc	fsr2h,f,c
 29748  001DE2  A6DF               	btfss	indf2,3,c
 29749  001DE4  D0E8               	goto	l19000
 29750                           
 29751                           ; BSR set to: 0
 29752                           ;../nwk/nwk_src/nwkRx.c: 345:   {;../nwk/nwk_src/nwkRx.c: 346:     NwkFrameMulticastHead
      +                          er_t *mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
 29753  001DE6  0100               	movlb	0	; force () banked
 29754  001DE8  EE20 F082          	lfsr	2,130
 29755  001DEC  518E               	movf	nwkRxHandleReceivedFrame@frame& (0+255),w,b
 29756  001DEE  26D9               	addwf	fsr2l,f,c
 29757  001DF0  518F               	movf	(nwkRxHandleReceivedFrame@frame+1)& (0+255),w,b
 29758  001DF2  22DA               	addwfc	fsr2h,f,c
 29759  001DF4  006F FF78  F094    	movff	postinc2,nwkRxHandleReceivedFrame@mcHeader
 29760  001DFA  006F FF74  F095    	movff	postdec2,nwkRxHandleReceivedFrame@mcHeader+1
 29761                           
 29762                           ; BSR set to: 0
 29763                           ;../nwk/nwk_src/nwkRx.c: 347:     _Bool member = NWK_GroupIsMember(header->nwkDstAddr);
 29764  001E00  0100               	movlb	0	; force () banked
 29765  001E02  EE20 F00D          	lfsr	2,13
 29766  001E06  5196               	movf	nwkRxHandleReceivedFrame@header& (0+255),w,b
 29767  001E08  26D9               	addwf	fsr2l,f,c
 29768  001E0A  5197               	movf	(nwkRxHandleReceivedFrame@header+1)& (0+255),w,b
 29769  001E0C  22DA               	addwfc	fsr2h,f,c
 29770  001E0E  006F FF78  F071    	movff	postinc2,NWK_GroupIsMember@group
 29771  001E14  006F FF74  F072    	movff	postdec2,NWK_GroupIsMember@group+1
 29772  001E1A  EC6B  F058         	call	_NWK_GroupIsMember	;wreg free
 29773  001E1E  0100               	movlb	0	; force () banked
 29774  001E20  6F93               	movwf	nwkRxHandleReceivedFrame@member& (0+255),b
 29775                           
 29776                           ; BSR set to: 0
 29777                           ;../nwk/nwk_src/nwkRx.c: 348:     _Bool broadcast = 0;
 29778  001E22  0E00               	movlw	0
 29779  001E24  0100               	movlb	0	; force () banked
 29780  001E26  6F92               	movwf	nwkRxHandleReceivedFrame@broadcast& (0+255),b
 29781                           
 29782                           ; BSR set to: 0
 29783                           ;../nwk/nwk_src/nwkRx.c: 350:     if (0xffff == header->macDstAddr)
 29784  001E28  0100               	movlb	0	; force () banked
 29785  001E2A  EE20 F005          	lfsr	2,5
 29786  001E2E  5196               	movf	nwkRxHandleReceivedFrame@header& (0+255),w,b
 29787  001E30  26D9               	addwf	fsr2l,f,c
 29788  001E32  5197               	movf	(nwkRxHandleReceivedFrame@header+1)& (0+255),w,b
 29789  001E34  22DA               	addwfc	fsr2h,f,c
 29790  001E36  28DE               	incf	postinc2,w,c
 29791  001E38  E102               	bnz	u16851
 29792  001E3A  28DE               	incf	postinc2,w,c
 29793  001E3C  A4D8               	btfss	status,2,c
 29794  001E3E                     u16851:
 29795  001E3E  D081               	goto	l18982
 29796                           
 29797                           ; BSR set to: 0
 29798                           ;../nwk/nwk_src/nwkRx.c: 351:     {;../nwk/nwk_src/nwkRx.c: 352:       if (member)
 29799  001E40  0100               	movlb	0	; force () banked
 29800  001E42  5193               	movf	nwkRxHandleReceivedFrame@member& (0+255),w,b
 29801  001E44  B4D8               	btfsc	status,2,c
 29802  001E46  D03B               	goto	l18980
 29803                           
 29804                           ; BSR set to: 0
 29805                           ;../nwk/nwk_src/nwkRx.c: 353:       {;../nwk/nwk_src/nwkRx.c: 354:         broadcast = m
      +                          cHeader->memberRadius > 0;
 29806  001E48  0100               	movlb	0	; force () banked
 29807  001E4A  EE20 F001          	lfsr	2,1
 29808  001E4E  5194               	movf	nwkRxHandleReceivedFrame@mcHeader& (0+255),w,b
 29809  001E50  26D9               	addwf	fsr2l,f,c
 29810  001E52  5195               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)& (0+255),w,b
 29811  001E54  22DA               	addwfc	fsr2h,f,c
 29812  001E56  50DF               	movf	223,w,c
 29813  001E58  0B0F               	andlw	15
 29814  001E5A  0900               	iorlw	0
 29815  001E5C  B4D8               	btfsc	status,2,c
 29816  001E5E  D002               	goto	u16870
 29817  001E60  0E01               	movlw	1
 29818  001E62  D001               	goto	u16880
 29819  001E64                     u16870:
 29820  001E64  0E00               	movlw	0
 29821  001E66                     u16880:
 29822  001E66  0100               	movlb	0	; force () banked
 29823  001E68  6F92               	movwf	nwkRxHandleReceivedFrame@broadcast& (0+255),b
 29824                           
 29825                           ;../nwk/nwk_src/nwkRx.c: 355:         mcHeader->memberRadius--;
 29826  001E6A  0E01               	movlw	1
 29827  001E6C  0100               	movlb	0	; force () banked
 29828  001E6E  6F90               	movwf	??_nwkRxHandleReceivedFrame& (0+255),b
 29829  001E70  0100               	movlb	0	; force () banked
 29830  001E72  EE20 F001          	lfsr	2,1
 29831  001E76  5194               	movf	nwkRxHandleReceivedFrame@mcHeader& (0+255),w,b
 29832  001E78  26D9               	addwf	fsr2l,f,c
 29833  001E7A  5195               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)& (0+255),w,b
 29834  001E7C  22DA               	addwfc	fsr2h,f,c
 29835  001E7E  50DF               	movf	223,w,c
 29836  001E80  0B0F               	andlw	15
 29837  001E82  0100               	movlb	0	; force () banked
 29838  001E84  6F91               	movwf	(??_nwkRxHandleReceivedFrame+1)& (0+255),b
 29839  001E86  5190               	movf	??_nwkRxHandleReceivedFrame& (0+255),w,b
 29840  001E88  5F91               	subwf	(??_nwkRxHandleReceivedFrame+1)& (0+255),f,b
 29841  001E8A  0100               	movlb	0	; force () banked
 29842  001E8C  50DF               	movf	223,w,c
 29843  001E8E  0100               	movlb	0	; force () banked
 29844  001E90  1991               	xorwf	(??_nwkRxHandleReceivedFrame+1)& (0+255),w,b
 29845  001E92  0BF0               	andlw	-16
 29846  001E94  1991               	xorwf	(??_nwkRxHandleReceivedFrame+1)& (0+255),w,b
 29847  001E96  0100               	movlb	0	; force () banked
 29848  001E98  6EDF               	movwf	223,c
 29849                           
 29850                           ;../nwk/nwk_src/nwkRx.c: 356:         mcHeader->nonMemberRadius = mcHeader->maxNonMember
      +                          Radius;
 29851  001E9A  0060  F253  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 29852  001EA0  0060  F257  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 29853  001EA6  38DF               	swapf	223,w,c
 29854  001EA8  0B0F               	andlw	15
 29855  001EAA  0100               	movlb	0	; force () banked
 29856  001EAC  6F90               	movwf	??_nwkRxHandleReceivedFrame& (0+255),b
 29857  001EAE  0060  F253  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 29858  001EB4  0060  F257  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 29859  001EBA  0100               	movlb	0	; force () banked
 29860  001EBC  D03A               	goto	L38
 29861  001EBE                     l18980:
 29862                           
 29863                           ; BSR set to: 0
 29864                           ;../nwk/nwk_src/nwkRx.c: 359:       {;../nwk/nwk_src/nwkRx.c: 360:         broadcast = m
      +                          cHeader->nonMemberRadius > 0;
 29865  001EBE  0060  F253  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 29866  001EC4  0060  F257  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 29867  001ECA  0100               	movlb	0	; force () banked
 29868  001ECC  50DF               	movf	223,w,c
 29869  001ECE  0B0F               	andlw	15
 29870  001ED0  0900               	iorlw	0
 29871  001ED2  B4D8               	btfsc	status,2,c
 29872  001ED4  D002               	goto	u16890
 29873  001ED6  0E01               	movlw	1
 29874  001ED8  D001               	goto	u16900
 29875  001EDA                     u16890:
 29876  001EDA  0E00               	movlw	0
 29877  001EDC                     u16900:
 29878  001EDC  0100               	movlb	0	; force () banked
 29879  001EDE  6F92               	movwf	nwkRxHandleReceivedFrame@broadcast& (0+255),b
 29880                           
 29881                           ;../nwk/nwk_src/nwkRx.c: 361:         mcHeader->nonMemberRadius--;
 29882  001EE0  0E01               	movlw	1
 29883  001EE2  0100               	movlb	0	; force () banked
 29884  001EE4  6F90               	movwf	??_nwkRxHandleReceivedFrame& (0+255),b
 29885  001EE6  0060  F253  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 29886  001EEC  0060  F257  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 29887  001EF2  0100               	movlb	0	; force () banked
 29888  001EF4  50DF               	movf	223,w,c
 29889  001EF6  0B0F               	andlw	15
 29890  001EF8  0100               	movlb	0	; force () banked
 29891  001EFA  6F91               	movwf	(??_nwkRxHandleReceivedFrame+1)& (0+255),b
 29892  001EFC  5190               	movf	??_nwkRxHandleReceivedFrame& (0+255),w,b
 29893  001EFE  5F91               	subwf	(??_nwkRxHandleReceivedFrame+1)& (0+255),f,b
 29894  001F00  0100               	movlb	0	; force () banked
 29895  001F02  50DF               	movf	223,w,c
 29896  001F04  0100               	movlb	0	; force () banked
 29897  001F06  1991               	xorwf	(??_nwkRxHandleReceivedFrame+1)& (0+255),w,b
 29898  001F08  0BF0               	andlw	-16
 29899  001F0A  1991               	xorwf	(??_nwkRxHandleReceivedFrame+1)& (0+255),w,b
 29900  001F0C  0100               	movlb	0	; force () banked
 29901  001F0E  6EDF               	movwf	223,c
 29902                           
 29903                           ;../nwk/nwk_src/nwkRx.c: 362:         mcHeader->memberRadius = mcHeader->maxMemberRadius
      +                          ;
 29904  001F10  EE20 F001          	lfsr	2,1
 29905  001F14  5194               	movf	nwkRxHandleReceivedFrame@mcHeader& (0+255),w,b
 29906  001F16  26D9               	addwf	fsr2l,f,c
 29907  001F18  5195               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)& (0+255),w,b
 29908  001F1A  22DA               	addwfc	fsr2h,f,c
 29909  001F1C  38DF               	swapf	223,w,c
 29910  001F1E  0B0F               	andlw	15
 29911  001F20  0100               	movlb	0	; force () banked
 29912  001F22  6F90               	movwf	??_nwkRxHandleReceivedFrame& (0+255),b
 29913  001F24  0100               	movlb	0	; force () banked
 29914  001F26  EE20 F001          	lfsr	2,1
 29915  001F2A  5194               	movf	nwkRxHandleReceivedFrame@mcHeader& (0+255),w,b
 29916  001F2C  26D9               	addwf	fsr2l,f,c
 29917  001F2E  5195               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)& (0+255),w,b
 29918  001F30  22DA               	addwfc	fsr2h,f,c
 29919  001F32                     L38:
 29920  001F32  50DF               	movf	223,w,c
 29921  001F34  0100               	movlb	0	; force () banked
 29922  001F36  1990               	xorwf	??_nwkRxHandleReceivedFrame& (0+255),w,b
 29923  001F38  0BF0               	andlw	-16
 29924  001F3A  1990               	xorwf	??_nwkRxHandleReceivedFrame& (0+255),w,b
 29925  001F3C  0100               	movlb	0	; force () banked
 29926  001F3E  6EDF               	movwf	223,c
 29927  001F40  D018               	goto	l18990
 29928  001F42                     l18982:
 29929                           
 29930                           ; BSR set to: 0
 29931                           ;../nwk/nwk_src/nwkRx.c: 366:     {;../nwk/nwk_src/nwkRx.c: 367:       if (member)
 29932  001F42  0100               	movlb	0	; force () banked
 29933  001F44  5193               	movf	nwkRxHandleReceivedFrame@member& (0+255),w,b
 29934  001F46  B4D8               	btfsc	status,2,c
 29935  001F48  D00C               	goto	l18988
 29936                           
 29937                           ; BSR set to: 0
 29938                           ;../nwk/nwk_src/nwkRx.c: 368:       {;../nwk/nwk_src/nwkRx.c: 369:         broadcast = 1
      +                          ;
 29939  001F4A  0E01               	movlw	1
 29940  001F4C  0100               	movlb	0	; force () banked
 29941  001F4E  6F92               	movwf	nwkRxHandleReceivedFrame@broadcast& (0+255),b
 29942                           
 29943                           ; BSR set to: 0
 29944                           ;../nwk/nwk_src/nwkRx.c: 370:         header->nwkFcf.linkLocal = 1;
 29945  001F50  0100               	movlb	0	; force () banked
 29946  001F52  EE20 F009          	lfsr	2,9
 29947  001F56  5196               	movf	nwkRxHandleReceivedFrame@header& (0+255),w,b
 29948  001F58  26D9               	addwf	fsr2l,f,c
 29949  001F5A  5197               	movf	(nwkRxHandleReceivedFrame@header+1)& (0+255),w,b
 29950  001F5C  22DA               	addwfc	fsr2h,f,c
 29951  001F5E  84DF               	bsf	indf2,2,c
 29952                           
 29953                           ;../nwk/nwk_src/nwkRx.c: 371:       }
 29954  001F60  D008               	goto	l18990
 29955  001F62                     l18988:
 29956                           
 29957                           ; BSR set to: 0
 29958                           ;../nwk/nwk_src/nwkRx.c: 374:       {;../nwk/nwk_src/nwkRx.c: 375:         frame->state 
      +                          = NWK_RX_STATE_ROUTE;
 29959  001F62  0060  F23B  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 29960  001F68  0060  F23F  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 29961  001F6E  0E23               	movlw	35
 29962  001F70  6EDF               	movwf	indf2,c
 29963  001F72                     l18990:
 29964                           
 29965                           ; BSR set to: 0
 29966                           ;../nwk/nwk_src/nwkRx.c: 380:     if (broadcast)
 29967  001F72  0100               	movlb	0	; force () banked
 29968  001F74  5192               	movf	nwkRxHandleReceivedFrame@broadcast& (0+255),w,b
 29969  001F76  B4D8               	btfsc	status,2,c
 29970  001F78  D006               	goto	l18994
 29971                           
 29972                           ; BSR set to: 0
 29973                           ;../nwk/nwk_src/nwkRx.c: 381:       nwkTxBroadcastFrame(frame);
 29974  001F7A  C08E  F084         	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
 29975  001F7E  C08F  F085         	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
 29976  001F82  EC1B  F02C         	call	_nwkTxBroadcastFrame	;wreg free
 29977  001F86                     l18994:
 29978                           
 29979                           ; BSR set to: 0
 29980                           ;../nwk/nwk_src/nwkRx.c: 383:     if (member)
 29981  001F86  0100               	movlb	0	; force () banked
 29982  001F88  5193               	movf	nwkRxHandleReceivedFrame@member& (0+255),w,b
 29983  001F8A  B4D8               	btfsc	status,2,c
 29984  001F8C  0012               	return	
 29985                           
 29986                           ; BSR set to: 0
 29987                           ;../nwk/nwk_src/nwkRx.c: 384:     {;../nwk/nwk_src/nwkRx.c: 385:       frame->payload +=
      +                           sizeof(NwkFrameMulticastHeader_t);
 29988  001F8E  0100               	movlb	0	; force () banked
 29989  001F90  EE20 F082          	lfsr	2,130
 29990  001F94  518E               	movf	nwkRxHandleReceivedFrame@frame& (0+255),w,b
 29991  001F96  26D9               	addwf	fsr2l,f,c
 29992  001F98  518F               	movf	(nwkRxHandleReceivedFrame@frame+1)& (0+255),w,b
 29993  001F9A  22DA               	addwfc	fsr2h,f,c
 29994  001F9C  0E02               	movlw	2
 29995  001F9E  26DE               	addwf	postinc2,f,c
 29996  001FA0  0E00               	movlw	0
 29997  001FA2  22DD               	addwfc	postdec2,f,c
 29998                           
 29999                           ; BSR set to: 0
 30000                           ;../nwk/nwk_src/nwkRx.c: 392:         frame->state = NWK_RX_STATE_INDICATE;
 30001  001FA4  0060  F23B  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 30002  001FAA  0060  F23F  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 30003  001FB0  0E22               	movlw	34
 30004  001FB2  6EDF               	movwf	indf2,c
 30005  001FB4  0012               	return	
 30006  001FB6                     l19000:
 30007                           
 30008                           ; BSR set to: 0
 30009                           ;../nwk/nwk_src/nwkRx.c: 397:   {;../nwk/nwk_src/nwkRx.c: 398:     if (0xffff == header-
      +                          >macDstAddr && nwkIb.addr != header->nwkDstAddr &&
 30010  001FB6  0100               	movlb	0	; force () banked
 30011  001FB8  EE20 F005          	lfsr	2,5
 30012  001FBC  5196               	movf	nwkRxHandleReceivedFrame@header& (0+255),w,b
 30013  001FBE  26D9               	addwf	fsr2l,f,c
 30014  001FC0  5197               	movf	(nwkRxHandleReceivedFrame@header+1)& (0+255),w,b
 30015  001FC2  22DA               	addwfc	fsr2h,f,c
 30016  001FC4  28DE               	incf	postinc2,w,c
 30017  001FC6  E121               	bnz	l19008
 30018  001FC8  28DE               	incf	postinc2,w,c
 30019  001FCA  A4D8               	btfss	status,2,c
 30020  001FCC  D01E               	goto	l19008
 30021                           
 30022                           ; BSR set to: 0
 30023  001FCE  0100               	movlb	0	; force () banked
 30024  001FD0  EE20 F00D          	lfsr	2,13
 30025  001FD4  5196               	movf	nwkRxHandleReceivedFrame@header& (0+255),w,b
 30026  001FD6  26D9               	addwf	fsr2l,f,c
 30027  001FD8  5197               	movf	(nwkRxHandleReceivedFrame@header+1)& (0+255),w,b
 30028  001FDA  22DA               	addwfc	fsr2h,f,c
 30029  001FDC  0102               	movlb	2	; force () banked
 30030  001FDE  5100               	movf	_nwkIb& (0+255),w,b
 30031  001FE0  18DE               	xorwf	postinc2,w,c
 30032  001FE2  E104               	bnz	u16950
 30033  001FE4  5101               	movf	(_nwkIb+1)& (0+255),w,b
 30034  001FE6  18DE               	xorwf	postinc2,w,c
 30035  001FE8  B4D8               	btfsc	status,2,c
 30036  001FEA  D00F               	goto	l19008
 30037  001FEC                     u16950:
 30038                           
 30039                           ; BSR set to: 2
 30040  001FEC  0100               	movlb	0	; force () banked
 30041  001FEE  EE20 F009          	lfsr	2,9
 30042  001FF2  5196               	movf	nwkRxHandleReceivedFrame@header& (0+255),w,b
 30043  001FF4  26D9               	addwf	fsr2l,f,c
 30044  001FF6  5197               	movf	(nwkRxHandleReceivedFrame@header+1)& (0+255),w,b
 30045  001FF8  22DA               	addwfc	fsr2h,f,c
 30046  001FFA  B4DF               	btfsc	indf2,2,c
 30047  001FFC  D006               	goto	l19008
 30048                           
 30049                           ; BSR set to: 0
 30050                           ;../nwk/nwk_src/nwkRx.c: 400:       nwkTxBroadcastFrame(frame);
 30051  001FFE  C08E  F084         	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
 30052  002002  C08F  F085         	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
 30053  002006  EC1B  F02C         	call	_nwkTxBroadcastFrame	;wreg free
 30054  00200A                     l19008:
 30055                           
 30056                           ;../nwk/nwk_src/nwkRx.c: 402:     if (nwkIb.addr == header->nwkDstAddr || 0xffff == head
      +                          er->nwkDstAddr)
 30057  00200A  0100               	movlb	0	; force () banked
 30058  00200C  EE20 F00D          	lfsr	2,13
 30059  002010  5196               	movf	nwkRxHandleReceivedFrame@header& (0+255),w,b
 30060  002012  26D9               	addwf	fsr2l,f,c
 30061  002014  5197               	movf	(nwkRxHandleReceivedFrame@header+1)& (0+255),w,b
 30062  002016  22DA               	addwfc	fsr2h,f,c
 30063  002018  0102               	movlb	2	; force () banked
 30064  00201A  5100               	movf	_nwkIb& (0+255),w,b
 30065  00201C  18DE               	xorwf	postinc2,w,c
 30066  00201E  E104               	bnz	u16970
 30067  002020  5101               	movf	(_nwkIb+1)& (0+255),w,b
 30068  002022  18DE               	xorwf	postinc2,w,c
 30069  002024  B4D8               	btfsc	status,2,c
 30070  002026  D00C               	goto	u16980
 30071  002028                     u16970:
 30072                           
 30073                           ; BSR set to: 2
 30074  002028  0100               	movlb	0	; force () banked
 30075  00202A  EE20 F00D          	lfsr	2,13
 30076  00202E  5196               	movf	nwkRxHandleReceivedFrame@header& (0+255),w,b
 30077  002030  26D9               	addwf	fsr2l,f,c
 30078  002032  5197               	movf	(nwkRxHandleReceivedFrame@header+1)& (0+255),w,b
 30079  002034  22DA               	addwfc	fsr2h,f,c
 30080  002036  28DE               	incf	postinc2,w,c
 30081  002038  E10C               	bnz	l19014
 30082  00203A  28DE               	incf	postinc2,w,c
 30083  00203C  A4D8               	btfss	status,2,c
 30084  00203E  D009               	goto	l19014
 30085  002040                     u16980:
 30086                           
 30087                           ;../nwk/nwk_src/nwkRx.c: 403:     {;../nwk/nwk_src/nwkRx.c: 409:         frame->state = 
      +                          NWK_RX_STATE_INDICATE;
 30088  002040  0060  F23B  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 30089  002046  0060  F23F  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 30090  00204C  0E22               	movlw	34
 30091  00204E  6EDF               	movwf	indf2,c
 30092                           
 30093                           ;../nwk/nwk_src/nwkRx.c: 410:     }
 30094  002050  0012               	return	
 30095  002052                     l19014:
 30096                           
 30097                           ; BSR set to: 0
 30098  002052  0100               	movlb	0	; force () banked
 30099  002054  EE20 F005          	lfsr	2,5
 30100  002058  5196               	movf	nwkRxHandleReceivedFrame@header& (0+255),w,b
 30101  00205A  26D9               	addwf	fsr2l,f,c
 30102  00205C  5197               	movf	(nwkRxHandleReceivedFrame@header+1)& (0+255),w,b
 30103  00205E  22DA               	addwfc	fsr2h,f,c
 30104  002060  0102               	movlb	2	; force () banked
 30105  002062  5100               	movf	_nwkIb& (0+255),w,b
 30106  002064  18DE               	xorwf	postinc2,w,c
 30107  002066  E10C               	bnz	l3040
 30108  002068  5101               	movf	(_nwkIb+1)& (0+255),w,b
 30109  00206A  18DE               	xorwf	postinc2,w,c
 30110  00206C  A4D8               	btfss	status,2,c
 30111  00206E  0012               	return	
 30112                           
 30113                           ; BSR set to: 2
 30114                           ;../nwk/nwk_src/nwkRx.c: 414:     {;../nwk/nwk_src/nwkRx.c: 415:       frame->state = NW
      +                          K_RX_STATE_ROUTE;
 30115  002070  0060  F23B  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 30116  002076  0060  F23F  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 30117  00207C  0E23               	movlw	35
 30118  00207E  6EDF               	movwf	indf2,c
 30119  002080                     l3040:
 30120  002080  0012               	return		;funcret
 30121  002082                     __end_of_nwkRxHandleReceivedFrame:
 30122                           	callstack 0
 30123                           
 30124 ;; *************** function _nwkTxBroadcastFrame *****************
 30125 ;; Defined at:
 30126 ;;		line 159 in file "../nwk/nwk_src/nwkTx.c"
 30127 ;; Parameters:    Size  Location     Type
 30128 ;;  frame           2   36[BANK0 ] PTR struct NwkFrame_t
 30129 ;;		 -> nwkFrameFrames(690), NULL(0), 
 30130 ;; Auto vars:     Size  Location     Type
 30131 ;;  newFrame        2   41[BANK0 ] PTR struct NwkFrame_t
 30132 ;;		 -> nwkFrameFrames(690), NULL(0), 
 30133 ;; Return value:  Size  Location     Type
 30134 ;;                  1    wreg      void 
 30135 ;; Registers used:
 30136 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30137 ;; Tracked objects:
 30138 ;;		On entry : 3F/0
 30139 ;;		On exit  : 3F/0
 30140 ;;		Unchanged: 0/0
 30141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30142 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30143 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30144 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30145 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30146 ;;Total ram usage:        7 bytes
 30147 ;; Hardware stack levels used:    1
 30148 ;; Hardware stack levels required when called:   13
 30149 ;; This function calls:
 30150 ;;		_memcpy
 30151 ;;		_nwkFrameAlloc
 30152 ;;		_rand
 30153 ;; This function is called by:
 30154 ;;		_nwkRxHandleReceivedFrame
 30155 ;; This function uses a non-reentrant model
 30156 ;;
 30157                           
 30158                           	psect	text161
 30159  005836                     __ptext161:
 30160                           	callstack 0
 30161  005836                     _nwkTxBroadcastFrame:
 30162                           	callstack 13
 30163                           
 30164                           ;../nwk/nwk_src/nwkTx.c: 159: void nwkTxBroadcastFrame(NwkFrame_t *frame);../nwk/nwk_src
      +                          /nwkTx.c: 160: {;../nwk/nwk_src/nwkTx.c: 161:   NwkFrame_t *newFrame;;../nwk/nwk_src/nwk
      +                          Tx.c: 163:   if ((0) == (newFrame = nwkFrameAlloc()))
 30165                           
 30166                           ;incstack = 0
 30167  005836  EC12  F043         	call	_nwkFrameAlloc	;wreg free
 30168  00583A  C079  F089         	movff	?_nwkFrameAlloc,nwkTxBroadcastFrame@newFrame
 30169  00583E  C07A  F08A         	movff	?_nwkFrameAlloc+1,nwkTxBroadcastFrame@newFrame+1
 30170  005842  0100               	movlb	0	; force () banked
 30171  005844  5189               	movf	nwkTxBroadcastFrame@newFrame& (0+255),w,b
 30172  005846  118A               	iorwf	(nwkTxBroadcastFrame@newFrame+1)& (0+255),w,b
 30173  005848  B4D8               	btfsc	status,2,c
 30174  00584A  0012               	return	
 30175                           
 30176                           ; BSR set to: 0
 30177                           ;../nwk/nwk_src/nwkTx.c: 166:   newFrame->state = NWK_TX_STATE_DELAY;
 30178  00584C  0060  F227  FFD9   	movff	nwkTxBroadcastFrame@newFrame,fsr2l
 30179  005852  0060  F22B  FFDA   	movff	nwkTxBroadcastFrame@newFrame+1,fsr2h
 30180  005858  0E12               	movlw	18
 30181  00585A  6EDF               	movwf	indf2,c
 30182                           
 30183                           ; BSR set to: 0
 30184                           ;../nwk/nwk_src/nwkTx.c: 167:   newFrame->size = frame->size;
 30185  00585C  0100               	movlb	0	; force () banked
 30186  00585E  EE20 F001          	lfsr	2,1
 30187  005862  5184               	movf	nwkTxBroadcastFrame@frame& (0+255),w,b
 30188  005864  26D9               	addwf	fsr2l,f,c
 30189  005866  5185               	movf	(nwkTxBroadcastFrame@frame+1)& (0+255),w,b
 30190  005868  22DA               	addwfc	fsr2h,f,c
 30191  00586A  0100               	movlb	0	; force () banked
 30192  00586C  EE00 F001          	lfsr	0,1
 30193  005870  5189               	movf	nwkTxBroadcastFrame@newFrame& (0+255),w,b
 30194  005872  26E9               	addwf	fsr0l,f,c
 30195  005874  518A               	movf	(nwkTxBroadcastFrame@newFrame+1)& (0+255),w,b
 30196  005876  22EA               	addwfc	fsr0h,f,c
 30197  005878  006F FF7F FFEF     	movff	indf2,indf0
 30198                           
 30199                           ; BSR set to: 0
 30200                           ;../nwk/nwk_src/nwkTx.c: 168:   newFrame->tx.status = NWK_SUCCESS_STATUS;
 30201  00587E  0100               	movlb	0	; force () banked
 30202  005880  EE20 F084          	lfsr	2,132
 30203  005884  5189               	movf	nwkTxBroadcastFrame@newFrame& (0+255),w,b
 30204  005886  26D9               	addwf	fsr2l,f,c
 30205  005888  518A               	movf	(nwkTxBroadcastFrame@newFrame+1)& (0+255),w,b
 30206  00588A  22DA               	addwfc	fsr2h,f,c
 30207  00588C  0E00               	movlw	0
 30208  00588E  6EDF               	movwf	indf2,c
 30209                           
 30210                           ; BSR set to: 0
 30211                           ;../nwk/nwk_src/nwkTx.c: 169:   newFrame->tx.timeout = (rand() & 0x07) + 1;
 30212  005890  EC27  F053         	call	_rand	;wreg free
 30213  005894  0E07               	movlw	7
 30214  005896  0100               	movlb	0	; force () banked
 30215  005898  177D               	andwf	?_rand& (0+255),f,b
 30216  00589A  0E00               	movlw	0
 30217  00589C  177E               	andwf	(?_rand+1)& (0+255),f,b
 30218  00589E  0E01               	movlw	1
 30219  0058A0  277D               	addwf	?_rand& (0+255),f,b
 30220  0058A2  0E00               	movlw	0
 30221  0058A4  237E               	addwfc	(?_rand+1)& (0+255),f,b
 30222  0058A6  0100               	movlb	0	; force () banked
 30223  0058A8  EE20 F085          	lfsr	2,133
 30224  0058AC  5189               	movf	nwkTxBroadcastFrame@newFrame& (0+255),w,b
 30225  0058AE  26D9               	addwf	fsr2l,f,c
 30226  0058B0  518A               	movf	(nwkTxBroadcastFrame@newFrame+1)& (0+255),w,b
 30227  0058B2  22DA               	addwfc	fsr2h,f,c
 30228  0058B4  0100               	movlb	0	; force () banked
 30229  0058B6  0060  F1F7  FFDE   	movff	?_rand,postinc2
 30230  0058BC  0060  F1FB  FFDD   	movff	?_rand+1,postdec2
 30231                           
 30232                           ; BSR set to: 0
 30233                           ;../nwk/nwk_src/nwkTx.c: 170:   newFrame->tx.confirm = (0);
 30234  0058C2  0100               	movlb	0	; force () banked
 30235  0058C4  EE20 F088          	lfsr	2,136
 30236  0058C8  5189               	movf	nwkTxBroadcastFrame@newFrame& (0+255),w,b
 30237  0058CA  26D9               	addwf	fsr2l,f,c
 30238  0058CC  518A               	movf	(nwkTxBroadcastFrame@newFrame+1)& (0+255),w,b
 30239  0058CE  22DA               	addwfc	fsr2h,f,c
 30240  0058D0  0E00               	movlw	0
 30241  0058D2  6EDE               	movwf	postinc2,c
 30242  0058D4  0E00               	movlw	0
 30243  0058D6  6EDD               	movwf	postdec2,c
 30244                           
 30245                           ; BSR set to: 0
 30246                           ;../nwk/nwk_src/nwkTx.c: 171:   memcpy(newFrame->data, frame->data, frame->size);
 30247  0058D8  0E02               	movlw	2
 30248  0058DA  0100               	movlb	0	; force () banked
 30249  0058DC  2589               	addwf	nwkTxBroadcastFrame@newFrame& (0+255),w,b
 30250  0058DE  0100               	movlb	0	; force () banked
 30251  0058E0  6F77               	movwf	memcpy@d1& (0+255),b
 30252  0058E2  0E00               	movlw	0
 30253  0058E4  0100               	movlb	0	; force () banked
 30254  0058E6  218A               	addwfc	(nwkTxBroadcastFrame@newFrame+1)& (0+255),w,b
 30255  0058E8  0100               	movlb	0	; force () banked
 30256  0058EA  6F78               	movwf	(memcpy@d1+1)& (0+255),b
 30257  0058EC  0E02               	movlw	2
 30258  0058EE  0100               	movlb	0	; force () banked
 30259  0058F0  2584               	addwf	nwkTxBroadcastFrame@frame& (0+255),w,b
 30260  0058F2  0100               	movlb	0	; force () banked
 30261  0058F4  6F86               	movwf	??_nwkTxBroadcastFrame& (0+255),b
 30262  0058F6  0E00               	movlw	0
 30263  0058F8  0100               	movlb	0	; force () banked
 30264  0058FA  2185               	addwfc	(nwkTxBroadcastFrame@frame+1)& (0+255),w,b
 30265  0058FC  0100               	movlb	0	; force () banked
 30266  0058FE  6F87               	movwf	(??_nwkTxBroadcastFrame+1)& (0+255),b
 30267  005900  C086  F079         	movff	??_nwkTxBroadcastFrame,memcpy@s1
 30268  005904  C087  F07A         	movff	??_nwkTxBroadcastFrame+1,memcpy@s1+1
 30269  005908  0100               	movlb	0	; force () banked
 30270  00590A  5179               	movf	memcpy@s1& (0+255),w,b
 30271  00590C  117A               	iorwf	(memcpy@s1+1)& (0+255),w,b
 30272  00590E  A4D8               	btfss	status,2,c
 30273  005910  0E20               	movlw	32
 30274  005912  6F7B               	movwf	(memcpy@s1+2)& (0+255),b
 30275  005914  0100               	movlb	0	; force () banked
 30276  005916  EE20 F001          	lfsr	2,1
 30277  00591A  5184               	movf	nwkTxBroadcastFrame@frame& (0+255),w,b
 30278  00591C  26D9               	addwf	fsr2l,f,c
 30279  00591E  5185               	movf	(nwkTxBroadcastFrame@frame+1)& (0+255),w,b
 30280  005920  22DA               	addwfc	fsr2h,f,c
 30281  005922  50DF               	movf	indf2,w,c
 30282  005924  0100               	movlb	0	; force () banked
 30283  005926  6F88               	movwf	(??_nwkTxBroadcastFrame+2)& (0+255),b
 30284  005928  5188               	movf	(??_nwkTxBroadcastFrame+2)& (0+255),w,b
 30285  00592A  0100               	movlb	0	; force () banked
 30286  00592C  6F7C               	movwf	memcpy@n& (0+255),b
 30287  00592E  6B7D               	clrf	(memcpy@n+1)& (0+255),b
 30288  005930  ECC1  F04F         	call	_memcpy	;wreg free
 30289                           
 30290                           ; BSR set to: 0
 30291                           ;../nwk/nwk_src/nwkTx.c: 173:   newFrame->header.macFcf = 0x8841;
 30292  005934  0100               	movlb	0	; force () banked
 30293  005936  EE20 F002          	lfsr	2,2
 30294  00593A  5189               	movf	nwkTxBroadcastFrame@newFrame& (0+255),w,b
 30295  00593C  26D9               	addwf	fsr2l,f,c
 30296  00593E  518A               	movf	(nwkTxBroadcastFrame@newFrame+1)& (0+255),w,b
 30297  005940  22DA               	addwfc	fsr2h,f,c
 30298  005942  0E41               	movlw	65
 30299  005944  6EDE               	movwf	postinc2,c
 30300  005946  0E88               	movlw	136
 30301  005948  6EDD               	movwf	postdec2,c
 30302                           
 30303                           ; BSR set to: 0
 30304                           ;../nwk/nwk_src/nwkTx.c: 174:   newFrame->header.macDstAddr = 0xffff;
 30305  00594A  0100               	movlb	0	; force () banked
 30306  00594C  EE20 F007          	lfsr	2,7
 30307  005950  5189               	movf	nwkTxBroadcastFrame@newFrame& (0+255),w,b
 30308  005952  26D9               	addwf	fsr2l,f,c
 30309  005954  518A               	movf	(nwkTxBroadcastFrame@newFrame+1)& (0+255),w,b
 30310  005956  22DA               	addwfc	fsr2h,f,c
 30311  005958  0EFF               	movlw	255
 30312  00595A  6EDE               	movwf	postinc2,c
 30313  00595C  0EFF               	movlw	255
 30314  00595E  6EDD               	movwf	postdec2,c
 30315                           
 30316                           ; BSR set to: 0
 30317                           ;../nwk/nwk_src/nwkTx.c: 175:   newFrame->header.macDstPanId = frame->header.macDstPanId
      +                          ;
 30318  005960  0100               	movlb	0	; force () banked
 30319  005962  EE20 F005          	lfsr	2,5
 30320  005966  5184               	movf	nwkTxBroadcastFrame@frame& (0+255),w,b
 30321  005968  26D9               	addwf	fsr2l,f,c
 30322  00596A  5185               	movf	(nwkTxBroadcastFrame@frame+1)& (0+255),w,b
 30323  00596C  22DA               	addwfc	fsr2h,f,c
 30324  00596E  0100               	movlb	0	; force () banked
 30325  005970  EE00 F005          	lfsr	0,5
 30326  005974  5189               	movf	nwkTxBroadcastFrame@newFrame& (0+255),w,b
 30327  005976  26E9               	addwf	fsr0l,f,c
 30328  005978  518A               	movf	(nwkTxBroadcastFrame@newFrame+1)& (0+255),w,b
 30329  00597A  22EA               	addwfc	fsr0h,f,c
 30330  00597C  006F FF7B FFEE     	movff	postinc2,postinc0
 30331  005982  006F FF77 FFED     	movff	postdec2,postdec0
 30332                           
 30333                           ; BSR set to: 0
 30334                           ;../nwk/nwk_src/nwkTx.c: 176:   newFrame->header.macSrcAddr = nwkIb.addr;
 30335  005988  0100               	movlb	0	; force () banked
 30336  00598A  EE20 F009          	lfsr	2,9
 30337  00598E  5189               	movf	nwkTxBroadcastFrame@newFrame& (0+255),w,b
 30338  005990  26D9               	addwf	fsr2l,f,c
 30339  005992  518A               	movf	(nwkTxBroadcastFrame@newFrame+1)& (0+255),w,b
 30340  005994  22DA               	addwfc	fsr2h,f,c
 30341  005996  0060  F803  FFDE   	movff	_nwkIb,postinc2
 30342  00599C  0060  F807  FFDD   	movff	_nwkIb+1,postdec2
 30343                           
 30344                           ; BSR set to: 0
 30345                           ;../nwk/nwk_src/nwkTx.c: 177:   newFrame->header.macSeq = ++nwkIb.macSeqNum;
 30346  0059A2  0102               	movlb	2	; force () banked
 30347  0059A4  2B05               	incf	(_nwkIb+5)& (0+255),f,b
 30348  0059A6  0100               	movlb	0	; force () banked
 30349  0059A8  EE20 F004          	lfsr	2,4
 30350  0059AC  5189               	movf	nwkTxBroadcastFrame@newFrame& (0+255),w,b
 30351  0059AE  26D9               	addwf	fsr2l,f,c
 30352  0059B0  518A               	movf	(nwkTxBroadcastFrame@newFrame+1)& (0+255),w,b
 30353  0059B2  22DA               	addwfc	fsr2h,f,c
 30354  0059B4  0060  F817  FFDF   	movff	_nwkIb+5,indf2
 30355                           
 30356                           ; BSR set to: 0
 30357  0059BA  0012               	return		;funcret
 30358  0059BC                     __end_of_nwkTxBroadcastFrame:
 30359                           	callstack 0
 30360                           
 30361 ;; *************** function _nwkRxRejectDuplicate *****************
 30362 ;; Defined at:
 30363 ;;		line 200 in file "../nwk/nwk_src/nwkRx.c"
 30364 ;; Parameters:    Size  Location     Type
 30365 ;;  header          2   33[BANK0 ] PTR struct NwkFrameHeade
 30366 ;;		 -> nwkFrameFrames..(128), nwkFrameFrames(690), NULL(0), 
 30367 ;; Auto vars:     Size  Location     Type
 30368 ;;  shift           1   39[BANK0 ] unsigned char 
 30369 ;;  diff            1   41[BANK0 ] unsigned char 
 30370 ;;  i               1   40[BANK0 ] unsigned char 
 30371 ;;  entry           2   44[BANK0 ] PTR struct NwkDuplicateR
 30372 ;;		 -> nwkRxDuplicateRejectionTable(160), 
 30373 ;;  freeEntry       2   42[BANK0 ] PTR struct NwkDuplicateR
 30374 ;;		 -> nwkRxDuplicateRejectionTable(160), NULL(0), 
 30375 ;; Return value:  Size  Location     Type
 30376 ;;                  1    wreg      _Bool 
 30377 ;; Registers used:
 30378 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30379 ;; Tracked objects:
 30380 ;;		On entry : 3F/0
 30381 ;;		On exit  : 3D/0
 30382 ;;		Unchanged: 0/0
 30383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30384 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30385 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30386 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30387 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30388 ;;Total ram usage:       13 bytes
 30389 ;; Hardware stack levels used:    1
 30390 ;; Hardware stack levels required when called:   13
 30391 ;; This function calls:
 30392 ;;		_SYS_TimerStart
 30393 ;;		_nwkRouteRemove
 30394 ;; This function is called by:
 30395 ;;		_nwkRxHandleReceivedFrame
 30396 ;; This function uses a non-reentrant model
 30397 ;;
 30398                           
 30399                           	psect	text162
 30400  003AB0                     __ptext162:
 30401                           	callstack 0
 30402  003AB0                     _nwkRxRejectDuplicate:
 30403                           	callstack 13
 30404                           
 30405                           ;../nwk/nwk_src/nwkRx.c: 200: static _Bool nwkRxRejectDuplicate(NwkFrameHeader_t *header
      +                          );../nwk/nwk_src/nwkRx.c: 201: {;../nwk/nwk_src/nwkRx.c: 202:   NwkDuplicateRejectionEnt
      +                          ry_t *entry;;../nwk/nwk_src/nwkRx.c: 203:   NwkDuplicateRejectionEntry_t *freeEntry = (0
      +                          );
 30406                           
 30407                           ; BSR set to: 0
 30408                           ;incstack = 0
 30409  003AB0  0E00               	movlw	0
 30410  003AB2  0100               	movlb	0	; force () banked
 30411  003AB4  6F8A               	movwf	nwkRxRejectDuplicate@freeEntry& (0+255),b
 30412  003AB6  0E00               	movlw	0
 30413  003AB8  6F8B               	movwf	(nwkRxRejectDuplicate@freeEntry+1)& (0+255),b
 30414                           
 30415                           ; BSR set to: 0
 30416                           ;../nwk/nwk_src/nwkRx.c: 205:   for (uint8_t i = 0; i < 32; i++)
 30417  003ABA  0E00               	movlw	0
 30418  003ABC  0100               	movlb	0	; force () banked
 30419  003ABE  6F88               	movwf	nwkRxRejectDuplicate@i& (0+255),b
 30420  003AC0  D0ED               	goto	l18584
 30421  003AC2                     l18538:
 30422                           
 30423                           ; BSR set to: 0
 30424                           ;../nwk/nwk_src/nwkRx.c: 206:   {;../nwk/nwk_src/nwkRx.c: 207:     entry = &nwkRxDuplica
      +                          teRejectionTable[i];
 30425  003AC2  0100               	movlb	0	; force () banked
 30426  003AC4  5188               	movf	nwkRxRejectDuplicate@i& (0+255),w,b
 30427  003AC6  0D05               	mullw	5
 30428  003AC8  0E00               	movlw	low _nwkRxDuplicateRejectionTable
 30429  003ACA  24F3               	addwf	243,w,c
 30430  003ACC  0100               	movlb	0	; force () banked
 30431  003ACE  6F8C               	movwf	nwkRxRejectDuplicate@entry& (0+255),b
 30432  003AD0  0E0A               	movlw	high _nwkRxDuplicateRejectionTable
 30433  003AD2  20F4               	addwfc	prodh,w,c
 30434  003AD4  6F8D               	movwf	(nwkRxRejectDuplicate@entry+1)& (0+255),b
 30435                           
 30436                           ; BSR set to: 0
 30437                           ;../nwk/nwk_src/nwkRx.c: 209:     if (entry->ttl && header->nwkSrcAddr == entry->src)
 30438  003AD6  0100               	movlb	0	; force () banked
 30439  003AD8  EE20 F004          	lfsr	2,4
 30440  003ADC  518C               	movf	nwkRxRejectDuplicate@entry& (0+255),w,b
 30441  003ADE  26D9               	addwf	fsr2l,f,c
 30442  003AE0  518D               	movf	(nwkRxRejectDuplicate@entry+1)& (0+255),w,b
 30443  003AE2  22DA               	addwfc	fsr2h,f,c
 30444  003AE4  50DF               	movf	indf2,w,c
 30445  003AE6  B4D8               	btfsc	status,2,c
 30446  003AE8  D0C9               	goto	l18578
 30447                           
 30448                           ; BSR set to: 0
 30449  003AEA  0060  F233  FFD9   	movff	nwkRxRejectDuplicate@entry,fsr2l
 30450  003AF0  0060  F237  FFDA   	movff	nwkRxRejectDuplicate@entry+1,fsr2h
 30451  003AF6  0100               	movlb	0	; force () banked
 30452  003AF8  EE00 F00B          	lfsr	0,11
 30453  003AFC  5181               	movf	nwkRxRejectDuplicate@header& (0+255),w,b
 30454  003AFE  26E9               	addwf	fsr0l,f,c
 30455  003B00  5182               	movf	(nwkRxRejectDuplicate@header+1)& (0+255),w,b
 30456  003B02  22EA               	addwfc	fsr0h,f,c
 30457  003B04  50DE               	movf	postinc2,w,c
 30458  003B06  18EE               	xorwf	postinc0,w,c
 30459  003B08  E103               	bnz	u16231
 30460  003B0A  50DE               	movf	postinc2,w,c
 30461  003B0C  18EE               	xorwf	postinc0,w,c
 30462  003B0E  A4D8               	btfss	status,2,c
 30463  003B10                     u16231:
 30464  003B10  D0B5               	goto	l18578
 30465                           
 30466                           ; BSR set to: 0
 30467                           ;../nwk/nwk_src/nwkRx.c: 210:     {;../nwk/nwk_src/nwkRx.c: 211:       uint8_t diff = (i
      +                          nt8_t)entry->seq - header->nwkSeq;
 30468  003B12  0100               	movlb	0	; force () banked
 30469  003B14  EE20 F00A          	lfsr	2,10
 30470  003B18  5181               	movf	nwkRxRejectDuplicate@header& (0+255),w,b
 30471  003B1A  26D9               	addwf	fsr2l,f,c
 30472  003B1C  5182               	movf	(nwkRxRejectDuplicate@header+1)& (0+255),w,b
 30473  003B1E  22DA               	addwfc	fsr2h,f,c
 30474  003B20  50DF               	movf	indf2,w,c
 30475  003B22  0100               	movlb	0	; force () banked
 30476  003B24  6F83               	movwf	??_nwkRxRejectDuplicate& (0+255),b
 30477  003B26  0100               	movlb	0	; force () banked
 30478  003B28  EE20 F002          	lfsr	2,2
 30479  003B2C  518C               	movf	nwkRxRejectDuplicate@entry& (0+255),w,b
 30480  003B2E  26D9               	addwf	fsr2l,f,c
 30481  003B30  518D               	movf	(nwkRxRejectDuplicate@entry+1)& (0+255),w,b
 30482  003B32  22DA               	addwfc	fsr2h,f,c
 30483  003B34  50DF               	movf	indf2,w,c
 30484  003B36  0100               	movlb	0	; force () banked
 30485  003B38  6F84               	movwf	(??_nwkRxRejectDuplicate+1)& (0+255),b
 30486  003B3A  5183               	movf	??_nwkRxRejectDuplicate& (0+255),w,b
 30487  003B3C  5D84               	subwf	(??_nwkRxRejectDuplicate+1)& (0+255),w,b
 30488  003B3E  0100               	movlb	0	; force () banked
 30489  003B40  6F89               	movwf	nwkRxRejectDuplicate@diff& (0+255),b
 30490                           
 30491                           ; BSR set to: 0
 30492                           ;../nwk/nwk_src/nwkRx.c: 213:       if (diff < 8)
 30493  003B42  0E08               	movlw	8
 30494  003B44  0100               	movlb	0	; force () banked
 30495  003B46  6189               	cpfslt	nwkRxRejectDuplicate@diff& (0+255),b
 30496  003B48  D05C               	goto	l18566
 30497                           
 30498                           ; BSR set to: 0
 30499                           ;../nwk/nwk_src/nwkRx.c: 214:       {;../nwk/nwk_src/nwkRx.c: 215:         if (entry->ma
      +                          sk & (1 << diff))
 30500  003B4A  0100               	movlb	0	; force () banked
 30501  003B4C  EE20 F003          	lfsr	2,3
 30502  003B50  518C               	movf	nwkRxRejectDuplicate@entry& (0+255),w,b
 30503  003B52  26D9               	addwf	fsr2l,f,c
 30504  003B54  518D               	movf	(nwkRxRejectDuplicate@entry+1)& (0+255),w,b
 30505  003B56  22DA               	addwfc	fsr2h,f,c
 30506  003B58  50DF               	movf	indf2,w,c
 30507  003B5A  0100               	movlb	0	; force () banked
 30508  003B5C  6F83               	movwf	??_nwkRxRejectDuplicate& (0+255),b
 30509  003B5E  C089  F084         	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate+1
 30510  003B62  0E01               	movlw	1
 30511  003B64  6F85               	movwf	(??_nwkRxRejectDuplicate+2)& (0+255),b
 30512  003B66  2B84               	incf	(??_nwkRxRejectDuplicate+1)& (0+255),f,b
 30513  003B68  D002               	goto	u16254
 30514  003B6A                     u16255:
 30515  003B6A  90D8               	bcf	status,0,c
 30516  003B6C  3785               	rlcf	(??_nwkRxRejectDuplicate+2)& (0+255),f,b
 30517  003B6E                     u16254:
 30518  003B6E  2F84               	decfsz	(??_nwkRxRejectDuplicate+1)& (0+255),f,b
 30519  003B70  D7FC               	goto	u16255
 30520  003B72  0100               	movlb	0	; force () banked
 30521  003B74  5185               	movf	(??_nwkRxRejectDuplicate+2)& (0+255),w,b
 30522  003B76  1583               	andwf	??_nwkRxRejectDuplicate& (0+255),w,b
 30523  003B78  0900               	iorlw	0
 30524  003B7A  B4D8               	btfsc	status,2,c
 30525  003B7C  D02B               	goto	l18558
 30526                           
 30527                           ; BSR set to: 0
 30528                           ;../nwk/nwk_src/nwkRx.c: 216:         {;../nwk/nwk_src/nwkRx.c: 218:           if (nwkIb
      +                          .addr == header->macDstAddr)
 30529  003B7E  0100               	movlb	0	; force () banked
 30530  003B80  EE20 F005          	lfsr	2,5
 30531  003B84  5181               	movf	nwkRxRejectDuplicate@header& (0+255),w,b
 30532  003B86  26D9               	addwf	fsr2l,f,c
 30533  003B88  5182               	movf	(nwkRxRejectDuplicate@header+1)& (0+255),w,b
 30534  003B8A  22DA               	addwfc	fsr2h,f,c
 30535  003B8C  0102               	movlb	2	; force () banked
 30536  003B8E  5100               	movf	_nwkIb& (0+255),w,b
 30537  003B90  18DE               	xorwf	postinc2,w,c
 30538  003B92  E11E               	bnz	l18554
 30539  003B94  5101               	movf	(_nwkIb+1)& (0+255),w,b
 30540  003B96  18DE               	xorwf	postinc2,w,c
 30541  003B98  A4D8               	btfss	status,2,c
 30542  003B9A  D01A               	goto	l18554
 30543                           
 30544                           ; BSR set to: 2
 30545                           ;../nwk/nwk_src/nwkRx.c: 219:             nwkRouteRemove(header->nwkDstAddr, header->nwk
      +                          Fcf.multicast);
 30546  003B9C  0100               	movlb	0	; force () banked
 30547  003B9E  EE20 F00D          	lfsr	2,13
 30548  003BA2  5181               	movf	nwkRxRejectDuplicate@header& (0+255),w,b
 30549  003BA4  26D9               	addwf	fsr2l,f,c
 30550  003BA6  5182               	movf	(nwkRxRejectDuplicate@header+1)& (0+255),w,b
 30551  003BA8  22DA               	addwfc	fsr2h,f,c
 30552  003BAA  006F FF78  F077    	movff	postinc2,nwkRouteRemove@dst
 30553  003BB0  006F FF74  F078    	movff	postdec2,nwkRouteRemove@dst+1
 30554  003BB6  EE20 F009          	lfsr	2,9
 30555  003BBA  5181               	movf	nwkRxRejectDuplicate@header& (0+255),w,b
 30556  003BBC  26D9               	addwf	fsr2l,f,c
 30557  003BBE  5182               	movf	(nwkRxRejectDuplicate@header+1)& (0+255),w,b
 30558  003BC0  22DA               	addwfc	fsr2h,f,c
 30559  003BC2  0E00               	movlw	0
 30560  003BC4  B6DF               	btfsc	indf2,3,c
 30561  003BC6  0E01               	movlw	1
 30562  003BC8  0100               	movlb	0	; force () banked
 30563  003BCA  6F79               	movwf	nwkRouteRemove@multicast& (0+255),b
 30564  003BCC  EC5B  F05A         	call	_nwkRouteRemove	;wreg free
 30565  003BD0                     l18554:
 30566                           
 30567                           ;../nwk/nwk_src/nwkRx.c: 221:           return 1;
 30568  003BD0  0E01               	movlw	1
 30569  003BD2  0012               	return	
 30570  003BD4                     l18558:
 30571                           
 30572                           ; BSR set to: 0
 30573                           ;../nwk/nwk_src/nwkRx.c: 224:         entry->mask |= (1 << diff);
 30574  003BD4  C089  F083         	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate
 30575  003BD8  0E01               	movlw	1
 30576  003BDA  0100               	movlb	0	; force () banked
 30577  003BDC  6F84               	movwf	(??_nwkRxRejectDuplicate+1)& (0+255),b
 30578  003BDE  2B83               	incf	??_nwkRxRejectDuplicate& (0+255),f,b
 30579  003BE0  D002               	goto	u16284
 30580  003BE2                     u16285:
 30581  003BE2  90D8               	bcf	status,0,c
 30582  003BE4  3784               	rlcf	(??_nwkRxRejectDuplicate+1)& (0+255),f,b
 30583  003BE6                     u16284:
 30584  003BE6  2F83               	decfsz	??_nwkRxRejectDuplicate& (0+255),f,b
 30585  003BE8  D7FC               	goto	u16285
 30586  003BEA  0100               	movlb	0	; force () banked
 30587  003BEC  EE20 F003          	lfsr	2,3
 30588  003BF0  518C               	movf	nwkRxRejectDuplicate@entry& (0+255),w,b
 30589  003BF2  26D9               	addwf	fsr2l,f,c
 30590  003BF4  518D               	movf	(nwkRxRejectDuplicate@entry+1)& (0+255),w,b
 30591  003BF6  22DA               	addwfc	fsr2h,f,c
 30592  003BF8  0100               	movlb	0	; force () banked
 30593  003BFA  5184               	movf	(??_nwkRxRejectDuplicate+1)& (0+255),w,b
 30594  003BFC  12DF               	iorwf	indf2,f,c
 30595                           
 30596                           ; BSR set to: 0
 30597                           ;../nwk/nwk_src/nwkRx.c: 225:         return 0;
 30598  003BFE  0E00               	movlw	0
 30599  003C00  0012               	return	
 30600  003C02                     l18566:
 30601                           
 30602                           ; BSR set to: 0
 30603                           ;../nwk/nwk_src/nwkRx.c: 228:       {;../nwk/nwk_src/nwkRx.c: 229:         uint8_t shift
      +                           = -(int8_t)diff;
 30604  003C02  0100               	movlb	0	; force () banked
 30605  003C04  5189               	movf	nwkRxRejectDuplicate@diff& (0+255),w,b
 30606  003C06  0800               	sublw	0
 30607  003C08  0100               	movlb	0	; force () banked
 30608  003C0A  6F87               	movwf	nwkRxRejectDuplicate@shift& (0+255),b
 30609                           
 30610                           ; BSR set to: 0
 30611                           ;../nwk/nwk_src/nwkRx.c: 231:         entry->seq = header->nwkSeq;
 30612  003C0C  0100               	movlb	0	; force () banked
 30613  003C0E  EE20 F00A          	lfsr	2,10
 30614  003C12  5181               	movf	nwkRxRejectDuplicate@header& (0+255),w,b
 30615  003C14  26D9               	addwf	fsr2l,f,c
 30616  003C16  5182               	movf	(nwkRxRejectDuplicate@header+1)& (0+255),w,b
 30617  003C18  22DA               	addwfc	fsr2h,f,c
 30618  003C1A  0100               	movlb	0	; force () banked
 30619  003C1C  EE00 F002          	lfsr	0,2
 30620  003C20  518C               	movf	nwkRxRejectDuplicate@entry& (0+255),w,b
 30621  003C22  26E9               	addwf	fsr0l,f,c
 30622  003C24  518D               	movf	(nwkRxRejectDuplicate@entry+1)& (0+255),w,b
 30623  003C26  22EA               	addwfc	fsr0h,f,c
 30624  003C28  006F FF7F FFEF     	movff	indf2,indf0
 30625                           
 30626                           ; BSR set to: 0
 30627                           ;../nwk/nwk_src/nwkRx.c: 232:         entry->mask = (entry->mask << shift) | 1;
 30628  003C2E  0100               	movlb	0	; force () banked
 30629  003C30  EE20 F003          	lfsr	2,3
 30630  003C34  518C               	movf	nwkRxRejectDuplicate@entry& (0+255),w,b
 30631  003C36  26D9               	addwf	fsr2l,f,c
 30632  003C38  518D               	movf	(nwkRxRejectDuplicate@entry+1)& (0+255),w,b
 30633  003C3A  22DA               	addwfc	fsr2h,f,c
 30634  003C3C  C087  F083         	movff	nwkRxRejectDuplicate@shift,??_nwkRxRejectDuplicate
 30635  003C40  EE00 F003          	lfsr	0,3
 30636  003C44  518C               	movf	nwkRxRejectDuplicate@entry& (0+255),w,b
 30637  003C46  26E9               	addwf	fsr0l,f,c
 30638  003C48  518D               	movf	(nwkRxRejectDuplicate@entry+1)& (0+255),w,b
 30639  003C4A  22EA               	addwfc	fsr0h,f,c
 30640  003C4C  50EF               	movf	indf0,w,c
 30641  003C4E  0100               	movlb	0	; force () banked
 30642  003C50  6F84               	movwf	(??_nwkRxRejectDuplicate+1)& (0+255),b
 30643  003C52  2B83               	incf	??_nwkRxRejectDuplicate& (0+255),f,b
 30644  003C54  D002               	goto	u16294
 30645  003C56                     u16295:
 30646  003C56  90D8               	bcf	status,0,c
 30647  003C58  3784               	rlcf	(??_nwkRxRejectDuplicate+1)& (0+255),f,b
 30648  003C5A                     u16294:
 30649  003C5A  2F83               	decfsz	??_nwkRxRejectDuplicate& (0+255),f,b
 30650  003C5C  D7FC               	goto	u16295
 30651  003C5E  0100               	movlb	0	; force () banked
 30652  003C60  5184               	movf	(??_nwkRxRejectDuplicate+1)& (0+255),w,b
 30653  003C62  0901               	iorlw	1
 30654  003C64  6EDF               	movwf	indf2,c
 30655                           
 30656                           ; BSR set to: 0
 30657                           ;../nwk/nwk_src/nwkRx.c: 233:         entry->ttl = ((10000 / 5000) + 1);
 30658  003C66  0100               	movlb	0	; force () banked
 30659  003C68  EE20 F004          	lfsr	2,4
 30660  003C6C  518C               	movf	nwkRxRejectDuplicate@entry& (0+255),w,b
 30661  003C6E  26D9               	addwf	fsr2l,f,c
 30662  003C70  518D               	movf	(nwkRxRejectDuplicate@entry+1)& (0+255),w,b
 30663  003C72  22DA               	addwfc	fsr2h,f,c
 30664  003C74  0E03               	movlw	3
 30665  003C76  6EDF               	movwf	indf2,c
 30666                           
 30667                           ; BSR set to: 0
 30668                           ;../nwk/nwk_src/nwkRx.c: 234:         return 0;
 30669  003C78  0E00               	movlw	0
 30670  003C7A  0012               	return	
 30671  003C7C                     l18578:
 30672                           
 30673                           ; BSR set to: 0
 30674                           ;../nwk/nwk_src/nwkRx.c: 238:     if (0 == entry->ttl)
 30675  003C7C  0100               	movlb	0	; force () banked
 30676  003C7E  EE20 F004          	lfsr	2,4
 30677  003C82  518C               	movf	nwkRxRejectDuplicate@entry& (0+255),w,b
 30678  003C84  26D9               	addwf	fsr2l,f,c
 30679  003C86  518D               	movf	(nwkRxRejectDuplicate@entry+1)& (0+255),w,b
 30680  003C88  22DA               	addwfc	fsr2h,f,c
 30681  003C8A  50DF               	movf	indf2,w,c
 30682  003C8C  A4D8               	btfss	status,2,c
 30683  003C8E  D004               	goto	l18582
 30684                           
 30685                           ; BSR set to: 0
 30686                           ;../nwk/nwk_src/nwkRx.c: 239:       freeEntry = entry;
 30687  003C90  C08C  F08A         	movff	nwkRxRejectDuplicate@entry,nwkRxRejectDuplicate@freeEntry
 30688  003C94  C08D  F08B         	movff	nwkRxRejectDuplicate@entry+1,nwkRxRejectDuplicate@freeEntry+1
 30689  003C98                     l18582:
 30690                           
 30691                           ; BSR set to: 0
 30692                           ;../nwk/nwk_src/nwkRx.c: 240:   }
 30693  003C98  0100               	movlb	0	; force () banked
 30694  003C9A  2B88               	incf	nwkRxRejectDuplicate@i& (0+255),f,b
 30695  003C9C                     l18584:
 30696                           
 30697                           ; BSR set to: 0
 30698  003C9C  0E1F               	movlw	31
 30699  003C9E  0100               	movlb	0	; force () banked
 30700  003CA0  6588               	cpfsgt	nwkRxRejectDuplicate@i& (0+255),b
 30701  003CA2  D70F               	goto	l18538
 30702                           
 30703                           ; BSR set to: 0
 30704                           ;../nwk/nwk_src/nwkRx.c: 242:   if ((0) == freeEntry)
 30705  003CA4  0100               	movlb	0	; force () banked
 30706  003CA6  518A               	movf	nwkRxRejectDuplicate@freeEntry& (0+255),w,b
 30707  003CA8  118B               	iorwf	(nwkRxRejectDuplicate@freeEntry+1)& (0+255),w,b
 30708  003CAA  A4D8               	btfss	status,2,c
 30709  003CAC  D002               	goto	l18592
 30710                           
 30711                           ; BSR set to: 0
 30712                           ;../nwk/nwk_src/nwkRx.c: 243:     return 1;
 30713  003CAE  0E01               	movlw	1
 30714  003CB0  0012               	return	
 30715  003CB2                     l18592:
 30716                           
 30717                           ; BSR set to: 0
 30718                           ;../nwk/nwk_src/nwkRx.c: 245:   freeEntry->src = header->nwkSrcAddr;
 30719  003CB2  0100               	movlb	0	; force () banked
 30720  003CB4  EE20 F00B          	lfsr	2,11
 30721  003CB8  5181               	movf	nwkRxRejectDuplicate@header& (0+255),w,b
 30722  003CBA  26D9               	addwf	fsr2l,f,c
 30723  003CBC  5182               	movf	(nwkRxRejectDuplicate@header+1)& (0+255),w,b
 30724  003CBE  22DA               	addwfc	fsr2h,f,c
 30725  003CC0  0060  F22B  FFE9   	movff	nwkRxRejectDuplicate@freeEntry,fsr0l
 30726  003CC6  0060  F22F  FFEA   	movff	nwkRxRejectDuplicate@freeEntry+1,fsr0h
 30727  003CCC  006F FF7B FFEE     	movff	postinc2,postinc0
 30728  003CD2  006F FF77 FFED     	movff	postdec2,postdec0
 30729                           
 30730                           ;../nwk/nwk_src/nwkRx.c: 246:   freeEntry->seq = header->nwkSeq;
 30731  003CD8  EE20 F00A          	lfsr	2,10
 30732  003CDC  5181               	movf	nwkRxRejectDuplicate@header& (0+255),w,b
 30733  003CDE  26D9               	addwf	fsr2l,f,c
 30734  003CE0  5182               	movf	(nwkRxRejectDuplicate@header+1)& (0+255),w,b
 30735  003CE2  22DA               	addwfc	fsr2h,f,c
 30736  003CE4  0100               	movlb	0	; force () banked
 30737  003CE6  EE00 F002          	lfsr	0,2
 30738  003CEA  518A               	movf	nwkRxRejectDuplicate@freeEntry& (0+255),w,b
 30739  003CEC  26E9               	addwf	fsr0l,f,c
 30740  003CEE  518B               	movf	(nwkRxRejectDuplicate@freeEntry+1)& (0+255),w,b
 30741  003CF0  22EA               	addwfc	fsr0h,f,c
 30742  003CF2  006F FF7F FFEF     	movff	indf2,indf0
 30743                           
 30744                           ; BSR set to: 0
 30745                           ;../nwk/nwk_src/nwkRx.c: 247:   freeEntry->mask = 1;
 30746  003CF8  0100               	movlb	0	; force () banked
 30747  003CFA  EE20 F003          	lfsr	2,3
 30748  003CFE  518A               	movf	nwkRxRejectDuplicate@freeEntry& (0+255),w,b
 30749  003D00  26D9               	addwf	fsr2l,f,c
 30750  003D02  518B               	movf	(nwkRxRejectDuplicate@freeEntry+1)& (0+255),w,b
 30751  003D04  22DA               	addwfc	fsr2h,f,c
 30752  003D06  0E01               	movlw	1
 30753  003D08  6EDF               	movwf	indf2,c
 30754                           
 30755                           ; BSR set to: 0
 30756                           ;../nwk/nwk_src/nwkRx.c: 248:   freeEntry->ttl = ((10000 / 5000) + 1);
 30757  003D0A  0100               	movlb	0	; force () banked
 30758  003D0C  EE20 F004          	lfsr	2,4
 30759  003D10  518A               	movf	nwkRxRejectDuplicate@freeEntry& (0+255),w,b
 30760  003D12  26D9               	addwf	fsr2l,f,c
 30761  003D14  518B               	movf	(nwkRxRejectDuplicate@freeEntry+1)& (0+255),w,b
 30762  003D16  22DA               	addwfc	fsr2h,f,c
 30763  003D18  0E03               	movlw	3
 30764  003D1A  6EDF               	movwf	indf2,c
 30765                           
 30766                           ; BSR set to: 0
 30767                           ;../nwk/nwk_src/nwkRx.c: 250:   SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 30768  003D1C  0EBF               	movlw	low _nwkRxDuplicateRejectionTimer
 30769  003D1E  0100               	movlb	0	; force () banked
 30770  003D20  6F7F               	movwf	SYS_TimerStart@timer& (0+255),b
 30771  003D22  0E02               	movlw	high _nwkRxDuplicateRejectionTimer
 30772  003D24  6F80               	movwf	(SYS_TimerStart@timer+1)& (0+255),b
 30773  003D26  ECBB  F05C         	call	_SYS_TimerStart	;wreg free
 30774                           
 30775                           ; BSR set to: 0
 30776                           ;../nwk/nwk_src/nwkRx.c: 252:   return 0;
 30777  003D2A  0E00               	movlw	0
 30778  003D2C  0012               	return		;funcret
 30779  003D2E                     __end_of_nwkRxRejectDuplicate:
 30780                           	callstack 0
 30781                           
 30782 ;; *************** function _SYS_TimerStart *****************
 30783 ;; Defined at:
 30784 ;;		line 70 in file "../sys/sys_src/sysTimer.c"
 30785 ;; Parameters:    Size  Location     Type
 30786 ;;  timer           2   31[BANK0 ] PTR struct SYS_Timer_t
 30787 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 30788 ;; Auto vars:     Size  Location     Type
 30789 ;;		None
 30790 ;; Return value:  Size  Location     Type
 30791 ;;                  1    wreg      void 
 30792 ;; Registers used:
 30793 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 30794 ;; Tracked objects:
 30795 ;;		On entry : 3F/0
 30796 ;;		On exit  : 3F/0
 30797 ;;		Unchanged: 0/0
 30798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30799 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30802 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30803 ;;Total ram usage:        2 bytes
 30804 ;; Hardware stack levels used:    1
 30805 ;; Hardware stack levels required when called:   12
 30806 ;; This function calls:
 30807 ;;		_SYS_TimerStarted
 30808 ;;		_placeTimer
 30809 ;; This function is called by:
 30810 ;;		_nwkRxDuplicateRejectionTimerHandler
 30811 ;;		_nwkRxRejectDuplicate
 30812 ;;		_nwkTxAckWaitTimerHandler
 30813 ;;		_nwkTxDelayTimerHandler
 30814 ;;		_nwkTxTaskHandler
 30815 ;; This function uses a non-reentrant model
 30816 ;;
 30817                           
 30818                           	psect	text163
 30819  00B976                     __ptext163:
 30820                           	callstack 0
 30821  00B976                     _SYS_TimerStart:
 30822                           	callstack 15
 30823                           
 30824                           ;../sys/sys_src/sysTimer.c: 70: void SYS_TimerStart(SYS_Timer_t *timer);../sys/sys_src/s
      +                          ysTimer.c: 71: {;../sys/sys_src/sysTimer.c: 72:   if (!SYS_TimerStarted(timer))
 30825                           
 30826                           ;incstack = 0
 30827  00B976  C07F  F071         	movff	SYS_TimerStart@timer,SYS_TimerStarted@timer
 30828  00B97A  C080  F072         	movff	SYS_TimerStart@timer+1,SYS_TimerStarted@timer+1
 30829  00B97E  ECE4  F055         	call	_SYS_TimerStarted	;wreg free
 30830  00B982  0900               	iorlw	0
 30831  00B984  A4D8               	btfss	status,2,c
 30832  00B986  0012               	return	
 30833                           
 30834                           ; BSR set to: 0
 30835                           ;../sys/sys_src/sysTimer.c: 73:     placeTimer(timer);
 30836  00B988  C07F  F071         	movff	SYS_TimerStart@timer,placeTimer@timer
 30837  00B98C  C080  F072         	movff	SYS_TimerStart@timer+1,placeTimer@timer+1
 30838  00B990  EC44  F027         	call	_placeTimer	;wreg free
 30839                           
 30840                           ; BSR set to: 0
 30841  00B994  0012               	return		;funcret
 30842  00B996                     __end_of_SYS_TimerStart:
 30843                           	callstack 0
 30844                           
 30845 ;; *************** function _placeTimer *****************
 30846 ;; Defined at:
 30847 ;;		line 146 in file "../sys/sys_src/sysTimer.c"
 30848 ;; Parameters:    Size  Location     Type
 30849 ;;  timer           2   17[BANK0 ] PTR struct SYS_Timer_t
 30850 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 30851 ;; Auto vars:     Size  Location     Type
 30852 ;;  t               2   29[BANK0 ] PTR struct SYS_Timer_t
 30853 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 30854 ;;  timeout         4   23[BANK0 ] unsigned long 
 30855 ;;  prev            2   27[BANK0 ] PTR struct SYS_Timer_t
 30856 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 30857 ;; Return value:  Size  Location     Type
 30858 ;;                  1    wreg      void 
 30859 ;; Registers used:
 30860 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 30861 ;; Tracked objects:
 30862 ;;		On entry : 3F/0
 30863 ;;		On exit  : 3F/0
 30864 ;;		Unchanged: 0/0
 30865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30866 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30867 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30868 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30869 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30870 ;;Total ram usage:       14 bytes
 30871 ;; Hardware stack levels used:    1
 30872 ;; Hardware stack levels required when called:   11
 30873 ;; This function calls:
 30874 ;;		Nothing
 30875 ;; This function is called by:
 30876 ;;		_SYS_TimerStart
 30877 ;;		_SYS_TimerTaskHandler
 30878 ;; This function uses a non-reentrant model
 30879 ;;
 30880                           
 30881                           	psect	text164
 30882  004E88                     __ptext164:
 30883                           	callstack 0
 30884  004E88                     _placeTimer:
 30885                           	callstack 17
 30886                           
 30887                           ;../sys/sys_src/sysTimer.c: 146: static void placeTimer(SYS_Timer_t *timer);../sys/sys_s
      +                          rc/sysTimer.c: 147: {;../sys/sys_src/sysTimer.c: 148:   if (timers)
 30888                           
 30889                           ; BSR set to: 0
 30890                           ;incstack = 0
 30891  004E88  0100               	movlb	0	; force () banked
 30892  004E8A  51D1               	movf	_timers& (0+255),w,b
 30893  004E8C  11D2               	iorwf	(_timers+1)& (0+255),w,b
 30894  004E8E  B4D8               	btfsc	status,2,c
 30895  004E90  D0AD               	goto	l12214
 30896                           
 30897                           ; BSR set to: 0
 30898                           ;../sys/sys_src/sysTimer.c: 149:   {;../sys/sys_src/sysTimer.c: 150:     SYS_Timer_t *pr
      +                          ev = (0);
 30899  004E92  0E00               	movlw	0
 30900  004E94  0100               	movlb	0	; force () banked
 30901  004E96  6F7B               	movwf	placeTimer@prev& (0+255),b
 30902  004E98  0E00               	movlw	0
 30903  004E9A  6F7C               	movwf	(placeTimer@prev+1)& (0+255),b
 30904                           
 30905                           ; BSR set to: 0
 30906                           ;../sys/sys_src/sysTimer.c: 151:     uint32_t timeout = timer->interval;
 30907  004E9C  0100               	movlb	0	; force () banked
 30908  004E9E  EE20 F006          	lfsr	2,6
 30909  004EA2  5171               	movf	placeTimer@timer& (0+255),w,b
 30910  004EA4  26D9               	addwf	fsr2l,f,c
 30911  004EA6  5172               	movf	(placeTimer@timer+1)& (0+255),w,b
 30912  004EA8  22DA               	addwfc	fsr2h,f,c
 30913  004EAA  006F FF78  F077    	movff	postinc2,placeTimer@timeout
 30914  004EB0  006F FF78  F078    	movff	postinc2,placeTimer@timeout+1
 30915  004EB6  006F FF78  F079    	movff	postinc2,placeTimer@timeout+2
 30916  004EBC  006F FF78  F07A    	movff	postinc2,placeTimer@timeout+3
 30917                           
 30918                           ; BSR set to: 0
 30919                           ;../sys/sys_src/sysTimer.c: 153:     for (SYS_Timer_t *t = timers; t; t = t->next)
 30920  004EC2  C0D1  F07D         	movff	_timers,placeTimer@t
 30921  004EC6  C0D2  F07E         	movff	_timers+1,placeTimer@t+1
 30922  004ECA  D043               	goto	l12200
 30923  004ECC                     l12190:
 30924                           
 30925                           ; BSR set to: 0
 30926                           ;../sys/sys_src/sysTimer.c: 154:     {;../sys/sys_src/sysTimer.c: 155:       if (timeout
      +                           < t->timeout)
 30927  004ECC  0100               	movlb	0	; force () banked
 30928  004ECE  EE20 F002          	lfsr	2,2
 30929  004ED2  517D               	movf	placeTimer@t& (0+255),w,b
 30930  004ED4  26D9               	addwf	fsr2l,f,c
 30931  004ED6  517E               	movf	(placeTimer@t+1)& (0+255),w,b
 30932  004ED8  22DA               	addwfc	fsr2h,f,c
 30933  004EDA  50DE               	movf	postinc2,w,c
 30934  004EDC  0100               	movlb	0	; force () banked
 30935  004EDE  5D77               	subwf	placeTimer@timeout& (0+255),w,b
 30936  004EE0  50DE               	movf	postinc2,w,c
 30937  004EE2  5978               	subwfb	(placeTimer@timeout+1)& (0+255),w,b
 30938  004EE4  50DE               	movf	postinc2,w,c
 30939  004EE6  5979               	subwfb	(placeTimer@timeout+2)& (0+255),w,b
 30940  004EE8  50DE               	movf	postinc2,w,c
 30941  004EEA  597A               	subwfb	(placeTimer@timeout+3)& (0+255),w,b
 30942  004EEC  B0D8               	btfsc	status,0,c
 30943  004EEE  D011               	goto	l12196
 30944                           
 30945                           ; BSR set to: 0
 30946                           ;../sys/sys_src/sysTimer.c: 156:       {;../sys/sys_src/sysTimer.c: 157:          t->tim
      +                          eout -= timeout;
 30947  004EF0  0100               	movlb	0	; force () banked
 30948  004EF2  EE20 F002          	lfsr	2,2
 30949  004EF6  517D               	movf	placeTimer@t& (0+255),w,b
 30950  004EF8  26D9               	addwf	fsr2l,f,c
 30951  004EFA  517E               	movf	(placeTimer@t+1)& (0+255),w,b
 30952  004EFC  22DA               	addwfc	fsr2h,f,c
 30953  004EFE  0100               	movlb	0	; force () banked
 30954  004F00  5177               	movf	placeTimer@timeout& (0+255),w,b
 30955  004F02  5EDE               	subwf	postinc2,f,c
 30956  004F04  5178               	movf	(placeTimer@timeout+1)& (0+255),w,b
 30957  004F06  5ADE               	subwfb	postinc2,f,c
 30958  004F08  5179               	movf	(placeTimer@timeout+2)& (0+255),w,b
 30959  004F0A  5ADE               	subwfb	postinc2,f,c
 30960  004F0C  517A               	movf	(placeTimer@timeout+3)& (0+255),w,b
 30961  004F0E  5ADE               	subwfb	postinc2,f,c
 30962                           
 30963                           ;../sys/sys_src/sysTimer.c: 158:          break;
 30964  004F10  D025               	goto	u8570
 30965  004F12                     l12196:
 30966                           
 30967                           ; BSR set to: 0
 30968                           ;../sys/sys_src/sysTimer.c: 161:         timeout -= t->timeout;
 30969  004F12  0100               	movlb	0	; force () banked
 30970  004F14  EE20 F002          	lfsr	2,2
 30971  004F18  517D               	movf	placeTimer@t& (0+255),w,b
 30972  004F1A  26D9               	addwf	fsr2l,f,c
 30973  004F1C  517E               	movf	(placeTimer@t+1)& (0+255),w,b
 30974  004F1E  22DA               	addwfc	fsr2h,f,c
 30975  004F20  50DE               	movf	postinc2,w,c
 30976  004F22  0100               	movlb	0	; force () banked
 30977  004F24  5F77               	subwf	placeTimer@timeout& (0+255),f,b
 30978  004F26  50DE               	movf	postinc2,w,c
 30979  004F28  5B78               	subwfb	(placeTimer@timeout+1)& (0+255),f,b
 30980  004F2A  50DE               	movf	postinc2,w,c
 30981  004F2C  5B79               	subwfb	(placeTimer@timeout+2)& (0+255),f,b
 30982  004F2E  50DD               	movf	postdec2,w,c
 30983  004F30  5B7A               	subwfb	(placeTimer@timeout+3)& (0+255),f,b
 30984                           
 30985                           ; BSR set to: 0
 30986                           ;../sys/sys_src/sysTimer.c: 163:       prev = t;
 30987  004F32  C07D  F07B         	movff	placeTimer@t,placeTimer@prev
 30988  004F36  C07E  F07C         	movff	placeTimer@t+1,placeTimer@prev+1
 30989                           
 30990                           ;../sys/sys_src/sysTimer.c: 164:     }
 30991  004F3A  0060  F1F7  FFD9   	movff	placeTimer@t,fsr2l
 30992  004F40  0060  F1FB  FFDA   	movff	placeTimer@t+1,fsr2h
 30993  004F46  006F FF78  F07D    	movff	postinc2,placeTimer@t
 30994  004F4C  006F FF74  F07E    	movff	postdec2,placeTimer@t+1
 30995  004F52                     l12200:
 30996                           
 30997                           ; BSR set to: 0
 30998  004F52  0100               	movlb	0	; force () banked
 30999  004F54  517D               	movf	placeTimer@t& (0+255),w,b
 31000  004F56  117E               	iorwf	(placeTimer@t+1)& (0+255),w,b
 31001  004F58  A4D8               	btfss	status,2,c
 31002  004F5A  D7B8               	goto	l12190
 31003  004F5C                     u8570:
 31004                           
 31005                           ; BSR set to: 0
 31006                           ;../sys/sys_src/sysTimer.c: 166:     timer->timeout = timeout;
 31007  004F5C  0100               	movlb	0	; force () banked
 31008  004F5E  EE20 F002          	lfsr	2,2
 31009  004F62  5171               	movf	placeTimer@timer& (0+255),w,b
 31010  004F64  26D9               	addwf	fsr2l,f,c
 31011  004F66  5172               	movf	(placeTimer@timer+1)& (0+255),w,b
 31012  004F68  22DA               	addwfc	fsr2h,f,c
 31013  004F6A  0060  F1DF  FFDE   	movff	placeTimer@timeout,postinc2
 31014  004F70  0060  F1E3  FFDE   	movff	placeTimer@timeout+1,postinc2
 31015  004F76  0060  F1E7  FFDE   	movff	placeTimer@timeout+2,postinc2
 31016  004F7C  0060  F1EB  FFDE   	movff	placeTimer@timeout+3,postinc2
 31017                           
 31018                           ; BSR set to: 0
 31019                           ;../sys/sys_src/sysTimer.c: 168:     if (prev)
 31020  004F82  0100               	movlb	0	; force () banked
 31021  004F84  517B               	movf	placeTimer@prev& (0+255),w,b
 31022  004F86  117C               	iorwf	(placeTimer@prev+1)& (0+255),w,b
 31023  004F88  B4D8               	btfsc	status,2,c
 31024  004F8A  D01F               	goto	l12210
 31025                           
 31026                           ; BSR set to: 0
 31027                           ;../sys/sys_src/sysTimer.c: 169:     {;../sys/sys_src/sysTimer.c: 170:       timer->next
      +                           = prev->next;
 31028  004F8C  0060  F1EF  FFD9   	movff	placeTimer@prev,fsr2l
 31029  004F92  0060  F1F3  FFDA   	movff	placeTimer@prev+1,fsr2h
 31030  004F98  0060  F1C7  FFE9   	movff	placeTimer@timer,fsr0l
 31031  004F9E  0060  F1CB  FFEA   	movff	placeTimer@timer+1,fsr0h
 31032  004FA4  006F FF7B FFEE     	movff	postinc2,postinc0
 31033  004FAA  006F FF77 FFED     	movff	postdec2,postdec0
 31034                           
 31035                           ; BSR set to: 0
 31036                           ;../sys/sys_src/sysTimer.c: 171:       prev->next = timer;
 31037  004FB0  0060  F1EF  FFD9   	movff	placeTimer@prev,fsr2l
 31038  004FB6  0060  F1F3  FFDA   	movff	placeTimer@prev+1,fsr2h
 31039  004FBC  0060  F1C7  FFDE   	movff	placeTimer@timer,postinc2
 31040  004FC2  0060  F1CB  FFDD   	movff	placeTimer@timer+1,postdec2
 31041                           
 31042                           ;../sys/sys_src/sysTimer.c: 172:     }
 31043  004FC8  0012               	return	
 31044  004FCA                     l12210:
 31045                           
 31046                           ; BSR set to: 0
 31047                           ;../sys/sys_src/sysTimer.c: 174:     {;../sys/sys_src/sysTimer.c: 175:       timer->next
      +                           = timers;
 31048  004FCA  0060  F1C7  FFD9   	movff	placeTimer@timer,fsr2l
 31049  004FD0  0060  F1CB  FFDA   	movff	placeTimer@timer+1,fsr2h
 31050  004FD6  0060  F347  FFDE   	movff	_timers,postinc2
 31051  004FDC  0060  F34B  FFDD   	movff	_timers+1,postdec2
 31052                           
 31053                           ; BSR set to: 0
 31054                           ;../sys/sys_src/sysTimer.c: 176:       timers = timer;
 31055  004FE2  C071  F0D1         	movff	placeTimer@timer,_timers
 31056  004FE6  C072  F0D2         	movff	placeTimer@timer+1,_timers+1
 31057  004FEA  0012               	return	
 31058  004FEC                     l12214:
 31059                           
 31060                           ; BSR set to: 0
 31061                           ;../sys/sys_src/sysTimer.c: 180:   {;../sys/sys_src/sysTimer.c: 181:     timer->next = (
      +                          0);
 31062  004FEC  0060  F1C7  FFD9   	movff	placeTimer@timer,fsr2l
 31063  004FF2  0060  F1CB  FFDA   	movff	placeTimer@timer+1,fsr2h
 31064  004FF8  0E00               	movlw	0
 31065  004FFA  6EDE               	movwf	postinc2,c
 31066  004FFC  0E00               	movlw	0
 31067  004FFE  6EDD               	movwf	postdec2,c
 31068                           
 31069                           ; BSR set to: 0
 31070                           ;../sys/sys_src/sysTimer.c: 182:     timer->timeout = timer->interval;
 31071  005000  0100               	movlb	0	; force () banked
 31072  005002  EE20 F006          	lfsr	2,6
 31073  005006  5171               	movf	placeTimer@timer& (0+255),w,b
 31074  005008  26D9               	addwf	fsr2l,f,c
 31075  00500A  5172               	movf	(placeTimer@timer+1)& (0+255),w,b
 31076  00500C  22DA               	addwfc	fsr2h,f,c
 31077  00500E  EE00 F002          	lfsr	0,2
 31078  005012  5171               	movf	placeTimer@timer& (0+255),w,b
 31079  005014  26E9               	addwf	fsr0l,f,c
 31080  005016  5172               	movf	(placeTimer@timer+1)& (0+255),w,b
 31081  005018  22EA               	addwfc	fsr0h,f,c
 31082  00501A  006F FF7B FFEE     	movff	postinc2,postinc0
 31083  005020  006F FF7B FFEE     	movff	postinc2,postinc0
 31084  005026  006F FF7B FFEE     	movff	postinc2,postinc0
 31085  00502C  006F FF7B FFEE     	movff	postinc2,postinc0
 31086                           
 31087                           ; BSR set to: 0
 31088                           ;../sys/sys_src/sysTimer.c: 183:     timers = timer;
 31089  005032  C071  F0D1         	movff	placeTimer@timer,_timers
 31090  005036  C072  F0D2         	movff	placeTimer@timer+1,_timers+1
 31091                           
 31092                           ; BSR set to: 0
 31093  00503A  0012               	return		;funcret
 31094  00503C                     __end_of_placeTimer:
 31095                           	callstack 0
 31096                           
 31097 ;; *************** function _SYS_TimerStarted *****************
 31098 ;; Defined at:
 31099 ;;		line 102 in file "../sys/sys_src/sysTimer.c"
 31100 ;; Parameters:    Size  Location     Type
 31101 ;;  timer           2   17[BANK0 ] PTR struct SYS_Timer_t
 31102 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 31103 ;; Auto vars:     Size  Location     Type
 31104 ;;  t               2   19[BANK0 ] PTR struct SYS_Timer_t
 31105 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 31106 ;; Return value:  Size  Location     Type
 31107 ;;                  1    wreg      _Bool 
 31108 ;; Registers used:
 31109 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31110 ;; Tracked objects:
 31111 ;;		On entry : 0/0
 31112 ;;		On exit  : 3F/0
 31113 ;;		Unchanged: 0/0
 31114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31115 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31116 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31118 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31119 ;;Total ram usage:        4 bytes
 31120 ;; Hardware stack levels used:    1
 31121 ;; Hardware stack levels required when called:   11
 31122 ;; This function calls:
 31123 ;;		Nothing
 31124 ;; This function is called by:
 31125 ;;		_SYS_TimerStart
 31126 ;; This function uses a non-reentrant model
 31127 ;;
 31128                           
 31129                           	psect	text165
 31130  00ABC8                     __ptext165:
 31131                           	callstack 0
 31132  00ABC8                     _SYS_TimerStarted:
 31133                           	callstack 15
 31134                           
 31135                           ;../sys/sys_src/sysTimer.c: 102: _Bool SYS_TimerStarted(SYS_Timer_t *timer);../sys/sys_s
      +                          rc/sysTimer.c: 103: {;../sys/sys_src/sysTimer.c: 104:   for (SYS_Timer_t *t = timers; t;
      +                           t = t->next)
 31136                           
 31137                           ; BSR set to: 0
 31138                           ;incstack = 0
 31139  00ABC8  C0D1  F073         	movff	_timers,SYS_TimerStarted@t
 31140  00ABCC  C0D2  F074         	movff	_timers+1,SYS_TimerStarted@t+1
 31141  00ABD0  D019               	goto	l12176
 31142  00ABD2                     l12168:
 31143                           
 31144                           ; BSR set to: 0
 31145                           ;../sys/sys_src/sysTimer.c: 105:     if (t == timer)
 31146  00ABD2  0100               	movlb	0	; force () banked
 31147  00ABD4  5171               	movf	SYS_TimerStarted@timer& (0+255),w,b
 31148  00ABD6  0100               	movlb	0	; force () banked
 31149  00ABD8  1973               	xorwf	SYS_TimerStarted@t& (0+255),w,b
 31150  00ABDA  E108               	bnz	l12174
 31151  00ABDC  0100               	movlb	0	; force () banked
 31152  00ABDE  5172               	movf	(SYS_TimerStarted@timer+1)& (0+255),w,b
 31153  00ABE0  0100               	movlb	0	; force () banked
 31154  00ABE2  1974               	xorwf	(SYS_TimerStarted@t+1)& (0+255),w,b
 31155  00ABE4  A4D8               	btfss	status,2,c
 31156  00ABE6  D002               	goto	l12174
 31157                           
 31158                           ; BSR set to: 0
 31159                           ;../sys/sys_src/sysTimer.c: 106:       return 1;
 31160  00ABE8  0E01               	movlw	1
 31161  00ABEA  0012               	return	
 31162  00ABEC                     l12174:
 31163                           
 31164                           ; BSR set to: 0
 31165  00ABEC  0060  F1CF  FFD9   	movff	SYS_TimerStarted@t,fsr2l
 31166  00ABF2  0060  F1D3  FFDA   	movff	SYS_TimerStarted@t+1,fsr2h
 31167  00ABF8  006F FF78  F073    	movff	postinc2,SYS_TimerStarted@t
 31168  00ABFE  006F FF74  F074    	movff	postdec2,SYS_TimerStarted@t+1
 31169  00AC04                     l12176:
 31170  00AC04  0100               	movlb	0	; force () banked
 31171  00AC06  5173               	movf	SYS_TimerStarted@t& (0+255),w,b
 31172  00AC08  1174               	iorwf	(SYS_TimerStarted@t+1)& (0+255),w,b
 31173  00AC0A  A4D8               	btfss	status,2,c
 31174  00AC0C  D7E2               	goto	l12168
 31175                           
 31176                           ; BSR set to: 0
 31177                           ;../sys/sys_src/sysTimer.c: 107:   return 0;
 31178  00AC0E  0E00               	movlw	0
 31179                           
 31180                           ; BSR set to: 0
 31181  00AC10  0012               	return		;funcret
 31182  00AC12                     __end_of_SYS_TimerStarted:
 31183                           	callstack 0
 31184                           
 31185 ;; *************** function _nwkRouteFrameReceived *****************
 31186 ;; Defined at:
 31187 ;;		line 196 in file "../nwk/nwk_src/nwkRoute.c"
 31188 ;; Parameters:    Size  Location     Type
 31189 ;;  frame           2   26[BANK0 ] PTR struct NwkFrame_t
 31190 ;;		 -> nwkFrameFrames(690), NULL(0), 
 31191 ;; Auto vars:     Size  Location     Type
 31192 ;;  discovery       1   32[BANK0 ] _Bool 
 31193 ;;  entry           2   36[BANK0 ] PTR struct NWK_RouteTabl
 31194 ;;		 -> nwkRouteTable(224), NULL(0), 
 31195 ;;  header          2   34[BANK0 ] PTR struct NwkFrameHeade
 31196 ;;		 -> nwkFrameFrames..(128), nwkFrameFrames(690), NULL(0), 
 31197 ;; Return value:  Size  Location     Type
 31198 ;;                  1    wreg      void 
 31199 ;; Registers used:
 31200 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31201 ;; Tracked objects:
 31202 ;;		On entry : 3F/2
 31203 ;;		On exit  : 3F/0
 31204 ;;		Unchanged: 0/0
 31205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31206 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31207 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31208 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31209 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31210 ;;Total ram usage:       12 bytes
 31211 ;; Hardware stack levels used:    1
 31212 ;; Hardware stack levels required when called:   12
 31213 ;; This function calls:
 31214 ;;		_NWK_RouteFindEntry
 31215 ;;		_NWK_RouteNewEntry
 31216 ;; This function is called by:
 31217 ;;		_nwkRxHandleReceivedFrame
 31218 ;; This function uses a non-reentrant model
 31219 ;;
 31220                           
 31221                           	psect	text166
 31222  004CBC                     __ptext166:
 31223                           	callstack 0
 31224  004CBC                     _nwkRouteFrameReceived:
 31225                           	callstack 14
 31226                           
 31227                           ;../nwk/nwk_src/nwkRoute.c: 196: void nwkRouteFrameReceived(NwkFrame_t *frame);../nwk/nw
      +                          k_src/nwkRoute.c: 197: {;../nwk/nwk_src/nwkRoute.c: 199:   NwkFrameHeader_t *header = &f
      +                          rame->header;
 31228                           
 31229                           ; BSR set to: 0
 31230                           ;incstack = 0
 31231  004CBC  0E02               	movlw	2
 31232  004CBE  0100               	movlb	0	; force () banked
 31233  004CC0  257A               	addwf	nwkRouteFrameReceived@frame& (0+255),w,b
 31234  004CC2  0100               	movlb	0	; force () banked
 31235  004CC4  6F82               	movwf	nwkRouteFrameReceived@header& (0+255),b
 31236  004CC6  0E00               	movlw	0
 31237  004CC8  0100               	movlb	0	; force () banked
 31238  004CCA  217B               	addwfc	(nwkRouteFrameReceived@frame+1)& (0+255),w,b
 31239  004CCC  0100               	movlb	0	; force () banked
 31240  004CCE  6F83               	movwf	(nwkRouteFrameReceived@header+1)& (0+255),b
 31241                           
 31242                           ; BSR set to: 0
 31243                           ;../nwk/nwk_src/nwkRoute.c: 200:   NWK_RouteTableEntry_t *entry;;../nwk/nwk_src/nwkRoute
      +                          .c: 214:   if (0xffff == header->macDstPanId)
 31244  004CD0  0100               	movlb	0	; force () banked
 31245  004CD2  EE20 F003          	lfsr	2,3
 31246  004CD6  5182               	movf	nwkRouteFrameReceived@header& (0+255),w,b
 31247  004CD8  26D9               	addwf	fsr2l,f,c
 31248  004CDA  5183               	movf	(nwkRouteFrameReceived@header+1)& (0+255),w,b
 31249  004CDC  22DA               	addwfc	fsr2h,f,c
 31250  004CDE  28DE               	incf	postinc2,w,c
 31251  004CE0  E103               	bnz	l18430
 31252  004CE2  28DE               	incf	postinc2,w,c
 31253  004CE4  B4D8               	btfsc	status,2,c
 31254  004CE6  0012               	return	
 31255  004CE8                     l18430:
 31256                           
 31257                           ; BSR set to: 0
 31258                           ;../nwk/nwk_src/nwkRoute.c: 217:   entry = NWK_RouteFindEntry(header->nwkSrcAddr, 0);
 31259  004CE8  0100               	movlb	0	; force () banked
 31260  004CEA  EE20 F00B          	lfsr	2,11
 31261  004CEE  5182               	movf	nwkRouteFrameReceived@header& (0+255),w,b
 31262  004CF0  26D9               	addwf	fsr2l,f,c
 31263  004CF2  5183               	movf	(nwkRouteFrameReceived@header+1)& (0+255),w,b
 31264  004CF4  22DA               	addwfc	fsr2h,f,c
 31265  004CF6  006F FF78  F071    	movff	postinc2,NWK_RouteFindEntry@dst
 31266  004CFC  006F FF74  F072    	movff	postdec2,NWK_RouteFindEntry@dst+1
 31267  004D02  0E00               	movlw	0
 31268  004D04  0100               	movlb	0	; force () banked
 31269  004D06  6F73               	movwf	NWK_RouteFindEntry@multicast& (0+255),b
 31270  004D08  EC41  F050         	call	_NWK_RouteFindEntry	;wreg free
 31271  004D0C  C071  F084         	movff	?_NWK_RouteFindEntry,nwkRouteFrameReceived@entry
 31272  004D10  C072  F085         	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameReceived@entry+1
 31273                           
 31274                           ; BSR set to: 0
 31275                           ;../nwk/nwk_src/nwkRoute.c: 219:   if (entry)
 31276  004D14  0100               	movlb	0	; force () banked
 31277  004D16  5184               	movf	nwkRouteFrameReceived@entry& (0+255),w,b
 31278  004D18  1185               	iorwf	(nwkRouteFrameReceived@entry+1)& (0+255),w,b
 31279  004D1A  B4D8               	btfsc	status,2,c
 31280  004D1C  D075               	goto	l18452
 31281                           
 31282                           ; BSR set to: 0
 31283                           ;../nwk/nwk_src/nwkRoute.c: 220:   {;../nwk/nwk_src/nwkRoute.c: 221:     _Bool discovery
      +                           = (0xffff == header->macDstAddr &&
 31284  004D1E  0E00               	movlw	0
 31285  004D20  0100               	movlb	0	; force () banked
 31286  004D22  6F81               	movwf	_nwkRouteFrameReceived$6093& (0+255),b
 31287                           
 31288                           ; BSR set to: 0
 31289  004D24  0100               	movlb	0	; force () banked
 31290  004D26  EE20 F005          	lfsr	2,5
 31291  004D2A  5182               	movf	nwkRouteFrameReceived@header& (0+255),w,b
 31292  004D2C  26D9               	addwf	fsr2l,f,c
 31293  004D2E  5183               	movf	(nwkRouteFrameReceived@header+1)& (0+255),w,b
 31294  004D30  22DA               	addwfc	fsr2h,f,c
 31295  004D32  28DE               	incf	postinc2,w,c
 31296  004D34  E115               	bnz	l2884
 31297  004D36  28DE               	incf	postinc2,w,c
 31298  004D38  A4D8               	btfss	status,2,c
 31299  004D3A  D012               	goto	l2884
 31300                           
 31301                           ; BSR set to: 0
 31302  004D3C  0100               	movlb	0	; force () banked
 31303  004D3E  EE20 F00D          	lfsr	2,13
 31304  004D42  5182               	movf	nwkRouteFrameReceived@header& (0+255),w,b
 31305  004D44  26D9               	addwf	fsr2l,f,c
 31306  004D46  5183               	movf	(nwkRouteFrameReceived@header+1)& (0+255),w,b
 31307  004D48  22DA               	addwfc	fsr2h,f,c
 31308  004D4A  0102               	movlb	2	; force () banked
 31309  004D4C  5100               	movf	_nwkIb& (0+255),w,b
 31310  004D4E  18DE               	xorwf	postinc2,w,c
 31311  004D50  E107               	bnz	l2884
 31312  004D52  5101               	movf	(_nwkIb+1)& (0+255),w,b
 31313  004D54  18DE               	xorwf	postinc2,w,c
 31314  004D56  A4D8               	btfss	status,2,c
 31315  004D58  D003               	goto	l2884
 31316                           
 31317                           ; BSR set to: 2
 31318  004D5A  0E01               	movlw	1
 31319  004D5C  0100               	movlb	0	; force () banked
 31320  004D5E  6F81               	movwf	_nwkRouteFrameReceived$6093& (0+255),b
 31321  004D60                     l2884:
 31322  004D60  0100               	movlb	0	; force () banked
 31323  004D62  5181               	movf	_nwkRouteFrameReceived$6093& (0+255),w,b
 31324  004D64  B4D8               	btfsc	status,2,c
 31325  004D66  D002               	goto	u16080
 31326  004D68  0E01               	movlw	1
 31327  004D6A  D001               	goto	u16090
 31328  004D6C                     u16080:
 31329  004D6C  0E00               	movlw	0
 31330  004D6E                     u16090:
 31331  004D6E  0100               	movlb	0	; force () banked
 31332  004D70  6F80               	movwf	nwkRouteFrameReceived@discovery& (0+255),b
 31333                           
 31334                           ; BSR set to: 0
 31335                           ;../nwk/nwk_src/nwkRoute.c: 224:     if ((entry->nextHopAddr != header->macSrcAddr && fr
      +                          ame->rx.lqi > entry->lqi) || discovery)
 31336  004D72  0100               	movlb	0	; force () banked
 31337  004D74  EE20 F007          	lfsr	2,7
 31338  004D78  5182               	movf	nwkRouteFrameReceived@header& (0+255),w,b
 31339  004D7A  26D9               	addwf	fsr2l,f,c
 31340  004D7C  5183               	movf	(nwkRouteFrameReceived@header+1)& (0+255),w,b
 31341  004D7E  22DA               	addwfc	fsr2h,f,c
 31342  004D80  0100               	movlb	0	; force () banked
 31343  004D82  EE00 F003          	lfsr	0,3
 31344  004D86  5184               	movf	nwkRouteFrameReceived@entry& (0+255),w,b
 31345  004D88  26E9               	addwf	fsr0l,f,c
 31346  004D8A  5185               	movf	(nwkRouteFrameReceived@entry+1)& (0+255),w,b
 31347  004D8C  22EA               	addwfc	fsr0h,f,c
 31348  004D8E  50DE               	movf	postinc2,w,c
 31349  004D90  18EE               	xorwf	postinc0,w,c
 31350  004D92  E104               	bnz	u16100
 31351  004D94  50DE               	movf	postinc2,w,c
 31352  004D96  18EE               	xorwf	postinc0,w,c
 31353  004D98  B4D8               	btfsc	status,2,c
 31354  004D9A  D012               	goto	u16110
 31355  004D9C                     u16100:
 31356                           
 31357                           ; BSR set to: 0
 31358  004D9C  0100               	movlb	0	; force () banked
 31359  004D9E  EE20 F084          	lfsr	2,132
 31360  004DA2  517A               	movf	nwkRouteFrameReceived@frame& (0+255),w,b
 31361  004DA4  26D9               	addwf	fsr2l,f,c
 31362  004DA6  517B               	movf	(nwkRouteFrameReceived@frame+1)& (0+255),w,b
 31363  004DA8  22DA               	addwfc	fsr2h,f,c
 31364  004DAA  0100               	movlb	0	; force () banked
 31365  004DAC  EE00 F006          	lfsr	0,6
 31366  004DB0  5184               	movf	nwkRouteFrameReceived@entry& (0+255),w,b
 31367  004DB2  26E9               	addwf	fsr0l,f,c
 31368  004DB4  5185               	movf	(nwkRouteFrameReceived@entry+1)& (0+255),w,b
 31369  004DB6  22EA               	addwfc	fsr0h,f,c
 31370  004DB8  50DE               	movf	postinc2,w,c
 31371  004DBA  5CEE               	subwf	postinc0,w,c
 31372  004DBC  A0D8               	btfss	status,0,c
 31373  004DBE  D004               	goto	u16120
 31374  004DC0                     u16110:
 31375                           
 31376                           ; BSR set to: 0
 31377  004DC0  0100               	movlb	0	; force () banked
 31378  004DC2  5180               	movf	nwkRouteFrameReceived@discovery& (0+255),w,b
 31379  004DC4  B4D8               	btfsc	status,2,c
 31380  004DC6  D04E               	goto	l18458
 31381  004DC8                     u16120:
 31382                           
 31383                           ; BSR set to: 0
 31384                           ;../nwk/nwk_src/nwkRoute.c: 225:     {;../nwk/nwk_src/nwkRoute.c: 226:       entry->next
      +                          HopAddr = header->macSrcAddr;
 31385  004DC8  0100               	movlb	0	; force () banked
 31386  004DCA  EE20 F007          	lfsr	2,7
 31387  004DCE  5182               	movf	nwkRouteFrameReceived@header& (0+255),w,b
 31388  004DD0  26D9               	addwf	fsr2l,f,c
 31389  004DD2  5183               	movf	(nwkRouteFrameReceived@header+1)& (0+255),w,b
 31390  004DD4  22DA               	addwfc	fsr2h,f,c
 31391  004DD6  0100               	movlb	0	; force () banked
 31392  004DD8  EE00 F003          	lfsr	0,3
 31393  004DDC  5184               	movf	nwkRouteFrameReceived@entry& (0+255),w,b
 31394  004DDE  26E9               	addwf	fsr0l,f,c
 31395  004DE0  5185               	movf	(nwkRouteFrameReceived@entry+1)& (0+255),w,b
 31396  004DE2  22EA               	addwfc	fsr0h,f,c
 31397  004DE4  006F FF7B FFEE     	movff	postinc2,postinc0
 31398  004DEA  006F FF77 FFED     	movff	postdec2,postdec0
 31399                           
 31400                           ; BSR set to: 0
 31401                           ;../nwk/nwk_src/nwkRoute.c: 227:       entry->score = 3;
 31402  004DF0  0060  F213  FFD9   	movff	nwkRouteFrameReceived@entry,fsr2l
 31403  004DF6  0060  F217  FFDA   	movff	nwkRouteFrameReceived@entry+1,fsr2h
 31404  004DFC  0100               	movlb	0	; force () banked
 31405  004DFE  50DF               	movf	223,w,c
 31406  004E00  0B0F               	andlw	-241
 31407  004E02  0930               	iorlw	48
 31408  004E04  6EDF               	movwf	223,c
 31409  004E06  D02E               	goto	l18458
 31410  004E08                     l18452:
 31411                           
 31412                           ; BSR set to: 0
 31413                           ;../nwk/nwk_src/nwkRoute.c: 231:   {;../nwk/nwk_src/nwkRoute.c: 232:     entry = NWK_Rou
      +                          teNewEntry();
 31414  004E08  EC8F  F040         	call	_NWK_RouteNewEntry	;wreg free
 31415  004E0C  C071  F084         	movff	?_NWK_RouteNewEntry,nwkRouteFrameReceived@entry
 31416  004E10  C072  F085         	movff	?_NWK_RouteNewEntry+1,nwkRouteFrameReceived@entry+1
 31417                           
 31418                           ; BSR set to: 0
 31419                           ;../nwk/nwk_src/nwkRoute.c: 234:     entry->dstAddr = header->nwkSrcAddr;
 31420  004E14  0100               	movlb	0	; force () banked
 31421  004E16  EE20 F00B          	lfsr	2,11
 31422  004E1A  5182               	movf	nwkRouteFrameReceived@header& (0+255),w,b
 31423  004E1C  26D9               	addwf	fsr2l,f,c
 31424  004E1E  5183               	movf	(nwkRouteFrameReceived@header+1)& (0+255),w,b
 31425  004E20  22DA               	addwfc	fsr2h,f,c
 31426  004E22  0100               	movlb	0	; force () banked
 31427  004E24  EE00 F001          	lfsr	0,1
 31428  004E28  5184               	movf	nwkRouteFrameReceived@entry& (0+255),w,b
 31429  004E2A  26E9               	addwf	fsr0l,f,c
 31430  004E2C  5185               	movf	(nwkRouteFrameReceived@entry+1)& (0+255),w,b
 31431  004E2E  22EA               	addwfc	fsr0h,f,c
 31432  004E30  006F FF7B FFEE     	movff	postinc2,postinc0
 31433  004E36  006F FF77 FFED     	movff	postdec2,postdec0
 31434                           
 31435                           ; BSR set to: 0
 31436                           ;../nwk/nwk_src/nwkRoute.c: 235:     entry->nextHopAddr = header->macSrcAddr;
 31437  004E3C  0100               	movlb	0	; force () banked
 31438  004E3E  EE20 F007          	lfsr	2,7
 31439  004E42  5182               	movf	nwkRouteFrameReceived@header& (0+255),w,b
 31440  004E44  26D9               	addwf	fsr2l,f,c
 31441  004E46  5183               	movf	(nwkRouteFrameReceived@header+1)& (0+255),w,b
 31442  004E48  22DA               	addwfc	fsr2h,f,c
 31443  004E4A  0100               	movlb	0	; force () banked
 31444  004E4C  EE00 F003          	lfsr	0,3
 31445  004E50  5184               	movf	nwkRouteFrameReceived@entry& (0+255),w,b
 31446  004E52  26E9               	addwf	fsr0l,f,c
 31447  004E54  5185               	movf	(nwkRouteFrameReceived@entry+1)& (0+255),w,b
 31448  004E56  22EA               	addwfc	fsr0h,f,c
 31449  004E58  006F FF7B FFEE     	movff	postinc2,postinc0
 31450  004E5E  006F FF77 FFED     	movff	postdec2,postdec0
 31451  004E64                     l18458:
 31452                           
 31453                           ; BSR set to: 0
 31454                           ;../nwk/nwk_src/nwkRoute.c: 238:   entry->lqi = frame->rx.lqi;
 31455  004E64  0100               	movlb	0	; force () banked
 31456  004E66  EE20 F084          	lfsr	2,132
 31457  004E6A  517A               	movf	nwkRouteFrameReceived@frame& (0+255),w,b
 31458  004E6C  26D9               	addwf	fsr2l,f,c
 31459  004E6E  517B               	movf	(nwkRouteFrameReceived@frame+1)& (0+255),w,b
 31460  004E70  22DA               	addwfc	fsr2h,f,c
 31461  004E72  0100               	movlb	0	; force () banked
 31462  004E74  EE00 F006          	lfsr	0,6
 31463  004E78  5184               	movf	nwkRouteFrameReceived@entry& (0+255),w,b
 31464  004E7A  26E9               	addwf	fsr0l,f,c
 31465  004E7C  5185               	movf	(nwkRouteFrameReceived@entry+1)& (0+255),w,b
 31466  004E7E  22EA               	addwfc	fsr0h,f,c
 31467  004E80  006F FF7F FFEF     	movff	indf2,indf0
 31468                           
 31469                           ; BSR set to: 0
 31470  004E86  0012               	return		;funcret
 31471  004E88                     __end_of_nwkRouteFrameReceived:
 31472                           	callstack 0
 31473                           
 31474 ;; *************** function _NWK_RouteNewEntry *****************
 31475 ;; Defined at:
 31476 ;;		line 107 in file "../nwk/nwk_src/nwkRoute.c"
 31477 ;; Parameters:    Size  Location     Type
 31478 ;;		None
 31479 ;; Auto vars:     Size  Location     Type
 31480 ;;  i               1   21[BANK0 ] unsigned char 
 31481 ;;  entry           2   24[BANK0 ] PTR struct NWK_RouteTabl
 31482 ;;		 -> nwkRouteTable(224), NULL(0), 
 31483 ;;  iter            2   22[BANK0 ] PTR struct NWK_RouteTabl
 31484 ;;		 -> nwkRouteTable(224), 
 31485 ;; Return value:  Size  Location     Type
 31486 ;;                  2   17[BANK0 ] PTR struct NWK_RouteTabl
 31487 ;; Registers used:
 31488 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 31489 ;; Tracked objects:
 31490 ;;		On entry : 3F/0
 31491 ;;		On exit  : 3F/0
 31492 ;;		Unchanged: 0/0
 31493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31494 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31495 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31496 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31497 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31498 ;;Total ram usage:        9 bytes
 31499 ;; Hardware stack levels used:    1
 31500 ;; Hardware stack levels required when called:   11
 31501 ;; This function calls:
 31502 ;;		Nothing
 31503 ;; This function is called by:
 31504 ;;		_nwkRouteFrameReceived
 31505 ;; This function uses a non-reentrant model
 31506 ;;
 31507                           
 31508                           	psect	text167
 31509  00811E                     __ptext167:
 31510                           	callstack 0
 31511  00811E                     _NWK_RouteNewEntry:
 31512                           	callstack 14
 31513                           
 31514                           ;../nwk/nwk_src/nwkRoute.c: 109:   NWK_RouteTableEntry_t *iter = nwkRouteTable;
 31515                           
 31516                           ; BSR set to: 0
 31517                           ;incstack = 0
 31518  00811E  0E00               	movlw	low _nwkRouteTable
 31519  008120  0100               	movlb	0	; force () banked
 31520  008122  6F76               	movwf	NWK_RouteNewEntry@iter& (0+255),b
 31521  008124  0E08               	movlw	high _nwkRouteTable
 31522  008126  6F77               	movwf	(NWK_RouteNewEntry@iter+1)& (0+255),b
 31523                           
 31524                           ;../nwk/nwk_src/nwkRoute.c: 110:   NWK_RouteTableEntry_t *entry = (0);
 31525  008128  0E00               	movlw	0
 31526  00812A  0100               	movlb	0	; force () banked
 31527  00812C  6F78               	movwf	NWK_RouteNewEntry@entry& (0+255),b
 31528  00812E  0E00               	movlw	0
 31529  008130  6F79               	movwf	(NWK_RouteNewEntry@entry+1)& (0+255),b
 31530                           
 31531                           ; BSR set to: 0
 31532                           ;../nwk/nwk_src/nwkRoute.c: 112:   for (uint8_t i = 0; i < 32; i++, iter++)
 31533  008132  0E00               	movlw	0
 31534  008134  0100               	movlb	0	; force () banked
 31535  008136  6F75               	movwf	NWK_RouteNewEntry@i& (0+255),b
 31536  008138  D03A               	goto	l12528
 31537  00813A                     l12510:
 31538                           
 31539                           ; BSR set to: 0
 31540                           ;../nwk/nwk_src/nwkRoute.c: 113:   {;../nwk/nwk_src/nwkRoute.c: 114:     if (iter->fixed
      +                          )
 31541  00813A  0060  F1DB  FFD9   	movff	NWK_RouteNewEntry@iter,fsr2l
 31542  008140  0060  F1DF  FFDA   	movff	NWK_RouteNewEntry@iter+1,fsr2h
 31543  008146  0100               	movlb	0	; force () banked
 31544  008148  B0DF               	btfsc	indf2,0,c
 31545  00814A  D02A               	goto	l12524
 31546                           
 31547                           ; BSR set to: 0
 31548                           ;../nwk/nwk_src/nwkRoute.c: 117:     if (0 == iter->rank)
 31549  00814C  0100               	movlb	0	; force () banked
 31550  00814E  EE20 F005          	lfsr	2,5
 31551  008152  5176               	movf	NWK_RouteNewEntry@iter& (0+255),w,b
 31552  008154  26D9               	addwf	fsr2l,f,c
 31553  008156  5177               	movf	(NWK_RouteNewEntry@iter+1)& (0+255),w,b
 31554  008158  22DA               	addwfc	fsr2h,f,c
 31555  00815A  50DF               	movf	indf2,w,c
 31556  00815C  A4D8               	btfss	status,2,c
 31557  00815E  D005               	goto	l12518
 31558                           
 31559                           ; BSR set to: 0
 31560                           ;../nwk/nwk_src/nwkRoute.c: 118:     {;../nwk/nwk_src/nwkRoute.c: 119:       entry = ite
      +                          r;
 31561  008160  C076  F078         	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
 31562  008164  C077  F079         	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
 31563                           
 31564                           ;../nwk/nwk_src/nwkRoute.c: 120:       break;
 31565  008168  D026               	goto	u8970
 31566  00816A                     l12518:
 31567                           
 31568                           ; BSR set to: 0
 31569                           ;../nwk/nwk_src/nwkRoute.c: 123:     if ((0) == entry || iter->rank < entry->rank)
 31570  00816A  0100               	movlb	0	; force () banked
 31571  00816C  5178               	movf	NWK_RouteNewEntry@entry& (0+255),w,b
 31572  00816E  1179               	iorwf	(NWK_RouteNewEntry@entry+1)& (0+255),w,b
 31573  008170  B4D8               	btfsc	status,2,c
 31574  008172  D012               	goto	u8960
 31575                           
 31576                           ; BSR set to: 0
 31577  008174  0100               	movlb	0	; force () banked
 31578  008176  EE20 F005          	lfsr	2,5
 31579  00817A  5178               	movf	NWK_RouteNewEntry@entry& (0+255),w,b
 31580  00817C  26D9               	addwf	fsr2l,f,c
 31581  00817E  5179               	movf	(NWK_RouteNewEntry@entry+1)& (0+255),w,b
 31582  008180  22DA               	addwfc	fsr2h,f,c
 31583  008182  0100               	movlb	0	; force () banked
 31584  008184  EE00 F005          	lfsr	0,5
 31585  008188  5176               	movf	NWK_RouteNewEntry@iter& (0+255),w,b
 31586  00818A  26E9               	addwf	fsr0l,f,c
 31587  00818C  5177               	movf	(NWK_RouteNewEntry@iter+1)& (0+255),w,b
 31588  00818E  22EA               	addwfc	fsr0h,f,c
 31589  008190  50DE               	movf	postinc2,w,c
 31590  008192  5CEE               	subwf	postinc0,w,c
 31591  008194  B0D8               	btfsc	status,0,c
 31592  008196  D004               	goto	l12524
 31593  008198                     u8960:
 31594                           
 31595                           ; BSR set to: 0
 31596                           ;../nwk/nwk_src/nwkRoute.c: 124:       entry = iter;
 31597  008198  C076  F078         	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
 31598  00819C  C077  F079         	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
 31599  0081A0                     l12524:
 31600                           
 31601                           ; BSR set to: 0
 31602  0081A0  0100               	movlb	0	; force () banked
 31603  0081A2  2B75               	incf	NWK_RouteNewEntry@i& (0+255),f,b
 31604                           
 31605                           ; BSR set to: 0
 31606  0081A4  0E07               	movlw	7
 31607  0081A6  0100               	movlb	0	; force () banked
 31608  0081A8  2776               	addwf	NWK_RouteNewEntry@iter& (0+255),f,b
 31609  0081AA  0E00               	movlw	0
 31610  0081AC  2377               	addwfc	(NWK_RouteNewEntry@iter+1)& (0+255),f,b
 31611  0081AE                     l12528:
 31612                           
 31613                           ; BSR set to: 0
 31614  0081AE  0E1F               	movlw	31
 31615  0081B0  0100               	movlb	0	; force () banked
 31616  0081B2  6575               	cpfsgt	NWK_RouteNewEntry@i& (0+255),b
 31617  0081B4  D7C2               	goto	l12510
 31618  0081B6                     u8970:
 31619                           
 31620                           ; BSR set to: 0
 31621                           ;../nwk/nwk_src/nwkRoute.c: 127:   entry->multicast = 0;
 31622  0081B6  0060  F1E3  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
 31623  0081BC  0060  F1E7  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
 31624  0081C2  0100               	movlb	0	; force () banked
 31625  0081C4  92DF               	bcf	indf2,1,c
 31626                           
 31627                           ; BSR set to: 0
 31628                           ;../nwk/nwk_src/nwkRoute.c: 128:   entry->score = 3;
 31629  0081C6  0060  F1E3  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
 31630  0081CC  0060  F1E7  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
 31631  0081D2  0100               	movlb	0	; force () banked
 31632  0081D4  50DF               	movf	223,w,c
 31633  0081D6  0B0F               	andlw	-241
 31634  0081D8  0930               	iorlw	48
 31635  0081DA  6EDF               	movwf	223,c
 31636                           
 31637                           ; BSR set to: 0
 31638                           ;../nwk/nwk_src/nwkRoute.c: 129:   entry->rank = 128;
 31639  0081DC  0100               	movlb	0	; force () banked
 31640  0081DE  EE20 F005          	lfsr	2,5
 31641  0081E2  5178               	movf	NWK_RouteNewEntry@entry& (0+255),w,b
 31642  0081E4  26D9               	addwf	fsr2l,f,c
 31643  0081E6  5179               	movf	(NWK_RouteNewEntry@entry+1)& (0+255),w,b
 31644  0081E8  22DA               	addwfc	fsr2h,f,c
 31645  0081EA  0E80               	movlw	128
 31646  0081EC  6EDF               	movwf	indf2,c
 31647                           
 31648                           ; BSR set to: 0
 31649                           ;../nwk/nwk_src/nwkRoute.c: 131:   return entry;
 31650  0081EE  C078  F071         	movff	NWK_RouteNewEntry@entry,?_NWK_RouteNewEntry
 31651  0081F2  C079  F072         	movff	NWK_RouteNewEntry@entry+1,?_NWK_RouteNewEntry+1
 31652                           
 31653                           ; BSR set to: 0
 31654  0081F6  0012               	return		;funcret
 31655  0081F8                     __end_of_NWK_RouteNewEntry:
 31656                           	callstack 0
 31657                           
 31658 ;; *************** function _nwkRxHandleIndication *****************
 31659 ;; Defined at:
 31660 ;;		line 453 in file "../nwk/nwk_src/nwkRx.c"
 31661 ;; Parameters:    Size  Location     Type
 31662 ;;  frame           2  104[BANK0 ] PTR struct NwkFrame_t
 31663 ;;		 -> nwkFrameFrames(690), NULL(0), 
 31664 ;; Auto vars:     Size  Location     Type
 31665 ;;  ack             1  108[BANK0 ] _Bool 
 31666 ;; Return value:  Size  Location     Type
 31667 ;;                  1    wreg      void 
 31668 ;; Registers used:
 31669 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31670 ;; Tracked objects:
 31671 ;;		On entry : 0/0
 31672 ;;		On exit  : 3F/0
 31673 ;;		Unchanged: 0/0
 31674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31675 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31676 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31677 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31678 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31679 ;;Total ram usage:        5 bytes
 31680 ;; Hardware stack levels used:    1
 31681 ;; Hardware stack levels required when called:   18
 31682 ;; This function calls:
 31683 ;;		_nwkRxIndicateFrame
 31684 ;;		_nwkRxSendAck
 31685 ;; This function is called by:
 31686 ;;		_nwkRxTaskHandler
 31687 ;; This function uses a non-reentrant model
 31688 ;;
 31689                           
 31690                           	psect	text168
 31691  0087CA                     __ptext168:
 31692                           	callstack 0
 31693  0087CA                     _nwkRxHandleIndication:
 31694                           	callstack 9
 31695                           
 31696                           ;../nwk/nwk_src/nwkRx.c: 453: static void nwkRxHandleIndication(NwkFrame_t *frame);../nw
      +                          k/nwk_src/nwkRx.c: 454: {;../nwk/nwk_src/nwkRx.c: 455:   _Bool ack;;../nwk/nwk_src/nwkRx
      +                          .c: 457:   nwkRxAckControl = 0;
 31697                           
 31698                           ; BSR set to: 0
 31699                           ;incstack = 0
 31700  0087CA  0E00               	movlw	0
 31701  0087CC  0102               	movlb	2	; force () banked
 31702  0087CE  6F54               	movwf	_nwkRxAckControl& (0+255),b
 31703                           
 31704                           ; BSR set to: 2
 31705                           ;../nwk/nwk_src/nwkRx.c: 458:   ack = nwkRxIndicateFrame(frame);
 31706  0087D0  C0C8  F0C2         	movff	nwkRxHandleIndication@frame,nwkRxIndicateFrame@frame
 31707  0087D4  C0C9  F0C3         	movff	nwkRxHandleIndication@frame+1,nwkRxIndicateFrame@frame+1
 31708  0087D8  EC0B  F021         	call	_nwkRxIndicateFrame	;wreg free
 31709  0087DC  0100               	movlb	0	; force () banked
 31710  0087DE  6FCC               	movwf	nwkRxHandleIndication@ack& (0+255),b
 31711                           
 31712                           ; BSR set to: 0
 31713                           ;../nwk/nwk_src/nwkRx.c: 460:   if (0 == frame->header.nwkFcf.ackRequest)
 31714  0087E0  0100               	movlb	0	; force () banked
 31715  0087E2  EE20 F00B          	lfsr	2,11
 31716  0087E6  51C8               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 31717  0087E8  26D9               	addwf	fsr2l,f,c
 31718  0087EA  51C9               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 31719  0087EC  22DA               	addwfc	fsr2h,f,c
 31720  0087EE  B0DF               	btfsc	indf2,0,c
 31721  0087F0  D003               	goto	l19026
 31722                           
 31723                           ; BSR set to: 0
 31724                           ;../nwk/nwk_src/nwkRx.c: 461:     ack = 0;
 31725  0087F2  0E00               	movlw	0
 31726  0087F4  0100               	movlb	0	; force () banked
 31727  0087F6  6FCC               	movwf	nwkRxHandleIndication@ack& (0+255),b
 31728  0087F8                     l19026:
 31729                           
 31730                           ; BSR set to: 0
 31731                           ;../nwk/nwk_src/nwkRx.c: 463:   if (0xffff == frame->header.macDstAddr &&
 31732  0087F8  0100               	movlb	0	; force () banked
 31733  0087FA  EE20 F007          	lfsr	2,7
 31734  0087FE  51C8               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 31735  008800  26D9               	addwf	fsr2l,f,c
 31736  008802  51C9               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 31737  008804  22DA               	addwfc	fsr2h,f,c
 31738  008806  28DE               	incf	postinc2,w,c
 31739  008808  E11E               	bnz	l19034
 31740  00880A  28DE               	incf	postinc2,w,c
 31741  00880C  A4D8               	btfss	status,2,c
 31742  00880E  D01B               	goto	l19034
 31743                           
 31744                           ; BSR set to: 0
 31745  008810  0100               	movlb	0	; force () banked
 31746  008812  EE20 F00F          	lfsr	2,15
 31747  008816  51C8               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 31748  008818  26D9               	addwf	fsr2l,f,c
 31749  00881A  51C9               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 31750  00881C  22DA               	addwfc	fsr2h,f,c
 31751  00881E  0102               	movlb	2	; force () banked
 31752  008820  5100               	movf	_nwkIb& (0+255),w,b
 31753  008822  18DE               	xorwf	postinc2,w,c
 31754  008824  E110               	bnz	l19034
 31755  008826  5101               	movf	(_nwkIb+1)& (0+255),w,b
 31756  008828  18DE               	xorwf	postinc2,w,c
 31757  00882A  A4D8               	btfss	status,2,c
 31758  00882C  D00C               	goto	l19034
 31759                           
 31760                           ; BSR set to: 2
 31761  00882E  0100               	movlb	0	; force () banked
 31762  008830  EE20 F00B          	lfsr	2,11
 31763  008834  51C8               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 31764  008836  26D9               	addwf	fsr2l,f,c
 31765  008838  51C9               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 31766  00883A  22DA               	addwfc	fsr2h,f,c
 31767  00883C  B6DF               	btfsc	indf2,3,c
 31768  00883E  D003               	goto	l19034
 31769                           
 31770                           ; BSR set to: 0
 31771                           ;../nwk/nwk_src/nwkRx.c: 466:     ack = 1;
 31772  008840  0E01               	movlw	1
 31773  008842  0100               	movlb	0	; force () banked
 31774  008844  6FCC               	movwf	nwkRxHandleIndication@ack& (0+255),b
 31775  008846                     l19034:
 31776                           
 31777                           ;../nwk/nwk_src/nwkRx.c: 468:   if (0xffff == frame->header.macDstPanId)
 31778  008846  0100               	movlb	0	; force () banked
 31779  008848  EE20 F005          	lfsr	2,5
 31780  00884C  51C8               	movf	nwkRxHandleIndication@frame& (0+255),w,b
 31781  00884E  26D9               	addwf	fsr2l,f,c
 31782  008850  51C9               	movf	(nwkRxHandleIndication@frame+1)& (0+255),w,b
 31783  008852  22DA               	addwfc	fsr2h,f,c
 31784  008854  28DE               	incf	postinc2,w,c
 31785  008856  E106               	bnz	l19038
 31786  008858  28DE               	incf	postinc2,w,c
 31787  00885A  A4D8               	btfss	status,2,c
 31788  00885C  D003               	goto	l19038
 31789                           
 31790                           ; BSR set to: 0
 31791                           ;../nwk/nwk_src/nwkRx.c: 469:     ack = 0;
 31792  00885E  0E00               	movlw	0
 31793  008860  0100               	movlb	0	; force () banked
 31794  008862  6FCC               	movwf	nwkRxHandleIndication@ack& (0+255),b
 31795  008864                     l19038:
 31796                           
 31797                           ; BSR set to: 0
 31798                           ;../nwk/nwk_src/nwkRx.c: 471:   if (0xffff == nwkIb.addr)
 31799  008864  0102               	movlb	2	; force () banked
 31800  008866  2900               	incf	_nwkIb& (0+255),w,b
 31801  008868  E106               	bnz	l3098
 31802  00886A  2901               	incf	(_nwkIb+1)& (0+255),w,b
 31803  00886C  A4D8               	btfss	status,2,c
 31804  00886E  D003               	goto	l3098
 31805                           
 31806                           ; BSR set to: 2
 31807                           ;../nwk/nwk_src/nwkRx.c: 472:     ack = 0;
 31808  008870  0E00               	movlw	0
 31809  008872  0100               	movlb	0	; force () banked
 31810  008874  6FCC               	movwf	nwkRxHandleIndication@ack& (0+255),b
 31811  008876                     l3098:
 31812                           
 31813                           ;../nwk/nwk_src/nwkRx.c: 474:   if (ack)
 31814  008876  0100               	movlb	0	; force () banked
 31815  008878  51CC               	movf	nwkRxHandleIndication@ack& (0+255),w,b
 31816  00887A  B4D8               	btfsc	status,2,c
 31817  00887C  D006               	goto	l19044
 31818                           
 31819                           ; BSR set to: 0
 31820                           ;../nwk/nwk_src/nwkRx.c: 475:     nwkRxSendAck(frame);
 31821  00887E  C0C8  F088         	movff	nwkRxHandleIndication@frame,nwkRxSendAck@frame
 31822  008882  C0C9  F089         	movff	nwkRxHandleIndication@frame+1,nwkRxSendAck@frame+1
 31823  008886  EC22  F038         	call	_nwkRxSendAck	;wreg free
 31824  00888A                     l19044:
 31825                           
 31826                           ; BSR set to: 0
 31827                           ;../nwk/nwk_src/nwkRx.c: 477:   frame->state = NWK_RX_STATE_FINISH;
 31828  00888A  0060  F323  FFD9   	movff	nwkRxHandleIndication@frame,fsr2l
 31829  008890  0060  F327  FFDA   	movff	nwkRxHandleIndication@frame+1,fsr2h
 31830  008896  0E24               	movlw	36
 31831  008898  6EDF               	movwf	indf2,c
 31832                           
 31833                           ; BSR set to: 0
 31834  00889A  0012               	return		;funcret
 31835  00889C                     __end_of_nwkRxHandleIndication:
 31836                           	callstack 0
 31837                           
 31838 ;; *************** function _nwkRxSendAck *****************
 31839 ;; Defined at:
 31840 ;;		line 136 in file "../nwk/nwk_src/nwkRx.c"
 31841 ;; Parameters:    Size  Location     Type
 31842 ;;  frame           2   40[BANK0 ] PTR struct NwkFrame_t
 31843 ;;		 -> nwkFrameFrames(690), NULL(0), 
 31844 ;; Auto vars:     Size  Location     Type
 31845 ;;  ack             2   44[BANK0 ] PTR struct NwkFrame_t
 31846 ;;		 -> nwkFrameFrames(690), NULL(0), 
 31847 ;;  command         2   42[BANK0 ] PTR struct NwkCommandAck
 31848 ;;		 -> nwkFrameFrames..(128), nwkFrameFrames(690), 
 31849 ;; Return value:  Size  Location     Type
 31850 ;;                  1    wreg      void 
 31851 ;; Registers used:
 31852 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31853 ;; Tracked objects:
 31854 ;;		On entry : 3F/0
 31855 ;;		On exit  : 3F/0
 31856 ;;		Unchanged: 0/0
 31857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31858 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31859 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31861 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31862 ;;Total ram usage:        6 bytes
 31863 ;; Hardware stack levels used:    1
 31864 ;; Hardware stack levels required when called:   15
 31865 ;; This function calls:
 31866 ;;		_nwkFrameAlloc
 31867 ;;		_nwkFrameCommandInit
 31868 ;;		_nwkTxFrame
 31869 ;; This function is called by:
 31870 ;;		_nwkRxHandleIndication
 31871 ;; This function uses a non-reentrant model
 31872 ;;
 31873                           
 31874                           	psect	text169
 31875  007044                     __ptext169:
 31876                           	callstack 0
 31877  007044                     _nwkRxSendAck:
 31878                           	callstack 11
 31879                           
 31880                           ;../nwk/nwk_src/nwkRx.c: 136: static void nwkRxSendAck(NwkFrame_t *frame);../nwk/nwk_src
      +                          /nwkRx.c: 137: {;../nwk/nwk_src/nwkRx.c: 138:   NwkFrame_t *ack;;../nwk/nwk_src/nwkRx.c:
      +                           139:   NwkCommandAck_t *command;;../nwk/nwk_src/nwkRx.c: 141:   if ((0) == (ack = nwkFr
      +                          ameAlloc()))
 31881                           
 31882                           ; BSR set to: 0
 31883                           ;incstack = 0
 31884  007044  EC12  F043         	call	_nwkFrameAlloc	;wreg free
 31885  007048  C079  F08C         	movff	?_nwkFrameAlloc,nwkRxSendAck@ack
 31886  00704C  C07A  F08D         	movff	?_nwkFrameAlloc+1,nwkRxSendAck@ack+1
 31887  007050  0100               	movlb	0	; force () banked
 31888  007052  518C               	movf	nwkRxSendAck@ack& (0+255),w,b
 31889  007054  118D               	iorwf	(nwkRxSendAck@ack+1)& (0+255),w,b
 31890  007056  B4D8               	btfsc	status,2,c
 31891  007058  0012               	return	
 31892                           
 31893                           ; BSR set to: 0
 31894                           ;../nwk/nwk_src/nwkRx.c: 144:   nwkFrameCommandInit(ack);
 31895  00705A  C08C  F071         	movff	nwkRxSendAck@ack,nwkFrameCommandInit@frame
 31896  00705E  C08D  F072         	movff	nwkRxSendAck@ack+1,nwkFrameCommandInit@frame+1
 31897  007062  EC28  F057         	call	_nwkFrameCommandInit	;wreg free
 31898                           
 31899                           ; BSR set to: 0
 31900                           ;../nwk/nwk_src/nwkRx.c: 146:   ack->size += sizeof(NwkCommandAck_t);
 31901  007066  0100               	movlb	0	; force () banked
 31902  007068  EE20 F001          	lfsr	2,1
 31903  00706C  518C               	movf	nwkRxSendAck@ack& (0+255),w,b
 31904  00706E  26D9               	addwf	fsr2l,f,c
 31905  007070  518D               	movf	(nwkRxSendAck@ack+1)& (0+255),w,b
 31906  007072  22DA               	addwfc	fsr2h,f,c
 31907  007074  0E03               	movlw	3
 31908  007076  26DF               	addwf	indf2,f,c
 31909                           
 31910                           ; BSR set to: 0
 31911                           ;../nwk/nwk_src/nwkRx.c: 147:   ack->tx.confirm = (0);
 31912  007078  0100               	movlb	0	; force () banked
 31913  00707A  EE20 F088          	lfsr	2,136
 31914  00707E  518C               	movf	nwkRxSendAck@ack& (0+255),w,b
 31915  007080  26D9               	addwf	fsr2l,f,c
 31916  007082  518D               	movf	(nwkRxSendAck@ack+1)& (0+255),w,b
 31917  007084  22DA               	addwfc	fsr2h,f,c
 31918  007086  0E00               	movlw	0
 31919  007088  6EDE               	movwf	postinc2,c
 31920  00708A  0E00               	movlw	0
 31921  00708C  6EDD               	movwf	postdec2,c
 31922                           
 31923                           ; BSR set to: 0
 31924                           ;../nwk/nwk_src/nwkRx.c: 149:   ack->header.nwkFcf.security = frame->header.nwkFcf.secur
      +                          ity;
 31925  00708E  0100               	movlb	0	; force () banked
 31926  007090  EE20 F00B          	lfsr	2,11
 31927  007094  5188               	movf	nwkRxSendAck@frame& (0+255),w,b
 31928  007096  26D9               	addwf	fsr2l,f,c
 31929  007098  5189               	movf	(nwkRxSendAck@frame+1)& (0+255),w,b
 31930  00709A  22DA               	addwfc	fsr2h,f,c
 31931  00709C  0100               	movlb	0	; force () banked
 31932  00709E  EE00 F00B          	lfsr	0,11
 31933  0070A2  518C               	movf	nwkRxSendAck@ack& (0+255),w,b
 31934  0070A4  26E9               	addwf	fsr0l,f,c
 31935  0070A6  518D               	movf	(nwkRxSendAck@ack+1)& (0+255),w,b
 31936  0070A8  22EA               	addwfc	fsr0h,f,c
 31937  0070AA  0100               	movlb	0	; force () banked
 31938  0070AC  B2DF               	btfsc	indf2,1,c
 31939  0070AE  D003               	bra	u16205
 31940  0070B0  0100               	movlb	0	; force () banked
 31941  0070B2  92EF               	bcf	indf0,1,c
 31942  0070B4  D002               	bra	u16206
 31943  0070B6                     u16205:
 31944  0070B6  0100               	movlb	0	; force () banked
 31945  0070B8  82EF               	bsf	indf0,1,c
 31946  0070BA                     u16206:
 31947                           
 31948                           ; BSR set to: 0
 31949                           ;../nwk/nwk_src/nwkRx.c: 150:   ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 31950  0070BA  0100               	movlb	0	; force () banked
 31951  0070BC  EE20 F00D          	lfsr	2,13
 31952  0070C0  5188               	movf	nwkRxSendAck@frame& (0+255),w,b
 31953  0070C2  26D9               	addwf	fsr2l,f,c
 31954  0070C4  5189               	movf	(nwkRxSendAck@frame+1)& (0+255),w,b
 31955  0070C6  22DA               	addwfc	fsr2h,f,c
 31956  0070C8  0100               	movlb	0	; force () banked
 31957  0070CA  EE00 F00F          	lfsr	0,15
 31958  0070CE  518C               	movf	nwkRxSendAck@ack& (0+255),w,b
 31959  0070D0  26E9               	addwf	fsr0l,f,c
 31960  0070D2  518D               	movf	(nwkRxSendAck@ack+1)& (0+255),w,b
 31961  0070D4  22EA               	addwfc	fsr0h,f,c
 31962  0070D6  006F FF7B FFEE     	movff	postinc2,postinc0
 31963  0070DC  006F FF77 FFED     	movff	postdec2,postdec0
 31964                           
 31965                           ; BSR set to: 0
 31966                           ;../nwk/nwk_src/nwkRx.c: 152:   command = (NwkCommandAck_t *)ack->payload;
 31967  0070E2  0100               	movlb	0	; force () banked
 31968  0070E4  EE20 F082          	lfsr	2,130
 31969  0070E8  518C               	movf	nwkRxSendAck@ack& (0+255),w,b
 31970  0070EA  26D9               	addwf	fsr2l,f,c
 31971  0070EC  518D               	movf	(nwkRxSendAck@ack+1)& (0+255),w,b
 31972  0070EE  22DA               	addwfc	fsr2h,f,c
 31973  0070F0  006F FF78  F08A    	movff	postinc2,nwkRxSendAck@command
 31974  0070F6  006F FF74  F08B    	movff	postdec2,nwkRxSendAck@command+1
 31975                           
 31976                           ; BSR set to: 0
 31977                           ;../nwk/nwk_src/nwkRx.c: 153:   command->id = NWK_COMMAND_ACK;
 31978  0070FC  0060  F22B  FFD9   	movff	nwkRxSendAck@command,fsr2l
 31979  007102  0060  F22F  FFDA   	movff	nwkRxSendAck@command+1,fsr2h
 31980  007108  0E00               	movlw	0
 31981  00710A  6EDF               	movwf	indf2,c
 31982                           
 31983                           ; BSR set to: 0
 31984                           ;../nwk/nwk_src/nwkRx.c: 154:   command->control = nwkRxAckControl;
 31985  00710C  0100               	movlb	0	; force () banked
 31986  00710E  EE20 F002          	lfsr	2,2
 31987  007112  518A               	movf	nwkRxSendAck@command& (0+255),w,b
 31988  007114  26D9               	addwf	fsr2l,f,c
 31989  007116  518B               	movf	(nwkRxSendAck@command+1)& (0+255),w,b
 31990  007118  22DA               	addwfc	fsr2h,f,c
 31991  00711A  0060  F953  FFDF   	movff	_nwkRxAckControl,indf2
 31992                           
 31993                           ; BSR set to: 0
 31994                           ;../nwk/nwk_src/nwkRx.c: 155:   command->seq = frame->header.nwkSeq;
 31995  007120  0100               	movlb	0	; force () banked
 31996  007122  EE20 F00C          	lfsr	2,12
 31997  007126  5188               	movf	nwkRxSendAck@frame& (0+255),w,b
 31998  007128  26D9               	addwf	fsr2l,f,c
 31999  00712A  5189               	movf	(nwkRxSendAck@frame+1)& (0+255),w,b
 32000  00712C  22DA               	addwfc	fsr2h,f,c
 32001  00712E  0100               	movlb	0	; force () banked
 32002  007130  EE00 F001          	lfsr	0,1
 32003  007134  518A               	movf	nwkRxSendAck@command& (0+255),w,b
 32004  007136  26E9               	addwf	fsr0l,f,c
 32005  007138  518B               	movf	(nwkRxSendAck@command+1)& (0+255),w,b
 32006  00713A  22EA               	addwfc	fsr0h,f,c
 32007  00713C  006F FF7F FFEF     	movff	indf2,indf0
 32008                           
 32009                           ; BSR set to: 0
 32010                           ;../nwk/nwk_src/nwkRx.c: 157:   nwkTxFrame(ack);
 32011  007142  C08C  F082         	movff	nwkRxSendAck@ack,nwkTxFrame@frame
 32012  007146  C08D  F083         	movff	nwkRxSendAck@ack+1,nwkTxFrame@frame+1
 32013  00714A  EC1E  F028         	call	_nwkTxFrame	;wreg free
 32014                           
 32015                           ; BSR set to: 0
 32016  00714E  0012               	return		;funcret
 32017  007150                     __end_of_nwkRxSendAck:
 32018                           	callstack 0
 32019                           
 32020 ;; *************** function _nwkRxIndicateFrame *****************
 32021 ;; Defined at:
 32022 ;;		line 423 in file "../nwk/nwk_src/nwkRx.c"
 32023 ;; Parameters:    Size  Location     Type
 32024 ;;  frame           2   98[BANK0 ] PTR struct NwkFrame_t
 32025 ;;		 -> nwkFrameFrames(690), NULL(0), 
 32026 ;; Auto vars:     Size  Location     Type
 32027 ;;  ind            12    8[BANK3 ] struct NWK_DataInd_t
 32028 ;;  header          2    6[BANK3 ] PTR struct NwkFrameHeade
 32029 ;;		 -> nwkFrameFrames..(128), nwkFrameFrames(690), NULL(0), 
 32030 ;; Return value:  Size  Location     Type
 32031 ;;                  1    wreg      _Bool 
 32032 ;; Registers used:
 32033 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32034 ;; Tracked objects:
 32035 ;;		On entry : 3F/2
 32036 ;;		On exit  : 0/0
 32037 ;;		Unchanged: 0/0
 32038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32039 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32040 ;;      Locals:         0       0       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32041 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32042 ;;      Totals:         0       6       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32043 ;;Total ram usage:       26 bytes
 32044 ;; Hardware stack levels used:    1
 32045 ;; Hardware stack levels required when called:   17
 32046 ;; This function calls:
 32047 ;;		Absolute function
 32048 ;;		_appDataInd
 32049 ;;		_appManagementEp
 32050 ;;		_nwkFramePayloadSize
 32051 ;;		_nwkRxServiceDataInd
 32052 ;; This function is called by:
 32053 ;;		_nwkRxHandleIndication
 32054 ;; This function uses a non-reentrant model
 32055 ;;
 32056                           
 32057                           	psect	text170
 32058  004216                     __ptext170:
 32059                           	callstack 0
 32060  004216                     _nwkRxIndicateFrame:
 32061                           	callstack 9
 32062                           
 32063                           ;../nwk/nwk_src/nwkRx.c: 423: static _Bool nwkRxIndicateFrame(NwkFrame_t *frame);../nwk/
      +                          nwk_src/nwkRx.c: 424: {;../nwk/nwk_src/nwkRx.c: 425:   NwkFrameHeader_t *header = &frame
      +                          ->header;
 32064                           
 32065                           ; BSR set to: 0
 32066                           ;incstack = 0
 32067  004216  0E02               	movlw	2
 32068  004218  0100               	movlb	0	; force () banked
 32069  00421A  25C2               	addwf	nwkRxIndicateFrame@frame& (0+255),w,b
 32070  00421C  0103               	movlb	3	; force () banked
 32071  00421E  6FEB               	movwf	nwkRxIndicateFrame@header& (0+255),b
 32072  004220  0E00               	movlw	0
 32073  004222  0100               	movlb	0	; force () banked
 32074  004224  21C3               	addwfc	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 32075  004226  0103               	movlb	3	; force () banked
 32076  004228  6FEC               	movwf	(nwkRxIndicateFrame@header+1)& (0+255),b
 32077                           
 32078                           ; BSR set to: 3
 32079                           ;../nwk/nwk_src/nwkRx.c: 426:   NWK_DataInd_t ind;;../nwk/nwk_src/nwkRx.c: 428:   if ((0
      +                          ) == nwkIb.endpoint[header->nwkDstEndpoint])
 32080  00422A  0103               	movlb	3	; force () banked
 32081  00422C  EE20 F00F          	lfsr	2,15
 32082  004230  51EB               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 32083  004232  26D9               	addwf	fsr2l,f,c
 32084  004234  51EC               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 32085  004236  22DA               	addwfc	fsr2h,f,c
 32086  004238  38DF               	swapf	223,w,c
 32087  00423A  0B0F               	andlw	15
 32088  00423C  0100               	movlb	0	; force () banked
 32089  00423E  6FC4               	movwf	??_nwkRxIndicateFrame& (0+255),b
 32090  004240  51C4               	movf	??_nwkRxIndicateFrame& (0+255),w,b
 32091  004242  0D02               	mullw	2
 32092  004244  0E06               	movlw	low (_nwkIb+6)
 32093  004246  24F3               	addwf	243,w,c
 32094  004248  6ED9               	movwf	fsr2l,c
 32095  00424A  0E02               	movlw	high (_nwkIb+6)
 32096  00424C  20F4               	addwfc	prodh,w,c
 32097  00424E  6EDA               	movwf	fsr2h,c
 32098  004250  50DE               	movf	postinc2,w,c
 32099  004252  10DE               	iorwf	postinc2,w,c
 32100  004254  A4D8               	btfss	status,2,c
 32101  004256  D002               	goto	l18638
 32102                           
 32103                           ; BSR set to: 0
 32104                           ;../nwk/nwk_src/nwkRx.c: 429:     return 0;
 32105  004258  0E00               	movlw	0
 32106  00425A  0012               	return	
 32107  00425C                     l18638:
 32108                           
 32109                           ; BSR set to: 0
 32110                           ;../nwk/nwk_src/nwkRx.c: 431:   ind.srcAddr = header->nwkSrcAddr;
 32111  00425C  0103               	movlb	3	; force () banked
 32112  00425E  EE20 F00B          	lfsr	2,11
 32113  004262  51EB               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 32114  004264  26D9               	addwf	fsr2l,f,c
 32115  004266  51EC               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 32116  004268  22DA               	addwfc	fsr2h,f,c
 32117  00426A  006F FF78  F3ED    	movff	postinc2,nwkRxIndicateFrame@ind
 32118  004270  006F FF74  F3EE    	movff	postdec2,nwkRxIndicateFrame@ind+1
 32119                           
 32120                           ;../nwk/nwk_src/nwkRx.c: 432:   ind.dstAddr = header->nwkDstAddr;
 32121  004276  EE20 F00D          	lfsr	2,13
 32122  00427A  51EB               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 32123  00427C  26D9               	addwf	fsr2l,f,c
 32124  00427E  51EC               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 32125  004280  22DA               	addwfc	fsr2h,f,c
 32126  004282  006F FF78  F3EF    	movff	postinc2,nwkRxIndicateFrame@ind+2
 32127  004288  006F FF74  F3F0    	movff	postdec2,nwkRxIndicateFrame@ind+3
 32128                           
 32129                           ;../nwk/nwk_src/nwkRx.c: 433:   ind.srcEndpoint = header->nwkSrcEndpoint;
 32130  00428E  EE20 F00F          	lfsr	2,15
 32131  004292  51EB               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 32132  004294  26D9               	addwf	fsr2l,f,c
 32133  004296  51EC               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 32134  004298  22DA               	addwfc	fsr2h,f,c
 32135  00429A  50DF               	movf	223,w,c
 32136  00429C  0B0F               	andlw	15
 32137  00429E  0103               	movlb	3	; force () banked
 32138  0042A0  6FF1               	movwf	(nwkRxIndicateFrame@ind+4)& (0+255),b
 32139                           
 32140                           ;../nwk/nwk_src/nwkRx.c: 434:   ind.dstEndpoint = header->nwkDstEndpoint;
 32141  0042A2  0103               	movlb	3	; force () banked
 32142  0042A4  EE20 F00F          	lfsr	2,15
 32143  0042A8  51EB               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 32144  0042AA  26D9               	addwf	fsr2l,f,c
 32145  0042AC  51EC               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 32146  0042AE  22DA               	addwfc	fsr2h,f,c
 32147  0042B0  38DF               	swapf	223,w,c
 32148  0042B2  0B0F               	andlw	15
 32149  0042B4  0103               	movlb	3	; force () banked
 32150  0042B6  6FF2               	movwf	(nwkRxIndicateFrame@ind+5)& (0+255),b
 32151                           
 32152                           ;../nwk/nwk_src/nwkRx.c: 435:   ind.data = frame->payload;
 32153  0042B8  0100               	movlb	0	; force () banked
 32154  0042BA  EE20 F082          	lfsr	2,130
 32155  0042BE  51C2               	movf	nwkRxIndicateFrame@frame& (0+255),w,b
 32156  0042C0  26D9               	addwf	fsr2l,f,c
 32157  0042C2  51C3               	movf	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 32158  0042C4  22DA               	addwfc	fsr2h,f,c
 32159  0042C6  006F FF78  F3F4    	movff	postinc2,nwkRxIndicateFrame@ind+7
 32160  0042CC  006F FF74  F3F5    	movff	postdec2,nwkRxIndicateFrame@ind+8
 32161                           
 32162                           ; BSR set to: 0
 32163                           ;../nwk/nwk_src/nwkRx.c: 436:   ind.size = nwkFramePayloadSize(frame);
 32164  0042D2  C0C2  F071         	movff	nwkRxIndicateFrame@frame,nwkFramePayloadSize@frame
 32165  0042D6  C0C3  F072         	movff	nwkRxIndicateFrame@frame+1,nwkFramePayloadSize@frame+1
 32166  0042DA  ECDE  F059         	call	_nwkFramePayloadSize	;wreg free
 32167  0042DE  0103               	movlb	3	; force () banked
 32168  0042E0  6FF6               	movwf	(nwkRxIndicateFrame@ind+9)& (0+255),b
 32169                           
 32170                           ; BSR set to: 3
 32171                           ;../nwk/nwk_src/nwkRx.c: 437:   ind.lqi = frame->rx.lqi;
 32172  0042E2  0100               	movlb	0	; force () banked
 32173  0042E4  EE20 F084          	lfsr	2,132
 32174  0042E8  51C2               	movf	nwkRxIndicateFrame@frame& (0+255),w,b
 32175  0042EA  26D9               	addwf	fsr2l,f,c
 32176  0042EC  51C3               	movf	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 32177  0042EE  22DA               	addwfc	fsr2h,f,c
 32178  0042F0  50DF               	movf	indf2,w,c
 32179  0042F2  0103               	movlb	3	; force () banked
 32180  0042F4  6FF7               	movwf	(nwkRxIndicateFrame@ind+10)& (0+255),b
 32181                           
 32182                           ; BSR set to: 3
 32183                           ;../nwk/nwk_src/nwkRx.c: 438:   ind.rssi = frame->rx.rssi;
 32184  0042F6  0100               	movlb	0	; force () banked
 32185  0042F8  EE20 F085          	lfsr	2,133
 32186  0042FC  51C2               	movf	nwkRxIndicateFrame@frame& (0+255),w,b
 32187  0042FE  26D9               	addwf	fsr2l,f,c
 32188  004300  51C3               	movf	(nwkRxIndicateFrame@frame+1)& (0+255),w,b
 32189  004302  22DA               	addwfc	fsr2h,f,c
 32190  004304  50DF               	movf	indf2,w,c
 32191  004306  0103               	movlb	3	; force () banked
 32192  004308  6FF8               	movwf	(nwkRxIndicateFrame@ind+11)& (0+255),b
 32193                           
 32194                           ; BSR set to: 3
 32195                           ;../nwk/nwk_src/nwkRx.c: 440:   ind.options = (header->nwkFcf.ackRequest) ? NWK_IND_OPT_
      +                          ACK_REQUESTED : 0;
 32196  00430A  0103               	movlb	3	; force () banked
 32197  00430C  EE20 F009          	lfsr	2,9
 32198  004310  51EB               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 32199  004312  26D9               	addwf	fsr2l,f,c
 32200  004314  51EC               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 32201  004316  22DA               	addwfc	fsr2h,f,c
 32202  004318  0E00               	movlw	0
 32203  00431A  B0DF               	btfsc	indf2,0,c
 32204  00431C  0E01               	movlw	1
 32205  00431E  0103               	movlb	3	; force () banked
 32206  004320  6FF3               	movwf	(nwkRxIndicateFrame@ind+6)& (0+255),b
 32207                           
 32208                           ; BSR set to: 3
 32209                           ;../nwk/nwk_src/nwkRx.c: 441:   ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_S
      +                          ECURED : 0;
 32210  004322  0103               	movlb	3	; force () banked
 32211  004324  EE20 F009          	lfsr	2,9
 32212  004328  51EB               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 32213  00432A  26D9               	addwf	fsr2l,f,c
 32214  00432C  51EC               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 32215  00432E  22DA               	addwfc	fsr2h,f,c
 32216  004330  B2DF               	btfsc	indf2,1,c
 32217  004332  D002               	goto	l18652
 32218                           
 32219                           ; BSR set to: 3
 32220  004334  0E00               	movlw	0
 32221  004336  D001               	goto	L39
 32222  004338                     l18652:
 32223                           
 32224                           ; BSR set to: 3
 32225  004338  0E02               	movlw	2
 32226  00433A                     L39:
 32227  00433A  0103               	movlb	3	; force () banked
 32228  00433C  6FE5               	movwf	_nwkRxIndicateFrame$7032& (0+255),b
 32229                           
 32230                           ; BSR set to: 3
 32231  00433E  0103               	movlb	3	; force () banked
 32232  004340  51E5               	movf	_nwkRxIndicateFrame$7032& (0+255),w,b
 32233  004342  0103               	movlb	3	; force () banked
 32234  004344  13F3               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 32235                           
 32236                           ; BSR set to: 3
 32237                           ;../nwk/nwk_src/nwkRx.c: 442:   ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_
      +                          LINK_LOCAL : 0;
 32238  004346  0103               	movlb	3	; force () banked
 32239  004348  EE20 F009          	lfsr	2,9
 32240  00434C  51EB               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 32241  00434E  26D9               	addwf	fsr2l,f,c
 32242  004350  51EC               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 32243  004352  22DA               	addwfc	fsr2h,f,c
 32244  004354  B4DF               	btfsc	indf2,2,c
 32245  004356  D002               	goto	l18660
 32246                           
 32247                           ; BSR set to: 3
 32248  004358  0E00               	movlw	0
 32249  00435A  D001               	goto	L40
 32250  00435C                     l18660:
 32251                           
 32252                           ; BSR set to: 3
 32253  00435C  0E20               	movlw	32
 32254  00435E                     L40:
 32255  00435E  0103               	movlb	3	; force () banked
 32256  004360  6FE6               	movwf	_nwkRxIndicateFrame$7033& (0+255),b
 32257                           
 32258                           ; BSR set to: 3
 32259  004362  0103               	movlb	3	; force () banked
 32260  004364  51E6               	movf	_nwkRxIndicateFrame$7033& (0+255),w,b
 32261  004366  0103               	movlb	3	; force () banked
 32262  004368  13F3               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 32263                           
 32264                           ; BSR set to: 3
 32265                           ;../nwk/nwk_src/nwkRx.c: 443:   ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_
      +                          MULTICAST : 0;
 32266  00436A  0103               	movlb	3	; force () banked
 32267  00436C  EE20 F009          	lfsr	2,9
 32268  004370  51EB               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 32269  004372  26D9               	addwf	fsr2l,f,c
 32270  004374  51EC               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 32271  004376  22DA               	addwfc	fsr2h,f,c
 32272  004378  B6DF               	btfsc	indf2,3,c
 32273  00437A  D002               	goto	l18668
 32274                           
 32275                           ; BSR set to: 3
 32276  00437C  0E00               	movlw	0
 32277  00437E  D001               	goto	L41
 32278  004380                     l18668:
 32279                           
 32280                           ; BSR set to: 3
 32281  004380  0E40               	movlw	64
 32282  004382                     L41:
 32283  004382  0103               	movlb	3	; force () banked
 32284  004384  6FE7               	movwf	_nwkRxIndicateFrame$7034& (0+255),b
 32285                           
 32286                           ; BSR set to: 3
 32287  004386  0103               	movlb	3	; force () banked
 32288  004388  51E7               	movf	_nwkRxIndicateFrame$7034& (0+255),w,b
 32289  00438A  0103               	movlb	3	; force () banked
 32290  00438C  13F3               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 32291                           
 32292                           ; BSR set to: 3
 32293                           ;../nwk/nwk_src/nwkRx.c: 444:   ind.options |= (0xffff == header->nwkDstAddr) ? NWK_IND_
      +                          OPT_BROADCAST : 0;
 32294  00438E  0103               	movlb	3	; force () banked
 32295  004390  EE20 F00D          	lfsr	2,13
 32296  004394  51EB               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 32297  004396  26D9               	addwf	fsr2l,f,c
 32298  004398  51EC               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 32299  00439A  22DA               	addwfc	fsr2h,f,c
 32300  00439C  28DE               	incf	postinc2,w,c
 32301  00439E  E103               	bnz	u16380
 32302  0043A0  28DE               	incf	postinc2,w,c
 32303  0043A2  B4D8               	btfsc	status,2,c
 32304  0043A4  D002               	goto	l18676
 32305  0043A6                     u16380:
 32306                           
 32307                           ; BSR set to: 3
 32308  0043A6  0E00               	movlw	0
 32309  0043A8  D001               	goto	L42
 32310  0043AA                     l18676:
 32311                           
 32312                           ; BSR set to: 3
 32313  0043AA  0E04               	movlw	4
 32314  0043AC                     L42:
 32315  0043AC  0103               	movlb	3	; force () banked
 32316  0043AE  6FE8               	movwf	_nwkRxIndicateFrame$7035& (0+255),b
 32317                           
 32318                           ; BSR set to: 3
 32319  0043B0  0103               	movlb	3	; force () banked
 32320  0043B2  51E8               	movf	_nwkRxIndicateFrame$7035& (0+255),w,b
 32321  0043B4  0103               	movlb	3	; force () banked
 32322  0043B6  13F3               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 32323                           
 32324                           ; BSR set to: 3
 32325                           ;../nwk/nwk_src/nwkRx.c: 445:   ind.options |= (header->nwkSrcAddr == header->macSrcAddr
      +                          ) ? NWK_IND_OPT_LOCAL : 0;
 32326  0043B8  0103               	movlb	3	; force () banked
 32327  0043BA  EE20 F007          	lfsr	2,7
 32328  0043BE  51EB               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 32329  0043C0  26D9               	addwf	fsr2l,f,c
 32330  0043C2  51EC               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 32331  0043C4  22DA               	addwfc	fsr2h,f,c
 32332  0043C6  EE00 F00B          	lfsr	0,11
 32333  0043CA  51EB               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 32334  0043CC  26E9               	addwf	fsr0l,f,c
 32335  0043CE  51EC               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 32336  0043D0  22EA               	addwfc	fsr0h,f,c
 32337  0043D2  50DE               	movf	postinc2,w,c
 32338  0043D4  18EE               	xorwf	postinc0,w,c
 32339  0043D6  E104               	bnz	u16390
 32340  0043D8  50DE               	movf	postinc2,w,c
 32341  0043DA  18EE               	xorwf	postinc0,w,c
 32342  0043DC  B4D8               	btfsc	status,2,c
 32343  0043DE  D002               	goto	l18684
 32344  0043E0                     u16390:
 32345                           
 32346                           ; BSR set to: 3
 32347  0043E0  0E00               	movlw	0
 32348  0043E2  D001               	goto	L43
 32349  0043E4                     l18684:
 32350                           
 32351                           ; BSR set to: 3
 32352  0043E4  0E08               	movlw	8
 32353  0043E6                     L43:
 32354  0043E6  0103               	movlb	3	; force () banked
 32355  0043E8  6FE9               	movwf	_nwkRxIndicateFrame$7036& (0+255),b
 32356                           
 32357                           ; BSR set to: 3
 32358  0043EA  0103               	movlb	3	; force () banked
 32359  0043EC  51E9               	movf	_nwkRxIndicateFrame$7036& (0+255),w,b
 32360  0043EE  0103               	movlb	3	; force () banked
 32361  0043F0  13F3               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 32362                           
 32363                           ; BSR set to: 3
 32364                           ;../nwk/nwk_src/nwkRx.c: 446:   ind.options |= (0xffff == header->macDstPanId) ? NWK_IND
      +                          _OPT_BROADCAST_PAN_ID : 0;
 32365  0043F2  0103               	movlb	3	; force () banked
 32366  0043F4  EE20 F003          	lfsr	2,3
 32367  0043F8  51EB               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 32368  0043FA  26D9               	addwf	fsr2l,f,c
 32369  0043FC  51EC               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 32370  0043FE  22DA               	addwfc	fsr2h,f,c
 32371  004400  28DE               	incf	postinc2,w,c
 32372  004402  E103               	bnz	u16400
 32373  004404  28DE               	incf	postinc2,w,c
 32374  004406  B4D8               	btfsc	status,2,c
 32375  004408  D002               	goto	l18692
 32376  00440A                     u16400:
 32377                           
 32378                           ; BSR set to: 3
 32379  00440A  0E00               	movlw	0
 32380  00440C  D001               	goto	L44
 32381  00440E                     l18692:
 32382                           
 32383                           ; BSR set to: 3
 32384  00440E  0E10               	movlw	16
 32385  004410                     L44:
 32386  004410  0103               	movlb	3	; force () banked
 32387  004412  6FEA               	movwf	_nwkRxIndicateFrame$7037& (0+255),b
 32388                           
 32389                           ; BSR set to: 3
 32390  004414  0103               	movlb	3	; force () banked
 32391  004416  51EA               	movf	_nwkRxIndicateFrame$7037& (0+255),w,b
 32392  004418  0103               	movlb	3	; force () banked
 32393  00441A  13F3               	iorwf	(nwkRxIndicateFrame@ind+6)& (0+255),f,b
 32394                           
 32395                           ; BSR set to: 3
 32396                           ;../nwk/nwk_src/nwkRx.c: 448:   return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 32397  00441C  0EED               	movlw	low nwkRxIndicateFrame@ind
 32398  00441E  0100               	movlb	0	; force () banked
 32399  004420  6FBA               	movwf	nwkRxServiceDataInd@ind& (0+255),b
 32400  004422  0E03               	movlw	high nwkRxIndicateFrame@ind
 32401  004424  6FBB               	movwf	(nwkRxServiceDataInd@ind+1)& (0+255),b
 32402  004426  0103               	movlb	3	; force () banked
 32403  004428  EE20 F00F          	lfsr	2,15
 32404  00442C  51EB               	movf	nwkRxIndicateFrame@header& (0+255),w,b
 32405  00442E  26D9               	addwf	fsr2l,f,c
 32406  004430  51EC               	movf	(nwkRxIndicateFrame@header+1)& (0+255),w,b
 32407  004432  22DA               	addwfc	fsr2h,f,c
 32408  004434  38DF               	swapf	223,w,c
 32409  004436  0B0F               	andlw	15
 32410  004438  0100               	movlb	0	; force () banked
 32411  00443A  6FC4               	movwf	??_nwkRxIndicateFrame& (0+255),b
 32412  00443C  51C4               	movf	??_nwkRxIndicateFrame& (0+255),w,b
 32413  00443E  0D02               	mullw	2
 32414  004440  0E06               	movlw	low (_nwkIb+6)
 32415  004442  24F3               	addwf	243,w,c
 32416  004444  6ED9               	movwf	fsr2l,c
 32417  004446  0E02               	movlw	high (_nwkIb+6)
 32418  004448  20F4               	addwfc	prodh,w,c
 32419  00444A  6EDA               	movwf	fsr2h,c
 32420  00444C  006F FF78  F0C5    	movff	postinc2,??_nwkRxIndicateFrame+1
 32421  004452  006F FF74  F0C6    	movff	postdec2,??_nwkRxIndicateFrame+2
 32422  004458  D801               	call	u16418
 32423  00445A  0012               	return	
 32424  00445C                     u16418:
 32425  00445C  0005               	push	
 32426  00445E  6EFA               	movwf	pclath,c
 32427  004460  0100               	movlb	0	; force () banked
 32428  004462  51C5               	movf	(??_nwkRxIndicateFrame+1)& (0+255),w,b
 32429  004464  6EFD               	movwf	tosl,c
 32430  004466  51C6               	movf	(??_nwkRxIndicateFrame+2)& (0+255),w,b
 32431  004468  6EFE               	movwf	tosh,c
 32432  00446A  6AFF               	clrf	tosu,c
 32433  00446C  50FA               	movf	pclath,w,c
 32434  00446E  0012               	return		;indir
 32435  004470                     __end_of_nwkRxIndicateFrame:
 32436                           	callstack 0
 32437                           
 32438 ;; *************** function _appManagementEp *****************
 32439 ;; Defined at:
 32440 ;;		line 236 in file "../app/app_src/application.c"
 32441 ;; Parameters:    Size  Location     Type
 32442 ;;  ind             2   90[BANK0 ] PTR struct NWK_DataInd_t
 32443 ;;		 -> nwkRxIndicateFrame@ind(12), 
 32444 ;; Auto vars:     Size  Location     Type
 32445 ;;  ptr             2   94[BANK0 ] PTR unsigned char 
 32446 ;;		 -> nwkFrameFrames(690), NULL(0), 
 32447 ;;  dataptr         2   92[BANK0 ] PTR unsigned char 
 32448 ;;		 -> nwkFrameFrames(690), 
 32449 ;; Return value:  Size  Location     Type
 32450 ;;                  1    wreg      _Bool 
 32451 ;; Registers used:
 32452 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32453 ;; Tracked objects:
 32454 ;;		On entry : 3F/0
 32455 ;;		On exit  : 0/0
 32456 ;;		Unchanged: 0/0
 32457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32458 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32459 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32461 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32462 ;;Total ram usage:        6 bytes
 32463 ;; Hardware stack levels used:    1
 32464 ;; Hardware stack levels required when called:   16
 32465 ;; This function calls:
 32466 ;;		_app_aes_decrypt
 32467 ;;		_check_multicast_rx
 32468 ;;		_exract_sink_addr
 32469 ;;		_strstr
 32470 ;; This function is called by:
 32471 ;;		_bootLoadApplication
 32472 ;;		_nwkRxIndicateFrame
 32473 ;; This function uses a non-reentrant model
 32474 ;;
 32475                           
 32476                           	psect	text171
 32477  007F64                     __ptext171:
 32478                           	callstack 0
 32479  007F64                     _appManagementEp:
 32480                           	callstack 9
 32481                           
 32482                           ;../app/app_src/application.c: 238:     uint8_t* dataptr = ind->data;
 32483                           
 32484                           ;incstack = 0
 32485  007F64  0100               	movlb	0	; force () banked
 32486  007F66  EE20 F007          	lfsr	2,7
 32487  007F6A  51BA               	movf	appManagementEp@ind& (0+255),w,b
 32488  007F6C  26D9               	addwf	fsr2l,f,c
 32489  007F6E  51BB               	movf	(appManagementEp@ind+1)& (0+255),w,b
 32490  007F70  22DA               	addwfc	fsr2h,f,c
 32491  007F72  006F FF78  F0BC    	movff	postinc2,appManagementEp@dataptr
 32492  007F78  006F FF74  F0BD    	movff	postdec2,appManagementEp@dataptr+1
 32493                           
 32494                           ; BSR set to: 0
 32495                           ;../app/app_src/application.c: 239:     if(!check_multicast_rx(ind)){
 32496  007F7E  C0BA  F076         	movff	appManagementEp@ind,check_multicast_rx@ind
 32497  007F82  C0BB  F077         	movff	appManagementEp@ind+1,check_multicast_rx@ind+1
 32498  007F86  EC6B  F057         	call	_check_multicast_rx	;wreg free
 32499  007F8A  0900               	iorlw	0
 32500  007F8C  B4D8               	btfsc	status,2,c
 32501  007F8E  D057               	goto	l18232
 32502                           
 32503                           ; BSR set to: 0
 32504                           ;../app/app_src/application.c: 242:     ind->size -= 16;
 32505  007F90  0100               	movlb	0	; force () banked
 32506  007F92  EE20 F009          	lfsr	2,9
 32507  007F96  51BA               	movf	appManagementEp@ind& (0+255),w,b
 32508  007F98  26D9               	addwf	fsr2l,f,c
 32509  007F9A  51BB               	movf	(appManagementEp@ind+1)& (0+255),w,b
 32510  007F9C  22DA               	addwfc	fsr2h,f,c
 32511  007F9E  0E10               	movlw	16
 32512  007FA0  5EDF               	subwf	indf2,f,c
 32513                           
 32514                           ; BSR set to: 0
 32515                           ;../app/app_src/application.c: 243:     if(CRC_OK != app_aes_decrypt(dataptr, ind->size)
      +                          ){
 32516  007FA2  C0BC  F0B4         	movff	appManagementEp@dataptr,app_aes_decrypt@data
 32517  007FA6  C0BD  F0B5         	movff	appManagementEp@dataptr+1,app_aes_decrypt@data+1
 32518  007FAA  0100               	movlb	0	; force () banked
 32519  007FAC  EE20 F009          	lfsr	2,9
 32520  007FB0  51BA               	movf	appManagementEp@ind& (0+255),w,b
 32521  007FB2  26D9               	addwf	fsr2l,f,c
 32522  007FB4  51BB               	movf	(appManagementEp@ind+1)& (0+255),w,b
 32523  007FB6  22DA               	addwfc	fsr2h,f,c
 32524  007FB8  50DF               	movf	indf2,w,c
 32525  007FBA  0100               	movlb	0	; force () banked
 32526  007FBC  6FB6               	movwf	app_aes_decrypt@size& (0+255),b
 32527  007FBE  ECAC  F031         	call	_app_aes_decrypt	;wreg free
 32528  007FC2  0A14               	xorlw	20
 32529  007FC4  A4D8               	btfss	status,2,c
 32530  007FC6  D03B               	goto	l18232
 32531                           
 32532                           ; BSR set to: 1
 32533                           ;../app/app_src/application.c: 246:     uint8_t *ptr = (uint8_t*)strstr(dataptr + 16,"SI
      +                          NK");
 32534  007FC8  0E10               	movlw	16
 32535  007FCA  0100               	movlb	0	; force () banked
 32536  007FCC  25BC               	addwf	appManagementEp@dataptr& (0+255),w,b
 32537  007FCE  0100               	movlb	0	; force () banked
 32538  007FD0  6F7E               	movwf	strstr@s1& (0+255),b
 32539  007FD2  0E00               	movlw	0
 32540  007FD4  0100               	movlb	0	; force () banked
 32541  007FD6  21BD               	addwfc	(appManagementEp@dataptr+1)& (0+255),w,b
 32542  007FD8  0100               	movlb	0	; force () banked
 32543  007FDA  6F7F               	movwf	(strstr@s1+1)& (0+255),b
 32544  007FDC  0EF7               	movlw	low STR_1
 32545  007FDE  0100               	movlb	0	; force () banked
 32546  007FE0  6F80               	movwf	strstr@s2& (0+255),b
 32547  007FE2  0EFF               	movlw	high STR_1
 32548  007FE4  6F81               	movwf	(strstr@s2+1)& (0+255),b
 32549  007FE6  EC84  F04A         	call	_strstr	;wreg free
 32550  007FEA  C07E  F0BE         	movff	?_strstr,appManagementEp@ptr
 32551  007FEE  C07F  F0BF         	movff	?_strstr+1,appManagementEp@ptr+1
 32552                           
 32553                           ; BSR set to: 0
 32554                           ;../app/app_src/application.c: 247:     if(ptr){
 32555  007FF2  0100               	movlb	0	; force () banked
 32556  007FF4  51BE               	movf	appManagementEp@ptr& (0+255),w,b
 32557  007FF6  11BF               	iorwf	(appManagementEp@ptr+1)& (0+255),w,b
 32558  007FF8  B4D8               	btfsc	status,2,c
 32559  007FFA  D007               	goto	l18226
 32560                           
 32561                           ; BSR set to: 0
 32562                           ;../app/app_src/application.c: 248:         exract_sink_addr(ptr);
 32563  007FFC  C0BE  F08D         	movff	appManagementEp@ptr,exract_sink_addr@dataptr
 32564  008000  C0BF  F08E         	movff	appManagementEp@ptr+1,exract_sink_addr@dataptr+1
 32565  008004  EC7C  F03D         	call	_exract_sink_addr	;wreg free
 32566                           
 32567                           ;../app/app_src/application.c: 249:         goto func_exit;
 32568  008008  D01A               	goto	l18232
 32569  00800A                     l18226:
 32570                           
 32571                           ; BSR set to: 0
 32572                           ;../app/app_src/application.c: 251:     ptr = (uint8_t*)strstr(dataptr + 16,"PING");
 32573  00800A  0E10               	movlw	16
 32574  00800C  0100               	movlb	0	; force () banked
 32575  00800E  25BC               	addwf	appManagementEp@dataptr& (0+255),w,b
 32576  008010  0100               	movlb	0	; force () banked
 32577  008012  6F7E               	movwf	strstr@s1& (0+255),b
 32578  008014  0E00               	movlw	0
 32579  008016  0100               	movlb	0	; force () banked
 32580  008018  21BD               	addwfc	(appManagementEp@dataptr+1)& (0+255),w,b
 32581  00801A  0100               	movlb	0	; force () banked
 32582  00801C  6F7F               	movwf	(strstr@s1+1)& (0+255),b
 32583  00801E  0EF2               	movlw	low STR_2
 32584  008020  0100               	movlb	0	; force () banked
 32585  008022  6F80               	movwf	strstr@s2& (0+255),b
 32586  008024  0EFF               	movlw	high STR_2
 32587  008026  6F81               	movwf	(strstr@s2+1)& (0+255),b
 32588  008028  EC84  F04A         	call	_strstr	;wreg free
 32589  00802C  C07E  F0BE         	movff	?_strstr,appManagementEp@ptr
 32590  008030  C07F  F0BF         	movff	?_strstr+1,appManagementEp@ptr+1
 32591                           
 32592                           ; BSR set to: 0
 32593                           ;../app/app_src/application.c: 252:     if(ptr){
 32594  008034  0100               	movlb	0	; force () banked
 32595  008036  51BE               	movf	appManagementEp@ptr& (0+255),w,b
 32596  008038  11BF               	iorwf	(appManagementEp@ptr+1)& (0+255),w,b
 32597  00803A  A4D8               	btfss	status,2,c
 32598                           
 32599                           ; BSR set to: 0
 32600  00803C  F000               	nop		;# 
 32601  00803E                     l18232:
 32602                           
 32603                           ;../app/app_src/application.c: 256:     return 1;
 32604  00803E  0E01               	movlw	1
 32605  008040  0012               	return		;funcret
 32606  008042                     __end_of_appManagementEp:
 32607                           	callstack 0
 32608                           
 32609 ;; *************** function _appDataInd *****************
 32610 ;; Defined at:
 32611 ;;		line 207 in file "../app/app_src/application.c"
 32612 ;; Parameters:    Size  Location     Type
 32613 ;;  ind             2   90[BANK0 ] PTR struct NWK_DataInd_t
 32614 ;;		 -> nwkRxIndicateFrame@ind(12), 
 32615 ;; Auto vars:     Size  Location     Type
 32616 ;;  dataptr         2   95[BANK0 ] PTR unsigned char 
 32617 ;;		 -> nwkFrameFrames(690), 
 32618 ;;  buf_id          1   97[BANK0 ] unsigned char 
 32619 ;; Return value:  Size  Location     Type
 32620 ;;                  1    wreg      _Bool 
 32621 ;; Registers used:
 32622 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32623 ;; Tracked objects:
 32624 ;;		On entry : 3F/0
 32625 ;;		On exit  : 0/0
 32626 ;;		Unchanged: 0/0
 32627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32628 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32629 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32630 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32631 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32632 ;;Total ram usage:        8 bytes
 32633 ;; Hardware stack levels used:    1
 32634 ;; Hardware stack levels required when called:   16
 32635 ;; This function calls:
 32636 ;;		_CircularBufferPushBack
 32637 ;;		_CircularBufferSize
 32638 ;;		_app_aes_decrypt
 32639 ;;		_check_multicast_rx
 32640 ;;		_get_free_rx_buffer
 32641 ;;		_memcpy
 32642 ;;		_memset
 32643 ;; This function is called by:
 32644 ;;		_bootLoadApplication
 32645 ;;		_nwkRxIndicateFrame
 32646 ;; This function uses a non-reentrant model
 32647 ;;
 32648                           
 32649                           	psect	text172
 32650  005E2A                     __ptext172:
 32651                           	callstack 0
 32652  005E2A                     _appDataInd:
 32653                           	callstack 9
 32654                           
 32655                           ;../app/app_src/application.c: 207: static _Bool appDataInd(NWK_DataInd_t *ind);../app/a
      +                          pp_src/application.c: 208: {;../app/app_src/application.c: 210:     uint8_t buf_id;;../a
      +                          pp/app_src/application.c: 211:     uint8_t* dataptr = ind->data;
 32656                           
 32657                           ;incstack = 0
 32658  005E2A  0100               	movlb	0	; force () banked
 32659  005E2C  EE20 F007          	lfsr	2,7
 32660  005E30  51BA               	movf	appDataInd@ind& (0+255),w,b
 32661  005E32  26D9               	addwf	fsr2l,f,c
 32662  005E34  51BB               	movf	(appDataInd@ind+1)& (0+255),w,b
 32663  005E36  22DA               	addwfc	fsr2h,f,c
 32664  005E38  006F FF78  F0BF    	movff	postinc2,appDataInd@dataptr
 32665  005E3E  006F FF74  F0C0    	movff	postdec2,appDataInd@dataptr+1
 32666                           
 32667                           ; BSR set to: 0
 32668                           ;../app/app_src/application.c: 212:     if(!check_multicast_rx(ind)){
 32669  005E44  C0BA  F076         	movff	appDataInd@ind,check_multicast_rx@ind
 32670  005E48  C0BB  F077         	movff	appDataInd@ind+1,check_multicast_rx@ind+1
 32671  005E4C  EC6B  F057         	call	_check_multicast_rx	;wreg free
 32672  005E50  0900               	iorlw	0
 32673  005E52  B4D8               	btfsc	status,2,c
 32674  005E54  D097               	goto	l18204
 32675                           
 32676                           ; BSR set to: 0
 32677                           ;../app/app_src/application.c: 215:     if(CRC_OK != app_aes_decrypt(dataptr, (ind->size
      +                           - 16))){
 32678  005E56  C0BF  F0B4         	movff	appDataInd@dataptr,app_aes_decrypt@data
 32679  005E5A  C0C0  F0B5         	movff	appDataInd@dataptr+1,app_aes_decrypt@data+1
 32680  005E5E  0100               	movlb	0	; force () banked
 32681  005E60  EE20 F009          	lfsr	2,9
 32682  005E64  51BA               	movf	appDataInd@ind& (0+255),w,b
 32683  005E66  26D9               	addwf	fsr2l,f,c
 32684  005E68  51BB               	movf	(appDataInd@ind+1)& (0+255),w,b
 32685  005E6A  22DA               	addwfc	fsr2h,f,c
 32686  005E6C  50DF               	movf	indf2,w,c
 32687  005E6E  0FF0               	addlw	240
 32688  005E70  0100               	movlb	0	; force () banked
 32689  005E72  6FB6               	movwf	app_aes_decrypt@size& (0+255),b
 32690  005E74  ECAC  F031         	call	_app_aes_decrypt	;wreg free
 32691  005E78  0A14               	xorlw	20
 32692  005E7A  A4D8               	btfss	status,2,c
 32693  005E7C  D083               	goto	l18204
 32694                           
 32695                           ; BSR set to: 1
 32696                           ;../app/app_src/application.c: 218:     if(get_free_rx_buffer(&buf_id)){
 32697  005E7E  0EC1               	movlw	low appDataInd@buf_id
 32698  005E80  0100               	movlb	0	; force () banked
 32699  005E82  6F71               	movwf	get_free_rx_buffer@buf_id& (0+255),b
 32700  005E84  0E00               	movlw	high appDataInd@buf_id
 32701  005E86  6F72               	movwf	(get_free_rx_buffer@buf_id+1)& (0+255),b
 32702  005E88  EC7F  F04F         	call	_get_free_rx_buffer	;wreg free
 32703  005E8C  0900               	iorlw	0
 32704  005E8E  B4D8               	btfsc	status,2,c
 32705  005E90  D079               	goto	l18204
 32706                           
 32707                           ;../app/app_src/application.c: 219:        memset(&rx_buffer[buf_id].payload[0], 0 , siz
      +                          eof((128 - 16 - 2 )));
 32708  005E92  0100               	movlb	0	; force () banked
 32709  005E94  51C1               	movf	appDataInd@buf_id& (0+255),w,b
 32710  005E96  0D7B               	mullw	123
 32711  005E98  0E5F               	movlw	low (_rx_buffer+13)
 32712  005E9A  24F3               	addwf	243,w,c
 32713  005E9C  0100               	movlb	0	; force () banked
 32714  005E9E  6F71               	movwf	memset@p1& (0+255),b
 32715  005EA0  0E0D               	movlw	high (_rx_buffer+13)
 32716  005EA2  20F4               	addwfc	prodh,w,c
 32717  005EA4  6F72               	movwf	(memset@p1+1)& (0+255),b
 32718  005EA6  0E00               	movlw	0
 32719  005EA8  0100               	movlb	0	; force () banked
 32720  005EAA  6F74               	movwf	(memset@c+1)& (0+255),b
 32721  005EAC  0E00               	movlw	0
 32722  005EAE  6F73               	movwf	memset@c& (0+255),b
 32723  005EB0  0E00               	movlw	0
 32724  005EB2  0100               	movlb	0	; force () banked
 32725  005EB4  6F76               	movwf	(memset@n+1)& (0+255),b
 32726  005EB6  0E02               	movlw	2
 32727  005EB8  6F75               	movwf	memset@n& (0+255),b
 32728  005EBA  ECA8  F058         	call	_memset	;wreg free
 32729                           
 32730                           ; BSR set to: 0
 32731                           ;../app/app_src/application.c: 220:        rx_buffer[buf_id].rx_ind = *ind;
 32732  005EBE  0060  F2EB  FFD9   	movff	appDataInd@ind,fsr2l
 32733  005EC4  0060  F2EF  FFDA   	movff	appDataInd@ind+1,fsr2h
 32734  005ECA  0100               	movlb	0	; force () banked
 32735  005ECC  51C1               	movf	appDataInd@buf_id& (0+255),w,b
 32736  005ECE  0D7B               	mullw	123
 32737  005ED0  0E53               	movlw	low (_rx_buffer+1)
 32738  005ED2  24F3               	addwf	243,w,c
 32739  005ED4  6EE9               	movwf	fsr0l,c
 32740  005ED6  0E0D               	movlw	high (_rx_buffer+1)
 32741  005ED8  20F4               	addwfc	prodh,w,c
 32742  005EDA  6EEA               	movwf	fsr0h,c
 32743  005EDC  0E0B               	movlw	11
 32744  005EDE                     u15801:
 32745  005EDE  006F FF6F FFEB     	movff	plusw2,plusw0
 32746  005EE4  06E8               	decf	wreg,f,c
 32747  005EE6  E2FB               	bc	u15801
 32748                           
 32749                           ; BSR set to: 0
 32750                           ;../app/app_src/application.c: 221:        ind->size -= 16;
 32751  005EE8  0100               	movlb	0	; force () banked
 32752  005EEA  EE20 F009          	lfsr	2,9
 32753  005EEE  51BA               	movf	appDataInd@ind& (0+255),w,b
 32754  005EF0  26D9               	addwf	fsr2l,f,c
 32755  005EF2  51BB               	movf	(appDataInd@ind+1)& (0+255),w,b
 32756  005EF4  22DA               	addwfc	fsr2h,f,c
 32757  005EF6  0E10               	movlw	16
 32758  005EF8  5EDF               	subwf	indf2,f,c
 32759                           
 32760                           ; BSR set to: 0
 32761                           ;../app/app_src/application.c: 223:        memcpy(&rx_buffer[buf_id].payload[0],dataptr 
      +                          + 16,
 32762  005EFA  0100               	movlb	0	; force () banked
 32763  005EFC  51C1               	movf	appDataInd@buf_id& (0+255),w,b
 32764  005EFE  0D7B               	mullw	123
 32765  005F00  0E5F               	movlw	low (_rx_buffer+13)
 32766  005F02  24F3               	addwf	243,w,c
 32767  005F04  0100               	movlb	0	; force () banked
 32768  005F06  6F77               	movwf	memcpy@d1& (0+255),b
 32769  005F08  0E0D               	movlw	high (_rx_buffer+13)
 32770  005F0A  20F4               	addwfc	prodh,w,c
 32771  005F0C  6F78               	movwf	(memcpy@d1+1)& (0+255),b
 32772  005F0E  0E10               	movlw	16
 32773  005F10  0100               	movlb	0	; force () banked
 32774  005F12  25BF               	addwf	appDataInd@dataptr& (0+255),w,b
 32775  005F14  0100               	movlb	0	; force () banked
 32776  005F16  6FBC               	movwf	??_appDataInd& (0+255),b
 32777  005F18  0E00               	movlw	0
 32778  005F1A  0100               	movlb	0	; force () banked
 32779  005F1C  21C0               	addwfc	(appDataInd@dataptr+1)& (0+255),w,b
 32780  005F1E  0100               	movlb	0	; force () banked
 32781  005F20  6FBD               	movwf	(??_appDataInd+1)& (0+255),b
 32782  005F22  C0BC  F079         	movff	??_appDataInd,memcpy@s1
 32783  005F26  C0BD  F07A         	movff	??_appDataInd+1,memcpy@s1+1
 32784  005F2A  0100               	movlb	0	; force () banked
 32785  005F2C  5179               	movf	memcpy@s1& (0+255),w,b
 32786  005F2E  117A               	iorwf	(memcpy@s1+1)& (0+255),w,b
 32787  005F30  A4D8               	btfss	status,2,c
 32788  005F32  0E20               	movlw	32
 32789  005F34  6F7B               	movwf	(memcpy@s1+2)& (0+255),b
 32790  005F36  0100               	movlb	0	; force () banked
 32791  005F38  EE20 F009          	lfsr	2,9
 32792  005F3C  51BA               	movf	appDataInd@ind& (0+255),w,b
 32793  005F3E  26D9               	addwf	fsr2l,f,c
 32794  005F40  51BB               	movf	(appDataInd@ind+1)& (0+255),w,b
 32795  005F42  22DA               	addwfc	fsr2h,f,c
 32796  005F44  50DF               	movf	indf2,w,c
 32797  005F46  0100               	movlb	0	; force () banked
 32798  005F48  6FBE               	movwf	(??_appDataInd+2)& (0+255),b
 32799  005F4A  51BE               	movf	(??_appDataInd+2)& (0+255),w,b
 32800  005F4C  0100               	movlb	0	; force () banked
 32801  005F4E  6F7C               	movwf	memcpy@n& (0+255),b
 32802  005F50  6B7D               	clrf	(memcpy@n+1)& (0+255),b
 32803  005F52  ECC1  F04F         	call	_memcpy	;wreg free
 32804                           
 32805                           ; BSR set to: 0
 32806                           ;../app/app_src/application.c: 225:        CircularBufferPushBack(&rx_buffer_queue_conte
      +                          xt, &buf_id);
 32807  005F56  0ED6               	movlw	low _rx_buffer_queue_context
 32808  005F58  0100               	movlb	0	; force () banked
 32809  005F5A  6F84               	movwf	CircularBufferPushBack@ctx& (0+255),b
 32810  005F5C  0E02               	movlw	high _rx_buffer_queue_context
 32811  005F5E  6F85               	movwf	(CircularBufferPushBack@ctx+1)& (0+255),b
 32812  005F60  0EC1               	movlw	low appDataInd@buf_id
 32813  005F62  0100               	movlb	0	; force () banked
 32814  005F64  6F86               	movwf	CircularBufferPushBack@val& (0+255),b
 32815  005F66  0E00               	movlw	high appDataInd@buf_id
 32816  005F68  6F87               	movwf	(CircularBufferPushBack@val+1)& (0+255),b
 32817  005F6A  EC23  F034         	call	_CircularBufferPushBack	;wreg free
 32818                           
 32819                           ; BSR set to: 0
 32820                           ;../app/app_src/application.c: 227:        read_write_mb_regs[RX_NO_MSG] =
 32821  005F6E  0ED6               	movlw	low _rx_buffer_queue_context
 32822  005F70  0100               	movlb	0	; force () banked
 32823  005F72  6F71               	movwf	CircularBufferSize@ctx& (0+255),b
 32824  005F74  0E02               	movlw	high _rx_buffer_queue_context
 32825  005F76  6F72               	movwf	(CircularBufferSize@ctx+1)& (0+255),b
 32826  005F78  ECD0  F051         	call	_CircularBufferSize	;wreg free
 32827  005F7C  C071  F274         	movff	?_CircularBufferSize,_read_write_mb_regs+4
 32828  005F80  C072  F275         	movff	?_CircularBufferSize+1,_read_write_mb_regs+5
 32829  005F84                     l18204:
 32830                           
 32831                           ;../app/app_src/application.c: 233:     return 0;
 32832  005F84  0E00               	movlw	0
 32833  005F86  0012               	return		;funcret
 32834  005F88                     __end_of_appDataInd:
 32835                           	callstack 0
 32836                           
 32837 ;; *************** function _nwkRxServiceDataInd *****************
 32838 ;; Defined at:
 32839 ;;		line 257 in file "../nwk/nwk_src/nwkRx.c"
 32840 ;; Parameters:    Size  Location     Type
 32841 ;;  ind             2   90[BANK0 ] PTR struct NWK_DataInd_t
 32842 ;;		 -> nwkRxIndicateFrame@ind(12), 
 32843 ;; Auto vars:     Size  Location     Type
 32844 ;;		None
 32845 ;; Return value:  Size  Location     Type
 32846 ;;                  1    wreg      _Bool 
 32847 ;; Registers used:
 32848 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32849 ;; Tracked objects:
 32850 ;;		On entry : 3F/0
 32851 ;;		On exit  : 3F/0
 32852 ;;		Unchanged: 0/0
 32853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32854 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32856 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32857 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32858 ;;Total ram usage:        6 bytes
 32859 ;; Hardware stack levels used:    1
 32860 ;; Hardware stack levels required when called:   14
 32861 ;; This function calls:
 32862 ;;		_nwkRouteErrorReceived
 32863 ;;		_nwkTxAckReceived
 32864 ;; This function is called by:
 32865 ;;		_nwkRxInit
 32866 ;;		_nwkRxIndicateFrame
 32867 ;; This function uses a non-reentrant model
 32868 ;;
 32869                           
 32870                           	psect	text173
 32871  00A004                     __ptext173:
 32872                           	callstack 0
 32873  00A004                     _nwkRxServiceDataInd:
 32874                           	callstack 11
 32875                           
 32876                           ;../nwk/nwk_src/nwkRx.c: 257: static _Bool nwkRxServiceDataInd(NWK_DataInd_t *ind);../nw
      +                          k/nwk_src/nwkRx.c: 258: {;../nwk/nwk_src/nwkRx.c: 264:   if (ind->size < 1)
 32877                           
 32878                           ;incstack = 0
 32879  00A004  0100               	movlb	0	; force () banked
 32880  00A006  EE20 F009          	lfsr	2,9
 32881  00A00A  51BA               	movf	nwkRxServiceDataInd@ind& (0+255),w,b
 32882  00A00C  26D9               	addwf	fsr2l,f,c
 32883  00A00E  51BB               	movf	(nwkRxServiceDataInd@ind+1)& (0+255),w,b
 32884  00A010  22DA               	addwfc	fsr2h,f,c
 32885  00A012  50DF               	movf	indf2,w,c
 32886  00A014  A4D8               	btfss	status,2,c
 32887  00A016  D012               	goto	l18344
 32888                           
 32889                           ; BSR set to: 0
 32890                           ;../nwk/nwk_src/nwkRx.c: 265:     return 0;
 32891  00A018  0E00               	movlw	0
 32892  00A01A  0012               	return	
 32893  00A01C                     l18330:
 32894                           
 32895                           ; BSR set to: 0
 32896                           ;../nwk/nwk_src/nwkRx.c: 270:       return nwkTxAckReceived(ind);
 32897  00A01C  C0BA  F077         	movff	nwkRxServiceDataInd@ind,nwkTxAckReceived@ind
 32898  00A020  C0BB  F078         	movff	nwkRxServiceDataInd@ind+1,nwkTxAckReceived@ind+1
 32899  00A024  EC4E  F044         	call	_nwkTxAckReceived	;wreg free
 32900  00A028  0012               	return	
 32901  00A02A                     l18334:
 32902                           
 32903                           ; BSR set to: 0
 32904                           ;../nwk/nwk_src/nwkRx.c: 274:       return nwkRouteErrorReceived(ind);
 32905  00A02A  C0BA  F07C         	movff	nwkRxServiceDataInd@ind,nwkRouteErrorReceived@ind
 32906  00A02E  C0BB  F07D         	movff	nwkRxServiceDataInd@ind+1,nwkRouteErrorReceived@ind+1
 32907  00A032  EC04  F052         	call	_nwkRouteErrorReceived	;wreg free
 32908  00A036  0012               	return	
 32909  00A038                     l18338:
 32910                           
 32911                           ; BSR set to: 0
 32912                           ;../nwk/nwk_src/nwkRx.c: 286:       return 0;
 32913  00A038  0E00               	movlw	0
 32914  00A03A  0012               	return	
 32915  00A03C                     l18344:
 32916                           
 32917                           ; BSR set to: 0
 32918  00A03C  0100               	movlb	0	; force () banked
 32919  00A03E  EE20 F007          	lfsr	2,7
 32920  00A042  51BA               	movf	nwkRxServiceDataInd@ind& (0+255),w,b
 32921  00A044  26D9               	addwf	fsr2l,f,c
 32922  00A046  51BB               	movf	(nwkRxServiceDataInd@ind+1)& (0+255),w,b
 32923  00A048  22DA               	addwfc	fsr2h,f,c
 32924  00A04A  006F FF78  F0BC    	movff	postinc2,??_nwkRxServiceDataInd
 32925  00A050  006F FF74  F0BD    	movff	postdec2,??_nwkRxServiceDataInd+1
 32926  00A056  0060  F2F3  FFD9   	movff	??_nwkRxServiceDataInd,fsr2l
 32927  00A05C  0060  F2F7  FFDA   	movff	??_nwkRxServiceDataInd+1,fsr2h
 32928  00A062  50DF               	movf	indf2,w,c
 32929  00A064  0100               	movlb	0	; force () banked
 32930  00A066  6FBE               	movwf	(??_nwkRxServiceDataInd+2)& (0+255),b
 32931  00A068  6BBF               	clrf	(??_nwkRxServiceDataInd+3)& (0+255),b
 32932                           
 32933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 32934                           ; Switch size 1, requested type "simple"
 32935                           ; Number of cases is 1, Range of values is 0 to 0
 32936                           ; switch strategies available:
 32937                           ; Name         Instructions Cycles
 32938                           ; simple_byte            4     3 (average)
 32939                           ;	Chosen strategy is simple_byte
 32940  00A06A  51BF               	movf	(??_nwkRxServiceDataInd+3)& (0+255),w,b
 32941  00A06C  0A00               	xorlw	0	; case 0
 32942  00A06E  A4D8               	btfss	status,2,c
 32943  00A070  D7E3               	goto	l18338
 32944                           
 32945                           ; BSR set to: 0
 32946                           ; Switch size 1, requested type "simple"
 32947                           ; Number of cases is 2, Range of values is 0 to 1
 32948                           ; switch strategies available:
 32949                           ; Name         Instructions Cycles
 32950                           ; simple_byte            7     4 (average)
 32951                           ;	Chosen strategy is simple_byte
 32952  00A072  51BE               	movf	(??_nwkRxServiceDataInd+2)& (0+255),w,b
 32953  00A074  0A00               	xorlw	0	; case 0
 32954  00A076  B4D8               	btfsc	status,2,c
 32955  00A078  D7D1               	goto	l18330
 32956  00A07A  0A01               	xorlw	1	; case 1
 32957  00A07C  B4D8               	btfsc	status,2,c
 32958  00A07E  D7D5               	goto	l18334
 32959  00A080  D7DB               	goto	l18338
 32960  00A082                     __end_of_nwkRxServiceDataInd:
 32961                           	callstack 0
 32962                           
 32963 ;; *************** function _nwkTxAckReceived *****************
 32964 ;; Defined at:
 32965 ;;		line 182 in file "../nwk/nwk_src/nwkTx.c"
 32966 ;; Parameters:    Size  Location     Type
 32967 ;;  ind             2   23[BANK0 ] PTR struct NWK_DataInd_t
 32968 ;;		 -> nwkRxIndicateFrame@ind(12), 
 32969 ;; Auto vars:     Size  Location     Type
 32970 ;;  frame           2   29[BANK0 ] PTR struct NwkFrame_t
 32971 ;;		 -> nwkFrameFrames(690), NULL(0), 
 32972 ;;  command         2   27[BANK0 ] PTR struct NwkCommandAck
 32973 ;;		 -> nwkFrameFrames..(128), nwkFrameFrames(690), 
 32974 ;; Return value:  Size  Location     Type
 32975 ;;                  1    wreg      _Bool 
 32976 ;; Registers used:
 32977 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 32978 ;; Tracked objects:
 32979 ;;		On entry : 0/0
 32980 ;;		On exit  : 3F/0
 32981 ;;		Unchanged: 0/0
 32982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32983 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32984 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32985 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32986 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32987 ;;Total ram usage:        8 bytes
 32988 ;; Hardware stack levels used:    1
 32989 ;; Hardware stack levels required when called:   12
 32990 ;; This function calls:
 32991 ;;		_nwkFrameNext
 32992 ;; This function is called by:
 32993 ;;		_nwkRxServiceDataInd
 32994 ;; This function uses a non-reentrant model
 32995 ;;
 32996                           
 32997                           	psect	text174
 32998  00889C                     __ptext174:
 32999                           	callstack 0
 33000  00889C                     _nwkTxAckReceived:
 33001                           	callstack 12
 33002                           
 33003                           ;../nwk/nwk_src/nwkTx.c: 182: _Bool nwkTxAckReceived(NWK_DataInd_t *ind);../nwk/nwk_src/
      +                          nwkTx.c: 183: {;../nwk/nwk_src/nwkTx.c: 184:   NwkCommandAck_t *command = (NwkCommandAck
      +                          _t *)ind->data;
 33004                           
 33005                           ; BSR set to: 0
 33006                           ;incstack = 0
 33007  00889C  0100               	movlb	0	; force () banked
 33008  00889E  EE20 F007          	lfsr	2,7
 33009  0088A2  5177               	movf	nwkTxAckReceived@ind& (0+255),w,b
 33010  0088A4  26D9               	addwf	fsr2l,f,c
 33011  0088A6  5178               	movf	(nwkTxAckReceived@ind+1)& (0+255),w,b
 33012  0088A8  22DA               	addwfc	fsr2h,f,c
 33013  0088AA  006F FF78  F07B    	movff	postinc2,nwkTxAckReceived@command
 33014  0088B0  006F FF74  F07C    	movff	postdec2,nwkTxAckReceived@command+1
 33015                           
 33016                           ; BSR set to: 0
 33017                           ;../nwk/nwk_src/nwkTx.c: 185:   NwkFrame_t *frame = (0);
 33018  0088B6  0E00               	movlw	0
 33019  0088B8  0100               	movlb	0	; force () banked
 33020  0088BA  6F7D               	movwf	nwkTxAckReceived@frame& (0+255),b
 33021  0088BC  0E00               	movlw	0
 33022  0088BE  6F7E               	movwf	(nwkTxAckReceived@frame+1)& (0+255),b
 33023                           
 33024                           ; BSR set to: 0
 33025                           ;../nwk/nwk_src/nwkTx.c: 187:   if (sizeof(NwkCommandAck_t) != ind->size)
 33026  0088C0  0100               	movlb	0	; force () banked
 33027  0088C2  EE20 F009          	lfsr	2,9
 33028  0088C6  5177               	movf	nwkTxAckReceived@ind& (0+255),w,b
 33029  0088C8  26D9               	addwf	fsr2l,f,c
 33030  0088CA  5178               	movf	(nwkTxAckReceived@ind+1)& (0+255),w,b
 33031  0088CC  22DA               	addwfc	fsr2h,f,c
 33032  0088CE  0E03               	movlw	3
 33033  0088D0  18DE               	xorwf	postinc2,w,c
 33034  0088D2  B4D8               	btfsc	status,2,c
 33035  0088D4  D039               	goto	l18134
 33036                           
 33037                           ; BSR set to: 0
 33038                           ;../nwk/nwk_src/nwkTx.c: 188:     return 0;
 33039  0088D6  0E00               	movlw	0
 33040  0088D8  0012               	return	
 33041  0088DA                     l18122:
 33042                           
 33043                           ; BSR set to: 0
 33044                           ;../nwk/nwk_src/nwkTx.c: 191:   {;../nwk/nwk_src/nwkTx.c: 192:     if (NWK_TX_STATE_WAIT
      +                          _ACK == frame->state && frame->header.nwkSeq == command->seq)
 33045  0088DA  0060  F1F7  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
 33046  0088E0  0060  F1FB  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
 33047  0088E6  0E16               	movlw	22
 33048  0088E8  18DE               	xorwf	postinc2,w,c
 33049  0088EA  A4D8               	btfss	status,2,c
 33050  0088EC  D02D               	goto	l18134
 33051                           
 33052                           ; BSR set to: 0
 33053  0088EE  0100               	movlb	0	; force () banked
 33054  0088F0  EE20 F001          	lfsr	2,1
 33055  0088F4  517B               	movf	nwkTxAckReceived@command& (0+255),w,b
 33056  0088F6  26D9               	addwf	fsr2l,f,c
 33057  0088F8  517C               	movf	(nwkTxAckReceived@command+1)& (0+255),w,b
 33058  0088FA  22DA               	addwfc	fsr2h,f,c
 33059  0088FC  0100               	movlb	0	; force () banked
 33060  0088FE  EE00 F00C          	lfsr	0,12
 33061  008902  517D               	movf	nwkTxAckReceived@frame& (0+255),w,b
 33062  008904  26E9               	addwf	fsr0l,f,c
 33063  008906  517E               	movf	(nwkTxAckReceived@frame+1)& (0+255),w,b
 33064  008908  22EA               	addwfc	fsr0h,f,c
 33065  00890A  50DE               	movf	postinc2,w,c
 33066  00890C  18EE               	xorwf	postinc0,w,c
 33067  00890E  A4D8               	btfss	status,2,c
 33068  008910  D01B               	goto	l18134
 33069                           
 33070                           ; BSR set to: 0
 33071                           ;../nwk/nwk_src/nwkTx.c: 193:     {;../nwk/nwk_src/nwkTx.c: 194:       frame->state = NW
      +                          K_TX_STATE_CONFIRM;
 33072  008912  0060  F1F7  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
 33073  008918  0060  F1FB  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
 33074  00891E  0E17               	movlw	23
 33075  008920  6EDF               	movwf	indf2,c
 33076                           
 33077                           ; BSR set to: 0
 33078                           ;../nwk/nwk_src/nwkTx.c: 195:       frame->tx.control = command->control;
 33079  008922  0100               	movlb	0	; force () banked
 33080  008924  EE20 F002          	lfsr	2,2
 33081  008928  517B               	movf	nwkTxAckReceived@command& (0+255),w,b
 33082  00892A  26D9               	addwf	fsr2l,f,c
 33083  00892C  517C               	movf	(nwkTxAckReceived@command+1)& (0+255),w,b
 33084  00892E  22DA               	addwfc	fsr2h,f,c
 33085  008930  0100               	movlb	0	; force () banked
 33086  008932  EE00 F087          	lfsr	0,135
 33087  008936  517D               	movf	nwkTxAckReceived@frame& (0+255),w,b
 33088  008938  26E9               	addwf	fsr0l,f,c
 33089  00893A  517E               	movf	(nwkTxAckReceived@frame+1)& (0+255),w,b
 33090  00893C  22EA               	addwfc	fsr0h,f,c
 33091  00893E  006F FF7F FFEF     	movff	indf2,indf0
 33092                           
 33093                           ; BSR set to: 0
 33094                           ;../nwk/nwk_src/nwkTx.c: 196:       return 1;
 33095  008944  0E01               	movlw	1
 33096  008946  0012               	return	
 33097  008948                     l18134:
 33098                           
 33099                           ; BSR set to: 0
 33100                           ;../nwk/nwk_src/nwkTx.c: 190:   while ((0) != (frame = nwkFrameNext(frame)))
 33101  008948  C07D  F071         	movff	nwkTxAckReceived@frame,nwkFrameNext@frame
 33102  00894C  C07E  F072         	movff	nwkTxAckReceived@frame+1,nwkFrameNext@frame+1
 33103  008950  EC99  F049         	call	_nwkFrameNext	;wreg free
 33104  008954  C071  F07D         	movff	?_nwkFrameNext,nwkTxAckReceived@frame
 33105  008958  C072  F07E         	movff	?_nwkFrameNext+1,nwkTxAckReceived@frame+1
 33106  00895C  0100               	movlb	0	; force () banked
 33107  00895E  517D               	movf	nwkTxAckReceived@frame& (0+255),w,b
 33108  008960  117E               	iorwf	(nwkTxAckReceived@frame+1)& (0+255),w,b
 33109  008962  A4D8               	btfss	status,2,c
 33110  008964  D7BA               	goto	l18122
 33111                           
 33112                           ; BSR set to: 0
 33113                           ;../nwk/nwk_src/nwkTx.c: 200:   return 0;
 33114  008966  0E00               	movlw	0
 33115                           
 33116                           ; BSR set to: 0
 33117  008968  0012               	return		;funcret
 33118  00896A                     __end_of_nwkTxAckReceived:
 33119                           	callstack 0
 33120                           
 33121 ;; *************** function _nwkFrameNext *****************
 33122 ;; Defined at:
 33123 ;;		line 111 in file "../nwk/nwk_src/nwkFrame.c"
 33124 ;; Parameters:    Size  Location     Type
 33125 ;;  frame           2   17[BANK0 ] PTR struct NwkFrame_t
 33126 ;;		 -> nwkFrameFrames(690), NULL(0), 
 33127 ;; Auto vars:     Size  Location     Type
 33128 ;;		None
 33129 ;; Return value:  Size  Location     Type
 33130 ;;                  2   17[BANK0 ] PTR struct NwkFrame_t
 33131 ;; Registers used:
 33132 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33133 ;; Tracked objects:
 33134 ;;		On entry : 0/0
 33135 ;;		On exit  : 3F/0
 33136 ;;		Unchanged: 0/0
 33137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33140 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33141 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33142 ;;Total ram usage:        6 bytes
 33143 ;; Hardware stack levels used:    1
 33144 ;; Hardware stack levels required when called:   11
 33145 ;; This function calls:
 33146 ;;		Nothing
 33147 ;; This function is called by:
 33148 ;;		_nwkRxTaskHandler
 33149 ;;		_nwkTxAckReceived
 33150 ;;		_nwkTxAckWaitTimerHandler
 33151 ;;		_nwkTxDelayTimerHandler
 33152 ;;		_nwkTxTaskHandler
 33153 ;; This function uses a non-reentrant model
 33154 ;;
 33155                           
 33156                           	psect	text175
 33157  009332                     __ptext175:
 33158                           	callstack 0
 33159  009332                     _nwkFrameNext:
 33160                           	callstack 16
 33161                           
 33162                           ;../nwk/nwk_src/nwkFrame.c: 111: NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);../nwk/nwk_
      +                          src/nwkFrame.c: 112: {;../nwk/nwk_src/nwkFrame.c: 113:   if ((0) == frame)
 33163                           
 33164                           ; BSR set to: 0
 33165                           ;incstack = 0
 33166  009332  0100               	movlb	0	; force () banked
 33167  009334  5171               	movf	nwkFrameNext@frame& (0+255),w,b
 33168  009336  1172               	iorwf	(nwkFrameNext@frame+1)& (0+255),w,b
 33169  009338  A4D8               	btfss	status,2,c
 33170  00933A  D029               	goto	l17924
 33171                           
 33172                           ; BSR set to: 0
 33173                           ;../nwk/nwk_src/nwkFrame.c: 114:     frame = nwkFrameFrames;
 33174  00933C  0EA0               	movlw	low _nwkFrameFrames
 33175  00933E  0100               	movlb	0	; force () banked
 33176  009340  6F71               	movwf	nwkFrameNext@frame& (0+255),b
 33177  009342  0E0A               	movlw	high _nwkFrameFrames
 33178  009344  6F72               	movwf	(nwkFrameNext@frame+1)& (0+255),b
 33179                           
 33180                           ; BSR set to: 0
 33181                           ;../nwk/nwk_src/nwkFrame.c: 118:   for (; frame < &nwkFrameFrames[5]; frame++)
 33182                           
 33183                           ; BSR set to: 0
 33184                           ;../nwk/nwk_src/nwkFrame.c: 116:     frame++;
 33185  009346  0EB2               	movlw	178
 33186  009348  0100               	movlb	0	; force () banked
 33187  00934A  6F73               	movwf	??_nwkFrameNext& (0+255),b
 33188  00934C  0E02               	movlw	2
 33189  00934E  6F74               	movwf	(??_nwkFrameNext+1)& (0+255),b
 33190  009350  0EA0               	movlw	low _nwkFrameFrames
 33191  009352  6F75               	movwf	(??_nwkFrameNext+2)& (0+255),b
 33192  009354  0E0A               	movlw	high _nwkFrameFrames
 33193  009356  6F76               	movwf	(??_nwkFrameNext+3)& (0+255),b
 33194  009358  5173               	movf	??_nwkFrameNext& (0+255),w,b
 33195  00935A  2775               	addwf	(??_nwkFrameNext+2)& (0+255),f,b
 33196  00935C  5174               	movf	(??_nwkFrameNext+1)& (0+255),w,b
 33197  00935E  2376               	addwfc	(??_nwkFrameNext+3)& (0+255),f,b
 33198  009360  5175               	movf	(??_nwkFrameNext+2)& (0+255),w,b
 33199  009362  0100               	movlb	0	; force () banked
 33200  009364  5D71               	subwf	nwkFrameNext@frame& (0+255),w,b
 33201  009366  0100               	movlb	0	; force () banked
 33202  009368  5176               	movf	(??_nwkFrameNext+3)& (0+255),w,b
 33203  00936A  0100               	movlb	0	; force () banked
 33204  00936C  5972               	subwfb	(nwkFrameNext@frame+1)& (0+255),w,b
 33205  00936E  B0D8               	btfsc	status,0,c
 33206  009370  D029               	goto	u15510
 33207  009372                     l17918:
 33208                           
 33209                           ; BSR set to: 0
 33210                           ;../nwk/nwk_src/nwkFrame.c: 119:   {;../nwk/nwk_src/nwkFrame.c: 120:     if (NWK_FRAME_S
      +                          TATE_FREE != frame->state)
 33211  009372  0060  F1C7  FFD9   	movff	nwkFrameNext@frame,fsr2l
 33212  009378  0060  F1CB  FFDA   	movff	nwkFrameNext@frame+1,fsr2h
 33213  00937E  50DF               	movf	indf2,w,c
 33214  009380  B4D8               	btfsc	status,2,c
 33215  009382  D005               	goto	l17924
 33216                           
 33217                           ; BSR set to: 0
 33218                           ;../nwk/nwk_src/nwkFrame.c: 121:       return frame;
 33219  009384  C071  F071         	movff	nwkFrameNext@frame,?_nwkFrameNext
 33220  009388  C072  F072         	movff	nwkFrameNext@frame+1,?_nwkFrameNext+1
 33221  00938C  0012               	return	
 33222  00938E                     l17924:
 33223                           
 33224                           ; BSR set to: 0
 33225                           ;../nwk/nwk_src/nwkFrame.c: 122:   }
 33226  00938E  0E8A               	movlw	138
 33227  009390  0100               	movlb	0	; force () banked
 33228  009392  2771               	addwf	nwkFrameNext@frame& (0+255),f,b
 33229  009394  0E00               	movlw	0
 33230  009396  2372               	addwfc	(nwkFrameNext@frame+1)& (0+255),f,b
 33231  009398  0EB2               	movlw	178
 33232  00939A  0100               	movlb	0	; force () banked
 33233  00939C  6F73               	movwf	??_nwkFrameNext& (0+255),b
 33234  00939E  0E02               	movlw	2
 33235  0093A0  6F74               	movwf	(??_nwkFrameNext+1)& (0+255),b
 33236  0093A2  0EA0               	movlw	low _nwkFrameFrames
 33237  0093A4  6F75               	movwf	(??_nwkFrameNext+2)& (0+255),b
 33238  0093A6  0E0A               	movlw	high _nwkFrameFrames
 33239  0093A8  6F76               	movwf	(??_nwkFrameNext+3)& (0+255),b
 33240  0093AA  5173               	movf	??_nwkFrameNext& (0+255),w,b
 33241  0093AC  2775               	addwf	(??_nwkFrameNext+2)& (0+255),f,b
 33242  0093AE  5174               	movf	(??_nwkFrameNext+1)& (0+255),w,b
 33243  0093B0  2376               	addwfc	(??_nwkFrameNext+3)& (0+255),f,b
 33244  0093B2  5175               	movf	(??_nwkFrameNext+2)& (0+255),w,b
 33245  0093B4  0100               	movlb	0	; force () banked
 33246  0093B6  5D71               	subwf	nwkFrameNext@frame& (0+255),w,b
 33247  0093B8  0100               	movlb	0	; force () banked
 33248  0093BA  5176               	movf	(??_nwkFrameNext+3)& (0+255),w,b
 33249  0093BC  0100               	movlb	0	; force () banked
 33250  0093BE  5972               	subwfb	(nwkFrameNext@frame+1)& (0+255),w,b
 33251  0093C0  A0D8               	btfss	status,0,c
 33252  0093C2  D7D7               	goto	l17918
 33253  0093C4                     u15510:
 33254                           
 33255                           ; BSR set to: 0
 33256                           ;../nwk/nwk_src/nwkFrame.c: 124:   return (0);
 33257  0093C4  0E00               	movlw	0
 33258  0093C6  0100               	movlb	0	; force () banked
 33259  0093C8  6F71               	movwf	?_nwkFrameNext& (0+255),b
 33260  0093CA  0E00               	movlw	0
 33261  0093CC  6F72               	movwf	(?_nwkFrameNext+1)& (0+255),b
 33262                           
 33263                           ; BSR set to: 0
 33264  0093CE  0012               	return		;funcret
 33265  0093D0                     __end_of_nwkFrameNext:
 33266                           	callstack 0
 33267                           
 33268 ;; *************** function _nwkRouteErrorReceived *****************
 33269 ;; Defined at:
 33270 ;;		line 357 in file "../nwk/nwk_src/nwkRoute.c"
 33271 ;; Parameters:    Size  Location     Type
 33272 ;;  ind             2   28[BANK0 ] PTR struct NWK_DataInd_t
 33273 ;;		 -> nwkRxIndicateFrame@ind(12), 
 33274 ;; Auto vars:     Size  Location     Type
 33275 ;;  command         2   31[BANK0 ] PTR struct NwkCommandRou
 33276 ;;		 -> nwkFrameFrames(690), 
 33277 ;; Return value:  Size  Location     Type
 33278 ;;                  1    wreg      _Bool 
 33279 ;; Registers used:
 33280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33281 ;; Tracked objects:
 33282 ;;		On entry : 0/0
 33283 ;;		On exit  : 3F/0
 33284 ;;		Unchanged: 0/0
 33285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33286 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33287 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33288 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33289 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33290 ;;Total ram usage:        5 bytes
 33291 ;; Hardware stack levels used:    1
 33292 ;; Hardware stack levels required when called:   13
 33293 ;; This function calls:
 33294 ;;		_nwkRouteRemove
 33295 ;; This function is called by:
 33296 ;;		_nwkRxServiceDataInd
 33297 ;; This function uses a non-reentrant model
 33298 ;;
 33299                           
 33300                           	psect	text176
 33301  00A408                     __ptext176:
 33302                           	callstack 0
 33303  00A408                     _nwkRouteErrorReceived:
 33304                           	callstack 11
 33305                           
 33306                           ;../nwk/nwk_src/nwkRoute.c: 357: _Bool nwkRouteErrorReceived(NWK_DataInd_t *ind);../nwk/
      +                          nwk_src/nwkRoute.c: 358: {;../nwk/nwk_src/nwkRoute.c: 359:   NwkCommandRouteError_t *com
      +                          mand = (NwkCommandRouteError_t *)ind->data;
 33307                           
 33308                           ; BSR set to: 0
 33309                           ;incstack = 0
 33310  00A408  0100               	movlb	0	; force () banked
 33311  00A40A  EE20 F007          	lfsr	2,7
 33312  00A40E  517C               	movf	nwkRouteErrorReceived@ind& (0+255),w,b
 33313  00A410  26D9               	addwf	fsr2l,f,c
 33314  00A412  517D               	movf	(nwkRouteErrorReceived@ind+1)& (0+255),w,b
 33315  00A414  22DA               	addwfc	fsr2h,f,c
 33316  00A416  006F FF78  F07F    	movff	postinc2,nwkRouteErrorReceived@command
 33317  00A41C  006F FF74  F080    	movff	postdec2,nwkRouteErrorReceived@command+1
 33318                           
 33319                           ;../nwk/nwk_src/nwkRoute.c: 361:   if (sizeof(NwkCommandRouteError_t) != ind->size)
 33320  00A422  EE20 F009          	lfsr	2,9
 33321  00A426  517C               	movf	nwkRouteErrorReceived@ind& (0+255),w,b
 33322  00A428  26D9               	addwf	fsr2l,f,c
 33323  00A42A  517D               	movf	(nwkRouteErrorReceived@ind+1)& (0+255),w,b
 33324  00A42C  22DA               	addwfc	fsr2h,f,c
 33325  00A42E  0E06               	movlw	6
 33326  00A430  18DE               	xorwf	postinc2,w,c
 33327  00A432  B4D8               	btfsc	status,2,c
 33328  00A434  D002               	goto	l18106
 33329                           
 33330                           ; BSR set to: 0
 33331                           ;../nwk/nwk_src/nwkRoute.c: 362:     return 0;
 33332  00A436  0E00               	movlw	0
 33333  00A438  0012               	return	
 33334  00A43A                     l18106:
 33335                           
 33336                           ; BSR set to: 0
 33337                           ;../nwk/nwk_src/nwkRoute.c: 364:   nwkRouteRemove(command->dstAddr, command->multicast);
 33338  00A43A  0100               	movlb	0	; force () banked
 33339  00A43C  EE20 F003          	lfsr	2,3
 33340  00A440  517F               	movf	nwkRouteErrorReceived@command& (0+255),w,b
 33341  00A442  26D9               	addwf	fsr2l,f,c
 33342  00A444  5180               	movf	(nwkRouteErrorReceived@command+1)& (0+255),w,b
 33343  00A446  22DA               	addwfc	fsr2h,f,c
 33344  00A448  006F FF78  F077    	movff	postinc2,nwkRouteRemove@dst
 33345  00A44E  006F FF74  F078    	movff	postdec2,nwkRouteRemove@dst+1
 33346  00A454  EE20 F005          	lfsr	2,5
 33347  00A458  517F               	movf	nwkRouteErrorReceived@command& (0+255),w,b
 33348  00A45A  26D9               	addwf	fsr2l,f,c
 33349  00A45C  5180               	movf	(nwkRouteErrorReceived@command+1)& (0+255),w,b
 33350  00A45E  22DA               	addwfc	fsr2h,f,c
 33351  00A460  50DF               	movf	indf2,w,c
 33352  00A462  0100               	movlb	0	; force () banked
 33353  00A464  6F79               	movwf	nwkRouteRemove@multicast& (0+255),b
 33354  00A466  EC5B  F05A         	call	_nwkRouteRemove	;wreg free
 33355                           
 33356                           ; BSR set to: 0
 33357                           ;../nwk/nwk_src/nwkRoute.c: 366:   return 1;
 33358  00A46A  0E01               	movlw	1
 33359                           
 33360                           ; BSR set to: 0
 33361  00A46C  0012               	return		;funcret
 33362  00A46E                     __end_of_nwkRouteErrorReceived:
 33363                           	callstack 0
 33364                           
 33365 ;; *************** function _nwkRouteRemove *****************
 33366 ;; Defined at:
 33367 ;;		line 185 in file "../nwk/nwk_src/nwkRoute.c"
 33368 ;; Parameters:    Size  Location     Type
 33369 ;;  dst             2   23[BANK0 ] unsigned int 
 33370 ;;  multicast       1   25[BANK0 ] unsigned char 
 33371 ;; Auto vars:     Size  Location     Type
 33372 ;;  entry           2   26[BANK0 ] PTR struct NWK_RouteTabl
 33373 ;;		 -> nwkRouteTable(224), NULL(0), 
 33374 ;; Return value:  Size  Location     Type
 33375 ;;                  1    wreg      void 
 33376 ;; Registers used:
 33377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33378 ;; Tracked objects:
 33379 ;;		On entry : 3F/0
 33380 ;;		On exit  : 3F/0
 33381 ;;		Unchanged: 0/0
 33382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33383 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33384 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33386 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33387 ;;Total ram usage:        5 bytes
 33388 ;; Hardware stack levels used:    1
 33389 ;; Hardware stack levels required when called:   12
 33390 ;; This function calls:
 33391 ;;		_NWK_RouteFindEntry
 33392 ;;		_NWK_RouteFreeEntry
 33393 ;; This function is called by:
 33394 ;;		_nwkRouteErrorReceived
 33395 ;;		_nwkRxRejectDuplicate
 33396 ;; This function uses a non-reentrant model
 33397 ;;
 33398                           
 33399                           	psect	text177
 33400  00B4B6                     __ptext177:
 33401                           	callstack 0
 33402  00B4B6                     _nwkRouteRemove:
 33403                           	callstack 13
 33404                           
 33405                           ;../nwk/nwk_src/nwkRoute.c: 185: void nwkRouteRemove(uint16_t dst, uint8_t multicast);..
      +                          /nwk/nwk_src/nwkRoute.c: 186: {;../nwk/nwk_src/nwkRoute.c: 187:   NWK_RouteTableEntry_t 
      +                          *entry;;../nwk/nwk_src/nwkRoute.c: 189:   entry = NWK_RouteFindEntry(dst, multicast);
 33406                           
 33407                           ; BSR set to: 0
 33408                           ;incstack = 0
 33409  00B4B6  C077  F071         	movff	nwkRouteRemove@dst,NWK_RouteFindEntry@dst
 33410  00B4BA  C078  F072         	movff	nwkRouteRemove@dst+1,NWK_RouteFindEntry@dst+1
 33411  00B4BE  C079  F073         	movff	nwkRouteRemove@multicast,NWK_RouteFindEntry@multicast
 33412  00B4C2  EC41  F050         	call	_NWK_RouteFindEntry	;wreg free
 33413  00B4C6  C071  F07A         	movff	?_NWK_RouteFindEntry,nwkRouteRemove@entry
 33414  00B4CA  C072  F07B         	movff	?_NWK_RouteFindEntry+1,nwkRouteRemove@entry+1
 33415                           
 33416                           ; BSR set to: 0
 33417                           ;../nwk/nwk_src/nwkRoute.c: 190:   if (entry)
 33418  00B4CE  0100               	movlb	0	; force () banked
 33419  00B4D0  517A               	movf	nwkRouteRemove@entry& (0+255),w,b
 33420  00B4D2  117B               	iorwf	(nwkRouteRemove@entry+1)& (0+255),w,b
 33421  00B4D4  B4D8               	btfsc	status,2,c
 33422  00B4D6  0012               	return	
 33423                           
 33424                           ; BSR set to: 0
 33425                           ;../nwk/nwk_src/nwkRoute.c: 191:     NWK_RouteFreeEntry(entry);
 33426  00B4D8  C07A  F071         	movff	nwkRouteRemove@entry,NWK_RouteFreeEntry@entry
 33427  00B4DC  C07B  F072         	movff	nwkRouteRemove@entry+1,NWK_RouteFreeEntry@entry+1
 33428  00B4E0  EC00  F059         	call	_NWK_RouteFreeEntry	;wreg free
 33429                           
 33430                           ; BSR set to: 0
 33431  00B4E4  0012               	return		;funcret
 33432  00B4E6                     __end_of_nwkRouteRemove:
 33433                           	callstack 0
 33434                           
 33435 ;; *************** function _NWK_RouteFreeEntry *****************
 33436 ;; Defined at:
 33437 ;;		line 136 in file "../nwk/nwk_src/nwkRoute.c"
 33438 ;; Parameters:    Size  Location     Type
 33439 ;;  entry           2   17[BANK0 ] PTR struct NWK_RouteTabl
 33440 ;;		 -> nwkRouteTable(224), NULL(0), 
 33441 ;; Auto vars:     Size  Location     Type
 33442 ;;		None
 33443 ;; Return value:  Size  Location     Type
 33444 ;;                  1    wreg      void 
 33445 ;; Registers used:
 33446 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33447 ;; Tracked objects:
 33448 ;;		On entry : 3F/0
 33449 ;;		On exit  : 3F/0
 33450 ;;		Unchanged: 0/0
 33451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33452 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33455 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33456 ;;Total ram usage:        2 bytes
 33457 ;; Hardware stack levels used:    1
 33458 ;; Hardware stack levels required when called:   11
 33459 ;; This function calls:
 33460 ;;		Nothing
 33461 ;; This function is called by:
 33462 ;;		_nwkRouteRemove
 33463 ;;		_nwkRouteFrameSent
 33464 ;; This function uses a non-reentrant model
 33465 ;;
 33466                           
 33467                           	psect	text178
 33468  00B200                     __ptext178:
 33469                           	callstack 0
 33470  00B200                     _NWK_RouteFreeEntry:
 33471                           	callstack 15
 33472                           
 33473                           ;../nwk/nwk_src/nwkRoute.c: 136: void NWK_RouteFreeEntry(NWK_RouteTableEntry_t *entry);.
      +                          ./nwk/nwk_src/nwkRoute.c: 137: {;../nwk/nwk_src/nwkRoute.c: 138:   if (entry->fixed)
 33474                           
 33475                           ; BSR set to: 0
 33476                           ;incstack = 0
 33477  00B200  0060  F1C7  FFD9   	movff	NWK_RouteFreeEntry@entry,fsr2l
 33478  00B206  0060  F1CB  FFDA   	movff	NWK_RouteFreeEntry@entry+1,fsr2h
 33479  00B20C  0100               	movlb	0	; force () banked
 33480  00B20E  B0DF               	btfsc	indf2,0,c
 33481  00B210  0012               	return	
 33482                           
 33483                           ; BSR set to: 0
 33484                           ;../nwk/nwk_src/nwkRoute.c: 140:   entry->dstAddr = 0xffff;
 33485  00B212  0100               	movlb	0	; force () banked
 33486  00B214  EE20 F001          	lfsr	2,1
 33487  00B218  5171               	movf	NWK_RouteFreeEntry@entry& (0+255),w,b
 33488  00B21A  26D9               	addwf	fsr2l,f,c
 33489  00B21C  5172               	movf	(NWK_RouteFreeEntry@entry+1)& (0+255),w,b
 33490  00B21E  22DA               	addwfc	fsr2h,f,c
 33491  00B220  0EFF               	movlw	255
 33492  00B222  6EDE               	movwf	postinc2,c
 33493  00B224  0EFF               	movlw	255
 33494  00B226  6EDD               	movwf	postdec2,c
 33495                           
 33496                           ;../nwk/nwk_src/nwkRoute.c: 141:   entry->rank = 0;
 33497  00B228  EE20 F005          	lfsr	2,5
 33498  00B22C  5171               	movf	NWK_RouteFreeEntry@entry& (0+255),w,b
 33499  00B22E  26D9               	addwf	fsr2l,f,c
 33500  00B230  5172               	movf	(NWK_RouteFreeEntry@entry+1)& (0+255),w,b
 33501  00B232  22DA               	addwfc	fsr2h,f,c
 33502  00B234  0E00               	movlw	0
 33503  00B236  6EDF               	movwf	indf2,c
 33504                           
 33505                           ; BSR set to: 0
 33506  00B238  0012               	return		;funcret
 33507  00B23A                     __end_of_NWK_RouteFreeEntry:
 33508                           	callstack 0
 33509                           
 33510 ;; *************** function _nwkFramePayloadSize *****************
 33511 ;; Defined at:
 33512 ;;		line 145 in file "../nwk/nwk_src/nwkFrame.c"
 33513 ;; Parameters:    Size  Location     Type
 33514 ;;  frame           2   17[BANK0 ] PTR struct NwkFrame_t
 33515 ;;		 -> nwkFrameFrames(690), NULL(0), 
 33516 ;; Auto vars:     Size  Location     Type
 33517 ;;		None
 33518 ;; Return value:  Size  Location     Type
 33519 ;;                  1    wreg      unsigned char 
 33520 ;; Registers used:
 33521 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33522 ;; Tracked objects:
 33523 ;;		On entry : 3F/0
 33524 ;;		On exit  : 3F/0
 33525 ;;		Unchanged: 0/0
 33526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33527 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33529 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33530 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33531 ;;Total ram usage:        4 bytes
 33532 ;; Hardware stack levels used:    1
 33533 ;; Hardware stack levels required when called:   11
 33534 ;; This function calls:
 33535 ;;		Nothing
 33536 ;; This function is called by:
 33537 ;;		_nwkRxIndicateFrame
 33538 ;; This function uses a non-reentrant model
 33539 ;;
 33540                           
 33541                           	psect	text179
 33542  00B3BC                     __ptext179:
 33543                           	callstack 0
 33544  00B3BC                     _nwkFramePayloadSize:
 33545                           	callstack 14
 33546                           
 33547                           ;../nwk/nwk_src/nwkFrame.c: 145: __attribute__((inline)) uint8_t nwkFramePayloadSize(Nwk
      +                          Frame_t *frame);../nwk/nwk_src/nwkFrame.c: 146: {;../nwk/nwk_src/nwkFrame.c: 147:   retu
      +                          rn frame->size - (frame->payload - frame->data);
 33548                           
 33549                           ; BSR set to: 0
 33550                           ;incstack = 0
 33551  00B3BC  0100               	movlb	0	; force () banked
 33552  00B3BE  EE20 F082          	lfsr	2,130
 33553  00B3C2  5171               	movf	nwkFramePayloadSize@frame& (0+255),w,b
 33554  00B3C4  26D9               	addwf	fsr2l,f,c
 33555  00B3C6  5172               	movf	(nwkFramePayloadSize@frame+1)& (0+255),w,b
 33556  00B3C8  22DA               	addwfc	fsr2h,f,c
 33557  00B3CA  50DF               	movf	indf2,w,c
 33558  00B3CC  0100               	movlb	0	; force () banked
 33559  00B3CE  6F73               	movwf	??_nwkFramePayloadSize& (0+255),b
 33560  00B3D0  0100               	movlb	0	; force () banked
 33561  00B3D2  EE20 F001          	lfsr	2,1
 33562  00B3D6  5171               	movf	nwkFramePayloadSize@frame& (0+255),w,b
 33563  00B3D8  26D9               	addwf	fsr2l,f,c
 33564  00B3DA  5172               	movf	(nwkFramePayloadSize@frame+1)& (0+255),w,b
 33565  00B3DC  22DA               	addwfc	fsr2h,f,c
 33566  00B3DE  50DF               	movf	indf2,w,c
 33567  00B3E0  0100               	movlb	0	; force () banked
 33568  00B3E2  6F74               	movwf	(??_nwkFramePayloadSize+1)& (0+255),b
 33569  00B3E4  5173               	movf	??_nwkFramePayloadSize& (0+255),w,b
 33570  00B3E6  5D74               	subwf	(??_nwkFramePayloadSize+1)& (0+255),w,b
 33571  00B3E8  0100               	movlb	0	; force () banked
 33572  00B3EA  2571               	addwf	nwkFramePayloadSize@frame& (0+255),w,b
 33573  00B3EC  0F02               	addlw	2
 33574                           
 33575                           ; BSR set to: 0
 33576  00B3EE  0012               	return		;funcret
 33577  00B3F0                     __end_of_nwkFramePayloadSize:
 33578                           	callstack 0
 33579                           
 33580 ;; *************** function _exract_sink_addr *****************
 33581 ;; Defined at:
 33582 ;;		line 2439 in file "../app/app_src/application.c"
 33583 ;; Parameters:    Size  Location     Type
 33584 ;;  dataptr         2   45[BANK0 ] PTR unsigned char 
 33585 ;;		 -> nwkFrameFrames(690), NULL(0), 
 33586 ;; Auto vars:     Size  Location     Type
 33587 ;;  addrstr         5   55[BANK0 ] volatile unsigned char [
 33588 ;;  tempaddr        2   53[BANK0 ] unsigned int 
 33589 ;;  p2              2   51[BANK0 ] PTR unsigned char 
 33590 ;;		 -> exract_sink_addr@addrstr(5), 
 33591 ;;  p1              2   49[BANK0 ] PTR unsigned char 
 33592 ;;		 -> nwkFrameFrames(690), NULL(0), 
 33593 ;; Return value:  Size  Location     Type
 33594 ;;                  1    wreg      void 
 33595 ;; Registers used:
 33596 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33597 ;; Tracked objects:
 33598 ;;		On entry : 3F/0
 33599 ;;		On exit  : 3F/3
 33600 ;;		Unchanged: 0/0
 33601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33602 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33603 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33604 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33605 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33606 ;;Total ram usage:       15 bytes
 33607 ;; Hardware stack levels used:    1
 33608 ;; Hardware stack levels required when called:   14
 33609 ;; This function calls:
 33610 ;;		_DATAEE_WriteByte_Platform
 33611 ;;		_memcpy
 33612 ;;		_memset
 33613 ;;		_strstr
 33614 ;;		_strtol
 33615 ;; This function is called by:
 33616 ;;		_appManagementEp
 33617 ;; This function uses a non-reentrant model
 33618 ;;
 33619                           
 33620                           	psect	text180
 33621  007AF8                     __ptext180:
 33622                           	callstack 0
 33623  007AF8                     _exract_sink_addr:
 33624                           	callstack 10
 33625                           
 33626                           ;../app/app_src/application.c: 2440:     uint16_t tempaddr;;../app/app_src/application.c
      +                          : 2441:     char *p1,*p2;;../app/app_src/application.c: 2442:     volatile char addrstr[
      +                          5];;../app/app_src/application.c: 2443:     memset(addrstr,0,sizeof(addrstr));
 33627                           
 33628                           ; BSR set to: 0
 33629                           ;incstack = 0
 33630  007AF8  0E97               	movlw	low exract_sink_addr@addrstr
 33631  007AFA  0100               	movlb	0	; force () banked
 33632  007AFC  6F71               	movwf	memset@p1& (0+255),b
 33633  007AFE  0E00               	movlw	high exract_sink_addr@addrstr
 33634  007B00  6F72               	movwf	(memset@p1+1)& (0+255),b
 33635  007B02  0E00               	movlw	0
 33636  007B04  0100               	movlb	0	; force () banked
 33637  007B06  6F74               	movwf	(memset@c+1)& (0+255),b
 33638  007B08  0E00               	movlw	0
 33639  007B0A  6F73               	movwf	memset@c& (0+255),b
 33640  007B0C  0E00               	movlw	0
 33641  007B0E  0100               	movlb	0	; force () banked
 33642  007B10  6F76               	movwf	(memset@n+1)& (0+255),b
 33643  007B12  0E05               	movlw	5
 33644  007B14  6F75               	movwf	memset@n& (0+255),b
 33645  007B16  ECA8  F058         	call	_memset	;wreg free
 33646                           
 33647                           ; BSR set to: 0
 33648                           ;../app/app_src/application.c: 2444:     p1 = strstr(dataptr,"=");
 33649  007B1A  C08D  F07E         	movff	exract_sink_addr@dataptr,strstr@s1
 33650  007B1E  C08E  F07F         	movff	exract_sink_addr@dataptr+1,strstr@s1+1
 33651  007B22  0EFC               	movlw	low STR_4
 33652  007B24  0100               	movlb	0	; force () banked
 33653  007B26  6F80               	movwf	strstr@s2& (0+255),b
 33654  007B28  0EFF               	movlw	high STR_4
 33655  007B2A  6F81               	movwf	(strstr@s2+1)& (0+255),b
 33656  007B2C  EC84  F04A         	call	_strstr	;wreg free
 33657  007B30  C07E  F091         	movff	?_strstr,exract_sink_addr@p1
 33658  007B34  C07F  F092         	movff	?_strstr+1,exract_sink_addr@p1+1
 33659                           
 33660                           ; BSR set to: 0
 33661                           ;../app/app_src/application.c: 2445:     p1++;
 33662  007B38  0100               	movlb	0	; force () banked
 33663  007B3A  4B91               	infsnz	exract_sink_addr@p1& (0+255),f,b
 33664  007B3C  2B92               	incf	(exract_sink_addr@p1+1)& (0+255),f,b
 33665                           
 33666                           ; BSR set to: 0
 33667                           ;../app/app_src/application.c: 2446:     memcpy(addrstr,p1,4);
 33668  007B3E  0E97               	movlw	low exract_sink_addr@addrstr
 33669  007B40  0100               	movlb	0	; force () banked
 33670  007B42  6F77               	movwf	memcpy@d1& (0+255),b
 33671  007B44  0E00               	movlw	high exract_sink_addr@addrstr
 33672  007B46  6F78               	movwf	(memcpy@d1+1)& (0+255),b
 33673  007B48  C091  F079         	movff	exract_sink_addr@p1,memcpy@s1
 33674  007B4C  C092  F07A         	movff	exract_sink_addr@p1+1,memcpy@s1+1
 33675  007B50  0100               	movlb	0	; force () banked
 33676  007B52  5179               	movf	memcpy@s1& (0+255),w,b
 33677  007B54  117A               	iorwf	(memcpy@s1+1)& (0+255),w,b
 33678  007B56  A4D8               	btfss	status,2,c
 33679  007B58  0E20               	movlw	32
 33680  007B5A  6F7B               	movwf	(memcpy@s1+2)& (0+255),b
 33681  007B5C  0E00               	movlw	0
 33682  007B5E  0100               	movlb	0	; force () banked
 33683  007B60  6F7D               	movwf	(memcpy@n+1)& (0+255),b
 33684  007B62  0E04               	movlw	4
 33685  007B64  6F7C               	movwf	memcpy@n& (0+255),b
 33686  007B66  ECC1  F04F         	call	_memcpy	;wreg free
 33687                           
 33688                           ; BSR set to: 0
 33689                           ;../app/app_src/application.c: 2448:     tempaddr = ((unsigned long)strtol((addrstr),(&p
      +                          2),(16)));
 33690  007B6A  0E97               	movlw	low exract_sink_addr@addrstr
 33691  007B6C  0100               	movlb	0	; force () banked
 33692  007B6E  6F7D               	movwf	strtol@s& (0+255),b
 33693  007B70  0E00               	movlw	high exract_sink_addr@addrstr
 33694  007B72  6F7E               	movwf	(strtol@s+1)& (0+255),b
 33695  007B74  0E93               	movlw	low exract_sink_addr@p2
 33696  007B76  0100               	movlb	0	; force () banked
 33697  007B78  6F7F               	movwf	strtol@endptr& (0+255),b
 33698  007B7A  0E00               	movlw	high exract_sink_addr@p2
 33699  007B7C  6F80               	movwf	(strtol@endptr+1)& (0+255),b
 33700  007B7E  0E00               	movlw	0
 33701  007B80  0100               	movlb	0	; force () banked
 33702  007B82  6F82               	movwf	(strtol@base+1)& (0+255),b
 33703  007B84  0E10               	movlw	16
 33704  007B86  6F81               	movwf	strtol@base& (0+255),b
 33705  007B88  EC6C  F025         	call	_strtol	;wreg free
 33706  007B8C  C07D  F095         	movff	?_strtol,exract_sink_addr@tempaddr
 33707  007B90  C07E  F096         	movff	?_strtol+1,exract_sink_addr@tempaddr+1
 33708                           
 33709                           ; BSR set to: 0
 33710                           ;../app/app_src/application.c: 2449:     sinkAddr0 = (uint8_t)(tempaddr >> 8);
 33711  007B94  C096  F0E0         	movff	exract_sink_addr@tempaddr+1,_sinkAddr0
 33712                           
 33713                           ; BSR set to: 0
 33714                           ;../app/app_src/application.c: 2450:     sinkAddr1 = (uint8_t)(tempaddr & 0xFF);
 33715  007B98  C095  F0DF         	movff	exract_sink_addr@tempaddr,_sinkAddr1
 33716                           
 33717                           ; BSR set to: 0
 33718                           ;../app/app_src/application.c: 2452:     DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1,sinkAddr0);
 33719  007B9C  0E00               	movlw	0
 33720  007B9E  0100               	movlb	0	; force () banked
 33721  007BA0  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
 33722  007BA2  0E1B               	movlw	27
 33723  007BA4  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
 33724  007BA6  C0E0  F077         	movff	_sinkAddr0,DATAEE_WriteByte_Platform@data
 33725  007BAA  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
 33726                           
 33727                           ;../app/app_src/application.c: 2453:     DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1,sinkAddr1);
 33728  007BAE  0E00               	movlw	0
 33729  007BB0  0100               	movlb	0	; force () banked
 33730  007BB2  6F76               	movwf	(DATAEE_WriteByte_Platform@addr+1)& (0+255),b
 33731  007BB4  0E1C               	movlw	28
 33732  007BB6  6F75               	movwf	DATAEE_WriteByte_Platform@addr& (0+255),b
 33733  007BB8  C0DF  F077         	movff	_sinkAddr1,DATAEE_WriteByte_Platform@data
 33734  007BBC  EC09  F056         	call	_DATAEE_WriteByte_Platform	;wreg free
 33735                           
 33736                           ;../app/app_src/application.c: 2455:     read_only_mb_regs[RO_SINK_ID] = (sinkAddr0 << 8
      +                          ) | (sinkAddr1);
 33737  007BC0  0100               	movlb	0	; force () banked
 33738  007BC2  51DF               	movf	_sinkAddr1& (0+255),w,b
 33739  007BC4  C0E0  F08F         	movff	_sinkAddr0,??_exract_sink_addr
 33740  007BC8  0100               	movlb	0	; force () banked
 33741  007BCA  6B90               	clrf	(??_exract_sink_addr+1)& (0+255),b
 33742  007BCC  C08F  F090         	movff	??_exract_sink_addr,??_exract_sink_addr+1
 33743  007BD0  6B8F               	clrf	??_exract_sink_addr& (0+255),b
 33744  007BD2  118F               	iorwf	??_exract_sink_addr& (0+255),w,b
 33745  007BD4  0103               	movlb	3	; force () banked
 33746  007BD6  6F5E               	movwf	(_read_only_mb_regs+14)& (0+255),b
 33747  007BD8  0100               	movlb	0	; force () banked
 33748  007BDA  5190               	movf	(??_exract_sink_addr+1)& (0+255),w,b
 33749  007BDC  0103               	movlb	3	; force () banked
 33750  007BDE  6F5F               	movwf	(_read_only_mb_regs+15)& (0+255),b
 33751                           
 33752                           ; BSR set to: 3
 33753  007BE0  0012               	return		;funcret
 33754  007BE2                     __end_of_exract_sink_addr:
 33755                           	callstack 0
 33756                           
 33757 ;; *************** function _strtol *****************
 33758 ;; Defined at:
 33759 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strtol.c"
 33760 ;; Parameters:    Size  Location     Type
 33761 ;;  s               2   29[BANK0 ] PTR const unsigned char 
 33762 ;;		 -> exract_sink_addr@addrstr(5), 
 33763 ;;  endptr          2   31[BANK0 ] PTR PTR unsigned char 
 33764 ;;		 -> exract_sink_addr@p2(2), 
 33765 ;;  base            2   33[BANK0 ] int 
 33766 ;; Auto vars:     Size  Location     Type
 33767 ;;  a               4   40[BANK0 ] long 
 33768 ;;  c               1   44[BANK0 ] unsigned char 
 33769 ;;  sign            1   39[BANK0 ] unsigned char 
 33770 ;; Return value:  Size  Location     Type
 33771 ;;                  4   29[BANK0 ] long 
 33772 ;; Registers used:
 33773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33774 ;; Tracked objects:
 33775 ;;		On entry : 3F/0
 33776 ;;		On exit  : 3F/0
 33777 ;;		Unchanged: 0/0
 33778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33779 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33780 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33781 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33782 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33783 ;;Total ram usage:       16 bytes
 33784 ;; Hardware stack levels used:    1
 33785 ;; Hardware stack levels required when called:   13
 33786 ;; This function calls:
 33787 ;;		___lmul
 33788 ;;		_isalpha
 33789 ;;		_isdigit
 33790 ;;		_isspace
 33791 ;;		_toupper
 33792 ;; This function is called by:
 33793 ;;		_exract_sink_addr
 33794 ;; This function uses a non-reentrant model
 33795 ;;
 33796                           
 33797                           	psect	text181
 33798  004AD8                     __ptext181:
 33799                           	callstack 0
 33800  004AD8                     _strtol:
 33801                           	callstack 10
 33802                           
 33803                           ; BSR set to: 3
 33804                           ;incstack = 0
 33805  004AD8  0060  F1F7  FFD9   	movff	strtol@s,fsr2l
 33806  004ADE  0060  F1FB  FFDA   	movff	strtol@s+1,fsr2h
 33807  004AE4  50DF               	movf	indf2,w,c
 33808  004AE6  0100               	movlb	0	; () banked
 33809  004AE8  6F8C               	movwf	strtol@c& (0+255),b
 33810                           
 33811                           ; BSR set to: 0
 33812  004AEA  4B7D               	infsnz	strtol@s& (0+255),f,b
 33813  004AEC  2B7E               	incf	(strtol@s+1)& (0+255),f,b
 33814                           
 33815                           ; BSR set to: 0
 33816  004AEE  518C               	movf	strtol@c& (0+255),w,b
 33817  004AF0  EC4E  F05B         	call	_isspace
 33818  004AF4  B0D8               	btfsc	status,0,c
 33819  004AF6  D7F0               	goto	_strtol
 33820                           
 33821                           ; BSR set to: 0
 33822  004AF8  0E00               	movlw	0
 33823  004AFA  6F88               	movwf	strtol@a& (0+255),b
 33824  004AFC  0E00               	movlw	0
 33825  004AFE  6F89               	movwf	(strtol@a+1)& (0+255),b
 33826  004B00  0E00               	movlw	0
 33827  004B02  6F8A               	movwf	(strtol@a+2)& (0+255),b
 33828  004B04  0E00               	movlw	0
 33829  004B06  6F8B               	movwf	(strtol@a+3)& (0+255),b
 33830  004B08  0E00               	movlw	0
 33831  004B0A  6F87               	movwf	strtol@sign& (0+255),b
 33832                           
 33833                           ; BSR set to: 0
 33834  004B0C  0E2D               	movlw	45
 33835  004B0E  198C               	xorwf	strtol@c& (0+255),w,b
 33836  004B10  A4D8               	btfss	status,2,c
 33837  004B12  D003               	goto	l17848
 33838                           
 33839                           ; BSR set to: 0
 33840  004B14  0E01               	movlw	1
 33841  004B16  6F87               	movwf	strtol@sign& (0+255),b
 33842  004B18  D004               	goto	L50
 33843  004B1A                     l17848:
 33844                           
 33845                           ; BSR set to: 0
 33846  004B1A  0E2B               	movlw	43
 33847  004B1C  198C               	xorwf	strtol@c& (0+255),w,b
 33848  004B1E  A4D8               	btfss	status,2,c
 33849  004B20  D00A               	goto	l17854
 33850  004B22                     L50:
 33851                           
 33852                           ; BSR set to: 0
 33853  004B22  0060  F1F7  FFD9   	movff	strtol@s,fsr2l
 33854  004B28  0060  F1FB  FFDA   	movff	strtol@s+1,fsr2h
 33855  004B2E  50DF               	movf	indf2,w,c
 33856  004B30  6F8C               	movwf	strtol@c& (0+255),b
 33857                           
 33858                           ; BSR set to: 0
 33859  004B32  4B7D               	infsnz	strtol@s& (0+255),f,b
 33860  004B34  2B7E               	incf	(strtol@s+1)& (0+255),f,b
 33861  004B36                     l17854:
 33862                           
 33863                           ; BSR set to: 0
 33864  004B36  0E30               	movlw	48
 33865  004B38  198C               	xorwf	strtol@c& (0+255),w,b
 33866  004B3A  A4D8               	btfss	status,2,c
 33867  004B3C  D032               	goto	l17878
 33868                           
 33869                           ; BSR set to: 0
 33870  004B3E  0060  F1F7  FFD9   	movff	strtol@s,fsr2l
 33871  004B44  0060  F1FB  FFDA   	movff	strtol@s+1,fsr2h
 33872  004B4A  50DF               	movf	indf2,w,c
 33873  004B4C  6F8C               	movwf	strtol@c& (0+255),b
 33874                           
 33875                           ; BSR set to: 0
 33876  004B4E  4B7D               	infsnz	strtol@s& (0+255),f,b
 33877  004B50  2B7E               	incf	(strtol@s+1)& (0+255),f,b
 33878                           
 33879                           ; BSR set to: 0
 33880  004B52  5181               	movf	strtol@base& (0+255),w,b
 33881  004B54  1182               	iorwf	(strtol@base+1)& (0+255),w,b
 33882  004B56  B4D8               	btfsc	status,2,c
 33883  004B58  D005               	goto	u15380
 33884                           
 33885                           ; BSR set to: 0
 33886  004B5A  0E10               	movlw	16
 33887  004B5C  1981               	xorwf	strtol@base& (0+255),w,b
 33888  004B5E  1182               	iorwf	(strtol@base+1)& (0+255),w,b
 33889  004B60  A4D8               	btfss	status,2,c
 33890  004B62  D017               	goto	l17874
 33891  004B64                     u15380:
 33892                           
 33893                           ; BSR set to: 0
 33894  004B64  0E78               	movlw	120
 33895  004B66  198C               	xorwf	strtol@c& (0+255),w,b
 33896  004B68  B4D8               	btfsc	status,2,c
 33897  004B6A  D004               	goto	u15400
 33898                           
 33899                           ; BSR set to: 0
 33900  004B6C  0E58               	movlw	88
 33901  004B6E  198C               	xorwf	strtol@c& (0+255),w,b
 33902  004B70  A4D8               	btfss	status,2,c
 33903  004B72  D00F               	goto	l17874
 33904  004B74                     u15400:
 33905                           
 33906                           ; BSR set to: 0
 33907  004B74  0E00               	movlw	0
 33908  004B76  6F82               	movwf	(strtol@base+1)& (0+255),b
 33909  004B78  0E10               	movlw	16
 33910  004B7A  6F81               	movwf	strtol@base& (0+255),b
 33911                           
 33912                           ; BSR set to: 0
 33913  004B7C  0060  F1F7  FFD9   	movff	strtol@s,fsr2l
 33914  004B82  0060  F1FB  FFDA   	movff	strtol@s+1,fsr2h
 33915  004B88  50DF               	movf	indf2,w,c
 33916  004B8A  6F8C               	movwf	strtol@c& (0+255),b
 33917                           
 33918                           ; BSR set to: 0
 33919  004B8C  4B7D               	infsnz	strtol@s& (0+255),f,b
 33920  004B8E  2B7E               	incf	(strtol@s+1)& (0+255),f,b
 33921  004B90  D008               	goto	l17878
 33922  004B92                     l17874:
 33923                           
 33924                           ; BSR set to: 0
 33925  004B92  5181               	movf	strtol@base& (0+255),w,b
 33926  004B94  1182               	iorwf	(strtol@base+1)& (0+255),w,b
 33927  004B96  A4D8               	btfss	status,2,c
 33928  004B98  D004               	goto	l17878
 33929                           
 33930                           ; BSR set to: 0
 33931  004B9A  0E00               	movlw	0
 33932  004B9C  6F82               	movwf	(strtol@base+1)& (0+255),b
 33933  004B9E  0E08               	movlw	8
 33934  004BA0  6F81               	movwf	strtol@base& (0+255),b
 33935  004BA2                     l17878:
 33936                           
 33937                           ; BSR set to: 0
 33938  004BA2  5181               	movf	strtol@base& (0+255),w,b
 33939  004BA4  1182               	iorwf	(strtol@base+1)& (0+255),w,b
 33940  004BA6  A4D8               	btfss	status,2,c
 33941  004BA8  D004               	goto	l17882
 33942                           
 33943                           ; BSR set to: 0
 33944  004BAA  0E00               	movlw	0
 33945  004BAC  6F82               	movwf	(strtol@base+1)& (0+255),b
 33946  004BAE  0E0A               	movlw	10
 33947  004BB0  6F81               	movwf	strtol@base& (0+255),b
 33948  004BB2                     l17882:
 33949                           
 33950                           ; BSR set to: 0
 33951  004BB2  518C               	movf	strtol@c& (0+255),w,b
 33952  004BB4  ECB7  F05A         	call	_isalpha
 33953  004BB8  A0D8               	btfss	status,0,c
 33954  004BBA  D006               	goto	l17886
 33955                           
 33956                           ; BSR set to: 0
 33957  004BBC  518C               	movf	strtol@c& (0+255),w,b
 33958  004BBE  EC89  F05D         	call	_toupper
 33959  004BC2  0FC9               	addlw	201
 33960  004BC4  6F8C               	movwf	strtol@c& (0+255),b
 33961  004BC6  D007               	goto	l17890
 33962  004BC8                     l17886:
 33963                           
 33964                           ; BSR set to: 0
 33965  004BC8  518C               	movf	strtol@c& (0+255),w,b
 33966  004BCA  EC66  F05C         	call	_isdigit
 33967  004BCE  A0D8               	btfss	status,0,c
 33968  004BD0  D039               	goto	l17900
 33969                           
 33970                           ; BSR set to: 0
 33971  004BD2  0E30               	movlw	48
 33972  004BD4  5F8C               	subwf	strtol@c& (0+255),f,b
 33973  004BD6                     l17890:
 33974                           
 33975                           ; BSR set to: 0
 33976  004BD6  518C               	movf	strtol@c& (0+255),w,b
 33977  004BD8  6F83               	movwf	??_strtol& (0+255),b
 33978  004BDA  6B84               	clrf	(??_strtol+1)& (0+255),b
 33979  004BDC  5181               	movf	strtol@base& (0+255),w,b
 33980  004BDE  5D83               	subwf	??_strtol& (0+255),w,b
 33981  004BE0  5184               	movf	(??_strtol+1)& (0+255),w,b
 33982  004BE2  0A80               	xorlw	128
 33983  004BE4  6F85               	movwf	(??_strtol+2)& (0+255),b
 33984  004BE6  5182               	movf	(strtol@base+1)& (0+255),w,b
 33985  004BE8  0A80               	xorlw	128
 33986  004BEA  5985               	subwfb	(??_strtol+2)& (0+255),w,b
 33987  004BEC  B0D8               	btfsc	status,0,c
 33988  004BEE  D02A               	goto	l17900
 33989                           
 33990                           ; BSR set to: 0
 33991  004BF0  C081  F071         	movff	strtol@base,___lmul@multiplier
 33992  004BF4  C082  F072         	movff	strtol@base+1,___lmul@multiplier+1
 33993  004BF8  0E00               	movlw	0
 33994  004BFA  BF72               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 33995  004BFC  0EFF               	movlw	-1
 33996  004BFE  6F73               	movwf	(___lmul@multiplier+2)& (0+255),b
 33997  004C00  6F74               	movwf	(___lmul@multiplier+3)& (0+255),b
 33998  004C02  C088  F075         	movff	strtol@a,___lmul@multiplicand
 33999  004C06  C089  F076         	movff	strtol@a+1,___lmul@multiplicand+1
 34000  004C0A  C08A  F077         	movff	strtol@a+2,___lmul@multiplicand+2
 34001  004C0E  C08B  F078         	movff	strtol@a+3,___lmul@multiplicand+3
 34002  004C12  ECDC  F053         	call	___lmul	;wreg free
 34003  004C16  518C               	movf	strtol@c& (0+255),w,b
 34004  004C18  2571               	addwf	?___lmul& (0+255),w,b
 34005  004C1A  6F88               	movwf	strtol@a& (0+255),b
 34006  004C1C  0E00               	movlw	0
 34007  004C1E  2172               	addwfc	(?___lmul+1)& (0+255),w,b
 34008  004C20  6F89               	movwf	(strtol@a+1)& (0+255),b
 34009  004C22  0E00               	movlw	0
 34010  004C24  2173               	addwfc	(?___lmul+2)& (0+255),w,b
 34011  004C26  6F8A               	movwf	(strtol@a+2)& (0+255),b
 34012  004C28  0E00               	movlw	0
 34013  004C2A  2174               	addwfc	(?___lmul+3)& (0+255),w,b
 34014  004C2C  6F8B               	movwf	(strtol@a+3)& (0+255),b
 34015                           
 34016                           ; BSR set to: 0
 34017  004C2E  0060  F1F7  FFD9   	movff	strtol@s,fsr2l
 34018  004C34  0060  F1FB  FFDA   	movff	strtol@s+1,fsr2h
 34019  004C3A  50DF               	movf	indf2,w,c
 34020  004C3C  6F8C               	movwf	strtol@c& (0+255),b
 34021                           
 34022                           ; BSR set to: 0
 34023  004C3E  4B7D               	infsnz	strtol@s& (0+255),f,b
 34024  004C40  2B7E               	incf	(strtol@s+1)& (0+255),f,b
 34025  004C42  D7B7               	goto	l17882
 34026  004C44                     l17900:
 34027                           
 34028                           ; BSR set to: 0
 34029  004C44  517F               	movf	strtol@endptr& (0+255),w,b
 34030  004C46  1180               	iorwf	(strtol@endptr+1)& (0+255),w,b
 34031  004C48  B4D8               	btfsc	status,2,c
 34032  004C4A  D012               	goto	l17904
 34033                           
 34034                           ; BSR set to: 0
 34035  004C4C  0EFF               	movlw	255
 34036  004C4E  257D               	addwf	strtol@s& (0+255),w,b
 34037  004C50  6F83               	movwf	??_strtol& (0+255),b
 34038  004C52  0EFF               	movlw	255
 34039  004C54  217E               	addwfc	(strtol@s+1)& (0+255),w,b
 34040  004C56  6F84               	movwf	(??_strtol+1)& (0+255),b
 34041  004C58  0060  F1FF  FFD9   	movff	strtol@endptr,fsr2l
 34042  004C5E  0060  F203  FFDA   	movff	strtol@endptr+1,fsr2h
 34043  004C64  0060  F20F  FFDE   	movff	??_strtol,postinc2
 34044  004C6A  0060  F213  FFDD   	movff	??_strtol+1,postdec2
 34045  004C70                     l17904:
 34046                           
 34047                           ; BSR set to: 0
 34048  004C70  5187               	movf	strtol@sign& (0+255),w,b
 34049  004C72  B4D8               	btfsc	status,2,c
 34050  004C74  D01A               	goto	l4901
 34051                           
 34052                           ; BSR set to: 0
 34053  004C76  C088  F083         	movff	strtol@a,??_strtol
 34054  004C7A  C089  F084         	movff	strtol@a+1,??_strtol+1
 34055  004C7E  C08A  F085         	movff	strtol@a+2,??_strtol+2
 34056  004C82  C08B  F086         	movff	strtol@a+3,??_strtol+3
 34057  004C86  1F83               	comf	??_strtol& (0+255),f,b
 34058  004C88  1F84               	comf	(??_strtol+1)& (0+255),f,b
 34059  004C8A  1F85               	comf	(??_strtol+2)& (0+255),f,b
 34060  004C8C  1F86               	comf	(??_strtol+3)& (0+255),f,b
 34061  004C8E  2B83               	incf	??_strtol& (0+255),f,b
 34062  004C90  0E00               	movlw	0
 34063  004C92  2384               	addwfc	(??_strtol+1)& (0+255),f,b
 34064  004C94  2385               	addwfc	(??_strtol+2)& (0+255),f,b
 34065  004C96  2386               	addwfc	(??_strtol+3)& (0+255),f,b
 34066  004C98  C083  F07D         	movff	??_strtol,?_strtol
 34067  004C9C  C084  F07E         	movff	??_strtol+1,?_strtol+1
 34068  004CA0  C085  F07F         	movff	??_strtol+2,?_strtol+2
 34069  004CA4  C086  F080         	movff	??_strtol+3,?_strtol+3
 34070  004CA8  0012               	return	
 34071  004CAA                     l4901:
 34072                           
 34073                           ; BSR set to: 0
 34074  004CAA  C088  F07D         	movff	strtol@a,?_strtol
 34075  004CAE  C089  F07E         	movff	strtol@a+1,?_strtol+1
 34076  004CB2  C08A  F07F         	movff	strtol@a+2,?_strtol+2
 34077  004CB6  C08B  F080         	movff	strtol@a+3,?_strtol+3
 34078                           
 34079                           ; BSR set to: 0
 34080  004CBA  0012               	return		;funcret
 34081  004CBC                     __end_of_strtol:
 34082                           	callstack 0
 34083                           
 34084 ;; *************** function _toupper *****************
 34085 ;; Defined at:
 34086 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\toupper.c"
 34087 ;; Parameters:    Size  Location     Type
 34088 ;;  c               1    wreg     unsigned char 
 34089 ;; Auto vars:     Size  Location     Type
 34090 ;;  c               1   17[BANK0 ] unsigned char 
 34091 ;; Return value:  Size  Location     Type
 34092 ;;                  1    wreg      unsigned char 
 34093 ;; Registers used:
 34094 ;;		wreg, status,2, status,0
 34095 ;; Tracked objects:
 34096 ;;		On entry : 3F/0
 34097 ;;		On exit  : 3F/0
 34098 ;;		Unchanged: 0/0
 34099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34101 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34103 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34104 ;;Total ram usage:        1 bytes
 34105 ;; Hardware stack levels used:    1
 34106 ;; Hardware stack levels required when called:   11
 34107 ;; This function calls:
 34108 ;;		Nothing
 34109 ;; This function is called by:
 34110 ;;		_strtol
 34111 ;; This function uses a non-reentrant model
 34112 ;;
 34113                           
 34114                           	psect	text182
 34115  00BB12                     __ptext182:
 34116                           	callstack 0
 34117  00BB12                     _toupper:
 34118                           	callstack 11
 34119                           
 34120                           ; BSR set to: 0
 34121                           ;incstack = 0
 34122                           ;toupper@c stored from wreg
 34123  00BB12  0100               	movlb	0	; () banked
 34124  00BB14  6F71               	movwf	toupper@c& (0+255),b
 34125  00BB16  0E7B               	movlw	123
 34126  00BB18  0100               	movlb	0	; () banked
 34127  00BB1A  6171               	cpfslt	toupper@c& (0+255),b
 34128  00BB1C  D004               	goto	l17684
 34129                           
 34130                           ; BSR set to: 0
 34131  00BB1E  0E60               	movlw	96
 34132  00BB20  6571               	cpfsgt	toupper@c& (0+255),b
 34133  00BB22  D001               	goto	l17684
 34134                           
 34135                           ; BSR set to: 0
 34136  00BB24  9B71               	bcf	toupper@c& (0+255),5,b
 34137  00BB26                     l17684:
 34138                           
 34139                           ; BSR set to: 0
 34140  00BB26  5171               	movf	toupper@c& (0+255),w,b
 34141                           
 34142                           ; BSR set to: 0
 34143  00BB28  0012               	return		;funcret
 34144  00BB2A                     __end_of_toupper:
 34145                           	callstack 0
 34146                           
 34147 ;; *************** function _isspace *****************
 34148 ;; Defined at:
 34149 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isspace.c"
 34150 ;; Parameters:    Size  Location     Type
 34151 ;;  c               1    wreg     unsigned char 
 34152 ;; Auto vars:     Size  Location     Type
 34153 ;;  c               1   19[BANK0 ] unsigned char 
 34154 ;; Return value:  Size  Location     Type
 34155 ;;		None               void
 34156 ;; Registers used:
 34157 ;;		wreg, status,2, status,0
 34158 ;; Tracked objects:
 34159 ;;		On entry : 3F/0
 34160 ;;		On exit  : 3F/0
 34161 ;;		Unchanged: 0/0
 34162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34164 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34165 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34166 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34167 ;;Total ram usage:        3 bytes
 34168 ;; Hardware stack levels used:    1
 34169 ;; Hardware stack levels required when called:   11
 34170 ;; This function calls:
 34171 ;;		Nothing
 34172 ;; This function is called by:
 34173 ;;		_strtol
 34174 ;; This function uses a non-reentrant model
 34175 ;;
 34176                           
 34177                           	psect	text183
 34178  00B69C                     __ptext183:
 34179                           	callstack 0
 34180  00B69C                     _isspace:
 34181                           	callstack 11
 34182                           
 34183                           ; BSR set to: 0
 34184                           ;incstack = 0
 34185                           ;isspace@c stored from wreg
 34186  00B69C  0100               	movlb	0	; () banked
 34187  00B69E  6F73               	movwf	isspace@c& (0+255),b
 34188  00B6A0  0E01               	movlw	1
 34189  00B6A2  0100               	movlb	0	; () banked
 34190  00B6A4  6F72               	movwf	_isspace$9732& (0+255),b
 34191                           
 34192                           ; BSR set to: 0
 34193  00B6A6  0E20               	movlw	32
 34194  00B6A8  1973               	xorwf	isspace@c& (0+255),w,b
 34195  00B6AA  B4D8               	btfsc	status,2,c
 34196  00B6AC  D008               	goto	l17660
 34197                           
 34198                           ; BSR set to: 0
 34199  00B6AE  0E0E               	movlw	14
 34200  00B6B0  6173               	cpfslt	isspace@c& (0+255),b
 34201  00B6B2  D003               	goto	u15120
 34202                           
 34203                           ; BSR set to: 0
 34204  00B6B4  0E09               	movlw	9
 34205  00B6B6  6173               	cpfslt	isspace@c& (0+255),b
 34206  00B6B8  D002               	goto	l17660
 34207  00B6BA                     u15120:
 34208                           
 34209                           ; BSR set to: 0
 34210  00B6BA  0E00               	movlw	0
 34211  00B6BC  6F72               	movwf	_isspace$9732& (0+255),b
 34212  00B6BE                     l17660:
 34213                           
 34214                           ; BSR set to: 0
 34215  00B6BE  C072  F071         	movff	_isspace$9732,??_isspace
 34216  00B6C2  3171               	rrcf	??_isspace& (0+255),w,b
 34217                           
 34218                           ; BSR set to: 0
 34219  00B6C4  0012               	return		;funcret
 34220  00B6C6                     __end_of_isspace:
 34221                           	callstack 0
 34222                           
 34223 ;; *************** function _isdigit *****************
 34224 ;; Defined at:
 34225 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
 34226 ;; Parameters:    Size  Location     Type
 34227 ;;  c               1    wreg     unsigned char 
 34228 ;; Auto vars:     Size  Location     Type
 34229 ;;  c               1   19[BANK0 ] unsigned char 
 34230 ;; Return value:  Size  Location     Type
 34231 ;;		None               void
 34232 ;; Registers used:
 34233 ;;		wreg, status,2, status,0
 34234 ;; Tracked objects:
 34235 ;;		On entry : 3F/0
 34236 ;;		On exit  : 3F/0
 34237 ;;		Unchanged: 0/0
 34238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34240 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34241 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34242 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34243 ;;Total ram usage:        3 bytes
 34244 ;; Hardware stack levels used:    1
 34245 ;; Hardware stack levels required when called:   11
 34246 ;; This function calls:
 34247 ;;		Nothing
 34248 ;; This function is called by:
 34249 ;;		_strtol
 34250 ;; This function uses a non-reentrant model
 34251 ;;
 34252                           
 34253                           	psect	text184
 34254  00B8CC                     __ptext184:
 34255                           	callstack 0
 34256  00B8CC                     _isdigit:
 34257                           	callstack 11
 34258                           
 34259                           ; BSR set to: 0
 34260                           ;incstack = 0
 34261                           ;isdigit@c stored from wreg
 34262  00B8CC  0100               	movlb	0	; () banked
 34263  00B8CE  6F73               	movwf	isdigit@c& (0+255),b
 34264  00B8D0  0E00               	movlw	0
 34265  00B8D2  0100               	movlb	0	; () banked
 34266  00B8D4  6F72               	movwf	_isdigit$9729& (0+255),b
 34267                           
 34268                           ; BSR set to: 0
 34269  00B8D6  0E3A               	movlw	58
 34270  00B8D8  6173               	cpfslt	isdigit@c& (0+255),b
 34271  00B8DA  D005               	goto	l17696
 34272                           
 34273                           ; BSR set to: 0
 34274  00B8DC  0E2F               	movlw	47
 34275  00B8DE  6573               	cpfsgt	isdigit@c& (0+255),b
 34276  00B8E0  D002               	goto	l17696
 34277                           
 34278                           ; BSR set to: 0
 34279  00B8E2  0E01               	movlw	1
 34280  00B8E4  6F72               	movwf	_isdigit$9729& (0+255),b
 34281  00B8E6                     l17696:
 34282                           
 34283                           ; BSR set to: 0
 34284  00B8E6  C072  F071         	movff	_isdigit$9729,??_isdigit
 34285  00B8EA  3171               	rrcf	??_isdigit& (0+255),w,b
 34286                           
 34287                           ; BSR set to: 0
 34288  00B8EC  0012               	return		;funcret
 34289  00B8EE                     __end_of_isdigit:
 34290                           	callstack 0
 34291                           
 34292 ;; *************** function _isalpha *****************
 34293 ;; Defined at:
 34294 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isalpha.c"
 34295 ;; Parameters:    Size  Location     Type
 34296 ;;  c               1    wreg     unsigned char 
 34297 ;; Auto vars:     Size  Location     Type
 34298 ;;  c               1   22[BANK0 ] unsigned char 
 34299 ;; Return value:  Size  Location     Type
 34300 ;;		None               void
 34301 ;; Registers used:
 34302 ;;		wreg, status,2, status,0, cstack
 34303 ;; Tracked objects:
 34304 ;;		On entry : 3F/0
 34305 ;;		On exit  : 3F/0
 34306 ;;		Unchanged: 0/0
 34307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34309 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34310 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34311 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34312 ;;Total ram usage:        3 bytes
 34313 ;; Hardware stack levels used:    1
 34314 ;; Hardware stack levels required when called:   12
 34315 ;; This function calls:
 34316 ;;		_isupper
 34317 ;; This function is called by:
 34318 ;;		_strtol
 34319 ;; This function uses a non-reentrant model
 34320 ;;
 34321                           
 34322                           	psect	text185
 34323  00B56E                     __ptext185:
 34324                           	callstack 0
 34325  00B56E                     _isalpha:
 34326                           	callstack 10
 34327                           
 34328                           ; BSR set to: 0
 34329                           ;incstack = 0
 34330                           ;isalpha@c stored from wreg
 34331  00B56E  0100               	movlb	0	; () banked
 34332  00B570  6F76               	movwf	isalpha@c& (0+255),b
 34333  00B572  0E01               	movlw	1
 34334  00B574  0100               	movlb	0	; () banked
 34335  00B576  6F75               	movwf	_isalpha$9726& (0+255),b
 34336                           
 34337                           ; BSR set to: 0
 34338  00B578  0E7B               	movlw	123
 34339  00B57A  6176               	cpfslt	isalpha@c& (0+255),b
 34340  00B57C  D003               	goto	u15140
 34341                           
 34342                           ; BSR set to: 0
 34343  00B57E  0E61               	movlw	97
 34344  00B580  6176               	cpfslt	isalpha@c& (0+255),b
 34345  00B582  D007               	goto	l17674
 34346  00B584                     u15140:
 34347                           
 34348                           ; BSR set to: 0
 34349  00B584  5176               	movf	isalpha@c& (0+255),w,b
 34350  00B586  EC77  F05C         	call	_isupper
 34351  00B58A  B0D8               	btfsc	status,0,c
 34352  00B58C  D002               	goto	l17674
 34353                           
 34354                           ; BSR set to: 0
 34355  00B58E  0E00               	movlw	0
 34356  00B590  6F75               	movwf	_isalpha$9726& (0+255),b
 34357  00B592                     l17674:
 34358                           
 34359                           ; BSR set to: 0
 34360  00B592  C075  F074         	movff	_isalpha$9726,??_isalpha
 34361  00B596  3174               	rrcf	??_isalpha& (0+255),w,b
 34362                           
 34363                           ; BSR set to: 0
 34364  00B598  0012               	return		;funcret
 34365  00B59A                     __end_of_isalpha:
 34366                           	callstack 0
 34367                           
 34368 ;; *************** function _isupper *****************
 34369 ;; Defined at:
 34370 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isupper.c"
 34371 ;; Parameters:    Size  Location     Type
 34372 ;;  c               1    wreg     unsigned char 
 34373 ;; Auto vars:     Size  Location     Type
 34374 ;;  c               1   19[BANK0 ] unsigned char 
 34375 ;; Return value:  Size  Location     Type
 34376 ;;		None               void
 34377 ;; Registers used:
 34378 ;;		wreg, status,2, status,0
 34379 ;; Tracked objects:
 34380 ;;		On entry : 3F/0
 34381 ;;		On exit  : 3F/0
 34382 ;;		Unchanged: 0/0
 34383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34385 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34386 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34387 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34388 ;;Total ram usage:        3 bytes
 34389 ;; Hardware stack levels used:    1
 34390 ;; Hardware stack levels required when called:   11
 34391 ;; This function calls:
 34392 ;;		Nothing
 34393 ;; This function is called by:
 34394 ;;		_isalpha
 34395 ;; This function uses a non-reentrant model
 34396 ;;
 34397                           
 34398                           	psect	text186
 34399  00B8EE                     __ptext186:
 34400                           	callstack 0
 34401  00B8EE                     _isupper:
 34402                           	callstack 10
 34403                           
 34404                           ; BSR set to: 0
 34405                           ;incstack = 0
 34406                           ;isupper@c stored from wreg
 34407  00B8EE  0100               	movlb	0	; () banked
 34408  00B8F0  6F73               	movwf	isupper@c& (0+255),b
 34409  00B8F2  0E00               	movlw	0
 34410  00B8F4  0100               	movlb	0	; () banked
 34411  00B8F6  6F72               	movwf	_isupper$9735& (0+255),b
 34412                           
 34413                           ; BSR set to: 0
 34414  00B8F8  0E5B               	movlw	91
 34415  00B8FA  6173               	cpfslt	isupper@c& (0+255),b
 34416  00B8FC  D005               	goto	l17412
 34417                           
 34418                           ; BSR set to: 0
 34419  00B8FE  0E40               	movlw	64
 34420  00B900  6573               	cpfsgt	isupper@c& (0+255),b
 34421  00B902  D002               	goto	l17412
 34422                           
 34423                           ; BSR set to: 0
 34424  00B904  0E01               	movlw	1
 34425  00B906  6F72               	movwf	_isupper$9735& (0+255),b
 34426  00B908                     l17412:
 34427                           
 34428                           ; BSR set to: 0
 34429  00B908  C072  F071         	movff	_isupper$9735,??_isupper
 34430  00B90C  3171               	rrcf	??_isupper& (0+255),w,b
 34431                           
 34432                           ; BSR set to: 0
 34433  00B90E  0012               	return		;funcret
 34434  00B910                     __end_of_isupper:
 34435                           	callstack 0
 34436                           
 34437 ;; *************** function _strstr *****************
 34438 ;; Defined at:
 34439 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strstr.c"
 34440 ;; Parameters:    Size  Location     Type
 34441 ;;  s1              2   30[BANK0 ] PTR const unsigned char 
 34442 ;;		 -> nwkFrameFrames(690), NULL(0), 
 34443 ;;  s2              2   32[BANK0 ] PTR const unsigned char 
 34444 ;;		 -> STR_4(2), STR_2(5), STR_1(5), 
 34445 ;; Auto vars:     Size  Location     Type
 34446 ;;		None
 34447 ;; Return value:  Size  Location     Type
 34448 ;;                  2   30[BANK0 ] PTR unsigned char 
 34449 ;; Registers used:
 34450 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34451 ;; Tracked objects:
 34452 ;;		On entry : 3F/0
 34453 ;;		On exit  : 3F/0
 34454 ;;		Unchanged: 0/0
 34455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34456 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34459 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34460 ;;Total ram usage:        4 bytes
 34461 ;; Hardware stack levels used:    1
 34462 ;; Hardware stack levels required when called:   12
 34463 ;; This function calls:
 34464 ;;		_strchr
 34465 ;;		_strlen
 34466 ;;		_strncmp
 34467 ;; This function is called by:
 34468 ;;		_appManagementEp
 34469 ;;		_exract_sink_addr
 34470 ;; This function uses a non-reentrant model
 34471 ;;
 34472                           
 34473                           	psect	text187
 34474  009508                     __ptext187:
 34475                           	callstack 0
 34476  009508                     _strstr:
 34477                           	callstack 12
 34478                           
 34479                           ; BSR set to: 0
 34480                           ;incstack = 0
 34481  009508  D039               	goto	l17822
 34482  00950A                     l17814:
 34483                           
 34484                           ; BSR set to: 0
 34485  00950A  C07E  F077         	movff	strstr@s1,strncmp@s1
 34486  00950E  C07F  F078         	movff	strstr@s1+1,strncmp@s1+1
 34487  009512  C080  F079         	movff	strstr@s2,strncmp@s2
 34488  009516  C081  F07A         	movff	strstr@s2+1,strncmp@s2+1
 34489  00951A  C080  F071         	movff	strstr@s2,strlen@s
 34490  00951E  C081  F072         	movff	strstr@s2+1,strlen@s+1
 34491  009522  5171               	movf	strlen@s& (0+255),w,b
 34492  009524  1172               	iorwf	(strlen@s+1)& (0+255),w,b
 34493  009526  A4D8               	btfss	status,2,c
 34494  009528  0E00               	movlw	low (__mediumconst shr (0+16))
 34495  00952A  6F73               	movwf	(strlen@s+2)& (0+255),b
 34496  00952C  ECF9  F052         	call	_strlen	;wreg free
 34497  009530  C071  F07B         	movff	?_strlen,strncmp@len
 34498  009534  C072  F07C         	movff	?_strlen+1,strncmp@len+1
 34499  009538  EC62  F04D         	call	_strncmp	;wreg free
 34500  00953C  5177               	movf	?_strncmp& (0+255),w,b
 34501  00953E  1178               	iorwf	(?_strncmp+1)& (0+255),w,b
 34502  009540  A4D8               	btfss	status,2,c
 34503  009542  D005               	goto	l17820
 34504                           
 34505                           ; BSR set to: 0
 34506  009544  C07E  F07E         	movff	strstr@s1,?_strstr
 34507  009548  C07F  F07F         	movff	strstr@s1+1,?_strstr+1
 34508  00954C  0012               	return	
 34509  00954E                     l17820:
 34510                           
 34511                           ; BSR set to: 0
 34512  00954E  0E01               	movlw	1
 34513  009550  257E               	addwf	strstr@s1& (0+255),w,b
 34514  009552  6F71               	movwf	strchr@ptr& (0+255),b
 34515  009554  0E00               	movlw	0
 34516  009556  217F               	addwfc	(strstr@s1+1)& (0+255),w,b
 34517  009558  6F72               	movwf	(strchr@ptr+1)& (0+255),b
 34518  00955A  0060  F203  FFF6   	movff	strstr@s2,tblptrl
 34519  009560  0060  F207  FFF7   	movff	strstr@s2+1,tblptrh
 34520  009566                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34521  009566  6AF8               	clrf	tblptru,c
 34522  009568                     	endif
 34523  009568                     	if	0	;tblptru may be non-zero
 34524  009568                     	endif
 34525  009568  0008               	tblrd		*
 34526  00956A  50F5               	movf	tablat,w,c
 34527  00956C  6F73               	movwf	strchr@chr& (0+255),b
 34528  00956E  6B74               	clrf	(strchr@chr+1)& (0+255),b
 34529  009570  EC2C  F058         	call	_strchr	;wreg free
 34530  009574  C071  F07E         	movff	?_strchr,strstr@s1
 34531  009578  C072  F07F         	movff	?_strchr+1,strstr@s1+1
 34532  00957C                     l17822:
 34533  00957C  0100               	movlb	0	; () banked
 34534  00957E  517E               	movf	strstr@s1& (0+255),w,b
 34535  009580  117F               	iorwf	(strstr@s1+1)& (0+255),w,b
 34536  009582  B4D8               	btfsc	status,2,c
 34537  009584  D009               	goto	u15320
 34538                           
 34539                           ; BSR set to: 0
 34540  009586  0060  F1FB  FFD9   	movff	strstr@s1,fsr2l
 34541  00958C  0060  F1FF  FFDA   	movff	strstr@s1+1,fsr2h
 34542  009592  50DF               	movf	indf2,w,c
 34543  009594  A4D8               	btfss	status,2,c
 34544  009596  D7B9               	goto	l17814
 34545  009598                     u15320:
 34546                           
 34547                           ; BSR set to: 0
 34548  009598  0E00               	movlw	0
 34549  00959A  6F7E               	movwf	?_strstr& (0+255),b
 34550  00959C  0E00               	movlw	0
 34551  00959E  6F7F               	movwf	(?_strstr+1)& (0+255),b
 34552                           
 34553                           ; BSR set to: 0
 34554  0095A0  0012               	return		;funcret
 34555  0095A2                     __end_of_strstr:
 34556                           	callstack 0
 34557                           
 34558 ;; *************** function _strncmp *****************
 34559 ;; Defined at:
 34560 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strncmp.c"
 34561 ;; Parameters:    Size  Location     Type
 34562 ;;  s1              2   23[BANK0 ] PTR const unsigned char 
 34563 ;;		 -> nwkFrameFrames(690), NULL(0), 
 34564 ;;  s2              2   25[BANK0 ] PTR const unsigned char 
 34565 ;;		 -> STR_4(2), STR_2(5), STR_1(5), 
 34566 ;;  len             2   27[BANK0 ] unsigned int 
 34567 ;; Auto vars:     Size  Location     Type
 34568 ;;		None
 34569 ;; Return value:  Size  Location     Type
 34570 ;;                  2   23[BANK0 ] int 
 34571 ;; Registers used:
 34572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 34573 ;; Tracked objects:
 34574 ;;		On entry : 3F/0
 34575 ;;		On exit  : 3F/0
 34576 ;;		Unchanged: 0/0
 34577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34578 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34580 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34581 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34582 ;;Total ram usage:        7 bytes
 34583 ;; Hardware stack levels used:    1
 34584 ;; Hardware stack levels required when called:   11
 34585 ;; This function calls:
 34586 ;;		Nothing
 34587 ;; This function is called by:
 34588 ;;		_strstr
 34589 ;; This function uses a non-reentrant model
 34590 ;;
 34591                           
 34592                           	psect	text188
 34593  009AC4                     __ptext188:
 34594                           	callstack 0
 34595  009AC4                     _strncmp:
 34596                           	callstack 12
 34597                           
 34598                           ; BSR set to: 0
 34599                           ;incstack = 0
 34600  009AC4  D038               	goto	l17632
 34601  009AC6                     l17622:
 34602                           
 34603                           ; BSR set to: 0
 34604  009AC6  0060  F1DF  FFD9   	movff	strncmp@s1,fsr2l
 34605  009ACC  0060  F1E3  FFDA   	movff	strncmp@s1+1,fsr2h
 34606  009AD2  50DF               	movf	indf2,w,c
 34607  009AD4  B4D8               	btfsc	status,2,c
 34608  009AD6  D014               	goto	u15060
 34609                           
 34610                           ; BSR set to: 0
 34611  009AD8  0060  F1DF  FFD9   	movff	strncmp@s1,fsr2l
 34612  009ADE  0060  F1E3  FFDA   	movff	strncmp@s1+1,fsr2h
 34613  009AE4  50DF               	movf	indf2,w,c
 34614  009AE6  6F7D               	movwf	??_strncmp& (0+255),b
 34615  009AE8  0060  F1E7  FFF6   	movff	strncmp@s2,tblptrl
 34616  009AEE  0060  F1EB  FFF7   	movff	strncmp@s2+1,tblptrh
 34617  009AF4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34618  009AF4  6AF8               	clrf	tblptru,c
 34619  009AF6                     	endif
 34620  009AF6                     	if	0	;tblptru may be non-zero
 34621  009AF6                     	endif
 34622  009AF6  0008               	tblrd		*
 34623  009AF8  50F5               	movf	tablat,w,c
 34624  009AFA  197D               	xorwf	??_strncmp& (0+255),w,b
 34625  009AFC  B4D8               	btfsc	status,2,c
 34626  009AFE  D017               	goto	l17630
 34627  009B00                     u15060:
 34628                           
 34629                           ; BSR set to: 0
 34630  009B00  0060  F1DF  FFD9   	movff	strncmp@s1,fsr2l
 34631  009B06  0060  F1E3  FFDA   	movff	strncmp@s1+1,fsr2h
 34632  009B0C  50DF               	movf	indf2,w,c
 34633  009B0E  6F7D               	movwf	??_strncmp& (0+255),b
 34634  009B10  0060  F1E7  FFF6   	movff	strncmp@s2,tblptrl
 34635  009B16  0060  F1EB  FFF7   	movff	strncmp@s2+1,tblptrh
 34636  009B1C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34637  009B1C  6AF8               	clrf	tblptru,c
 34638  009B1E                     	endif
 34639  009B1E                     	if	0	;tblptru may be non-zero
 34640  009B1E                     	endif
 34641  009B1E  0008               	tblrd		*
 34642  009B20  50F5               	movf	tablat,w,c
 34643  009B22  5D7D               	subwf	??_strncmp& (0+255),w,b
 34644  009B24  6F77               	movwf	?_strncmp& (0+255),b
 34645  009B26  6B78               	clrf	(?_strncmp+1)& (0+255),b
 34646  009B28  A0D8               	btfss	status,0,c
 34647  009B2A  0778               	decf	(?_strncmp+1)& (0+255),f,b
 34648  009B2C  0012               	return	
 34649  009B2E                     l17630:
 34650                           
 34651                           ; BSR set to: 0
 34652  009B2E  4B77               	infsnz	strncmp@s1& (0+255),f,b
 34653  009B30  2B78               	incf	(strncmp@s1+1)& (0+255),f,b
 34654  009B32  4B79               	infsnz	strncmp@s2& (0+255),f,b
 34655  009B34  2B7A               	incf	(strncmp@s2+1)& (0+255),f,b
 34656  009B36                     l17632:
 34657  009B36  0100               	movlb	0	; () banked
 34658  009B38  077B               	decf	strncmp@len& (0+255),f,b
 34659  009B3A  A0D8               	btfss	status,0,c
 34660  009B3C  077C               	decf	(strncmp@len+1)& (0+255),f,b
 34661  009B3E  297B               	incf	strncmp@len& (0+255),w,b
 34662  009B40  E1C2               	bnz	l17622
 34663  009B42  297C               	incf	(strncmp@len+1)& (0+255),w,b
 34664  009B44  A4D8               	btfss	status,2,c
 34665  009B46  D7BF               	goto	l17622
 34666                           
 34667                           ; BSR set to: 0
 34668  009B48  0E00               	movlw	0
 34669  009B4A  6F78               	movwf	(?_strncmp+1)& (0+255),b
 34670  009B4C  0E00               	movlw	0
 34671  009B4E  6F77               	movwf	?_strncmp& (0+255),b
 34672                           
 34673                           ; BSR set to: 0
 34674  009B50  0012               	return		;funcret
 34675  009B52                     __end_of_strncmp:
 34676                           	callstack 0
 34677                           
 34678 ;; *************** function _strlen *****************
 34679 ;; Defined at:
 34680 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strlen.c"
 34681 ;; Parameters:    Size  Location     Type
 34682 ;;  s               3   17[BANK0 ] PTR const unsigned char 
 34683 ;;		 -> STR_4(2), cmdSetSink@msgstr(16), STR_2(5), STR_1(5), 
 34684 ;; Auto vars:     Size  Location     Type
 34685 ;;  cp              3   20[BANK0 ] PTR const unsigned char 
 34686 ;;		 -> STR_4(2), cmdSetSink@msgstr(16), STR_2(5), STR_1(5), 
 34687 ;; Return value:  Size  Location     Type
 34688 ;;                  2   17[BANK0 ] unsigned int 
 34689 ;; Registers used:
 34690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 34691 ;; Tracked objects:
 34692 ;;		On entry : 3F/0
 34693 ;;		On exit  : 3F/0
 34694 ;;		Unchanged: 0/0
 34695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34696 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34697 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34699 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34700 ;;Total ram usage:        6 bytes
 34701 ;; Hardware stack levels used:    1
 34702 ;; Hardware stack levels required when called:   11
 34703 ;; This function calls:
 34704 ;;		Nothing
 34705 ;; This function is called by:
 34706 ;;		_cmdSetSink
 34707 ;;		_strstr
 34708 ;; This function uses a non-reentrant model
 34709 ;;
 34710                           
 34711                           	psect	text189
 34712  00A5F2                     __ptext189:
 34713                           	callstack 0
 34714  00A5F2                     _strlen:
 34715                           	callstack 15
 34716                           
 34717                           ; BSR set to: 0
 34718                           ;incstack = 0
 34719  00A5F2  C071  F074         	movff	strlen@s,strlen@cp
 34720  00A5F6  C072  F075         	movff	strlen@s+1,strlen@cp+1
 34721  00A5FA  C073  F076         	movff	strlen@s+2,strlen@cp+2
 34722  00A5FE  D007               	goto	l17536
 34723  00A600                     l17534:
 34724  00A600  0100               	movlb	0	; () banked
 34725  00A602  0E01               	movlw	1
 34726  00A604  2774               	addwf	strlen@cp& (0+255),f,b
 34727  00A606  0E00               	movlw	0
 34728  00A608  2375               	addwfc	(strlen@cp+1)& (0+255),f,b
 34729  00A60A  0E00               	movlw	0
 34730  00A60C  2376               	addwfc	(strlen@cp+2)& (0+255),f,b
 34731  00A60E                     l17536:
 34732  00A60E  0060  F1D3  FFF6   	movff	strlen@cp,tblptrl
 34733  00A614  0060  F1D7  FFF7   	movff	strlen@cp+1,tblptrh
 34734  00A61A  0060  F1DB  FFF8   	movff	strlen@cp+2,tblptru
 34735  00A620  BAF8               	btfsc	tblptru,5,c
 34736  00A622  D003               	bra	u14897
 34737  00A624  0008               	tblrd		*
 34738  00A626  50F5               	movf	tablat,w,c
 34739  00A628  D007               	bra	u14890
 34740  00A62A                     u14897:
 34741  00A62A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 34742  00A630  006F FFDF FFEA     	movff	tblptrh,fsr0h
 34743  00A636  50EF               	movf	indf0,w,c
 34744  00A638                     u14890:
 34745  00A638  0900               	iorlw	0
 34746  00A63A  A4D8               	btfss	status,2,c
 34747  00A63C  D7E1               	goto	l17534
 34748  00A63E  0100               	movlb	0	; () banked
 34749  00A640  5171               	movf	strlen@s& (0+255),w,b
 34750  00A642  5D74               	subwf	strlen@cp& (0+255),w,b
 34751  00A644  6F71               	movwf	?_strlen& (0+255),b
 34752  00A646  5172               	movf	(strlen@s+1)& (0+255),w,b
 34753  00A648  5975               	subwfb	(strlen@cp+1)& (0+255),w,b
 34754  00A64A  6F72               	movwf	(?_strlen+1)& (0+255),b
 34755                           
 34756                           ; BSR set to: 0
 34757  00A64C  0012               	return		;funcret
 34758  00A64E                     __end_of_strlen:
 34759                           	callstack 0
 34760                           
 34761 ;; *************** function _strchr *****************
 34762 ;; Defined at:
 34763 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strchr.c"
 34764 ;; Parameters:    Size  Location     Type
 34765 ;;  ptr             2   17[BANK0 ] PTR const unsigned char 
 34766 ;;		 -> nwkFrameFrames(690), NULL(0), 
 34767 ;;  chr             2   19[BANK0 ] int 
 34768 ;; Auto vars:     Size  Location     Type
 34769 ;;		None
 34770 ;; Return value:  Size  Location     Type
 34771 ;;                  2   17[BANK0 ] PTR unsigned char 
 34772 ;; Registers used:
 34773 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34774 ;; Tracked objects:
 34775 ;;		On entry : 3F/0
 34776 ;;		On exit  : 3F/0
 34777 ;;		Unchanged: 0/0
 34778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34779 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34781 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34782 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34783 ;;Total ram usage:        5 bytes
 34784 ;; Hardware stack levels used:    1
 34785 ;; Hardware stack levels required when called:   11
 34786 ;; This function calls:
 34787 ;;		Nothing
 34788 ;; This function is called by:
 34789 ;;		_strstr
 34790 ;; This function uses a non-reentrant model
 34791 ;;
 34792                           
 34793                           	psect	text190
 34794  00B058                     __ptext190:
 34795                           	callstack 0
 34796  00B058                     _strchr:
 34797                           	callstack 12
 34798                           
 34799                           ; BSR set to: 0
 34800                           ;incstack = 0
 34801  00B058  0060  F1C7  FFD9   	movff	strchr@ptr,fsr2l
 34802  00B05E  0060  F1CB  FFDA   	movff	strchr@ptr+1,fsr2h
 34803  00B064  0100               	movlb	0	; () banked
 34804  00B066  5173               	movf	strchr@chr& (0+255),w,b
 34805  00B068  18DE               	xorwf	postinc2,w,c
 34806  00B06A  A4D8               	btfss	status,2,c
 34807  00B06C  D005               	goto	l17644
 34808                           
 34809                           ; BSR set to: 0
 34810  00B06E  C071  F071         	movff	strchr@ptr,?_strchr
 34811  00B072  C072  F072         	movff	strchr@ptr+1,?_strchr+1
 34812  00B076  0012               	return	
 34813  00B078                     l17644:
 34814                           
 34815                           ; BSR set to: 0
 34816  00B078  0060  F1C7  FFD9   	movff	strchr@ptr,fsr2l
 34817  00B07E  0060  F1CB  FFDA   	movff	strchr@ptr+1,fsr2h
 34818  00B084  4B71               	infsnz	strchr@ptr& (0+255),f,b
 34819  00B086  2B72               	incf	(strchr@ptr+1)& (0+255),f,b
 34820  00B088  50DF               	movf	indf2,w,c
 34821  00B08A  A4D8               	btfss	status,2,c
 34822  00B08C  D7E5               	goto	_strchr
 34823                           
 34824                           ; BSR set to: 0
 34825  00B08E  0E00               	movlw	0
 34826  00B090  6F71               	movwf	?_strchr& (0+255),b
 34827  00B092  0E00               	movlw	0
 34828  00B094  6F72               	movwf	(?_strchr+1)& (0+255),b
 34829                           
 34830                           ; BSR set to: 0
 34831  00B096  0012               	return		;funcret
 34832  00B098                     __end_of_strchr:
 34833                           	callstack 0
 34834                           
 34835 ;; *************** function _DATAEE_WriteByte_Platform *****************
 34836 ;; Defined at:
 34837 ;;		line 70 in file "../app/app_src/EEPROM.c"
 34838 ;; Parameters:    Size  Location     Type
 34839 ;;  addr            2   21[BANK0 ] unsigned int 
 34840 ;;  data            1   23[BANK0 ] unsigned char 
 34841 ;; Auto vars:     Size  Location     Type
 34842 ;;		None
 34843 ;; Return value:  Size  Location     Type
 34844 ;;                  1    wreg      void 
 34845 ;; Registers used:
 34846 ;;		wreg, status,2, status,0, cstack
 34847 ;; Tracked objects:
 34848 ;;		On entry : 3F/0
 34849 ;;		On exit  : 0/0
 34850 ;;		Unchanged: 0/0
 34851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34852 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34855 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34856 ;;Total ram usage:        3 bytes
 34857 ;; Hardware stack levels used:    1
 34858 ;; Hardware stack levels required when called:   12
 34859 ;; This function calls:
 34860 ;;		_DATAEE_WriteByte
 34861 ;; This function is called by:
 34862 ;;		_bootLoadApplication
 34863 ;;		_exract_sink_addr
 34864 ;;		_sync_eeprom
 34865 ;; This function uses a non-reentrant model
 34866 ;;
 34867                           
 34868                           	psect	text191
 34869  00AC12                     __ptext191:
 34870                           	callstack 0
 34871  00AC12                     _DATAEE_WriteByte_Platform:
 34872                           	callstack 17
 34873                           
 34874                           ;../app/app_src/EEPROM.c: 72:     DATAEE_WriteByte(addr, data);
 34875                           
 34876                           ; BSR set to: 0
 34877                           ;incstack = 0
 34878  00AC12  C075  F071         	movff	DATAEE_WriteByte_Platform@addr,DATAEE_WriteByte@bAdd
 34879  00AC16  C076  F072         	movff	DATAEE_WriteByte_Platform@addr+1,DATAEE_WriteByte@bAdd+1
 34880  00AC1A  C077  F073         	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 34881  00AC1E  EC5E  F054         	call	_DATAEE_WriteByte	;wreg free
 34882                           
 34883                           ;../app/app_src/EEPROM.c: 73:     DATAEE_WriteByte(addr + 256, data);
 34884  00AC22  0E00               	movlw	0
 34885  00AC24  0100               	movlb	0	; force () banked
 34886  00AC26  2575               	addwf	DATAEE_WriteByte_Platform@addr& (0+255),w,b
 34887  00AC28  0100               	movlb	0	; force () banked
 34888  00AC2A  6F71               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 34889  00AC2C  0E01               	movlw	1
 34890  00AC2E  0100               	movlb	0	; force () banked
 34891  00AC30  2176               	addwfc	(DATAEE_WriteByte_Platform@addr+1)& (0+255),w,b
 34892  00AC32  0100               	movlb	0	; force () banked
 34893  00AC34  6F72               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 34894  00AC36  C077  F073         	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 34895  00AC3A  EC5E  F054         	call	_DATAEE_WriteByte	;wreg free
 34896                           
 34897                           ;../app/app_src/EEPROM.c: 74:     DATAEE_WriteByte(addr + 512, data);
 34898  00AC3E  0E00               	movlw	0
 34899  00AC40  0100               	movlb	0	; force () banked
 34900  00AC42  2575               	addwf	DATAEE_WriteByte_Platform@addr& (0+255),w,b
 34901  00AC44  0100               	movlb	0	; force () banked
 34902  00AC46  6F71               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 34903  00AC48  0E02               	movlw	2
 34904  00AC4A  0100               	movlb	0	; force () banked
 34905  00AC4C  2176               	addwfc	(DATAEE_WriteByte_Platform@addr+1)& (0+255),w,b
 34906  00AC4E  0100               	movlb	0	; force () banked
 34907  00AC50  6F72               	movwf	(DATAEE_WriteByte@bAdd+1)& (0+255),b
 34908  00AC52  C077  F073         	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 34909  00AC56  EC5E  F054         	call	_DATAEE_WriteByte	;wreg free
 34910  00AC5A  0012               	return		;funcret
 34911  00AC5C                     __end_of_DATAEE_WriteByte_Platform:
 34912                           	callstack 0
 34913                           
 34914 ;; *************** function _DATAEE_WriteByte *****************
 34915 ;; Defined at:
 34916 ;;		line 172 in file "mcc_generated_files/memory.c"
 34917 ;; Parameters:    Size  Location     Type
 34918 ;;  bAdd            2   17[BANK0 ] unsigned int 
 34919 ;;  bData           1   19[BANK0 ] unsigned char 
 34920 ;; Auto vars:     Size  Location     Type
 34921 ;;  GIEBitValue     1   20[BANK0 ] unsigned char 
 34922 ;; Return value:  Size  Location     Type
 34923 ;;                  1    wreg      void 
 34924 ;; Registers used:
 34925 ;;		wreg, status,2, status,0
 34926 ;; Tracked objects:
 34927 ;;		On entry : 0/0
 34928 ;;		On exit  : 0/0
 34929 ;;		Unchanged: 0/0
 34930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34931 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34932 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34934 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34935 ;;Total ram usage:        4 bytes
 34936 ;; Hardware stack levels used:    1
 34937 ;; Hardware stack levels required when called:   11
 34938 ;; This function calls:
 34939 ;;		Nothing
 34940 ;; This function is called by:
 34941 ;;		_cmdSetSink
 34942 ;;		_DATAEE_ReadByte_Platform
 34943 ;;		_DATAEE_WriteByte_Platform
 34944 ;; This function uses a non-reentrant model
 34945 ;;
 34946                           
 34947                           	psect	text192
 34948  00A8BC                     __ptext192:
 34949                           	callstack 0
 34950  00A8BC                     _DATAEE_WriteByte:
 34951                           	callstack 17
 34952                           
 34953                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 34954                           
 34955                           ;incstack = 0
 34956  00A8BC  0E00               	movlw	0
 34957  00A8BE  BED2               	btfsc	210,7,c	;volatile
 34958  00A8C0  0E01               	movlw	1
 34959  00A8C2  0100               	movlb	0	; force () banked
 34960  00A8C4  6F74               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 34961                           
 34962                           ; BSR set to: 0
 34963                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 34964  00A8C6  0100               	movlb	0	; force () banked
 34965  00A8C8  5172               	movf	(DATAEE_WriteByte@bAdd+1)& (0+255),w,b
 34966  00A8CA  0B03               	andlw	3
 34967  00A8CC  0139               	movlb	57	; force () banked
 34968  00A8CE  6FE1               	movwf	225,b	;volatile
 34969                           
 34970                           ; BSR set to: 57
 34971                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 34972  00A8D0  0060  F1C7  F9E0   	movff	DATAEE_WriteByte@bAdd,14816	;volatile
 34973                           
 34974                           ; BSR set to: 57
 34975                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 34976  00A8D6  0060  F1CF  F9E3   	movff	DATAEE_WriteByte@bData,14819	;volatile
 34977                           
 34978                           ; BSR set to: 57
 34979                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 34980  00A8DC  0E3F               	movlw	-193
 34981  00A8DE  0139               	movlb	57	; force () banked
 34982  00A8E0  17E5               	andwf	229,f,b	;volsfr
 34983                           
 34984                           ; BSR set to: 57
 34985                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 34986  00A8E2  0139               	movlb	57	; force () banked
 34987  00A8E4  85E5               	bsf	229,2,b	;volsfr
 34988                           
 34989                           ; BSR set to: 57
 34990                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 34991  00A8E6  9ED2               	bcf	210,7,c	;volatile
 34992                           
 34993                           ; BSR set to: 57
 34994                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 34995  00A8E8  0E55               	movlw	85
 34996  00A8EA  0139               	movlb	57	; force () banked
 34997  00A8EC  6FE6               	movwf	230,b	;volsfr
 34998                           
 34999                           ; BSR set to: 57
 35000                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 35001  00A8EE  0EAA               	movlw	170
 35002  00A8F0  0139               	movlb	57	; force () banked
 35003  00A8F2  6FE6               	movwf	230,b	;volsfr
 35004                           
 35005                           ; BSR set to: 57
 35006                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 35007  00A8F4  0139               	movlb	57	; force () banked
 35008  00A8F6  83E5               	bsf	229,1,b	;volsfr
 35009  00A8F8                     l1703:
 35010                           
 35011                           ; BSR set to: 57
 35012                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 35013  00A8F8  0139               	movlb	57	; force () banked
 35014  00A8FA  B3E5               	btfsc	229,1,b	;volsfr
 35015  00A8FC  D7FD               	goto	l1703
 35016                           
 35017                           ; BSR set to: 57
 35018                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 35019  00A8FE  0139               	movlb	57	; force () banked
 35020  00A900  95E5               	bcf	229,2,b	;volsfr
 35021                           
 35022                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 35023  00A902  0100               	movlb	0	; force () banked
 35024  00A904  B174               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 35025  00A906  D002               	bra	u14885
 35026  00A908  9ED2               	bcf	210,7,c	;volatile
 35027  00A90A  D001               	bra	u14886
 35028  00A90C                     u14885:
 35029  00A90C  8ED2               	bsf	210,7,c	;volatile
 35030  00A90E                     u14886:
 35031  00A90E  0012               	return		;funcret
 35032  00A910                     __end_of_DATAEE_WriteByte:
 35033                           	callstack 0
 35034                           
 35035 ;; *************** function _get_free_rx_buffer *****************
 35036 ;; Defined at:
 35037 ;;		line 291 in file "../app/app_src/application.c"
 35038 ;; Parameters:    Size  Location     Type
 35039 ;;  buf_id          2   17[BANK0 ] PTR unsigned char 
 35040 ;;		 -> appDataInd@buf_id(1), 
 35041 ;; Auto vars:     Size  Location     Type
 35042 ;;		None
 35043 ;; Return value:  Size  Location     Type
 35044 ;;                  1    wreg      _Bool 
 35045 ;; Registers used:
 35046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35047 ;; Tracked objects:
 35048 ;;		On entry : 3F/0
 35049 ;;		On exit  : 0/0
 35050 ;;		Unchanged: 0/0
 35051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35052 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35054 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35055 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35056 ;;Total ram usage:        3 bytes
 35057 ;; Hardware stack levels used:    1
 35058 ;; Hardware stack levels required when called:   11
 35059 ;; This function calls:
 35060 ;;		Nothing
 35061 ;; This function is called by:
 35062 ;;		_appDataInd
 35063 ;; This function uses a non-reentrant model
 35064 ;;
 35065                           
 35066                           	psect	text193
 35067  009EFE                     __ptext193:
 35068                           	callstack 0
 35069  009EFE                     _get_free_rx_buffer:
 35070                           	callstack 13
 35071                           
 35072                           ;../app/app_src/application.c: 292:     *buf_id = 0;
 35073                           
 35074                           ;incstack = 0
 35075  009EFE  0060  F1C7  FFD9   	movff	get_free_rx_buffer@buf_id,fsr2l
 35076  009F04  0060  F1CB  FFDA   	movff	get_free_rx_buffer@buf_id+1,fsr2h
 35077  009F0A  0E00               	movlw	0
 35078  009F0C  6EDF               	movwf	indf2,c
 35079                           
 35080                           ;../app/app_src/application.c: 293:     while(*buf_id < 3){
 35081  009F0E  D02E               	goto	l18038
 35082  009F10                     l18028:
 35083                           
 35084                           ;../app/app_src/application.c: 294:         if(rx_buffer[*buf_id].free){
 35085  009F10  0060  F1C7  FFD9   	movff	get_free_rx_buffer@buf_id,fsr2l
 35086  009F16  0060  F1CB  FFDA   	movff	get_free_rx_buffer@buf_id+1,fsr2h
 35087  009F1C  50DF               	movf	indf2,w,c
 35088  009F1E  0100               	movlb	0	; force () banked
 35089  009F20  6F73               	movwf	??_get_free_rx_buffer& (0+255),b
 35090  009F22  5173               	movf	??_get_free_rx_buffer& (0+255),w,b
 35091  009F24  0D7B               	mullw	123
 35092  009F26  0E52               	movlw	low _rx_buffer
 35093  009F28  24F3               	addwf	243,w,c
 35094  009F2A  6ED9               	movwf	fsr2l,c
 35095  009F2C  0E0D               	movlw	high _rx_buffer
 35096  009F2E  20F4               	addwfc	prodh,w,c
 35097  009F30  6EDA               	movwf	fsr2h,c
 35098  009F32  A0DF               	btfss	indf2,0,c
 35099  009F34  D014               	goto	l18036
 35100                           
 35101                           ; BSR set to: 0
 35102                           ;../app/app_src/application.c: 295:             rx_buffer[*buf_id].free = 0;
 35103  009F36  0060  F1C7  FFD9   	movff	get_free_rx_buffer@buf_id,fsr2l
 35104  009F3C  0060  F1CB  FFDA   	movff	get_free_rx_buffer@buf_id+1,fsr2h
 35105  009F42  50DF               	movf	indf2,w,c
 35106  009F44  0100               	movlb	0	; force () banked
 35107  009F46  6F73               	movwf	??_get_free_rx_buffer& (0+255),b
 35108  009F48  5173               	movf	??_get_free_rx_buffer& (0+255),w,b
 35109  009F4A  0D7B               	mullw	123
 35110  009F4C  0E52               	movlw	low _rx_buffer
 35111  009F4E  24F3               	addwf	243,w,c
 35112  009F50  6ED9               	movwf	fsr2l,c
 35113  009F52  0E0D               	movlw	high _rx_buffer
 35114  009F54  20F4               	addwfc	prodh,w,c
 35115  009F56  6EDA               	movwf	fsr2h,c
 35116  009F58  90DF               	bcf	indf2,0,c
 35117                           
 35118                           ; BSR set to: 0
 35119                           ;../app/app_src/application.c: 296:             return 1;
 35120  009F5A  0E01               	movlw	1
 35121  009F5C  0012               	return	
 35122  009F5E                     l18036:
 35123                           
 35124                           ; BSR set to: 0
 35125                           ;../app/app_src/application.c: 298:         (*buf_id)++;
 35126  009F5E  0060  F1C7  FFD9   	movff	get_free_rx_buffer@buf_id,fsr2l
 35127  009F64  0060  F1CB  FFDA   	movff	get_free_rx_buffer@buf_id+1,fsr2h
 35128  009F6A  2ADF               	incf	indf2,f,c
 35129  009F6C                     l18038:
 35130                           
 35131                           ;../app/app_src/application.c: 293:     while(*buf_id < 3){
 35132  009F6C  0060  F1C7  FFD9   	movff	get_free_rx_buffer@buf_id,fsr2l
 35133  009F72  0060  F1CB  FFDA   	movff	get_free_rx_buffer@buf_id+1,fsr2h
 35134  009F78  0E02               	movlw	2
 35135  009F7A  64DF               	cpfsgt	indf2,c
 35136  009F7C  D7C9               	goto	l18028
 35137                           
 35138                           ;../app/app_src/application.c: 300:     return 0;
 35139  009F7E  0E00               	movlw	0
 35140  009F80  0012               	return		;funcret
 35141  009F82                     __end_of_get_free_rx_buffer:
 35142                           	callstack 0
 35143                           
 35144 ;; *************** function _check_multicast_rx *****************
 35145 ;; Defined at:
 35146 ;;		line 193 in file "../app/app_src/application.c"
 35147 ;; Parameters:    Size  Location     Type
 35148 ;;  ind             2   22[BANK0 ] PTR struct NWK_DataInd_t
 35149 ;;		 -> nwkRxIndicateFrame@ind(12), 
 35150 ;; Auto vars:     Size  Location     Type
 35151 ;;		None
 35152 ;; Return value:  Size  Location     Type
 35153 ;;                  1    wreg      _Bool 
 35154 ;; Registers used:
 35155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35156 ;; Tracked objects:
 35157 ;;		On entry : 3F/0
 35158 ;;		On exit  : 3F/0
 35159 ;;		Unchanged: 0/0
 35160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35161 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35164 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35165 ;;Total ram usage:        2 bytes
 35166 ;; Hardware stack levels used:    1
 35167 ;; Hardware stack levels required when called:   12
 35168 ;; This function calls:
 35169 ;;		_NWK_GroupIsMember
 35170 ;; This function is called by:
 35171 ;;		_appDataInd
 35172 ;;		_appManagementEp
 35173 ;; This function uses a non-reentrant model
 35174 ;;
 35175                           
 35176                           	psect	text194
 35177  00AED6                     __ptext194:
 35178                           	callstack 0
 35179  00AED6                     _check_multicast_rx:
 35180                           	callstack 12
 35181                           
 35182                           ;../app/app_src/application.c: 194:     if((ind->options) & (NWK_OPT_MULTICAST)){
 35183                           
 35184                           ;incstack = 0
 35185  00AED6  0100               	movlb	0	; force () banked
 35186  00AED8  EE20 F006          	lfsr	2,6
 35187  00AEDC  5176               	movf	check_multicast_rx@ind& (0+255),w,b
 35188  00AEDE  26D9               	addwf	fsr2l,f,c
 35189  00AEE0  5177               	movf	(check_multicast_rx@ind+1)& (0+255),w,b
 35190  00AEE2  22DA               	addwfc	fsr2h,f,c
 35191  00AEE4  A8DF               	btfss	indf2,4,c
 35192  00AEE6  D016               	goto	l18022
 35193                           
 35194                           ; BSR set to: 0
 35195                           ;../app/app_src/application.c: 195:         if(NWK_GroupIsMember(ind->dstAddr)){
 35196  00AEE8  0100               	movlb	0	; force () banked
 35197  00AEEA  EE20 F002          	lfsr	2,2
 35198  00AEEE  5176               	movf	check_multicast_rx@ind& (0+255),w,b
 35199  00AEF0  26D9               	addwf	fsr2l,f,c
 35200  00AEF2  5177               	movf	(check_multicast_rx@ind+1)& (0+255),w,b
 35201  00AEF4  22DA               	addwfc	fsr2h,f,c
 35202  00AEF6  006F FF78  F071    	movff	postinc2,NWK_GroupIsMember@group
 35203  00AEFC  006F FF74  F072    	movff	postdec2,NWK_GroupIsMember@group+1
 35204  00AF02  EC6B  F058         	call	_NWK_GroupIsMember	;wreg free
 35205  00AF06  0900               	iorlw	0
 35206  00AF08  B4D8               	btfsc	status,2,c
 35207  00AF0A  D002               	goto	l18018
 35208                           
 35209                           ; BSR set to: 0
 35210                           ;../app/app_src/application.c: 196:             return 1;
 35211  00AF0C  0E01               	movlw	1
 35212  00AF0E  0012               	return	
 35213  00AF10                     l18018:
 35214                           
 35215                           ; BSR set to: 0
 35216                           ;../app/app_src/application.c: 199:             return 0;
 35217  00AF10  0E00               	movlw	0
 35218  00AF12  0012               	return	
 35219  00AF14                     l18022:
 35220                           
 35221                           ; BSR set to: 0
 35222                           ;../app/app_src/application.c: 203:         return 1;
 35223  00AF14  0E01               	movlw	1
 35224                           
 35225                           ; BSR set to: 0
 35226  00AF16  0012               	return		;funcret
 35227  00AF18                     __end_of_check_multicast_rx:
 35228                           	callstack 0
 35229                           
 35230 ;; *************** function _app_aes_decrypt *****************
 35231 ;; Defined at:
 35232 ;;		line 137 in file "../app/app_src/application.c"
 35233 ;; Parameters:    Size  Location     Type
 35234 ;;  data            2   84[BANK0 ] PTR unsigned char 
 35235 ;;		 -> nwkFrameFrames(690), 
 35236 ;;  size            1   86[BANK0 ] unsigned char 
 35237 ;; Auto vars:     Size  Location     Type
 35238 ;;  random          2   18[BANK1 ] unsigned int 
 35239 ;;  i               1   22[BANK1 ] unsigned char 
 35240 ;;  ctx           192   23[BANK1 ] struct AES_ctx
 35241 ;;  iv             16    0[BANK1 ] unsigned char [16]
 35242 ;;  apphdr          2   20[BANK1 ] PTR struct app_header_t
 35243 ;;		 -> nwkFrameFrames(690), 
 35244 ;;  crc16_cal       2   16[BANK1 ] unsigned int 
 35245 ;; Return value:  Size  Location     Type
 35246 ;;                  1    wreg      unsigned char 
 35247 ;; Registers used:
 35248 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35249 ;; Tracked objects:
 35250 ;;		On entry : 3F/0
 35251 ;;		On exit  : 3F/1
 35252 ;;		Unchanged: 0/0
 35253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35254 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35255 ;;      Locals:         0       0     215       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35256 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35257 ;;      Totals:         0       6     215       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35258 ;;Total ram usage:      221 bytes
 35259 ;; Hardware stack levels used:    1
 35260 ;; Hardware stack levels required when called:   15
 35261 ;; This function calls:
 35262 ;;		_AES_CBC_decrypt_buffer
 35263 ;;		_AES_init_ctx_iv
 35264 ;;		_crc16_app
 35265 ;;		_memcpy
 35266 ;; This function is called by:
 35267 ;;		_appDataInd
 35268 ;;		_appManagementEp
 35269 ;; This function uses a non-reentrant model
 35270 ;;
 35271                           
 35272                           	psect	text195
 35273  006358                     __ptext195:
 35274                           	callstack 0
 35275  006358                     _app_aes_decrypt:
 35276                           	callstack 9
 35277                           
 35278                           ;../app/app_src/application.c: 138:     struct AES_ctx ctx;;../app/app_src/application.c
      +                          : 139:     struct app_header_t *apphdr = (struct app_header_t*)data;
 35279                           
 35280                           ; BSR set to: 0
 35281                           ;incstack = 0
 35282  006358  C0B4  F114         	movff	app_aes_decrypt@data,app_aes_decrypt@apphdr
 35283  00635C  C0B5  F115         	movff	app_aes_decrypt@data+1,app_aes_decrypt@apphdr+1
 35284                           
 35285                           ;../app/app_src/application.c: 140:     uint8_t iv[16];;../app/app_src/application.c: 14
      +                          1:     uint16_t crc16_cal;;../app/app_src/application.c: 143:     for(uint8_t i = 0; i <
      +                           8; i++){
 35286  006360  0E00               	movlw	0
 35287  006362  0101               	movlb	1	; force () banked
 35288  006364  6F16               	movwf	app_aes_decrypt@i& (0+255),b
 35289  006366  D03E               	goto	l17992
 35290  006368                     l17986:
 35291                           
 35292                           ; BSR set to: 1
 35293                           ;../app/app_src/application.c: 144:         uint16_t random = apphdr->iv_seed >> i;
 35294  006368  C116  F0B7         	movff	app_aes_decrypt@i,??_app_aes_decrypt
 35295  00636C  0060  F453  FFD9   	movff	app_aes_decrypt@apphdr,fsr2l
 35296  006372  0060  F457  FFDA   	movff	app_aes_decrypt@apphdr+1,fsr2h
 35297  006378  006F FF78  F0B8    	movff	postinc2,??_app_aes_decrypt+1
 35298  00637E  006F FF74  F0B9    	movff	postdec2,??_app_aes_decrypt+2
 35299  006384  0100               	movlb	0	; force () banked
 35300  006386  2BB7               	incf	??_app_aes_decrypt& (0+255),f,b
 35301  006388  D003               	goto	u15564
 35302  00638A                     u15565:
 35303  00638A  90D8               	bcf	status,0,c
 35304  00638C  33B9               	rrcf	(??_app_aes_decrypt+2)& (0+255),f,b
 35305  00638E  33B8               	rrcf	(??_app_aes_decrypt+1)& (0+255),f,b
 35306  006390                     u15564:
 35307  006390  2FB7               	decfsz	??_app_aes_decrypt& (0+255),f,b
 35308  006392  D7FB               	goto	u15565
 35309  006394  C0B8  F112         	movff	??_app_aes_decrypt+1,app_aes_decrypt@random
 35310  006398  C0B9  F113         	movff	??_app_aes_decrypt+2,app_aes_decrypt@random+1
 35311                           
 35312                           ;../app/app_src/application.c: 145:         memcpy((iv + (i<<1)), &random, sizeof(random
      +                          ));
 35313  00639C  0101               	movlb	1	; force () banked
 35314  00639E  5116               	movf	app_aes_decrypt@i& (0+255),w,b
 35315  0063A0  0100               	movlb	0	; force () banked
 35316  0063A2  6FB7               	movwf	??_app_aes_decrypt& (0+255),b
 35317  0063A4  6BB8               	clrf	(??_app_aes_decrypt+1)& (0+255),b
 35318  0063A6  90D8               	bcf	status,0,c
 35319  0063A8  37B7               	rlcf	??_app_aes_decrypt& (0+255),f,b
 35320  0063AA  37B8               	rlcf	(??_app_aes_decrypt+1)& (0+255),f,b
 35321  0063AC  0E00               	movlw	low app_aes_decrypt@iv
 35322  0063AE  25B7               	addwf	??_app_aes_decrypt& (0+255),w,b
 35323  0063B0  0100               	movlb	0	; force () banked
 35324  0063B2  6F77               	movwf	memcpy@d1& (0+255),b
 35325  0063B4  0E01               	movlw	high app_aes_decrypt@iv
 35326  0063B6  0100               	movlb	0	; force () banked
 35327  0063B8  21B8               	addwfc	(??_app_aes_decrypt+1)& (0+255),w,b
 35328  0063BA  0100               	movlb	0	; force () banked
 35329  0063BC  6F78               	movwf	(memcpy@d1+1)& (0+255),b
 35330  0063BE  0E12               	movlw	low app_aes_decrypt@random
 35331  0063C0  0100               	movlb	0	; force () banked
 35332  0063C2  6F79               	movwf	memcpy@s1& (0+255),b
 35333  0063C4  0E01               	movlw	high app_aes_decrypt@random
 35334  0063C6  6F7A               	movwf	(memcpy@s1+1)& (0+255),b
 35335  0063C8  5179               	movf	memcpy@s1& (0+255),w,b
 35336  0063CA  117A               	iorwf	(memcpy@s1+1)& (0+255),w,b
 35337  0063CC  A4D8               	btfss	status,2,c
 35338  0063CE  0E20               	movlw	32
 35339  0063D0  6F7B               	movwf	(memcpy@s1+2)& (0+255),b
 35340  0063D2  0E00               	movlw	0
 35341  0063D4  0100               	movlb	0	; force () banked
 35342  0063D6  6F7D               	movwf	(memcpy@n+1)& (0+255),b
 35343  0063D8  0E02               	movlw	2
 35344  0063DA  6F7C               	movwf	memcpy@n& (0+255),b
 35345  0063DC  ECC1  F04F         	call	_memcpy	;wreg free
 35346                           
 35347                           ; BSR set to: 0
 35348                           ;../app/app_src/application.c: 146:     }
 35349  0063E0  0101               	movlb	1	; force () banked
 35350  0063E2  2B16               	incf	app_aes_decrypt@i& (0+255),f,b
 35351  0063E4                     l17992:
 35352                           
 35353                           ; BSR set to: 1
 35354  0063E4  0E07               	movlw	7
 35355  0063E6  0101               	movlb	1	; force () banked
 35356  0063E8  6516               	cpfsgt	app_aes_decrypt@i& (0+255),b
 35357  0063EA  D7BE               	goto	l17986
 35358                           
 35359                           ; BSR set to: 1
 35360                           ;../app/app_src/application.c: 147:     AES_init_ctx_iv(&ctx, &aes_key, &iv);
 35361  0063EC  0E17               	movlw	low app_aes_decrypt@ctx
 35362  0063EE  0100               	movlb	0	; force () banked
 35363  0063F0  6F88               	movwf	AES_init_ctx_iv@ctx& (0+255),b
 35364  0063F2  0E01               	movlw	high app_aes_decrypt@ctx
 35365  0063F4  6F89               	movwf	(AES_init_ctx_iv@ctx+1)& (0+255),b
 35366  0063F6  0E96               	movlw	low _aes_key
 35367  0063F8  0100               	movlb	0	; force () banked
 35368  0063FA  6F8A               	movwf	AES_init_ctx_iv@key& (0+255),b
 35369  0063FC  0E03               	movlw	high _aes_key
 35370  0063FE  6F8B               	movwf	(AES_init_ctx_iv@key+1)& (0+255),b
 35371  006400  0E00               	movlw	low app_aes_decrypt@iv
 35372  006402  0100               	movlb	0	; force () banked
 35373  006404  6F8C               	movwf	AES_init_ctx_iv@iv& (0+255),b
 35374  006406  0E01               	movlw	high app_aes_decrypt@iv
 35375  006408  6F8D               	movwf	(AES_init_ctx_iv@iv+1)& (0+255),b
 35376  00640A  EC27  F055         	call	_AES_init_ctx_iv	;wreg free
 35377                           
 35378                           ; BSR set to: 0
 35379                           ;../app/app_src/application.c: 148:     AES_CBC_decrypt_buffer(&ctx, (data + 16), size);
 35380  00640E  0E17               	movlw	low app_aes_decrypt@ctx
 35381  006410  0100               	movlb	0	; force () banked
 35382  006412  6F96               	movwf	AES_CBC_decrypt_buffer@ctx& (0+255),b
 35383  006414  0E01               	movlw	high app_aes_decrypt@ctx
 35384  006416  6F97               	movwf	(AES_CBC_decrypt_buffer@ctx+1)& (0+255),b
 35385  006418  0E10               	movlw	16
 35386  00641A  0100               	movlb	0	; force () banked
 35387  00641C  25B4               	addwf	app_aes_decrypt@data& (0+255),w,b
 35388  00641E  0100               	movlb	0	; force () banked
 35389  006420  6F98               	movwf	AES_CBC_decrypt_buffer@buf& (0+255),b
 35390  006422  0E00               	movlw	0
 35391  006424  0100               	movlb	0	; force () banked
 35392  006426  21B5               	addwfc	(app_aes_decrypt@data+1)& (0+255),w,b
 35393  006428  0100               	movlb	0	; force () banked
 35394  00642A  6F99               	movwf	(AES_CBC_decrypt_buffer@buf+1)& (0+255),b
 35395  00642C  0100               	movlb	0	; force () banked
 35396  00642E  51B6               	movf	app_aes_decrypt@size& (0+255),w,b
 35397  006430  0100               	movlb	0	; force () banked
 35398  006432  6F9A               	movwf	AES_CBC_decrypt_buffer@length& (0+255),b
 35399  006434  6B9B               	clrf	(AES_CBC_decrypt_buffer@length+1)& (0+255),b
 35400  006436  6B9C               	clrf	(AES_CBC_decrypt_buffer@length+2)& (0+255),b
 35401  006438  6B9D               	clrf	(AES_CBC_decrypt_buffer@length+3)& (0+255),b
 35402  00643A  EC18  F03C         	call	_AES_CBC_decrypt_buffer	;wreg free
 35403                           
 35404                           ; BSR set to: 0
 35405                           ;../app/app_src/application.c: 150:     crc16_cal = crc16_app((data + 16), size, 0);
 35406  00643E  0E10               	movlw	16
 35407  006440  0100               	movlb	0	; force () banked
 35408  006442  25B4               	addwf	app_aes_decrypt@data& (0+255),w,b
 35409  006444  0100               	movlb	0	; force () banked
 35410  006446  6F82               	movwf	crc16_app@dptr& (0+255),b
 35411  006448  0E00               	movlw	0
 35412  00644A  0100               	movlb	0	; force () banked
 35413  00644C  21B5               	addwfc	(app_aes_decrypt@data+1)& (0+255),w,b
 35414  00644E  0100               	movlb	0	; force () banked
 35415  006450  6F83               	movwf	(crc16_app@dptr+1)& (0+255),b
 35416  006452  C0B6  F084         	movff	app_aes_decrypt@size,crc16_app@len
 35417  006456  0100               	movlb	0	; force () banked
 35418  006458  6B85               	clrf	(crc16_app@len+1)& (0+255),b
 35419  00645A  0E00               	movlw	0
 35420  00645C  0100               	movlb	0	; force () banked
 35421  00645E  6F87               	movwf	(crc16_app@seed+1)& (0+255),b
 35422  006460  0E00               	movlw	0
 35423  006462  6F86               	movwf	crc16_app@seed& (0+255),b
 35424  006464  ECD3  F04C         	call	_crc16_app	;wreg free
 35425  006468  C082  F110         	movff	?_crc16_app,app_aes_decrypt@crc16_cal
 35426  00646C  C083  F111         	movff	?_crc16_app+1,app_aes_decrypt@crc16_cal+1
 35427                           
 35428                           ; BSR set to: 57
 35429                           ;../app/app_src/application.c: 151:     return((crc16_cal == apphdr->crc16)?CRC_OK:CRC_B
      +                          AD);
 35430  006470  0101               	movlb	1	; force () banked
 35431  006472  EE20 F002          	lfsr	2,2
 35432  006476  5114               	movf	app_aes_decrypt@apphdr& (0+255),w,b
 35433  006478  26D9               	addwf	fsr2l,f,c
 35434  00647A  5115               	movf	(app_aes_decrypt@apphdr+1)& (0+255),w,b
 35435  00647C  22DA               	addwfc	fsr2h,f,c
 35436  00647E  0101               	movlb	1	; force () banked
 35437  006480  5110               	movf	app_aes_decrypt@crc16_cal& (0+255),w,b
 35438  006482  18DE               	xorwf	postinc2,w,c
 35439  006484  E104               	bnz	u15580
 35440  006486  5111               	movf	(app_aes_decrypt@crc16_cal+1)& (0+255),w,b
 35441  006488  18DE               	xorwf	postinc2,w,c
 35442  00648A  B4D8               	btfsc	status,2,c
 35443  00648C  D002               	goto	l18004
 35444  00648E                     u15580:
 35445                           
 35446                           ; BSR set to: 1
 35447  00648E  0E15               	movlw	21
 35448  006490  0012               	return	
 35449  006492                     l18004:
 35450                           
 35451                           ; BSR set to: 1
 35452  006492  0E14               	movlw	20
 35453                           
 35454                           ; BSR set to: 1
 35455  006494  0012               	return		;funcret
 35456  006496                     __end_of_app_aes_decrypt:
 35457                           	callstack 0
 35458                           
 35459 ;; *************** function _crc16_app *****************
 35460 ;; Defined at:
 35461 ;;		line 28 in file "../app/app_src/crc.c"
 35462 ;; Parameters:    Size  Location     Type
 35463 ;;  dptr            2   34[BANK0 ] PTR unsigned char 
 35464 ;;		 -> nwkFrameFrames(690), EUIDbyte(12), tx_buffer.payload(110), tx_buffer(264), 
 35465 ;;  len             2   36[BANK0 ] unsigned int 
 35466 ;;  seed            2   38[BANK0 ] unsigned int 
 35467 ;; Auto vars:     Size  Location     Type
 35468 ;;  i               2   44[BANK0 ] unsigned int 
 35469 ;;  ptr             2   42[BANK0 ] PTR unsigned char 
 35470 ;;		 -> nwkFrameFrames(690), EUIDbyte(12), tx_buffer.payload(110), tx_buffer(264), 
 35471 ;;  result          2   40[BANK0 ] unsigned int 
 35472 ;; Return value:  Size  Location     Type
 35473 ;;                  2   34[BANK0 ] unsigned int 
 35474 ;; Registers used:
 35475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35476 ;; Tracked objects:
 35477 ;;		On entry : 3F/0
 35478 ;;		On exit  : 3F/39
 35479 ;;		Unchanged: 0/0
 35480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35481 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35482 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35484 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35485 ;;Total ram usage:       12 bytes
 35486 ;; Hardware stack levels used:    1
 35487 ;; Hardware stack levels required when called:   13
 35488 ;; This function calls:
 35489 ;;		_CRC_8BitDataWrite
 35490 ;;		_CRC_CalculatedResultGet
 35491 ;; This function is called by:
 35492 ;;		_app_aes_encrypt
 35493 ;;		_app_aes_decrypt
 35494 ;;		_bootLoadApplication
 35495 ;; This function uses a non-reentrant model
 35496 ;;
 35497                           
 35498                           	psect	text196
 35499  0099A6                     __ptext196:
 35500                           	callstack 0
 35501  0099A6                     _crc16_app:
 35502                           	callstack 16
 35503                           
 35504                           ;../app/app_src/crc.c: 29:     uint8_t* ptr = dptr;
 35505                           
 35506                           ; BSR set to: 1
 35507                           ;incstack = 0
 35508  0099A6  C082  F08A         	movff	crc16_app@dptr,crc16_app@ptr
 35509  0099AA  C083  F08B         	movff	crc16_app@dptr+1,crc16_app@ptr+1
 35510                           
 35511                           ;../app/app_src/crc.c: 30:     uint16_t result;;../app/app_src/crc.c: 32:     CRCACCL = 
      +                          seed;
 35512  0099AE  0060  F21B  F962   	movff	crc16_app@seed,14690	;volatile
 35513                           
 35514                           ;../app/app_src/crc.c: 33:     CRCACCH = seed >> 8;
 35515  0099B4  0060  F21F  F963   	movff	crc16_app@seed+1,14691	;volatile
 35516                           
 35517                           ;../app/app_src/crc.c: 35:     CRCCON0bits.EN = 1;
 35518  0099BA  0139               	movlb	57	; force () banked
 35519  0099BC  8F68               	bsf	104,7,b	;volatile
 35520                           
 35521                           ; BSR set to: 57
 35522                           ;../app/app_src/crc.c: 36:     CRCCON0bits.CRCGO = 1;
 35523  0099BE  0139               	movlb	57	; force () banked
 35524  0099C0  8D68               	bsf	104,6,b	;volatile
 35525                           
 35526                           ; BSR set to: 57
 35527                           ;../app/app_src/crc.c: 38:     for(uint16_t i = 0; i < len; i++ )
 35528  0099C2  0E00               	movlw	0
 35529  0099C4  0100               	movlb	0	; force () banked
 35530  0099C6  6F8D               	movwf	(crc16_app@i+1)& (0+255),b
 35531  0099C8  0E00               	movlw	0
 35532  0099CA  6F8C               	movwf	crc16_app@i& (0+255),b
 35533  0099CC  D012               	goto	l17764
 35534  0099CE                     l756:
 35535  0099CE  0139               	movlb	57	; force () banked
 35536  0099D0  B168               	btfsc	104,0,b	;volatile
 35537  0099D2  D7FD               	goto	l756
 35538                           
 35539                           ; BSR set to: 57
 35540                           ;../app/app_src/crc.c: 41:         CRC_8BitDataWrite(*ptr);
 35541  0099D4  0060  F22B  FFD9   	movff	crc16_app@ptr,fsr2l
 35542  0099DA  0060  F22F  FFDA   	movff	crc16_app@ptr+1,fsr2h
 35543  0099E0  50DF               	movf	indf2,w,c
 35544  0099E2  EC95  F05D         	call	_CRC_8BitDataWrite
 35545                           
 35546                           ; BSR set to: 57
 35547                           ;../app/app_src/crc.c: 42:         ptr++;
 35548  0099E6  0100               	movlb	0	; force () banked
 35549  0099E8  4B8A               	infsnz	crc16_app@ptr& (0+255),f,b
 35550  0099EA  2B8B               	incf	(crc16_app@ptr+1)& (0+255),f,b
 35551                           
 35552                           ; BSR set to: 0
 35553                           ;../app/app_src/crc.c: 43:     }
 35554  0099EC  0100               	movlb	0	; force () banked
 35555  0099EE  4B8C               	infsnz	crc16_app@i& (0+255),f,b
 35556  0099F0  2B8D               	incf	(crc16_app@i+1)& (0+255),f,b
 35557  0099F2                     l17764:
 35558                           
 35559                           ; BSR set to: 0
 35560  0099F2  0100               	movlb	0	; force () banked
 35561  0099F4  5184               	movf	crc16_app@len& (0+255),w,b
 35562  0099F6  0100               	movlb	0	; force () banked
 35563  0099F8  5D8C               	subwf	crc16_app@i& (0+255),w,b
 35564  0099FA  0100               	movlb	0	; force () banked
 35565  0099FC  5185               	movf	(crc16_app@len+1)& (0+255),w,b
 35566  0099FE  0100               	movlb	0	; force () banked
 35567  009A00  598D               	subwfb	(crc16_app@i+1)& (0+255),w,b
 35568  009A02  A0D8               	btfss	status,0,c
 35569  009A04  D7E4               	goto	l756
 35570  009A06                     u15240:
 35571  009A06  0139               	movlb	57	; force () banked
 35572  009A08  BB68               	btfsc	104,5,b	;volatile
 35573  009A0A  D7FD               	goto	u15240
 35574                           
 35575                           ; BSR set to: 57
 35576                           ;../app/app_src/crc.c: 46:     result = CRC_CalculatedResultGet(0,0);
 35577  009A0C  0E00               	movlw	0
 35578  009A0E  0100               	movlb	0	; force () banked
 35579  009A10  6F79               	movwf	(CRC_CalculatedResultGet@xorValue+1)& (0+255),b
 35580  009A12  0E00               	movlw	0
 35581  009A14  6F78               	movwf	CRC_CalculatedResultGet@xorValue& (0+255),b
 35582  009A16  0E00               	movlw	0
 35583  009A18  EC2A  F03A         	call	_CRC_CalculatedResultGet
 35584  009A1C  C078  F088         	movff	?_CRC_CalculatedResultGet,crc16_app@result
 35585  009A20  C079  F089         	movff	?_CRC_CalculatedResultGet+1,crc16_app@result+1
 35586                           
 35587                           ; BSR set to: 0
 35588                           ;../app/app_src/crc.c: 47:     CRCCON0bits.CRCGO = 0;
 35589  009A24  0139               	movlb	57	; force () banked
 35590  009A26  9D68               	bcf	104,6,b	;volatile
 35591                           
 35592                           ; BSR set to: 57
 35593                           ;../app/app_src/crc.c: 48:     CRCCON0bits.EN = 0;
 35594  009A28  0139               	movlb	57	; force () banked
 35595  009A2A  9F68               	bcf	104,7,b	;volatile
 35596                           
 35597                           ; BSR set to: 57
 35598                           ;../app/app_src/crc.c: 49:     return(result);
 35599  009A2C  C088  F082         	movff	crc16_app@result,?_crc16_app
 35600  009A30  C089  F083         	movff	crc16_app@result+1,?_crc16_app+1
 35601                           
 35602                           ; BSR set to: 57
 35603  009A34  0012               	return		;funcret
 35604  009A36                     __end_of_crc16_app:
 35605                           	callstack 0
 35606                           
 35607 ;; *************** function _CRC_CalculatedResultGet *****************
 35608 ;; Defined at:
 35609 ;;		line 159 in file "mcc_generated_files/crc.c"
 35610 ;; Parameters:    Size  Location     Type
 35611 ;;  reverse         1    wreg     _Bool 
 35612 ;;  xorValue        2   24[BANK0 ] unsigned int 
 35613 ;; Auto vars:     Size  Location     Type
 35614 ;;  reverse         1   29[BANK0 ] _Bool 
 35615 ;;  result          2   32[BANK0 ] unsigned int 
 35616 ;;  mask            2   30[BANK0 ] unsigned int 
 35617 ;; Return value:  Size  Location     Type
 35618 ;;                  2   24[BANK0 ] unsigned int 
 35619 ;; Registers used:
 35620 ;;		wreg, status,2, status,0, cstack
 35621 ;; Tracked objects:
 35622 ;;		On entry : 3F/0
 35623 ;;		On exit  : 3F/0
 35624 ;;		Unchanged: 0/0
 35625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35626 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35627 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35628 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35629 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35630 ;;Total ram usage:       10 bytes
 35631 ;; Hardware stack levels used:    1
 35632 ;; Hardware stack levels required when called:   12
 35633 ;; This function calls:
 35634 ;;		_CRC_ReverseValue
 35635 ;; This function is called by:
 35636 ;;		_crc16_app
 35637 ;; This function uses a non-reentrant model
 35638 ;;
 35639                           
 35640                           	psect	text197
 35641  007454                     __ptext197:
 35642                           	callstack 0
 35643  007454                     _CRC_CalculatedResultGet:
 35644                           	callstack 16
 35645                           
 35646                           ; BSR set to: 57
 35647                           ;incstack = 0
 35648                           ;CRC_CalculatedResultGet@reverse stored from wreg
 35649  007454  0100               	movlb	0	; force () banked
 35650  007456  6F7D               	movwf	CRC_CalculatedResultGet@reverse& (0+255),b
 35651                           
 35652                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 35653  007458  0139               	movlb	57	; force () banked
 35654  00745A  9D68               	bcf	104,6,b	;volatile
 35655                           
 35656                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 35657  00745C  0139               	movlb	57	; force () banked
 35658  00745E  9DA0               	bcf	160,6,b	;volatile
 35659                           
 35660                           ; BSR set to: 57
 35661                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 35662  007460  0139               	movlb	57	; force () banked
 35663  007462  5169               	movf	105,w,b	;volatile
 35664  007464  0B0F               	andlw	15
 35665  007466  0100               	movlb	0	; force () banked
 35666  007468  6F7A               	movwf	??_CRC_CalculatedResultGet& (0+255),b
 35667  00746A  3B7A               	swapf	??_CRC_CalculatedResultGet& (0+255),f,b
 35668  00746C  0139               	movlb	57	; force () banked
 35669  00746E  5169               	movf	105,w,b	;volatile
 35670  007470  0100               	movlb	0	; force () banked
 35671  007472  197A               	xorwf	??_CRC_CalculatedResultGet& (0+255),w,b
 35672  007474  0B0F               	andlw	-241
 35673  007476  197A               	xorwf	??_CRC_CalculatedResultGet& (0+255),w,b
 35674  007478  0139               	movlb	57	; force () banked
 35675  00747A  6F69               	movwf	105,b	;volatile
 35676                           
 35677                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 35678  00747C  0E08               	movlw	8
 35679  00747E  0102               	movlb	2	; force () banked
 35680  007480  65E1               	cpfsgt	(_crcObj+1)& (0+255),b
 35681  007482  D003               	goto	l17560
 35682                           
 35683                           ; BSR set to: 2
 35684                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 35685  007484  0E00               	movlw	0
 35686  007486  0139               	movlb	57	; force () banked
 35687  007488  6F61               	movwf	97,b	;volatile
 35688  00748A                     l17560:
 35689                           
 35690                           ; BSR set to: 2
 35691                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 35692  00748A  0E00               	movlw	0
 35693  00748C  0139               	movlb	57	; force () banked
 35694  00748E  6F60               	movwf	96,b	;volatile
 35695                           
 35696                           ; BSR set to: 57
 35697                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 35698  007490  0139               	movlb	57	; force () banked
 35699  007492  8D68               	bsf	104,6,b	;volatile
 35700  007494                     l2144:
 35701                           
 35702                           ; BSR set to: 57
 35703  007494  0139               	movlb	57	; force () banked
 35704  007496  ADA0               	btfss	160,6,b	;volatile
 35705  007498  D7FD               	goto	l2144
 35706                           
 35707                           ; BSR set to: 57
 35708                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 35709  00749A  0139               	movlb	57	; force () banked
 35710  00749C  9DA0               	bcf	160,6,b	;volatile
 35711                           
 35712                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 35713  00749E  0139               	movlb	57	; force () banked
 35714  0074A0  9D68               	bcf	104,6,b	;volatile
 35715                           
 35716                           ; BSR set to: 57
 35717                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 35718  0074A2  C2E0  F07A         	movff	_crcObj,??_CRC_CalculatedResultGet
 35719  0074A6  0EFF               	movlw	255
 35720  0074A8  0100               	movlb	0	; force () banked
 35721  0074AA  277A               	addwf	??_CRC_CalculatedResultGet& (0+255),f,b
 35722  0074AC  3B7A               	swapf	??_CRC_CalculatedResultGet& (0+255),f,b
 35723  0074AE  0139               	movlb	57	; force () banked
 35724  0074B0  5169               	movf	105,w,b	;volatile
 35725  0074B2  0100               	movlb	0	; force () banked
 35726  0074B4  197A               	xorwf	??_CRC_CalculatedResultGet& (0+255),w,b
 35727  0074B6  0B0F               	andlw	-241
 35728  0074B8  197A               	xorwf	??_CRC_CalculatedResultGet& (0+255),w,b
 35729  0074BA  0139               	movlb	57	; force () banked
 35730  0074BC  6F69               	movwf	105,b	;volatile
 35731                           
 35732                           ; BSR set to: 57
 35733                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 35734  0074BE  0139               	movlb	57	; force () banked
 35735  0074C0  5163               	movf	99,w,b	;volatile
 35736  0074C2  0100               	movlb	0	; force () banked
 35737  0074C4  6F7A               	movwf	??_CRC_CalculatedResultGet& (0+255),b
 35738  0074C6  0139               	movlb	57	; force () banked
 35739  0074C8  5162               	movf	98,w,b	;volatile
 35740  0074CA  0100               	movlb	0	; force () banked
 35741  0074CC  6F80               	movwf	CRC_CalculatedResultGet@result& (0+255),b
 35742  0074CE  C07A  F081         	movff	??_CRC_CalculatedResultGet,CRC_CalculatedResultGet@result+1
 35743                           
 35744                           ; BSR set to: 0
 35745                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 35746  0074D2  0E10               	movlw	16
 35747  0074D4  0102               	movlb	2	; force () banked
 35748  0074D6  61E1               	cpfslt	(_crcObj+1)& (0+255),b
 35749  0074D8  D01F               	goto	l17572
 35750                           
 35751                           ; BSR set to: 2
 35752                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 35753  0074DA  C2E1  F07A         	movff	_crcObj+1,??_CRC_CalculatedResultGet
 35754  0074DE  0E01               	movlw	1
 35755  0074E0  0100               	movlb	0	; force () banked
 35756  0074E2  6F7B               	movwf	(??_CRC_CalculatedResultGet+1)& (0+255),b
 35757  0074E4  0E00               	movlw	0
 35758  0074E6  6F7C               	movwf	(??_CRC_CalculatedResultGet+2)& (0+255),b
 35759  0074E8  2B7A               	incf	??_CRC_CalculatedResultGet& (0+255),f,b
 35760  0074EA  D003               	goto	u14954
 35761  0074EC                     u14955:
 35762  0074EC  90D8               	bcf	status,0,c
 35763  0074EE  377B               	rlcf	(??_CRC_CalculatedResultGet+1)& (0+255),f,b
 35764  0074F0  377C               	rlcf	(??_CRC_CalculatedResultGet+2)& (0+255),f,b
 35765  0074F2                     u14954:
 35766  0074F2  2F7A               	decfsz	??_CRC_CalculatedResultGet& (0+255),f,b
 35767  0074F4  D7FB               	goto	u14955
 35768  0074F6  0EFF               	movlw	255
 35769  0074F8  0100               	movlb	0	; force () banked
 35770  0074FA  257B               	addwf	(??_CRC_CalculatedResultGet+1)& (0+255),w,b
 35771  0074FC  0100               	movlb	0	; force () banked
 35772  0074FE  6F7E               	movwf	CRC_CalculatedResultGet@mask& (0+255),b
 35773  007500  0EFF               	movlw	255
 35774  007502  0100               	movlb	0	; force () banked
 35775  007504  217C               	addwfc	(??_CRC_CalculatedResultGet+2)& (0+255),w,b
 35776  007506  0100               	movlb	0	; force () banked
 35777  007508  6F7F               	movwf	(CRC_CalculatedResultGet@mask+1)& (0+255),b
 35778                           
 35779                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 35780  00750A  517E               	movf	CRC_CalculatedResultGet@mask& (0+255),w,b
 35781  00750C  0100               	movlb	0	; force () banked
 35782  00750E  1780               	andwf	CRC_CalculatedResultGet@result& (0+255),f,b
 35783  007510  0100               	movlb	0	; force () banked
 35784  007512  517F               	movf	(CRC_CalculatedResultGet@mask+1)& (0+255),w,b
 35785  007514  0100               	movlb	0	; force () banked
 35786  007516  1781               	andwf	(CRC_CalculatedResultGet@result+1)& (0+255),f,b
 35787  007518                     l17572:
 35788                           
 35789                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 35790  007518  0100               	movlb	0	; force () banked
 35791  00751A  517D               	movf	CRC_CalculatedResultGet@reverse& (0+255),w,b
 35792  00751C  B4D8               	btfsc	status,2,c
 35793  00751E  D00A               	goto	l17576
 35794                           
 35795                           ; BSR set to: 0
 35796                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 35797  007520  C080  F071         	movff	CRC_CalculatedResultGet@result,CRC_ReverseValue@crc
 35798  007524  C081  F072         	movff	CRC_CalculatedResultGet@result+1,CRC_ReverseValue@crc+1
 35799  007528  EC67  F051         	call	_CRC_ReverseValue	;wreg free
 35800  00752C  C071  F080         	movff	?_CRC_ReverseValue,CRC_CalculatedResultGet@result
 35801  007530  C072  F081         	movff	?_CRC_ReverseValue+1,CRC_CalculatedResultGet@result+1
 35802  007534                     l17576:
 35803                           
 35804                           ; BSR set to: 0
 35805                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 35806  007534  0100               	movlb	0	; force () banked
 35807  007536  5178               	movf	CRC_CalculatedResultGet@xorValue& (0+255),w,b
 35808  007538  0100               	movlb	0	; force () banked
 35809  00753A  1B80               	xorwf	CRC_CalculatedResultGet@result& (0+255),f,b
 35810  00753C  0100               	movlb	0	; force () banked
 35811  00753E  5179               	movf	(CRC_CalculatedResultGet@xorValue+1)& (0+255),w,b
 35812  007540  0100               	movlb	0	; force () banked
 35813  007542  1B81               	xorwf	(CRC_CalculatedResultGet@result+1)& (0+255),f,b
 35814                           
 35815                           ; BSR set to: 0
 35816                           ;mcc_generated_files/crc.c: 198:     return result;
 35817  007544  C080  F078         	movff	CRC_CalculatedResultGet@result,?_CRC_CalculatedResultGet
 35818  007548  C081  F079         	movff	CRC_CalculatedResultGet@result+1,?_CRC_CalculatedResultGet+1
 35819                           
 35820                           ; BSR set to: 0
 35821  00754C  0012               	return		;funcret
 35822  00754E                     __end_of_CRC_CalculatedResultGet:
 35823                           	callstack 0
 35824                           
 35825 ;; *************** function _CRC_ReverseValue *****************
 35826 ;; Defined at:
 35827 ;;		line 138 in file "mcc_generated_files/crc.c"
 35828 ;; Parameters:    Size  Location     Type
 35829 ;;  crc             2   17[BANK0 ] unsigned int 
 35830 ;; Auto vars:     Size  Location     Type
 35831 ;;  mask            2   22[BANK0 ] unsigned int 
 35832 ;;  reverse         2   20[BANK0 ] unsigned int 
 35833 ;; Return value:  Size  Location     Type
 35834 ;;                  2   17[BANK0 ] unsigned int 
 35835 ;; Registers used:
 35836 ;;		wreg, status,2, status,0
 35837 ;; Tracked objects:
 35838 ;;		On entry : 3F/0
 35839 ;;		On exit  : 3F/0
 35840 ;;		Unchanged: 0/0
 35841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35842 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35843 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35844 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35845 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35846 ;;Total ram usage:        7 bytes
 35847 ;; Hardware stack levels used:    1
 35848 ;; Hardware stack levels required when called:   11
 35849 ;; This function calls:
 35850 ;;		Nothing
 35851 ;; This function is called by:
 35852 ;;		_CRC_CalculatedResultGet
 35853 ;; This function uses a non-reentrant model
 35854 ;;
 35855                           
 35856                           	psect	text198
 35857  00A2CE                     __ptext198:
 35858                           	callstack 0
 35859  00A2CE                     _CRC_ReverseValue:
 35860                           	callstack 16
 35861                           
 35862                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 35863                           
 35864                           ; BSR set to: 0
 35865                           ;incstack = 0
 35866  00A2CE  0E00               	movlw	0
 35867  00A2D0  0100               	movlb	0	; force () banked
 35868  00A2D2  6F77               	movwf	(CRC_ReverseValue@mask+1)& (0+255),b
 35869  00A2D4  0E01               	movlw	1
 35870  00A2D6  6F76               	movwf	CRC_ReverseValue@mask& (0+255),b
 35871                           
 35872                           ; BSR set to: 0
 35873                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 35874  00A2D8  C2E1  F073         	movff	_crcObj+1,??_CRC_ReverseValue
 35875  00A2DC  0EFF               	movlw	255
 35876  00A2DE  0100               	movlb	0	; force () banked
 35877  00A2E0  2773               	addwf	??_CRC_ReverseValue& (0+255),f,b
 35878  00A2E2  2973               	incf	??_CRC_ReverseValue& (0+255),w,b
 35879  00A2E4  D004               	goto	u14720
 35880  00A2E6                     u14725:
 35881  00A2E6  90D8               	bcf	status,0,c
 35882  00A2E8  0100               	movlb	0	; force () banked
 35883  00A2EA  3776               	rlcf	CRC_ReverseValue@mask& (0+255),f,b
 35884  00A2EC  3777               	rlcf	(CRC_ReverseValue@mask+1)& (0+255),f,b
 35885  00A2EE                     u14720:
 35886  00A2EE  2EE8               	decfsz	wreg,f,c
 35887  00A2F0  D7FA               	goto	u14725
 35888                           
 35889                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 35890  00A2F2  0E00               	movlw	0
 35891  00A2F4  0100               	movlb	0	; force () banked
 35892  00A2F6  6F75               	movwf	(CRC_ReverseValue@reverse+1)& (0+255),b
 35893  00A2F8  0E00               	movlw	0
 35894  00A2FA  6F74               	movwf	CRC_ReverseValue@reverse& (0+255),b
 35895                           
 35896                           ;mcc_generated_files/crc.c: 147:     while(crc)
 35897  00A2FC  D013               	goto	l2135
 35898  00A2FE                     l2136:
 35899                           
 35900                           ; BSR set to: 0
 35901                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 35902  00A2FE  0100               	movlb	0	; force () banked
 35903  00A300  A171               	btfss	CRC_ReverseValue@crc& (0+255),0,b
 35904  00A302  D008               	goto	l17400
 35905                           
 35906                           ; BSR set to: 0
 35907                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 35908  00A304  0100               	movlb	0	; force () banked
 35909  00A306  5176               	movf	CRC_ReverseValue@mask& (0+255),w,b
 35910  00A308  0100               	movlb	0	; force () banked
 35911  00A30A  1374               	iorwf	CRC_ReverseValue@reverse& (0+255),f,b
 35912  00A30C  0100               	movlb	0	; force () banked
 35913  00A30E  5177               	movf	(CRC_ReverseValue@mask+1)& (0+255),w,b
 35914  00A310  0100               	movlb	0	; force () banked
 35915  00A312  1375               	iorwf	(CRC_ReverseValue@reverse+1)& (0+255),f,b
 35916  00A314                     l17400:
 35917                           
 35918                           ; BSR set to: 0
 35919                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 35920  00A314  0100               	movlb	0	; force () banked
 35921  00A316  90D8               	bcf	status,0,c
 35922  00A318  3377               	rrcf	(CRC_ReverseValue@mask+1)& (0+255),f,b
 35923  00A31A  3376               	rrcf	CRC_ReverseValue@mask& (0+255),f,b
 35924                           
 35925                           ; BSR set to: 0
 35926                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 35927  00A31C  0100               	movlb	0	; force () banked
 35928  00A31E  90D8               	bcf	status,0,c
 35929  00A320  3372               	rrcf	(CRC_ReverseValue@crc+1)& (0+255),f,b
 35930  00A322  3371               	rrcf	CRC_ReverseValue@crc& (0+255),f,b
 35931  00A324                     l2135:
 35932                           
 35933                           ; BSR set to: 0
 35934                           ;mcc_generated_files/crc.c: 147:     while(crc)
 35935  00A324  0100               	movlb	0	; force () banked
 35936  00A326  5171               	movf	CRC_ReverseValue@crc& (0+255),w,b
 35937  00A328  1172               	iorwf	(CRC_ReverseValue@crc+1)& (0+255),w,b
 35938  00A32A  A4D8               	btfss	status,2,c
 35939  00A32C  D7E8               	goto	l2136
 35940                           
 35941                           ; BSR set to: 0
 35942                           ;mcc_generated_files/crc.c: 156:     return reverse;
 35943  00A32E  C074  F071         	movff	CRC_ReverseValue@reverse,?_CRC_ReverseValue
 35944  00A332  C075  F072         	movff	CRC_ReverseValue@reverse+1,?_CRC_ReverseValue+1
 35945                           
 35946                           ; BSR set to: 0
 35947  00A336  0012               	return		;funcret
 35948  00A338                     __end_of_CRC_ReverseValue:
 35949                           	callstack 0
 35950                           
 35951 ;; *************** function _CRC_8BitDataWrite *****************
 35952 ;; Defined at:
 35953 ;;		line 125 in file "mcc_generated_files/crc.c"
 35954 ;; Parameters:    Size  Location     Type
 35955 ;;  data            1    wreg     unsigned char 
 35956 ;; Auto vars:     Size  Location     Type
 35957 ;;  data            1   17[BANK0 ] unsigned char 
 35958 ;; Return value:  Size  Location     Type
 35959 ;;                  1    wreg      _Bool 
 35960 ;; Registers used:
 35961 ;;		wreg
 35962 ;; Tracked objects:
 35963 ;;		On entry : 3F/39
 35964 ;;		On exit  : 3F/39
 35965 ;;		Unchanged: 0/0
 35966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35968 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35970 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35971 ;;Total ram usage:        1 bytes
 35972 ;; Hardware stack levels used:    1
 35973 ;; Hardware stack levels required when called:   11
 35974 ;; This function calls:
 35975 ;;		Nothing
 35976 ;; This function is called by:
 35977 ;;		_crc16_app
 35978 ;; This function uses a non-reentrant model
 35979 ;;
 35980                           
 35981                           	psect	text199
 35982  00BB2A                     __ptext199:
 35983                           	callstack 0
 35984  00BB2A                     _CRC_8BitDataWrite:
 35985                           	callstack 17
 35986                           
 35987                           ; BSR set to: 0
 35988                           ;incstack = 0
 35989                           ;CRC_8BitDataWrite@data stored from wreg
 35990  00BB2A  0100               	movlb	0	; force () banked
 35991  00BB2C  6F71               	movwf	CRC_8BitDataWrite@data& (0+255),b
 35992                           
 35993                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 35994  00BB2E  0139               	movlb	57	; force () banked
 35995  00BB30  B168               	btfsc	104,0,b	;volatile
 35996  00BB32  D005               	goto	l17550
 35997                           
 35998                           ; BSR set to: 57
 35999                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 36000  00BB34  0060  F1C7  F960   	movff	CRC_8BitDataWrite@data,14688	;volatile
 36001                           
 36002                           ;mcc_generated_files/crc.c: 130:         return(1);
 36003  00BB3A  0E01               	movlw	1
 36004  00BB3C  0012               	return	
 36005  00BB3E                     l17550:
 36006                           
 36007                           ; BSR set to: 57
 36008                           ;mcc_generated_files/crc.c: 133:     {;mcc_generated_files/crc.c: 134:         return(0)
      +                          ;
 36009  00BB3E  0E00               	movlw	0
 36010                           
 36011                           ; BSR set to: 57
 36012  00BB40  0012               	return		;funcret
 36013  00BB42                     __end_of_CRC_8BitDataWrite:
 36014                           	callstack 0
 36015                           
 36016 ;; *************** function _AES_init_ctx_iv *****************
 36017 ;; Defined at:
 36018 ;;		line 229 in file "../aes/aes_src/AES.c"
 36019 ;; Parameters:    Size  Location     Type
 36020 ;;  ctx             2   40[BANK0 ] PTR struct AES_ctx
 36021 ;;		 -> app_aes_decrypt@ctx(192), app_aes_encrypt@ctx(192), 
 36022 ;;  key             2   42[BANK0 ] PTR const unsigned char 
 36023 ;;		 -> aes_key(16), 
 36024 ;;  iv              2   44[BANK0 ] PTR const unsigned char 
 36025 ;;		 -> app_aes_decrypt@iv(16), app_aes_encrypt@iv(16), 
 36026 ;; Auto vars:     Size  Location     Type
 36027 ;;		None
 36028 ;; Return value:  Size  Location     Type
 36029 ;;                  1    wreg      void 
 36030 ;; Registers used:
 36031 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36032 ;; Tracked objects:
 36033 ;;		On entry : 3F/0
 36034 ;;		On exit  : 3F/0
 36035 ;;		Unchanged: 0/0
 36036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36037 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36040 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36041 ;;Total ram usage:        6 bytes
 36042 ;; Hardware stack levels used:    1
 36043 ;; Hardware stack levels required when called:   12
 36044 ;; This function calls:
 36045 ;;		_KeyExpansion
 36046 ;;		_memcpy
 36047 ;; This function is called by:
 36048 ;;		_app_aes_encrypt
 36049 ;;		_app_aes_decrypt
 36050 ;; This function uses a non-reentrant model
 36051 ;;
 36052                           
 36053                           	psect	text200
 36054  00AA4E                     __ptext200:
 36055                           	callstack 0
 36056  00AA4E                     _AES_init_ctx_iv:
 36057                           	callstack 13
 36058                           
 36059                           ;../aes/aes_src/AES.c: 229: void AES_init_ctx_iv(struct AES_ctx* ctx, const uint8_t* key
      +                          , const uint8_t* iv);../aes/aes_src/AES.c: 230: {;../aes/aes_src/AES.c: 231:   KeyExpans
      +                          ion(ctx->RoundKey, key);
 36060                           
 36061                           ; BSR set to: 57
 36062                           ;incstack = 0
 36063  00AA4E  C088  F071         	movff	AES_init_ctx_iv@ctx,KeyExpansion@RoundKey
 36064  00AA52  C089  F072         	movff	AES_init_ctx_iv@ctx+1,KeyExpansion@RoundKey+1
 36065  00AA56  C08A  F073         	movff	AES_init_ctx_iv@key,KeyExpansion@Key
 36066  00AA5A  C08B  F074         	movff	AES_init_ctx_iv@key+1,KeyExpansion@Key+1
 36067  00AA5E  ECF2  F007         	call	_KeyExpansion	;wreg free
 36068                           
 36069                           ;../aes/aes_src/AES.c: 232:   memcpy (ctx->Iv, iv, 16);
 36070  00AA62  0EB0               	movlw	176
 36071  00AA64  0100               	movlb	0	; force () banked
 36072  00AA66  2588               	addwf	AES_init_ctx_iv@ctx& (0+255),w,b
 36073  00AA68  0100               	movlb	0	; force () banked
 36074  00AA6A  6F77               	movwf	memcpy@d1& (0+255),b
 36075  00AA6C  0E00               	movlw	0
 36076  00AA6E  0100               	movlb	0	; force () banked
 36077  00AA70  2189               	addwfc	(AES_init_ctx_iv@ctx+1)& (0+255),w,b
 36078  00AA72  0100               	movlb	0	; force () banked
 36079  00AA74  6F78               	movwf	(memcpy@d1+1)& (0+255),b
 36080  00AA76  C08C  F079         	movff	AES_init_ctx_iv@iv,memcpy@s1
 36081  00AA7A  C08D  F07A         	movff	AES_init_ctx_iv@iv+1,memcpy@s1+1
 36082  00AA7E  0100               	movlb	0	; force () banked
 36083  00AA80  5179               	movf	memcpy@s1& (0+255),w,b
 36084  00AA82  117A               	iorwf	(memcpy@s1+1)& (0+255),w,b
 36085  00AA84  A4D8               	btfss	status,2,c
 36086  00AA86  0E20               	movlw	32
 36087  00AA88  6F7B               	movwf	(memcpy@s1+2)& (0+255),b
 36088  00AA8A  0E00               	movlw	0
 36089  00AA8C  0100               	movlb	0	; force () banked
 36090  00AA8E  6F7D               	movwf	(memcpy@n+1)& (0+255),b
 36091  00AA90  0E10               	movlw	16
 36092  00AA92  6F7C               	movwf	memcpy@n& (0+255),b
 36093  00AA94  ECC1  F04F         	call	_memcpy	;wreg free
 36094                           
 36095                           ; BSR set to: 0
 36096  00AA98  0012               	return		;funcret
 36097  00AA9A                     __end_of_AES_init_ctx_iv:
 36098                           	callstack 0
 36099                           
 36100 ;; *************** function _KeyExpansion *****************
 36101 ;; Defined at:
 36102 ;;		line 151 in file "../aes/aes_src/AES.c"
 36103 ;; Parameters:    Size  Location     Type
 36104 ;;  RoundKey        2   17[BANK0 ] PTR unsigned char 
 36105 ;;		 -> app_aes_decrypt@ctx(192), app_aes_encrypt@ctx(192), 
 36106 ;;  Key             2   19[BANK0 ] PTR const unsigned char 
 36107 ;;		 -> aes_key(16), 
 36108 ;; Auto vars:     Size  Location     Type
 36109 ;;  u8tmp           1   29[BANK0 ] unsigned char 
 36110 ;;  tempa           4   32[BANK0 ] unsigned char [4]
 36111 ;;  i               2   38[BANK0 ] unsigned int 
 36112 ;;  k               2   36[BANK0 ] unsigned int 
 36113 ;;  j               2   30[BANK0 ] unsigned int 
 36114 ;; Return value:  Size  Location     Type
 36115 ;;                  1    wreg      void 
 36116 ;; Registers used:
 36117 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36118 ;; Tracked objects:
 36119 ;;		On entry : 0/0
 36120 ;;		On exit  : 3F/0
 36121 ;;		Unchanged: 0/0
 36122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36123 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36124 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36125 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36126 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36127 ;;Total ram usage:       23 bytes
 36128 ;; Hardware stack levels used:    1
 36129 ;; Hardware stack levels required when called:   11
 36130 ;; This function calls:
 36131 ;;		Nothing
 36132 ;; This function is called by:
 36133 ;;		_AES_init_ctx_iv
 36134 ;; This function uses a non-reentrant model
 36135 ;;
 36136                           
 36137                           	psect	text201
 36138  000FE4                     __ptext201:
 36139                           	callstack 0
 36140  000FE4                     _KeyExpansion:
 36141                           	callstack 13
 36142                           
 36143                           ;../aes/aes_src/AES.c: 151: static void KeyExpansion(uint8_t* RoundKey, const uint8_t* K
      +                          ey);../aes/aes_src/AES.c: 152: {;../aes/aes_src/AES.c: 153:   unsigned i, j, k;;../aes/a
      +                          es_src/AES.c: 154:   uint8_t tempa[4];;../aes/aes_src/AES.c: 157:   for (i = 0; i < 4; +
      +                          +i)
 36144                           
 36145                           ; BSR set to: 0
 36146                           ;incstack = 0
 36147  000FE4  0E00               	movlw	0
 36148  000FE6  0100               	movlb	0	; force () banked
 36149  000FE8  6F87               	movwf	(KeyExpansion@i+1)& (0+255),b
 36150  000FEA  0E00               	movlw	0
 36151  000FEC  6F86               	movwf	KeyExpansion@i& (0+255),b
 36152                           
 36153                           ; BSR set to: 0
 36154  000FEE  0100               	movlb	0	; force () banked
 36155  000FF0  5187               	movf	(KeyExpansion@i+1)& (0+255),w,b
 36156  000FF2  E101               	bnz	u14770
 36157  000FF4  D0C0               	goto	L45
 36158  000FF6                     u14770:
 36159  000FF6  D0C3               	goto	u14780
 36160  000FF8                     l17422:
 36161                           
 36162                           ; BSR set to: 0
 36163                           ;../aes/aes_src/AES.c: 158:   {;../aes/aes_src/AES.c: 159:     RoundKey[(i * 4) + 0] = K
      +                          ey[(i * 4) + 0];
 36164  000FF8  90D8               	bcf	status,0,c
 36165  000FFA  0100               	movlb	0	; force () banked
 36166  000FFC  3586               	rlcf	KeyExpansion@i& (0+255),w,b
 36167  000FFE  6ED9               	movwf	fsr2l,c
 36168  001000  3587               	rlcf	(KeyExpansion@i+1)& (0+255),w,b
 36169  001002  6EDA               	movwf	fsr2h,c
 36170  001004  90D8               	bcf	status,0,c
 36171  001006  36D9               	rlcf	fsr2l,f,c
 36172  001008  36DA               	rlcf	fsr2h,f,c
 36173  00100A  0100               	movlb	0	; force () banked
 36174  00100C  5173               	movf	KeyExpansion@Key& (0+255),w,b
 36175  00100E  26D9               	addwf	fsr2l,f,c
 36176  001010  5174               	movf	(KeyExpansion@Key+1)& (0+255),w,b
 36177  001012  22DA               	addwfc	fsr2h,f,c
 36178  001014  90D8               	bcf	status,0,c
 36179  001016  0100               	movlb	0	; force () banked
 36180  001018  3586               	rlcf	KeyExpansion@i& (0+255),w,b
 36181  00101A  6EE9               	movwf	fsr0l,c
 36182  00101C  3587               	rlcf	(KeyExpansion@i+1)& (0+255),w,b
 36183  00101E  6EEA               	movwf	fsr0h,c
 36184  001020  90D8               	bcf	status,0,c
 36185  001022  36E9               	rlcf	fsr0l,f,c
 36186  001024  36EA               	rlcf	fsr0h,f,c
 36187  001026  0100               	movlb	0	; force () banked
 36188  001028  5171               	movf	KeyExpansion@RoundKey& (0+255),w,b
 36189  00102A  26E9               	addwf	fsr0l,f,c
 36190  00102C  5172               	movf	(KeyExpansion@RoundKey+1)& (0+255),w,b
 36191  00102E  22EA               	addwfc	fsr0h,f,c
 36192  001030  006F FF7F FFEF     	movff	indf2,indf0
 36193                           
 36194                           ;../aes/aes_src/AES.c: 160:     RoundKey[(i * 4) + 1] = Key[(i * 4) + 1];
 36195  001036  C086  F075         	movff	KeyExpansion@i,??_KeyExpansion
 36196  00103A  C087  F076         	movff	KeyExpansion@i+1,??_KeyExpansion+1
 36197  00103E  0100               	movlb	0	; force () banked
 36198  001040  90D8               	bcf	status,0,c
 36199  001042  3775               	rlcf	??_KeyExpansion& (0+255),f,b
 36200  001044  3776               	rlcf	(??_KeyExpansion+1)& (0+255),f,b
 36201  001046  90D8               	bcf	status,0,c
 36202  001048  3775               	rlcf	??_KeyExpansion& (0+255),f,b
 36203  00104A  3776               	rlcf	(??_KeyExpansion+1)& (0+255),f,b
 36204  00104C  C073  F077         	movff	KeyExpansion@Key,??_KeyExpansion+2
 36205  001050  C074  F078         	movff	KeyExpansion@Key+1,??_KeyExpansion+3
 36206  001054  5175               	movf	??_KeyExpansion& (0+255),w,b
 36207  001056  2777               	addwf	(??_KeyExpansion+2)& (0+255),f,b
 36208  001058  5176               	movf	(??_KeyExpansion+1)& (0+255),w,b
 36209  00105A  2378               	addwfc	(??_KeyExpansion+3)& (0+255),f,b
 36210  00105C  0E01               	movlw	1
 36211  00105E  2577               	addwf	(??_KeyExpansion+2)& (0+255),w,b
 36212  001060  6ED9               	movwf	fsr2l,c
 36213  001062  0E00               	movlw	0
 36214  001064  2178               	addwfc	(??_KeyExpansion+3)& (0+255),w,b
 36215  001066  6EDA               	movwf	fsr2h,c
 36216  001068  C086  F079         	movff	KeyExpansion@i,??_KeyExpansion+4
 36217  00106C  C087  F07A         	movff	KeyExpansion@i+1,??_KeyExpansion+5
 36218  001070  90D8               	bcf	status,0,c
 36219  001072  3779               	rlcf	(??_KeyExpansion+4)& (0+255),f,b
 36220  001074  377A               	rlcf	(??_KeyExpansion+5)& (0+255),f,b
 36221  001076  90D8               	bcf	status,0,c
 36222  001078  3779               	rlcf	(??_KeyExpansion+4)& (0+255),f,b
 36223  00107A  377A               	rlcf	(??_KeyExpansion+5)& (0+255),f,b
 36224  00107C  C071  F07B         	movff	KeyExpansion@RoundKey,??_KeyExpansion+6
 36225  001080  C072  F07C         	movff	KeyExpansion@RoundKey+1,??_KeyExpansion+7
 36226  001084  5179               	movf	(??_KeyExpansion+4)& (0+255),w,b
 36227  001086  277B               	addwf	(??_KeyExpansion+6)& (0+255),f,b
 36228  001088  517A               	movf	(??_KeyExpansion+5)& (0+255),w,b
 36229  00108A  237C               	addwfc	(??_KeyExpansion+7)& (0+255),f,b
 36230  00108C  0E01               	movlw	1
 36231  00108E  257B               	addwf	(??_KeyExpansion+6)& (0+255),w,b
 36232  001090  6EE9               	movwf	fsr0l,c
 36233  001092  0E00               	movlw	0
 36234  001094  217C               	addwfc	(??_KeyExpansion+7)& (0+255),w,b
 36235  001096  6EEA               	movwf	fsr0h,c
 36236  001098  006F FF7F FFEF     	movff	indf2,indf0
 36237                           
 36238                           ;../aes/aes_src/AES.c: 161:     RoundKey[(i * 4) + 2] = Key[(i * 4) + 2];
 36239  00109E  C086  F075         	movff	KeyExpansion@i,??_KeyExpansion
 36240  0010A2  C087  F076         	movff	KeyExpansion@i+1,??_KeyExpansion+1
 36241  0010A6  90D8               	bcf	status,0,c
 36242  0010A8  3775               	rlcf	??_KeyExpansion& (0+255),f,b
 36243  0010AA  3776               	rlcf	(??_KeyExpansion+1)& (0+255),f,b
 36244  0010AC  90D8               	bcf	status,0,c
 36245  0010AE  3775               	rlcf	??_KeyExpansion& (0+255),f,b
 36246  0010B0  3776               	rlcf	(??_KeyExpansion+1)& (0+255),f,b
 36247  0010B2  C073  F077         	movff	KeyExpansion@Key,??_KeyExpansion+2
 36248  0010B6  C074  F078         	movff	KeyExpansion@Key+1,??_KeyExpansion+3
 36249  0010BA  5175               	movf	??_KeyExpansion& (0+255),w,b
 36250  0010BC  2777               	addwf	(??_KeyExpansion+2)& (0+255),f,b
 36251  0010BE  5176               	movf	(??_KeyExpansion+1)& (0+255),w,b
 36252  0010C0  2378               	addwfc	(??_KeyExpansion+3)& (0+255),f,b
 36253  0010C2  0E02               	movlw	2
 36254  0010C4  2577               	addwf	(??_KeyExpansion+2)& (0+255),w,b
 36255  0010C6  6ED9               	movwf	fsr2l,c
 36256  0010C8  0E00               	movlw	0
 36257  0010CA  2178               	addwfc	(??_KeyExpansion+3)& (0+255),w,b
 36258  0010CC  6EDA               	movwf	fsr2h,c
 36259  0010CE  C086  F079         	movff	KeyExpansion@i,??_KeyExpansion+4
 36260  0010D2  C087  F07A         	movff	KeyExpansion@i+1,??_KeyExpansion+5
 36261  0010D6  90D8               	bcf	status,0,c
 36262  0010D8  3779               	rlcf	(??_KeyExpansion+4)& (0+255),f,b
 36263  0010DA  377A               	rlcf	(??_KeyExpansion+5)& (0+255),f,b
 36264  0010DC  90D8               	bcf	status,0,c
 36265  0010DE  3779               	rlcf	(??_KeyExpansion+4)& (0+255),f,b
 36266  0010E0  377A               	rlcf	(??_KeyExpansion+5)& (0+255),f,b
 36267  0010E2  C071  F07B         	movff	KeyExpansion@RoundKey,??_KeyExpansion+6
 36268  0010E6  C072  F07C         	movff	KeyExpansion@RoundKey+1,??_KeyExpansion+7
 36269  0010EA  5179               	movf	(??_KeyExpansion+4)& (0+255),w,b
 36270  0010EC  277B               	addwf	(??_KeyExpansion+6)& (0+255),f,b
 36271  0010EE  517A               	movf	(??_KeyExpansion+5)& (0+255),w,b
 36272  0010F0  237C               	addwfc	(??_KeyExpansion+7)& (0+255),f,b
 36273  0010F2  0E02               	movlw	2
 36274  0010F4  257B               	addwf	(??_KeyExpansion+6)& (0+255),w,b
 36275  0010F6  6EE9               	movwf	fsr0l,c
 36276  0010F8  0E00               	movlw	0
 36277  0010FA  217C               	addwfc	(??_KeyExpansion+7)& (0+255),w,b
 36278  0010FC  6EEA               	movwf	fsr0h,c
 36279  0010FE  006F FF7F FFEF     	movff	indf2,indf0
 36280                           
 36281                           ;../aes/aes_src/AES.c: 162:     RoundKey[(i * 4) + 3] = Key[(i * 4) + 3];
 36282  001104  C086  F075         	movff	KeyExpansion@i,??_KeyExpansion
 36283  001108  C087  F076         	movff	KeyExpansion@i+1,??_KeyExpansion+1
 36284  00110C  90D8               	bcf	status,0,c
 36285  00110E  3775               	rlcf	??_KeyExpansion& (0+255),f,b
 36286  001110  3776               	rlcf	(??_KeyExpansion+1)& (0+255),f,b
 36287  001112  90D8               	bcf	status,0,c
 36288  001114  3775               	rlcf	??_KeyExpansion& (0+255),f,b
 36289  001116  3776               	rlcf	(??_KeyExpansion+1)& (0+255),f,b
 36290  001118  C073  F077         	movff	KeyExpansion@Key,??_KeyExpansion+2
 36291  00111C  C074  F078         	movff	KeyExpansion@Key+1,??_KeyExpansion+3
 36292  001120  5175               	movf	??_KeyExpansion& (0+255),w,b
 36293  001122  2777               	addwf	(??_KeyExpansion+2)& (0+255),f,b
 36294  001124  5176               	movf	(??_KeyExpansion+1)& (0+255),w,b
 36295  001126  2378               	addwfc	(??_KeyExpansion+3)& (0+255),f,b
 36296  001128  0E03               	movlw	3
 36297  00112A  2577               	addwf	(??_KeyExpansion+2)& (0+255),w,b
 36298  00112C  6ED9               	movwf	fsr2l,c
 36299  00112E  0E00               	movlw	0
 36300  001130  2178               	addwfc	(??_KeyExpansion+3)& (0+255),w,b
 36301  001132  6EDA               	movwf	fsr2h,c
 36302  001134  C086  F079         	movff	KeyExpansion@i,??_KeyExpansion+4
 36303  001138  C087  F07A         	movff	KeyExpansion@i+1,??_KeyExpansion+5
 36304  00113C  90D8               	bcf	status,0,c
 36305  00113E  3779               	rlcf	(??_KeyExpansion+4)& (0+255),f,b
 36306  001140  377A               	rlcf	(??_KeyExpansion+5)& (0+255),f,b
 36307  001142  90D8               	bcf	status,0,c
 36308  001144  3779               	rlcf	(??_KeyExpansion+4)& (0+255),f,b
 36309  001146  377A               	rlcf	(??_KeyExpansion+5)& (0+255),f,b
 36310  001148  C071  F07B         	movff	KeyExpansion@RoundKey,??_KeyExpansion+6
 36311  00114C  C072  F07C         	movff	KeyExpansion@RoundKey+1,??_KeyExpansion+7
 36312  001150  5179               	movf	(??_KeyExpansion+4)& (0+255),w,b
 36313  001152  277B               	addwf	(??_KeyExpansion+6)& (0+255),f,b
 36314  001154  517A               	movf	(??_KeyExpansion+5)& (0+255),w,b
 36315  001156  237C               	addwfc	(??_KeyExpansion+7)& (0+255),f,b
 36316  001158  0E03               	movlw	3
 36317  00115A  257B               	addwf	(??_KeyExpansion+6)& (0+255),w,b
 36318  00115C  6EE9               	movwf	fsr0l,c
 36319  00115E  0E00               	movlw	0
 36320  001160  217C               	addwfc	(??_KeyExpansion+7)& (0+255),w,b
 36321  001162  6EEA               	movwf	fsr0h,c
 36322  001164  006F FF7F FFEF     	movff	indf2,indf0
 36323                           
 36324                           ; BSR set to: 0
 36325                           ;../aes/aes_src/AES.c: 163:   }
 36326  00116A  0100               	movlb	0	; force () banked
 36327  00116C  4B86               	infsnz	KeyExpansion@i& (0+255),f,b
 36328  00116E  2B87               	incf	(KeyExpansion@i+1)& (0+255),f,b
 36329                           
 36330                           ; BSR set to: 0
 36331  001170  0100               	movlb	0	; force () banked
 36332  001172  5187               	movf	(KeyExpansion@i+1)& (0+255),w,b
 36333  001174  E104               	bnz	u14780
 36334  001176                     L45:
 36335  001176  0E04               	movlw	4
 36336  001178  5D86               	subwf	KeyExpansion@i& (0+255),w,b
 36337  00117A  A0D8               	btfss	status,0,c
 36338  00117C  D73D               	goto	l17422
 36339  00117E                     u14780:
 36340                           
 36341                           ; BSR set to: 0
 36342                           ;../aes/aes_src/AES.c: 166:   for (i = 4; i < 4 * (10 + 1); ++i)
 36343  00117E  0E00               	movlw	0
 36344  001180  0100               	movlb	0	; force () banked
 36345  001182  6F87               	movwf	(KeyExpansion@i+1)& (0+255),b
 36346  001184  0E04               	movlw	4
 36347  001186  6F86               	movwf	KeyExpansion@i& (0+255),b
 36348                           
 36349                           ; BSR set to: 0
 36350  001188  0100               	movlb	0	; force () banked
 36351  00118A  5187               	movf	(KeyExpansion@i+1)& (0+255),w,b
 36352  00118C  E101               	bnz	u14790
 36353  00118E  D179               	goto	L46
 36354  001190                     u14790:
 36355  001190  0012               	return	
 36356  001192                     l17434:
 36357                           
 36358                           ; BSR set to: 0
 36359                           ;../aes/aes_src/AES.c: 167:   {;../aes/aes_src/AES.c: 168:     {;../aes/aes_src/AES.c: 1
      +                          69:       k = (i - 1) * 4;
 36360  001192  C086  F075         	movff	KeyExpansion@i,??_KeyExpansion
 36361  001196  C087  F076         	movff	KeyExpansion@i+1,??_KeyExpansion+1
 36362  00119A  0100               	movlb	0	; force () banked
 36363  00119C  90D8               	bcf	status,0,c
 36364  00119E  3775               	rlcf	??_KeyExpansion& (0+255),f,b
 36365  0011A0  3776               	rlcf	(??_KeyExpansion+1)& (0+255),f,b
 36366  0011A2  90D8               	bcf	status,0,c
 36367  0011A4  3775               	rlcf	??_KeyExpansion& (0+255),f,b
 36368  0011A6  3776               	rlcf	(??_KeyExpansion+1)& (0+255),f,b
 36369  0011A8  0EFC               	movlw	252
 36370  0011AA  2575               	addwf	??_KeyExpansion& (0+255),w,b
 36371  0011AC  0100               	movlb	0	; force () banked
 36372  0011AE  6F84               	movwf	KeyExpansion@k& (0+255),b
 36373  0011B0  0EFF               	movlw	255
 36374  0011B2  0100               	movlb	0	; force () banked
 36375  0011B4  2176               	addwfc	(??_KeyExpansion+1)& (0+255),w,b
 36376  0011B6  0100               	movlb	0	; force () banked
 36377  0011B8  6F85               	movwf	(KeyExpansion@k+1)& (0+255),b
 36378                           
 36379                           ; BSR set to: 0
 36380                           ;../aes/aes_src/AES.c: 170:       tempa[0]=RoundKey[k + 0];
 36381  0011BA  0100               	movlb	0	; force () banked
 36382  0011BC  5184               	movf	KeyExpansion@k& (0+255),w,b
 36383  0011BE  0100               	movlb	0	; force () banked
 36384  0011C0  2571               	addwf	KeyExpansion@RoundKey& (0+255),w,b
 36385  0011C2  6ED9               	movwf	fsr2l,c
 36386  0011C4  0100               	movlb	0	; force () banked
 36387  0011C6  5185               	movf	(KeyExpansion@k+1)& (0+255),w,b
 36388  0011C8  0100               	movlb	0	; force () banked
 36389  0011CA  2172               	addwfc	(KeyExpansion@RoundKey+1)& (0+255),w,b
 36390  0011CC  6EDA               	movwf	fsr2h,c
 36391  0011CE  50DF               	movf	indf2,w,c
 36392  0011D0  0100               	movlb	0	; force () banked
 36393  0011D2  6F80               	movwf	KeyExpansion@tempa& (0+255),b
 36394                           
 36395                           ; BSR set to: 0
 36396                           ;../aes/aes_src/AES.c: 171:       tempa[1]=RoundKey[k + 1];
 36397  0011D4  0100               	movlb	0	; force () banked
 36398  0011D6  5184               	movf	KeyExpansion@k& (0+255),w,b
 36399  0011D8  0100               	movlb	0	; force () banked
 36400  0011DA  2571               	addwf	KeyExpansion@RoundKey& (0+255),w,b
 36401  0011DC  0100               	movlb	0	; force () banked
 36402  0011DE  6F75               	movwf	??_KeyExpansion& (0+255),b
 36403  0011E0  0100               	movlb	0	; force () banked
 36404  0011E2  5185               	movf	(KeyExpansion@k+1)& (0+255),w,b
 36405  0011E4  0100               	movlb	0	; force () banked
 36406  0011E6  2172               	addwfc	(KeyExpansion@RoundKey+1)& (0+255),w,b
 36407  0011E8  0100               	movlb	0	; force () banked
 36408  0011EA  6F76               	movwf	(??_KeyExpansion+1)& (0+255),b
 36409  0011EC  0E01               	movlw	1
 36410  0011EE  2575               	addwf	??_KeyExpansion& (0+255),w,b
 36411  0011F0  6ED9               	movwf	fsr2l,c
 36412  0011F2  0E00               	movlw	0
 36413  0011F4  2176               	addwfc	(??_KeyExpansion+1)& (0+255),w,b
 36414  0011F6  6EDA               	movwf	fsr2h,c
 36415  0011F8  50DF               	movf	indf2,w,c
 36416  0011FA  0100               	movlb	0	; force () banked
 36417  0011FC  6F81               	movwf	(KeyExpansion@tempa+1)& (0+255),b
 36418                           
 36419                           ; BSR set to: 0
 36420                           ;../aes/aes_src/AES.c: 172:       tempa[2]=RoundKey[k + 2];
 36421  0011FE  0100               	movlb	0	; force () banked
 36422  001200  5184               	movf	KeyExpansion@k& (0+255),w,b
 36423  001202  0100               	movlb	0	; force () banked
 36424  001204  2571               	addwf	KeyExpansion@RoundKey& (0+255),w,b
 36425  001206  0100               	movlb	0	; force () banked
 36426  001208  6F75               	movwf	??_KeyExpansion& (0+255),b
 36427  00120A  0100               	movlb	0	; force () banked
 36428  00120C  5185               	movf	(KeyExpansion@k+1)& (0+255),w,b
 36429  00120E  0100               	movlb	0	; force () banked
 36430  001210  2172               	addwfc	(KeyExpansion@RoundKey+1)& (0+255),w,b
 36431  001212  0100               	movlb	0	; force () banked
 36432  001214  6F76               	movwf	(??_KeyExpansion+1)& (0+255),b
 36433  001216  0E02               	movlw	2
 36434  001218  2575               	addwf	??_KeyExpansion& (0+255),w,b
 36435  00121A  6ED9               	movwf	fsr2l,c
 36436  00121C  0E00               	movlw	0
 36437  00121E  2176               	addwfc	(??_KeyExpansion+1)& (0+255),w,b
 36438  001220  6EDA               	movwf	fsr2h,c
 36439  001222  50DF               	movf	indf2,w,c
 36440  001224  0100               	movlb	0	; force () banked
 36441  001226  6F82               	movwf	(KeyExpansion@tempa+2)& (0+255),b
 36442                           
 36443                           ; BSR set to: 0
 36444                           ;../aes/aes_src/AES.c: 173:       tempa[3]=RoundKey[k + 3];
 36445  001228  0100               	movlb	0	; force () banked
 36446  00122A  5184               	movf	KeyExpansion@k& (0+255),w,b
 36447  00122C  0100               	movlb	0	; force () banked
 36448  00122E  2571               	addwf	KeyExpansion@RoundKey& (0+255),w,b
 36449  001230  0100               	movlb	0	; force () banked
 36450  001232  6F75               	movwf	??_KeyExpansion& (0+255),b
 36451  001234  0100               	movlb	0	; force () banked
 36452  001236  5185               	movf	(KeyExpansion@k+1)& (0+255),w,b
 36453  001238  0100               	movlb	0	; force () banked
 36454  00123A  2172               	addwfc	(KeyExpansion@RoundKey+1)& (0+255),w,b
 36455  00123C  0100               	movlb	0	; force () banked
 36456  00123E  6F76               	movwf	(??_KeyExpansion+1)& (0+255),b
 36457  001240  0E03               	movlw	3
 36458  001242  2575               	addwf	??_KeyExpansion& (0+255),w,b
 36459  001244  6ED9               	movwf	fsr2l,c
 36460  001246  0E00               	movlw	0
 36461  001248  2176               	addwfc	(??_KeyExpansion+1)& (0+255),w,b
 36462  00124A  6EDA               	movwf	fsr2h,c
 36463  00124C  50DF               	movf	indf2,w,c
 36464  00124E  0100               	movlb	0	; force () banked
 36465  001250  6F83               	movwf	(KeyExpansion@tempa+3)& (0+255),b
 36466                           
 36467                           ;../aes/aes_src/AES.c: 175:     };../aes/aes_src/AES.c: 177:     if (i % 4 == 0)
 36468  001252  C086  F075         	movff	KeyExpansion@i,??_KeyExpansion
 36469  001256  0E03               	movlw	3
 36470  001258  0100               	movlb	0	; force () banked
 36471  00125A  1775               	andwf	??_KeyExpansion& (0+255),f,b
 36472  00125C  A4D8               	btfss	status,2,c
 36473  00125E  D058               	goto	l17448
 36474                           
 36475                           ; BSR set to: 0
 36476                           ;../aes/aes_src/AES.c: 178:     {;../aes/aes_src/AES.c: 183:       {;../aes/aes_src/AES.
      +                          c: 184:         uint8_t u8tmp = tempa[0];
 36477  001260  C080  F07D         	movff	KeyExpansion@tempa,KeyExpansion@u8tmp
 36478                           
 36479                           ;../aes/aes_src/AES.c: 185:         tempa[0] = tempa[1];
 36480  001264  C081  F080         	movff	KeyExpansion@tempa+1,KeyExpansion@tempa
 36481                           
 36482                           ;../aes/aes_src/AES.c: 186:         tempa[1] = tempa[2];
 36483  001268  C082  F081         	movff	KeyExpansion@tempa+2,KeyExpansion@tempa+1
 36484                           
 36485                           ;../aes/aes_src/AES.c: 187:         tempa[2] = tempa[3];
 36486  00126C  C083  F082         	movff	KeyExpansion@tempa+3,KeyExpansion@tempa+2
 36487                           
 36488                           ;../aes/aes_src/AES.c: 188:         tempa[3] = u8tmp;
 36489  001270  C07D  F083         	movff	KeyExpansion@u8tmp,KeyExpansion@tempa+3
 36490                           
 36491                           ; BSR set to: 0
 36492                           ;../aes/aes_src/AES.c: 189:       };../aes/aes_src/AES.c: 195:       {;../aes/aes_src/AE
      +                          S.c: 196:         tempa[0] = (sbox[(tempa[0])]);
 36493  001274  0E55               	movlw	low _sbox
 36494  001276  0100               	movlb	0	; force () banked
 36495  001278  2580               	addwf	KeyExpansion@tempa& (0+255),w,b
 36496  00127A  6EF6               	movwf	tblptrl,c
 36497  00127C  6AF7               	clrf	tblptrh,c
 36498  00127E  0EFD               	movlw	high _sbox
 36499  001280  22F7               	addwfc	tblptrh,f,c
 36500  001282                     	if	1	;There are 3 active tblptr bytes
 36501  001282  6AF8               	clrf	tblptru,c
 36502  001284  0E00               	movlw	low (__mediumconst shr (0+16))
 36503  001286  22F8               	addwfc	tblptru,f,c
 36504  001288                     	endif
 36505  001288  0008               	tblrd		*
 36506  00128A  006F FFD4  F080    	movff	tablat,KeyExpansion@tempa
 36507                           
 36508                           ;../aes/aes_src/AES.c: 197:         tempa[1] = (sbox[(tempa[1])]);
 36509  001290  0E55               	movlw	low _sbox
 36510  001292  2581               	addwf	(KeyExpansion@tempa+1)& (0+255),w,b
 36511  001294  6EF6               	movwf	tblptrl,c
 36512  001296  6AF7               	clrf	tblptrh,c
 36513  001298  0EFD               	movlw	high _sbox
 36514  00129A  22F7               	addwfc	tblptrh,f,c
 36515  00129C                     	if	1	;There are 3 active tblptr bytes
 36516  00129C  6AF8               	clrf	tblptru,c
 36517  00129E  0E00               	movlw	low (__mediumconst shr (0+16))
 36518  0012A0  22F8               	addwfc	tblptru,f,c
 36519  0012A2                     	endif
 36520  0012A2  0008               	tblrd		*
 36521  0012A4  006F FFD4  F081    	movff	tablat,KeyExpansion@tempa+1
 36522                           
 36523                           ;../aes/aes_src/AES.c: 198:         tempa[2] = (sbox[(tempa[2])]);
 36524  0012AA  0E55               	movlw	low _sbox
 36525  0012AC  2582               	addwf	(KeyExpansion@tempa+2)& (0+255),w,b
 36526  0012AE  6EF6               	movwf	tblptrl,c
 36527  0012B0  6AF7               	clrf	tblptrh,c
 36528  0012B2  0EFD               	movlw	high _sbox
 36529  0012B4  22F7               	addwfc	tblptrh,f,c
 36530  0012B6                     	if	1	;There are 3 active tblptr bytes
 36531  0012B6  6AF8               	clrf	tblptru,c
 36532  0012B8  0E00               	movlw	low (__mediumconst shr (0+16))
 36533  0012BA  22F8               	addwfc	tblptru,f,c
 36534  0012BC                     	endif
 36535  0012BC  0008               	tblrd		*
 36536  0012BE  006F FFD4  F082    	movff	tablat,KeyExpansion@tempa+2
 36537                           
 36538                           ;../aes/aes_src/AES.c: 199:         tempa[3] = (sbox[(tempa[3])]);
 36539  0012C4  0E55               	movlw	low _sbox
 36540  0012C6  2583               	addwf	(KeyExpansion@tempa+3)& (0+255),w,b
 36541  0012C8  6EF6               	movwf	tblptrl,c
 36542  0012CA  6AF7               	clrf	tblptrh,c
 36543  0012CC  0EFD               	movlw	high _sbox
 36544  0012CE  22F7               	addwfc	tblptrh,f,c
 36545  0012D0                     	if	1	;There are 3 active tblptr bytes
 36546  0012D0  6AF8               	clrf	tblptru,c
 36547  0012D2  0E00               	movlw	low (__mediumconst shr (0+16))
 36548  0012D4  22F8               	addwfc	tblptru,f,c
 36549  0012D6                     	endif
 36550  0012D6  0008               	tblrd		*
 36551  0012D8  006F FFD4  F083    	movff	tablat,KeyExpansion@tempa+3
 36552                           
 36553                           ;../aes/aes_src/AES.c: 200:       };../aes/aes_src/AES.c: 202:       tempa[0] = tempa[0]
      +                           ^ Rcon[i/4];
 36554  0012DE  C086  F075         	movff	KeyExpansion@i,??_KeyExpansion
 36555  0012E2  C087  F076         	movff	KeyExpansion@i+1,??_KeyExpansion+1
 36556  0012E6  0100               	movlb	0	; force () banked
 36557  0012E8  90D8               	bcf	status,0,c
 36558  0012EA  3376               	rrcf	(??_KeyExpansion+1)& (0+255),f,b
 36559  0012EC  3375               	rrcf	??_KeyExpansion& (0+255),f,b
 36560  0012EE  90D8               	bcf	status,0,c
 36561  0012F0  3376               	rrcf	(??_KeyExpansion+1)& (0+255),f,b
 36562  0012F2  3375               	rrcf	??_KeyExpansion& (0+255),f,b
 36563  0012F4  0E8D               	movlw	low _Rcon
 36564  0012F6  2575               	addwf	??_KeyExpansion& (0+255),w,b
 36565  0012F8  6EF6               	movwf	tblptrl,c
 36566  0012FA  0EFE               	movlw	high _Rcon
 36567  0012FC  2176               	addwfc	(??_KeyExpansion+1)& (0+255),w,b
 36568  0012FE  6EF7               	movwf	tblptrh,c
 36569  001300                     	if	1	;There are 3 active tblptr bytes
 36570  001300  6AF8               	clrf	tblptru,c
 36571  001302  0E00               	movlw	low (__mediumconst shr (0+16))
 36572  001304  22F8               	addwfc	tblptru,f,c
 36573  001306                     	endif
 36574  001306  0008               	tblrd		*
 36575  001308  50F5               	movf	tablat,w,c
 36576  00130A  0100               	movlb	0	; force () banked
 36577  00130C  1980               	xorwf	KeyExpansion@tempa& (0+255),w,b
 36578  00130E  6F80               	movwf	KeyExpansion@tempa& (0+255),b
 36579  001310                     l17448:
 36580                           
 36581                           ; BSR set to: 0
 36582                           ;../aes/aes_src/AES.c: 216:     j = i * 4; k=(i - 4) * 4;
 36583  001310  C086  F075         	movff	KeyExpansion@i,??_KeyExpansion
 36584  001314  C087  F076         	movff	KeyExpansion@i+1,??_KeyExpansion+1
 36585  001318  0100               	movlb	0	; force () banked
 36586  00131A  90D8               	bcf	status,0,c
 36587  00131C  3775               	rlcf	??_KeyExpansion& (0+255),f,b
 36588  00131E  3776               	rlcf	(??_KeyExpansion+1)& (0+255),f,b
 36589  001320  90D8               	bcf	status,0,c
 36590  001322  3775               	rlcf	??_KeyExpansion& (0+255),f,b
 36591  001324  3776               	rlcf	(??_KeyExpansion+1)& (0+255),f,b
 36592  001326  C075  F07E         	movff	??_KeyExpansion,KeyExpansion@j
 36593  00132A  C076  F07F         	movff	??_KeyExpansion+1,KeyExpansion@j+1
 36594                           
 36595                           ; BSR set to: 0
 36596  00132E  C086  F075         	movff	KeyExpansion@i,??_KeyExpansion
 36597  001332  C087  F076         	movff	KeyExpansion@i+1,??_KeyExpansion+1
 36598  001336  0100               	movlb	0	; force () banked
 36599  001338  90D8               	bcf	status,0,c
 36600  00133A  3775               	rlcf	??_KeyExpansion& (0+255),f,b
 36601  00133C  3776               	rlcf	(??_KeyExpansion+1)& (0+255),f,b
 36602  00133E  90D8               	bcf	status,0,c
 36603  001340  3775               	rlcf	??_KeyExpansion& (0+255),f,b
 36604  001342  3776               	rlcf	(??_KeyExpansion+1)& (0+255),f,b
 36605  001344  0EF0               	movlw	240
 36606  001346  2575               	addwf	??_KeyExpansion& (0+255),w,b
 36607  001348  0100               	movlb	0	; force () banked
 36608  00134A  6F84               	movwf	KeyExpansion@k& (0+255),b
 36609  00134C  0EFF               	movlw	255
 36610  00134E  0100               	movlb	0	; force () banked
 36611  001350  2176               	addwfc	(??_KeyExpansion+1)& (0+255),w,b
 36612  001352  0100               	movlb	0	; force () banked
 36613  001354  6F85               	movwf	(KeyExpansion@k+1)& (0+255),b
 36614                           
 36615                           ; BSR set to: 0
 36616                           ;../aes/aes_src/AES.c: 217:     RoundKey[j + 0] = RoundKey[k + 0] ^ tempa[0];
 36617  001356  0100               	movlb	0	; force () banked
 36618  001358  517E               	movf	KeyExpansion@j& (0+255),w,b
 36619  00135A  0100               	movlb	0	; force () banked
 36620  00135C  2571               	addwf	KeyExpansion@RoundKey& (0+255),w,b
 36621  00135E  6ED9               	movwf	fsr2l,c
 36622  001360  0100               	movlb	0	; force () banked
 36623  001362  517F               	movf	(KeyExpansion@j+1)& (0+255),w,b
 36624  001364  0100               	movlb	0	; force () banked
 36625  001366  2172               	addwfc	(KeyExpansion@RoundKey+1)& (0+255),w,b
 36626  001368  6EDA               	movwf	fsr2h,c
 36627  00136A  0100               	movlb	0	; force () banked
 36628  00136C  5184               	movf	KeyExpansion@k& (0+255),w,b
 36629  00136E  0100               	movlb	0	; force () banked
 36630  001370  2571               	addwf	KeyExpansion@RoundKey& (0+255),w,b
 36631  001372  6EE9               	movwf	fsr0l,c
 36632  001374  0100               	movlb	0	; force () banked
 36633  001376  5185               	movf	(KeyExpansion@k+1)& (0+255),w,b
 36634  001378  0100               	movlb	0	; force () banked
 36635  00137A  2172               	addwfc	(KeyExpansion@RoundKey+1)& (0+255),w,b
 36636  00137C  6EEA               	movwf	fsr0h,c
 36637  00137E  50EF               	movf	indf0,w,c
 36638  001380  0100               	movlb	0	; force () banked
 36639  001382  1980               	xorwf	KeyExpansion@tempa& (0+255),w,b
 36640  001384  6EDF               	movwf	indf2,c
 36641                           
 36642                           ; BSR set to: 0
 36643                           ;../aes/aes_src/AES.c: 218:     RoundKey[j + 1] = RoundKey[k + 1] ^ tempa[1];
 36644  001386  0100               	movlb	0	; force () banked
 36645  001388  517E               	movf	KeyExpansion@j& (0+255),w,b
 36646  00138A  0100               	movlb	0	; force () banked
 36647  00138C  2571               	addwf	KeyExpansion@RoundKey& (0+255),w,b
 36648  00138E  0100               	movlb	0	; force () banked
 36649  001390  6F75               	movwf	??_KeyExpansion& (0+255),b
 36650  001392  0100               	movlb	0	; force () banked
 36651  001394  517F               	movf	(KeyExpansion@j+1)& (0+255),w,b
 36652  001396  0100               	movlb	0	; force () banked
 36653  001398  2172               	addwfc	(KeyExpansion@RoundKey+1)& (0+255),w,b
 36654  00139A  0100               	movlb	0	; force () banked
 36655  00139C  6F76               	movwf	(??_KeyExpansion+1)& (0+255),b
 36656  00139E  0E01               	movlw	1
 36657  0013A0  2575               	addwf	??_KeyExpansion& (0+255),w,b
 36658  0013A2  6ED9               	movwf	fsr2l,c
 36659  0013A4  0E00               	movlw	0
 36660  0013A6  2176               	addwfc	(??_KeyExpansion+1)& (0+255),w,b
 36661  0013A8  6EDA               	movwf	fsr2h,c
 36662  0013AA  0100               	movlb	0	; force () banked
 36663  0013AC  5184               	movf	KeyExpansion@k& (0+255),w,b
 36664  0013AE  0100               	movlb	0	; force () banked
 36665  0013B0  2571               	addwf	KeyExpansion@RoundKey& (0+255),w,b
 36666  0013B2  0100               	movlb	0	; force () banked
 36667  0013B4  6F77               	movwf	(??_KeyExpansion+2)& (0+255),b
 36668  0013B6  0100               	movlb	0	; force () banked
 36669  0013B8  5185               	movf	(KeyExpansion@k+1)& (0+255),w,b
 36670  0013BA  0100               	movlb	0	; force () banked
 36671  0013BC  2172               	addwfc	(KeyExpansion@RoundKey+1)& (0+255),w,b
 36672  0013BE  0100               	movlb	0	; force () banked
 36673  0013C0  6F78               	movwf	(??_KeyExpansion+3)& (0+255),b
 36674  0013C2  0E01               	movlw	1
 36675  0013C4  2577               	addwf	(??_KeyExpansion+2)& (0+255),w,b
 36676  0013C6  6EE9               	movwf	fsr0l,c
 36677  0013C8  0E00               	movlw	0
 36678  0013CA  2178               	addwfc	(??_KeyExpansion+3)& (0+255),w,b
 36679  0013CC  6EEA               	movwf	fsr0h,c
 36680  0013CE  50EF               	movf	indf0,w,c
 36681  0013D0  0100               	movlb	0	; force () banked
 36682  0013D2  1981               	xorwf	(KeyExpansion@tempa+1)& (0+255),w,b
 36683  0013D4  6EDF               	movwf	indf2,c
 36684                           
 36685                           ; BSR set to: 0
 36686                           ;../aes/aes_src/AES.c: 219:     RoundKey[j + 2] = RoundKey[k + 2] ^ tempa[2];
 36687  0013D6  0100               	movlb	0	; force () banked
 36688  0013D8  517E               	movf	KeyExpansion@j& (0+255),w,b
 36689  0013DA  0100               	movlb	0	; force () banked
 36690  0013DC  2571               	addwf	KeyExpansion@RoundKey& (0+255),w,b
 36691  0013DE  0100               	movlb	0	; force () banked
 36692  0013E0  6F75               	movwf	??_KeyExpansion& (0+255),b
 36693  0013E2  0100               	movlb	0	; force () banked
 36694  0013E4  517F               	movf	(KeyExpansion@j+1)& (0+255),w,b
 36695  0013E6  0100               	movlb	0	; force () banked
 36696  0013E8  2172               	addwfc	(KeyExpansion@RoundKey+1)& (0+255),w,b
 36697  0013EA  0100               	movlb	0	; force () banked
 36698  0013EC  6F76               	movwf	(??_KeyExpansion+1)& (0+255),b
 36699  0013EE  0E02               	movlw	2
 36700  0013F0  2575               	addwf	??_KeyExpansion& (0+255),w,b
 36701  0013F2  6ED9               	movwf	fsr2l,c
 36702  0013F4  0E00               	movlw	0
 36703  0013F6  2176               	addwfc	(??_KeyExpansion+1)& (0+255),w,b
 36704  0013F8  6EDA               	movwf	fsr2h,c
 36705  0013FA  0100               	movlb	0	; force () banked
 36706  0013FC  5184               	movf	KeyExpansion@k& (0+255),w,b
 36707  0013FE  0100               	movlb	0	; force () banked
 36708  001400  2571               	addwf	KeyExpansion@RoundKey& (0+255),w,b
 36709  001402  0100               	movlb	0	; force () banked
 36710  001404  6F77               	movwf	(??_KeyExpansion+2)& (0+255),b
 36711  001406  0100               	movlb	0	; force () banked
 36712  001408  5185               	movf	(KeyExpansion@k+1)& (0+255),w,b
 36713  00140A  0100               	movlb	0	; force () banked
 36714  00140C  2172               	addwfc	(KeyExpansion@RoundKey+1)& (0+255),w,b
 36715  00140E  0100               	movlb	0	; force () banked
 36716  001410  6F78               	movwf	(??_KeyExpansion+3)& (0+255),b
 36717  001412  0E02               	movlw	2
 36718  001414  2577               	addwf	(??_KeyExpansion+2)& (0+255),w,b
 36719  001416  6EE9               	movwf	fsr0l,c
 36720  001418  0E00               	movlw	0
 36721  00141A  2178               	addwfc	(??_KeyExpansion+3)& (0+255),w,b
 36722  00141C  6EEA               	movwf	fsr0h,c
 36723  00141E  50EF               	movf	indf0,w,c
 36724  001420  0100               	movlb	0	; force () banked
 36725  001422  1982               	xorwf	(KeyExpansion@tempa+2)& (0+255),w,b
 36726  001424  6EDF               	movwf	indf2,c
 36727                           
 36728                           ; BSR set to: 0
 36729                           ;../aes/aes_src/AES.c: 220:     RoundKey[j + 3] = RoundKey[k + 3] ^ tempa[3];
 36730  001426  0100               	movlb	0	; force () banked
 36731  001428  517E               	movf	KeyExpansion@j& (0+255),w,b
 36732  00142A  0100               	movlb	0	; force () banked
 36733  00142C  2571               	addwf	KeyExpansion@RoundKey& (0+255),w,b
 36734  00142E  0100               	movlb	0	; force () banked
 36735  001430  6F75               	movwf	??_KeyExpansion& (0+255),b
 36736  001432  0100               	movlb	0	; force () banked
 36737  001434  517F               	movf	(KeyExpansion@j+1)& (0+255),w,b
 36738  001436  0100               	movlb	0	; force () banked
 36739  001438  2172               	addwfc	(KeyExpansion@RoundKey+1)& (0+255),w,b
 36740  00143A  0100               	movlb	0	; force () banked
 36741  00143C  6F76               	movwf	(??_KeyExpansion+1)& (0+255),b
 36742  00143E  0E03               	movlw	3
 36743  001440  2575               	addwf	??_KeyExpansion& (0+255),w,b
 36744  001442  6ED9               	movwf	fsr2l,c
 36745  001444  0E00               	movlw	0
 36746  001446  2176               	addwfc	(??_KeyExpansion+1)& (0+255),w,b
 36747  001448  6EDA               	movwf	fsr2h,c
 36748  00144A  0100               	movlb	0	; force () banked
 36749  00144C  5184               	movf	KeyExpansion@k& (0+255),w,b
 36750  00144E  0100               	movlb	0	; force () banked
 36751  001450  2571               	addwf	KeyExpansion@RoundKey& (0+255),w,b
 36752  001452  0100               	movlb	0	; force () banked
 36753  001454  6F77               	movwf	(??_KeyExpansion+2)& (0+255),b
 36754  001456  0100               	movlb	0	; force () banked
 36755  001458  5185               	movf	(KeyExpansion@k+1)& (0+255),w,b
 36756  00145A  0100               	movlb	0	; force () banked
 36757  00145C  2172               	addwfc	(KeyExpansion@RoundKey+1)& (0+255),w,b
 36758  00145E  0100               	movlb	0	; force () banked
 36759  001460  6F78               	movwf	(??_KeyExpansion+3)& (0+255),b
 36760  001462  0E03               	movlw	3
 36761  001464  2577               	addwf	(??_KeyExpansion+2)& (0+255),w,b
 36762  001466  6EE9               	movwf	fsr0l,c
 36763  001468  0E00               	movlw	0
 36764  00146A  2178               	addwfc	(??_KeyExpansion+3)& (0+255),w,b
 36765  00146C  6EEA               	movwf	fsr0h,c
 36766  00146E  50EF               	movf	indf0,w,c
 36767  001470  0100               	movlb	0	; force () banked
 36768  001472  1983               	xorwf	(KeyExpansion@tempa+3)& (0+255),w,b
 36769  001474  6EDF               	movwf	indf2,c
 36770                           
 36771                           ; BSR set to: 0
 36772                           ;../aes/aes_src/AES.c: 221:   }
 36773  001476  0100               	movlb	0	; force () banked
 36774  001478  4B86               	infsnz	KeyExpansion@i& (0+255),f,b
 36775  00147A  2B87               	incf	(KeyExpansion@i+1)& (0+255),f,b
 36776                           
 36777                           ; BSR set to: 0
 36778  00147C  0100               	movlb	0	; force () banked
 36779  00147E  5187               	movf	(KeyExpansion@i+1)& (0+255),w,b
 36780  001480  E105               	bnz	u14810
 36781  001482                     L46:
 36782  001482  0E2C               	movlw	44
 36783  001484  5D86               	subwf	KeyExpansion@i& (0+255),w,b
 36784  001486  B0D8               	btfsc	status,0,c
 36785  001488  0012               	return	
 36786  00148A  D683               	goto	l17434
 36787  00148C                     u14810:
 36788                           
 36789                           ; BSR set to: 0
 36790  00148C  0012               	return		;funcret
 36791  00148E                     __end_of_KeyExpansion:
 36792                           	callstack 0
 36793                           
 36794 ;; *************** function _AES_CBC_decrypt_buffer *****************
 36795 ;; Defined at:
 36796 ;;		line 514 in file "../aes/aes_src/AES.c"
 36797 ;; Parameters:    Size  Location     Type
 36798 ;;  ctx             2   54[BANK0 ] PTR struct AES_ctx
 36799 ;;		 -> app_aes_decrypt@ctx(192), 
 36800 ;;  buf             2   56[BANK0 ] PTR unsigned char 
 36801 ;;		 -> nwkFrameFrames(690), 
 36802 ;;  length          4   58[BANK0 ] unsigned long 
 36803 ;; Auto vars:     Size  Location     Type
 36804 ;;  storeNextIv    16   66[BANK0 ] unsigned char [16]
 36805 ;;  i               2   82[BANK0 ] unsigned int 
 36806 ;; Return value:  Size  Location     Type
 36807 ;;                  1    wreg      void 
 36808 ;; Registers used:
 36809 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36810 ;; Tracked objects:
 36811 ;;		On entry : 3F/0
 36812 ;;		On exit  : 3F/0
 36813 ;;		Unchanged: 0/0
 36814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36815 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36816 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36817 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36818 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36819 ;;Total ram usage:       30 bytes
 36820 ;; Hardware stack levels used:    1
 36821 ;; Hardware stack levels required when called:   14
 36822 ;; This function calls:
 36823 ;;		_InvCipher
 36824 ;;		_XorWithIv
 36825 ;;		_memcpy
 36826 ;; This function is called by:
 36827 ;;		_app_aes_decrypt
 36828 ;; This function uses a non-reentrant model
 36829 ;;
 36830                           
 36831                           	psect	text202
 36832  007830                     __ptext202:
 36833                           	callstack 0
 36834  007830                     _AES_CBC_decrypt_buffer:
 36835                           	callstack 9
 36836                           
 36837                           ;../aes/aes_src/AES.c: 514: void AES_CBC_decrypt_buffer(struct AES_ctx* ctx, uint8_t* bu
      +                          f, uint32_t length);../aes/aes_src/AES.c: 515: {;../aes/aes_src/AES.c: 516:   uintptr_t 
      +                          i;;../aes/aes_src/AES.c: 517:   uint8_t storeNextIv[16];;../aes/aes_src/AES.c: 518:   fo
      +                          r (i = 0; i < length; i += 16)
 36838                           
 36839                           ; BSR set to: 0
 36840                           ;incstack = 0
 36841  007830  0E00               	movlw	0
 36842  007832  0100               	movlb	0	; force () banked
 36843  007834  6FB3               	movwf	(AES_CBC_decrypt_buffer@i+1)& (0+255),b
 36844  007836  0E00               	movlw	0
 36845  007838  6FB2               	movwf	AES_CBC_decrypt_buffer@i& (0+255),b
 36846  00783A  D055               	goto	l17744
 36847  00783C                     l17732:
 36848                           
 36849                           ; BSR set to: 0
 36850                           ;../aes/aes_src/AES.c: 519:   {;../aes/aes_src/AES.c: 520:     memcpy(storeNextIv, buf, 
      +                          16);
 36851  00783C  0EA2               	movlw	low AES_CBC_decrypt_buffer@storeNextIv
 36852  00783E  0100               	movlb	0	; force () banked
 36853  007840  6F77               	movwf	memcpy@d1& (0+255),b
 36854  007842  0E00               	movlw	high AES_CBC_decrypt_buffer@storeNextIv
 36855  007844  6F78               	movwf	(memcpy@d1+1)& (0+255),b
 36856  007846  C098  F079         	movff	AES_CBC_decrypt_buffer@buf,memcpy@s1
 36857  00784A  C099  F07A         	movff	AES_CBC_decrypt_buffer@buf+1,memcpy@s1+1
 36858  00784E  0100               	movlb	0	; force () banked
 36859  007850  5179               	movf	memcpy@s1& (0+255),w,b
 36860  007852  117A               	iorwf	(memcpy@s1+1)& (0+255),w,b
 36861  007854  A4D8               	btfss	status,2,c
 36862  007856  0E20               	movlw	32
 36863  007858  6F7B               	movwf	(memcpy@s1+2)& (0+255),b
 36864  00785A  0E00               	movlw	0
 36865  00785C  0100               	movlb	0	; force () banked
 36866  00785E  6F7D               	movwf	(memcpy@n+1)& (0+255),b
 36867  007860  0E10               	movlw	16
 36868  007862  6F7C               	movwf	memcpy@n& (0+255),b
 36869  007864  ECC1  F04F         	call	_memcpy	;wreg free
 36870                           
 36871                           ; BSR set to: 0
 36872                           ;../aes/aes_src/AES.c: 521:     InvCipher((state_t*)buf, ctx->RoundKey);
 36873  007868  C098  F091         	movff	AES_CBC_decrypt_buffer@buf,InvCipher@state
 36874  00786C  C099  F092         	movff	AES_CBC_decrypt_buffer@buf+1,InvCipher@state+1
 36875  007870  C096  F093         	movff	AES_CBC_decrypt_buffer@ctx,InvCipher@RoundKey
 36876  007874  C097  F094         	movff	AES_CBC_decrypt_buffer@ctx+1,InvCipher@RoundKey+1
 36877  007878  ECFC  F050         	call	_InvCipher	;wreg free
 36878                           
 36879                           ; BSR set to: 0
 36880                           ;../aes/aes_src/AES.c: 522:     XorWithIv(buf, ctx->Iv);
 36881  00787C  C098  F071         	movff	AES_CBC_decrypt_buffer@buf,XorWithIv@buf
 36882  007880  C099  F072         	movff	AES_CBC_decrypt_buffer@buf+1,XorWithIv@buf+1
 36883  007884  0EB0               	movlw	176
 36884  007886  0100               	movlb	0	; force () banked
 36885  007888  2596               	addwf	AES_CBC_decrypt_buffer@ctx& (0+255),w,b
 36886  00788A  0100               	movlb	0	; force () banked
 36887  00788C  6F73               	movwf	XorWithIv@Iv& (0+255),b
 36888  00788E  0E00               	movlw	0
 36889  007890  0100               	movlb	0	; force () banked
 36890  007892  2197               	addwfc	(AES_CBC_decrypt_buffer@ctx+1)& (0+255),w,b
 36891  007894  0100               	movlb	0	; force () banked
 36892  007896  6F74               	movwf	(XorWithIv@Iv+1)& (0+255),b
 36893  007898  EC2E  F056         	call	_XorWithIv	;wreg free
 36894                           
 36895                           ; BSR set to: 0
 36896                           ;../aes/aes_src/AES.c: 523:     memcpy(ctx->Iv, storeNextIv, 16);
 36897  00789C  0EB0               	movlw	176
 36898  00789E  0100               	movlb	0	; force () banked
 36899  0078A0  2596               	addwf	AES_CBC_decrypt_buffer@ctx& (0+255),w,b
 36900  0078A2  0100               	movlb	0	; force () banked
 36901  0078A4  6F77               	movwf	memcpy@d1& (0+255),b
 36902  0078A6  0E00               	movlw	0
 36903  0078A8  0100               	movlb	0	; force () banked
 36904  0078AA  2197               	addwfc	(AES_CBC_decrypt_buffer@ctx+1)& (0+255),w,b
 36905  0078AC  0100               	movlb	0	; force () banked
 36906  0078AE  6F78               	movwf	(memcpy@d1+1)& (0+255),b
 36907  0078B0  0EA2               	movlw	low AES_CBC_decrypt_buffer@storeNextIv
 36908  0078B2  0100               	movlb	0	; force () banked
 36909  0078B4  6F79               	movwf	memcpy@s1& (0+255),b
 36910  0078B6  0E00               	movlw	high AES_CBC_decrypt_buffer@storeNextIv
 36911  0078B8  6F7A               	movwf	(memcpy@s1+1)& (0+255),b
 36912  0078BA  5179               	movf	memcpy@s1& (0+255),w,b
 36913  0078BC  117A               	iorwf	(memcpy@s1+1)& (0+255),w,b
 36914  0078BE  A4D8               	btfss	status,2,c
 36915  0078C0  0E20               	movlw	32
 36916  0078C2  6F7B               	movwf	(memcpy@s1+2)& (0+255),b
 36917  0078C4  0E00               	movlw	0
 36918  0078C6  0100               	movlb	0	; force () banked
 36919  0078C8  6F7D               	movwf	(memcpy@n+1)& (0+255),b
 36920  0078CA  0E10               	movlw	16
 36921  0078CC  6F7C               	movwf	memcpy@n& (0+255),b
 36922  0078CE  ECC1  F04F         	call	_memcpy	;wreg free
 36923                           
 36924                           ; BSR set to: 0
 36925                           ;../aes/aes_src/AES.c: 524:     buf += 16;
 36926  0078D2  0E10               	movlw	16
 36927  0078D4  0100               	movlb	0	; force () banked
 36928  0078D6  2798               	addwf	AES_CBC_decrypt_buffer@buf& (0+255),f,b
 36929  0078D8  0E00               	movlw	0
 36930  0078DA  2399               	addwfc	(AES_CBC_decrypt_buffer@buf+1)& (0+255),f,b
 36931                           
 36932                           ; BSR set to: 0
 36933                           ;../aes/aes_src/AES.c: 525:   }
 36934  0078DC  0E10               	movlw	16
 36935  0078DE  0100               	movlb	0	; force () banked
 36936  0078E0  27B2               	addwf	AES_CBC_decrypt_buffer@i& (0+255),f,b
 36937  0078E2  0E00               	movlw	0
 36938  0078E4  23B3               	addwfc	(AES_CBC_decrypt_buffer@i+1)& (0+255),f,b
 36939  0078E6                     l17744:
 36940                           
 36941                           ; BSR set to: 0
 36942  0078E6  0100               	movlb	0	; force () banked
 36943  0078E8  51B2               	movf	AES_CBC_decrypt_buffer@i& (0+255),w,b
 36944  0078EA  0100               	movlb	0	; force () banked
 36945  0078EC  6F9E               	movwf	??_AES_CBC_decrypt_buffer& (0+255),b
 36946  0078EE  0100               	movlb	0	; force () banked
 36947  0078F0  51B3               	movf	(AES_CBC_decrypt_buffer@i+1)& (0+255),w,b
 36948  0078F2  0100               	movlb	0	; force () banked
 36949  0078F4  6F9F               	movwf	(??_AES_CBC_decrypt_buffer+1)& (0+255),b
 36950  0078F6  6BA0               	clrf	(??_AES_CBC_decrypt_buffer+2)& (0+255),b
 36951  0078F8  6BA1               	clrf	(??_AES_CBC_decrypt_buffer+3)& (0+255),b
 36952  0078FA  0100               	movlb	0	; force () banked
 36953  0078FC  519A               	movf	AES_CBC_decrypt_buffer@length& (0+255),w,b
 36954  0078FE  0100               	movlb	0	; force () banked
 36955  007900  5D9E               	subwf	??_AES_CBC_decrypt_buffer& (0+255),w,b
 36956  007902  0100               	movlb	0	; force () banked
 36957  007904  519B               	movf	(AES_CBC_decrypt_buffer@length+1)& (0+255),w,b
 36958  007906  0100               	movlb	0	; force () banked
 36959  007908  599F               	subwfb	(??_AES_CBC_decrypt_buffer+1)& (0+255),w,b
 36960  00790A  0100               	movlb	0	; force () banked
 36961  00790C  519C               	movf	(AES_CBC_decrypt_buffer@length+2)& (0+255),w,b
 36962  00790E  0100               	movlb	0	; force () banked
 36963  007910  59A0               	subwfb	(??_AES_CBC_decrypt_buffer+2)& (0+255),w,b
 36964  007912  0100               	movlb	0	; force () banked
 36965  007914  519D               	movf	(AES_CBC_decrypt_buffer@length+3)& (0+255),w,b
 36966  007916  0100               	movlb	0	; force () banked
 36967  007918  59A1               	subwfb	(??_AES_CBC_decrypt_buffer+3)& (0+255),w,b
 36968  00791A  B0D8               	btfsc	status,0,c
 36969  00791C  0012               	return	
 36970  00791E  D78E               	goto	l17732
 36971  007920                     __end_of_AES_CBC_decrypt_buffer:
 36972                           	callstack 0
 36973                           
 36974 ;; *************** function _XorWithIv *****************
 36975 ;; Defined at:
 36976 ;;		line 489 in file "../aes/aes_src/AES.c"
 36977 ;; Parameters:    Size  Location     Type
 36978 ;;  buf             2   17[BANK0 ] PTR unsigned char 
 36979 ;;		 -> nwkFrameFrames(690), tx_buffer.payload(110), tx_buffer(264), 
 36980 ;;  Iv              2   19[BANK0 ] PTR const unsigned char 
 36981 ;;		 -> ctx.Iv(16), ctx.Iv(16), tx_buffer.payload(110), tx_buffer(264), 
 36982 ;;		 -> app_aes_decrypt@ctx(192), app_aes_encrypt@ctx(192), 
 36983 ;; Auto vars:     Size  Location     Type
 36984 ;;  i               1   22[BANK0 ] unsigned char 
 36985 ;; Return value:  Size  Location     Type
 36986 ;;                  1    wreg      void 
 36987 ;; Registers used:
 36988 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36989 ;; Tracked objects:
 36990 ;;		On entry : 0/0
 36991 ;;		On exit  : 3F/0
 36992 ;;		Unchanged: 0/0
 36993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36994 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36995 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36996 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36997 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36998 ;;Total ram usage:        6 bytes
 36999 ;; Hardware stack levels used:    1
 37000 ;; Hardware stack levels required when called:   11
 37001 ;; This function calls:
 37002 ;;		Nothing
 37003 ;; This function is called by:
 37004 ;;		_AES_CBC_encrypt_buffer
 37005 ;;		_AES_CBC_decrypt_buffer
 37006 ;; This function uses a non-reentrant model
 37007 ;;
 37008                           
 37009                           	psect	text203
 37010  00AC5C                     __ptext203:
 37011                           	callstack 0
 37012  00AC5C                     _XorWithIv:
 37013                           	callstack 13
 37014                           
 37015                           ;../aes/aes_src/AES.c: 489: static void XorWithIv(uint8_t* buf, const uint8_t* Iv);../ae
      +                          s/aes_src/AES.c: 490: {;../aes/aes_src/AES.c: 491:   uint8_t i;;../aes/aes_src/AES.c: 49
      +                          2:   for (i = 0; i < 16; ++i)
 37016                           
 37017                           ; BSR set to: 0
 37018                           ;incstack = 0
 37019  00AC5C  0E00               	movlw	0
 37020  00AC5E  0100               	movlb	0	; force () banked
 37021  00AC60  6F76               	movwf	XorWithIv@i& (0+255),b
 37022  00AC62  D01C               	goto	l17510
 37023  00AC64                     l17506:
 37024                           
 37025                           ; BSR set to: 0
 37026                           ;../aes/aes_src/AES.c: 493:   {;../aes/aes_src/AES.c: 494:     buf[i] ^= Iv[i];
 37027  00AC64  0100               	movlb	0	; force () banked
 37028  00AC66  5176               	movf	XorWithIv@i& (0+255),w,b
 37029  00AC68  0100               	movlb	0	; force () banked
 37030  00AC6A  2573               	addwf	XorWithIv@Iv& (0+255),w,b
 37031  00AC6C  6ED9               	movwf	fsr2l,c
 37032  00AC6E  0100               	movlb	0	; force () banked
 37033  00AC70  0E00               	movlw	0
 37034  00AC72  0100               	movlb	0	; force () banked
 37035  00AC74  2174               	addwfc	(XorWithIv@Iv+1)& (0+255),w,b
 37036  00AC76  6EDA               	movwf	fsr2h,c
 37037  00AC78  50DF               	movf	indf2,w,c
 37038  00AC7A  0100               	movlb	0	; force () banked
 37039  00AC7C  6F75               	movwf	??_XorWithIv& (0+255),b
 37040  00AC7E  0100               	movlb	0	; force () banked
 37041  00AC80  5176               	movf	XorWithIv@i& (0+255),w,b
 37042  00AC82  0100               	movlb	0	; force () banked
 37043  00AC84  2571               	addwf	XorWithIv@buf& (0+255),w,b
 37044  00AC86  6ED9               	movwf	fsr2l,c
 37045  00AC88  0100               	movlb	0	; force () banked
 37046  00AC8A  0E00               	movlw	0
 37047  00AC8C  0100               	movlb	0	; force () banked
 37048  00AC8E  2172               	addwfc	(XorWithIv@buf+1)& (0+255),w,b
 37049  00AC90  6EDA               	movwf	fsr2h,c
 37050  00AC92  0100               	movlb	0	; force () banked
 37051  00AC94  5175               	movf	??_XorWithIv& (0+255),w,b
 37052  00AC96  1ADF               	xorwf	indf2,f,c
 37053                           
 37054                           ; BSR set to: 0
 37055                           ;../aes/aes_src/AES.c: 495:   }
 37056  00AC98  0100               	movlb	0	; force () banked
 37057  00AC9A  2B76               	incf	XorWithIv@i& (0+255),f,b
 37058  00AC9C                     l17510:
 37059                           
 37060                           ; BSR set to: 0
 37061  00AC9C  0E0F               	movlw	15
 37062  00AC9E  0100               	movlb	0	; force () banked
 37063  00ACA0  6576               	cpfsgt	XorWithIv@i& (0+255),b
 37064  00ACA2  D7E0               	goto	l17506
 37065  00ACA4  0012               	return	
 37066  00ACA6                     __end_of_XorWithIv:
 37067                           	callstack 0
 37068                           
 37069 ;; *************** function _InvCipher *****************
 37070 ;; Defined at:
 37071 ;;		line 436 in file "../aes/aes_src/AES.c"
 37072 ;; Parameters:    Size  Location     Type
 37073 ;;  state           2   49[BANK0 ] PTR unsigned char [4][4]
 37074 ;;		 -> nwkFrameFrames(690), 
 37075 ;;  RoundKey        2   51[BANK0 ] PTR const unsigned char 
 37076 ;;		 -> ctx.RoundKey(176), app_aes_decrypt@ctx(192), 
 37077 ;; Auto vars:     Size  Location     Type
 37078 ;;  round           1   53[BANK0 ] unsigned char 
 37079 ;; Return value:  Size  Location     Type
 37080 ;;                  1    wreg      void 
 37081 ;; Registers used:
 37082 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37083 ;; Tracked objects:
 37084 ;;		On entry : 3F/0
 37085 ;;		On exit  : 3F/0
 37086 ;;		Unchanged: 0/0
 37087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37088 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37089 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37091 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37092 ;;Total ram usage:        5 bytes
 37093 ;; Hardware stack levels used:    1
 37094 ;; Hardware stack levels required when called:   13
 37095 ;; This function calls:
 37096 ;;		_AddRoundKey
 37097 ;;		_InvMixColumns
 37098 ;;		_InvShiftRows
 37099 ;;		_InvSubBytes
 37100 ;; This function is called by:
 37101 ;;		_AES_CBC_decrypt_buffer
 37102 ;; This function uses a non-reentrant model
 37103 ;;
 37104                           
 37105                           	psect	text204
 37106  00A1F8                     __ptext204:
 37107                           	callstack 0
 37108  00A1F8                     _InvCipher:
 37109                           	callstack 9
 37110                           
 37111                           ;../aes/aes_src/AES.c: 436: static void InvCipher(state_t* state, const uint8_t* RoundKe
      +                          y);../aes/aes_src/AES.c: 437: {;../aes/aes_src/AES.c: 438:   uint8_t round = 0;
 37112                           
 37113                           ; BSR set to: 0
 37114                           ;incstack = 0
 37115  00A1F8  0E00               	movlw	0
 37116  00A1FA  0100               	movlb	0	; force () banked
 37117  00A1FC  6F95               	movwf	InvCipher@round& (0+255),b
 37118                           
 37119                           ; BSR set to: 0
 37120                           ;../aes/aes_src/AES.c: 441:   AddRoundKey(10, state, RoundKey);
 37121  00A1FE  C091  F071         	movff	InvCipher@state,AddRoundKey@state
 37122  00A202  C092  F072         	movff	InvCipher@state+1,AddRoundKey@state+1
 37123  00A206  C093  F073         	movff	InvCipher@RoundKey,AddRoundKey@RoundKey
 37124  00A20A  C094  F074         	movff	InvCipher@RoundKey+1,AddRoundKey@RoundKey+1
 37125  00A20E  0E0A               	movlw	10
 37126  00A210  ECE8  F049         	call	_AddRoundKey
 37127                           
 37128                           ; BSR set to: 0
 37129                           ;../aes/aes_src/AES.c: 447:   for (round = (10 - 1); ; --round)
 37130  00A214  0E09               	movlw	9
 37131  00A216  0100               	movlb	0	; force () banked
 37132  00A218  6F95               	movwf	InvCipher@round& (0+255),b
 37133  00A21A                     l17486:
 37134                           
 37135                           ; BSR set to: 0
 37136                           ;../aes/aes_src/AES.c: 448:   {;../aes/aes_src/AES.c: 449:     InvShiftRows(state);
 37137  00A21A  C091  F071         	movff	InvCipher@state,InvShiftRows@state
 37138  00A21E  C092  F072         	movff	InvCipher@state+1,InvShiftRows@state+1
 37139  00A222  ECBD  F029         	call	_InvShiftRows	;wreg free
 37140                           
 37141                           ; BSR set to: 0
 37142                           ;../aes/aes_src/AES.c: 450:     InvSubBytes(state);
 37143  00A226  C091  F071         	movff	InvCipher@state,InvSubBytes@state
 37144  00A22A  C092  F072         	movff	InvCipher@state+1,InvSubBytes@state+1
 37145  00A22E  ECF9  F048         	call	_InvSubBytes	;wreg free
 37146                           
 37147                           ; BSR set to: 0
 37148                           ;../aes/aes_src/AES.c: 451:     AddRoundKey(round, state, RoundKey);
 37149  00A232  C091  F071         	movff	InvCipher@state,AddRoundKey@state
 37150  00A236  C092  F072         	movff	InvCipher@state+1,AddRoundKey@state+1
 37151  00A23A  C093  F073         	movff	InvCipher@RoundKey,AddRoundKey@RoundKey
 37152  00A23E  C094  F074         	movff	InvCipher@RoundKey+1,AddRoundKey@RoundKey+1
 37153  00A242  0100               	movlb	0	; force () banked
 37154  00A244  5195               	movf	InvCipher@round& (0+255),w,b
 37155  00A246  ECE8  F049         	call	_AddRoundKey
 37156                           
 37157                           ; BSR set to: 0
 37158                           ;../aes/aes_src/AES.c: 452:     if (round == 0) {
 37159  00A24A  0100               	movlb	0	; force () banked
 37160  00A24C  5195               	movf	InvCipher@round& (0+255),w,b
 37161  00A24E  B4D8               	btfsc	status,2,c
 37162  00A250  0012               	return	
 37163                           
 37164                           ; BSR set to: 0
 37165                           ;../aes/aes_src/AES.c: 455:     InvMixColumns(state);
 37166  00A252  C091  F072         	movff	InvCipher@state,InvMixColumns@state
 37167  00A256  C092  F073         	movff	InvCipher@state+1,InvMixColumns@state+1
 37168  00A25A  EC5B  F000         	call	_InvMixColumns	;wreg free
 37169                           
 37170                           ; BSR set to: 0
 37171                           ;../aes/aes_src/AES.c: 456:   }
 37172  00A25E  0100               	movlb	0	; force () banked
 37173  00A260  0795               	decf	InvCipher@round& (0+255),f,b
 37174  00A262  D7DB               	goto	l17486
 37175  00A264                     __end_of_InvCipher:
 37176                           	callstack 0
 37177                           
 37178 ;; *************** function _InvSubBytes *****************
 37179 ;; Defined at:
 37180 ;;		line 368 in file "../aes/aes_src/AES.c"
 37181 ;; Parameters:    Size  Location     Type
 37182 ;;  state           2   17[BANK0 ] PTR unsigned char [4][4]
 37183 ;;		 -> nwkFrameFrames(690), 
 37184 ;; Auto vars:     Size  Location     Type
 37185 ;;  j               1   26[BANK0 ] unsigned char 
 37186 ;;  i               1   25[BANK0 ] unsigned char 
 37187 ;; Return value:  Size  Location     Type
 37188 ;;                  1    wreg      void 
 37189 ;; Registers used:
 37190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 37191 ;; Tracked objects:
 37192 ;;		On entry : 3F/0
 37193 ;;		On exit  : 3F/0
 37194 ;;		Unchanged: 0/0
 37195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37196 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37197 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37198 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37199 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37200 ;;Total ram usage:       10 bytes
 37201 ;; Hardware stack levels used:    1
 37202 ;; Hardware stack levels required when called:   11
 37203 ;; This function calls:
 37204 ;;		Nothing
 37205 ;; This function is called by:
 37206 ;;		_InvCipher
 37207 ;; This function uses a non-reentrant model
 37208 ;;
 37209                           
 37210                           	psect	text205
 37211  0091F2                     __ptext205:
 37212                           	callstack 0
 37213  0091F2                     _InvSubBytes:
 37214                           	callstack 10
 37215                           
 37216                           ;../aes/aes_src/AES.c: 368: static void InvSubBytes(state_t* state);../aes/aes_src/AES.c
      +                          : 369: {;../aes/aes_src/AES.c: 370:   uint8_t i, j;;../aes/aes_src/AES.c: 371:   for (i 
      +                          = 0; i < 4; ++i)
 37217                           
 37218                           ; BSR set to: 0
 37219                           ;incstack = 0
 37220  0091F2  0E00               	movlw	0
 37221  0091F4  0100               	movlb	0	; force () banked
 37222  0091F6  6F79               	movwf	InvSubBytes@i& (0+255),b
 37223  0091F8  D048               	goto	l17364
 37224  0091FA                     l17350:
 37225                           
 37226                           ; BSR set to: 0
 37227                           ;../aes/aes_src/AES.c: 372:   {;../aes/aes_src/AES.c: 373:     for (j = 0; j < 4; ++j)
 37228  0091FA  0E00               	movlw	0
 37229  0091FC  0100               	movlb	0	; force () banked
 37230  0091FE  6F7A               	movwf	InvSubBytes@j& (0+255),b
 37231  009200  D03E               	goto	l17360
 37232  009202                     l17356:
 37233                           
 37234                           ; BSR set to: 0
 37235                           ;../aes/aes_src/AES.c: 374:     {;../aes/aes_src/AES.c: 375:       (*state)[j][i] = (rsb
      +                          ox[((*state)[j][i])]);
 37236  009202  0100               	movlb	0	; force () banked
 37237  009204  517A               	movf	InvSubBytes@j& (0+255),w,b
 37238  009206  0D04               	mullw	4
 37239  009208  C071  F073         	movff	InvSubBytes@state,??_InvSubBytes
 37240  00920C  C072  F074         	movff	InvSubBytes@state+1,??_InvSubBytes+1
 37241  009210  50F3               	movf	243,w,c
 37242  009212  0100               	movlb	0	; force () banked
 37243  009214  2773               	addwf	??_InvSubBytes& (0+255),f,b
 37244  009216  50F4               	movf	244,w,c
 37245  009218  2374               	addwfc	(??_InvSubBytes+1)& (0+255),f,b
 37246  00921A  0100               	movlb	0	; force () banked
 37247  00921C  5179               	movf	InvSubBytes@i& (0+255),w,b
 37248  00921E  0100               	movlb	0	; force () banked
 37249  009220  2573               	addwf	??_InvSubBytes& (0+255),w,b
 37250  009222  6ED9               	movwf	fsr2l,c
 37251  009224  0100               	movlb	0	; force () banked
 37252  009226  0E00               	movlw	0
 37253  009228  0100               	movlb	0	; force () banked
 37254  00922A  2174               	addwfc	(??_InvSubBytes+1)& (0+255),w,b
 37255  00922C  6EDA               	movwf	fsr2h,c
 37256  00922E  50DF               	movf	indf2,w,c
 37257  009230  6F75               	movwf	(??_InvSubBytes+2)& (0+255),b
 37258  009232  6B76               	clrf	(??_InvSubBytes+3)& (0+255),b
 37259  009234  0E55               	movlw	low _rsbox
 37260  009236  2575               	addwf	(??_InvSubBytes+2)& (0+255),w,b
 37261  009238  6EF6               	movwf	tblptrl,c
 37262  00923A  0EFC               	movlw	high _rsbox
 37263  00923C  2176               	addwfc	(??_InvSubBytes+3)& (0+255),w,b
 37264  00923E  6EF7               	movwf	tblptrh,c
 37265  009240                     	if	1	;There are 3 active tblptr bytes
 37266  009240  6AF8               	clrf	tblptru,c
 37267  009242  0E00               	movlw	low (__mediumconst shr (0+16))
 37268  009244  22F8               	addwfc	tblptru,f,c
 37269  009246                     	endif
 37270  009246  0100               	movlb	0	; force () banked
 37271  009248  517A               	movf	InvSubBytes@j& (0+255),w,b
 37272  00924A  0D04               	mullw	4
 37273  00924C  C071  F077         	movff	InvSubBytes@state,??_InvSubBytes+4
 37274  009250  C072  F078         	movff	InvSubBytes@state+1,??_InvSubBytes+5
 37275  009254  50F3               	movf	243,w,c
 37276  009256  0100               	movlb	0	; force () banked
 37277  009258  2777               	addwf	(??_InvSubBytes+4)& (0+255),f,b
 37278  00925A  50F4               	movf	244,w,c
 37279  00925C  2378               	addwfc	(??_InvSubBytes+5)& (0+255),f,b
 37280  00925E  0100               	movlb	0	; force () banked
 37281  009260  5179               	movf	InvSubBytes@i& (0+255),w,b
 37282  009262  0100               	movlb	0	; force () banked
 37283  009264  2577               	addwf	(??_InvSubBytes+4)& (0+255),w,b
 37284  009266  6ED9               	movwf	fsr2l,c
 37285  009268  0100               	movlb	0	; force () banked
 37286  00926A  0E00               	movlw	0
 37287  00926C  0100               	movlb	0	; force () banked
 37288  00926E  2178               	addwfc	(??_InvSubBytes+5)& (0+255),w,b
 37289  009270  6EDA               	movwf	fsr2h,c
 37290  009272  0008               	tblrd		*
 37291  009274  006F FFD7 FFDF     	movff	tablat,indf2
 37292                           
 37293                           ; BSR set to: 0
 37294                           ;../aes/aes_src/AES.c: 376:     }
 37295  00927A  0100               	movlb	0	; force () banked
 37296  00927C  2B7A               	incf	InvSubBytes@j& (0+255),f,b
 37297  00927E                     l17360:
 37298                           
 37299                           ; BSR set to: 0
 37300  00927E  0E03               	movlw	3
 37301  009280  0100               	movlb	0	; force () banked
 37302  009282  657A               	cpfsgt	InvSubBytes@j& (0+255),b
 37303  009284  D7BE               	goto	l17356
 37304                           
 37305                           ; BSR set to: 0
 37306                           ;../aes/aes_src/AES.c: 377:   }
 37307  009286  0100               	movlb	0	; force () banked
 37308  009288  2B79               	incf	InvSubBytes@i& (0+255),f,b
 37309  00928A                     l17364:
 37310                           
 37311                           ; BSR set to: 0
 37312  00928A  0E03               	movlw	3
 37313  00928C  0100               	movlb	0	; force () banked
 37314  00928E  6579               	cpfsgt	InvSubBytes@i& (0+255),b
 37315  009290  D7B4               	goto	l17350
 37316  009292  0012               	return	
 37317  009294                     __end_of_InvSubBytes:
 37318                           	callstack 0
 37319                           
 37320 ;; *************** function _InvShiftRows *****************
 37321 ;; Defined at:
 37322 ;;		line 380 in file "../aes/aes_src/AES.c"
 37323 ;; Parameters:    Size  Location     Type
 37324 ;;  state           2   17[BANK0 ] PTR unsigned char [4][4]
 37325 ;;		 -> nwkFrameFrames(690), 
 37326 ;; Auto vars:     Size  Location     Type
 37327 ;;  temp            1   19[BANK0 ] unsigned char 
 37328 ;; Return value:  Size  Location     Type
 37329 ;;                  1    wreg      void 
 37330 ;; Registers used:
 37331 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 37332 ;; Tracked objects:
 37333 ;;		On entry : 0/0
 37334 ;;		On exit  : 3F/0
 37335 ;;		Unchanged: 0/0
 37336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37337 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37340 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37341 ;;Total ram usage:        3 bytes
 37342 ;; Hardware stack levels used:    1
 37343 ;; Hardware stack levels required when called:   11
 37344 ;; This function calls:
 37345 ;;		Nothing
 37346 ;; This function is called by:
 37347 ;;		_InvCipher
 37348 ;; This function uses a non-reentrant model
 37349 ;;
 37350                           
 37351                           	psect	text206
 37352  00537A                     __ptext206:
 37353                           	callstack 0
 37354  00537A                     _InvShiftRows:
 37355                           	callstack 10
 37356                           
 37357                           ;../aes/aes_src/AES.c: 380: static void InvShiftRows(state_t* state);../aes/aes_src/AES.
      +                          c: 381: {;../aes/aes_src/AES.c: 382:   uint8_t temp;;../aes/aes_src/AES.c: 385:   temp =
      +                           (*state)[3][1];
 37358                           
 37359                           ; BSR set to: 0
 37360                           ;incstack = 0
 37361  00537A  0100               	movlb	0	; force () banked
 37362  00537C  EE20 F00D          	lfsr	2,13
 37363  005380  5171               	movf	InvShiftRows@state& (0+255),w,b
 37364  005382  26D9               	addwf	fsr2l,f,c
 37365  005384  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37366  005386  22DA               	addwfc	fsr2h,f,c
 37367  005388  50DF               	movf	indf2,w,c
 37368  00538A  0100               	movlb	0	; force () banked
 37369  00538C  6F73               	movwf	InvShiftRows@temp& (0+255),b
 37370                           
 37371                           ; BSR set to: 0
 37372                           ;../aes/aes_src/AES.c: 386:   (*state)[3][1] = (*state)[2][1];
 37373  00538E  0100               	movlb	0	; force () banked
 37374  005390  EE20 F009          	lfsr	2,9
 37375  005394  5171               	movf	InvShiftRows@state& (0+255),w,b
 37376  005396  26D9               	addwf	fsr2l,f,c
 37377  005398  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37378  00539A  22DA               	addwfc	fsr2h,f,c
 37379  00539C  EE00 F00D          	lfsr	0,13
 37380  0053A0  5171               	movf	InvShiftRows@state& (0+255),w,b
 37381  0053A2  26E9               	addwf	fsr0l,f,c
 37382  0053A4  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37383  0053A6  22EA               	addwfc	fsr0h,f,c
 37384  0053A8  006F FF7F FFEF     	movff	indf2,indf0
 37385                           
 37386                           ; BSR set to: 0
 37387                           ;../aes/aes_src/AES.c: 387:   (*state)[2][1] = (*state)[1][1];
 37388  0053AE  0100               	movlb	0	; force () banked
 37389  0053B0  EE20 F005          	lfsr	2,5
 37390  0053B4  5171               	movf	InvShiftRows@state& (0+255),w,b
 37391  0053B6  26D9               	addwf	fsr2l,f,c
 37392  0053B8  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37393  0053BA  22DA               	addwfc	fsr2h,f,c
 37394  0053BC  EE00 F009          	lfsr	0,9
 37395  0053C0  5171               	movf	InvShiftRows@state& (0+255),w,b
 37396  0053C2  26E9               	addwf	fsr0l,f,c
 37397  0053C4  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37398  0053C6  22EA               	addwfc	fsr0h,f,c
 37399  0053C8  006F FF7F FFEF     	movff	indf2,indf0
 37400                           
 37401                           ; BSR set to: 0
 37402                           ;../aes/aes_src/AES.c: 388:   (*state)[1][1] = (*state)[0][1];
 37403  0053CE  0100               	movlb	0	; force () banked
 37404  0053D0  EE20 F001          	lfsr	2,1
 37405  0053D4  5171               	movf	InvShiftRows@state& (0+255),w,b
 37406  0053D6  26D9               	addwf	fsr2l,f,c
 37407  0053D8  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37408  0053DA  22DA               	addwfc	fsr2h,f,c
 37409  0053DC  EE00 F005          	lfsr	0,5
 37410  0053E0  5171               	movf	InvShiftRows@state& (0+255),w,b
 37411  0053E2  26E9               	addwf	fsr0l,f,c
 37412  0053E4  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37413  0053E6  22EA               	addwfc	fsr0h,f,c
 37414  0053E8  006F FF7F FFEF     	movff	indf2,indf0
 37415                           
 37416                           ; BSR set to: 0
 37417                           ;../aes/aes_src/AES.c: 389:   (*state)[0][1] = temp;
 37418  0053EE  0100               	movlb	0	; force () banked
 37419  0053F0  EE20 F001          	lfsr	2,1
 37420  0053F4  5171               	movf	InvShiftRows@state& (0+255),w,b
 37421  0053F6  26D9               	addwf	fsr2l,f,c
 37422  0053F8  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37423  0053FA  22DA               	addwfc	fsr2h,f,c
 37424  0053FC  0060  F1CF  FFDF   	movff	InvShiftRows@temp,indf2
 37425                           
 37426                           ; BSR set to: 0
 37427                           ;../aes/aes_src/AES.c: 392:   temp = (*state)[0][2];
 37428  005402  0100               	movlb	0	; force () banked
 37429  005404  EE20 F002          	lfsr	2,2
 37430  005408  5171               	movf	InvShiftRows@state& (0+255),w,b
 37431  00540A  26D9               	addwf	fsr2l,f,c
 37432  00540C  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37433  00540E  22DA               	addwfc	fsr2h,f,c
 37434  005410  50DF               	movf	indf2,w,c
 37435  005412  0100               	movlb	0	; force () banked
 37436  005414  6F73               	movwf	InvShiftRows@temp& (0+255),b
 37437                           
 37438                           ; BSR set to: 0
 37439                           ;../aes/aes_src/AES.c: 393:   (*state)[0][2] = (*state)[2][2];
 37440  005416  0100               	movlb	0	; force () banked
 37441  005418  EE20 F00A          	lfsr	2,10
 37442  00541C  5171               	movf	InvShiftRows@state& (0+255),w,b
 37443  00541E  26D9               	addwf	fsr2l,f,c
 37444  005420  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37445  005422  22DA               	addwfc	fsr2h,f,c
 37446  005424  EE00 F002          	lfsr	0,2
 37447  005428  5171               	movf	InvShiftRows@state& (0+255),w,b
 37448  00542A  26E9               	addwf	fsr0l,f,c
 37449  00542C  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37450  00542E  22EA               	addwfc	fsr0h,f,c
 37451  005430  006F FF7F FFEF     	movff	indf2,indf0
 37452                           
 37453                           ;../aes/aes_src/AES.c: 394:   (*state)[2][2] = temp;
 37454  005436  EE20 F00A          	lfsr	2,10
 37455  00543A  5171               	movf	InvShiftRows@state& (0+255),w,b
 37456  00543C  26D9               	addwf	fsr2l,f,c
 37457  00543E  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37458  005440  22DA               	addwfc	fsr2h,f,c
 37459  005442  0060  F1CF  FFDF   	movff	InvShiftRows@temp,indf2
 37460                           
 37461                           ;../aes/aes_src/AES.c: 396:   temp = (*state)[1][2];
 37462  005448  EE20 F006          	lfsr	2,6
 37463  00544C  5171               	movf	InvShiftRows@state& (0+255),w,b
 37464  00544E  26D9               	addwf	fsr2l,f,c
 37465  005450  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37466  005452  22DA               	addwfc	fsr2h,f,c
 37467  005454  50DF               	movf	indf2,w,c
 37468  005456  0100               	movlb	0	; force () banked
 37469  005458  6F73               	movwf	InvShiftRows@temp& (0+255),b
 37470                           
 37471                           ; BSR set to: 0
 37472                           ;../aes/aes_src/AES.c: 397:   (*state)[1][2] = (*state)[3][2];
 37473  00545A  0100               	movlb	0	; force () banked
 37474  00545C  EE20 F00E          	lfsr	2,14
 37475  005460  5171               	movf	InvShiftRows@state& (0+255),w,b
 37476  005462  26D9               	addwf	fsr2l,f,c
 37477  005464  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37478  005466  22DA               	addwfc	fsr2h,f,c
 37479  005468  EE00 F006          	lfsr	0,6
 37480  00546C  5171               	movf	InvShiftRows@state& (0+255),w,b
 37481  00546E  26E9               	addwf	fsr0l,f,c
 37482  005470  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37483  005472  22EA               	addwfc	fsr0h,f,c
 37484  005474  006F FF7F FFEF     	movff	indf2,indf0
 37485                           
 37486                           ; BSR set to: 0
 37487                           ;../aes/aes_src/AES.c: 398:   (*state)[3][2] = temp;
 37488  00547A  0100               	movlb	0	; force () banked
 37489  00547C  EE20 F00E          	lfsr	2,14
 37490  005480  5171               	movf	InvShiftRows@state& (0+255),w,b
 37491  005482  26D9               	addwf	fsr2l,f,c
 37492  005484  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37493  005486  22DA               	addwfc	fsr2h,f,c
 37494  005488  0060  F1CF  FFDF   	movff	InvShiftRows@temp,indf2
 37495                           
 37496                           ; BSR set to: 0
 37497                           ;../aes/aes_src/AES.c: 401:   temp = (*state)[0][3];
 37498  00548E  0100               	movlb	0	; force () banked
 37499  005490  EE20 F003          	lfsr	2,3
 37500  005494  5171               	movf	InvShiftRows@state& (0+255),w,b
 37501  005496  26D9               	addwf	fsr2l,f,c
 37502  005498  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37503  00549A  22DA               	addwfc	fsr2h,f,c
 37504  00549C  50DF               	movf	indf2,w,c
 37505  00549E  0100               	movlb	0	; force () banked
 37506  0054A0  6F73               	movwf	InvShiftRows@temp& (0+255),b
 37507                           
 37508                           ; BSR set to: 0
 37509                           ;../aes/aes_src/AES.c: 402:   (*state)[0][3] = (*state)[1][3];
 37510  0054A2  0100               	movlb	0	; force () banked
 37511  0054A4  EE20 F007          	lfsr	2,7
 37512  0054A8  5171               	movf	InvShiftRows@state& (0+255),w,b
 37513  0054AA  26D9               	addwf	fsr2l,f,c
 37514  0054AC  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37515  0054AE  22DA               	addwfc	fsr2h,f,c
 37516  0054B0  EE00 F003          	lfsr	0,3
 37517  0054B4  5171               	movf	InvShiftRows@state& (0+255),w,b
 37518  0054B6  26E9               	addwf	fsr0l,f,c
 37519  0054B8  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37520  0054BA  22EA               	addwfc	fsr0h,f,c
 37521  0054BC  006F FF7F FFEF     	movff	indf2,indf0
 37522                           
 37523                           ; BSR set to: 0
 37524                           ;../aes/aes_src/AES.c: 403:   (*state)[1][3] = (*state)[2][3];
 37525  0054C2  0100               	movlb	0	; force () banked
 37526  0054C4  EE20 F00B          	lfsr	2,11
 37527  0054C8  5171               	movf	InvShiftRows@state& (0+255),w,b
 37528  0054CA  26D9               	addwf	fsr2l,f,c
 37529  0054CC  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37530  0054CE  22DA               	addwfc	fsr2h,f,c
 37531  0054D0  EE00 F007          	lfsr	0,7
 37532  0054D4  5171               	movf	InvShiftRows@state& (0+255),w,b
 37533  0054D6  26E9               	addwf	fsr0l,f,c
 37534  0054D8  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37535  0054DA  22EA               	addwfc	fsr0h,f,c
 37536  0054DC  006F FF7F FFEF     	movff	indf2,indf0
 37537                           
 37538                           ; BSR set to: 0
 37539                           ;../aes/aes_src/AES.c: 404:   (*state)[2][3] = (*state)[3][3];
 37540  0054E2  0100               	movlb	0	; force () banked
 37541  0054E4  EE20 F00F          	lfsr	2,15
 37542  0054E8  5171               	movf	InvShiftRows@state& (0+255),w,b
 37543  0054EA  26D9               	addwf	fsr2l,f,c
 37544  0054EC  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37545  0054EE  22DA               	addwfc	fsr2h,f,c
 37546  0054F0  EE00 F00B          	lfsr	0,11
 37547  0054F4  5171               	movf	InvShiftRows@state& (0+255),w,b
 37548  0054F6  26E9               	addwf	fsr0l,f,c
 37549  0054F8  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37550  0054FA  22EA               	addwfc	fsr0h,f,c
 37551  0054FC  006F FF7F FFEF     	movff	indf2,indf0
 37552                           
 37553                           ;../aes/aes_src/AES.c: 405:   (*state)[3][3] = temp;
 37554  005502  EE20 F00F          	lfsr	2,15
 37555  005506  5171               	movf	InvShiftRows@state& (0+255),w,b
 37556  005508  26D9               	addwf	fsr2l,f,c
 37557  00550A  5172               	movf	(InvShiftRows@state+1)& (0+255),w,b
 37558  00550C  22DA               	addwfc	fsr2h,f,c
 37559  00550E  0060  F1CF  FFDF   	movff	InvShiftRows@temp,indf2
 37560                           
 37561                           ; BSR set to: 0
 37562  005514  0012               	return		;funcret
 37563  005516                     __end_of_InvShiftRows:
 37564                           	callstack 0
 37565                           
 37566 ;; *************** function _InvMixColumns *****************
 37567 ;; Defined at:
 37568 ;;		line 347 in file "../aes/aes_src/AES.c"
 37569 ;; Parameters:    Size  Location     Type
 37570 ;;  state           2   18[BANK0 ] PTR unsigned char [4][4]
 37571 ;;		 -> nwkFrameFrames(690), 
 37572 ;; Auto vars:     Size  Location     Type
 37573 ;;  i               2   43[BANK0 ] int 
 37574 ;;  d               1   48[BANK0 ] unsigned char 
 37575 ;;  c               1   47[BANK0 ] unsigned char 
 37576 ;;  b               1   46[BANK0 ] unsigned char 
 37577 ;;  a               1   45[BANK0 ] unsigned char 
 37578 ;; Return value:  Size  Location     Type
 37579 ;;                  1    wreg      void 
 37580 ;; Registers used:
 37581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37582 ;; Tracked objects:
 37583 ;;		On entry : 3F/0
 37584 ;;		On exit  : 3F/0
 37585 ;;		Unchanged: 0/0
 37586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37587 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37588 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37589 ;;      Temps:          0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37590 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37591 ;;Total ram usage:       31 bytes
 37592 ;; Hardware stack levels used:    1
 37593 ;; Hardware stack levels required when called:   12
 37594 ;; This function calls:
 37595 ;;		_xtime
 37596 ;; This function is called by:
 37597 ;;		_InvCipher
 37598 ;; This function uses a non-reentrant model
 37599 ;;
 37600                           
 37601                           	psect	text207
 37602  0000B6                     __ptext207:
 37603                           	callstack 0
 37604  0000B6                     _InvMixColumns:
 37605                           	callstack 9
 37606                           
 37607                           ;../aes/aes_src/AES.c: 347: static void InvMixColumns(state_t* state);../aes/aes_src/AES
      +                          .c: 348: {;../aes/aes_src/AES.c: 349:   int i;;../aes/aes_src/AES.c: 350:   uint8_t a, b
      +                          , c, d;;../aes/aes_src/AES.c: 351:   for (i = 0; i < 4; ++i)
 37608                           
 37609                           ; BSR set to: 0
 37610                           ;incstack = 0
 37611  0000B6  0E00               	movlw	0
 37612  0000B8  0100               	movlb	0	; force () banked
 37613  0000BA  6F8C               	movwf	(InvMixColumns@i+1)& (0+255),b
 37614  0000BC  0E00               	movlw	0
 37615  0000BE  6F8B               	movwf	InvMixColumns@i& (0+255),b
 37616                           
 37617                           ; BSR set to: 0
 37618  0000C0  0100               	movlb	0	; force () banked
 37619  0000C2  BF8C               	btfsc	(InvMixColumns@i+1)& (0+255),7,b
 37620  0000C4  D005               	goto	l17330
 37621  0000C6  518C               	movf	(InvMixColumns@i+1)& (0+255),w,b
 37622  0000C8  E102               	bnz	u14660
 37623  0000CA  EF9B  F004         	goto	L47
 37624  0000CE                     u14660:
 37625  0000CE  0012               	return	
 37626  0000D0                     l17330:
 37627                           
 37628                           ; BSR set to: 0
 37629                           ;../aes/aes_src/AES.c: 352:   {;../aes/aes_src/AES.c: 353:     a = (*state)[i][0];
 37630  0000D0  90D8               	bcf	status,0,c
 37631  0000D2  0100               	movlb	0	; force () banked
 37632  0000D4  358B               	rlcf	InvMixColumns@i& (0+255),w,b
 37633  0000D6  6ED9               	movwf	fsr2l,c
 37634  0000D8  358C               	rlcf	(InvMixColumns@i+1)& (0+255),w,b
 37635  0000DA  6EDA               	movwf	fsr2h,c
 37636  0000DC  90D8               	bcf	status,0,c
 37637  0000DE  36D9               	rlcf	fsr2l,f,c
 37638  0000E0  36DA               	rlcf	fsr2h,f,c
 37639  0000E2  0100               	movlb	0	; force () banked
 37640  0000E4  5172               	movf	InvMixColumns@state& (0+255),w,b
 37641  0000E6  26D9               	addwf	fsr2l,f,c
 37642  0000E8  5173               	movf	(InvMixColumns@state+1)& (0+255),w,b
 37643  0000EA  22DA               	addwfc	fsr2h,f,c
 37644  0000EC  50DF               	movf	indf2,w,c
 37645  0000EE  0100               	movlb	0	; force () banked
 37646  0000F0  6F8D               	movwf	InvMixColumns@a& (0+255),b
 37647                           
 37648                           ;../aes/aes_src/AES.c: 354:     b = (*state)[i][1];
 37649  0000F2  C08B  F074         	movff	InvMixColumns@i,??_InvMixColumns
 37650  0000F6  C08C  F075         	movff	InvMixColumns@i+1,??_InvMixColumns+1
 37651  0000FA  0100               	movlb	0	; force () banked
 37652  0000FC  90D8               	bcf	status,0,c
 37653  0000FE  3774               	rlcf	??_InvMixColumns& (0+255),f,b
 37654  000100  3775               	rlcf	(??_InvMixColumns+1)& (0+255),f,b
 37655  000102  90D8               	bcf	status,0,c
 37656  000104  3774               	rlcf	??_InvMixColumns& (0+255),f,b
 37657  000106  3775               	rlcf	(??_InvMixColumns+1)& (0+255),f,b
 37658  000108  C072  F076         	movff	InvMixColumns@state,??_InvMixColumns+2
 37659  00010C  C073  F077         	movff	InvMixColumns@state+1,??_InvMixColumns+3
 37660  000110  5174               	movf	??_InvMixColumns& (0+255),w,b
 37661  000112  2776               	addwf	(??_InvMixColumns+2)& (0+255),f,b
 37662  000114  5175               	movf	(??_InvMixColumns+1)& (0+255),w,b
 37663  000116  2377               	addwfc	(??_InvMixColumns+3)& (0+255),f,b
 37664  000118  0E01               	movlw	1
 37665  00011A  2576               	addwf	(??_InvMixColumns+2)& (0+255),w,b
 37666  00011C  6ED9               	movwf	fsr2l,c
 37667  00011E  0E00               	movlw	0
 37668  000120  2177               	addwfc	(??_InvMixColumns+3)& (0+255),w,b
 37669  000122  6EDA               	movwf	fsr2h,c
 37670  000124  50DF               	movf	indf2,w,c
 37671  000126  0100               	movlb	0	; force () banked
 37672  000128  6F8E               	movwf	InvMixColumns@b& (0+255),b
 37673                           
 37674                           ;../aes/aes_src/AES.c: 355:     c = (*state)[i][2];
 37675  00012A  C08B  F074         	movff	InvMixColumns@i,??_InvMixColumns
 37676  00012E  C08C  F075         	movff	InvMixColumns@i+1,??_InvMixColumns+1
 37677  000132  0100               	movlb	0	; force () banked
 37678  000134  90D8               	bcf	status,0,c
 37679  000136  3774               	rlcf	??_InvMixColumns& (0+255),f,b
 37680  000138  3775               	rlcf	(??_InvMixColumns+1)& (0+255),f,b
 37681  00013A  90D8               	bcf	status,0,c
 37682  00013C  3774               	rlcf	??_InvMixColumns& (0+255),f,b
 37683  00013E  3775               	rlcf	(??_InvMixColumns+1)& (0+255),f,b
 37684  000140  C072  F076         	movff	InvMixColumns@state,??_InvMixColumns+2
 37685  000144  C073  F077         	movff	InvMixColumns@state+1,??_InvMixColumns+3
 37686  000148  5174               	movf	??_InvMixColumns& (0+255),w,b
 37687  00014A  2776               	addwf	(??_InvMixColumns+2)& (0+255),f,b
 37688  00014C  5175               	movf	(??_InvMixColumns+1)& (0+255),w,b
 37689  00014E  2377               	addwfc	(??_InvMixColumns+3)& (0+255),f,b
 37690  000150  0E02               	movlw	2
 37691  000152  2576               	addwf	(??_InvMixColumns+2)& (0+255),w,b
 37692  000154  6ED9               	movwf	fsr2l,c
 37693  000156  0E00               	movlw	0
 37694  000158  2177               	addwfc	(??_InvMixColumns+3)& (0+255),w,b
 37695  00015A  6EDA               	movwf	fsr2h,c
 37696  00015C  50DF               	movf	indf2,w,c
 37697  00015E  0100               	movlb	0	; force () banked
 37698  000160  6F8F               	movwf	InvMixColumns@c& (0+255),b
 37699                           
 37700                           ;../aes/aes_src/AES.c: 356:     d = (*state)[i][3];
 37701  000162  C08B  F074         	movff	InvMixColumns@i,??_InvMixColumns
 37702  000166  C08C  F075         	movff	InvMixColumns@i+1,??_InvMixColumns+1
 37703  00016A  0100               	movlb	0	; force () banked
 37704  00016C  90D8               	bcf	status,0,c
 37705  00016E  3774               	rlcf	??_InvMixColumns& (0+255),f,b
 37706  000170  3775               	rlcf	(??_InvMixColumns+1)& (0+255),f,b
 37707  000172  90D8               	bcf	status,0,c
 37708  000174  3774               	rlcf	??_InvMixColumns& (0+255),f,b
 37709  000176  3775               	rlcf	(??_InvMixColumns+1)& (0+255),f,b
 37710  000178  C072  F076         	movff	InvMixColumns@state,??_InvMixColumns+2
 37711  00017C  C073  F077         	movff	InvMixColumns@state+1,??_InvMixColumns+3
 37712  000180  5174               	movf	??_InvMixColumns& (0+255),w,b
 37713  000182  2776               	addwf	(??_InvMixColumns+2)& (0+255),f,b
 37714  000184  5175               	movf	(??_InvMixColumns+1)& (0+255),w,b
 37715  000186  2377               	addwfc	(??_InvMixColumns+3)& (0+255),f,b
 37716  000188  0E03               	movlw	3
 37717  00018A  2576               	addwf	(??_InvMixColumns+2)& (0+255),w,b
 37718  00018C  6ED9               	movwf	fsr2l,c
 37719  00018E  0E00               	movlw	0
 37720  000190  2177               	addwfc	(??_InvMixColumns+3)& (0+255),w,b
 37721  000192  6EDA               	movwf	fsr2h,c
 37722  000194  50DF               	movf	indf2,w,c
 37723  000196  0100               	movlb	0	; force () banked
 37724  000198  6F90               	movwf	InvMixColumns@d& (0+255),b
 37725                           
 37726                           ; BSR set to: 0
 37727                           ;../aes/aes_src/AES.c: 358:     (*state)[i][0] = ( ((0x0e & 1) * a) ^ ((0x0e>>1 & 1) * x
      +                          time(a)) ^ ((0x0e>>2 & 1) * xtime(xtime(a))) ^ ((0x0e>>3 & 1) * xtime(xtime(xtime(a)))) 
      +                          ^ ((0x0e>>4 & 1) * xtime(xtime(xtime(xtime(a)))))) ^ ( ((0x0b & 1) * b) ^ ((0x0b>>1 & 1)
      +                           * xtime(b)) ^ ((0x0b>>2 & 1) * xtime(xtime(b))) ^ ((0x0b>>3 & 1) * xtime(xtime(xtime(b)
      +                          ))) ^ ((0x0b>>4 & 1) * xtime(xtime(xtime(xtime(b)))))) ^ ( ((0x0d & 1) * c) ^ ((0x0d>>1 
      +                          & 1) * xtime(c)) ^ ((0x0d>>2 & 1) * xtime(xtime(c))) ^ ((0x0d>>3 & 1) * xtime(xtime(xtim
      +                          e(c)))) ^ ((0x0d>>4 & 1) * xtime(xtime(xtime(xtime(c)))))) ^ ( ((0x09 & 1) * d) ^ ((0x09
      +                          >>1 & 1) * xtime(d)) ^ ((0x09>>2 & 1) * xtime(xtime(d))) ^ ((0x09>>3 & 1) * xtime(xtime(
      +                          xtime(d)))) ^ ((0x09>>4 & 1) * xtime(xtime(xtime(xtime(d))))));
 37728  00019A  90D8               	bcf	status,0,c
 37729  00019C  0100               	movlb	0	; force () banked
 37730  00019E  358B               	rlcf	InvMixColumns@i& (0+255),w,b
 37731  0001A0  6ED9               	movwf	fsr2l,c
 37732  0001A2  358C               	rlcf	(InvMixColumns@i+1)& (0+255),w,b
 37733  0001A4  6EDA               	movwf	fsr2h,c
 37734  0001A6  90D8               	bcf	status,0,c
 37735  0001A8  36D9               	rlcf	fsr2l,f,c
 37736  0001AA  36DA               	rlcf	fsr2h,f,c
 37737  0001AC  0100               	movlb	0	; force () banked
 37738  0001AE  5172               	movf	InvMixColumns@state& (0+255),w,b
 37739  0001B0  26D9               	addwf	fsr2l,f,c
 37740  0001B2  5173               	movf	(InvMixColumns@state+1)& (0+255),w,b
 37741  0001B4  22DA               	addwfc	fsr2h,f,c
 37742  0001B6  0100               	movlb	0	; force () banked
 37743  0001B8  5190               	movf	InvMixColumns@d& (0+255),w,b
 37744  0001BA  ECF7  F05D         	call	_xtime
 37745  0001BE  ECF7  F05D         	call	_xtime
 37746  0001C2  ECF7  F05D         	call	_xtime
 37747  0001C6  ECF7  F05D         	call	_xtime
 37748  0001CA  0D00               	mullw	0
 37749  0001CC  006F FFCC  F074    	movff	prodl,??_InvMixColumns
 37750  0001D2  0100               	movlb	0	; force () banked
 37751  0001D4  5190               	movf	InvMixColumns@d& (0+255),w,b
 37752  0001D6  ECF7  F05D         	call	_xtime
 37753  0001DA  ECF7  F05D         	call	_xtime
 37754  0001DE  ECF7  F05D         	call	_xtime
 37755  0001E2  0D01               	mullw	1
 37756  0001E4  006F FFCC  F075    	movff	prodl,??_InvMixColumns+1
 37757  0001EA  0100               	movlb	0	; force () banked
 37758  0001EC  5190               	movf	InvMixColumns@d& (0+255),w,b
 37759  0001EE  ECF7  F05D         	call	_xtime
 37760  0001F2  ECF7  F05D         	call	_xtime
 37761  0001F6  0D00               	mullw	0
 37762  0001F8  006F FFCC  F076    	movff	prodl,??_InvMixColumns+2
 37763  0001FE  0100               	movlb	0	; force () banked
 37764  000200  5190               	movf	InvMixColumns@d& (0+255),w,b
 37765  000202  ECF7  F05D         	call	_xtime
 37766  000206  0D00               	mullw	0
 37767  000208  006F FFCC  F077    	movff	prodl,??_InvMixColumns+3
 37768  00020E  0100               	movlb	0	; force () banked
 37769  000210  5190               	movf	InvMixColumns@d& (0+255),w,b
 37770  000212  0D01               	mullw	1
 37771  000214  50F3               	movf	243,w,c
 37772  000216  0100               	movlb	0	; force () banked
 37773  000218  1977               	xorwf	(??_InvMixColumns+3)& (0+255),w,b
 37774  00021A  1976               	xorwf	(??_InvMixColumns+2)& (0+255),w,b
 37775  00021C  1975               	xorwf	(??_InvMixColumns+1)& (0+255),w,b
 37776  00021E  1974               	xorwf	??_InvMixColumns& (0+255),w,b
 37777  000220  6F78               	movwf	(??_InvMixColumns+4)& (0+255),b
 37778  000222  0100               	movlb	0	; force () banked
 37779  000224  518F               	movf	InvMixColumns@c& (0+255),w,b
 37780  000226  ECF7  F05D         	call	_xtime
 37781  00022A  ECF7  F05D         	call	_xtime
 37782  00022E  ECF7  F05D         	call	_xtime
 37783  000232  ECF7  F05D         	call	_xtime
 37784  000236  0D00               	mullw	0
 37785  000238  006F FFCC  F079    	movff	prodl,??_InvMixColumns+5
 37786  00023E  0100               	movlb	0	; force () banked
 37787  000240  518F               	movf	InvMixColumns@c& (0+255),w,b
 37788  000242  ECF7  F05D         	call	_xtime
 37789  000246  ECF7  F05D         	call	_xtime
 37790  00024A  ECF7  F05D         	call	_xtime
 37791  00024E  0D01               	mullw	1
 37792  000250  006F FFCC  F07A    	movff	prodl,??_InvMixColumns+6
 37793  000256  0100               	movlb	0	; force () banked
 37794  000258  518F               	movf	InvMixColumns@c& (0+255),w,b
 37795  00025A  ECF7  F05D         	call	_xtime
 37796  00025E  ECF7  F05D         	call	_xtime
 37797  000262  0D01               	mullw	1
 37798  000264  006F FFCC  F07B    	movff	prodl,??_InvMixColumns+7
 37799  00026A  0100               	movlb	0	; force () banked
 37800  00026C  518F               	movf	InvMixColumns@c& (0+255),w,b
 37801  00026E  ECF7  F05D         	call	_xtime
 37802  000272  0D00               	mullw	0
 37803  000274  006F FFCC  F07C    	movff	prodl,??_InvMixColumns+8
 37804  00027A  0100               	movlb	0	; force () banked
 37805  00027C  518F               	movf	InvMixColumns@c& (0+255),w,b
 37806  00027E  0D01               	mullw	1
 37807  000280  50F3               	movf	243,w,c
 37808  000282  0100               	movlb	0	; force () banked
 37809  000284  197C               	xorwf	(??_InvMixColumns+8)& (0+255),w,b
 37810  000286  197B               	xorwf	(??_InvMixColumns+7)& (0+255),w,b
 37811  000288  197A               	xorwf	(??_InvMixColumns+6)& (0+255),w,b
 37812  00028A  1979               	xorwf	(??_InvMixColumns+5)& (0+255),w,b
 37813  00028C  6F7D               	movwf	(??_InvMixColumns+9)& (0+255),b
 37814  00028E  0100               	movlb	0	; force () banked
 37815  000290  518E               	movf	InvMixColumns@b& (0+255),w,b
 37816  000292  ECF7  F05D         	call	_xtime
 37817  000296  ECF7  F05D         	call	_xtime
 37818  00029A  ECF7  F05D         	call	_xtime
 37819  00029E  ECF7  F05D         	call	_xtime
 37820  0002A2  0D00               	mullw	0
 37821  0002A4  006F FFCC  F07E    	movff	prodl,??_InvMixColumns+10
 37822  0002AA  0100               	movlb	0	; force () banked
 37823  0002AC  518E               	movf	InvMixColumns@b& (0+255),w,b
 37824  0002AE  ECF7  F05D         	call	_xtime
 37825  0002B2  ECF7  F05D         	call	_xtime
 37826  0002B6  ECF7  F05D         	call	_xtime
 37827  0002BA  0D01               	mullw	1
 37828  0002BC  006F FFCC  F07F    	movff	prodl,??_InvMixColumns+11
 37829  0002C2  0100               	movlb	0	; force () banked
 37830  0002C4  518E               	movf	InvMixColumns@b& (0+255),w,b
 37831  0002C6  ECF7  F05D         	call	_xtime
 37832  0002CA  ECF7  F05D         	call	_xtime
 37833  0002CE  0D00               	mullw	0
 37834  0002D0  006F FFCC  F080    	movff	prodl,??_InvMixColumns+12
 37835  0002D6  0100               	movlb	0	; force () banked
 37836  0002D8  518E               	movf	InvMixColumns@b& (0+255),w,b
 37837  0002DA  ECF7  F05D         	call	_xtime
 37838  0002DE  0D01               	mullw	1
 37839  0002E0  006F FFCC  F081    	movff	prodl,??_InvMixColumns+13
 37840  0002E6  0100               	movlb	0	; force () banked
 37841  0002E8  518E               	movf	InvMixColumns@b& (0+255),w,b
 37842  0002EA  0D01               	mullw	1
 37843  0002EC  50F3               	movf	243,w,c
 37844  0002EE  0100               	movlb	0	; force () banked
 37845  0002F0  1981               	xorwf	(??_InvMixColumns+13)& (0+255),w,b
 37846  0002F2  1980               	xorwf	(??_InvMixColumns+12)& (0+255),w,b
 37847  0002F4  197F               	xorwf	(??_InvMixColumns+11)& (0+255),w,b
 37848  0002F6  197E               	xorwf	(??_InvMixColumns+10)& (0+255),w,b
 37849  0002F8  6F82               	movwf	(??_InvMixColumns+14)& (0+255),b
 37850  0002FA  0100               	movlb	0	; force () banked
 37851  0002FC  518D               	movf	InvMixColumns@a& (0+255),w,b
 37852  0002FE  ECF7  F05D         	call	_xtime
 37853  000302  ECF7  F05D         	call	_xtime
 37854  000306  ECF7  F05D         	call	_xtime
 37855  00030A  ECF7  F05D         	call	_xtime
 37856  00030E  0D00               	mullw	0
 37857  000310  006F FFCC  F083    	movff	prodl,??_InvMixColumns+15
 37858  000316  0100               	movlb	0	; force () banked
 37859  000318  518D               	movf	InvMixColumns@a& (0+255),w,b
 37860  00031A  ECF7  F05D         	call	_xtime
 37861  00031E  ECF7  F05D         	call	_xtime
 37862  000322  ECF7  F05D         	call	_xtime
 37863  000326  0D01               	mullw	1
 37864  000328  006F FFCC  F084    	movff	prodl,??_InvMixColumns+16
 37865  00032E  0100               	movlb	0	; force () banked
 37866  000330  518D               	movf	InvMixColumns@a& (0+255),w,b
 37867  000332  ECF7  F05D         	call	_xtime
 37868  000336  ECF7  F05D         	call	_xtime
 37869  00033A  0D01               	mullw	1
 37870  00033C  006F FFCC  F085    	movff	prodl,??_InvMixColumns+17
 37871  000342  0100               	movlb	0	; force () banked
 37872  000344  518D               	movf	InvMixColumns@a& (0+255),w,b
 37873  000346  ECF7  F05D         	call	_xtime
 37874  00034A  0D01               	mullw	1
 37875  00034C  006F FFCC  F086    	movff	prodl,??_InvMixColumns+18
 37876  000352  0100               	movlb	0	; force () banked
 37877  000354  518D               	movf	InvMixColumns@a& (0+255),w,b
 37878  000356  0D00               	mullw	0
 37879  000358  50F3               	movf	243,w,c
 37880  00035A  0100               	movlb	0	; force () banked
 37881  00035C  1986               	xorwf	(??_InvMixColumns+18)& (0+255),w,b
 37882  00035E  1985               	xorwf	(??_InvMixColumns+17)& (0+255),w,b
 37883  000360  1984               	xorwf	(??_InvMixColumns+16)& (0+255),w,b
 37884  000362  1983               	xorwf	(??_InvMixColumns+15)& (0+255),w,b
 37885  000364  1982               	xorwf	(??_InvMixColumns+14)& (0+255),w,b
 37886  000366  197D               	xorwf	(??_InvMixColumns+9)& (0+255),w,b
 37887  000368  1978               	xorwf	(??_InvMixColumns+4)& (0+255),w,b
 37888  00036A  6EDF               	movwf	indf2,c
 37889                           
 37890                           ; BSR set to: 0
 37891                           ;../aes/aes_src/AES.c: 359:     (*state)[i][1] = ( ((0x09 & 1) * a) ^ ((0x09>>1 & 1) * x
      +                          time(a)) ^ ((0x09>>2 & 1) * xtime(xtime(a))) ^ ((0x09>>3 & 1) * xtime(xtime(xtime(a)))) 
      +                          ^ ((0x09>>4 & 1) * xtime(xtime(xtime(xtime(a)))))) ^ ( ((0x0e & 1) * b) ^ ((0x0e>>1 & 1)
      +                           * xtime(b)) ^ ((0x0e>>2 & 1) * xtime(xtime(b))) ^ ((0x0e>>3 & 1) * xtime(xtime(xtime(b)
      +                          ))) ^ ((0x0e>>4 & 1) * xtime(xtime(xtime(xtime(b)))))) ^ ( ((0x0b & 1) * c) ^ ((0x0b>>1 
      +                          & 1) * xtime(c)) ^ ((0x0b>>2 & 1) * xtime(xtime(c))) ^ ((0x0b>>3 & 1) * xtime(xtime(xtim
      +                          e(c)))) ^ ((0x0b>>4 & 1) * xtime(xtime(xtime(xtime(c)))))) ^ ( ((0x0d & 1) * d) ^ ((0x0d
      +                          >>1 & 1) * xtime(d)) ^ ((0x0d>>2 & 1) * xtime(xtime(d))) ^ ((0x0d>>3 & 1) * xtime(xtime(
      +                          xtime(d)))) ^ ((0x0d>>4 & 1) * xtime(xtime(xtime(xtime(d))))));
 37892  00036C  C08B  F074         	movff	InvMixColumns@i,??_InvMixColumns
 37893  000370  C08C  F075         	movff	InvMixColumns@i+1,??_InvMixColumns+1
 37894  000374  0100               	movlb	0	; force () banked
 37895  000376  90D8               	bcf	status,0,c
 37896  000378  3774               	rlcf	??_InvMixColumns& (0+255),f,b
 37897  00037A  3775               	rlcf	(??_InvMixColumns+1)& (0+255),f,b
 37898  00037C  90D8               	bcf	status,0,c
 37899  00037E  3774               	rlcf	??_InvMixColumns& (0+255),f,b
 37900  000380  3775               	rlcf	(??_InvMixColumns+1)& (0+255),f,b
 37901  000382  C072  F076         	movff	InvMixColumns@state,??_InvMixColumns+2
 37902  000386  C073  F077         	movff	InvMixColumns@state+1,??_InvMixColumns+3
 37903  00038A  5174               	movf	??_InvMixColumns& (0+255),w,b
 37904  00038C  2776               	addwf	(??_InvMixColumns+2)& (0+255),f,b
 37905  00038E  5175               	movf	(??_InvMixColumns+1)& (0+255),w,b
 37906  000390  2377               	addwfc	(??_InvMixColumns+3)& (0+255),f,b
 37907  000392  0E01               	movlw	1
 37908  000394  2576               	addwf	(??_InvMixColumns+2)& (0+255),w,b
 37909  000396  6ED9               	movwf	fsr2l,c
 37910  000398  0E00               	movlw	0
 37911  00039A  2177               	addwfc	(??_InvMixColumns+3)& (0+255),w,b
 37912  00039C  6EDA               	movwf	fsr2h,c
 37913  00039E  0100               	movlb	0	; force () banked
 37914  0003A0  5190               	movf	InvMixColumns@d& (0+255),w,b
 37915  0003A2  ECF7  F05D         	call	_xtime
 37916  0003A6  ECF7  F05D         	call	_xtime
 37917  0003AA  ECF7  F05D         	call	_xtime
 37918  0003AE  ECF7  F05D         	call	_xtime
 37919  0003B2  0D00               	mullw	0
 37920  0003B4  006F FFCC  F078    	movff	prodl,??_InvMixColumns+4
 37921  0003BA  0100               	movlb	0	; force () banked
 37922  0003BC  5190               	movf	InvMixColumns@d& (0+255),w,b
 37923  0003BE  ECF7  F05D         	call	_xtime
 37924  0003C2  ECF7  F05D         	call	_xtime
 37925  0003C6  ECF7  F05D         	call	_xtime
 37926  0003CA  0D01               	mullw	1
 37927  0003CC  006F FFCC  F079    	movff	prodl,??_InvMixColumns+5
 37928  0003D2  0100               	movlb	0	; force () banked
 37929  0003D4  5190               	movf	InvMixColumns@d& (0+255),w,b
 37930  0003D6  ECF7  F05D         	call	_xtime
 37931  0003DA  ECF7  F05D         	call	_xtime
 37932  0003DE  0D01               	mullw	1
 37933  0003E0  006F FFCC  F07A    	movff	prodl,??_InvMixColumns+6
 37934  0003E6  0100               	movlb	0	; force () banked
 37935  0003E8  5190               	movf	InvMixColumns@d& (0+255),w,b
 37936  0003EA  ECF7  F05D         	call	_xtime
 37937  0003EE  0D00               	mullw	0
 37938  0003F0  006F FFCC  F07B    	movff	prodl,??_InvMixColumns+7
 37939  0003F6  0100               	movlb	0	; force () banked
 37940  0003F8  5190               	movf	InvMixColumns@d& (0+255),w,b
 37941  0003FA  0D01               	mullw	1
 37942  0003FC  50F3               	movf	243,w,c
 37943  0003FE  0100               	movlb	0	; force () banked
 37944  000400  197B               	xorwf	(??_InvMixColumns+7)& (0+255),w,b
 37945  000402  197A               	xorwf	(??_InvMixColumns+6)& (0+255),w,b
 37946  000404  1979               	xorwf	(??_InvMixColumns+5)& (0+255),w,b
 37947  000406  1978               	xorwf	(??_InvMixColumns+4)& (0+255),w,b
 37948  000408  6F7C               	movwf	(??_InvMixColumns+8)& (0+255),b
 37949  00040A  0100               	movlb	0	; force () banked
 37950  00040C  518F               	movf	InvMixColumns@c& (0+255),w,b
 37951  00040E  ECF7  F05D         	call	_xtime
 37952  000412  ECF7  F05D         	call	_xtime
 37953  000416  ECF7  F05D         	call	_xtime
 37954  00041A  ECF7  F05D         	call	_xtime
 37955  00041E  0D00               	mullw	0
 37956  000420  006F FFCC  F07D    	movff	prodl,??_InvMixColumns+9
 37957  000426  0100               	movlb	0	; force () banked
 37958  000428  518F               	movf	InvMixColumns@c& (0+255),w,b
 37959  00042A  ECF7  F05D         	call	_xtime
 37960  00042E  ECF7  F05D         	call	_xtime
 37961  000432  ECF7  F05D         	call	_xtime
 37962  000436  0D01               	mullw	1
 37963  000438  006F FFCC  F07E    	movff	prodl,??_InvMixColumns+10
 37964  00043E  0100               	movlb	0	; force () banked
 37965  000440  518F               	movf	InvMixColumns@c& (0+255),w,b
 37966  000442  ECF7  F05D         	call	_xtime
 37967  000446  ECF7  F05D         	call	_xtime
 37968  00044A  0D00               	mullw	0
 37969  00044C  006F FFCC  F07F    	movff	prodl,??_InvMixColumns+11
 37970  000452  0100               	movlb	0	; force () banked
 37971  000454  518F               	movf	InvMixColumns@c& (0+255),w,b
 37972  000456  ECF7  F05D         	call	_xtime
 37973  00045A  0D01               	mullw	1
 37974  00045C  006F FFCC  F080    	movff	prodl,??_InvMixColumns+12
 37975  000462  0100               	movlb	0	; force () banked
 37976  000464  518F               	movf	InvMixColumns@c& (0+255),w,b
 37977  000466  0D01               	mullw	1
 37978  000468  50F3               	movf	243,w,c
 37979  00046A  0100               	movlb	0	; force () banked
 37980  00046C  1980               	xorwf	(??_InvMixColumns+12)& (0+255),w,b
 37981  00046E  197F               	xorwf	(??_InvMixColumns+11)& (0+255),w,b
 37982  000470  197E               	xorwf	(??_InvMixColumns+10)& (0+255),w,b
 37983  000472  197D               	xorwf	(??_InvMixColumns+9)& (0+255),w,b
 37984  000474  6F81               	movwf	(??_InvMixColumns+13)& (0+255),b
 37985  000476  0100               	movlb	0	; force () banked
 37986  000478  518E               	movf	InvMixColumns@b& (0+255),w,b
 37987  00047A  ECF7  F05D         	call	_xtime
 37988  00047E  ECF7  F05D         	call	_xtime
 37989  000482  ECF7  F05D         	call	_xtime
 37990  000486  ECF7  F05D         	call	_xtime
 37991  00048A  0D00               	mullw	0
 37992  00048C  006F FFCC  F082    	movff	prodl,??_InvMixColumns+14
 37993  000492  0100               	movlb	0	; force () banked
 37994  000494  518E               	movf	InvMixColumns@b& (0+255),w,b
 37995  000496  ECF7  F05D         	call	_xtime
 37996  00049A  ECF7  F05D         	call	_xtime
 37997  00049E  ECF7  F05D         	call	_xtime
 37998  0004A2  0D01               	mullw	1
 37999  0004A4  006F FFCC  F083    	movff	prodl,??_InvMixColumns+15
 38000  0004AA  0100               	movlb	0	; force () banked
 38001  0004AC  518E               	movf	InvMixColumns@b& (0+255),w,b
 38002  0004AE  ECF7  F05D         	call	_xtime
 38003  0004B2  ECF7  F05D         	call	_xtime
 38004  0004B6  0D01               	mullw	1
 38005  0004B8  006F FFCC  F084    	movff	prodl,??_InvMixColumns+16
 38006  0004BE  0100               	movlb	0	; force () banked
 38007  0004C0  518E               	movf	InvMixColumns@b& (0+255),w,b
 38008  0004C2  ECF7  F05D         	call	_xtime
 38009  0004C6  0D01               	mullw	1
 38010  0004C8  006F FFCC  F085    	movff	prodl,??_InvMixColumns+17
 38011  0004CE  0100               	movlb	0	; force () banked
 38012  0004D0  518E               	movf	InvMixColumns@b& (0+255),w,b
 38013  0004D2  0D00               	mullw	0
 38014  0004D4  50F3               	movf	243,w,c
 38015  0004D6  0100               	movlb	0	; force () banked
 38016  0004D8  1985               	xorwf	(??_InvMixColumns+17)& (0+255),w,b
 38017  0004DA  1984               	xorwf	(??_InvMixColumns+16)& (0+255),w,b
 38018  0004DC  1983               	xorwf	(??_InvMixColumns+15)& (0+255),w,b
 38019  0004DE  1982               	xorwf	(??_InvMixColumns+14)& (0+255),w,b
 38020  0004E0  6F86               	movwf	(??_InvMixColumns+18)& (0+255),b
 38021  0004E2  0100               	movlb	0	; force () banked
 38022  0004E4  518D               	movf	InvMixColumns@a& (0+255),w,b
 38023  0004E6  ECF7  F05D         	call	_xtime
 38024  0004EA  ECF7  F05D         	call	_xtime
 38025  0004EE  ECF7  F05D         	call	_xtime
 38026  0004F2  ECF7  F05D         	call	_xtime
 38027  0004F6  0D00               	mullw	0
 38028  0004F8  006F FFCC  F087    	movff	prodl,??_InvMixColumns+19
 38029  0004FE  0100               	movlb	0	; force () banked
 38030  000500  518D               	movf	InvMixColumns@a& (0+255),w,b
 38031  000502  ECF7  F05D         	call	_xtime
 38032  000506  ECF7  F05D         	call	_xtime
 38033  00050A  ECF7  F05D         	call	_xtime
 38034  00050E  0D01               	mullw	1
 38035  000510  006F FFCC  F088    	movff	prodl,??_InvMixColumns+20
 38036  000516  0100               	movlb	0	; force () banked
 38037  000518  518D               	movf	InvMixColumns@a& (0+255),w,b
 38038  00051A  ECF7  F05D         	call	_xtime
 38039  00051E  ECF7  F05D         	call	_xtime
 38040  000522  0D00               	mullw	0
 38041  000524  006F FFCC  F089    	movff	prodl,??_InvMixColumns+21
 38042  00052A  0100               	movlb	0	; force () banked
 38043  00052C  518D               	movf	InvMixColumns@a& (0+255),w,b
 38044  00052E  ECF7  F05D         	call	_xtime
 38045  000532  0D00               	mullw	0
 38046  000534  006F FFCC  F08A    	movff	prodl,??_InvMixColumns+22
 38047  00053A  0100               	movlb	0	; force () banked
 38048  00053C  518D               	movf	InvMixColumns@a& (0+255),w,b
 38049  00053E  0D01               	mullw	1
 38050  000540  50F3               	movf	243,w,c
 38051  000542  0100               	movlb	0	; force () banked
 38052  000544  198A               	xorwf	(??_InvMixColumns+22)& (0+255),w,b
 38053  000546  1989               	xorwf	(??_InvMixColumns+21)& (0+255),w,b
 38054  000548  1988               	xorwf	(??_InvMixColumns+20)& (0+255),w,b
 38055  00054A  1987               	xorwf	(??_InvMixColumns+19)& (0+255),w,b
 38056  00054C  1986               	xorwf	(??_InvMixColumns+18)& (0+255),w,b
 38057  00054E  1981               	xorwf	(??_InvMixColumns+13)& (0+255),w,b
 38058  000550  197C               	xorwf	(??_InvMixColumns+8)& (0+255),w,b
 38059  000552  6EDF               	movwf	indf2,c
 38060                           
 38061                           ; BSR set to: 0
 38062                           ;../aes/aes_src/AES.c: 360:     (*state)[i][2] = ( ((0x0d & 1) * a) ^ ((0x0d>>1 & 1) * x
      +                          time(a)) ^ ((0x0d>>2 & 1) * xtime(xtime(a))) ^ ((0x0d>>3 & 1) * xtime(xtime(xtime(a)))) 
      +                          ^ ((0x0d>>4 & 1) * xtime(xtime(xtime(xtime(a)))))) ^ ( ((0x09 & 1) * b) ^ ((0x09>>1 & 1)
      +                           * xtime(b)) ^ ((0x09>>2 & 1) * xtime(xtime(b))) ^ ((0x09>>3 & 1) * xtime(xtime(xtime(b)
      +                          ))) ^ ((0x09>>4 & 1) * xtime(xtime(xtime(xtime(b)))))) ^ ( ((0x0e & 1) * c) ^ ((0x0e>>1 
      +                          & 1) * xtime(c)) ^ ((0x0e>>2 & 1) * xtime(xtime(c))) ^ ((0x0e>>3 & 1) * xtime(xtime(xtim
      +                          e(c)))) ^ ((0x0e>>4 & 1) * xtime(xtime(xtime(xtime(c)))))) ^ ( ((0x0b & 1) * d) ^ ((0x0b
      +                          >>1 & 1) * xtime(d)) ^ ((0x0b>>2 & 1) * xtime(xtime(d))) ^ ((0x0b>>3 & 1) * xtime(xtime(
      +                          xtime(d)))) ^ ((0x0b>>4 & 1) * xtime(xtime(xtime(xtime(d))))));
 38063  000554  C08B  F074         	movff	InvMixColumns@i,??_InvMixColumns
 38064  000558  C08C  F075         	movff	InvMixColumns@i+1,??_InvMixColumns+1
 38065  00055C  0100               	movlb	0	; force () banked
 38066  00055E  90D8               	bcf	status,0,c
 38067  000560  3774               	rlcf	??_InvMixColumns& (0+255),f,b
 38068  000562  3775               	rlcf	(??_InvMixColumns+1)& (0+255),f,b
 38069  000564  90D8               	bcf	status,0,c
 38070  000566  3774               	rlcf	??_InvMixColumns& (0+255),f,b
 38071  000568  3775               	rlcf	(??_InvMixColumns+1)& (0+255),f,b
 38072  00056A  C072  F076         	movff	InvMixColumns@state,??_InvMixColumns+2
 38073  00056E  C073  F077         	movff	InvMixColumns@state+1,??_InvMixColumns+3
 38074  000572  5174               	movf	??_InvMixColumns& (0+255),w,b
 38075  000574  2776               	addwf	(??_InvMixColumns+2)& (0+255),f,b
 38076  000576  5175               	movf	(??_InvMixColumns+1)& (0+255),w,b
 38077  000578  2377               	addwfc	(??_InvMixColumns+3)& (0+255),f,b
 38078  00057A  0E02               	movlw	2
 38079  00057C  2576               	addwf	(??_InvMixColumns+2)& (0+255),w,b
 38080  00057E  6ED9               	movwf	fsr2l,c
 38081  000580  0E00               	movlw	0
 38082  000582  2177               	addwfc	(??_InvMixColumns+3)& (0+255),w,b
 38083  000584  6EDA               	movwf	fsr2h,c
 38084  000586  0100               	movlb	0	; force () banked
 38085  000588  5190               	movf	InvMixColumns@d& (0+255),w,b
 38086  00058A  ECF7  F05D         	call	_xtime
 38087  00058E  ECF7  F05D         	call	_xtime
 38088  000592  ECF7  F05D         	call	_xtime
 38089  000596  ECF7  F05D         	call	_xtime
 38090  00059A  0D00               	mullw	0
 38091  00059C  006F FFCC  F078    	movff	prodl,??_InvMixColumns+4
 38092  0005A2  0100               	movlb	0	; force () banked
 38093  0005A4  5190               	movf	InvMixColumns@d& (0+255),w,b
 38094  0005A6  ECF7  F05D         	call	_xtime
 38095  0005AA  ECF7  F05D         	call	_xtime
 38096  0005AE  ECF7  F05D         	call	_xtime
 38097  0005B2  0D01               	mullw	1
 38098  0005B4  006F FFCC  F079    	movff	prodl,??_InvMixColumns+5
 38099  0005BA  0100               	movlb	0	; force () banked
 38100  0005BC  5190               	movf	InvMixColumns@d& (0+255),w,b
 38101  0005BE  ECF7  F05D         	call	_xtime
 38102  0005C2  ECF7  F05D         	call	_xtime
 38103  0005C6  0D00               	mullw	0
 38104  0005C8  006F FFCC  F07A    	movff	prodl,??_InvMixColumns+6
 38105  0005CE  0100               	movlb	0	; force () banked
 38106  0005D0  5190               	movf	InvMixColumns@d& (0+255),w,b
 38107  0005D2  ECF7  F05D         	call	_xtime
 38108  0005D6  0D01               	mullw	1
 38109  0005D8  006F FFCC  F07B    	movff	prodl,??_InvMixColumns+7
 38110  0005DE  0100               	movlb	0	; force () banked
 38111  0005E0  5190               	movf	InvMixColumns@d& (0+255),w,b
 38112  0005E2  0D01               	mullw	1
 38113  0005E4  50F3               	movf	243,w,c
 38114  0005E6  0100               	movlb	0	; force () banked
 38115  0005E8  197B               	xorwf	(??_InvMixColumns+7)& (0+255),w,b
 38116  0005EA  197A               	xorwf	(??_InvMixColumns+6)& (0+255),w,b
 38117  0005EC  1979               	xorwf	(??_InvMixColumns+5)& (0+255),w,b
 38118  0005EE  1978               	xorwf	(??_InvMixColumns+4)& (0+255),w,b
 38119  0005F0  6F7C               	movwf	(??_InvMixColumns+8)& (0+255),b
 38120  0005F2  0100               	movlb	0	; force () banked
 38121  0005F4  518F               	movf	InvMixColumns@c& (0+255),w,b
 38122  0005F6  ECF7  F05D         	call	_xtime
 38123  0005FA  ECF7  F05D         	call	_xtime
 38124  0005FE  ECF7  F05D         	call	_xtime
 38125  000602  ECF7  F05D         	call	_xtime
 38126  000606  0D00               	mullw	0
 38127  000608  006F FFCC  F07D    	movff	prodl,??_InvMixColumns+9
 38128  00060E  0100               	movlb	0	; force () banked
 38129  000610  518F               	movf	InvMixColumns@c& (0+255),w,b
 38130  000612  ECF7  F05D         	call	_xtime
 38131  000616  ECF7  F05D         	call	_xtime
 38132  00061A  ECF7  F05D         	call	_xtime
 38133  00061E  0D01               	mullw	1
 38134  000620  006F FFCC  F07E    	movff	prodl,??_InvMixColumns+10
 38135  000626  0100               	movlb	0	; force () banked
 38136  000628  518F               	movf	InvMixColumns@c& (0+255),w,b
 38137  00062A  ECF7  F05D         	call	_xtime
 38138  00062E  ECF7  F05D         	call	_xtime
 38139  000632  0D01               	mullw	1
 38140  000634  006F FFCC  F07F    	movff	prodl,??_InvMixColumns+11
 38141  00063A  0100               	movlb	0	; force () banked
 38142  00063C  518F               	movf	InvMixColumns@c& (0+255),w,b
 38143  00063E  ECF7  F05D         	call	_xtime
 38144  000642  0D01               	mullw	1
 38145  000644  006F FFCC  F080    	movff	prodl,??_InvMixColumns+12
 38146  00064A  0100               	movlb	0	; force () banked
 38147  00064C  518F               	movf	InvMixColumns@c& (0+255),w,b
 38148  00064E  0D00               	mullw	0
 38149  000650  50F3               	movf	243,w,c
 38150  000652  0100               	movlb	0	; force () banked
 38151  000654  1980               	xorwf	(??_InvMixColumns+12)& (0+255),w,b
 38152  000656  197F               	xorwf	(??_InvMixColumns+11)& (0+255),w,b
 38153  000658  197E               	xorwf	(??_InvMixColumns+10)& (0+255),w,b
 38154  00065A  197D               	xorwf	(??_InvMixColumns+9)& (0+255),w,b
 38155  00065C  6F81               	movwf	(??_InvMixColumns+13)& (0+255),b
 38156  00065E  0100               	movlb	0	; force () banked
 38157  000660  518E               	movf	InvMixColumns@b& (0+255),w,b
 38158  000662  ECF7  F05D         	call	_xtime
 38159  000666  ECF7  F05D         	call	_xtime
 38160  00066A  ECF7  F05D         	call	_xtime
 38161  00066E  ECF7  F05D         	call	_xtime
 38162  000672  0D00               	mullw	0
 38163  000674  006F FFCC  F082    	movff	prodl,??_InvMixColumns+14
 38164  00067A  0100               	movlb	0	; force () banked
 38165  00067C  518E               	movf	InvMixColumns@b& (0+255),w,b
 38166  00067E  ECF7  F05D         	call	_xtime
 38167  000682  ECF7  F05D         	call	_xtime
 38168  000686  ECF7  F05D         	call	_xtime
 38169  00068A  0D01               	mullw	1
 38170  00068C  006F FFCC  F083    	movff	prodl,??_InvMixColumns+15
 38171  000692  0100               	movlb	0	; force () banked
 38172  000694  518E               	movf	InvMixColumns@b& (0+255),w,b
 38173  000696  ECF7  F05D         	call	_xtime
 38174  00069A  ECF7  F05D         	call	_xtime
 38175  00069E  0D00               	mullw	0
 38176  0006A0  006F FFCC  F084    	movff	prodl,??_InvMixColumns+16
 38177  0006A6  0100               	movlb	0	; force () banked
 38178  0006A8  518E               	movf	InvMixColumns@b& (0+255),w,b
 38179  0006AA  ECF7  F05D         	call	_xtime
 38180  0006AE  0D00               	mullw	0
 38181  0006B0  006F FFCC  F085    	movff	prodl,??_InvMixColumns+17
 38182  0006B6  0100               	movlb	0	; force () banked
 38183  0006B8  518E               	movf	InvMixColumns@b& (0+255),w,b
 38184  0006BA  0D01               	mullw	1
 38185  0006BC  50F3               	movf	243,w,c
 38186  0006BE  0100               	movlb	0	; force () banked
 38187  0006C0  1985               	xorwf	(??_InvMixColumns+17)& (0+255),w,b
 38188  0006C2  1984               	xorwf	(??_InvMixColumns+16)& (0+255),w,b
 38189  0006C4  1983               	xorwf	(??_InvMixColumns+15)& (0+255),w,b
 38190  0006C6  1982               	xorwf	(??_InvMixColumns+14)& (0+255),w,b
 38191  0006C8  6F86               	movwf	(??_InvMixColumns+18)& (0+255),b
 38192  0006CA  0100               	movlb	0	; force () banked
 38193  0006CC  518D               	movf	InvMixColumns@a& (0+255),w,b
 38194  0006CE  ECF7  F05D         	call	_xtime
 38195  0006D2  ECF7  F05D         	call	_xtime
 38196  0006D6  ECF7  F05D         	call	_xtime
 38197  0006DA  ECF7  F05D         	call	_xtime
 38198  0006DE  0D00               	mullw	0
 38199  0006E0  006F FFCC  F087    	movff	prodl,??_InvMixColumns+19
 38200  0006E6  0100               	movlb	0	; force () banked
 38201  0006E8  518D               	movf	InvMixColumns@a& (0+255),w,b
 38202  0006EA  ECF7  F05D         	call	_xtime
 38203  0006EE  ECF7  F05D         	call	_xtime
 38204  0006F2  ECF7  F05D         	call	_xtime
 38205  0006F6  0D01               	mullw	1
 38206  0006F8  006F FFCC  F088    	movff	prodl,??_InvMixColumns+20
 38207  0006FE  0100               	movlb	0	; force () banked
 38208  000700  518D               	movf	InvMixColumns@a& (0+255),w,b
 38209  000702  ECF7  F05D         	call	_xtime
 38210  000706  ECF7  F05D         	call	_xtime
 38211  00070A  0D01               	mullw	1
 38212  00070C  006F FFCC  F089    	movff	prodl,??_InvMixColumns+21
 38213  000712  0100               	movlb	0	; force () banked
 38214  000714  518D               	movf	InvMixColumns@a& (0+255),w,b
 38215  000716  ECF7  F05D         	call	_xtime
 38216  00071A  0D00               	mullw	0
 38217  00071C  006F FFCC  F08A    	movff	prodl,??_InvMixColumns+22
 38218  000722  0100               	movlb	0	; force () banked
 38219  000724  518D               	movf	InvMixColumns@a& (0+255),w,b
 38220  000726  0D01               	mullw	1
 38221  000728  50F3               	movf	243,w,c
 38222  00072A  0100               	movlb	0	; force () banked
 38223  00072C  198A               	xorwf	(??_InvMixColumns+22)& (0+255),w,b
 38224  00072E  1989               	xorwf	(??_InvMixColumns+21)& (0+255),w,b
 38225  000730  1988               	xorwf	(??_InvMixColumns+20)& (0+255),w,b
 38226  000732  1987               	xorwf	(??_InvMixColumns+19)& (0+255),w,b
 38227  000734  1986               	xorwf	(??_InvMixColumns+18)& (0+255),w,b
 38228  000736  1981               	xorwf	(??_InvMixColumns+13)& (0+255),w,b
 38229  000738  197C               	xorwf	(??_InvMixColumns+8)& (0+255),w,b
 38230  00073A  6EDF               	movwf	indf2,c
 38231                           
 38232                           ; BSR set to: 0
 38233                           ;../aes/aes_src/AES.c: 361:     (*state)[i][3] = ( ((0x0b & 1) * a) ^ ((0x0b>>1 & 1) * x
      +                          time(a)) ^ ((0x0b>>2 & 1) * xtime(xtime(a))) ^ ((0x0b>>3 & 1) * xtime(xtime(xtime(a)))) 
      +                          ^ ((0x0b>>4 & 1) * xtime(xtime(xtime(xtime(a)))))) ^ ( ((0x0d & 1) * b) ^ ((0x0d>>1 & 1)
      +                           * xtime(b)) ^ ((0x0d>>2 & 1) * xtime(xtime(b))) ^ ((0x0d>>3 & 1) * xtime(xtime(xtime(b)
      +                          ))) ^ ((0x0d>>4 & 1) * xtime(xtime(xtime(xtime(b)))))) ^ ( ((0x09 & 1) * c) ^ ((0x09>>1 
      +                          & 1) * xtime(c)) ^ ((0x09>>2 & 1) * xtime(xtime(c))) ^ ((0x09>>3 & 1) * xtime(xtime(xtim
      +                          e(c)))) ^ ((0x09>>4 & 1) * xtime(xtime(xtime(xtime(c)))))) ^ ( ((0x0e & 1) * d) ^ ((0x0e
      +                          >>1 & 1) * xtime(d)) ^ ((0x0e>>2 & 1) * xtime(xtime(d))) ^ ((0x0e>>3 & 1) * xtime(xtime(
      +                          xtime(d)))) ^ ((0x0e>>4 & 1) * xtime(xtime(xtime(xtime(d))))));
 38234  00073C  C08B  F074         	movff	InvMixColumns@i,??_InvMixColumns
 38235  000740  C08C  F075         	movff	InvMixColumns@i+1,??_InvMixColumns+1
 38236  000744  0100               	movlb	0	; force () banked
 38237  000746  90D8               	bcf	status,0,c
 38238  000748  3774               	rlcf	??_InvMixColumns& (0+255),f,b
 38239  00074A  3775               	rlcf	(??_InvMixColumns+1)& (0+255),f,b
 38240  00074C  90D8               	bcf	status,0,c
 38241  00074E  3774               	rlcf	??_InvMixColumns& (0+255),f,b
 38242  000750  3775               	rlcf	(??_InvMixColumns+1)& (0+255),f,b
 38243  000752  C072  F076         	movff	InvMixColumns@state,??_InvMixColumns+2
 38244  000756  C073  F077         	movff	InvMixColumns@state+1,??_InvMixColumns+3
 38245  00075A  5174               	movf	??_InvMixColumns& (0+255),w,b
 38246  00075C  2776               	addwf	(??_InvMixColumns+2)& (0+255),f,b
 38247  00075E  5175               	movf	(??_InvMixColumns+1)& (0+255),w,b
 38248  000760  2377               	addwfc	(??_InvMixColumns+3)& (0+255),f,b
 38249  000762  0E03               	movlw	3
 38250  000764  2576               	addwf	(??_InvMixColumns+2)& (0+255),w,b
 38251  000766  6ED9               	movwf	fsr2l,c
 38252  000768  0E00               	movlw	0
 38253  00076A  2177               	addwfc	(??_InvMixColumns+3)& (0+255),w,b
 38254  00076C  6EDA               	movwf	fsr2h,c
 38255  00076E  0100               	movlb	0	; force () banked
 38256  000770  5190               	movf	InvMixColumns@d& (0+255),w,b
 38257  000772  ECF7  F05D         	call	_xtime
 38258  000776  ECF7  F05D         	call	_xtime
 38259  00077A  ECF7  F05D         	call	_xtime
 38260  00077E  ECF7  F05D         	call	_xtime
 38261  000782  0D00               	mullw	0
 38262  000784  006F FFCC  F078    	movff	prodl,??_InvMixColumns+4
 38263  00078A  0100               	movlb	0	; force () banked
 38264  00078C  5190               	movf	InvMixColumns@d& (0+255),w,b
 38265  00078E  ECF7  F05D         	call	_xtime
 38266  000792  ECF7  F05D         	call	_xtime
 38267  000796  ECF7  F05D         	call	_xtime
 38268  00079A  0D01               	mullw	1
 38269  00079C  006F FFCC  F079    	movff	prodl,??_InvMixColumns+5
 38270  0007A2  0100               	movlb	0	; force () banked
 38271  0007A4  5190               	movf	InvMixColumns@d& (0+255),w,b
 38272  0007A6  ECF7  F05D         	call	_xtime
 38273  0007AA  ECF7  F05D         	call	_xtime
 38274  0007AE  0D01               	mullw	1
 38275  0007B0  006F FFCC  F07A    	movff	prodl,??_InvMixColumns+6
 38276  0007B6  0100               	movlb	0	; force () banked
 38277  0007B8  5190               	movf	InvMixColumns@d& (0+255),w,b
 38278  0007BA  ECF7  F05D         	call	_xtime
 38279  0007BE  0D01               	mullw	1
 38280  0007C0  006F FFCC  F07B    	movff	prodl,??_InvMixColumns+7
 38281  0007C6  0100               	movlb	0	; force () banked
 38282  0007C8  5190               	movf	InvMixColumns@d& (0+255),w,b
 38283  0007CA  0D00               	mullw	0
 38284  0007CC  50F3               	movf	243,w,c
 38285  0007CE  0100               	movlb	0	; force () banked
 38286  0007D0  197B               	xorwf	(??_InvMixColumns+7)& (0+255),w,b
 38287  0007D2  197A               	xorwf	(??_InvMixColumns+6)& (0+255),w,b
 38288  0007D4  1979               	xorwf	(??_InvMixColumns+5)& (0+255),w,b
 38289  0007D6  1978               	xorwf	(??_InvMixColumns+4)& (0+255),w,b
 38290  0007D8  6F7C               	movwf	(??_InvMixColumns+8)& (0+255),b
 38291  0007DA  0100               	movlb	0	; force () banked
 38292  0007DC  518F               	movf	InvMixColumns@c& (0+255),w,b
 38293  0007DE  ECF7  F05D         	call	_xtime
 38294  0007E2  ECF7  F05D         	call	_xtime
 38295  0007E6  ECF7  F05D         	call	_xtime
 38296  0007EA  ECF7  F05D         	call	_xtime
 38297  0007EE  0D00               	mullw	0
 38298  0007F0  006F FFCC  F07D    	movff	prodl,??_InvMixColumns+9
 38299  0007F6  0100               	movlb	0	; force () banked
 38300  0007F8  518F               	movf	InvMixColumns@c& (0+255),w,b
 38301  0007FA  ECF7  F05D         	call	_xtime
 38302  0007FE  ECF7  F05D         	call	_xtime
 38303  000802  ECF7  F05D         	call	_xtime
 38304  000806  0D01               	mullw	1
 38305  000808  006F FFCC  F07E    	movff	prodl,??_InvMixColumns+10
 38306  00080E  0100               	movlb	0	; force () banked
 38307  000810  518F               	movf	InvMixColumns@c& (0+255),w,b
 38308  000812  ECF7  F05D         	call	_xtime
 38309  000816  ECF7  F05D         	call	_xtime
 38310  00081A  0D00               	mullw	0
 38311  00081C  006F FFCC  F07F    	movff	prodl,??_InvMixColumns+11
 38312  000822  0100               	movlb	0	; force () banked
 38313  000824  518F               	movf	InvMixColumns@c& (0+255),w,b
 38314  000826  ECF7  F05D         	call	_xtime
 38315  00082A  0D00               	mullw	0
 38316  00082C  006F FFCC  F080    	movff	prodl,??_InvMixColumns+12
 38317  000832  0100               	movlb	0	; force () banked
 38318  000834  518F               	movf	InvMixColumns@c& (0+255),w,b
 38319  000836  0D01               	mullw	1
 38320  000838  50F3               	movf	243,w,c
 38321  00083A  0100               	movlb	0	; force () banked
 38322  00083C  1980               	xorwf	(??_InvMixColumns+12)& (0+255),w,b
 38323  00083E  197F               	xorwf	(??_InvMixColumns+11)& (0+255),w,b
 38324  000840  197E               	xorwf	(??_InvMixColumns+10)& (0+255),w,b
 38325  000842  197D               	xorwf	(??_InvMixColumns+9)& (0+255),w,b
 38326  000844  6F81               	movwf	(??_InvMixColumns+13)& (0+255),b
 38327  000846  0100               	movlb	0	; force () banked
 38328  000848  518E               	movf	InvMixColumns@b& (0+255),w,b
 38329  00084A  ECF7  F05D         	call	_xtime
 38330  00084E  ECF7  F05D         	call	_xtime
 38331  000852  ECF7  F05D         	call	_xtime
 38332  000856  ECF7  F05D         	call	_xtime
 38333  00085A  0D00               	mullw	0
 38334  00085C  006F FFCC  F082    	movff	prodl,??_InvMixColumns+14
 38335  000862  0100               	movlb	0	; force () banked
 38336  000864  518E               	movf	InvMixColumns@b& (0+255),w,b
 38337  000866  ECF7  F05D         	call	_xtime
 38338  00086A  ECF7  F05D         	call	_xtime
 38339  00086E  ECF7  F05D         	call	_xtime
 38340  000872  0D01               	mullw	1
 38341  000874  006F FFCC  F083    	movff	prodl,??_InvMixColumns+15
 38342  00087A  0100               	movlb	0	; force () banked
 38343  00087C  518E               	movf	InvMixColumns@b& (0+255),w,b
 38344  00087E  ECF7  F05D         	call	_xtime
 38345  000882  ECF7  F05D         	call	_xtime
 38346  000886  0D01               	mullw	1
 38347  000888  006F FFCC  F084    	movff	prodl,??_InvMixColumns+16
 38348  00088E  0100               	movlb	0	; force () banked
 38349  000890  518E               	movf	InvMixColumns@b& (0+255),w,b
 38350  000892  ECF7  F05D         	call	_xtime
 38351  000896  0D00               	mullw	0
 38352  000898  006F FFCC  F085    	movff	prodl,??_InvMixColumns+17
 38353  00089E  0100               	movlb	0	; force () banked
 38354  0008A0  518E               	movf	InvMixColumns@b& (0+255),w,b
 38355  0008A2  0D01               	mullw	1
 38356  0008A4  50F3               	movf	243,w,c
 38357  0008A6  0100               	movlb	0	; force () banked
 38358  0008A8  1985               	xorwf	(??_InvMixColumns+17)& (0+255),w,b
 38359  0008AA  1984               	xorwf	(??_InvMixColumns+16)& (0+255),w,b
 38360  0008AC  1983               	xorwf	(??_InvMixColumns+15)& (0+255),w,b
 38361  0008AE  1982               	xorwf	(??_InvMixColumns+14)& (0+255),w,b
 38362  0008B0  6F86               	movwf	(??_InvMixColumns+18)& (0+255),b
 38363  0008B2  0100               	movlb	0	; force () banked
 38364  0008B4  518D               	movf	InvMixColumns@a& (0+255),w,b
 38365  0008B6  ECF7  F05D         	call	_xtime
 38366  0008BA  ECF7  F05D         	call	_xtime
 38367  0008BE  ECF7  F05D         	call	_xtime
 38368  0008C2  ECF7  F05D         	call	_xtime
 38369  0008C6  0D00               	mullw	0
 38370  0008C8  006F FFCC  F087    	movff	prodl,??_InvMixColumns+19
 38371  0008CE  0100               	movlb	0	; force () banked
 38372  0008D0  518D               	movf	InvMixColumns@a& (0+255),w,b
 38373  0008D2  ECF7  F05D         	call	_xtime
 38374  0008D6  ECF7  F05D         	call	_xtime
 38375  0008DA  ECF7  F05D         	call	_xtime
 38376  0008DE  0D01               	mullw	1
 38377  0008E0  006F FFCC  F088    	movff	prodl,??_InvMixColumns+20
 38378  0008E6  0100               	movlb	0	; force () banked
 38379  0008E8  518D               	movf	InvMixColumns@a& (0+255),w,b
 38380  0008EA  ECF7  F05D         	call	_xtime
 38381  0008EE  ECF7  F05D         	call	_xtime
 38382  0008F2  0D00               	mullw	0
 38383  0008F4  006F FFCC  F089    	movff	prodl,??_InvMixColumns+21
 38384  0008FA  0100               	movlb	0	; force () banked
 38385  0008FC  518D               	movf	InvMixColumns@a& (0+255),w,b
 38386  0008FE  ECF7  F05D         	call	_xtime
 38387  000902  0D01               	mullw	1
 38388  000904  006F FFCC  F08A    	movff	prodl,??_InvMixColumns+22
 38389  00090A  0100               	movlb	0	; force () banked
 38390  00090C  518D               	movf	InvMixColumns@a& (0+255),w,b
 38391  00090E  0D01               	mullw	1
 38392  000910  50F3               	movf	243,w,c
 38393  000912  0100               	movlb	0	; force () banked
 38394  000914  198A               	xorwf	(??_InvMixColumns+22)& (0+255),w,b
 38395  000916  1989               	xorwf	(??_InvMixColumns+21)& (0+255),w,b
 38396  000918  1988               	xorwf	(??_InvMixColumns+20)& (0+255),w,b
 38397  00091A  1987               	xorwf	(??_InvMixColumns+19)& (0+255),w,b
 38398  00091C  1986               	xorwf	(??_InvMixColumns+18)& (0+255),w,b
 38399  00091E  1981               	xorwf	(??_InvMixColumns+13)& (0+255),w,b
 38400  000920  197C               	xorwf	(??_InvMixColumns+8)& (0+255),w,b
 38401  000922  6EDF               	movwf	indf2,c
 38402                           
 38403                           ; BSR set to: 0
 38404                           ;../aes/aes_src/AES.c: 362:   }
 38405  000924  0100               	movlb	0	; force () banked
 38406  000926  4B8B               	infsnz	InvMixColumns@i& (0+255),f,b
 38407  000928  2B8C               	incf	(InvMixColumns@i+1)& (0+255),f,b
 38408                           
 38409                           ; BSR set to: 0
 38410  00092A  0100               	movlb	0	; force () banked
 38411  00092C  BF8C               	btfsc	(InvMixColumns@i+1)& (0+255),7,b
 38412  00092E  EF68  F000         	goto	l17330
 38413  000932  518C               	movf	(InvMixColumns@i+1)& (0+255),w,b
 38414  000934  E106               	bnz	u14670
 38415  000936                     L47:
 38416  000936  0E04               	movlw	4
 38417  000938  5D8B               	subwf	InvMixColumns@i& (0+255),w,b
 38418  00093A  B0D8               	btfsc	status,0,c
 38419  00093C  0012               	return	
 38420  00093E  EF68  F000         	goto	l17330
 38421  000942                     u14670:
 38422                           
 38423                           ; BSR set to: 0
 38424  000942  0012               	return		;funcret
 38425  000944                     __end_of_InvMixColumns:
 38426                           	callstack 0
 38427                           
 38428 ;; *************** function _xtime *****************
 38429 ;; Defined at:
 38430 ;;		line 299 in file "../aes/aes_src/AES.c"
 38431 ;; Parameters:    Size  Location     Type
 38432 ;;  x               1    wreg     unsigned char 
 38433 ;; Auto vars:     Size  Location     Type
 38434 ;;  x               1   17[BANK0 ] unsigned char 
 38435 ;; Return value:  Size  Location     Type
 38436 ;;                  1    wreg      unsigned char 
 38437 ;; Registers used:
 38438 ;;		wreg, status,2, status,0, prodl, prodh
 38439 ;; Tracked objects:
 38440 ;;		On entry : 3F/0
 38441 ;;		On exit  : 3F/0
 38442 ;;		Unchanged: 0/0
 38443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38445 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38447 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38448 ;;Total ram usage:        1 bytes
 38449 ;; Hardware stack levels used:    1
 38450 ;; Hardware stack levels required when called:   11
 38451 ;; This function calls:
 38452 ;;		Nothing
 38453 ;; This function is called by:
 38454 ;;		_MixColumns
 38455 ;;		_InvMixColumns
 38456 ;; This function uses a non-reentrant model
 38457 ;;
 38458                           
 38459                           	psect	text208
 38460  00BBEE                     __ptext208:
 38461                           	callstack 0
 38462  00BBEE                     _xtime:
 38463                           	callstack 11
 38464                           
 38465                           ; BSR set to: 0
 38466                           ;incstack = 0
 38467                           ;xtime@x stored from wreg
 38468  00BBEE  0100               	movlb	0	; force () banked
 38469  00BBF0  6F71               	movwf	xtime@x& (0+255),b
 38470                           
 38471                           ;../aes/aes_src/AES.c: 299: static uint8_t xtime(uint8_t x);../aes/aes_src/AES.c: 300: {
      +                          ;../aes/aes_src/AES.c: 301:   return ((x<<1) ^ (((x>>7) & 1) * 0x1b));
 38472  00BBF2  0100               	movlb	0	; force () banked
 38473  00BBF4  4571               	rlncf	xtime@x& (0+255),w,b
 38474  00BBF6  0B01               	andlw	1
 38475  00BBF8  0D1B               	mullw	27
 38476  00BBFA  5171               	movf	xtime@x& (0+255),w,b
 38477  00BBFC  2571               	addwf	xtime@x& (0+255),w,b
 38478  00BBFE  18F3               	xorwf	243,w,c
 38479                           
 38480                           ; BSR set to: 0
 38481  00BC00  0012               	return		;funcret
 38482  00BC02                     __end_of_xtime:
 38483                           	callstack 0
 38484                           
 38485 ;; *************** function _AddRoundKey *****************
 38486 ;; Defined at:
 38487 ;;		line 242 in file "../aes/aes_src/AES.c"
 38488 ;; Parameters:    Size  Location     Type
 38489 ;;  round           1    wreg     unsigned char 
 38490 ;;  state           2   17[BANK0 ] PTR unsigned char [4][4]
 38491 ;;		 -> nwkFrameFrames(690), tx_buffer.payload(110), tx_buffer(264), 
 38492 ;;  RoundKey        2   19[BANK0 ] PTR const unsigned char 
 38493 ;;		 -> ctx.RoundKey(176), ctx.RoundKey(176), app_aes_decrypt@ctx(192), app_aes_encrypt@ctx(192), 
 38494 ;; Auto vars:     Size  Location     Type
 38495 ;;  round           1   26[BANK0 ] unsigned char 
 38496 ;;  j               1   28[BANK0 ] unsigned char 
 38497 ;;  i               1   27[BANK0 ] unsigned char 
 38498 ;; Return value:  Size  Location     Type
 38499 ;;                  1    wreg      void 
 38500 ;; Registers used:
 38501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38502 ;; Tracked objects:
 38503 ;;		On entry : 3F/0
 38504 ;;		On exit  : 3F/0
 38505 ;;		Unchanged: 0/0
 38506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38507 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38508 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38509 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38510 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38511 ;;Total ram usage:       12 bytes
 38512 ;; Hardware stack levels used:    1
 38513 ;; Hardware stack levels required when called:   11
 38514 ;; This function calls:
 38515 ;;		Nothing
 38516 ;; This function is called by:
 38517 ;;		_Cipher
 38518 ;;		_InvCipher
 38519 ;; This function uses a non-reentrant model
 38520 ;;
 38521                           
 38522                           	psect	text209
 38523  0093D0                     __ptext209:
 38524                           	callstack 0
 38525  0093D0                     _AddRoundKey:
 38526                           	callstack 12
 38527                           
 38528                           ; BSR set to: 0
 38529                           ;incstack = 0
 38530                           ;AddRoundKey@round stored from wreg
 38531  0093D0  0100               	movlb	0	; force () banked
 38532  0093D2  6F7A               	movwf	AddRoundKey@round& (0+255),b
 38533                           
 38534                           ;../aes/aes_src/AES.c: 242: static void AddRoundKey(uint8_t round, state_t* state, const
      +                           uint8_t* RoundKey);../aes/aes_src/AES.c: 243: {;../aes/aes_src/AES.c: 244:   uint8_t i,
      +                          j;;../aes/aes_src/AES.c: 245:   for (i = 0; i < 4; ++i)
 38535  0093D4  0E00               	movlw	0
 38536  0093D6  0100               	movlb	0	; force () banked
 38537  0093D8  6F7B               	movwf	AddRoundKey@i& (0+255),b
 38538  0093DA  D044               	goto	l17322
 38539  0093DC                     l17308:
 38540                           
 38541                           ; BSR set to: 0
 38542                           ;../aes/aes_src/AES.c: 246:   {;../aes/aes_src/AES.c: 247:     for (j = 0; j < 4; ++j)
 38543  0093DC  0E00               	movlw	0
 38544  0093DE  0100               	movlb	0	; force () banked
 38545  0093E0  6F7C               	movwf	AddRoundKey@j& (0+255),b
 38546  0093E2  D03A               	goto	l17318
 38547  0093E4                     l17314:
 38548                           
 38549                           ; BSR set to: 0
 38550                           ;../aes/aes_src/AES.c: 248:     {;../aes/aes_src/AES.c: 249:       (*state)[i][j] ^= Rou
      +                          ndKey[(round * 4 * 4) + (i * 4) + j];
 38551  0093E4  0100               	movlb	0	; force () banked
 38552  0093E6  517A               	movf	AddRoundKey@round& (0+255),w,b
 38553  0093E8  0D10               	mullw	16
 38554  0093EA  C073  F075         	movff	AddRoundKey@RoundKey,??_AddRoundKey
 38555  0093EE  C074  F076         	movff	AddRoundKey@RoundKey+1,??_AddRoundKey+1
 38556  0093F2  50F3               	movf	243,w,c
 38557  0093F4  0100               	movlb	0	; force () banked
 38558  0093F6  2775               	addwf	??_AddRoundKey& (0+255),f,b
 38559  0093F8  50F4               	movf	244,w,c
 38560  0093FA  2376               	addwfc	(??_AddRoundKey+1)& (0+255),f,b
 38561  0093FC  0100               	movlb	0	; force () banked
 38562  0093FE  517B               	movf	AddRoundKey@i& (0+255),w,b
 38563  009400  0D04               	mullw	4
 38564  009402  50F3               	movf	243,w,c
 38565  009404  0100               	movlb	0	; force () banked
 38566  009406  2775               	addwf	??_AddRoundKey& (0+255),f,b
 38567  009408  50F4               	movf	244,w,c
 38568  00940A  2376               	addwfc	(??_AddRoundKey+1)& (0+255),f,b
 38569  00940C  0100               	movlb	0	; force () banked
 38570  00940E  517C               	movf	AddRoundKey@j& (0+255),w,b
 38571  009410  0100               	movlb	0	; force () banked
 38572  009412  2575               	addwf	??_AddRoundKey& (0+255),w,b
 38573  009414  6ED9               	movwf	fsr2l,c
 38574  009416  0100               	movlb	0	; force () banked
 38575  009418  0E00               	movlw	0
 38576  00941A  0100               	movlb	0	; force () banked
 38577  00941C  2176               	addwfc	(??_AddRoundKey+1)& (0+255),w,b
 38578  00941E  6EDA               	movwf	fsr2h,c
 38579  009420  50DF               	movf	indf2,w,c
 38580  009422  6F77               	movwf	(??_AddRoundKey+2)& (0+255),b
 38581  009424  0100               	movlb	0	; force () banked
 38582  009426  517B               	movf	AddRoundKey@i& (0+255),w,b
 38583  009428  0D04               	mullw	4
 38584  00942A  C071  F078         	movff	AddRoundKey@state,??_AddRoundKey+3
 38585  00942E  C072  F079         	movff	AddRoundKey@state+1,??_AddRoundKey+4
 38586  009432  50F3               	movf	243,w,c
 38587  009434  0100               	movlb	0	; force () banked
 38588  009436  2778               	addwf	(??_AddRoundKey+3)& (0+255),f,b
 38589  009438  50F4               	movf	244,w,c
 38590  00943A  2379               	addwfc	(??_AddRoundKey+4)& (0+255),f,b
 38591  00943C  0100               	movlb	0	; force () banked
 38592  00943E  517C               	movf	AddRoundKey@j& (0+255),w,b
 38593  009440  0100               	movlb	0	; force () banked
 38594  009442  2578               	addwf	(??_AddRoundKey+3)& (0+255),w,b
 38595  009444  6ED9               	movwf	fsr2l,c
 38596  009446  0100               	movlb	0	; force () banked
 38597  009448  0E00               	movlw	0
 38598  00944A  0100               	movlb	0	; force () banked
 38599  00944C  2179               	addwfc	(??_AddRoundKey+4)& (0+255),w,b
 38600  00944E  6EDA               	movwf	fsr2h,c
 38601  009450  5177               	movf	(??_AddRoundKey+2)& (0+255),w,b
 38602  009452  1ADF               	xorwf	indf2,f,c
 38603                           
 38604                           ; BSR set to: 0
 38605                           ;../aes/aes_src/AES.c: 250:     }
 38606  009454  0100               	movlb	0	; force () banked
 38607  009456  2B7C               	incf	AddRoundKey@j& (0+255),f,b
 38608  009458                     l17318:
 38609                           
 38610                           ; BSR set to: 0
 38611  009458  0E03               	movlw	3
 38612  00945A  0100               	movlb	0	; force () banked
 38613  00945C  657C               	cpfsgt	AddRoundKey@j& (0+255),b
 38614  00945E  D7C2               	goto	l17314
 38615                           
 38616                           ; BSR set to: 0
 38617                           ;../aes/aes_src/AES.c: 251:   }
 38618  009460  0100               	movlb	0	; force () banked
 38619  009462  2B7B               	incf	AddRoundKey@i& (0+255),f,b
 38620  009464                     l17322:
 38621                           
 38622                           ; BSR set to: 0
 38623  009464  0E03               	movlw	3
 38624  009466  0100               	movlb	0	; force () banked
 38625  009468  657B               	cpfsgt	AddRoundKey@i& (0+255),b
 38626  00946A  D7B8               	goto	l17308
 38627  00946C  0012               	return	
 38628  00946E                     __end_of_AddRoundKey:
 38629                           	callstack 0
 38630                           
 38631 ;; *************** function _CircularBufferSize *****************
 38632 ;; Defined at:
 38633 ;;		line 128 in file "../app/app_src/circular_buffer.c"
 38634 ;; Parameters:    Size  Location     Type
 38635 ;;  ctx             2   17[BANK0 ] PTR const struct .
 38636 ;;		 -> ledtasksbuf(10), rx_buffer_queue_context(10), 
 38637 ;; Auto vars:     Size  Location     Type
 38638 ;;		None
 38639 ;; Return value:  Size  Location     Type
 38640 ;;                  2   17[BANK0 ] unsigned int 
 38641 ;; Registers used:
 38642 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38643 ;; Tracked objects:
 38644 ;;		On entry : 0/0
 38645 ;;		On exit  : 3F/0
 38646 ;;		Unchanged: 0/0
 38647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38648 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38650 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38651 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38652 ;;Total ram usage:        8 bytes
 38653 ;; Hardware stack levels used:    1
 38654 ;; Hardware stack levels required when called:   11
 38655 ;; This function calls:
 38656 ;;		Nothing
 38657 ;; This function is called by:
 38658 ;;		_appDataInd
 38659 ;;		_handle_rx_regs
 38660 ;;		_CircularBufferSpace
 38661 ;; This function uses a non-reentrant model
 38662 ;;
 38663                           
 38664                           	psect	text210
 38665  00A3A0                     __ptext210:
 38666                           	callstack 0
 38667  00A3A0                     _CircularBufferSize:
 38668                           	callstack 15
 38669                           
 38670                           ;../app/app_src/circular_buffer.c: 129:     return ((ctx->write_pos - ctx->read_pos) & c
      +                          tx->max_size);
 38671                           
 38672                           ; BSR set to: 0
 38673                           ;incstack = 0
 38674  00A3A0  0100               	movlb	0	; force () banked
 38675  00A3A2  EE20 F008          	lfsr	2,8
 38676  00A3A6  5171               	movf	CircularBufferSize@ctx& (0+255),w,b
 38677  00A3A8  26D9               	addwf	fsr2l,f,c
 38678  00A3AA  5172               	movf	(CircularBufferSize@ctx+1)& (0+255),w,b
 38679  00A3AC  22DA               	addwfc	fsr2h,f,c
 38680  00A3AE  006F FF78  F073    	movff	postinc2,??_CircularBufferSize
 38681  00A3B4  006F FF74  F074    	movff	postdec2,??_CircularBufferSize+1
 38682  00A3BA  EE20 F004          	lfsr	2,4
 38683  00A3BE  5171               	movf	CircularBufferSize@ctx& (0+255),w,b
 38684  00A3C0  26D9               	addwf	fsr2l,f,c
 38685  00A3C2  5172               	movf	(CircularBufferSize@ctx+1)& (0+255),w,b
 38686  00A3C4  22DA               	addwfc	fsr2h,f,c
 38687  00A3C6  006F FF78  F075    	movff	postinc2,??_CircularBufferSize+2
 38688  00A3CC  006F FF74  F076    	movff	postdec2,??_CircularBufferSize+3
 38689  00A3D2  EE20 F002          	lfsr	2,2
 38690  00A3D6  5171               	movf	CircularBufferSize@ctx& (0+255),w,b
 38691  00A3D8  26D9               	addwf	fsr2l,f,c
 38692  00A3DA  5172               	movf	(CircularBufferSize@ctx+1)& (0+255),w,b
 38693  00A3DC  22DA               	addwfc	fsr2h,f,c
 38694  00A3DE  006F FF78  F077    	movff	postinc2,??_CircularBufferSize+4
 38695  00A3E4  006F FF74  F078    	movff	postdec2,??_CircularBufferSize+5
 38696  00A3EA  0100               	movlb	0	; force () banked
 38697  00A3EC  5175               	movf	(??_CircularBufferSize+2)& (0+255),w,b
 38698  00A3EE  5F77               	subwf	(??_CircularBufferSize+4)& (0+255),f,b
 38699  00A3F0  5176               	movf	(??_CircularBufferSize+3)& (0+255),w,b
 38700  00A3F2  5B78               	subwfb	(??_CircularBufferSize+5)& (0+255),f,b
 38701  00A3F4  5173               	movf	??_CircularBufferSize& (0+255),w,b
 38702  00A3F6  1577               	andwf	(??_CircularBufferSize+4)& (0+255),w,b
 38703  00A3F8  0100               	movlb	0	; force () banked
 38704  00A3FA  6F71               	movwf	?_CircularBufferSize& (0+255),b
 38705  00A3FC  0100               	movlb	0	; force () banked
 38706  00A3FE  5174               	movf	(??_CircularBufferSize+1)& (0+255),w,b
 38707  00A400  1578               	andwf	(??_CircularBufferSize+5)& (0+255),w,b
 38708  00A402  0100               	movlb	0	; force () banked
 38709  00A404  6F72               	movwf	(?_CircularBufferSize+1)& (0+255),b
 38710                           
 38711                           ; BSR set to: 0
 38712  00A406  0012               	return		;funcret
 38713  00A408                     __end_of_CircularBufferSize:
 38714                           	callstack 0
 38715                           
 38716 ;; *************** function _nwkRouteFrame *****************
 38717 ;; Defined at:
 38718 ;;		line 309 in file "../nwk/nwk_src/nwkRoute.c"
 38719 ;; Parameters:    Size  Location     Type
 38720 ;;  frame           2   49[BANK0 ] PTR struct NwkFrame_t
 38721 ;;		 -> nwkFrameFrames(690), NULL(0), 
 38722 ;; Auto vars:     Size  Location     Type
 38723 ;;  header          2   51[BANK0 ] PTR struct NwkFrameHeade
 38724 ;;		 -> nwkFrameFrames..(128), nwkFrameFrames(690), NULL(0), 
 38725 ;; Return value:  Size  Location     Type
 38726 ;;                  1    wreg      void 
 38727 ;; Registers used:
 38728 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38729 ;; Tracked objects:
 38730 ;;		On entry : 0/0
 38731 ;;		On exit  : 3D/0
 38732 ;;		Unchanged: 0/0
 38733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38735 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38737 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38738 ;;Total ram usage:        4 bytes
 38739 ;; Hardware stack levels used:    1
 38740 ;; Hardware stack levels required when called:   16
 38741 ;; This function calls:
 38742 ;;		_NWK_RouteNextHop
 38743 ;;		_nwkFrameFree
 38744 ;;		_nwkIsRouter
 38745 ;;		_nwkRouteSendRouteError
 38746 ;;		_nwkTxFrame
 38747 ;; This function is called by:
 38748 ;;		_nwkRxTaskHandler
 38749 ;; This function uses a non-reentrant model
 38750 ;;
 38751                           
 38752                           	psect	text211
 38753  007356                     __ptext211:
 38754                           	callstack 0
 38755  007356                     _nwkRouteFrame:
 38756                           	callstack 11
 38757                           
 38758                           ;../nwk/nwk_src/nwkRoute.c: 309: void nwkRouteFrame(NwkFrame_t *frame);../nwk/nwk_src/nw
      +                          kRoute.c: 310: {;../nwk/nwk_src/nwkRoute.c: 311:   NwkFrameHeader_t *header = &frame->he
      +                          ader;
 38759                           
 38760                           ; BSR set to: 0
 38761                           ;incstack = 0
 38762  007356  0E02               	movlw	2
 38763  007358  0100               	movlb	0	; force () banked
 38764  00735A  2591               	addwf	nwkRouteFrame@frame& (0+255),w,b
 38765  00735C  0100               	movlb	0	; force () banked
 38766  00735E  6F93               	movwf	nwkRouteFrame@header& (0+255),b
 38767  007360  0E00               	movlw	0
 38768  007362  0100               	movlb	0	; force () banked
 38769  007364  2192               	addwfc	(nwkRouteFrame@frame+1)& (0+255),w,b
 38770  007366  0100               	movlb	0	; force () banked
 38771  007368  6F94               	movwf	(nwkRouteFrame@header+1)& (0+255),b
 38772                           
 38773                           ; BSR set to: 0
 38774                           ;../nwk/nwk_src/nwkRoute.c: 312:   if(!nwkIsRouter()){
 38775  00736A  ECAF  F05E         	call	_nwkIsRouter	;wreg free
 38776  00736E  0900               	iorlw	0
 38777  007370  A4D8               	btfss	status,2,c
 38778  007372  D009               	goto	l18918
 38779                           
 38780                           ; BSR set to: 2
 38781                           ;../nwk/nwk_src/nwkRoute.c: 313:       frame->state = 0x24;
 38782  007374  0060  F247  FFD9   	movff	nwkRouteFrame@frame,fsr2l
 38783  00737A  0060  F24B  FFDA   	movff	nwkRouteFrame@frame+1,fsr2h
 38784  007380  0E24               	movlw	36
 38785  007382  6EDF               	movwf	indf2,c
 38786  007384  0012               	return	
 38787  007386                     l18918:
 38788                           
 38789                           ; BSR set to: 2
 38790                           ;../nwk/nwk_src/nwkRoute.c: 316:   if (0xffff != NWK_RouteNextHop(header->nwkDstAddr, he
      +                          ader->nwkFcf.multicast))
 38791  007386  0100               	movlb	0	; force () banked
 38792  007388  EE20 F00D          	lfsr	2,13
 38793  00738C  5193               	movf	nwkRouteFrame@header& (0+255),w,b
 38794  00738E  26D9               	addwf	fsr2l,f,c
 38795  007390  5194               	movf	(nwkRouteFrame@header+1)& (0+255),w,b
 38796  007392  22DA               	addwfc	fsr2h,f,c
 38797  007394  006F FF78  F077    	movff	postinc2,NWK_RouteNextHop@dst
 38798  00739A  006F FF74  F078    	movff	postdec2,NWK_RouteNextHop@dst+1
 38799  0073A0  EE20 F009          	lfsr	2,9
 38800  0073A4  5193               	movf	nwkRouteFrame@header& (0+255),w,b
 38801  0073A6  26D9               	addwf	fsr2l,f,c
 38802  0073A8  5194               	movf	(nwkRouteFrame@header+1)& (0+255),w,b
 38803  0073AA  22DA               	addwfc	fsr2h,f,c
 38804  0073AC  0E00               	movlw	0
 38805  0073AE  B6DF               	btfsc	indf2,3,c
 38806  0073B0  0E01               	movlw	1
 38807  0073B2  0100               	movlb	0	; force () banked
 38808  0073B4  6F79               	movwf	NWK_RouteNextHop@multicast& (0+255),b
 38809  0073B6  EC05  F057         	call	_NWK_RouteNextHop	;wreg free
 38810  0073BA  0100               	movlb	0	; force () banked
 38811  0073BC  2977               	incf	?_NWK_RouteNextHop& (0+255),w,b
 38812  0073BE  E103               	bnz	u16730
 38813  0073C0  2978               	incf	(?_NWK_RouteNextHop+1)& (0+255),w,b
 38814  0073C2  B4D8               	btfsc	status,2,c
 38815  0073C4  D01A               	goto	l18924
 38816  0073C6                     u16730:
 38817                           
 38818                           ; BSR set to: 0
 38819                           ;../nwk/nwk_src/nwkRoute.c: 317:   {;../nwk/nwk_src/nwkRoute.c: 318:     frame->tx.confi
      +                          rm = (0);
 38820  0073C6  0100               	movlb	0	; force () banked
 38821  0073C8  EE20 F088          	lfsr	2,136
 38822  0073CC  5191               	movf	nwkRouteFrame@frame& (0+255),w,b
 38823  0073CE  26D9               	addwf	fsr2l,f,c
 38824  0073D0  5192               	movf	(nwkRouteFrame@frame+1)& (0+255),w,b
 38825  0073D2  22DA               	addwfc	fsr2h,f,c
 38826  0073D4  0E00               	movlw	0
 38827  0073D6  6EDE               	movwf	postinc2,c
 38828  0073D8  0E00               	movlw	0
 38829  0073DA  6EDD               	movwf	postdec2,c
 38830                           
 38831                           ;../nwk/nwk_src/nwkRoute.c: 319:     frame->tx.control = NWK_TX_CONTROL_ROUTING;
 38832  0073DC  EE20 F087          	lfsr	2,135
 38833  0073E0  5191               	movf	nwkRouteFrame@frame& (0+255),w,b
 38834  0073E2  26D9               	addwf	fsr2l,f,c
 38835  0073E4  5192               	movf	(nwkRouteFrame@frame+1)& (0+255),w,b
 38836  0073E6  22DA               	addwfc	fsr2h,f,c
 38837  0073E8  0E02               	movlw	2
 38838  0073EA  6EDF               	movwf	indf2,c
 38839                           
 38840                           ; BSR set to: 0
 38841                           ;../nwk/nwk_src/nwkRoute.c: 320:     nwkTxFrame(frame);
 38842  0073EC  C091  F082         	movff	nwkRouteFrame@frame,nwkTxFrame@frame
 38843  0073F0  C092  F083         	movff	nwkRouteFrame@frame+1,nwkTxFrame@frame+1
 38844  0073F4  EC1E  F028         	call	_nwkTxFrame	;wreg free
 38845                           
 38846                           ;../nwk/nwk_src/nwkRoute.c: 321:   }
 38847  0073F8  0012               	return	
 38848  0073FA                     l18924:
 38849                           
 38850                           ; BSR set to: 0
 38851                           ;../nwk/nwk_src/nwkRoute.c: 323:   {;../nwk/nwk_src/nwkRoute.c: 324:     nwkRouteSendRou
      +                          teError(header->nwkSrcAddr, header->nwkDstAddr, header->nwkFcf.multicast);
 38852  0073FA  0100               	movlb	0	; force () banked
 38853  0073FC  EE20 F00B          	lfsr	2,11
 38854  007400  5193               	movf	nwkRouteFrame@header& (0+255),w,b
 38855  007402  26D9               	addwf	fsr2l,f,c
 38856  007404  5194               	movf	(nwkRouteFrame@header+1)& (0+255),w,b
 38857  007406  22DA               	addwfc	fsr2h,f,c
 38858  007408  006F FF78  F088    	movff	postinc2,nwkRouteSendRouteError@src
 38859  00740E  006F FF74  F089    	movff	postdec2,nwkRouteSendRouteError@src+1
 38860  007414  EE20 F00D          	lfsr	2,13
 38861  007418  5193               	movf	nwkRouteFrame@header& (0+255),w,b
 38862  00741A  26D9               	addwf	fsr2l,f,c
 38863  00741C  5194               	movf	(nwkRouteFrame@header+1)& (0+255),w,b
 38864  00741E  22DA               	addwfc	fsr2h,f,c
 38865  007420  006F FF78  F08A    	movff	postinc2,nwkRouteSendRouteError@dst
 38866  007426  006F FF74  F08B    	movff	postdec2,nwkRouteSendRouteError@dst+1
 38867  00742C  EE20 F009          	lfsr	2,9
 38868  007430  5193               	movf	nwkRouteFrame@header& (0+255),w,b
 38869  007432  26D9               	addwf	fsr2l,f,c
 38870  007434  5194               	movf	(nwkRouteFrame@header+1)& (0+255),w,b
 38871  007436  22DA               	addwfc	fsr2h,f,c
 38872  007438  0E00               	movlw	0
 38873  00743A  B6DF               	btfsc	indf2,3,c
 38874  00743C  0E01               	movlw	1
 38875  00743E  0100               	movlb	0	; force () banked
 38876  007440  6F8C               	movwf	nwkRouteSendRouteError@multicast& (0+255),b
 38877  007442  ECF1  F03D         	call	_nwkRouteSendRouteError	;wreg free
 38878                           
 38879                           ; BSR set to: 0
 38880                           ;../nwk/nwk_src/nwkRoute.c: 325:     nwkFrameFree(frame);
 38881  007446  C091  F071         	movff	nwkRouteFrame@frame,nwkFrameFree@frame
 38882  00744A  C092  F072         	movff	nwkRouteFrame@frame+1,nwkFrameFree@frame+1
 38883  00744E  EC58  F05D         	call	_nwkFrameFree	;wreg free
 38884  007452  0012               	return		;funcret
 38885  007454                     __end_of_nwkRouteFrame:
 38886                           	callstack 0
 38887                           
 38888 ;; *************** function _nwkRouteSendRouteError *****************
 38889 ;; Defined at:
 38890 ;;		line 331 in file "../nwk/nwk_src/nwkRoute.c"
 38891 ;; Parameters:    Size  Location     Type
 38892 ;;  src             2   40[BANK0 ] unsigned int 
 38893 ;;  dst             2   42[BANK0 ] unsigned int 
 38894 ;;  multicast       1   44[BANK0 ] unsigned char 
 38895 ;; Auto vars:     Size  Location     Type
 38896 ;;  frame           2   47[BANK0 ] PTR struct NwkFrame_t
 38897 ;;		 -> nwkFrameFrames(690), NULL(0), 
 38898 ;;  command         2   45[BANK0 ] PTR struct NwkCommandRou
 38899 ;;		 -> nwkFrameFrames..(128), nwkFrameFrames(690), 
 38900 ;; Return value:  Size  Location     Type
 38901 ;;                  1    wreg      void 
 38902 ;; Registers used:
 38903 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38904 ;; Tracked objects:
 38905 ;;		On entry : 3F/0
 38906 ;;		On exit  : 3F/0
 38907 ;;		Unchanged: 0/0
 38908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38909 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38910 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38912 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38913 ;;Total ram usage:        9 bytes
 38914 ;; Hardware stack levels used:    1
 38915 ;; Hardware stack levels required when called:   15
 38916 ;; This function calls:
 38917 ;;		_nwkFrameAlloc
 38918 ;;		_nwkFrameCommandInit
 38919 ;;		_nwkTxFrame
 38920 ;; This function is called by:
 38921 ;;		_nwkRouteFrame
 38922 ;; This function uses a non-reentrant model
 38923 ;;
 38924                           
 38925                           	psect	text212
 38926  007BE2                     __ptext212:
 38927                           	callstack 0
 38928  007BE2                     _nwkRouteSendRouteError:
 38929                           	callstack 11
 38930                           
 38931                           ;../nwk/nwk_src/nwkRoute.c: 331: static void nwkRouteSendRouteError(uint16_t src, uint16
      +                          _t dst, uint8_t multicast);../nwk/nwk_src/nwkRoute.c: 332: {;../nwk/nwk_src/nwkRoute.c: 
      +                          333:   NwkFrame_t *frame;;../nwk/nwk_src/nwkRoute.c: 334:   NwkCommandRouteError_t *comm
      +                          and;;../nwk/nwk_src/nwkRoute.c: 336:   if ((0) == (frame = nwkFrameAlloc()))
 38932                           
 38933                           ;incstack = 0
 38934  007BE2  EC12  F043         	call	_nwkFrameAlloc	;wreg free
 38935  007BE6  C079  F08F         	movff	?_nwkFrameAlloc,nwkRouteSendRouteError@frame
 38936  007BEA  C07A  F090         	movff	?_nwkFrameAlloc+1,nwkRouteSendRouteError@frame+1
 38937  007BEE  0100               	movlb	0	; force () banked
 38938  007BF0  518F               	movf	nwkRouteSendRouteError@frame& (0+255),w,b
 38939  007BF2  1190               	iorwf	(nwkRouteSendRouteError@frame+1)& (0+255),w,b
 38940  007BF4  B4D8               	btfsc	status,2,c
 38941  007BF6  0012               	return	
 38942                           
 38943                           ; BSR set to: 0
 38944                           ;../nwk/nwk_src/nwkRoute.c: 339:   nwkFrameCommandInit(frame);
 38945  007BF8  C08F  F071         	movff	nwkRouteSendRouteError@frame,nwkFrameCommandInit@frame
 38946  007BFC  C090  F072         	movff	nwkRouteSendRouteError@frame+1,nwkFrameCommandInit@frame+1
 38947  007C00  EC28  F057         	call	_nwkFrameCommandInit	;wreg free
 38948                           
 38949                           ; BSR set to: 0
 38950                           ;../nwk/nwk_src/nwkRoute.c: 341:   frame->size += sizeof(NwkCommandRouteError_t);
 38951  007C04  0100               	movlb	0	; force () banked
 38952  007C06  EE20 F001          	lfsr	2,1
 38953  007C0A  518F               	movf	nwkRouteSendRouteError@frame& (0+255),w,b
 38954  007C0C  26D9               	addwf	fsr2l,f,c
 38955  007C0E  5190               	movf	(nwkRouteSendRouteError@frame+1)& (0+255),w,b
 38956  007C10  22DA               	addwfc	fsr2h,f,c
 38957  007C12  0E06               	movlw	6
 38958  007C14  26DF               	addwf	indf2,f,c
 38959                           
 38960                           ; BSR set to: 0
 38961                           ;../nwk/nwk_src/nwkRoute.c: 342:   frame->tx.confirm = (0);
 38962  007C16  0100               	movlb	0	; force () banked
 38963  007C18  EE20 F088          	lfsr	2,136
 38964  007C1C  518F               	movf	nwkRouteSendRouteError@frame& (0+255),w,b
 38965  007C1E  26D9               	addwf	fsr2l,f,c
 38966  007C20  5190               	movf	(nwkRouteSendRouteError@frame+1)& (0+255),w,b
 38967  007C22  22DA               	addwfc	fsr2h,f,c
 38968  007C24  0E00               	movlw	0
 38969  007C26  6EDE               	movwf	postinc2,c
 38970  007C28  0E00               	movlw	0
 38971  007C2A  6EDD               	movwf	postdec2,c
 38972                           
 38973                           ; BSR set to: 0
 38974                           ;../nwk/nwk_src/nwkRoute.c: 344:   frame->header.nwkDstAddr = src;
 38975  007C2C  0100               	movlb	0	; force () banked
 38976  007C2E  EE20 F00F          	lfsr	2,15
 38977  007C32  518F               	movf	nwkRouteSendRouteError@frame& (0+255),w,b
 38978  007C34  26D9               	addwf	fsr2l,f,c
 38979  007C36  5190               	movf	(nwkRouteSendRouteError@frame+1)& (0+255),w,b
 38980  007C38  22DA               	addwfc	fsr2h,f,c
 38981  007C3A  0060  F223  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
 38982  007C40  0060  F227  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
 38983                           
 38984                           ; BSR set to: 0
 38985                           ;../nwk/nwk_src/nwkRoute.c: 346:   command = (NwkCommandRouteError_t *)frame->payload;
 38986  007C46  0100               	movlb	0	; force () banked
 38987  007C48  EE20 F082          	lfsr	2,130
 38988  007C4C  518F               	movf	nwkRouteSendRouteError@frame& (0+255),w,b
 38989  007C4E  26D9               	addwf	fsr2l,f,c
 38990  007C50  5190               	movf	(nwkRouteSendRouteError@frame+1)& (0+255),w,b
 38991  007C52  22DA               	addwfc	fsr2h,f,c
 38992  007C54  006F FF78  F08D    	movff	postinc2,nwkRouteSendRouteError@command
 38993  007C5A  006F FF74  F08E    	movff	postdec2,nwkRouteSendRouteError@command+1
 38994                           
 38995                           ; BSR set to: 0
 38996                           ;../nwk/nwk_src/nwkRoute.c: 347:   command->id = NWK_COMMAND_ROUTE_ERROR;
 38997  007C60  0060  F237  FFD9   	movff	nwkRouteSendRouteError@command,fsr2l
 38998  007C66  0060  F23B  FFDA   	movff	nwkRouteSendRouteError@command+1,fsr2h
 38999  007C6C  0E01               	movlw	1
 39000  007C6E  6EDF               	movwf	indf2,c
 39001                           
 39002                           ; BSR set to: 0
 39003                           ;../nwk/nwk_src/nwkRoute.c: 348:   command->srcAddr = src;
 39004  007C70  0100               	movlb	0	; force () banked
 39005  007C72  EE20 F001          	lfsr	2,1
 39006  007C76  518D               	movf	nwkRouteSendRouteError@command& (0+255),w,b
 39007  007C78  26D9               	addwf	fsr2l,f,c
 39008  007C7A  518E               	movf	(nwkRouteSendRouteError@command+1)& (0+255),w,b
 39009  007C7C  22DA               	addwfc	fsr2h,f,c
 39010  007C7E  0060  F223  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
 39011  007C84  0060  F227  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
 39012                           
 39013                           ; BSR set to: 0
 39014                           ;../nwk/nwk_src/nwkRoute.c: 349:   command->dstAddr = dst;
 39015  007C8A  0100               	movlb	0	; force () banked
 39016  007C8C  EE20 F003          	lfsr	2,3
 39017  007C90  518D               	movf	nwkRouteSendRouteError@command& (0+255),w,b
 39018  007C92  26D9               	addwf	fsr2l,f,c
 39019  007C94  518E               	movf	(nwkRouteSendRouteError@command+1)& (0+255),w,b
 39020  007C96  22DA               	addwfc	fsr2h,f,c
 39021  007C98  0060  F22B  FFDE   	movff	nwkRouteSendRouteError@dst,postinc2
 39022  007C9E  0060  F22F  FFDD   	movff	nwkRouteSendRouteError@dst+1,postdec2
 39023                           
 39024                           ; BSR set to: 0
 39025                           ;../nwk/nwk_src/nwkRoute.c: 350:   command->multicast = multicast;
 39026  007CA4  0100               	movlb	0	; force () banked
 39027  007CA6  EE20 F005          	lfsr	2,5
 39028  007CAA  518D               	movf	nwkRouteSendRouteError@command& (0+255),w,b
 39029  007CAC  26D9               	addwf	fsr2l,f,c
 39030  007CAE  518E               	movf	(nwkRouteSendRouteError@command+1)& (0+255),w,b
 39031  007CB0  22DA               	addwfc	fsr2h,f,c
 39032  007CB2  0060  F233  FFDF   	movff	nwkRouteSendRouteError@multicast,indf2
 39033                           
 39034                           ; BSR set to: 0
 39035                           ;../nwk/nwk_src/nwkRoute.c: 352:   nwkTxFrame(frame);
 39036  007CB8  C08F  F082         	movff	nwkRouteSendRouteError@frame,nwkTxFrame@frame
 39037  007CBC  C090  F083         	movff	nwkRouteSendRouteError@frame+1,nwkTxFrame@frame+1
 39038  007CC0  EC1E  F028         	call	_nwkTxFrame	;wreg free
 39039                           
 39040                           ; BSR set to: 0
 39041  007CC4  0012               	return		;funcret
 39042  007CC6                     __end_of_nwkRouteSendRouteError:
 39043                           	callstack 0
 39044                           
 39045 ;; *************** function _nwkFrameCommandInit *****************
 39046 ;; Defined at:
 39047 ;;		line 131 in file "../nwk/nwk_src/nwkFrame.c"
 39048 ;; Parameters:    Size  Location     Type
 39049 ;;  frame           2   17[BANK0 ] PTR struct NwkFrame_t
 39050 ;;		 -> nwkFrameFrames(690), NULL(0), 
 39051 ;; Auto vars:     Size  Location     Type
 39052 ;;		None
 39053 ;; Return value:  Size  Location     Type
 39054 ;;                  1    wreg      void 
 39055 ;; Registers used:
 39056 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39057 ;; Tracked objects:
 39058 ;;		On entry : 3F/0
 39059 ;;		On exit  : 3F/0
 39060 ;;		Unchanged: 0/0
 39061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39062 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39065 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39066 ;;Total ram usage:        2 bytes
 39067 ;; Hardware stack levels used:    1
 39068 ;; Hardware stack levels required when called:   11
 39069 ;; This function calls:
 39070 ;;		Nothing
 39071 ;; This function is called by:
 39072 ;;		_nwkRouteSendRouteError
 39073 ;;		_nwkRxSendAck
 39074 ;; This function uses a non-reentrant model
 39075 ;;
 39076                           
 39077                           	psect	text213
 39078  00AE50                     __ptext213:
 39079                           	callstack 0
 39080  00AE50                     _nwkFrameCommandInit:
 39081                           	callstack 14
 39082                           
 39083                           ;../nwk/nwk_src/nwkFrame.c: 131: void nwkFrameCommandInit(NwkFrame_t *frame);../nwk/nwk_
      +                          src/nwkFrame.c: 132: {;../nwk/nwk_src/nwkFrame.c: 133:   frame->tx.status = NWK_SUCCESS_
      +                          STATUS;
 39084                           
 39085                           ; BSR set to: 0
 39086                           ;incstack = 0
 39087  00AE50  0100               	movlb	0	; force () banked
 39088  00AE52  EE20 F084          	lfsr	2,132
 39089  00AE56  5171               	movf	nwkFrameCommandInit@frame& (0+255),w,b
 39090  00AE58  26D9               	addwf	fsr2l,f,c
 39091  00AE5A  5172               	movf	(nwkFrameCommandInit@frame+1)& (0+255),w,b
 39092  00AE5C  22DA               	addwfc	fsr2h,f,c
 39093  00AE5E  0E00               	movlw	0
 39094  00AE60  6EDF               	movwf	indf2,c
 39095                           
 39096                           ;../nwk/nwk_src/nwkFrame.c: 134:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 39097  00AE62  0102               	movlb	2	; force () banked
 39098  00AE64  2B04               	incf	(_nwkIb+4)& (0+255),f,b
 39099  00AE66  0100               	movlb	0	; force () banked
 39100  00AE68  EE20 F00C          	lfsr	2,12
 39101  00AE6C  5171               	movf	nwkFrameCommandInit@frame& (0+255),w,b
 39102  00AE6E  26D9               	addwf	fsr2l,f,c
 39103  00AE70  5172               	movf	(nwkFrameCommandInit@frame+1)& (0+255),w,b
 39104  00AE72  22DA               	addwfc	fsr2h,f,c
 39105  00AE74  0060  F813  FFDF   	movff	_nwkIb+4,indf2
 39106                           
 39107                           ;../nwk/nwk_src/nwkFrame.c: 135:   frame->header.nwkSrcAddr = nwkIb.addr;
 39108  00AE7A  EE20 F00D          	lfsr	2,13
 39109  00AE7E  5171               	movf	nwkFrameCommandInit@frame& (0+255),w,b
 39110  00AE80  26D9               	addwf	fsr2l,f,c
 39111  00AE82  5172               	movf	(nwkFrameCommandInit@frame+1)& (0+255),w,b
 39112  00AE84  22DA               	addwfc	fsr2h,f,c
 39113  00AE86  0060  F803  FFDE   	movff	_nwkIb,postinc2
 39114  00AE8C  0060  F807  FFDD   	movff	_nwkIb+1,postdec2
 39115                           
 39116                           ; BSR set to: 0
 39117  00AE92  0012               	return		;funcret
 39118  00AE94                     __end_of_nwkFrameCommandInit:
 39119                           	callstack 0
 39120                           
 39121 ;; *************** function _nwkFrameFree *****************
 39122 ;; Defined at:
 39123 ;;		line 100 in file "../nwk/nwk_src/nwkFrame.c"
 39124 ;; Parameters:    Size  Location     Type
 39125 ;;  frame           2   17[BANK0 ] PTR struct NwkFrame_t
 39126 ;;		 -> nwkFrameFrames(690), NULL(0), 
 39127 ;; Auto vars:     Size  Location     Type
 39128 ;;		None
 39129 ;; Return value:  Size  Location     Type
 39130 ;;                  1    wreg      void 
 39131 ;; Registers used:
 39132 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39133 ;; Tracked objects:
 39134 ;;		On entry : 0/0
 39135 ;;		On exit  : 3F/2
 39136 ;;		Unchanged: 0/0
 39137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39141 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39142 ;;Total ram usage:        2 bytes
 39143 ;; Hardware stack levels used:    1
 39144 ;; Hardware stack levels required when called:   11
 39145 ;; This function calls:
 39146 ;;		Nothing
 39147 ;; This function is called by:
 39148 ;;		_nwkDataReqTxConf
 39149 ;;		_nwkRouteFrame
 39150 ;;		_nwkRxTaskHandler
 39151 ;;		_nwkTxTaskHandler
 39152 ;; This function uses a non-reentrant model
 39153 ;;
 39154                           
 39155                           	psect	text214
 39156  00BAB0                     __ptext214:
 39157                           	callstack 0
 39158  00BAB0                     _nwkFrameFree:
 39159                           	callstack 16
 39160                           
 39161                           ;../nwk/nwk_src/nwkFrame.c: 100: void nwkFrameFree(NwkFrame_t *frame);../nwk/nwk_src/nwk
      +                          Frame.c: 101: {;../nwk/nwk_src/nwkFrame.c: 102:   frame->state = NWK_FRAME_STATE_FREE;
 39162                           
 39163                           ; BSR set to: 0
 39164                           ;incstack = 0
 39165  00BAB0  0060  F1C7  FFD9   	movff	nwkFrameFree@frame,fsr2l
 39166  00BAB6  0060  F1CB  FFDA   	movff	nwkFrameFree@frame+1,fsr2h
 39167  00BABC  0E00               	movlw	0
 39168  00BABE  6EDF               	movwf	indf2,c
 39169                           
 39170                           ;../nwk/nwk_src/nwkFrame.c: 103:   nwkIb.lock--;
 39171  00BAC0  0102               	movlb	2	; force () banked
 39172  00BAC2  0726               	decf	(_nwkIb+38)& (0+255),f,b
 39173  00BAC4  A0D8               	btfss	status,0,c
 39174  00BAC6  0727               	decf	(_nwkIb+39)& (0+255),f,b
 39175                           
 39176                           ; BSR set to: 2
 39177  00BAC8  0012               	return		;funcret
 39178  00BACA                     __end_of_nwkFrameFree:
 39179                           	callstack 0
 39180                           
 39181 ;; *************** function _nwkDataReqTaskHandler *****************
 39182 ;; Defined at:
 39183 ;;		line 211 in file "../nwk/nwk_src/nwkDataReq.c"
 39184 ;; Parameters:    Size  Location     Type
 39185 ;;		None
 39186 ;; Auto vars:     Size  Location     Type
 39187 ;;  req             2   69[BANK0 ] PTR struct NWK_DataReq_t
 39188 ;;		 -> tx_buffer(264), NULL(0), 
 39189 ;; Return value:  Size  Location     Type
 39190 ;;                  1    wreg      void 
 39191 ;; Registers used:
 39192 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39193 ;; Tracked objects:
 39194 ;;		On entry : 3F/0
 39195 ;;		On exit  : 3F/0
 39196 ;;		Unchanged: 0/0
 39197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39199 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39200 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39201 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39202 ;;Total ram usage:        4 bytes
 39203 ;; Hardware stack levels used:    1
 39204 ;; Hardware stack levels required when called:   16
 39205 ;; This function calls:
 39206 ;;		_nwkDataReqConfirm
 39207 ;;		_nwkDataReqSendFrame
 39208 ;; This function is called by:
 39209 ;;		_NWK_TaskHandler
 39210 ;; This function uses a non-reentrant model
 39211 ;;
 39212                           
 39213                           	psect	text215
 39214  00A17C                     __ptext215:
 39215                           	callstack 0
 39216  00A17C                     _nwkDataReqTaskHandler:
 39217                           	callstack 12
 39218                           
 39219                           ;../nwk/nwk_src/nwkDataReq.c: 213:   for (NWK_DataReq_t *req = nwkDataReqQueue; req; req
      +                           = req->next)
 39220                           
 39221                           ; BSR set to: 2
 39222                           ;incstack = 0
 39223  00A17C  C1D7  F0A5         	movff	_nwkDataReqQueue,nwkDataReqTaskHandler@req
 39224  00A180  C1D8  F0A6         	movff	_nwkDataReqQueue+1,nwkDataReqTaskHandler@req+1
 39225  00A184  D033               	goto	l19576
 39226  00A186                     l19558:
 39227                           
 39228                           ; BSR set to: 0
 39229                           ;../nwk/nwk_src/nwkDataReq.c: 218:       {;../nwk/nwk_src/nwkDataReq.c: 219:         nwk
      +                          DataReqSendFrame(req);
 39230  00A186  C0A5  F088         	movff	nwkDataReqTaskHandler@req,nwkDataReqSendFrame@req
 39231  00A18A  C0A6  F089         	movff	nwkDataReqTaskHandler@req+1,nwkDataReqSendFrame@req+1
 39232  00A18E  EC58  F00C         	call	_nwkDataReqSendFrame	;wreg free
 39233  00A192  0012               	return	
 39234  00A194                     l19564:
 39235                           
 39236                           ; BSR set to: 0
 39237                           ;../nwk/nwk_src/nwkDataReq.c: 227:       {;../nwk/nwk_src/nwkDataReq.c: 228:         nwk
      +                          DataReqConfirm(req);
 39238  00A194  C0A5  F09D         	movff	nwkDataReqTaskHandler@req,nwkDataReqConfirm@req
 39239  00A198  C0A6  F09E         	movff	nwkDataReqTaskHandler@req+1,nwkDataReqConfirm@req+1
 39240  00A19C  EC06  F03D         	call	_nwkDataReqConfirm	;wreg free
 39241  00A1A0  0012               	return	
 39242  00A1A2                     l19572:
 39243                           
 39244                           ; BSR set to: 0
 39245  00A1A2  0100               	movlb	0	; force () banked
 39246  00A1A4  EE20 F004          	lfsr	2,4
 39247  00A1A8  51A5               	movf	nwkDataReqTaskHandler@req& (0+255),w,b
 39248  00A1AA  26D9               	addwf	fsr2l,f,c
 39249  00A1AC  51A6               	movf	(nwkDataReqTaskHandler@req+1)& (0+255),w,b
 39250  00A1AE  22DA               	addwfc	fsr2h,f,c
 39251  00A1B0  50DF               	movf	indf2,w,c
 39252  00A1B2  0100               	movlb	0	; force () banked
 39253  00A1B4  6FA3               	movwf	??_nwkDataReqTaskHandler& (0+255),b
 39254  00A1B6  6BA4               	clrf	(??_nwkDataReqTaskHandler+1)& (0+255),b
 39255                           
 39256                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39257                           ; Switch size 1, requested type "simple"
 39258                           ; Number of cases is 1, Range of values is 0 to 0
 39259                           ; switch strategies available:
 39260                           ; Name         Instructions Cycles
 39261                           ; simple_byte            4     3 (average)
 39262                           ;	Chosen strategy is simple_byte
 39263  00A1B8  51A4               	movf	(??_nwkDataReqTaskHandler+1)& (0+255),w,b
 39264  00A1BA  0A00               	xorlw	0	; case 0
 39265  00A1BC  A4D8               	btfss	status,2,c
 39266  00A1BE  D00A               	goto	l19574
 39267                           
 39268                           ; BSR set to: 0
 39269                           ; Switch size 1, requested type "simple"
 39270                           ; Number of cases is 3, Range of values is 0 to 2
 39271                           ; switch strategies available:
 39272                           ; Name         Instructions Cycles
 39273                           ; simple_byte           10     6 (average)
 39274                           ;	Chosen strategy is simple_byte
 39275  00A1C0  51A3               	movf	??_nwkDataReqTaskHandler& (0+255),w,b
 39276  00A1C2  0A00               	xorlw	0	; case 0
 39277  00A1C4  B4D8               	btfsc	status,2,c
 39278  00A1C6  D7DF               	goto	l19558
 39279  00A1C8  0A01               	xorlw	1	; case 1
 39280  00A1CA  B4D8               	btfsc	status,2,c
 39281  00A1CC  D003               	goto	l19574
 39282  00A1CE  0A03               	xorlw	3	; case 2
 39283  00A1D0  B4D8               	btfsc	status,2,c
 39284  00A1D2  D7E0               	goto	l19564
 39285  00A1D4                     l19574:
 39286                           
 39287                           ; BSR set to: 0
 39288                           ;../nwk/nwk_src/nwkDataReq.c: 235:   }
 39289  00A1D4  0060  F297  FFD9   	movff	nwkDataReqTaskHandler@req,fsr2l
 39290  00A1DA  0060  F29B  FFDA   	movff	nwkDataReqTaskHandler@req+1,fsr2h
 39291  00A1E0  006F FF78  F0A5    	movff	postinc2,nwkDataReqTaskHandler@req
 39292  00A1E6  006F FF74  F0A6    	movff	postdec2,nwkDataReqTaskHandler@req+1
 39293  00A1EC                     l19576:
 39294  00A1EC  0100               	movlb	0	; force () banked
 39295  00A1EE  51A5               	movf	nwkDataReqTaskHandler@req& (0+255),w,b
 39296  00A1F0  11A6               	iorwf	(nwkDataReqTaskHandler@req+1)& (0+255),w,b
 39297  00A1F2  B4D8               	btfsc	status,2,c
 39298  00A1F4  0012               	return	
 39299  00A1F6  D7D5               	goto	l19572
 39300  00A1F8                     __end_of_nwkDataReqTaskHandler:
 39301                           	callstack 0
 39302                           
 39303 ;; *************** function _nwkDataReqSendFrame *****************
 39304 ;; Defined at:
 39305 ;;		line 111 in file "../nwk/nwk_src/nwkDataReq.c"
 39306 ;; Parameters:    Size  Location     Type
 39307 ;;  req             2   40[BANK0 ] PTR struct NWK_DataReq_t
 39308 ;;		 -> tx_buffer(264), NULL(0), 
 39309 ;; Auto vars:     Size  Location     Type
 39310 ;;  mcHeader        2   45[BANK0 ] PTR struct NwkFrameMulti
 39311 ;;		 -> nwkFrameFrames(690), 
 39312 ;;  frame           2   47[BANK0 ] PTR struct NwkFrame_t
 39313 ;;		 -> nwkFrameFrames(690), NULL(0), 
 39314 ;; Return value:  Size  Location     Type
 39315 ;;                  1    wreg      void 
 39316 ;; Registers used:
 39317 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39318 ;; Tracked objects:
 39319 ;;		On entry : 0/0
 39320 ;;		On exit  : 3F/0
 39321 ;;		Unchanged: 0/0
 39322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39323 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39324 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39325 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39326 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39327 ;;Total ram usage:        9 bytes
 39328 ;; Hardware stack levels used:    1
 39329 ;; Hardware stack levels required when called:   15
 39330 ;; This function calls:
 39331 ;;		_memcpy
 39332 ;;		_nwkFrameAlloc
 39333 ;;		_nwkIsRouter
 39334 ;;		_nwkTxFrame
 39335 ;; This function is called by:
 39336 ;;		_nwkDataReqTaskHandler
 39337 ;; This function uses a non-reentrant model
 39338 ;;
 39339                           
 39340                           	psect	text216
 39341  0018B0                     __ptext216:
 39342                           	callstack 0
 39343  0018B0                     _nwkDataReqSendFrame:
 39344                           	callstack 12
 39345                           
 39346                           ;../nwk/nwk_src/nwkDataReq.c: 111: static void nwkDataReqSendFrame(NWK_DataReq_t *req);.
      +                          ./nwk/nwk_src/nwkDataReq.c: 112: {;../nwk/nwk_src/nwkDataReq.c: 113:   NwkFrame_t *frame
      +                          ;;../nwk/nwk_src/nwkDataReq.c: 115:   if ((0) == (frame = nwkFrameAlloc()))
 39347                           
 39348                           ; BSR set to: 0
 39349                           ;incstack = 0
 39350  0018B0  EC12  F043         	call	_nwkFrameAlloc	;wreg free
 39351  0018B4  C079  F08F         	movff	?_nwkFrameAlloc,nwkDataReqSendFrame@frame
 39352  0018B8  C07A  F090         	movff	?_nwkFrameAlloc+1,nwkDataReqSendFrame@frame+1
 39353  0018BC  0100               	movlb	0	; force () banked
 39354  0018BE  518F               	movf	nwkDataReqSendFrame@frame& (0+255),w,b
 39355  0018C0  1190               	iorwf	(nwkDataReqSendFrame@frame+1)& (0+255),w,b
 39356  0018C2  A4D8               	btfss	status,2,c
 39357  0018C4  D012               	goto	l18840
 39358                           
 39359                           ; BSR set to: 0
 39360                           ;../nwk/nwk_src/nwkDataReq.c: 116:   {;../nwk/nwk_src/nwkDataReq.c: 117:     req->state 
      +                          = NWK_DATA_REQ_STATE_CONFIRM;
 39361  0018C6  0100               	movlb	0	; force () banked
 39362  0018C8  EE20 F004          	lfsr	2,4
 39363  0018CC  5188               	movf	nwkDataReqSendFrame@req& (0+255),w,b
 39364  0018CE  26D9               	addwf	fsr2l,f,c
 39365  0018D0  5189               	movf	(nwkDataReqSendFrame@req+1)& (0+255),w,b
 39366  0018D2  22DA               	addwfc	fsr2h,f,c
 39367  0018D4  0E02               	movlw	2
 39368  0018D6  6EDF               	movwf	indf2,c
 39369                           
 39370                           ;../nwk/nwk_src/nwkDataReq.c: 118:     req->status = NWK_OUT_OF_MEMORY_STATUS;
 39371  0018D8  EE20 F011          	lfsr	2,17
 39372  0018DC  5188               	movf	nwkDataReqSendFrame@req& (0+255),w,b
 39373  0018DE  26D9               	addwf	fsr2l,f,c
 39374  0018E0  5189               	movf	(nwkDataReqSendFrame@req+1)& (0+255),w,b
 39375  0018E2  22DA               	addwfc	fsr2h,f,c
 39376  0018E4  0E02               	movlw	2
 39377  0018E6  6EDF               	movwf	indf2,c
 39378  0018E8  0012               	return	
 39379  0018EA                     l18840:
 39380                           
 39381                           ; BSR set to: 0
 39382                           ;../nwk/nwk_src/nwkDataReq.c: 122:   req->frame = frame;
 39383  0018EA  0100               	movlb	0	; force () banked
 39384  0018EC  EE20 F002          	lfsr	2,2
 39385  0018F0  5188               	movf	nwkDataReqSendFrame@req& (0+255),w,b
 39386  0018F2  26D9               	addwf	fsr2l,f,c
 39387  0018F4  5189               	movf	(nwkDataReqSendFrame@req+1)& (0+255),w,b
 39388  0018F6  22DA               	addwfc	fsr2h,f,c
 39389  0018F8  0060  F23F  FFDE   	movff	nwkDataReqSendFrame@frame,postinc2
 39390  0018FE  0060  F243  FFDD   	movff	nwkDataReqSendFrame@frame+1,postdec2
 39391                           
 39392                           ;../nwk/nwk_src/nwkDataReq.c: 123:   req->state = NWK_DATA_REQ_STATE_WAIT_CONF;
 39393  001904  EE20 F004          	lfsr	2,4
 39394  001908  5188               	movf	nwkDataReqSendFrame@req& (0+255),w,b
 39395  00190A  26D9               	addwf	fsr2l,f,c
 39396  00190C  5189               	movf	(nwkDataReqSendFrame@req+1)& (0+255),w,b
 39397  00190E  22DA               	addwfc	fsr2h,f,c
 39398  001910  0E01               	movlw	1
 39399  001912  6EDF               	movwf	indf2,c
 39400                           
 39401                           ;../nwk/nwk_src/nwkDataReq.c: 125:   frame->tx.confirm = nwkDataReqTxConf;
 39402  001914  0100               	movlb	0	; force () banked
 39403  001916  EE20 F088          	lfsr	2,136
 39404  00191A  518F               	movf	nwkDataReqSendFrame@frame& (0+255),w,b
 39405  00191C  26D9               	addwf	fsr2l,f,c
 39406  00191E  5190               	movf	(nwkDataReqSendFrame@frame+1)& (0+255),w,b
 39407  001920  22DA               	addwfc	fsr2h,f,c
 39408  001922  0EAA               	movlw	low _nwkDataReqTxConf
 39409  001924  6EDE               	movwf	postinc2,c
 39410  001926  0E8E               	movlw	high _nwkDataReqTxConf
 39411  001928  6EDD               	movwf	postdec2,c
 39412                           
 39413                           ; BSR set to: 0
 39414                           ;../nwk/nwk_src/nwkDataReq.c: 126:   frame->tx.control = req->options & NWK_OPT_BROADCAS
      +                          T_PAN_ID ? NWK_TX_CONTROL_BROADCAST_PAN_ID : 0;
 39415  00192A  0100               	movlb	0	; force () banked
 39416  00192C  EE20 F087          	lfsr	2,135
 39417  001930  518F               	movf	nwkDataReqSendFrame@frame& (0+255),w,b
 39418  001932  26D9               	addwf	fsr2l,f,c
 39419  001934  5190               	movf	(nwkDataReqSendFrame@frame+1)& (0+255),w,b
 39420  001936  22DA               	addwfc	fsr2h,f,c
 39421  001938  0100               	movlb	0	; force () banked
 39422  00193A  EE00 F009          	lfsr	0,9
 39423  00193E  5188               	movf	nwkDataReqSendFrame@req& (0+255),w,b
 39424  001940  26E9               	addwf	fsr0l,f,c
 39425  001942  5189               	movf	(nwkDataReqSendFrame@req+1)& (0+255),w,b
 39426  001944  22EA               	addwfc	fsr0h,f,c
 39427  001946  A4EF               	btfss	indf0,2,c
 39428  001948  D002               	goto	u16540
 39429  00194A  0E01               	movlw	1
 39430  00194C  D001               	goto	u16550
 39431  00194E                     u16540:
 39432  00194E  0E00               	movlw	0
 39433  001950                     u16550:
 39434  001950  6EDF               	movwf	indf2,c
 39435                           
 39436                           ; BSR set to: 0
 39437                           ;../nwk/nwk_src/nwkDataReq.c: 128:   frame->header.nwkFcf.ackRequest = req->options & NW
      +                          K_OPT_ACK_REQUEST ? 1 : 0;
 39438  001952  0100               	movlb	0	; force () banked
 39439  001954  EE20 F009          	lfsr	2,9
 39440  001958  5188               	movf	nwkDataReqSendFrame@req& (0+255),w,b
 39441  00195A  26D9               	addwf	fsr2l,f,c
 39442  00195C  5189               	movf	(nwkDataReqSendFrame@req+1)& (0+255),w,b
 39443  00195E  22DA               	addwfc	fsr2h,f,c
 39444  001960  A0DF               	btfss	indf2,0,c
 39445  001962  D004               	goto	u16560
 39446  001964  0100               	movlb	0	; force () banked
 39447  001966  6B8A               	clrf	??_nwkDataReqSendFrame& (0+255),b
 39448  001968  2B8A               	incf	??_nwkDataReqSendFrame& (0+255),f,b
 39449  00196A  D002               	goto	u16578
 39450  00196C                     u16560:
 39451  00196C  0100               	movlb	0	; force () banked
 39452  00196E  6B8A               	clrf	??_nwkDataReqSendFrame& (0+255),b
 39453  001970                     u16578:
 39454  001970  0100               	movlb	0	; force () banked
 39455  001972  EE20 F00B          	lfsr	2,11
 39456  001976  518F               	movf	nwkDataReqSendFrame@frame& (0+255),w,b
 39457  001978  26D9               	addwf	fsr2l,f,c
 39458  00197A  5190               	movf	(nwkDataReqSendFrame@frame+1)& (0+255),w,b
 39459  00197C  22DA               	addwfc	fsr2h,f,c
 39460  00197E  50DF               	movf	223,w,c
 39461  001980  0100               	movlb	0	; force () banked
 39462  001982  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39463  001984  0BFE               	andlw	-2
 39464  001986  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39465  001988  0100               	movlb	0	; force () banked
 39466  00198A  6EDF               	movwf	223,c
 39467                           
 39468                           ; BSR set to: 0
 39469                           ;../nwk/nwk_src/nwkDataReq.c: 129:   frame->header.nwkFcf.linkLocal = req->options & NWK
      +                          _OPT_LINK_LOCAL ? 1 : 0;
 39470  00198C  0100               	movlb	0	; force () banked
 39471  00198E  EE20 F009          	lfsr	2,9
 39472  001992  5188               	movf	nwkDataReqSendFrame@req& (0+255),w,b
 39473  001994  26D9               	addwf	fsr2l,f,c
 39474  001996  5189               	movf	(nwkDataReqSendFrame@req+1)& (0+255),w,b
 39475  001998  22DA               	addwfc	fsr2h,f,c
 39476  00199A  A6DF               	btfss	indf2,3,c
 39477  00199C  D004               	goto	u16580
 39478  00199E  0100               	movlb	0	; force () banked
 39479  0019A0  6B8A               	clrf	??_nwkDataReqSendFrame& (0+255),b
 39480  0019A2  2B8A               	incf	??_nwkDataReqSendFrame& (0+255),f,b
 39481  0019A4  D002               	goto	u16598
 39482  0019A6                     u16580:
 39483  0019A6  0100               	movlb	0	; force () banked
 39484  0019A8  6B8A               	clrf	??_nwkDataReqSendFrame& (0+255),b
 39485  0019AA                     u16598:
 39486  0019AA  0100               	movlb	0	; force () banked
 39487  0019AC  EE20 F00B          	lfsr	2,11
 39488  0019B0  518F               	movf	nwkDataReqSendFrame@frame& (0+255),w,b
 39489  0019B2  26D9               	addwf	fsr2l,f,c
 39490  0019B4  5190               	movf	(nwkDataReqSendFrame@frame+1)& (0+255),w,b
 39491  0019B6  22DA               	addwfc	fsr2h,f,c
 39492  0019B8  0100               	movlb	0	; force () banked
 39493  0019BA  478A               	rlncf	??_nwkDataReqSendFrame& (0+255),f,b
 39494  0019BC  478A               	rlncf	??_nwkDataReqSendFrame& (0+255),f,b
 39495  0019BE  0100               	movlb	0	; force () banked
 39496  0019C0  50DF               	movf	223,w,c
 39497  0019C2  0100               	movlb	0	; force () banked
 39498  0019C4  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39499  0019C6  0BFB               	andlw	-5
 39500  0019C8  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39501  0019CA  0100               	movlb	0	; force () banked
 39502  0019CC  6EDF               	movwf	223,c
 39503                           
 39504                           ; BSR set to: 0
 39505                           ;../nwk/nwk_src/nwkDataReq.c: 136:   frame->header.nwkFcf.multicast = req->options & NWK
      +                          _OPT_MULTICAST ? 1 : 0;
 39506  0019CE  0100               	movlb	0	; force () banked
 39507  0019D0  EE20 F009          	lfsr	2,9
 39508  0019D4  5188               	movf	nwkDataReqSendFrame@req& (0+255),w,b
 39509  0019D6  26D9               	addwf	fsr2l,f,c
 39510  0019D8  5189               	movf	(nwkDataReqSendFrame@req+1)& (0+255),w,b
 39511  0019DA  22DA               	addwfc	fsr2h,f,c
 39512  0019DC  A8DF               	btfss	indf2,4,c
 39513  0019DE  D004               	goto	u16600
 39514  0019E0  0100               	movlb	0	; force () banked
 39515  0019E2  6B8A               	clrf	??_nwkDataReqSendFrame& (0+255),b
 39516  0019E4  2B8A               	incf	??_nwkDataReqSendFrame& (0+255),f,b
 39517  0019E6  D002               	goto	u16618
 39518  0019E8                     u16600:
 39519  0019E8  0100               	movlb	0	; force () banked
 39520  0019EA  6B8A               	clrf	??_nwkDataReqSendFrame& (0+255),b
 39521  0019EC                     u16618:
 39522  0019EC  0100               	movlb	0	; force () banked
 39523  0019EE  EE20 F00B          	lfsr	2,11
 39524  0019F2  518F               	movf	nwkDataReqSendFrame@frame& (0+255),w,b
 39525  0019F4  26D9               	addwf	fsr2l,f,c
 39526  0019F6  5190               	movf	(nwkDataReqSendFrame@frame+1)& (0+255),w,b
 39527  0019F8  22DA               	addwfc	fsr2h,f,c
 39528  0019FA  0100               	movlb	0	; force () banked
 39529  0019FC  478A               	rlncf	??_nwkDataReqSendFrame& (0+255),f,b
 39530  0019FE  478A               	rlncf	??_nwkDataReqSendFrame& (0+255),f,b
 39531  001A00  478A               	rlncf	??_nwkDataReqSendFrame& (0+255),f,b
 39532  001A02  0100               	movlb	0	; force () banked
 39533  001A04  50DF               	movf	223,w,c
 39534  001A06  0100               	movlb	0	; force () banked
 39535  001A08  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39536  001A0A  0BF7               	andlw	-9
 39537  001A0C  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39538  001A0E  0100               	movlb	0	; force () banked
 39539  001A10  6EDF               	movwf	223,c
 39540                           
 39541                           ; BSR set to: 0
 39542                           ;../nwk/nwk_src/nwkDataReq.c: 138:   if (frame->header.nwkFcf.multicast)
 39543  001A12  0100               	movlb	0	; force () banked
 39544  001A14  EE20 F00B          	lfsr	2,11
 39545  001A18  518F               	movf	nwkDataReqSendFrame@frame& (0+255),w,b
 39546  001A1A  26D9               	addwf	fsr2l,f,c
 39547  001A1C  5190               	movf	(nwkDataReqSendFrame@frame+1)& (0+255),w,b
 39548  001A1E  22DA               	addwfc	fsr2h,f,c
 39549  001A20  A6DF               	btfss	indf2,3,c
 39550  001A22  D084               	goto	l18854
 39551                           
 39552                           ; BSR set to: 0
 39553                           ;../nwk/nwk_src/nwkDataReq.c: 139:   {;../nwk/nwk_src/nwkDataReq.c: 140:     NwkFrameMul
      +                          ticastHeader_t *mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
 39554  001A24  0100               	movlb	0	; force () banked
 39555  001A26  EE20 F082          	lfsr	2,130
 39556  001A2A  518F               	movf	nwkDataReqSendFrame@frame& (0+255),w,b
 39557  001A2C  26D9               	addwf	fsr2l,f,c
 39558  001A2E  5190               	movf	(nwkDataReqSendFrame@frame+1)& (0+255),w,b
 39559  001A30  22DA               	addwfc	fsr2h,f,c
 39560  001A32  006F FF78  F08D    	movff	postinc2,nwkDataReqSendFrame@mcHeader
 39561  001A38  006F FF74  F08E    	movff	postdec2,nwkDataReqSendFrame@mcHeader+1
 39562                           
 39563                           ;../nwk/nwk_src/nwkDataReq.c: 142:     mcHeader->memberRadius = req->memberRadius;
 39564  001A3E  0100               	movlb	0	; force () banked
 39565  001A40  EE20 F00A          	lfsr	2,10
 39566  001A44  5188               	movf	nwkDataReqSendFrame@req& (0+255),w,b
 39567  001A46  26D9               	addwf	fsr2l,f,c
 39568  001A48  5189               	movf	(nwkDataReqSendFrame@req+1)& (0+255),w,b
 39569  001A4A  22DA               	addwfc	fsr2h,f,c
 39570  001A4C  50DF               	movf	indf2,w,c
 39571  001A4E  0100               	movlb	0	; force () banked
 39572  001A50  6F8A               	movwf	??_nwkDataReqSendFrame& (0+255),b
 39573  001A52  0100               	movlb	0	; force () banked
 39574  001A54  EE20 F001          	lfsr	2,1
 39575  001A58  518D               	movf	nwkDataReqSendFrame@mcHeader& (0+255),w,b
 39576  001A5A  26D9               	addwf	fsr2l,f,c
 39577  001A5C  518E               	movf	(nwkDataReqSendFrame@mcHeader+1)& (0+255),w,b
 39578  001A5E  22DA               	addwfc	fsr2h,f,c
 39579  001A60  50DF               	movf	223,w,c
 39580  001A62  0100               	movlb	0	; force () banked
 39581  001A64  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39582  001A66  0BF0               	andlw	-16
 39583  001A68  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39584  001A6A  0100               	movlb	0	; force () banked
 39585  001A6C  6EDF               	movwf	223,c
 39586                           
 39587                           ;../nwk/nwk_src/nwkDataReq.c: 143:     mcHeader->maxMemberRadius = req->memberRadius;
 39588  001A6E  0100               	movlb	0	; force () banked
 39589  001A70  EE20 F00A          	lfsr	2,10
 39590  001A74  5188               	movf	nwkDataReqSendFrame@req& (0+255),w,b
 39591  001A76  26D9               	addwf	fsr2l,f,c
 39592  001A78  5189               	movf	(nwkDataReqSendFrame@req+1)& (0+255),w,b
 39593  001A7A  22DA               	addwfc	fsr2h,f,c
 39594  001A7C  50DF               	movf	indf2,w,c
 39595  001A7E  0100               	movlb	0	; force () banked
 39596  001A80  6F8A               	movwf	??_nwkDataReqSendFrame& (0+255),b
 39597  001A82  0100               	movlb	0	; force () banked
 39598  001A84  EE20 F001          	lfsr	2,1
 39599  001A88  518D               	movf	nwkDataReqSendFrame@mcHeader& (0+255),w,b
 39600  001A8A  26D9               	addwf	fsr2l,f,c
 39601  001A8C  518E               	movf	(nwkDataReqSendFrame@mcHeader+1)& (0+255),w,b
 39602  001A8E  22DA               	addwfc	fsr2h,f,c
 39603  001A90  0100               	movlb	0	; force () banked
 39604  001A92  3B8A               	swapf	??_nwkDataReqSendFrame& (0+255),f,b
 39605  001A94  0100               	movlb	0	; force () banked
 39606  001A96  50DF               	movf	223,w,c
 39607  001A98  0100               	movlb	0	; force () banked
 39608  001A9A  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39609  001A9C  0B0F               	andlw	-241
 39610  001A9E  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39611  001AA0  0100               	movlb	0	; force () banked
 39612  001AA2  6EDF               	movwf	223,c
 39613                           
 39614                           ;../nwk/nwk_src/nwkDataReq.c: 144:     mcHeader->nonMemberRadius = req->nonMemberRadius;
 39615  001AA4  0100               	movlb	0	; force () banked
 39616  001AA6  EE20 F00B          	lfsr	2,11
 39617  001AAA  5188               	movf	nwkDataReqSendFrame@req& (0+255),w,b
 39618  001AAC  26D9               	addwf	fsr2l,f,c
 39619  001AAE  5189               	movf	(nwkDataReqSendFrame@req+1)& (0+255),w,b
 39620  001AB0  22DA               	addwfc	fsr2h,f,c
 39621  001AB2  50DF               	movf	indf2,w,c
 39622  001AB4  0100               	movlb	0	; force () banked
 39623  001AB6  6F8A               	movwf	??_nwkDataReqSendFrame& (0+255),b
 39624  001AB8  0060  F237  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
 39625  001ABE  0060  F23B  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
 39626  001AC4  0100               	movlb	0	; force () banked
 39627  001AC6  50DF               	movf	223,w,c
 39628  001AC8  0100               	movlb	0	; force () banked
 39629  001ACA  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39630  001ACC  0BF0               	andlw	-16
 39631  001ACE  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39632  001AD0  0100               	movlb	0	; force () banked
 39633  001AD2  6EDF               	movwf	223,c
 39634                           
 39635                           ;../nwk/nwk_src/nwkDataReq.c: 145:     mcHeader->maxNonMemberRadius = req->nonMemberRadi
      +                          us;
 39636  001AD4  0100               	movlb	0	; force () banked
 39637  001AD6  EE20 F00B          	lfsr	2,11
 39638  001ADA  5188               	movf	nwkDataReqSendFrame@req& (0+255),w,b
 39639  001ADC  26D9               	addwf	fsr2l,f,c
 39640  001ADE  5189               	movf	(nwkDataReqSendFrame@req+1)& (0+255),w,b
 39641  001AE0  22DA               	addwfc	fsr2h,f,c
 39642  001AE2  50DF               	movf	indf2,w,c
 39643  001AE4  0100               	movlb	0	; force () banked
 39644  001AE6  6F8A               	movwf	??_nwkDataReqSendFrame& (0+255),b
 39645  001AE8  0060  F237  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
 39646  001AEE  0060  F23B  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
 39647  001AF4  3B8A               	swapf	??_nwkDataReqSendFrame& (0+255),f,b
 39648  001AF6  0100               	movlb	0	; force () banked
 39649  001AF8  50DF               	movf	223,w,c
 39650  001AFA  0100               	movlb	0	; force () banked
 39651  001AFC  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39652  001AFE  0B0F               	andlw	-241
 39653  001B00  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39654  001B02  0100               	movlb	0	; force () banked
 39655  001B04  6EDF               	movwf	223,c
 39656                           
 39657                           ;../nwk/nwk_src/nwkDataReq.c: 147:     frame->payload += sizeof(NwkFrameMulticastHeader_
      +                          t);
 39658  001B06  0100               	movlb	0	; force () banked
 39659  001B08  EE20 F082          	lfsr	2,130
 39660  001B0C  518F               	movf	nwkDataReqSendFrame@frame& (0+255),w,b
 39661  001B0E  26D9               	addwf	fsr2l,f,c
 39662  001B10  5190               	movf	(nwkDataReqSendFrame@frame+1)& (0+255),w,b
 39663  001B12  22DA               	addwfc	fsr2h,f,c
 39664  001B14  0E02               	movlw	2
 39665  001B16  26DE               	addwf	postinc2,f,c
 39666  001B18  0E00               	movlw	0
 39667  001B1A  22DD               	addwfc	postdec2,f,c
 39668                           
 39669                           ;../nwk/nwk_src/nwkDataReq.c: 148:     frame->size += sizeof(NwkFrameMulticastHeader_t);
 39670  001B1C  EE20 F001          	lfsr	2,1
 39671  001B20  518F               	movf	nwkDataReqSendFrame@frame& (0+255),w,b
 39672  001B22  26D9               	addwf	fsr2l,f,c
 39673  001B24  5190               	movf	(nwkDataReqSendFrame@frame+1)& (0+255),w,b
 39674  001B26  22DA               	addwfc	fsr2h,f,c
 39675  001B28  0E02               	movlw	2
 39676  001B2A  26DF               	addwf	indf2,f,c
 39677  001B2C                     l18854:
 39678                           
 39679                           ; BSR set to: 0
 39680                           ;../nwk/nwk_src/nwkDataReq.c: 152:   frame->header.nwkFcf.repeater = nwkIsRouter();
 39681  001B2C  ECAF  F05E         	call	_nwkIsRouter	;wreg free
 39682  001B30  0100               	movlb	0	; force () banked
 39683  001B32  6F8A               	movwf	??_nwkDataReqSendFrame& (0+255),b
 39684  001B34  0100               	movlb	0	; force () banked
 39685  001B36  EE20 F00B          	lfsr	2,11
 39686  001B3A  518F               	movf	nwkDataReqSendFrame@frame& (0+255),w,b
 39687  001B3C  26D9               	addwf	fsr2l,f,c
 39688  001B3E  5190               	movf	(nwkDataReqSendFrame@frame+1)& (0+255),w,b
 39689  001B40  22DA               	addwfc	fsr2h,f,c
 39690  001B42  0100               	movlb	0	; force () banked
 39691  001B44  3B8A               	swapf	??_nwkDataReqSendFrame& (0+255),f,b
 39692  001B46  0100               	movlb	0	; force () banked
 39693  001B48  50DF               	movf	223,w,c
 39694  001B4A  0100               	movlb	0	; force () banked
 39695  001B4C  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39696  001B4E  0BEF               	andlw	-17
 39697  001B50  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39698  001B52  0100               	movlb	0	; force () banked
 39699  001B54  6EDF               	movwf	223,c
 39700                           
 39701                           ; BSR set to: 0
 39702                           ;../nwk/nwk_src/nwkDataReq.c: 154:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 39703  001B56  0102               	movlb	2	; force () banked
 39704  001B58  2B04               	incf	(_nwkIb+4)& (0+255),f,b
 39705  001B5A  0100               	movlb	0	; force () banked
 39706  001B5C  EE20 F00C          	lfsr	2,12
 39707  001B60  518F               	movf	nwkDataReqSendFrame@frame& (0+255),w,b
 39708  001B62  26D9               	addwf	fsr2l,f,c
 39709  001B64  5190               	movf	(nwkDataReqSendFrame@frame+1)& (0+255),w,b
 39710  001B66  22DA               	addwfc	fsr2h,f,c
 39711  001B68  0060  F813  FFDF   	movff	_nwkIb+4,indf2
 39712                           
 39713                           ; BSR set to: 0
 39714                           ;../nwk/nwk_src/nwkDataReq.c: 155:   frame->header.nwkSrcAddr = nwkIb.addr;
 39715  001B6E  0100               	movlb	0	; force () banked
 39716  001B70  EE20 F00D          	lfsr	2,13
 39717  001B74  518F               	movf	nwkDataReqSendFrame@frame& (0+255),w,b
 39718  001B76  26D9               	addwf	fsr2l,f,c
 39719  001B78  5190               	movf	(nwkDataReqSendFrame@frame+1)& (0+255),w,b
 39720  001B7A  22DA               	addwfc	fsr2h,f,c
 39721  001B7C  0060  F803  FFDE   	movff	_nwkIb,postinc2
 39722  001B82  0060  F807  FFDD   	movff	_nwkIb+1,postdec2
 39723                           
 39724                           ; BSR set to: 0
 39725                           ;../nwk/nwk_src/nwkDataReq.c: 156:   frame->header.nwkDstAddr = req->dstAddr;
 39726  001B88  0100               	movlb	0	; force () banked
 39727  001B8A  EE20 F005          	lfsr	2,5
 39728  001B8E  5188               	movf	nwkDataReqSendFrame@req& (0+255),w,b
 39729  001B90  26D9               	addwf	fsr2l,f,c
 39730  001B92  5189               	movf	(nwkDataReqSendFrame@req+1)& (0+255),w,b
 39731  001B94  22DA               	addwfc	fsr2h,f,c
 39732  001B96  0100               	movlb	0	; force () banked
 39733  001B98  EE00 F00F          	lfsr	0,15
 39734  001B9C  518F               	movf	nwkDataReqSendFrame@frame& (0+255),w,b
 39735  001B9E  26E9               	addwf	fsr0l,f,c
 39736  001BA0  5190               	movf	(nwkDataReqSendFrame@frame+1)& (0+255),w,b
 39737  001BA2  22EA               	addwfc	fsr0h,f,c
 39738  001BA4  006F FF7B FFEE     	movff	postinc2,postinc0
 39739  001BAA  006F FF77 FFED     	movff	postdec2,postdec0
 39740                           
 39741                           ; BSR set to: 0
 39742                           ;../nwk/nwk_src/nwkDataReq.c: 157:   frame->header.nwkSrcEndpoint = req->srcEndpoint;
 39743  001BB0  0100               	movlb	0	; force () banked
 39744  001BB2  EE20 F008          	lfsr	2,8
 39745  001BB6  5188               	movf	nwkDataReqSendFrame@req& (0+255),w,b
 39746  001BB8  26D9               	addwf	fsr2l,f,c
 39747  001BBA  5189               	movf	(nwkDataReqSendFrame@req+1)& (0+255),w,b
 39748  001BBC  22DA               	addwfc	fsr2h,f,c
 39749  001BBE  50DF               	movf	indf2,w,c
 39750  001BC0  0100               	movlb	0	; force () banked
 39751  001BC2  6F8A               	movwf	??_nwkDataReqSendFrame& (0+255),b
 39752  001BC4  0100               	movlb	0	; force () banked
 39753  001BC6  EE20 F011          	lfsr	2,17
 39754  001BCA  518F               	movf	nwkDataReqSendFrame@frame& (0+255),w,b
 39755  001BCC  26D9               	addwf	fsr2l,f,c
 39756  001BCE  5190               	movf	(nwkDataReqSendFrame@frame+1)& (0+255),w,b
 39757  001BD0  22DA               	addwfc	fsr2h,f,c
 39758  001BD2  50DF               	movf	223,w,c
 39759  001BD4  0100               	movlb	0	; force () banked
 39760  001BD6  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39761  001BD8  0BF0               	andlw	-16
 39762  001BDA  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39763  001BDC  0100               	movlb	0	; force () banked
 39764  001BDE  6EDF               	movwf	223,c
 39765                           
 39766                           ; BSR set to: 0
 39767                           ;../nwk/nwk_src/nwkDataReq.c: 158:   frame->header.nwkDstEndpoint = req->dstEndpoint;
 39768  001BE0  0100               	movlb	0	; force () banked
 39769  001BE2  EE20 F007          	lfsr	2,7
 39770  001BE6  5188               	movf	nwkDataReqSendFrame@req& (0+255),w,b
 39771  001BE8  26D9               	addwf	fsr2l,f,c
 39772  001BEA  5189               	movf	(nwkDataReqSendFrame@req+1)& (0+255),w,b
 39773  001BEC  22DA               	addwfc	fsr2h,f,c
 39774  001BEE  50DF               	movf	indf2,w,c
 39775  001BF0  0100               	movlb	0	; force () banked
 39776  001BF2  6F8A               	movwf	??_nwkDataReqSendFrame& (0+255),b
 39777  001BF4  0100               	movlb	0	; force () banked
 39778  001BF6  EE20 F011          	lfsr	2,17
 39779  001BFA  518F               	movf	nwkDataReqSendFrame@frame& (0+255),w,b
 39780  001BFC  26D9               	addwf	fsr2l,f,c
 39781  001BFE  5190               	movf	(nwkDataReqSendFrame@frame+1)& (0+255),w,b
 39782  001C00  22DA               	addwfc	fsr2h,f,c
 39783  001C02  0100               	movlb	0	; force () banked
 39784  001C04  3B8A               	swapf	??_nwkDataReqSendFrame& (0+255),f,b
 39785  001C06  0100               	movlb	0	; force () banked
 39786  001C08  50DF               	movf	223,w,c
 39787  001C0A  0100               	movlb	0	; force () banked
 39788  001C0C  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39789  001C0E  0B0F               	andlw	-241
 39790  001C10  198A               	xorwf	??_nwkDataReqSendFrame& (0+255),w,b
 39791  001C12  0100               	movlb	0	; force () banked
 39792  001C14  6EDF               	movwf	223,c
 39793                           
 39794                           ; BSR set to: 0
 39795                           ;../nwk/nwk_src/nwkDataReq.c: 160:   memcpy(frame->payload, req->data, req->size);
 39796  001C16  0100               	movlb	0	; force () banked
 39797  001C18  EE20 F082          	lfsr	2,130
 39798  001C1C  518F               	movf	nwkDataReqSendFrame@frame& (0+255),w,b
 39799  001C1E  26D9               	addwf	fsr2l,f,c
 39800  001C20  5190               	movf	(nwkDataReqSendFrame@frame+1)& (0+255),w,b
 39801  001C22  22DA               	addwfc	fsr2h,f,c
 39802  001C24  006F FF78  F077    	movff	postinc2,memcpy@d1
 39803  001C2A  006F FF74  F078    	movff	postdec2,memcpy@d1+1
 39804  001C30  0100               	movlb	0	; force () banked
 39805  001C32  EE20 F00C          	lfsr	2,12
 39806  001C36  5188               	movf	nwkDataReqSendFrame@req& (0+255),w,b
 39807  001C38  26D9               	addwf	fsr2l,f,c
 39808  001C3A  5189               	movf	(nwkDataReqSendFrame@req+1)& (0+255),w,b
 39809  001C3C  22DA               	addwfc	fsr2h,f,c
 39810  001C3E  006F FF78  F08A    	movff	postinc2,??_nwkDataReqSendFrame
 39811  001C44  006F FF74  F08B    	movff	postdec2,??_nwkDataReqSendFrame+1
 39812  001C4A  C08A  F079         	movff	??_nwkDataReqSendFrame,memcpy@s1
 39813  001C4E  C08B  F07A         	movff	??_nwkDataReqSendFrame+1,memcpy@s1+1
 39814  001C52  0100               	movlb	0	; force () banked
 39815  001C54  5179               	movf	memcpy@s1& (0+255),w,b
 39816  001C56  117A               	iorwf	(memcpy@s1+1)& (0+255),w,b
 39817  001C58  A4D8               	btfss	status,2,c
 39818  001C5A  0E20               	movlw	32
 39819  001C5C  6F7B               	movwf	(memcpy@s1+2)& (0+255),b
 39820  001C5E  0100               	movlb	0	; force () banked
 39821  001C60  EE20 F00E          	lfsr	2,14
 39822  001C64  5188               	movf	nwkDataReqSendFrame@req& (0+255),w,b
 39823  001C66  26D9               	addwf	fsr2l,f,c
 39824  001C68  5189               	movf	(nwkDataReqSendFrame@req+1)& (0+255),w,b
 39825  001C6A  22DA               	addwfc	fsr2h,f,c
 39826  001C6C  50DF               	movf	indf2,w,c
 39827  001C6E  0100               	movlb	0	; force () banked
 39828  001C70  6F8C               	movwf	(??_nwkDataReqSendFrame+2)& (0+255),b
 39829  001C72  518C               	movf	(??_nwkDataReqSendFrame+2)& (0+255),w,b
 39830  001C74  0100               	movlb	0	; force () banked
 39831  001C76  6F7C               	movwf	memcpy@n& (0+255),b
 39832  001C78  6B7D               	clrf	(memcpy@n+1)& (0+255),b
 39833  001C7A  ECC1  F04F         	call	_memcpy	;wreg free
 39834                           
 39835                           ; BSR set to: 0
 39836                           ;../nwk/nwk_src/nwkDataReq.c: 161:   frame->size += req->size;
 39837  001C7E  0100               	movlb	0	; force () banked
 39838  001C80  EE20 F00E          	lfsr	2,14
 39839  001C84  5188               	movf	nwkDataReqSendFrame@req& (0+255),w,b
 39840  001C86  26D9               	addwf	fsr2l,f,c
 39841  001C88  5189               	movf	(nwkDataReqSendFrame@req+1)& (0+255),w,b
 39842  001C8A  22DA               	addwfc	fsr2h,f,c
 39843  001C8C  50DF               	movf	indf2,w,c
 39844  001C8E  0100               	movlb	0	; force () banked
 39845  001C90  6F8A               	movwf	??_nwkDataReqSendFrame& (0+255),b
 39846  001C92  0100               	movlb	0	; force () banked
 39847  001C94  EE20 F001          	lfsr	2,1
 39848  001C98  518F               	movf	nwkDataReqSendFrame@frame& (0+255),w,b
 39849  001C9A  26D9               	addwf	fsr2l,f,c
 39850  001C9C  5190               	movf	(nwkDataReqSendFrame@frame+1)& (0+255),w,b
 39851  001C9E  22DA               	addwfc	fsr2h,f,c
 39852  001CA0  0100               	movlb	0	; force () banked
 39853  001CA2  518A               	movf	??_nwkDataReqSendFrame& (0+255),w,b
 39854  001CA4  26DF               	addwf	indf2,f,c
 39855                           
 39856                           ; BSR set to: 0
 39857                           ;../nwk/nwk_src/nwkDataReq.c: 163:   nwkTxFrame(frame);
 39858  001CA6  C08F  F082         	movff	nwkDataReqSendFrame@frame,nwkTxFrame@frame
 39859  001CAA  C090  F083         	movff	nwkDataReqSendFrame@frame+1,nwkTxFrame@frame+1
 39860  001CAE  EC1E  F028         	call	_nwkTxFrame	;wreg free
 39861                           
 39862                           ; BSR set to: 0
 39863  001CB2  0012               	return		;funcret
 39864  001CB4                     __end_of_nwkDataReqSendFrame:
 39865                           	callstack 0
 39866                           
 39867 ;; *************** function _nwkTxFrame *****************
 39868 ;; Defined at:
 39869 ;;		line 109 in file "../nwk/nwk_src/nwkTx.c"
 39870 ;; Parameters:    Size  Location     Type
 39871 ;;  frame           2   34[BANK0 ] PTR struct NwkFrame_t
 39872 ;;		 -> nwkFrameFrames(690), NULL(0), 
 39873 ;; Auto vars:     Size  Location     Type
 39874 ;;  header          2   38[BANK0 ] PTR struct NwkFrameHeade
 39875 ;;		 -> nwkFrameFrames..(128), nwkFrameFrames(690), NULL(0), 
 39876 ;; Return value:  Size  Location     Type
 39877 ;;                  1    wreg      void 
 39878 ;; Registers used:
 39879 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39880 ;; Tracked objects:
 39881 ;;		On entry : 3F/0
 39882 ;;		On exit  : 3F/0
 39883 ;;		Unchanged: 0/0
 39884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39885 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39886 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39887 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39888 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39889 ;;Total ram usage:        6 bytes
 39890 ;; Hardware stack levels used:    1
 39891 ;; Hardware stack levels required when called:   14
 39892 ;; This function calls:
 39893 ;;		_nwkRoutePrepareTx
 39894 ;;		_rand
 39895 ;; This function is called by:
 39896 ;;		_nwkDataReqSendFrame
 39897 ;;		_nwkRouteFrame
 39898 ;;		_nwkRouteSendRouteError
 39899 ;;		_nwkRxSendAck
 39900 ;; This function uses a non-reentrant model
 39901 ;;
 39902                           
 39903                           	psect	text217
 39904  00503C                     __ptext217:
 39905                           	callstack 0
 39906  00503C                     _nwkTxFrame:
 39907                           	callstack 11
 39908                           
 39909                           ;../nwk/nwk_src/nwkTx.c: 109: void nwkTxFrame(NwkFrame_t *frame);../nwk/nwk_src/nwkTx.c:
      +                           110: {;../nwk/nwk_src/nwkTx.c: 111:   NwkFrameHeader_t *header = &frame->header;
 39910                           
 39911                           ; BSR set to: 0
 39912                           ;incstack = 0
 39913  00503C  0E02               	movlw	2
 39914  00503E  0100               	movlb	0	; force () banked
 39915  005040  2582               	addwf	nwkTxFrame@frame& (0+255),w,b
 39916  005042  0100               	movlb	0	; force () banked
 39917  005044  6F86               	movwf	nwkTxFrame@header& (0+255),b
 39918  005046  0E00               	movlw	0
 39919  005048  0100               	movlb	0	; force () banked
 39920  00504A  2183               	addwfc	(nwkTxFrame@frame+1)& (0+255),w,b
 39921  00504C  0100               	movlb	0	; force () banked
 39922  00504E  6F87               	movwf	(nwkTxFrame@header+1)& (0+255),b
 39923                           
 39924                           ; BSR set to: 0
 39925                           ;../nwk/nwk_src/nwkTx.c: 113:   if (frame->tx.control & NWK_TX_CONTROL_ROUTING)
 39926  005050  0100               	movlb	0	; force () banked
 39927  005052  EE20 F087          	lfsr	2,135
 39928  005056  5182               	movf	nwkTxFrame@frame& (0+255),w,b
 39929  005058  26D9               	addwf	fsr2l,f,c
 39930  00505A  5183               	movf	(nwkTxFrame@frame+1)& (0+255),w,b
 39931  00505C  22DA               	addwfc	fsr2h,f,c
 39932  00505E  A2DF               	btfss	indf2,1,c
 39933  005060  D000               	goto	u15890
 39934  005062                     u15890:
 39935                           
 39936                           ; BSR set to: 0
 39937                           ;../nwk/nwk_src/nwkTx.c: 118:   {;../nwk/nwk_src/nwkTx.c: 124:       frame->state = NWK_
      +                          TX_STATE_DELAY;
 39938                           
 39939                           ;../nwk/nwk_src/nwkTx.c: 116:   }
 39940                           
 39941                           ; BSR set to: 0
 39942                           ;../nwk/nwk_src/nwkTx.c: 114:   {;../nwk/nwk_src/nwkTx.c: 115:     frame->state = NWK_TX
      +                          _STATE_DELAY;
 39943  005062  0060  F20B  FFD9   	movff	nwkTxFrame@frame,fsr2l
 39944  005068  0060  F20F  FFDA   	movff	nwkTxFrame@frame+1,fsr2h
 39945  00506E  0E12               	movlw	18
 39946  005070  6EDF               	movwf	indf2,c
 39947                           
 39948                           ; BSR set to: 0
 39949                           ;../nwk/nwk_src/nwkTx.c: 127:   frame->tx.status = NWK_SUCCESS_STATUS;
 39950  005072  0100               	movlb	0	; force () banked
 39951  005074  EE20 F084          	lfsr	2,132
 39952  005078  5182               	movf	nwkTxFrame@frame& (0+255),w,b
 39953  00507A  26D9               	addwf	fsr2l,f,c
 39954  00507C  5183               	movf	(nwkTxFrame@frame+1)& (0+255),w,b
 39955  00507E  22DA               	addwfc	fsr2h,f,c
 39956  005080  0E00               	movlw	0
 39957  005082  6EDF               	movwf	indf2,c
 39958                           
 39959                           ; BSR set to: 0
 39960                           ;../nwk/nwk_src/nwkTx.c: 129:   if (frame->tx.control & NWK_TX_CONTROL_BROADCAST_PAN_ID)
 39961  005084  0100               	movlb	0	; force () banked
 39962  005086  EE20 F087          	lfsr	2,135
 39963  00508A  5182               	movf	nwkTxFrame@frame& (0+255),w,b
 39964  00508C  26D9               	addwf	fsr2l,f,c
 39965  00508E  5183               	movf	(nwkTxFrame@frame+1)& (0+255),w,b
 39966  005090  22DA               	addwfc	fsr2h,f,c
 39967  005092  A0DF               	btfss	indf2,0,c
 39968  005094  D00C               	goto	l18298
 39969                           
 39970                           ; BSR set to: 0
 39971                           ;../nwk/nwk_src/nwkTx.c: 130:     header->macDstPanId = 0xffff;
 39972  005096  0100               	movlb	0	; force () banked
 39973  005098  EE20 F003          	lfsr	2,3
 39974  00509C  5186               	movf	nwkTxFrame@header& (0+255),w,b
 39975  00509E  26D9               	addwf	fsr2l,f,c
 39976  0050A0  5187               	movf	(nwkTxFrame@header+1)& (0+255),w,b
 39977  0050A2  22DA               	addwfc	fsr2h,f,c
 39978  0050A4  0EFF               	movlw	255
 39979  0050A6  6EDE               	movwf	postinc2,c
 39980  0050A8  0EFF               	movlw	255
 39981  0050AA  6EDD               	movwf	postdec2,c
 39982  0050AC  D00D               	goto	l3161
 39983  0050AE                     l18298:
 39984                           
 39985                           ; BSR set to: 0
 39986                           ;../nwk/nwk_src/nwkTx.c: 132:     header->macDstPanId = nwkIb.panId;
 39987  0050AE  0100               	movlb	0	; force () banked
 39988  0050B0  EE20 F003          	lfsr	2,3
 39989  0050B4  5186               	movf	nwkTxFrame@header& (0+255),w,b
 39990  0050B6  26D9               	addwf	fsr2l,f,c
 39991  0050B8  5187               	movf	(nwkTxFrame@header+1)& (0+255),w,b
 39992  0050BA  22DA               	addwfc	fsr2h,f,c
 39993  0050BC  0060  F80B  FFDE   	movff	_nwkIb+2,postinc2
 39994  0050C2  0060  F80F  FFDD   	movff	_nwkIb+3,postdec2
 39995  0050C8                     l3161:
 39996                           
 39997                           ; BSR set to: 0
 39998                           ;../nwk/nwk_src/nwkTx.c: 135:   if (0 == (frame->tx.control & NWK_TX_CONTROL_DIRECT_LINK
      +                          ) &&
 39999  0050C8  0100               	movlb	0	; force () banked
 40000  0050CA  EE20 F087          	lfsr	2,135
 40001  0050CE  5182               	movf	nwkTxFrame@frame& (0+255),w,b
 40002  0050D0  26D9               	addwf	fsr2l,f,c
 40003  0050D2  5183               	movf	(nwkTxFrame@frame+1)& (0+255),w,b
 40004  0050D4  22DA               	addwfc	fsr2h,f,c
 40005  0050D6  B4DF               	btfsc	indf2,2,c
 40006  0050D8  D010               	goto	l18304
 40007                           
 40008                           ; BSR set to: 0
 40009  0050DA  0100               	movlb	0	; force () banked
 40010  0050DC  EE20 F087          	lfsr	2,135
 40011  0050E0  5182               	movf	nwkTxFrame@frame& (0+255),w,b
 40012  0050E2  26D9               	addwf	fsr2l,f,c
 40013  0050E4  5183               	movf	(nwkTxFrame@frame+1)& (0+255),w,b
 40014  0050E6  22DA               	addwfc	fsr2h,f,c
 40015  0050E8  B0DF               	btfsc	indf2,0,c
 40016  0050EA  D007               	goto	l18304
 40017                           
 40018                           ; BSR set to: 0
 40019                           ;../nwk/nwk_src/nwkTx.c: 137:     nwkRoutePrepareTx(frame);
 40020  0050EC  C082  F07C         	movff	nwkTxFrame@frame,nwkRoutePrepareTx@frame
 40021  0050F0  C083  F07D         	movff	nwkTxFrame@frame+1,nwkRoutePrepareTx@frame+1
 40022  0050F4  ECBE  F034         	call	_nwkRoutePrepareTx	;wreg free
 40023  0050F8  D013               	goto	l18306
 40024  0050FA                     l18304:
 40025                           
 40026                           ; BSR set to: 0
 40027                           ;../nwk/nwk_src/nwkTx.c: 140:     header->macDstAddr = header->nwkDstAddr;
 40028  0050FA  0100               	movlb	0	; force () banked
 40029  0050FC  EE20 F00D          	lfsr	2,13
 40030  005100  5186               	movf	nwkTxFrame@header& (0+255),w,b
 40031  005102  26D9               	addwf	fsr2l,f,c
 40032  005104  5187               	movf	(nwkTxFrame@header+1)& (0+255),w,b
 40033  005106  22DA               	addwfc	fsr2h,f,c
 40034  005108  EE00 F005          	lfsr	0,5
 40035  00510C  5186               	movf	nwkTxFrame@header& (0+255),w,b
 40036  00510E  26E9               	addwf	fsr0l,f,c
 40037  005110  5187               	movf	(nwkTxFrame@header+1)& (0+255),w,b
 40038  005112  22EA               	addwfc	fsr0h,f,c
 40039  005114  006F FF7B FFEE     	movff	postinc2,postinc0
 40040  00511A  006F FF77 FFED     	movff	postdec2,postdec0
 40041  005120                     l18306:
 40042                           
 40043                           ; BSR set to: 0
 40044                           ;../nwk/nwk_src/nwkTx.c: 142:   header->macSrcAddr = nwkIb.addr;
 40045  005120  0100               	movlb	0	; force () banked
 40046  005122  EE20 F007          	lfsr	2,7
 40047  005126  5186               	movf	nwkTxFrame@header& (0+255),w,b
 40048  005128  26D9               	addwf	fsr2l,f,c
 40049  00512A  5187               	movf	(nwkTxFrame@header+1)& (0+255),w,b
 40050  00512C  22DA               	addwfc	fsr2h,f,c
 40051  00512E  0060  F803  FFDE   	movff	_nwkIb,postinc2
 40052  005134  0060  F807  FFDD   	movff	_nwkIb+1,postdec2
 40053                           
 40054                           ; BSR set to: 0
 40055                           ;../nwk/nwk_src/nwkTx.c: 143:   header->macSeq = ++nwkIb.macSeqNum;
 40056  00513A  0102               	movlb	2	; force () banked
 40057  00513C  2B05               	incf	(_nwkIb+5)& (0+255),f,b
 40058  00513E  0100               	movlb	0	; force () banked
 40059  005140  EE20 F002          	lfsr	2,2
 40060  005144  5186               	movf	nwkTxFrame@header& (0+255),w,b
 40061  005146  26D9               	addwf	fsr2l,f,c
 40062  005148  5187               	movf	(nwkTxFrame@header+1)& (0+255),w,b
 40063  00514A  22DA               	addwfc	fsr2h,f,c
 40064  00514C  0060  F817  FFDF   	movff	_nwkIb+5,indf2
 40065                           
 40066                           ; BSR set to: 0
 40067                           ;../nwk/nwk_src/nwkTx.c: 145:   if (0xffff == header->macDstAddr)
 40068  005152  0100               	movlb	0	; force () banked
 40069  005154  EE20 F005          	lfsr	2,5
 40070  005158  5186               	movf	nwkTxFrame@header& (0+255),w,b
 40071  00515A  26D9               	addwf	fsr2l,f,c
 40072  00515C  5187               	movf	(nwkTxFrame@header+1)& (0+255),w,b
 40073  00515E  22DA               	addwfc	fsr2h,f,c
 40074  005160  28DE               	incf	postinc2,w,c
 40075  005162  E127               	bnz	l18316
 40076  005164  28DE               	incf	postinc2,w,c
 40077  005166  A4D8               	btfss	status,2,c
 40078  005168  D024               	goto	l18316
 40079                           
 40080                           ; BSR set to: 0
 40081                           ;../nwk/nwk_src/nwkTx.c: 146:   {;../nwk/nwk_src/nwkTx.c: 147:     header->macFcf = 0x88
      +                          41;
 40082  00516A  0060  F21B  FFD9   	movff	nwkTxFrame@header,fsr2l
 40083  005170  0060  F21F  FFDA   	movff	nwkTxFrame@header+1,fsr2h
 40084  005176  0E41               	movlw	65
 40085  005178  6EDE               	movwf	postinc2,c
 40086  00517A  0E88               	movlw	136
 40087  00517C  6EDD               	movwf	postdec2,c
 40088                           
 40089                           ; BSR set to: 0
 40090                           ;../nwk/nwk_src/nwkTx.c: 148:     frame->tx.timeout = (rand() & 0x07) + 1;
 40091  00517E  EC27  F053         	call	_rand	;wreg free
 40092  005182  0E07               	movlw	7
 40093  005184  0100               	movlb	0	; force () banked
 40094  005186  177D               	andwf	?_rand& (0+255),f,b
 40095  005188  0E00               	movlw	0
 40096  00518A  177E               	andwf	(?_rand+1)& (0+255),f,b
 40097  00518C  0E01               	movlw	1
 40098  00518E  277D               	addwf	?_rand& (0+255),f,b
 40099  005190  0E00               	movlw	0
 40100  005192  237E               	addwfc	(?_rand+1)& (0+255),f,b
 40101  005194  0100               	movlb	0	; force () banked
 40102  005196  EE20 F085          	lfsr	2,133
 40103  00519A  5182               	movf	nwkTxFrame@frame& (0+255),w,b
 40104  00519C  26D9               	addwf	fsr2l,f,c
 40105  00519E  5183               	movf	(nwkTxFrame@frame+1)& (0+255),w,b
 40106  0051A0  22DA               	addwfc	fsr2h,f,c
 40107  0051A2  0100               	movlb	0	; force () banked
 40108  0051A4  0060  F1F7  FFDE   	movff	?_rand,postinc2
 40109  0051AA  0060  F1FB  FFDD   	movff	?_rand+1,postdec2
 40110                           
 40111                           ;../nwk/nwk_src/nwkTx.c: 149:   }
 40112  0051B0  0012               	return	
 40113  0051B2                     l18316:
 40114                           
 40115                           ; BSR set to: 0
 40116                           ;../nwk/nwk_src/nwkTx.c: 151:   {;../nwk/nwk_src/nwkTx.c: 152:     header->macFcf = 0x88
      +                          61;
 40117  0051B2  0060  F21B  FFD9   	movff	nwkTxFrame@header,fsr2l
 40118  0051B8  0060  F21F  FFDA   	movff	nwkTxFrame@header+1,fsr2h
 40119  0051BE  0E61               	movlw	97
 40120  0051C0  6EDE               	movwf	postinc2,c
 40121  0051C2  0E88               	movlw	136
 40122  0051C4  6EDD               	movwf	postdec2,c
 40123                           
 40124                           ; BSR set to: 0
 40125                           ;../nwk/nwk_src/nwkTx.c: 153:     frame->tx.timeout = 0;
 40126  0051C6  0100               	movlb	0	; force () banked
 40127  0051C8  EE20 F085          	lfsr	2,133
 40128  0051CC  5182               	movf	nwkTxFrame@frame& (0+255),w,b
 40129  0051CE  26D9               	addwf	fsr2l,f,c
 40130  0051D0  5183               	movf	(nwkTxFrame@frame+1)& (0+255),w,b
 40131  0051D2  22DA               	addwfc	fsr2h,f,c
 40132  0051D4  0E00               	movlw	0
 40133  0051D6  6EDE               	movwf	postinc2,c
 40134  0051D8  0E00               	movlw	0
 40135  0051DA  6EDD               	movwf	postdec2,c
 40136                           
 40137                           ; BSR set to: 0
 40138  0051DC  0012               	return		;funcret
 40139  0051DE                     __end_of_nwkTxFrame:
 40140                           	callstack 0
 40141                           
 40142 ;; *************** function _rand *****************
 40143 ;; Defined at:
 40144 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\rand.c"
 40145 ;; Parameters:    Size  Location     Type
 40146 ;;		None
 40147 ;; Auto vars:     Size  Location     Type
 40148 ;;		None
 40149 ;; Return value:  Size  Location     Type
 40150 ;;                  2   29[BANK0 ] int 
 40151 ;; Registers used:
 40152 ;;		wreg, status,2, status,0, cstack
 40153 ;; Tracked objects:
 40154 ;;		On entry : 0/0
 40155 ;;		On exit  : 3F/0
 40156 ;;		Unchanged: 0/0
 40157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40158 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40161 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40162 ;;Total ram usage:        2 bytes
 40163 ;; Hardware stack levels used:    1
 40164 ;; Hardware stack levels required when called:   12
 40165 ;; This function calls:
 40166 ;;		___lmul
 40167 ;; This function is called by:
 40168 ;;		_app_aes_encrypt
 40169 ;;		_nwkTxFrame
 40170 ;;		_nwkTxBroadcastFrame
 40171 ;;		_radio_engine
 40172 ;; This function uses a non-reentrant model
 40173 ;;
 40174                           
 40175                           	psect	text218
 40176  00A64E                     __ptext218:
 40177                           	callstack 0
 40178  00A64E                     _rand:
 40179                           	callstack 13
 40180                           
 40181                           ; BSR set to: 0
 40182                           ;incstack = 0
 40183  00A64E  C2F5  F071         	movff	_randx,___lmul@multiplier
 40184  00A652  C2F6  F072         	movff	_randx+1,___lmul@multiplier+1
 40185  00A656  C2F7  F073         	movff	_randx+2,___lmul@multiplier+2
 40186  00A65A  C2F8  F074         	movff	_randx+3,___lmul@multiplier+3
 40187  00A65E  0E6D               	movlw	109
 40188  00A660  0100               	movlb	0	; () banked
 40189  00A662  6F75               	movwf	___lmul@multiplicand& (0+255),b
 40190  00A664  0E4E               	movlw	78
 40191  00A666  6F76               	movwf	(___lmul@multiplicand+1)& (0+255),b
 40192  00A668  0EC6               	movlw	198
 40193  00A66A  6F77               	movwf	(___lmul@multiplicand+2)& (0+255),b
 40194  00A66C  0E41               	movlw	65
 40195  00A66E  6F78               	movwf	(___lmul@multiplicand+3)& (0+255),b
 40196  00A670  ECDC  F053         	call	___lmul	;wreg free
 40197  00A674  C071  F2F5         	movff	?___lmul,_randx
 40198  00A678  C072  F2F6         	movff	?___lmul+1,_randx+1
 40199  00A67C  C073  F2F7         	movff	?___lmul+2,_randx+2
 40200  00A680  C074  F2F8         	movff	?___lmul+3,_randx+3
 40201                           
 40202                           ; BSR set to: 0
 40203  00A684  0E39               	movlw	57
 40204  00A686  0102               	movlb	2	; () banked
 40205  00A688  27F5               	addwf	_randx& (0+255),f,b
 40206  00A68A  0E30               	movlw	48
 40207  00A68C  23F6               	addwfc	(_randx+1)& (0+255),f,b
 40208  00A68E  0E00               	movlw	0
 40209  00A690  23F7               	addwfc	(_randx+2)& (0+255),f,b
 40210  00A692  0E00               	movlw	0
 40211  00A694  23F8               	addwfc	(_randx+3)& (0+255),f,b
 40212                           
 40213                           ; BSR set to: 2
 40214  00A696  0EFF               	movlw	255
 40215  00A698  15F7               	andwf	(_randx+2)& (0+255),w,b
 40216  00A69A  0100               	movlb	0	; () banked
 40217  00A69C  6F7D               	movwf	?_rand& (0+255),b
 40218  00A69E  0E7F               	movlw	127
 40219  00A6A0  0102               	movlb	2	; () banked
 40220  00A6A2  15F8               	andwf	(_randx+3)& (0+255),w,b
 40221  00A6A4  0100               	movlb	0	; () banked
 40222  00A6A6  6F7E               	movwf	(?_rand+1)& (0+255),b
 40223                           
 40224                           ; BSR set to: 0
 40225  00A6A8  0012               	return		;funcret
 40226  00A6AA                     __end_of_rand:
 40227                           	callstack 0
 40228                           
 40229 ;; *************** function ___lmul *****************
 40230 ;; Defined at:
 40231 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c"
 40232 ;; Parameters:    Size  Location     Type
 40233 ;;  multiplier      4   17[BANK0 ] unsigned long 
 40234 ;;  multiplicand    4   21[BANK0 ] unsigned long 
 40235 ;; Auto vars:     Size  Location     Type
 40236 ;;  product         4   25[BANK0 ] unsigned long 
 40237 ;; Return value:  Size  Location     Type
 40238 ;;                  4   17[BANK0 ] unsigned long 
 40239 ;; Registers used:
 40240 ;;		wreg, status,2, status,0
 40241 ;; Tracked objects:
 40242 ;;		On entry : 3F/0
 40243 ;;		On exit  : 3F/0
 40244 ;;		Unchanged: 0/0
 40245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40246 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40247 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40249 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40250 ;;Total ram usage:       12 bytes
 40251 ;; Hardware stack levels used:    1
 40252 ;; Hardware stack levels required when called:   11
 40253 ;; This function calls:
 40254 ;;		Nothing
 40255 ;; This function is called by:
 40256 ;;		_rand
 40257 ;;		_strtol
 40258 ;; This function uses a non-reentrant model
 40259 ;;
 40260                           
 40261                           	psect	text219
 40262  00A7B8                     __ptext219:
 40263                           	callstack 0
 40264  00A7B8                     ___lmul:
 40265                           	callstack 13
 40266                           
 40267                           ; BSR set to: 0
 40268                           ;incstack = 0
 40269  00A7B8  0E00               	movlw	0
 40270  00A7BA  0100               	movlb	0	; () banked
 40271  00A7BC  6F79               	movwf	___lmul@product& (0+255),b
 40272  00A7BE  0E00               	movlw	0
 40273  00A7C0  6F7A               	movwf	(___lmul@product+1)& (0+255),b
 40274  00A7C2  0E00               	movlw	0
 40275  00A7C4  6F7B               	movwf	(___lmul@product+2)& (0+255),b
 40276  00A7C6  0E00               	movlw	0
 40277  00A7C8  6F7C               	movwf	(___lmul@product+3)& (0+255),b
 40278  00A7CA                     l17612:
 40279                           
 40280                           ; BSR set to: 0
 40281  00A7CA  A171               	btfss	___lmul@multiplier& (0+255),0,b
 40282  00A7CC  D008               	goto	l17616
 40283                           
 40284                           ; BSR set to: 0
 40285  00A7CE  5175               	movf	___lmul@multiplicand& (0+255),w,b
 40286  00A7D0  2779               	addwf	___lmul@product& (0+255),f,b
 40287  00A7D2  5176               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 40288  00A7D4  237A               	addwfc	(___lmul@product+1)& (0+255),f,b
 40289  00A7D6  5177               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 40290  00A7D8  237B               	addwfc	(___lmul@product+2)& (0+255),f,b
 40291  00A7DA  5178               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 40292  00A7DC  237C               	addwfc	(___lmul@product+3)& (0+255),f,b
 40293  00A7DE                     l17616:
 40294                           
 40295                           ; BSR set to: 0
 40296  00A7DE  90D8               	bcf	status,0,c
 40297  00A7E0  3775               	rlcf	___lmul@multiplicand& (0+255),f,b
 40298  00A7E2  3776               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 40299  00A7E4  3777               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 40300  00A7E6  3778               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 40301                           
 40302                           ; BSR set to: 0
 40303  00A7E8  90D8               	bcf	status,0,c
 40304  00A7EA  3374               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 40305  00A7EC  3373               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 40306  00A7EE  3372               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 40307  00A7F0  3371               	rrcf	___lmul@multiplier& (0+255),f,b
 40308  00A7F2  5171               	movf	___lmul@multiplier& (0+255),w,b
 40309  00A7F4  1172               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 40310  00A7F6  1173               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 40311  00A7F8  1174               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 40312  00A7FA  A4D8               	btfss	status,2,c
 40313  00A7FC  D7E6               	goto	l17612
 40314                           
 40315                           ; BSR set to: 0
 40316  00A7FE  C079  F071         	movff	___lmul@product,?___lmul
 40317  00A802  C07A  F072         	movff	___lmul@product+1,?___lmul+1
 40318  00A806  C07B  F073         	movff	___lmul@product+2,?___lmul+2
 40319  00A80A  C07C  F074         	movff	___lmul@product+3,?___lmul+3
 40320                           
 40321                           ; BSR set to: 0
 40322  00A80E  0012               	return		;funcret
 40323  00A810                     __end_of___lmul:
 40324                           	callstack 0
 40325                           
 40326 ;; *************** function _nwkRoutePrepareTx *****************
 40327 ;; Defined at:
 40328 ;;		line 274 in file "../nwk/nwk_src/nwkRoute.c"
 40329 ;; Parameters:    Size  Location     Type
 40330 ;;  frame           2   28[BANK0 ] PTR struct NwkFrame_t
 40331 ;;		 -> nwkFrameFrames(690), NULL(0), 
 40332 ;; Auto vars:     Size  Location     Type
 40333 ;;  header          2   32[BANK0 ] PTR struct NwkFrameHeade
 40334 ;;		 -> nwkFrameFrames..(128), nwkFrameFrames(690), NULL(0), 
 40335 ;; Return value:  Size  Location     Type
 40336 ;;                  1    wreg      void 
 40337 ;; Registers used:
 40338 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40339 ;; Tracked objects:
 40340 ;;		On entry : 3F/0
 40341 ;;		On exit  : 3F/0
 40342 ;;		Unchanged: 0/0
 40343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40344 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40345 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40346 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40347 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40348 ;;Total ram usage:        6 bytes
 40349 ;; Hardware stack levels used:    1
 40350 ;; Hardware stack levels required when called:   13
 40351 ;; This function calls:
 40352 ;;		_NWK_GroupIsMember
 40353 ;;		_NWK_RouteNextHop
 40354 ;; This function is called by:
 40355 ;;		_nwkTxFrame
 40356 ;; This function uses a non-reentrant model
 40357 ;;
 40358                           
 40359                           	psect	text220
 40360  00697C                     __ptext220:
 40361                           	callstack 0
 40362  00697C                     _nwkRoutePrepareTx:
 40363                           	callstack 11
 40364                           
 40365                           ;../nwk/nwk_src/nwkRoute.c: 274: void nwkRoutePrepareTx(NwkFrame_t *frame);../nwk/nwk_sr
      +                          c/nwkRoute.c: 275: {;../nwk/nwk_src/nwkRoute.c: 276:   NwkFrameHeader_t *header = &frame
      +                          ->header;
 40366                           
 40367                           ; BSR set to: 0
 40368                           ;incstack = 0
 40369  00697C  0E02               	movlw	2
 40370  00697E  0100               	movlb	0	; force () banked
 40371  006980  257C               	addwf	nwkRoutePrepareTx@frame& (0+255),w,b
 40372  006982  0100               	movlb	0	; force () banked
 40373  006984  6F80               	movwf	nwkRoutePrepareTx@header& (0+255),b
 40374  006986  0E00               	movlw	0
 40375  006988  0100               	movlb	0	; force () banked
 40376  00698A  217D               	addwfc	(nwkRoutePrepareTx@frame+1)& (0+255),w,b
 40377  00698C  0100               	movlb	0	; force () banked
 40378  00698E  6F81               	movwf	(nwkRoutePrepareTx@header+1)& (0+255),b
 40379                           
 40380                           ; BSR set to: 0
 40381                           ;../nwk/nwk_src/nwkRoute.c: 278:   if (0xffff == header->nwkDstAddr)
 40382  006990  0100               	movlb	0	; force () banked
 40383  006992  EE20 F00D          	lfsr	2,13
 40384  006996  5180               	movf	nwkRoutePrepareTx@header& (0+255),w,b
 40385  006998  26D9               	addwf	fsr2l,f,c
 40386  00699A  5181               	movf	(nwkRoutePrepareTx@header+1)& (0+255),w,b
 40387  00699C  22DA               	addwfc	fsr2h,f,c
 40388  00699E  28DE               	incf	postinc2,w,c
 40389  0069A0  E10F               	bnz	l18088
 40390  0069A2  28DE               	incf	postinc2,w,c
 40391  0069A4  A4D8               	btfss	status,2,c
 40392  0069A6  D00C               	goto	l18088
 40393                           
 40394                           ; BSR set to: 0
 40395                           ;../nwk/nwk_src/nwkRoute.c: 279:   {;../nwk/nwk_src/nwkRoute.c: 280:     header->macDstA
      +                          ddr = 0xffff;
 40396  0069A8  0100               	movlb	0	; force () banked
 40397  0069AA  EE20 F005          	lfsr	2,5
 40398  0069AE  5180               	movf	nwkRoutePrepareTx@header& (0+255),w,b
 40399  0069B0  26D9               	addwf	fsr2l,f,c
 40400  0069B2  5181               	movf	(nwkRoutePrepareTx@header+1)& (0+255),w,b
 40401  0069B4  22DA               	addwfc	fsr2h,f,c
 40402  0069B6  0EFF               	movlw	255
 40403  0069B8  6EDE               	movwf	postinc2,c
 40404  0069BA  0EFF               	movlw	255
 40405  0069BC  6EDD               	movwf	postdec2,c
 40406                           
 40407                           ;../nwk/nwk_src/nwkRoute.c: 281:   }
 40408  0069BE  0012               	return	
 40409  0069C0                     l18088:
 40410                           
 40411                           ; BSR set to: 0
 40412  0069C0  0100               	movlb	0	; force () banked
 40413  0069C2  EE20 F009          	lfsr	2,9
 40414  0069C6  5180               	movf	nwkRoutePrepareTx@header& (0+255),w,b
 40415  0069C8  26D9               	addwf	fsr2l,f,c
 40416  0069CA  5181               	movf	(nwkRoutePrepareTx@header+1)& (0+255),w,b
 40417  0069CC  22DA               	addwfc	fsr2h,f,c
 40418  0069CE  A4DF               	btfss	indf2,2,c
 40419  0069D0  D014               	goto	l18092
 40420                           
 40421                           ; BSR set to: 0
 40422                           ;../nwk/nwk_src/nwkRoute.c: 284:   {;../nwk/nwk_src/nwkRoute.c: 285:     header->macDstA
      +                          ddr = header->nwkDstAddr;
 40423  0069D2  0100               	movlb	0	; force () banked
 40424  0069D4  EE20 F00D          	lfsr	2,13
 40425  0069D8  5180               	movf	nwkRoutePrepareTx@header& (0+255),w,b
 40426  0069DA  26D9               	addwf	fsr2l,f,c
 40427  0069DC  5181               	movf	(nwkRoutePrepareTx@header+1)& (0+255),w,b
 40428  0069DE  22DA               	addwfc	fsr2h,f,c
 40429  0069E0  EE00 F005          	lfsr	0,5
 40430  0069E4  5180               	movf	nwkRoutePrepareTx@header& (0+255),w,b
 40431  0069E6  26E9               	addwf	fsr0l,f,c
 40432  0069E8  5181               	movf	(nwkRoutePrepareTx@header+1)& (0+255),w,b
 40433  0069EA  22EA               	addwfc	fsr0h,f,c
 40434  0069EC  006F FF7B FFEE     	movff	postinc2,postinc0
 40435  0069F2  006F FF77 FFED     	movff	postdec2,postdec0
 40436                           
 40437                           ;../nwk/nwk_src/nwkRoute.c: 286:   }
 40438  0069F8  0012               	return	
 40439  0069FA                     l18092:
 40440                           
 40441                           ; BSR set to: 0
 40442  0069FA  0100               	movlb	0	; force () banked
 40443  0069FC  EE20 F009          	lfsr	2,9
 40444  006A00  5180               	movf	nwkRoutePrepareTx@header& (0+255),w,b
 40445  006A02  26D9               	addwf	fsr2l,f,c
 40446  006A04  5181               	movf	(nwkRoutePrepareTx@header+1)& (0+255),w,b
 40447  006A06  22DA               	addwfc	fsr2h,f,c
 40448  006A08  A6DF               	btfss	indf2,3,c
 40449  006A0A  D025               	goto	l18098
 40450                           
 40451                           ; BSR set to: 0
 40452  006A0C  0100               	movlb	0	; force () banked
 40453  006A0E  EE20 F00D          	lfsr	2,13
 40454  006A12  5180               	movf	nwkRoutePrepareTx@header& (0+255),w,b
 40455  006A14  26D9               	addwf	fsr2l,f,c
 40456  006A16  5181               	movf	(nwkRoutePrepareTx@header+1)& (0+255),w,b
 40457  006A18  22DA               	addwfc	fsr2h,f,c
 40458  006A1A  006F FF78  F071    	movff	postinc2,NWK_GroupIsMember@group
 40459  006A20  006F FF74  F072    	movff	postdec2,NWK_GroupIsMember@group+1
 40460  006A26  EC6B  F058         	call	_NWK_GroupIsMember	;wreg free
 40461  006A2A  0900               	iorlw	0
 40462  006A2C  B4D8               	btfsc	status,2,c
 40463  006A2E  D013               	goto	l18098
 40464                           
 40465                           ; BSR set to: 0
 40466                           ;../nwk/nwk_src/nwkRoute.c: 290:   {;../nwk/nwk_src/nwkRoute.c: 291:     header->macDstA
      +                          ddr = 0xffff;
 40467  006A30  0100               	movlb	0	; force () banked
 40468  006A32  EE20 F005          	lfsr	2,5
 40469  006A36  5180               	movf	nwkRoutePrepareTx@header& (0+255),w,b
 40470  006A38  26D9               	addwf	fsr2l,f,c
 40471  006A3A  5181               	movf	(nwkRoutePrepareTx@header+1)& (0+255),w,b
 40472  006A3C  22DA               	addwfc	fsr2h,f,c
 40473  006A3E  0EFF               	movlw	255
 40474  006A40  6EDE               	movwf	postinc2,c
 40475  006A42  0EFF               	movlw	255
 40476  006A44  6EDD               	movwf	postdec2,c
 40477                           
 40478                           ;../nwk/nwk_src/nwkRoute.c: 292:     header->nwkFcf.linkLocal = 1;
 40479  006A46  EE20 F009          	lfsr	2,9
 40480  006A4A  5180               	movf	nwkRoutePrepareTx@header& (0+255),w,b
 40481  006A4C  26D9               	addwf	fsr2l,f,c
 40482  006A4E  5181               	movf	(nwkRoutePrepareTx@header+1)& (0+255),w,b
 40483  006A50  22DA               	addwfc	fsr2h,f,c
 40484  006A52  84DF               	bsf	indf2,2,c
 40485                           
 40486                           ;../nwk/nwk_src/nwkRoute.c: 293:   }
 40487  006A54  0012               	return	
 40488  006A56                     l18098:
 40489                           
 40490                           ; BSR set to: 0
 40491                           ;../nwk/nwk_src/nwkRoute.c: 297:   {;../nwk/nwk_src/nwkRoute.c: 298:     header->macDstA
      +                          ddr = NWK_RouteNextHop(header->nwkDstAddr, header->nwkFcf.multicast);
 40492  006A56  0100               	movlb	0	; force () banked
 40493  006A58  EE20 F00D          	lfsr	2,13
 40494  006A5C  5180               	movf	nwkRoutePrepareTx@header& (0+255),w,b
 40495  006A5E  26D9               	addwf	fsr2l,f,c
 40496  006A60  5181               	movf	(nwkRoutePrepareTx@header+1)& (0+255),w,b
 40497  006A62  22DA               	addwfc	fsr2h,f,c
 40498  006A64  006F FF78  F077    	movff	postinc2,NWK_RouteNextHop@dst
 40499  006A6A  006F FF74  F078    	movff	postdec2,NWK_RouteNextHop@dst+1
 40500  006A70  EE20 F009          	lfsr	2,9
 40501  006A74  5180               	movf	nwkRoutePrepareTx@header& (0+255),w,b
 40502  006A76  26D9               	addwf	fsr2l,f,c
 40503  006A78  5181               	movf	(nwkRoutePrepareTx@header+1)& (0+255),w,b
 40504  006A7A  22DA               	addwfc	fsr2h,f,c
 40505  006A7C  0E00               	movlw	0
 40506  006A7E  B6DF               	btfsc	indf2,3,c
 40507  006A80  0E01               	movlw	1
 40508  006A82  0100               	movlb	0	; force () banked
 40509  006A84  6F79               	movwf	NWK_RouteNextHop@multicast& (0+255),b
 40510  006A86  EC05  F057         	call	_NWK_RouteNextHop	;wreg free
 40511  006A8A  0100               	movlb	0	; force () banked
 40512  006A8C  EE20 F005          	lfsr	2,5
 40513  006A90  5180               	movf	nwkRoutePrepareTx@header& (0+255),w,b
 40514  006A92  26D9               	addwf	fsr2l,f,c
 40515  006A94  5181               	movf	(nwkRoutePrepareTx@header+1)& (0+255),w,b
 40516  006A96  22DA               	addwfc	fsr2h,f,c
 40517  006A98  0100               	movlb	0	; force () banked
 40518  006A9A  0060  F1DF  FFDE   	movff	?_NWK_RouteNextHop,postinc2
 40519  006AA0  0060  F1E3  FFDD   	movff	?_NWK_RouteNextHop+1,postdec2
 40520                           
 40521                           ; BSR set to: 0
 40522  006AA6  0012               	return		;funcret
 40523  006AA8                     __end_of_nwkRoutePrepareTx:
 40524                           	callstack 0
 40525                           
 40526 ;; *************** function _NWK_RouteNextHop *****************
 40527 ;; Defined at:
 40528 ;;		line 146 in file "../nwk/nwk_src/nwkRoute.c"
 40529 ;; Parameters:    Size  Location     Type
 40530 ;;  dst             2   23[BANK0 ] unsigned int 
 40531 ;;  multicast       1   25[BANK0 ] unsigned char 
 40532 ;; Auto vars:     Size  Location     Type
 40533 ;;  entry           2   26[BANK0 ] PTR struct NWK_RouteTabl
 40534 ;;		 -> nwkRouteTable(224), NULL(0), 
 40535 ;; Return value:  Size  Location     Type
 40536 ;;                  2   23[BANK0 ] unsigned int 
 40537 ;; Registers used:
 40538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40539 ;; Tracked objects:
 40540 ;;		On entry : 3F/0
 40541 ;;		On exit  : 3F/0
 40542 ;;		Unchanged: 0/0
 40543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40544 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40545 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40547 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40548 ;;Total ram usage:        5 bytes
 40549 ;; Hardware stack levels used:    1
 40550 ;; Hardware stack levels required when called:   12
 40551 ;; This function calls:
 40552 ;;		_NWK_RouteFindEntry
 40553 ;; This function is called by:
 40554 ;;		_nwkRoutePrepareTx
 40555 ;;		_nwkRouteFrame
 40556 ;; This function uses a non-reentrant model
 40557 ;;
 40558                           
 40559                           	psect	text221
 40560  00AE0A                     __ptext221:
 40561                           	callstack 0
 40562  00AE0A                     _NWK_RouteNextHop:
 40563                           	callstack 11
 40564                           
 40565                           ;../nwk/nwk_src/nwkRoute.c: 146: uint16_t NWK_RouteNextHop(uint16_t dst, uint8_t multica
      +                          st);../nwk/nwk_src/nwkRoute.c: 147: {;../nwk/nwk_src/nwkRoute.c: 148:   NWK_RouteTableEn
      +                          try_t *entry;;../nwk/nwk_src/nwkRoute.c: 150:   entry = NWK_RouteFindEntry(dst, multicas
      +                          t);
 40566                           
 40567                           ; BSR set to: 0
 40568                           ;incstack = 0
 40569  00AE0A  C077  F071         	movff	NWK_RouteNextHop@dst,NWK_RouteFindEntry@dst
 40570  00AE0E  C078  F072         	movff	NWK_RouteNextHop@dst+1,NWK_RouteFindEntry@dst+1
 40571  00AE12  C079  F073         	movff	NWK_RouteNextHop@multicast,NWK_RouteFindEntry@multicast
 40572  00AE16  EC41  F050         	call	_NWK_RouteFindEntry	;wreg free
 40573  00AE1A  C071  F07A         	movff	?_NWK_RouteFindEntry,NWK_RouteNextHop@entry
 40574  00AE1E  C072  F07B         	movff	?_NWK_RouteFindEntry+1,NWK_RouteNextHop@entry+1
 40575                           
 40576                           ; BSR set to: 0
 40577                           ;../nwk/nwk_src/nwkRoute.c: 151:   if (entry)
 40578  00AE22  0100               	movlb	0	; force () banked
 40579  00AE24  517A               	movf	NWK_RouteNextHop@entry& (0+255),w,b
 40580  00AE26  117B               	iorwf	(NWK_RouteNextHop@entry+1)& (0+255),w,b
 40581  00AE28  B4D8               	btfsc	status,2,c
 40582  00AE2A  D00E               	goto	l2865
 40583                           
 40584                           ; BSR set to: 0
 40585                           ;../nwk/nwk_src/nwkRoute.c: 152:     return entry->nextHopAddr;
 40586  00AE2C  0100               	movlb	0	; force () banked
 40587  00AE2E  EE20 F003          	lfsr	2,3
 40588  00AE32  517A               	movf	NWK_RouteNextHop@entry& (0+255),w,b
 40589  00AE34  26D9               	addwf	fsr2l,f,c
 40590  00AE36  517B               	movf	(NWK_RouteNextHop@entry+1)& (0+255),w,b
 40591  00AE38  22DA               	addwfc	fsr2h,f,c
 40592  00AE3A  006F FF78  F077    	movff	postinc2,?_NWK_RouteNextHop
 40593  00AE40  006F FF74  F078    	movff	postdec2,?_NWK_RouteNextHop+1
 40594  00AE46  0012               	return	
 40595  00AE48                     l2865:
 40596                           
 40597                           ; BSR set to: 0
 40598                           ;../nwk/nwk_src/nwkRoute.c: 154:   return 0xffff;
 40599  00AE48  0100               	movlb	0	; force () banked
 40600  00AE4A  6977               	setf	?_NWK_RouteNextHop& (0+255),b
 40601  00AE4C  6978               	setf	(?_NWK_RouteNextHop+1)& (0+255),b
 40602                           
 40603                           ; BSR set to: 0
 40604  00AE4E  0012               	return		;funcret
 40605  00AE50                     __end_of_NWK_RouteNextHop:
 40606                           	callstack 0
 40607                           
 40608 ;; *************** function _NWK_RouteFindEntry *****************
 40609 ;; Defined at:
 40610 ;;		line 93 in file "../nwk/nwk_src/nwkRoute.c"
 40611 ;; Parameters:    Size  Location     Type
 40612 ;;  dst             2   17[BANK0 ] unsigned int 
 40613 ;;  multicast       1   19[BANK0 ] unsigned char 
 40614 ;; Auto vars:     Size  Location     Type
 40615 ;;  i               1   22[BANK0 ] unsigned char 
 40616 ;; Return value:  Size  Location     Type
 40617 ;;                  2   17[BANK0 ] PTR struct NWK_RouteTabl
 40618 ;; Registers used:
 40619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 40620 ;; Tracked objects:
 40621 ;;		On entry : 0/0
 40622 ;;		On exit  : 3F/0
 40623 ;;		Unchanged: 0/0
 40624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40625 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40626 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40627 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40628 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40629 ;;Total ram usage:        6 bytes
 40630 ;; Hardware stack levels used:    1
 40631 ;; Hardware stack levels required when called:   11
 40632 ;; This function calls:
 40633 ;;		Nothing
 40634 ;; This function is called by:
 40635 ;;		_NWK_RouteNextHop
 40636 ;;		_nwkRouteRemove
 40637 ;;		_nwkRouteFrameReceived
 40638 ;;		_nwkRouteFrameSent
 40639 ;; This function uses a non-reentrant model
 40640 ;;
 40641                           
 40642                           	psect	text222
 40643  00A082                     __ptext222:
 40644                           	callstack 0
 40645  00A082                     _NWK_RouteFindEntry:
 40646                           	callstack 15
 40647                           
 40648                           ;../nwk/nwk_src/nwkRoute.c: 93: NWK_RouteTableEntry_t *NWK_RouteFindEntry(uint16_t dst, 
      +                          uint8_t multicast);../nwk/nwk_src/nwkRoute.c: 94: {;../nwk/nwk_src/nwkRoute.c: 95:   for
      +                           (uint8_t i = 0; i < 32; i++)
 40649                           
 40650                           ; BSR set to: 0
 40651                           ;incstack = 0
 40652  00A082  0E00               	movlw	0
 40653  00A084  0100               	movlb	0	; force () banked
 40654  00A086  6F76               	movwf	NWK_RouteFindEntry@i& (0+255),b
 40655  00A088  D031               	goto	l17598
 40656  00A08A                     l17588:
 40657                           
 40658                           ; BSR set to: 0
 40659                           ;../nwk/nwk_src/nwkRoute.c: 96:   {;../nwk/nwk_src/nwkRoute.c: 97:     if (nwkRouteTable
      +                          [i].dstAddr == dst &&
 40660  00A08A  0100               	movlb	0	; force () banked
 40661  00A08C  5176               	movf	NWK_RouteFindEntry@i& (0+255),w,b
 40662  00A08E  0D07               	mullw	7
 40663  00A090  0E01               	movlw	low (_nwkRouteTable+1)
 40664  00A092  24F3               	addwf	243,w,c
 40665  00A094  6ED9               	movwf	fsr2l,c
 40666  00A096  0E08               	movlw	high (_nwkRouteTable+1)
 40667  00A098  20F4               	addwfc	prodh,w,c
 40668  00A09A  6EDA               	movwf	fsr2h,c
 40669  00A09C  0100               	movlb	0	; force () banked
 40670  00A09E  5171               	movf	NWK_RouteFindEntry@dst& (0+255),w,b
 40671  00A0A0  18DE               	xorwf	postinc2,w,c
 40672  00A0A2  E122               	bnz	l17596
 40673  00A0A4  5172               	movf	(NWK_RouteFindEntry@dst+1)& (0+255),w,b
 40674  00A0A6  18DE               	xorwf	postinc2,w,c
 40675  00A0A8  A4D8               	btfss	status,2,c
 40676  00A0AA  D01E               	goto	l17596
 40677                           
 40678                           ; BSR set to: 0
 40679  00A0AC  0100               	movlb	0	; force () banked
 40680  00A0AE  5176               	movf	NWK_RouteFindEntry@i& (0+255),w,b
 40681  00A0B0  0D07               	mullw	7
 40682  00A0B2  0E00               	movlw	low _nwkRouteTable
 40683  00A0B4  24F3               	addwf	243,w,c
 40684  00A0B6  6ED9               	movwf	fsr2l,c
 40685  00A0B8  0E08               	movlw	high _nwkRouteTable
 40686  00A0BA  20F4               	addwfc	prodh,w,c
 40687  00A0BC  6EDA               	movwf	fsr2h,c
 40688  00A0BE  0108               	movlb	8	; force () banked
 40689  00A0C0  A2DF               	btfss	indf2,1,c
 40690  00A0C2  D002               	goto	u14990
 40691  00A0C4  0E01               	movlw	1
 40692  00A0C6  D001               	goto	u14996
 40693  00A0C8                     u14990:
 40694  00A0C8  0E00               	movlw	0
 40695  00A0CA                     u14996:
 40696  00A0CA  0100               	movlb	0	; force () banked
 40697  00A0CC  1973               	xorwf	NWK_RouteFindEntry@multicast& (0+255),w,b
 40698  00A0CE  A4D8               	btfss	status,2,c
 40699  00A0D0  D00B               	goto	l17596
 40700                           
 40701                           ; BSR set to: 0
 40702                           ;../nwk/nwk_src/nwkRoute.c: 99:       return &nwkRouteTable[i];
 40703  00A0D2  0100               	movlb	0	; force () banked
 40704  00A0D4  5176               	movf	NWK_RouteFindEntry@i& (0+255),w,b
 40705  00A0D6  0D07               	mullw	7
 40706  00A0D8  0E00               	movlw	low _nwkRouteTable
 40707  00A0DA  24F3               	addwf	243,w,c
 40708  00A0DC  0100               	movlb	0	; force () banked
 40709  00A0DE  6F71               	movwf	?_NWK_RouteFindEntry& (0+255),b
 40710  00A0E0  0E08               	movlw	high _nwkRouteTable
 40711  00A0E2  20F4               	addwfc	prodh,w,c
 40712  00A0E4  6F72               	movwf	(?_NWK_RouteFindEntry+1)& (0+255),b
 40713  00A0E6  0012               	return	
 40714  00A0E8                     l17596:
 40715                           
 40716                           ; BSR set to: 0
 40717                           ;../nwk/nwk_src/nwkRoute.c: 100:   }
 40718  00A0E8  0100               	movlb	0	; force () banked
 40719  00A0EA  2B76               	incf	NWK_RouteFindEntry@i& (0+255),f,b
 40720  00A0EC                     l17598:
 40721                           
 40722                           ; BSR set to: 0
 40723  00A0EC  0E1F               	movlw	31
 40724  00A0EE  0100               	movlb	0	; force () banked
 40725  00A0F0  6576               	cpfsgt	NWK_RouteFindEntry@i& (0+255),b
 40726  00A0F2  D7CB               	goto	l17588
 40727                           
 40728                           ; BSR set to: 0
 40729                           ;../nwk/nwk_src/nwkRoute.c: 102:   return (0);
 40730  00A0F4  0E00               	movlw	0
 40731  00A0F6  0100               	movlb	0	; force () banked
 40732  00A0F8  6F71               	movwf	?_NWK_RouteFindEntry& (0+255),b
 40733  00A0FA  0E00               	movlw	0
 40734  00A0FC  6F72               	movwf	(?_NWK_RouteFindEntry+1)& (0+255),b
 40735                           
 40736                           ; BSR set to: 0
 40737  00A0FE  0012               	return		;funcret
 40738  00A100                     __end_of_NWK_RouteFindEntry:
 40739                           	callstack 0
 40740                           
 40741 ;; *************** function _NWK_GroupIsMember *****************
 40742 ;; Defined at:
 40743 ;;		line 101 in file "../nwk/nwk_src/nwkGroup.c"
 40744 ;; Parameters:    Size  Location     Type
 40745 ;;  group           2   17[BANK0 ] unsigned int 
 40746 ;; Auto vars:     Size  Location     Type
 40747 ;;  i               1   21[BANK0 ] unsigned char 
 40748 ;; Return value:  Size  Location     Type
 40749 ;;                  1    wreg      _Bool 
 40750 ;; Registers used:
 40751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 40752 ;; Tracked objects:
 40753 ;;		On entry : 3F/0
 40754 ;;		On exit  : 3F/0
 40755 ;;		Unchanged: 0/0
 40756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40757 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40758 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40759 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40760 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40761 ;;Total ram usage:        5 bytes
 40762 ;; Hardware stack levels used:    1
 40763 ;; Hardware stack levels required when called:   11
 40764 ;; This function calls:
 40765 ;;		Nothing
 40766 ;; This function is called by:
 40767 ;;		_check_multicast_rx
 40768 ;;		_nwkRoutePrepareTx
 40769 ;;		_nwkRxHandleReceivedFrame
 40770 ;; This function uses a non-reentrant model
 40771 ;;
 40772                           
 40773                           	psect	text223
 40774  00B0D6                     __ptext223:
 40775                           	callstack 0
 40776  00B0D6                     _NWK_GroupIsMember:
 40777                           	callstack 15
 40778                           
 40779                           ;../nwk/nwk_src/nwkGroup.c: 101: _Bool NWK_GroupIsMember(uint16_t group);../nwk/nwk_src/
      +                          nwkGroup.c: 102: {;../nwk/nwk_src/nwkGroup.c: 103:   for (uint8_t i = 0; i < 10; i++)
 40780                           
 40781                           ; BSR set to: 0
 40782                           ;incstack = 0
 40783  00B0D6  0E00               	movlw	0
 40784  00B0D8  0100               	movlb	0	; force () banked
 40785  00B0DA  6F75               	movwf	NWK_GroupIsMember@i& (0+255),b
 40786  00B0DC  D015               	goto	l17790
 40787  00B0DE                     l17782:
 40788                           
 40789                           ; BSR set to: 0
 40790                           ;../nwk/nwk_src/nwkGroup.c: 104:     if (group == nwkGroups[i])
 40791  00B0DE  0100               	movlb	0	; force () banked
 40792  00B0E0  5175               	movf	NWK_GroupIsMember@i& (0+255),w,b
 40793  00B0E2  0D02               	mullw	2
 40794  00B0E4  0E72               	movlw	low _nwkGroups
 40795  00B0E6  24F3               	addwf	243,w,c
 40796  00B0E8  6ED9               	movwf	fsr2l,c
 40797  00B0EA  0E03               	movlw	high _nwkGroups
 40798  00B0EC  20F4               	addwfc	prodh,w,c
 40799  00B0EE  6EDA               	movwf	fsr2h,c
 40800  00B0F0  0100               	movlb	0	; force () banked
 40801  00B0F2  5171               	movf	NWK_GroupIsMember@group& (0+255),w,b
 40802  00B0F4  18DE               	xorwf	postinc2,w,c
 40803  00B0F6  E106               	bnz	l17788
 40804  00B0F8  5172               	movf	(NWK_GroupIsMember@group+1)& (0+255),w,b
 40805  00B0FA  18DE               	xorwf	postinc2,w,c
 40806  00B0FC  A4D8               	btfss	status,2,c
 40807  00B0FE  D002               	goto	l17788
 40808                           
 40809                           ; BSR set to: 0
 40810                           ;../nwk/nwk_src/nwkGroup.c: 105:       return 1;
 40811  00B100  0E01               	movlw	1
 40812  00B102  0012               	return	
 40813  00B104                     l17788:
 40814                           
 40815                           ; BSR set to: 0
 40816  00B104  0100               	movlb	0	; force () banked
 40817  00B106  2B75               	incf	NWK_GroupIsMember@i& (0+255),f,b
 40818  00B108                     l17790:
 40819                           
 40820                           ; BSR set to: 0
 40821  00B108  0E09               	movlw	9
 40822  00B10A  0100               	movlb	0	; force () banked
 40823  00B10C  6575               	cpfsgt	NWK_GroupIsMember@i& (0+255),b
 40824  00B10E  D7E7               	goto	l17782
 40825                           
 40826                           ; BSR set to: 0
 40827                           ;../nwk/nwk_src/nwkGroup.c: 106:   return 0;
 40828  00B110  0E00               	movlw	0
 40829                           
 40830                           ; BSR set to: 0
 40831  00B112  0012               	return		;funcret
 40832  00B114                     __end_of_NWK_GroupIsMember:
 40833                           	callstack 0
 40834                           
 40835 ;; *************** function _nwkIsRouter *****************
 40836 ;; Defined at:
 40837 ;;		line 381 in file "../nwk/nwk_src/nwkRoute.c"
 40838 ;; Parameters:    Size  Location     Type
 40839 ;;		None
 40840 ;; Auto vars:     Size  Location     Type
 40841 ;;		None
 40842 ;; Return value:  Size  Location     Type
 40843 ;;                  1    wreg      _Bool 
 40844 ;; Registers used:
 40845 ;;		wreg, status,2
 40846 ;; Tracked objects:
 40847 ;;		On entry : 3F/0
 40848 ;;		On exit  : 3F/2
 40849 ;;		Unchanged: 0/0
 40850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40855 ;;Total ram usage:        0 bytes
 40856 ;; Hardware stack levels used:    1
 40857 ;; Hardware stack levels required when called:   11
 40858 ;; This function calls:
 40859 ;;		Nothing
 40860 ;; This function is called by:
 40861 ;;		_nwkDataReqSendFrame
 40862 ;;		_nwkRouteFrame
 40863 ;; This function uses a non-reentrant model
 40864 ;;
 40865                           
 40866                           	psect	text224
 40867  00BD5E                     __ptext224:
 40868                           	callstack 0
 40869  00BD5E                     _nwkIsRouter:
 40870                           	callstack 15
 40871                           
 40872                           ;../nwk/nwk_src/nwkRoute.c: 382:     return nwk_RoutingEnabled;
 40873                           
 40874                           ; BSR set to: 0
 40875                           ;incstack = 0
 40876  00BD5E  0102               	movlb	2	; force () banked
 40877  00BD60  5155               	movf	_nwk_RoutingEnabled& (0+255),w,b
 40878                           
 40879                           ; BSR set to: 2
 40880  00BD62  0012               	return		;funcret
 40881  00BD64                     __end_of_nwkIsRouter:
 40882                           	callstack 0
 40883                           
 40884 ;; *************** function _nwkFrameAlloc *****************
 40885 ;; Defined at:
 40886 ;;		line 80 in file "../nwk/nwk_src/nwkFrame.c"
 40887 ;; Parameters:    Size  Location     Type
 40888 ;;		None
 40889 ;; Auto vars:     Size  Location     Type
 40890 ;;  i               1   29[BANK0 ] unsigned char 
 40891 ;; Return value:  Size  Location     Type
 40892 ;;                  2   25[BANK0 ] PTR struct NwkFrame_t
 40893 ;; Registers used:
 40894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40895 ;; Tracked objects:
 40896 ;;		On entry : 0/0
 40897 ;;		On exit  : 3F/0
 40898 ;;		Unchanged: 0/0
 40899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40900 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40901 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40902 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40903 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40904 ;;Total ram usage:        5 bytes
 40905 ;; Hardware stack levels used:    1
 40906 ;; Hardware stack levels required when called:   12
 40907 ;; This function calls:
 40908 ;;		_memset
 40909 ;; This function is called by:
 40910 ;;		_nwkDataReqSendFrame
 40911 ;;		_nwkRouteSendRouteError
 40912 ;;		_PHY_DataInd
 40913 ;;		_nwkRxSendAck
 40914 ;;		_nwkTxBroadcastFrame
 40915 ;; This function uses a non-reentrant model
 40916 ;;
 40917                           
 40918                           	psect	text225
 40919  008624                     __ptext225:
 40920                           	callstack 0
 40921  008624                     _nwkFrameAlloc:
 40922                           	callstack 13
 40923                           
 40924                           ;../nwk/nwk_src/nwkFrame.c: 82:   for (uint8_t i = 0; i < 5; i++)
 40925                           
 40926                           ; BSR set to: 2
 40927                           ;incstack = 0
 40928  008624  0E00               	movlw	0
 40929  008626  0100               	movlb	0	; force () banked
 40930  008628  6F7D               	movwf	nwkFrameAlloc@i& (0+255),b
 40931  00862A  D05C               	goto	l18278
 40932  00862C                     l18262:
 40933                           
 40934                           ; BSR set to: 0
 40935                           ;../nwk/nwk_src/nwkFrame.c: 83:   {;../nwk/nwk_src/nwkFrame.c: 84:     if (NWK_FRAME_STA
      +                          TE_FREE == nwkFrameFrames[i].state)
 40936  00862C  0100               	movlb	0	; force () banked
 40937  00862E  517D               	movf	nwkFrameAlloc@i& (0+255),w,b
 40938  008630  0D8A               	mullw	138
 40939  008632  0EA0               	movlw	low _nwkFrameFrames
 40940  008634  24F3               	addwf	243,w,c
 40941  008636  6ED9               	movwf	fsr2l,c
 40942  008638  0E0A               	movlw	high _nwkFrameFrames
 40943  00863A  20F4               	addwfc	prodh,w,c
 40944  00863C  6EDA               	movwf	fsr2h,c
 40945  00863E  50DF               	movf	indf2,w,c
 40946  008640  A4D8               	btfss	status,2,c
 40947  008642  D04E               	goto	l18276
 40948                           
 40949                           ; BSR set to: 0
 40950                           ;../nwk/nwk_src/nwkFrame.c: 85:     {;../nwk/nwk_src/nwkFrame.c: 86:       memset(&nwkFr
      +                          ameFrames[i], 0, sizeof(NwkFrame_t));
 40951  008644  0100               	movlb	0	; force () banked
 40952  008646  517D               	movf	nwkFrameAlloc@i& (0+255),w,b
 40953  008648  0D8A               	mullw	138
 40954  00864A  0EA0               	movlw	low _nwkFrameFrames
 40955  00864C  24F3               	addwf	243,w,c
 40956  00864E  0100               	movlb	0	; force () banked
 40957  008650  6F71               	movwf	memset@p1& (0+255),b
 40958  008652  0E0A               	movlw	high _nwkFrameFrames
 40959  008654  20F4               	addwfc	prodh,w,c
 40960  008656  6F72               	movwf	(memset@p1+1)& (0+255),b
 40961  008658  0E00               	movlw	0
 40962  00865A  0100               	movlb	0	; force () banked
 40963  00865C  6F74               	movwf	(memset@c+1)& (0+255),b
 40964  00865E  0E00               	movlw	0
 40965  008660  6F73               	movwf	memset@c& (0+255),b
 40966  008662  0E00               	movlw	0
 40967  008664  0100               	movlb	0	; force () banked
 40968  008666  6F76               	movwf	(memset@n+1)& (0+255),b
 40969  008668  0E8A               	movlw	138
 40970  00866A  6F75               	movwf	memset@n& (0+255),b
 40971  00866C  ECA8  F058         	call	_memset	;wreg free
 40972                           
 40973                           ; BSR set to: 0
 40974                           ;../nwk/nwk_src/nwkFrame.c: 87:       nwkFrameFrames[i].size = sizeof(NwkFrameHeader_t);
 40975  008670  0100               	movlb	0	; force () banked
 40976  008672  517D               	movf	nwkFrameAlloc@i& (0+255),w,b
 40977  008674  0D8A               	mullw	138
 40978  008676  0EA1               	movlw	low (_nwkFrameFrames+1)
 40979  008678  24F3               	addwf	243,w,c
 40980  00867A  6ED9               	movwf	fsr2l,c
 40981  00867C  0E0A               	movlw	high (_nwkFrameFrames+1)
 40982  00867E  20F4               	addwfc	prodh,w,c
 40983  008680  6EDA               	movwf	fsr2h,c
 40984  008682  0E10               	movlw	16
 40985  008684  6EDF               	movwf	indf2,c
 40986                           
 40987                           ; BSR set to: 0
 40988                           ;../nwk/nwk_src/nwkFrame.c: 88:       nwkFrameFrames[i].payload = nwkFrameFrames[i].data
      +                           + sizeof(NwkFrameHeader_t);
 40989  008686  0100               	movlb	0	; force () banked
 40990  008688  517D               	movf	nwkFrameAlloc@i& (0+255),w,b
 40991  00868A  0D8A               	mullw	138
 40992  00868C  0EA0               	movlw	low _nwkFrameFrames
 40993  00868E  0100               	movlb	0	; force () banked
 40994  008690  6F7B               	movwf	??_nwkFrameAlloc& (0+255),b
 40995  008692  0E0A               	movlw	high _nwkFrameFrames
 40996  008694  6F7C               	movwf	(??_nwkFrameAlloc+1)& (0+255),b
 40997  008696  0E12               	movlw	18
 40998  008698  277B               	addwf	??_nwkFrameAlloc& (0+255),f,b
 40999  00869A  0E00               	movlw	0
 41000  00869C  237C               	addwfc	(??_nwkFrameAlloc+1)& (0+255),f,b
 41001  00869E  50F3               	movf	243,w,c
 41002  0086A0  277B               	addwf	??_nwkFrameAlloc& (0+255),f,b
 41003  0086A2  50F4               	movf	244,w,c
 41004  0086A4  237C               	addwfc	(??_nwkFrameAlloc+1)& (0+255),f,b
 41005  0086A6  0100               	movlb	0	; force () banked
 41006  0086A8  517D               	movf	nwkFrameAlloc@i& (0+255),w,b
 41007  0086AA  0D8A               	mullw	138
 41008  0086AC  0E22               	movlw	low (_nwkFrameFrames+130)
 41009  0086AE  24F3               	addwf	243,w,c
 41010  0086B0  6ED9               	movwf	fsr2l,c
 41011  0086B2  0E0B               	movlw	high (_nwkFrameFrames+130)
 41012  0086B4  20F4               	addwfc	prodh,w,c
 41013  0086B6  6EDA               	movwf	fsr2h,c
 41014  0086B8  0060  F1EF  FFDE   	movff	??_nwkFrameAlloc,postinc2
 41015  0086BE  0060  F1F3  FFDD   	movff	??_nwkFrameAlloc+1,postdec2
 41016                           
 41017                           ; BSR set to: 0
 41018                           ;../nwk/nwk_src/nwkFrame.c: 89:       nwkIb.lock++;
 41019  0086C4  0102               	movlb	2	; force () banked
 41020  0086C6  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 41021  0086C8  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 41022                           
 41023                           ; BSR set to: 2
 41024                           ;../nwk/nwk_src/nwkFrame.c: 90:       return &nwkFrameFrames[i];
 41025  0086CA  0100               	movlb	0	; force () banked
 41026  0086CC  517D               	movf	nwkFrameAlloc@i& (0+255),w,b
 41027  0086CE  0D8A               	mullw	138
 41028  0086D0  0EA0               	movlw	low _nwkFrameFrames
 41029  0086D2  24F3               	addwf	243,w,c
 41030  0086D4  0100               	movlb	0	; force () banked
 41031  0086D6  6F79               	movwf	?_nwkFrameAlloc& (0+255),b
 41032  0086D8  0E0A               	movlw	high _nwkFrameFrames
 41033  0086DA  20F4               	addwfc	prodh,w,c
 41034  0086DC  6F7A               	movwf	(?_nwkFrameAlloc+1)& (0+255),b
 41035  0086DE  0012               	return	
 41036  0086E0                     l18276:
 41037                           
 41038                           ; BSR set to: 0
 41039                           ;../nwk/nwk_src/nwkFrame.c: 92:   }
 41040  0086E0  0100               	movlb	0	; force () banked
 41041  0086E2  2B7D               	incf	nwkFrameAlloc@i& (0+255),f,b
 41042  0086E4                     l18278:
 41043                           
 41044                           ; BSR set to: 0
 41045  0086E4  0E04               	movlw	4
 41046  0086E6  0100               	movlb	0	; force () banked
 41047  0086E8  657D               	cpfsgt	nwkFrameAlloc@i& (0+255),b
 41048  0086EA  D7A0               	goto	l18262
 41049                           
 41050                           ; BSR set to: 0
 41051                           ;../nwk/nwk_src/nwkFrame.c: 93:   return (0);
 41052  0086EC  0E00               	movlw	0
 41053  0086EE  0100               	movlb	0	; force () banked
 41054  0086F0  6F79               	movwf	?_nwkFrameAlloc& (0+255),b
 41055  0086F2  0E00               	movlw	0
 41056  0086F4  6F7A               	movwf	(?_nwkFrameAlloc+1)& (0+255),b
 41057                           
 41058                           ; BSR set to: 0
 41059  0086F6  0012               	return		;funcret
 41060  0086F8                     __end_of_nwkFrameAlloc:
 41061                           	callstack 0
 41062                           
 41063 ;; *************** function _memset *****************
 41064 ;; Defined at:
 41065 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\memset.c"
 41066 ;; Parameters:    Size  Location     Type
 41067 ;;  p1              2   17[BANK0 ] PTR void 
 41068 ;;		 -> nwkFrameFrames(690), exract_sink_addr@addrstr(5), tx_buffer.payload(110), cmdSetSink@msgstr(16), 
 41069 ;;		 -> tx_buffer(264), rx_buffer.payload(110), rx_buffer(369), 
 41070 ;;  c               2   19[BANK0 ] int 
 41071 ;;  n               2   21[BANK0 ] unsigned int 
 41072 ;; Auto vars:     Size  Location     Type
 41073 ;;  p               2   23[BANK0 ] PTR unsigned char 
 41074 ;;		 -> nwkFrameFrames(690), exract_sink_addr@addrstr(5), tx_buffer.payload(110), cmdSetSink@msgstr(16), 
 41075 ;;		 -> tx_buffer(264), rx_buffer.payload(110), rx_buffer(369), 
 41076 ;; Return value:  Size  Location     Type
 41077 ;;                  2   17[BANK0 ] PTR void 
 41078 ;; Registers used:
 41079 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41080 ;; Tracked objects:
 41081 ;;		On entry : 3F/0
 41082 ;;		On exit  : 3F/0
 41083 ;;		Unchanged: 0/0
 41084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41085 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41086 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41088 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41089 ;;Total ram usage:        8 bytes
 41090 ;; Hardware stack levels used:    1
 41091 ;; Hardware stack levels required when called:   11
 41092 ;; This function calls:
 41093 ;;		Nothing
 41094 ;; This function is called by:
 41095 ;;		_appDataInd
 41096 ;;		_cmdSetSink
 41097 ;;		_handle_tx_regs
 41098 ;;		_exract_sink_addr
 41099 ;;		_nwkFrameAlloc
 41100 ;; This function uses a non-reentrant model
 41101 ;;
 41102                           
 41103                           	psect	text226
 41104  00B150                     __ptext226:
 41105                           	callstack 0
 41106  00B150                     _memset:
 41107                           	callstack 15
 41108                           
 41109                           ; BSR set to: 0
 41110                           ;incstack = 0
 41111  00B150  C071  F077         	movff	memset@p1,memset@p
 41112  00B154  C072  F078         	movff	memset@p1+1,memset@p+1
 41113  00B158  D00B               	goto	l17802
 41114  00B15A                     l17798:
 41115                           
 41116                           ; BSR set to: 0
 41117  00B15A  0060  F1DF  FFD9   	movff	memset@p,fsr2l
 41118  00B160  0060  F1E3  FFDA   	movff	memset@p+1,fsr2h
 41119  00B166  0060  F1CF  FFDF   	movff	memset@c,indf2
 41120                           
 41121                           ; BSR set to: 0
 41122  00B16C  4B77               	infsnz	memset@p& (0+255),f,b
 41123  00B16E  2B78               	incf	(memset@p+1)& (0+255),f,b
 41124  00B170                     l17802:
 41125  00B170  0100               	movlb	0	; () banked
 41126  00B172  0775               	decf	memset@n& (0+255),f,b
 41127  00B174  A0D8               	btfss	status,0,c
 41128  00B176  0776               	decf	(memset@n+1)& (0+255),f,b
 41129  00B178  2975               	incf	memset@n& (0+255),w,b
 41130  00B17A  E1EF               	bnz	l17798
 41131  00B17C  2976               	incf	(memset@n+1)& (0+255),w,b
 41132  00B17E  A4D8               	btfss	status,2,c
 41133  00B180  D7EC               	goto	l17798
 41134                           
 41135                           ; BSR set to: 0
 41136  00B182  C071  F071         	movff	memset@p1,?_memset
 41137  00B186  C072  F072         	movff	memset@p1+1,?_memset+1
 41138                           
 41139                           ; BSR set to: 0
 41140  00B18A  0012               	return		;funcret
 41141  00B18C                     __end_of_memset:
 41142                           	callstack 0
 41143                           
 41144 ;; *************** function _nwkDataReqConfirm *****************
 41145 ;; Defined at:
 41146 ;;		line 190 in file "../nwk/nwk_src/nwkDataReq.c"
 41147 ;; Parameters:    Size  Location     Type
 41148 ;;  req             2   61[BANK0 ] PTR struct NWK_DataReq_t
 41149 ;;		 -> tx_buffer(264), NULL(0), 
 41150 ;; Auto vars:     Size  Location     Type
 41151 ;;  prev            2   65[BANK0 ] PTR struct NWK_DataReq_t
 41152 ;;		 -> tx_buffer(264), NULL(0), 
 41153 ;; Return value:  Size  Location     Type
 41154 ;;                  1    wreg      void 
 41155 ;; Registers used:
 41156 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41157 ;; Tracked objects:
 41158 ;;		On entry : 0/0
 41159 ;;		On exit  : 3F/0
 41160 ;;		Unchanged: 0/0
 41161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41162 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41163 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41164 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41165 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41166 ;;Total ram usage:        6 bytes
 41167 ;; Hardware stack levels used:    1
 41168 ;; Hardware stack levels required when called:   15
 41169 ;; This function calls:
 41170 ;;		_appDataConf
 41171 ;; This function is called by:
 41172 ;;		_nwkDataReqTaskHandler
 41173 ;; This function uses a non-reentrant model
 41174 ;;
 41175                           
 41176                           	psect	text227
 41177  007A0C                     __ptext227:
 41178                           	callstack 0
 41179  007A0C                     _nwkDataReqConfirm:
 41180                           	callstack 12
 41181                           
 41182                           ;../nwk/nwk_src/nwkDataReq.c: 190: static void nwkDataReqConfirm(NWK_DataReq_t *req);../
      +                          nwk/nwk_src/nwkDataReq.c: 191: {;../nwk/nwk_src/nwkDataReq.c: 192:   if (nwkDataReqQueue
      +                           == req)
 41183                           
 41184                           ; BSR set to: 0
 41185                           ;incstack = 0
 41186  007A0C  0100               	movlb	0	; force () banked
 41187  007A0E  519D               	movf	nwkDataReqConfirm@req& (0+255),w,b
 41188  007A10  0101               	movlb	1	; force () banked
 41189  007A12  19D7               	xorwf	_nwkDataReqQueue& (0+255),w,b
 41190  007A14  E113               	bnz	l18876
 41191  007A16  0100               	movlb	0	; force () banked
 41192  007A18  519E               	movf	(nwkDataReqConfirm@req+1)& (0+255),w,b
 41193  007A1A  0101               	movlb	1	; force () banked
 41194  007A1C  19D8               	xorwf	(_nwkDataReqQueue+1)& (0+255),w,b
 41195  007A1E  A4D8               	btfss	status,2,c
 41196  007A20  D00D               	goto	l18876
 41197                           
 41198                           ; BSR set to: 1
 41199                           ;../nwk/nwk_src/nwkDataReq.c: 193:   {;../nwk/nwk_src/nwkDataReq.c: 194:     nwkDataReqQ
      +                          ueue = nwkDataReqQueue->next;
 41200  007A22  0060  F75F  FFD9   	movff	_nwkDataReqQueue,fsr2l
 41201  007A28  0060  F763  FFDA   	movff	_nwkDataReqQueue+1,fsr2h
 41202  007A2E  006F FF78  F1D7    	movff	postinc2,_nwkDataReqQueue
 41203  007A34  006F FF74  F1D8    	movff	postdec2,_nwkDataReqQueue+1
 41204                           
 41205                           ;../nwk/nwk_src/nwkDataReq.c: 195:   }
 41206  007A3A  D03D               	goto	l18884
 41207  007A3C                     l18876:
 41208                           
 41209                           ; BSR set to: 1
 41210                           ;../nwk/nwk_src/nwkDataReq.c: 197:   {;../nwk/nwk_src/nwkDataReq.c: 198:     NWK_DataReq
      +                          _t *prev = nwkDataReqQueue;
 41211  007A3C  C1D7  F0A1         	movff	_nwkDataReqQueue,nwkDataReqConfirm@prev
 41212  007A40  C1D8  F0A2         	movff	_nwkDataReqQueue+1,nwkDataReqConfirm@prev+1
 41213                           
 41214                           ;../nwk/nwk_src/nwkDataReq.c: 199:     while (prev->next != req)
 41215  007A44  D00C               	goto	l18880
 41216  007A46                     l18878:
 41217                           
 41218                           ; BSR set to: 0
 41219                           ;../nwk/nwk_src/nwkDataReq.c: 200:       prev = prev->next;
 41220  007A46  0060  F287  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 41221  007A4C  0060  F28B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 41222  007A52  006F FF78  F0A1    	movff	postinc2,nwkDataReqConfirm@prev
 41223  007A58  006F FF74  F0A2    	movff	postdec2,nwkDataReqConfirm@prev+1
 41224  007A5E                     l18880:
 41225                           
 41226                           ;../nwk/nwk_src/nwkDataReq.c: 199:     while (prev->next != req)
 41227  007A5E  0060  F287  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 41228  007A64  0060  F28B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 41229  007A6A  0100               	movlb	0	; force () banked
 41230  007A6C  519D               	movf	nwkDataReqConfirm@req& (0+255),w,b
 41231  007A6E  18DE               	xorwf	postinc2,w,c
 41232  007A70  E1EA               	bnz	l18878
 41233  007A72  519E               	movf	(nwkDataReqConfirm@req+1)& (0+255),w,b
 41234  007A74  18DE               	xorwf	postinc2,w,c
 41235  007A76  A4D8               	btfss	status,2,c
 41236  007A78  D7E6               	goto	l18878
 41237                           
 41238                           ; BSR set to: 0
 41239                           ;../nwk/nwk_src/nwkDataReq.c: 201:     prev->next = ((NWK_DataReq_t *)prev->next)->next;
 41240  007A7A  0060  F287  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 41241  007A80  0060  F28B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 41242  007A86  006F FF78  F09F    	movff	postinc2,??_nwkDataReqConfirm
 41243  007A8C  006F FF74  F0A0    	movff	postdec2,??_nwkDataReqConfirm+1
 41244  007A92  0060  F27F  FFD9   	movff	??_nwkDataReqConfirm,fsr2l
 41245  007A98  0060  F283  FFDA   	movff	??_nwkDataReqConfirm+1,fsr2h
 41246  007A9E  0060  F287  FFE9   	movff	nwkDataReqConfirm@prev,fsr0l
 41247  007AA4  0060  F28B  FFEA   	movff	nwkDataReqConfirm@prev+1,fsr0h
 41248  007AAA  006F FF7B FFEE     	movff	postinc2,postinc0
 41249  007AB0  006F FF77 FFED     	movff	postdec2,postdec0
 41250  007AB6                     l18884:
 41251                           
 41252                           ;../nwk/nwk_src/nwkDataReq.c: 204:   nwkIb.lock--;
 41253  007AB6  0102               	movlb	2	; force () banked
 41254  007AB8  0726               	decf	(_nwkIb+38)& (0+255),f,b
 41255  007ABA  A0D8               	btfss	status,0,c
 41256  007ABC  0727               	decf	(_nwkIb+39)& (0+255),f,b
 41257                           
 41258                           ; BSR set to: 2
 41259                           ;../nwk/nwk_src/nwkDataReq.c: 205:   req->confirm(req);
 41260  007ABE  C09D  F09A         	movff	nwkDataReqConfirm@req,appDataConf@req
 41261  007AC2  C09E  F09B         	movff	nwkDataReqConfirm@req+1,appDataConf@req+1
 41262  007AC6  0100               	movlb	0	; force () banked
 41263  007AC8  EE20 F00F          	lfsr	2,15
 41264  007ACC  519D               	movf	nwkDataReqConfirm@req& (0+255),w,b
 41265  007ACE  26D9               	addwf	fsr2l,f,c
 41266  007AD0  519E               	movf	(nwkDataReqConfirm@req+1)& (0+255),w,b
 41267  007AD2  22DA               	addwfc	fsr2h,f,c
 41268  007AD4  006F FF78  F09F    	movff	postinc2,??_nwkDataReqConfirm
 41269  007ADA  006F FF74  F0A0    	movff	postdec2,??_nwkDataReqConfirm+1
 41270  007AE0  D801               	call	u16658
 41271  007AE2  0012               	return	
 41272  007AE4                     u16658:
 41273  007AE4  0005               	push	
 41274  007AE6  6EFA               	movwf	pclath,c
 41275  007AE8  0100               	movlb	0	; force () banked
 41276  007AEA  519F               	movf	??_nwkDataReqConfirm& (0+255),w,b
 41277  007AEC  6EFD               	movwf	tosl,c
 41278  007AEE  51A0               	movf	(??_nwkDataReqConfirm+1)& (0+255),w,b
 41279  007AF0  6EFE               	movwf	tosh,c
 41280  007AF2  6AFF               	clrf	tosu,c
 41281  007AF4  50FA               	movf	pclath,w,c
 41282  007AF6  0012               	return		;indir
 41283  007AF8                     __end_of_nwkDataReqConfirm:
 41284                           	callstack 0
 41285                           
 41286 ;; *************** function _appDataConf *****************
 41287 ;; Defined at:
 41288 ;;		line 173 in file "../app/app_src/application.c"
 41289 ;; Parameters:    Size  Location     Type
 41290 ;;  req             2   58[BANK0 ] PTR struct NWK_DataReq_t
 41291 ;;		 -> tx_buffer(264), NULL(0), 
 41292 ;; Auto vars:     Size  Location     Type
 41293 ;;  ack             1   60[BANK0 ] _Bool 
 41294 ;; Return value:  Size  Location     Type
 41295 ;;                  1    wreg      void 
 41296 ;; Registers used:
 41297 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41298 ;; Tracked objects:
 41299 ;;		On entry : 3F/0
 41300 ;;		On exit  : 3F/0
 41301 ;;		Unchanged: 0/0
 41302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41303 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41304 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41306 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41307 ;;Total ram usage:        3 bytes
 41308 ;; Hardware stack levels used:    1
 41309 ;; Hardware stack levels required when called:   14
 41310 ;; This function calls:
 41311 ;;		_free_tx_buffer
 41312 ;; This function is called by:
 41313 ;;		_cmdSetSink
 41314 ;;		_handle_tx_regs
 41315 ;;		_nwkDataReqConfirm
 41316 ;; This function uses a non-reentrant model
 41317 ;;
 41318                           
 41319                           	psect	text228
 41320  00B352                     __ptext228:
 41321                           	callstack 0
 41322  00B352                     _appDataConf:
 41323                           	callstack 12
 41324                           
 41325                           ;../app/app_src/application.c: 173: void appDataConf(NWK_DataReq_t *req);../app/app_src/
      +                          application.c: 174: {;../app/app_src/application.c: 175:     _Bool ack = 0;
 41326                           
 41327                           ; BSR set to: 0
 41328                           ;incstack = 0
 41329  00B352  0E00               	movlw	0
 41330  00B354  0100               	movlb	0	; force () banked
 41331  00B356  6F9C               	movwf	appDataConf@ack& (0+255),b
 41332                           
 41333                           ; BSR set to: 0
 41334                           ;../app/app_src/application.c: 176:     if (NWK_SUCCESS_STATUS == req->status){
 41335  00B358  0100               	movlb	0	; force () banked
 41336  00B35A  EE20 F011          	lfsr	2,17
 41337  00B35E  519A               	movf	appDataConf@req& (0+255),w,b
 41338  00B360  26D9               	addwf	fsr2l,f,c
 41339  00B362  519B               	movf	(appDataConf@req+1)& (0+255),w,b
 41340  00B364  22DA               	addwfc	fsr2h,f,c
 41341  00B366  50DF               	movf	indf2,w,c
 41342  00B368  A4D8               	btfss	status,2,c
 41343  00B36A  D002               	goto	l18382
 41344                           
 41345                           ; BSR set to: 0
 41346                           ;../app/app_src/application.c: 181:         ack = 1;
 41347  00B36C  0E01               	movlw	1
 41348  00B36E  D001               	goto	L48
 41349  00B370                     l18382:
 41350                           
 41351                           ; BSR set to: 0
 41352                           ;../app/app_src/application.c: 187:         ack = 0;
 41353  00B370  0E00               	movlw	0
 41354  00B372                     L48:
 41355  00B372  0100               	movlb	0	; force () banked
 41356  00B374  6F9C               	movwf	appDataConf@ack& (0+255),b
 41357                           
 41358                           ; BSR set to: 0
 41359                           ;../app/app_src/application.c: 190:     free_tx_buffer(req, ack);
 41360  00B376  C09A  F090         	movff	appDataConf@req,free_tx_buffer@req
 41361  00B37A  C09B  F091         	movff	appDataConf@req+1,free_tx_buffer@req+1
 41362  00B37E  C09C  F092         	movff	appDataConf@ack,free_tx_buffer@ack
 41363  00B382  EC7D  F045         	call	_free_tx_buffer	;wreg free
 41364                           
 41365                           ; BSR set to: 0
 41366  00B386  0012               	return		;funcret
 41367  00B388                     __end_of_appDataConf:
 41368                           	callstack 0
 41369                           
 41370 ;; *************** function _free_tx_buffer *****************
 41371 ;; Defined at:
 41372 ;;		line 271 in file "../app/app_src/application.c"
 41373 ;; Parameters:    Size  Location     Type
 41374 ;;  req             2   48[BANK0 ] PTR struct NWK_DataReq_t
 41375 ;;		 -> tx_buffer(264), NULL(0), 
 41376 ;;  ack             1   50[BANK0 ] _Bool 
 41377 ;; Auto vars:     Size  Location     Type
 41378 ;;  msg_ack_obj     4   53[BANK0 ] struct msg_ack_t
 41379 ;;  buf_id          1   57[BANK0 ] unsigned char 
 41380 ;; Return value:  Size  Location     Type
 41381 ;;                  1    wreg      void 
 41382 ;; Registers used:
 41383 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41384 ;; Tracked objects:
 41385 ;;		On entry : 3F/0
 41386 ;;		On exit  : 3F/0
 41387 ;;		Unchanged: 0/0
 41388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41389 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41390 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41391 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41392 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41393 ;;Total ram usage:       10 bytes
 41394 ;; Hardware stack levels used:    1
 41395 ;; Hardware stack levels required when called:   13
 41396 ;; This function calls:
 41397 ;;		_CircularBufferPushBack
 41398 ;; This function is called by:
 41399 ;;		_appDataConf
 41400 ;; This function uses a non-reentrant model
 41401 ;;
 41402                           
 41403                           	psect	text229
 41404  008AFA                     __ptext229:
 41405                           	callstack 0
 41406  008AFA                     _free_tx_buffer:
 41407                           	callstack 12
 41408                           
 41409                           ;../app/app_src/application.c: 272:     uint8_t buf_id = 0;
 41410                           
 41411                           ; BSR set to: 0
 41412                           ;incstack = 0
 41413  008AFA  0E00               	movlw	0
 41414  008AFC  0100               	movlb	0	; force () banked
 41415  008AFE  6F99               	movwf	free_tx_buffer@buf_id& (0+255),b
 41416                           
 41417                           ;../app/app_src/application.c: 274:     while(buf_id < 2){
 41418  008B00  D058               	goto	l18178
 41419  008B02                     l18160:
 41420                           
 41421                           ; BSR set to: 0
 41422                           ;../app/app_src/application.c: 275:         if(req == &tx_buffer[buf_id].nwkDataReq){
 41423  008B02  0100               	movlb	0	; force () banked
 41424  008B04  5199               	movf	free_tx_buffer@buf_id& (0+255),w,b
 41425  008B06  0D84               	mullw	132
 41426  008B08  0EC3               	movlw	low _tx_buffer
 41427  008B0A  0100               	movlb	0	; force () banked
 41428  008B0C  6F93               	movwf	??_free_tx_buffer& (0+255),b
 41429  008B0E  0E0E               	movlw	high _tx_buffer
 41430  008B10  6F94               	movwf	(??_free_tx_buffer+1)& (0+255),b
 41431  008B12  0E03               	movlw	3
 41432  008B14  2793               	addwf	??_free_tx_buffer& (0+255),f,b
 41433  008B16  0E00               	movlw	0
 41434  008B18  2394               	addwfc	(??_free_tx_buffer+1)& (0+255),f,b
 41435  008B1A  50F3               	movf	243,w,c
 41436  008B1C  2793               	addwf	??_free_tx_buffer& (0+255),f,b
 41437  008B1E  50F4               	movf	244,w,c
 41438  008B20  2394               	addwfc	(??_free_tx_buffer+1)& (0+255),f,b
 41439  008B22  0100               	movlb	0	; force () banked
 41440  008B24  5190               	movf	free_tx_buffer@req& (0+255),w,b
 41441  008B26  0100               	movlb	0	; force () banked
 41442  008B28  1993               	xorwf	??_free_tx_buffer& (0+255),w,b
 41443  008B2A  E141               	bnz	l18176
 41444  008B2C  0100               	movlb	0	; force () banked
 41445  008B2E  5191               	movf	(free_tx_buffer@req+1)& (0+255),w,b
 41446  008B30  0100               	movlb	0	; force () banked
 41447  008B32  1994               	xorwf	(??_free_tx_buffer+1)& (0+255),w,b
 41448  008B34  A4D8               	btfss	status,2,c
 41449  008B36  D03B               	goto	l18176
 41450                           
 41451                           ; BSR set to: 0
 41452                           ;../app/app_src/application.c: 276:             struct msg_ack_t msg_ack_obj;;../app/app
      +                          _src/application.c: 278:             tx_buffer[buf_id].free = 1;
 41453  008B38  0100               	movlb	0	; force () banked
 41454  008B3A  5199               	movf	free_tx_buffer@buf_id& (0+255),w,b
 41455  008B3C  0D84               	mullw	132
 41456  008B3E  0EC3               	movlw	low _tx_buffer
 41457  008B40  24F3               	addwf	243,w,c
 41458  008B42  6ED9               	movwf	fsr2l,c
 41459  008B44  0E0E               	movlw	high _tx_buffer
 41460  008B46  20F4               	addwfc	prodh,w,c
 41461  008B48  6EDA               	movwf	fsr2h,c
 41462  008B4A  84DF               	bsf	indf2,2,c
 41463                           
 41464                           ; BSR set to: 0
 41465                           ;../app/app_src/application.c: 279:             if(!(req->options & NWK_OPT_MULTICAST)){
 41466  008B4C  0100               	movlb	0	; force () banked
 41467  008B4E  EE20 F009          	lfsr	2,9
 41468  008B52  5190               	movf	free_tx_buffer@req& (0+255),w,b
 41469  008B54  26D9               	addwf	fsr2l,f,c
 41470  008B56  5191               	movf	(free_tx_buffer@req+1)& (0+255),w,b
 41471  008B58  22DA               	addwfc	fsr2h,f,c
 41472  008B5A  B8DF               	btfsc	indf2,4,c
 41473  008B5C  0012               	return	
 41474                           
 41475                           ; BSR set to: 0
 41476                           ;../app/app_src/application.c: 280:                 msg_ack_obj.dest_addr = req->dstAddr
      +                          ;
 41477  008B5E  0100               	movlb	0	; force () banked
 41478  008B60  EE20 F005          	lfsr	2,5
 41479  008B64  5190               	movf	free_tx_buffer@req& (0+255),w,b
 41480  008B66  26D9               	addwf	fsr2l,f,c
 41481  008B68  5191               	movf	(free_tx_buffer@req+1)& (0+255),w,b
 41482  008B6A  22DA               	addwfc	fsr2h,f,c
 41483  008B6C  006F FF78  F095    	movff	postinc2,free_tx_buffer@msg_ack_obj
 41484  008B72  006F FF74  F096    	movff	postdec2,free_tx_buffer@msg_ack_obj+1
 41485                           
 41486                           ; BSR set to: 0
 41487                           ;../app/app_src/application.c: 281:                 msg_ack_obj.msgid = tx_buffer[buf_id
      +                          ].msgid;
 41488  008B78  0100               	movlb	0	; force () banked
 41489  008B7A  5199               	movf	free_tx_buffer@buf_id& (0+255),w,b
 41490  008B7C  0D84               	mullw	132
 41491  008B7E  0EC5               	movlw	low (_tx_buffer+2)
 41492  008B80  24F3               	addwf	243,w,c
 41493  008B82  6ED9               	movwf	fsr2l,c
 41494  008B84  0E0E               	movlw	high (_tx_buffer+2)
 41495  008B86  20F4               	addwfc	prodh,w,c
 41496  008B88  6EDA               	movwf	fsr2h,c
 41497  008B8A  50DF               	movf	indf2,w,c
 41498  008B8C  0100               	movlb	0	; force () banked
 41499  008B8E  6F97               	movwf	(free_tx_buffer@msg_ack_obj+2)& (0+255),b
 41500                           
 41501                           ; BSR set to: 0
 41502                           ;../app/app_src/application.c: 282:                 msg_ack_obj.status = ack;
 41503  008B90  C092  F098         	movff	free_tx_buffer@ack,free_tx_buffer@msg_ack_obj+3
 41504                           
 41505                           ; BSR set to: 0
 41506                           ;../app/app_src/application.c: 283:                 CircularBufferPushBack(&msg_ack_queu
      +                          e_context, &msg_ack_obj);
 41507  008B94  0EBF               	movlw	low _msg_ack_queue_context
 41508  008B96  0100               	movlb	0	; force () banked
 41509  008B98  6F84               	movwf	CircularBufferPushBack@ctx& (0+255),b
 41510  008B9A  0E03               	movlw	high _msg_ack_queue_context
 41511  008B9C  6F85               	movwf	(CircularBufferPushBack@ctx+1)& (0+255),b
 41512  008B9E  0E95               	movlw	low free_tx_buffer@msg_ack_obj
 41513  008BA0  0100               	movlb	0	; force () banked
 41514  008BA2  6F86               	movwf	CircularBufferPushBack@val& (0+255),b
 41515  008BA4  0E00               	movlw	high free_tx_buffer@msg_ack_obj
 41516  008BA6  6F87               	movwf	(CircularBufferPushBack@val+1)& (0+255),b
 41517  008BA8  EC23  F034         	call	_CircularBufferPushBack	;wreg free
 41518  008BAC  0012               	return	
 41519  008BAE                     l18176:
 41520                           
 41521                           ; BSR set to: 0
 41522                           ;../app/app_src/application.c: 287:         buf_id++;
 41523  008BAE  0100               	movlb	0	; force () banked
 41524  008BB0  2B99               	incf	free_tx_buffer@buf_id& (0+255),f,b
 41525  008BB2                     l18178:
 41526                           
 41527                           ; BSR set to: 0
 41528                           ;../app/app_src/application.c: 274:     while(buf_id < 2){
 41529  008BB2  0E01               	movlw	1
 41530  008BB4  0100               	movlb	0	; force () banked
 41531  008BB6  6599               	cpfsgt	free_tx_buffer@buf_id& (0+255),b
 41532  008BB8  D7A4               	goto	l18160
 41533  008BBA  0012               	return	
 41534  008BBC                     __end_of_free_tx_buffer:
 41535                           	callstack 0
 41536                           
 41537 ;; *************** function _CircularBufferPushBack *****************
 41538 ;; Defined at:
 41539 ;;		line 71 in file "../app/app_src/circular_buffer.c"
 41540 ;; Parameters:    Size  Location     Type
 41541 ;;  ctx             2   36[BANK0 ] PTR struct .
 41542 ;;		 -> ledtasksbuf(10), msg_ack_queue_context(10), rx_buffer_queue_context(10), 
 41543 ;;  val             2   38[BANK0 ] PTR void 
 41544 ;;		 -> queueLedEvent@temp(3), free_tx_buffer@msg_ack_obj(4), appDataInd@buf_id(1), 
 41545 ;; Auto vars:     Size  Location     Type
 41546 ;;  write_pos       2   46[BANK0 ] unsigned int 
 41547 ;;  ret_var         2   44[BANK0 ] int 
 41548 ;; Return value:  Size  Location     Type
 41549 ;;                  1    wreg      char 
 41550 ;; Registers used:
 41551 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41552 ;; Tracked objects:
 41553 ;;		On entry : 3F/0
 41554 ;;		On exit  : 3F/0
 41555 ;;		Unchanged: 0/0
 41556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41557 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41558 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41559 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41560 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41561 ;;Total ram usage:       12 bytes
 41562 ;; Hardware stack levels used:    1
 41563 ;; Hardware stack levels required when called:   12
 41564 ;; This function calls:
 41565 ;;		___wmul
 41566 ;;		_memcpy
 41567 ;; This function is called by:
 41568 ;;		_appDataInd
 41569 ;;		_free_tx_buffer
 41570 ;;		_queueLedEvent
 41571 ;; This function uses a non-reentrant model
 41572 ;;
 41573                           
 41574                           	psect	text230
 41575  006846                     __ptext230:
 41576                           	callstack 0
 41577  006846                     _CircularBufferPushBack:
 41578                           	callstack 15
 41579                           
 41580                           ;../app/app_src/circular_buffer.c: 72:     size_t write_pos = (ctx->write_pos + 1) & ctx
      +                          ->max_size;
 41581                           
 41582                           ; BSR set to: 0
 41583                           ;incstack = 0
 41584  006846  0100               	movlb	0	; force () banked
 41585  006848  EE20 F008          	lfsr	2,8
 41586  00684C  5184               	movf	CircularBufferPushBack@ctx& (0+255),w,b
 41587  00684E  26D9               	addwf	fsr2l,f,c
 41588  006850  5185               	movf	(CircularBufferPushBack@ctx+1)& (0+255),w,b
 41589  006852  22DA               	addwfc	fsr2h,f,c
 41590  006854  006F FF78  F088    	movff	postinc2,??_CircularBufferPushBack
 41591  00685A  006F FF74  F089    	movff	postdec2,??_CircularBufferPushBack+1
 41592  006860  EE20 F002          	lfsr	2,2
 41593  006864  5184               	movf	CircularBufferPushBack@ctx& (0+255),w,b
 41594  006866  26D9               	addwf	fsr2l,f,c
 41595  006868  5185               	movf	(CircularBufferPushBack@ctx+1)& (0+255),w,b
 41596  00686A  22DA               	addwfc	fsr2h,f,c
 41597  00686C  006F FF78  F08A    	movff	postinc2,??_CircularBufferPushBack+2
 41598  006872  006F FF74  F08B    	movff	postdec2,??_CircularBufferPushBack+3
 41599  006878  0E01               	movlw	1
 41600  00687A  0100               	movlb	0	; force () banked
 41601  00687C  278A               	addwf	(??_CircularBufferPushBack+2)& (0+255),f,b
 41602  00687E  0E00               	movlw	0
 41603  006880  238B               	addwfc	(??_CircularBufferPushBack+3)& (0+255),f,b
 41604  006882  5188               	movf	??_CircularBufferPushBack& (0+255),w,b
 41605  006884  158A               	andwf	(??_CircularBufferPushBack+2)& (0+255),w,b
 41606  006886  0100               	movlb	0	; force () banked
 41607  006888  6F8E               	movwf	CircularBufferPushBack@write_pos& (0+255),b
 41608  00688A  0100               	movlb	0	; force () banked
 41609  00688C  5189               	movf	(??_CircularBufferPushBack+1)& (0+255),w,b
 41610  00688E  158B               	andwf	(??_CircularBufferPushBack+3)& (0+255),w,b
 41611  006890  0100               	movlb	0	; force () banked
 41612  006892  6F8F               	movwf	(CircularBufferPushBack@write_pos+1)& (0+255),b
 41613                           
 41614                           ;../app/app_src/circular_buffer.c: 73:     int ret_var;;../app/app_src/circular_buffer.c
      +                          : 75:     if (write_pos == ctx->read_pos) {
 41615  006894  0100               	movlb	0	; force () banked
 41616  006896  EE20 F004          	lfsr	2,4
 41617  00689A  5184               	movf	CircularBufferPushBack@ctx& (0+255),w,b
 41618  00689C  26D9               	addwf	fsr2l,f,c
 41619  00689E  5185               	movf	(CircularBufferPushBack@ctx+1)& (0+255),w,b
 41620  0068A0  22DA               	addwfc	fsr2h,f,c
 41621  0068A2  0100               	movlb	0	; force () banked
 41622  0068A4  518E               	movf	CircularBufferPushBack@write_pos& (0+255),w,b
 41623  0068A6  18DE               	xorwf	postinc2,w,c
 41624  0068A8  E108               	bnz	l18048
 41625  0068AA  518F               	movf	(CircularBufferPushBack@write_pos+1)& (0+255),w,b
 41626  0068AC  18DE               	xorwf	postinc2,w,c
 41627  0068AE  A4D8               	btfss	status,2,c
 41628  0068B0  D004               	goto	l18048
 41629                           
 41630                           ; BSR set to: 0
 41631                           ;../app/app_src/circular_buffer.c: 77:         ret_var = -1;
 41632  0068B2  0100               	movlb	0	; force () banked
 41633  0068B4  698C               	setf	CircularBufferPushBack@ret_var& (0+255),b
 41634  0068B6  698D               	setf	(CircularBufferPushBack@ret_var+1)& (0+255),b
 41635                           
 41636                           ;../app/app_src/circular_buffer.c: 78:     }
 41637  0068B8  D05E               	goto	l18054
 41638  0068BA                     l18048:
 41639                           
 41640                           ; BSR set to: 0
 41641                           ;../app/app_src/circular_buffer.c: 80:     memcpy(&ctx->buf[ctx->write_pos * ctx->elemen
      +                          t_size], val,
 41642  0068BA  0100               	movlb	0	; force () banked
 41643  0068BC  EE20 F002          	lfsr	2,2
 41644  0068C0  5184               	movf	CircularBufferPushBack@ctx& (0+255),w,b
 41645  0068C2  26D9               	addwf	fsr2l,f,c
 41646  0068C4  5185               	movf	(CircularBufferPushBack@ctx+1)& (0+255),w,b
 41647  0068C6  22DA               	addwfc	fsr2h,f,c
 41648  0068C8  006F FF78  F071    	movff	postinc2,___wmul@multiplier
 41649  0068CE  006F FF74  F072    	movff	postdec2,___wmul@multiplier+1
 41650  0068D4  EE20 F006          	lfsr	2,6
 41651  0068D8  5184               	movf	CircularBufferPushBack@ctx& (0+255),w,b
 41652  0068DA  26D9               	addwf	fsr2l,f,c
 41653  0068DC  5185               	movf	(CircularBufferPushBack@ctx+1)& (0+255),w,b
 41654  0068DE  22DA               	addwfc	fsr2h,f,c
 41655  0068E0  006F FF78  F073    	movff	postinc2,___wmul@multiplicand
 41656  0068E6  006F FF74  F074    	movff	postdec2,___wmul@multiplicand+1
 41657  0068EC  ECCD  F05A         	call	___wmul	;wreg free
 41658  0068F0  0060  F213  FFD9   	movff	CircularBufferPushBack@ctx,fsr2l
 41659  0068F6  0060  F217  FFDA   	movff	CircularBufferPushBack@ctx+1,fsr2h
 41660  0068FC  006F FF78  F088    	movff	postinc2,??_CircularBufferPushBack
 41661  006902  006F FF74  F089    	movff	postdec2,??_CircularBufferPushBack+1
 41662  006908  0100               	movlb	0	; force () banked
 41663  00690A  5171               	movf	?___wmul& (0+255),w,b
 41664  00690C  0100               	movlb	0	; force () banked
 41665  00690E  2588               	addwf	??_CircularBufferPushBack& (0+255),w,b
 41666  006910  0100               	movlb	0	; force () banked
 41667  006912  6F77               	movwf	memcpy@d1& (0+255),b
 41668  006914  0100               	movlb	0	; force () banked
 41669  006916  5172               	movf	(?___wmul+1)& (0+255),w,b
 41670  006918  0100               	movlb	0	; force () banked
 41671  00691A  2189               	addwfc	(??_CircularBufferPushBack+1)& (0+255),w,b
 41672  00691C  0100               	movlb	0	; force () banked
 41673  00691E  6F78               	movwf	(memcpy@d1+1)& (0+255),b
 41674  006920  C086  F079         	movff	CircularBufferPushBack@val,memcpy@s1
 41675  006924  C087  F07A         	movff	CircularBufferPushBack@val+1,memcpy@s1+1
 41676  006928  0100               	movlb	0	; force () banked
 41677  00692A  5179               	movf	memcpy@s1& (0+255),w,b
 41678  00692C  117A               	iorwf	(memcpy@s1+1)& (0+255),w,b
 41679  00692E  A4D8               	btfss	status,2,c
 41680  006930  0E20               	movlw	32
 41681  006932  6F7B               	movwf	(memcpy@s1+2)& (0+255),b
 41682  006934  0100               	movlb	0	; force () banked
 41683  006936  EE20 F006          	lfsr	2,6
 41684  00693A  5184               	movf	CircularBufferPushBack@ctx& (0+255),w,b
 41685  00693C  26D9               	addwf	fsr2l,f,c
 41686  00693E  5185               	movf	(CircularBufferPushBack@ctx+1)& (0+255),w,b
 41687  006940  22DA               	addwfc	fsr2h,f,c
 41688  006942  006F FF78  F07C    	movff	postinc2,memcpy@n
 41689  006948  006F FF74  F07D    	movff	postdec2,memcpy@n+1
 41690  00694E  ECC1  F04F         	call	_memcpy	;wreg free
 41691                           
 41692                           ; BSR set to: 0
 41693                           ;../app/app_src/circular_buffer.c: 82:     ctx->write_pos = write_pos;
 41694  006952  0100               	movlb	0	; force () banked
 41695  006954  EE20 F002          	lfsr	2,2
 41696  006958  5184               	movf	CircularBufferPushBack@ctx& (0+255),w,b
 41697  00695A  26D9               	addwf	fsr2l,f,c
 41698  00695C  5185               	movf	(CircularBufferPushBack@ctx+1)& (0+255),w,b
 41699  00695E  22DA               	addwfc	fsr2h,f,c
 41700  006960  0060  F23B  FFDE   	movff	CircularBufferPushBack@write_pos,postinc2
 41701  006966  0060  F23F  FFDD   	movff	CircularBufferPushBack@write_pos+1,postdec2
 41702                           
 41703                           ; BSR set to: 0
 41704                           ;../app/app_src/circular_buffer.c: 84:     ret_var = 0;
 41705  00696C  0E00               	movlw	0
 41706  00696E  0100               	movlb	0	; force () banked
 41707  006970  6F8D               	movwf	(CircularBufferPushBack@ret_var+1)& (0+255),b
 41708  006972  0E00               	movlw	0
 41709  006974  6F8C               	movwf	CircularBufferPushBack@ret_var& (0+255),b
 41710  006976                     l18054:
 41711                           
 41712                           ; BSR set to: 0
 41713                           ;../app/app_src/circular_buffer.c: 86:     return ret_var;
 41714  006976  0100               	movlb	0	; force () banked
 41715  006978  518C               	movf	CircularBufferPushBack@ret_var& (0+255),w,b
 41716                           
 41717                           ; BSR set to: 0
 41718  00697A  0012               	return		;funcret
 41719  00697C                     __end_of_CircularBufferPushBack:
 41720                           	callstack 0
 41721                           
 41722 ;; *************** function _memcpy *****************
 41723 ;; Defined at:
 41724 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\memcpy.c"
 41725 ;; Parameters:    Size  Location     Type
 41726 ;;  d1              2   23[BANK0 ] PTR void 
 41727 ;;		 -> phyTxBuffer(128), nwkFrameFrames..(128), nwkFrameFrames(690), handle_led_events@temp(3), 
 41728 ;;		 -> ledqueue(96), exract_sink_addr@addrstr(5), fill_rx_regs@buf_id(1), handle_rw_regs@msg_ack_obj(4), 
 41729 ;;		 -> msg_ack_queue(32), rx_buffer_queue(3), write_only_mb_regs(36), tx_buffer.payload(110), 
 41730 ;;		 -> tx_buffer(264), NULL(0), rx_buffer.payload(110), rx_buffer(369), 
 41731 ;;		 -> app_aes_decrypt@ctx(192), app_aes_decrypt@iv(16), app_aes_encrypt@ctx(192), app_aes_encrypt@iv(16), 
 41732 ;;		 -> AES_CBC_decrypt_buffer@storeNextIv(16), 
 41733 ;;  s1              3   25[BANK0 ] PTR const void 
 41734 ;;		 -> ctx.Iv(16), phyRxBuffer(128), nwkFrameFrames..(128), nwkFrameFrames(690), 
 41735 ;;		 -> queueLedEvent@temp(3), ledqueue(96), STR_3(5), msg_ack_queue(32), 
 41736 ;;		 -> rx_buffer_queue(3), net_key(16), tx_buffer.payload(110), cmdSetSink@msgstr(16), 
 41737 ;;		 -> free_tx_buffer@msg_ack_obj(4), tx_buffer(264), NULL(0), appDataInd@buf_id(1), 
 41738 ;;		 -> app_aes_decrypt@iv(16), app_aes_decrypt@random(2), aes_key(16), app_aes_encrypt@ctx(192), 
 41739 ;;		 -> app_aes_encrypt@iv(16), app_aes_encrypt@random(2), AES_CBC_decrypt_buffer@storeNextIv(16), 
 41740 ;;  n               2   28[BANK0 ] unsigned int 
 41741 ;; Auto vars:     Size  Location     Type
 41742 ;;  s               3   30[BANK0 ] PTR const unsigned char 
 41743 ;;		 -> ctx.Iv(16), phyRxBuffer(128), nwkFrameFrames..(128), nwkFrameFrames(690), 
 41744 ;;		 -> queueLedEvent@temp(3), ledqueue(96), STR_3(5), msg_ack_queue(32), 
 41745 ;;		 -> rx_buffer_queue(3), net_key(16), tx_buffer.payload(110), cmdSetSink@msgstr(16), 
 41746 ;;		 -> free_tx_buffer@msg_ack_obj(4), tx_buffer(264), NULL(0), appDataInd@buf_id(1), 
 41747 ;;		 -> app_aes_decrypt@iv(16), app_aes_decrypt@random(2), aes_key(16), app_aes_encrypt@ctx(192), 
 41748 ;;		 -> app_aes_encrypt@iv(16), app_aes_encrypt@random(2), AES_CBC_decrypt_buffer@storeNextIv(16), 
 41749 ;;  d               2   34[BANK0 ] PTR unsigned char 
 41750 ;;		 -> phyTxBuffer(128), nwkFrameFrames..(128), nwkFrameFrames(690), handle_led_events@temp(3), 
 41751 ;;		 -> ledqueue(96), exract_sink_addr@addrstr(5), fill_rx_regs@buf_id(1), handle_rw_regs@msg_ack_obj(4), 
 41752 ;;		 -> msg_ack_queue(32), rx_buffer_queue(3), write_only_mb_regs(36), tx_buffer.payload(110), 
 41753 ;;		 -> tx_buffer(264), NULL(0), rx_buffer.payload(110), rx_buffer(369), 
 41754 ;;		 -> app_aes_decrypt@ctx(192), app_aes_decrypt@iv(16), app_aes_encrypt@ctx(192), app_aes_encrypt@iv(16), 
 41755 ;;		 -> AES_CBC_decrypt_buffer@storeNextIv(16), 
 41756 ;;  tmp             1   33[BANK0 ] unsigned char 
 41757 ;; Return value:  Size  Location     Type
 41758 ;;                  2   23[BANK0 ] PTR void 
 41759 ;; Registers used:
 41760 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 41761 ;; Tracked objects:
 41762 ;;		On entry : 3F/0
 41763 ;;		On exit  : 3F/0
 41764 ;;		Unchanged: 0/0
 41765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41766 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41767 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41769 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41770 ;;Total ram usage:       13 bytes
 41771 ;; Hardware stack levels used:    1
 41772 ;; Hardware stack levels required when called:   11
 41773 ;; This function calls:
 41774 ;;		Nothing
 41775 ;; This function is called by:
 41776 ;;		_AES_init_ctx_iv
 41777 ;;		_AES_CBC_encrypt_buffer
 41778 ;;		_AES_CBC_decrypt_buffer
 41779 ;;		_app_aes_encrypt
 41780 ;;		_app_aes_decrypt
 41781 ;;		_appDataInd
 41782 ;;		_cmdSetSink
 41783 ;;		_bootLoadApplication
 41784 ;;		_handle_tx_regs
 41785 ;;		_exract_sink_addr
 41786 ;;		_CircularBufferPushBack
 41787 ;;		_CircularBufferPopFront
 41788 ;;		_nwkDataReqSendFrame
 41789 ;;		_PHY_DataInd
 41790 ;;		_nwkTxBroadcastFrame
 41791 ;;		_PHY_DataReq
 41792 ;; This function uses a non-reentrant model
 41793 ;;
 41794                           
 41795                           	psect	text231
 41796  009F82                     __ptext231:
 41797                           	callstack 0
 41798  009F82                     _memcpy:
 41799                           	callstack 18
 41800                           
 41801                           ; BSR set to: 0
 41802                           ;incstack = 0
 41803  009F82  C079  F07E         	movff	memcpy@s1,memcpy@s
 41804  009F86  C07A  F07F         	movff	memcpy@s1+1,memcpy@s+1
 41805  009F8A  C07B  F080         	movff	memcpy@s1+2,memcpy@s+2
 41806  009F8E  C077  F082         	movff	memcpy@d1,memcpy@d
 41807  009F92  C078  F083         	movff	memcpy@d1+1,memcpy@d+1
 41808  009F96  D028               	goto	l17474
 41809  009F98                     l17466:
 41810                           
 41811                           ; BSR set to: 0
 41812  009F98  0060  F1FB  FFF6   	movff	memcpy@s,tblptrl
 41813  009F9E  0060  F1FF  FFF7   	movff	memcpy@s+1,tblptrh
 41814  009FA4  0060  F203  FFF8   	movff	memcpy@s+2,tblptru
 41815  009FAA  BAF8               	btfsc	tblptru,5,c
 41816  009FAC  D003               	bra	u14827
 41817  009FAE  0008               	tblrd		*
 41818  009FB0  50F5               	movf	tablat,w,c
 41819  009FB2  D007               	bra	u14820
 41820  009FB4                     u14827:
 41821  009FB4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 41822  009FBA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 41823  009FC0  50EF               	movf	indf0,w,c
 41824  009FC2                     u14820:
 41825  009FC2  0100               	movlb	0	; () banked
 41826  009FC4  6F81               	movwf	memcpy@tmp& (0+255),b
 41827                           
 41828                           ; BSR set to: 0
 41829  009FC6  0E01               	movlw	1
 41830  009FC8  277E               	addwf	memcpy@s& (0+255),f,b
 41831  009FCA  0E00               	movlw	0
 41832  009FCC  237F               	addwfc	(memcpy@s+1)& (0+255),f,b
 41833  009FCE  0E00               	movlw	0
 41834  009FD0  2380               	addwfc	(memcpy@s+2)& (0+255),f,b
 41835                           
 41836                           ; BSR set to: 0
 41837  009FD2  0060  F20B  FFD9   	movff	memcpy@d,fsr2l
 41838  009FD8  0060  F20F  FFDA   	movff	memcpy@d+1,fsr2h
 41839  009FDE  0060  F207  FFDF   	movff	memcpy@tmp,indf2
 41840                           
 41841                           ; BSR set to: 0
 41842  009FE4  4B82               	infsnz	memcpy@d& (0+255),f,b
 41843  009FE6  2B83               	incf	(memcpy@d+1)& (0+255),f,b
 41844  009FE8                     l17474:
 41845  009FE8  0100               	movlb	0	; () banked
 41846  009FEA  077C               	decf	memcpy@n& (0+255),f,b
 41847  009FEC  A0D8               	btfss	status,0,c
 41848  009FEE  077D               	decf	(memcpy@n+1)& (0+255),f,b
 41849  009FF0  297C               	incf	memcpy@n& (0+255),w,b
 41850  009FF2  E1D2               	bnz	l17466
 41851  009FF4  297D               	incf	(memcpy@n+1)& (0+255),w,b
 41852  009FF6  A4D8               	btfss	status,2,c
 41853  009FF8  D7CF               	goto	l17466
 41854                           
 41855                           ; BSR set to: 0
 41856  009FFA  C077  F077         	movff	memcpy@d1,?_memcpy
 41857  009FFE  C078  F078         	movff	memcpy@d1+1,?_memcpy+1
 41858                           
 41859                           ; BSR set to: 0
 41860  00A002  0012               	return		;funcret
 41861  00A004                     __end_of_memcpy:
 41862                           	callstack 0
 41863                           
 41864 ;; *************** function ___wmul *****************
 41865 ;; Defined at:
 41866 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
 41867 ;; Parameters:    Size  Location     Type
 41868 ;;  multiplier      2   17[BANK0 ] unsigned int 
 41869 ;;  multiplicand    2   19[BANK0 ] unsigned int 
 41870 ;; Auto vars:     Size  Location     Type
 41871 ;;  product         2   21[BANK0 ] unsigned int 
 41872 ;; Return value:  Size  Location     Type
 41873 ;;                  2   17[BANK0 ] unsigned int 
 41874 ;; Registers used:
 41875 ;;		wreg, status,2, status,0, prodl, prodh
 41876 ;; Tracked objects:
 41877 ;;		On entry : 3F/0
 41878 ;;		On exit  : 3F/0
 41879 ;;		Unchanged: 0/0
 41880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41881 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41882 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41884 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41885 ;;Total ram usage:        6 bytes
 41886 ;; Hardware stack levels used:    1
 41887 ;; Hardware stack levels required when called:   11
 41888 ;; This function calls:
 41889 ;;		Nothing
 41890 ;; This function is called by:
 41891 ;;		_CircularBufferPushBack
 41892 ;;		_CircularBufferPopFront
 41893 ;;		_xMBPortTimersInit
 41894 ;;		_eMBPoll
 41895 ;; This function uses a non-reentrant model
 41896 ;;
 41897                           
 41898                           	psect	text232
 41899  00B59A                     __ptext232:
 41900                           	callstack 0
 41901  00B59A                     ___wmul:
 41902                           	callstack 15
 41903                           
 41904                           ; BSR set to: 0
 41905                           ;incstack = 0
 41906  00B59A  0100               	movlb	0	; () banked
 41907  00B59C  5171               	movf	___wmul@multiplier& (0+255),w,b
 41908  00B59E  0373               	mulwf	___wmul@multiplicand& (0+255),b
 41909  00B5A0  006F FFCC  F075    	movff	prodl,___wmul@product
 41910  00B5A6  006F FFD0  F076    	movff	prodh,___wmul@product+1
 41911  00B5AC  5171               	movf	___wmul@multiplier& (0+255),w,b
 41912  00B5AE  0374               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 41913  00B5B0  50F3               	movf	243,w,c
 41914  00B5B2  2776               	addwf	(___wmul@product+1)& (0+255),f,b
 41915  00B5B4  5172               	movf	(___wmul@multiplier+1)& (0+255),w,b
 41916  00B5B6  0373               	mulwf	___wmul@multiplicand& (0+255),b
 41917  00B5B8  50F3               	movf	243,w,c
 41918  00B5BA  2776               	addwf	(___wmul@product+1)& (0+255),f,b
 41919                           
 41920                           ; BSR set to: 0
 41921  00B5BC  C075  F071         	movff	___wmul@product,?___wmul
 41922  00B5C0  C076  F072         	movff	___wmul@product+1,?___wmul+1
 41923                           
 41924                           ; BSR set to: 0
 41925  00B5C4  0012               	return		;funcret
 41926  00B5C6                     __end_of___wmul:
 41927                           	callstack 0
 41928                           
 41929 ;; *************** function _SYS_Init *****************
 41930 ;; Defined at:
 41931 ;;		line 58 in file "../sys/sys_src/sys.c"
 41932 ;; Parameters:    Size  Location     Type
 41933 ;;		None
 41934 ;; Auto vars:     Size  Location     Type
 41935 ;;		None
 41936 ;; Return value:  Size  Location     Type
 41937 ;;                  1    wreg      void 
 41938 ;; Registers used:
 41939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41940 ;; Tracked objects:
 41941 ;;		On entry : 0/39
 41942 ;;		On exit  : 3F/0
 41943 ;;		Unchanged: 0/0
 41944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41949 ;;Total ram usage:        0 bytes
 41950 ;; Hardware stack levels used:    1
 41951 ;; Hardware stack levels required when called:   14
 41952 ;; This function calls:
 41953 ;;		_NWK_Init
 41954 ;;		_PHY_Init
 41955 ;;		_SYS_TimerInit
 41956 ;; This function is called by:
 41957 ;;		_main
 41958 ;; This function uses a non-reentrant model
 41959 ;;
 41960                           
 41961                           	psect	text233
 41962  00BCB0                     __ptext233:
 41963                           	callstack 0
 41964  00BCB0                     _SYS_Init:
 41965                           	callstack 16
 41966                           
 41967                           ;../sys/sys_src/sys.c: 60:   SYS_TimerInit();
 41968                           
 41969                           ; BSR set to: 0
 41970                           ;incstack = 0
 41971  00BCB0  EC5F  F05E         	call	_SYS_TimerInit	;wreg free
 41972                           
 41973                           ; BSR set to: 0
 41974                           ;../sys/sys_src/sys.c: 61:   PHY_Init();
 41975  00BCB4  ECA2  F05E         	call	_PHY_Init	;wreg free
 41976                           
 41977                           ; BSR set to: 1
 41978                           ;../sys/sys_src/sys.c: 62:   NWK_Init();
 41979  00BCB8  EC9A  F052         	call	_NWK_Init	;wreg free
 41980                           
 41981                           ; BSR set to: 0
 41982  00BCBC  0012               	return		;funcret
 41983  00BCBE                     __end_of_SYS_Init:
 41984                           	callstack 0
 41985                           
 41986 ;; *************** function _SYS_TimerInit *****************
 41987 ;; Defined at:
 41988 ;;		line 63 in file "../sys/sys_src/sysTimer.c"
 41989 ;; Parameters:    Size  Location     Type
 41990 ;;		None
 41991 ;; Auto vars:     Size  Location     Type
 41992 ;;		None
 41993 ;; Return value:  Size  Location     Type
 41994 ;;                  1    wreg      void 
 41995 ;; Registers used:
 41996 ;;		wreg, status,2, status,0
 41997 ;; Tracked objects:
 41998 ;;		On entry : 0/39
 41999 ;;		On exit  : 3F/0
 42000 ;;		Unchanged: 0/0
 42001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42006 ;;Total ram usage:        0 bytes
 42007 ;; Hardware stack levels used:    1
 42008 ;; Hardware stack levels required when called:   11
 42009 ;; This function calls:
 42010 ;;		Nothing
 42011 ;; This function is called by:
 42012 ;;		_SYS_Init
 42013 ;; This function uses a non-reentrant model
 42014 ;;
 42015                           
 42016                           	psect	text234
 42017  00BCBE                     __ptext234:
 42018                           	callstack 0
 42019  00BCBE                     _SYS_TimerInit:
 42020                           	callstack 18
 42021                           
 42022                           ;../sys/sys_src/sysTimer.c: 65:   timers = (0);
 42023                           
 42024                           ; BSR set to: 0
 42025                           ;incstack = 0
 42026  00BCBE  0E00               	movlw	0
 42027  00BCC0  0100               	movlb	0	; force () banked
 42028  00BCC2  6FD1               	movwf	_timers& (0+255),b
 42029  00BCC4  0E00               	movlw	0
 42030  00BCC6  6FD2               	movwf	(_timers+1)& (0+255),b
 42031                           
 42032                           ; BSR set to: 0
 42033  00BCC8  0012               	return		;funcret
 42034  00BCCA                     __end_of_SYS_TimerInit:
 42035                           	callstack 0
 42036                           
 42037 ;; *************** function _PHY_Init *****************
 42038 ;; Defined at:
 42039 ;;		line 35 in file "../phy/phy_src/phy.c"
 42040 ;; Parameters:    Size  Location     Type
 42041 ;;		None
 42042 ;; Auto vars:     Size  Location     Type
 42043 ;;		None
 42044 ;; Return value:  Size  Location     Type
 42045 ;;                  1    wreg      void 
 42046 ;; Registers used:
 42047 ;;		wreg, status,2
 42048 ;; Tracked objects:
 42049 ;;		On entry : 3F/0
 42050 ;;		On exit  : 3F/1
 42051 ;;		Unchanged: 0/0
 42052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42057 ;;Total ram usage:        0 bytes
 42058 ;; Hardware stack levels used:    1
 42059 ;; Hardware stack levels required when called:   11
 42060 ;; This function calls:
 42061 ;;		Nothing
 42062 ;; This function is called by:
 42063 ;;		_SYS_Init
 42064 ;; This function uses a non-reentrant model
 42065 ;;
 42066                           
 42067                           	psect	text235
 42068  00BD44                     __ptext235:
 42069                           	callstack 0
 42070  00BD44                     _PHY_Init:
 42071                           	callstack 18
 42072                           
 42073                           ;../phy/phy_src/phy.c: 36:     radio_state_var = RAD_RESET_LOW;
 42074                           
 42075                           ; BSR set to: 0
 42076                           ;incstack = 0
 42077  00BD44  0E00               	movlw	0
 42078  00BD46  0101               	movlb	1	; force () banked
 42079  00BD48  6FFD               	movwf	_radio_state_var& (0+255),b
 42080                           
 42081                           ; BSR set to: 1
 42082  00BD4A  0012               	return		;funcret
 42083  00BD4C                     __end_of_PHY_Init:
 42084                           	callstack 0
 42085                           
 42086 ;; *************** function _NWK_Init *****************
 42087 ;; Defined at:
 42088 ;;		line 70 in file "../nwk/nwk_src/nwk.c"
 42089 ;; Parameters:    Size  Location     Type
 42090 ;;		None
 42091 ;; Auto vars:     Size  Location     Type
 42092 ;;  i               1   21[BANK0 ] unsigned char 
 42093 ;; Return value:  Size  Location     Type
 42094 ;;                  1    wreg      void 
 42095 ;; Registers used:
 42096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42097 ;; Tracked objects:
 42098 ;;		On entry : 3F/1
 42099 ;;		On exit  : 3F/0
 42100 ;;		Unchanged: 0/0
 42101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42103 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42105 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42106 ;;Total ram usage:        1 bytes
 42107 ;; Hardware stack levels used:    1
 42108 ;; Hardware stack levels required when called:   13
 42109 ;; This function calls:
 42110 ;;		_nwkDataReqInit
 42111 ;;		_nwkFrameInit
 42112 ;;		_nwkGroupInit
 42113 ;;		_nwkRouteInit
 42114 ;;		_nwkRxInit
 42115 ;;		_nwkTxInit
 42116 ;; This function is called by:
 42117 ;;		_SYS_Init
 42118 ;; This function uses a non-reentrant model
 42119 ;;
 42120                           
 42121                           	psect	text236
 42122  00A534                     __ptext236:
 42123                           	callstack 0
 42124  00A534                     _NWK_Init:
 42125                           	callstack 16
 42126                           
 42127                           ;../nwk/nwk_src/nwk.c: 72:   nwkIb.nwkSeqNum = 0;
 42128                           
 42129                           ; BSR set to: 1
 42130                           ;incstack = 0
 42131  00A534  0E00               	movlw	0
 42132  00A536  0102               	movlb	2	; force () banked
 42133  00A538  6F04               	movwf	(_nwkIb+4)& (0+255),b
 42134                           
 42135                           ;../nwk/nwk_src/nwk.c: 73:   nwkIb.macSeqNum = 0;
 42136  00A53A  0E00               	movlw	0
 42137  00A53C  6F05               	movwf	(_nwkIb+5)& (0+255),b
 42138                           
 42139                           ;../nwk/nwk_src/nwk.c: 74:   nwkIb.addr = 0;
 42140  00A53E  0E00               	movlw	0
 42141  00A540  6F01               	movwf	(_nwkIb+1)& (0+255),b
 42142  00A542  0E00               	movlw	0
 42143  00A544  6F00               	movwf	_nwkIb& (0+255),b
 42144                           
 42145                           ;../nwk/nwk_src/nwk.c: 75:   nwkIb.lock = 0;
 42146  00A546  0E00               	movlw	0
 42147  00A548  6F27               	movwf	(_nwkIb+39)& (0+255),b
 42148  00A54A  0E00               	movlw	0
 42149  00A54C  6F26               	movwf	(_nwkIb+38)& (0+255),b
 42150                           
 42151                           ;../nwk/nwk_src/nwk.c: 77:   for (uint8_t i = 0; i < 16; i++)
 42152  00A54E  0E00               	movlw	0
 42153  00A550  0100               	movlb	0	; force () banked
 42154  00A552  6F75               	movwf	NWK_Init@i& (0+255),b
 42155  00A554  D00F               	goto	l19988
 42156  00A556                     l19984:
 42157                           
 42158                           ; BSR set to: 0
 42159                           ;../nwk/nwk_src/nwk.c: 78:     nwkIb.endpoint[i] = (0);
 42160  00A556  0100               	movlb	0	; force () banked
 42161  00A558  5175               	movf	NWK_Init@i& (0+255),w,b
 42162  00A55A  0D02               	mullw	2
 42163  00A55C  0E06               	movlw	low (_nwkIb+6)
 42164  00A55E  24F3               	addwf	243,w,c
 42165  00A560  6ED9               	movwf	fsr2l,c
 42166  00A562  0E02               	movlw	high (_nwkIb+6)
 42167  00A564  20F4               	addwfc	prodh,w,c
 42168  00A566  6EDA               	movwf	fsr2h,c
 42169  00A568  0E00               	movlw	0
 42170  00A56A  6EDE               	movwf	postinc2,c
 42171  00A56C  0E00               	movlw	0
 42172  00A56E  6EDD               	movwf	postdec2,c
 42173                           
 42174                           ; BSR set to: 0
 42175  00A570  0100               	movlb	0	; force () banked
 42176  00A572  2B75               	incf	NWK_Init@i& (0+255),f,b
 42177  00A574                     l19988:
 42178                           
 42179                           ; BSR set to: 0
 42180  00A574  0E0F               	movlw	15
 42181  00A576  0100               	movlb	0	; force () banked
 42182  00A578  6575               	cpfsgt	NWK_Init@i& (0+255),b
 42183  00A57A  D7ED               	goto	l19984
 42184                           
 42185                           ; BSR set to: 0
 42186                           ;../nwk/nwk_src/nwk.c: 80:   nwkTxInit();
 42187  00A57C  EC4D  F055         	call	_nwkTxInit	;wreg free
 42188                           
 42189                           ; BSR set to: 3
 42190                           ;../nwk/nwk_src/nwk.c: 81:   nwkRxInit();
 42191  00A580  EC55  F053         	call	_nwkRxInit	;wreg free
 42192                           
 42193                           ; BSR set to: 0
 42194                           ;../nwk/nwk_src/nwk.c: 82:   nwkFrameInit();
 42195  00A584  ECE3  F05A         	call	_nwkFrameInit	;wreg free
 42196                           
 42197                           ;../nwk/nwk_src/nwk.c: 83:   nwkDataReqInit();
 42198  00A588  EC65  F05E         	call	_nwkDataReqInit	;wreg free
 42199                           
 42200                           ; BSR set to: 1
 42201                           ;../nwk/nwk_src/nwk.c: 86:   nwkRouteInit();
 42202  00A58C  EC83  F053         	call	_nwkRouteInit	;wreg free
 42203                           
 42204                           ; BSR set to: 0
 42205                           ;../nwk/nwk_src/nwk.c: 94:   nwkGroupInit();
 42206  00A590  EC73  F05A         	call	_nwkGroupInit	;wreg free
 42207                           
 42208                           ; BSR set to: 0
 42209  00A594  0012               	return		;funcret
 42210  00A596                     __end_of_NWK_Init:
 42211                           	callstack 0
 42212                           
 42213 ;; *************** function _nwkTxInit *****************
 42214 ;; Defined at:
 42215 ;;		line 94 in file "../nwk/nwk_src/nwkTx.c"
 42216 ;; Parameters:    Size  Location     Type
 42217 ;;		None
 42218 ;; Auto vars:     Size  Location     Type
 42219 ;;		None
 42220 ;; Return value:  Size  Location     Type
 42221 ;;                  1    wreg      void 
 42222 ;; Registers used:
 42223 ;;		wreg, status,2, status,0
 42224 ;; Tracked objects:
 42225 ;;		On entry : 3F/0
 42226 ;;		On exit  : 3F/3
 42227 ;;		Unchanged: 0/0
 42228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42233 ;;Total ram usage:        0 bytes
 42234 ;; Hardware stack levels used:    1
 42235 ;; Hardware stack levels required when called:   11
 42236 ;; This function calls:
 42237 ;;		Nothing
 42238 ;; This function is called by:
 42239 ;;		_NWK_Init
 42240 ;; This function uses a non-reentrant model
 42241 ;;
 42242                           
 42243                           	psect	text237
 42244  00AA9A                     __ptext237:
 42245                           	callstack 0
 42246  00AA9A                     _nwkTxInit:
 42247                           	callstack 17
 42248                           
 42249                           ;../nwk/nwk_src/nwkTx.c: 96:   nwkTxPhyActiveFrame = (0);
 42250                           
 42251                           ; BSR set to: 0
 42252                           ;incstack = 0
 42253  00AA9A  0E00               	movlw	0
 42254  00AA9C  0102               	movlb	2	; force () banked
 42255  00AA9E  6F3E               	movwf	_nwkTxPhyActiveFrame& (0+255),b
 42256  00AAA0  0E00               	movlw	0
 42257  00AAA2  6F3F               	movwf	(_nwkTxPhyActiveFrame+1)& (0+255),b
 42258                           
 42259                           ; BSR set to: 2
 42260                           ;../nwk/nwk_src/nwkTx.c: 98:   nwkTxAckWaitTimer.interval = 200;
 42261  00AAA4  0EC8               	movlw	200
 42262  00AAA6  0102               	movlb	2	; force () banked
 42263  00AAA8  6FB8               	movwf	(_nwkTxAckWaitTimer+6)& (0+255),b
 42264  00AAAA  0E00               	movlw	0
 42265  00AAAC  6FB9               	movwf	(_nwkTxAckWaitTimer+7)& (0+255),b
 42266  00AAAE  0E00               	movlw	0
 42267  00AAB0  6FBA               	movwf	(_nwkTxAckWaitTimer+8)& (0+255),b
 42268  00AAB2  0E00               	movlw	0
 42269  00AAB4  6FBB               	movwf	(_nwkTxAckWaitTimer+9)& (0+255),b
 42270                           
 42271                           ; BSR set to: 2
 42272                           ;../nwk/nwk_src/nwkTx.c: 99:   nwkTxAckWaitTimer.mode = SYS_TIMER_INTERVAL_MODE;
 42273  00AAB6  0E00               	movlw	0
 42274  00AAB8  0102               	movlb	2	; force () banked
 42275  00AABA  6FBC               	movwf	(_nwkTxAckWaitTimer+10)& (0+255),b
 42276                           
 42277                           ;../nwk/nwk_src/nwkTx.c: 100:   nwkTxAckWaitTimer.handler = nwkTxAckWaitTimerHandler;
 42278  00AABC  0E36               	movlw	low _nwkTxAckWaitTimerHandler
 42279  00AABE  6FBD               	movwf	(_nwkTxAckWaitTimer+11)& (0+255),b
 42280  00AAC0  0E9A               	movlw	high _nwkTxAckWaitTimerHandler
 42281  00AAC2  6FBE               	movwf	(_nwkTxAckWaitTimer+12)& (0+255),b
 42282                           
 42283                           ; BSR set to: 2
 42284                           ;../nwk/nwk_src/nwkTx.c: 102:   nwkTxDelayTimer.interval = 20;
 42285  00AAC4  0E14               	movlw	20
 42286  00AAC6  0103               	movlb	3	; force () banked
 42287  00AAC8  6FAC               	movwf	(_nwkTxDelayTimer+6)& (0+255),b
 42288  00AACA  0E00               	movlw	0
 42289  00AACC  6FAD               	movwf	(_nwkTxDelayTimer+7)& (0+255),b
 42290  00AACE  0E00               	movlw	0
 42291  00AAD0  6FAE               	movwf	(_nwkTxDelayTimer+8)& (0+255),b
 42292  00AAD2  0E00               	movlw	0
 42293  00AAD4  6FAF               	movwf	(_nwkTxDelayTimer+9)& (0+255),b
 42294                           
 42295                           ; BSR set to: 3
 42296                           ;../nwk/nwk_src/nwkTx.c: 103:   nwkTxDelayTimer.mode = SYS_TIMER_INTERVAL_MODE;
 42297  00AAD6  0E00               	movlw	0
 42298  00AAD8  0103               	movlb	3	; force () banked
 42299  00AADA  6FB0               	movwf	(_nwkTxDelayTimer+10)& (0+255),b
 42300                           
 42301                           ;../nwk/nwk_src/nwkTx.c: 104:   nwkTxDelayTimer.handler = nwkTxDelayTimerHandler;
 42302  00AADC  0E52               	movlw	low _nwkTxDelayTimerHandler
 42303  00AADE  6FB1               	movwf	(_nwkTxDelayTimer+11)& (0+255),b
 42304  00AAE0  0E9B               	movlw	high _nwkTxDelayTimerHandler
 42305  00AAE2  6FB2               	movwf	(_nwkTxDelayTimer+12)& (0+255),b
 42306                           
 42307                           ; BSR set to: 3
 42308  00AAE4  0012               	return		;funcret
 42309  00AAE6                     __end_of_nwkTxInit:
 42310                           	callstack 0
 42311                           
 42312 ;; *************** function _nwkRxInit *****************
 42313 ;; Defined at:
 42314 ;;		line 102 in file "../nwk/nwk_src/nwkRx.c"
 42315 ;; Parameters:    Size  Location     Type
 42316 ;;		None
 42317 ;; Auto vars:     Size  Location     Type
 42318 ;;  i               1   20[BANK0 ] unsigned char 
 42319 ;; Return value:  Size  Location     Type
 42320 ;;                  1    wreg      void 
 42321 ;; Registers used:
 42322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42323 ;; Tracked objects:
 42324 ;;		On entry : 3F/3
 42325 ;;		On exit  : 3F/0
 42326 ;;		Unchanged: 0/0
 42327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42329 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42331 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42332 ;;Total ram usage:        1 bytes
 42333 ;; Hardware stack levels used:    1
 42334 ;; Hardware stack levels required when called:   12
 42335 ;; This function calls:
 42336 ;;		_NWK_OpenEndpoint
 42337 ;; This function is called by:
 42338 ;;		_NWK_Init
 42339 ;; This function uses a non-reentrant model
 42340 ;;
 42341                           
 42342                           	psect	text238
 42343  00A6AA                     __ptext238:
 42344                           	callstack 0
 42345  00A6AA                     _nwkRxInit:
 42346                           	callstack 16
 42347                           
 42348                           ;../nwk/nwk_src/nwkRx.c: 104:   for (uint8_t i = 0; i < 32; i++)
 42349                           
 42350                           ; BSR set to: 3
 42351                           ;incstack = 0
 42352  00A6AA  0E00               	movlw	0
 42353  00A6AC  0100               	movlb	0	; force () banked
 42354  00A6AE  6F74               	movwf	nwkRxInit@i& (0+255),b
 42355  00A6B0  D00D               	goto	l19474
 42356  00A6B2                     l19470:
 42357                           
 42358                           ; BSR set to: 0
 42359                           ;../nwk/nwk_src/nwkRx.c: 105:     nwkRxDuplicateRejectionTable[i].ttl = 0;
 42360  00A6B2  0100               	movlb	0	; force () banked
 42361  00A6B4  5174               	movf	nwkRxInit@i& (0+255),w,b
 42362  00A6B6  0D05               	mullw	5
 42363  00A6B8  0E04               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 42364  00A6BA  24F3               	addwf	243,w,c
 42365  00A6BC  6ED9               	movwf	fsr2l,c
 42366  00A6BE  0E0A               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 42367  00A6C0  20F4               	addwfc	prodh,w,c
 42368  00A6C2  6EDA               	movwf	fsr2h,c
 42369  00A6C4  0E00               	movlw	0
 42370  00A6C6  6EDF               	movwf	indf2,c
 42371                           
 42372                           ; BSR set to: 0
 42373  00A6C8  0100               	movlb	0	; force () banked
 42374  00A6CA  2B74               	incf	nwkRxInit@i& (0+255),f,b
 42375  00A6CC                     l19474:
 42376                           
 42377                           ; BSR set to: 0
 42378  00A6CC  0E1F               	movlw	31
 42379  00A6CE  0100               	movlb	0	; force () banked
 42380  00A6D0  6574               	cpfsgt	nwkRxInit@i& (0+255),b
 42381  00A6D2  D7EF               	goto	l19470
 42382                           
 42383                           ; BSR set to: 0
 42384                           ;../nwk/nwk_src/nwkRx.c: 107:   nwkRxDuplicateRejectionTimer.interval = 5000;
 42385  00A6D4  0E88               	movlw	136
 42386  00A6D6  0102               	movlb	2	; force () banked
 42387  00A6D8  6FC5               	movwf	(_nwkRxDuplicateRejectionTimer+6)& (0+255),b
 42388  00A6DA  0E13               	movlw	19
 42389  00A6DC  6FC6               	movwf	(_nwkRxDuplicateRejectionTimer+7)& (0+255),b
 42390  00A6DE  0E00               	movlw	0
 42391  00A6E0  6FC7               	movwf	(_nwkRxDuplicateRejectionTimer+8)& (0+255),b
 42392  00A6E2  0E00               	movlw	0
 42393  00A6E4  6FC8               	movwf	(_nwkRxDuplicateRejectionTimer+9)& (0+255),b
 42394                           
 42395                           ;../nwk/nwk_src/nwkRx.c: 108:   nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_M
      +                          ODE;
 42396  00A6E6  0E00               	movlw	0
 42397  00A6E8  6FC9               	movwf	(_nwkRxDuplicateRejectionTimer+10)& (0+255),b
 42398                           
 42399                           ; BSR set to: 2
 42400                           ;../nwk/nwk_src/nwkRx.c: 109:   nwkRxDuplicateRejectionTimer.handler = nwkRxDuplicateRej
      +                          ectionTimerHandler;
 42401  00A6EA  0ED2               	movlw	low _nwkRxDuplicateRejectionTimerHandler
 42402  00A6EC  0102               	movlb	2	; force () banked
 42403  00A6EE  6FCA               	movwf	(_nwkRxDuplicateRejectionTimer+11)& (0+255),b
 42404  00A6F0  0EA4               	movlw	high _nwkRxDuplicateRejectionTimerHandler
 42405  00A6F2  6FCB               	movwf	(_nwkRxDuplicateRejectionTimer+12)& (0+255),b
 42406                           
 42407                           ; BSR set to: 2
 42408                           ;../nwk/nwk_src/nwkRx.c: 111:   NWK_OpenEndpoint(0, nwkRxServiceDataInd);
 42409  00A6F4  0E04               	movlw	low _nwkRxServiceDataInd
 42410  00A6F6  0100               	movlb	0	; force () banked
 42411  00A6F8  6F71               	movwf	NWK_OpenEndpoint@handler& (0+255),b
 42412  00A6FA  0EA0               	movlw	high _nwkRxServiceDataInd
 42413  00A6FC  6F72               	movwf	(NWK_OpenEndpoint@handler+1)& (0+255),b
 42414  00A6FE  0E00               	movlw	0
 42415  00A700  ECFF  F05B         	call	_NWK_OpenEndpoint
 42416                           
 42417                           ; BSR set to: 0
 42418  00A704  0012               	return		;funcret
 42419  00A706                     __end_of_nwkRxInit:
 42420                           	callstack 0
 42421                           
 42422 ;; *************** function _NWK_OpenEndpoint *****************
 42423 ;; Defined at:
 42424 ;;		line 127 in file "../nwk/nwk_src/nwk.c"
 42425 ;; Parameters:    Size  Location     Type
 42426 ;;  id              1    wreg     unsigned char 
 42427 ;;  handler         2   17[BANK0 ] PTR FTN(PTR struct NWK_D
 42428 ;;		 -> nwkRxServiceDataInd(1), appManagementEp(1), appDataInd(1), 
 42429 ;; Auto vars:     Size  Location     Type
 42430 ;;  id              1   19[BANK0 ] unsigned char 
 42431 ;; Return value:  Size  Location     Type
 42432 ;;                  1    wreg      void 
 42433 ;; Registers used:
 42434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42435 ;; Tracked objects:
 42436 ;;		On entry : 3F/0
 42437 ;;		On exit  : 3F/0
 42438 ;;		Unchanged: 0/0
 42439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42440 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42441 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42443 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42444 ;;Total ram usage:        3 bytes
 42445 ;; Hardware stack levels used:    1
 42446 ;; Hardware stack levels required when called:   11
 42447 ;; This function calls:
 42448 ;;		Nothing
 42449 ;; This function is called by:
 42450 ;;		_bootLoadApplication
 42451 ;;		_nwkRxInit
 42452 ;; This function uses a non-reentrant model
 42453 ;;
 42454                           
 42455                           	psect	text239
 42456  00B7FE                     __ptext239:
 42457                           	callstack 0
 42458  00B7FE                     _NWK_OpenEndpoint:
 42459                           	callstack 18
 42460                           
 42461                           ; BSR set to: 0
 42462                           ;incstack = 0
 42463                           ;NWK_OpenEndpoint@id stored from wreg
 42464  00B7FE  0100               	movlb	0	; force () banked
 42465  00B800  6F73               	movwf	NWK_OpenEndpoint@id& (0+255),b
 42466                           
 42467                           ;../nwk/nwk_src/nwk.c: 127: void NWK_OpenEndpoint(uint8_t id, _Bool (*handler)(NWK_DataI
      +                          nd_t *ind));../nwk/nwk_src/nwk.c: 128: {;../nwk/nwk_src/nwk.c: 129:   nwkIb.endpoint[id]
      +                           = handler;
 42468  00B802  0100               	movlb	0	; force () banked
 42469  00B804  5173               	movf	NWK_OpenEndpoint@id& (0+255),w,b
 42470  00B806  0D02               	mullw	2
 42471  00B808  0E06               	movlw	low (_nwkIb+6)
 42472  00B80A  24F3               	addwf	243,w,c
 42473  00B80C  6ED9               	movwf	fsr2l,c
 42474  00B80E  0E02               	movlw	high (_nwkIb+6)
 42475  00B810  20F4               	addwfc	prodh,w,c
 42476  00B812  6EDA               	movwf	fsr2h,c
 42477  00B814  0060  F1C7  FFDE   	movff	NWK_OpenEndpoint@handler,postinc2
 42478  00B81A  0060  F1CB  FFDD   	movff	NWK_OpenEndpoint@handler+1,postdec2
 42479                           
 42480                           ; BSR set to: 0
 42481  00B820  0012               	return		;funcret
 42482  00B822                     __end_of_NWK_OpenEndpoint:
 42483                           	callstack 0
 42484                           
 42485 ;; *************** function _nwkRouteInit *****************
 42486 ;; Defined at:
 42487 ;;		line 81 in file "../nwk/nwk_src/nwkRoute.c"
 42488 ;; Parameters:    Size  Location     Type
 42489 ;;		None
 42490 ;; Auto vars:     Size  Location     Type
 42491 ;;  i               1   17[BANK0 ] unsigned char 
 42492 ;; Return value:  Size  Location     Type
 42493 ;;                  1    wreg      void 
 42494 ;; Registers used:
 42495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42496 ;; Tracked objects:
 42497 ;;		On entry : 3F/1
 42498 ;;		On exit  : 3F/0
 42499 ;;		Unchanged: 0/0
 42500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42502 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42504 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42505 ;;Total ram usage:        1 bytes
 42506 ;; Hardware stack levels used:    1
 42507 ;; Hardware stack levels required when called:   11
 42508 ;; This function calls:
 42509 ;;		Nothing
 42510 ;; This function is called by:
 42511 ;;		_NWK_Init
 42512 ;; This function uses a non-reentrant model
 42513 ;;
 42514                           
 42515                           	psect	text240
 42516  00A706                     __ptext240:
 42517                           	callstack 0
 42518  00A706                     _nwkRouteInit:
 42519                           	callstack 17
 42520                           
 42521                           ;../nwk/nwk_src/nwkRoute.c: 83:   for (uint8_t i = 0; i < 32; i++)
 42522                           
 42523                           ; BSR set to: 0
 42524                           ;incstack = 0
 42525  00A706  0E00               	movlw	0
 42526  00A708  0100               	movlb	0	; force () banked
 42527  00A70A  6F71               	movwf	nwkRouteInit@i& (0+255),b
 42528  00A70C  D024               	goto	l15646
 42529  00A70E                     l15642:
 42530                           
 42531                           ; BSR set to: 0
 42532                           ;../nwk/nwk_src/nwkRoute.c: 84:   {;../nwk/nwk_src/nwkRoute.c: 85:     nwkRouteTable[i].
      +                          dstAddr = 0xffff;
 42533  00A70E  0100               	movlb	0	; force () banked
 42534  00A710  5171               	movf	nwkRouteInit@i& (0+255),w,b
 42535  00A712  0D07               	mullw	7
 42536  00A714  0E01               	movlw	low (_nwkRouteTable+1)
 42537  00A716  24F3               	addwf	243,w,c
 42538  00A718  6ED9               	movwf	fsr2l,c
 42539  00A71A  0E08               	movlw	high (_nwkRouteTable+1)
 42540  00A71C  20F4               	addwfc	prodh,w,c
 42541  00A71E  6EDA               	movwf	fsr2h,c
 42542  00A720  0EFF               	movlw	255
 42543  00A722  6EDE               	movwf	postinc2,c
 42544  00A724  0EFF               	movlw	255
 42545  00A726  6EDD               	movwf	postdec2,c
 42546                           
 42547                           ;../nwk/nwk_src/nwkRoute.c: 86:     nwkRouteTable[i].fixed = 0;
 42548  00A728  5171               	movf	nwkRouteInit@i& (0+255),w,b
 42549  00A72A  0D07               	mullw	7
 42550  00A72C  0E00               	movlw	low _nwkRouteTable
 42551  00A72E  24F3               	addwf	243,w,c
 42552  00A730  6ED9               	movwf	fsr2l,c
 42553  00A732  0E08               	movlw	high _nwkRouteTable
 42554  00A734  20F4               	addwfc	prodh,w,c
 42555  00A736  6EDA               	movwf	fsr2h,c
 42556  00A738  0108               	movlb	8	; force () banked
 42557  00A73A  90DF               	bcf	indf2,0,c
 42558                           
 42559                           ;../nwk/nwk_src/nwkRoute.c: 87:     nwkRouteTable[i].rank = 0;
 42560  00A73C  0100               	movlb	0	; force () banked
 42561  00A73E  5171               	movf	nwkRouteInit@i& (0+255),w,b
 42562  00A740  0D07               	mullw	7
 42563  00A742  0E05               	movlw	low (_nwkRouteTable+5)
 42564  00A744  24F3               	addwf	243,w,c
 42565  00A746  6ED9               	movwf	fsr2l,c
 42566  00A748  0E08               	movlw	high (_nwkRouteTable+5)
 42567  00A74A  20F4               	addwfc	prodh,w,c
 42568  00A74C  6EDA               	movwf	fsr2h,c
 42569  00A74E  0E00               	movlw	0
 42570  00A750  6EDF               	movwf	indf2,c
 42571                           
 42572                           ; BSR set to: 0
 42573                           ;../nwk/nwk_src/nwkRoute.c: 88:   }
 42574  00A752  0100               	movlb	0	; force () banked
 42575  00A754  2B71               	incf	nwkRouteInit@i& (0+255),f,b
 42576  00A756                     l15646:
 42577                           
 42578                           ; BSR set to: 0
 42579  00A756  0E1F               	movlw	31
 42580  00A758  0100               	movlb	0	; force () banked
 42581  00A75A  6571               	cpfsgt	nwkRouteInit@i& (0+255),b
 42582  00A75C  D7D8               	goto	l15642
 42583  00A75E  0012               	return	
 42584  00A760                     __end_of_nwkRouteInit:
 42585                           	callstack 0
 42586                           
 42587 ;; *************** function _nwkGroupInit *****************
 42588 ;; Defined at:
 42589 ;;		line 70 in file "../nwk/nwk_src/nwkGroup.c"
 42590 ;; Parameters:    Size  Location     Type
 42591 ;;		None
 42592 ;; Auto vars:     Size  Location     Type
 42593 ;;  i               1   17[BANK0 ] unsigned char 
 42594 ;; Return value:  Size  Location     Type
 42595 ;;                  1    wreg      void 
 42596 ;; Registers used:
 42597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42598 ;; Tracked objects:
 42599 ;;		On entry : 3D/2
 42600 ;;		On exit  : 3F/0
 42601 ;;		Unchanged: 0/0
 42602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42604 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42606 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42607 ;;Total ram usage:        1 bytes
 42608 ;; Hardware stack levels used:    1
 42609 ;; Hardware stack levels required when called:   11
 42610 ;; This function calls:
 42611 ;;		Nothing
 42612 ;; This function is called by:
 42613 ;;		_handle_rw_regs
 42614 ;;		_NWK_Init
 42615 ;; This function uses a non-reentrant model
 42616 ;;
 42617                           
 42618                           	psect	text241
 42619  00B4E6                     __ptext241:
 42620                           	callstack 0
 42621  00B4E6                     _nwkGroupInit:
 42622                           	callstack 16
 42623                           
 42624                           ;../nwk/nwk_src/nwkGroup.c: 72:   for (uint8_t i = 0; i < 10; i++)
 42625                           
 42626                           ; BSR set to: 0
 42627                           ;incstack = 0
 42628  00B4E6  0E00               	movlw	0
 42629  00B4E8  0100               	movlb	0	; force () banked
 42630  00B4EA  6F71               	movwf	nwkGroupInit@i& (0+255),b
 42631  00B4EC  D00F               	goto	l14354
 42632  00B4EE                     l14350:
 42633                           
 42634                           ; BSR set to: 0
 42635                           ;../nwk/nwk_src/nwkGroup.c: 73:     nwkGroups[i] = 0xffff;
 42636  00B4EE  0100               	movlb	0	; force () banked
 42637  00B4F0  5171               	movf	nwkGroupInit@i& (0+255),w,b
 42638  00B4F2  0D02               	mullw	2
 42639  00B4F4  0E72               	movlw	low _nwkGroups
 42640  00B4F6  24F3               	addwf	243,w,c
 42641  00B4F8  6ED9               	movwf	fsr2l,c
 42642  00B4FA  0E03               	movlw	high _nwkGroups
 42643  00B4FC  20F4               	addwfc	prodh,w,c
 42644  00B4FE  6EDA               	movwf	fsr2h,c
 42645  00B500  0EFF               	movlw	255
 42646  00B502  6EDE               	movwf	postinc2,c
 42647  00B504  0EFF               	movlw	255
 42648  00B506  6EDD               	movwf	postdec2,c
 42649                           
 42650                           ; BSR set to: 0
 42651  00B508  0100               	movlb	0	; force () banked
 42652  00B50A  2B71               	incf	nwkGroupInit@i& (0+255),f,b
 42653  00B50C                     l14354:
 42654                           
 42655                           ; BSR set to: 0
 42656  00B50C  0E09               	movlw	9
 42657  00B50E  0100               	movlb	0	; force () banked
 42658  00B510  6571               	cpfsgt	nwkGroupInit@i& (0+255),b
 42659  00B512  D7ED               	goto	l14350
 42660  00B514  0012               	return	
 42661  00B516                     __end_of_nwkGroupInit:
 42662                           	callstack 0
 42663                           
 42664 ;; *************** function _nwkFrameInit *****************
 42665 ;; Defined at:
 42666 ;;		line 70 in file "../nwk/nwk_src/nwkFrame.c"
 42667 ;; Parameters:    Size  Location     Type
 42668 ;;		None
 42669 ;; Auto vars:     Size  Location     Type
 42670 ;;  i               1   17[BANK0 ] unsigned char 
 42671 ;; Return value:  Size  Location     Type
 42672 ;;                  1    wreg      void 
 42673 ;; Registers used:
 42674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42675 ;; Tracked objects:
 42676 ;;		On entry : 3F/0
 42677 ;;		On exit  : 3F/0
 42678 ;;		Unchanged: 0/0
 42679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42681 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42683 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42684 ;;Total ram usage:        1 bytes
 42685 ;; Hardware stack levels used:    1
 42686 ;; Hardware stack levels required when called:   11
 42687 ;; This function calls:
 42688 ;;		Nothing
 42689 ;; This function is called by:
 42690 ;;		_NWK_Init
 42691 ;; This function uses a non-reentrant model
 42692 ;;
 42693                           
 42694                           	psect	text242
 42695  00B5C6                     __ptext242:
 42696                           	callstack 0
 42697  00B5C6                     _nwkFrameInit:
 42698                           	callstack 17
 42699                           
 42700                           ;../nwk/nwk_src/nwkFrame.c: 72:   for (uint8_t i = 0; i < 5; i++)
 42701                           
 42702                           ; BSR set to: 0
 42703                           ;incstack = 0
 42704  00B5C6  0E00               	movlw	0
 42705  00B5C8  0100               	movlb	0	; force () banked
 42706  00B5CA  6F71               	movwf	nwkFrameInit@i& (0+255),b
 42707  00B5CC  D00D               	goto	l15632
 42708  00B5CE                     l15628:
 42709                           
 42710                           ; BSR set to: 0
 42711                           ;../nwk/nwk_src/nwkFrame.c: 73:     nwkFrameFrames[i].state = NWK_FRAME_STATE_FREE;
 42712  00B5CE  0100               	movlb	0	; force () banked
 42713  00B5D0  5171               	movf	nwkFrameInit@i& (0+255),w,b
 42714  00B5D2  0D8A               	mullw	138
 42715  00B5D4  0EA0               	movlw	low _nwkFrameFrames
 42716  00B5D6  24F3               	addwf	243,w,c
 42717  00B5D8  6ED9               	movwf	fsr2l,c
 42718  00B5DA  0E0A               	movlw	high _nwkFrameFrames
 42719  00B5DC  20F4               	addwfc	prodh,w,c
 42720  00B5DE  6EDA               	movwf	fsr2h,c
 42721  00B5E0  0E00               	movlw	0
 42722  00B5E2  6EDF               	movwf	indf2,c
 42723                           
 42724                           ; BSR set to: 0
 42725  00B5E4  0100               	movlb	0	; force () banked
 42726  00B5E6  2B71               	incf	nwkFrameInit@i& (0+255),f,b
 42727  00B5E8                     l15632:
 42728                           
 42729                           ; BSR set to: 0
 42730  00B5E8  0E04               	movlw	4
 42731  00B5EA  0100               	movlb	0	; force () banked
 42732  00B5EC  6571               	cpfsgt	nwkFrameInit@i& (0+255),b
 42733  00B5EE  D7EF               	goto	l15628
 42734  00B5F0  0012               	return	
 42735  00B5F2                     __end_of_nwkFrameInit:
 42736                           	callstack 0
 42737                           
 42738 ;; *************** function _nwkDataReqInit *****************
 42739 ;; Defined at:
 42740 ;;		line 78 in file "../nwk/nwk_src/nwkDataReq.c"
 42741 ;; Parameters:    Size  Location     Type
 42742 ;;		None
 42743 ;; Auto vars:     Size  Location     Type
 42744 ;;		None
 42745 ;; Return value:  Size  Location     Type
 42746 ;;                  1    wreg      void 
 42747 ;; Registers used:
 42748 ;;		wreg, status,2, status,0
 42749 ;; Tracked objects:
 42750 ;;		On entry : 3F/0
 42751 ;;		On exit  : 3F/1
 42752 ;;		Unchanged: 0/0
 42753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42758 ;;Total ram usage:        0 bytes
 42759 ;; Hardware stack levels used:    1
 42760 ;; Hardware stack levels required when called:   11
 42761 ;; This function calls:
 42762 ;;		Nothing
 42763 ;; This function is called by:
 42764 ;;		_NWK_Init
 42765 ;; This function uses a non-reentrant model
 42766 ;;
 42767                           
 42768                           	psect	text243
 42769  00BCCA                     __ptext243:
 42770                           	callstack 0
 42771  00BCCA                     _nwkDataReqInit:
 42772                           	callstack 17
 42773                           
 42774                           ;../nwk/nwk_src/nwkDataReq.c: 80:   nwkDataReqQueue = (0);
 42775                           
 42776                           ; BSR set to: 0
 42777                           ;incstack = 0
 42778  00BCCA  0E00               	movlw	0
 42779  00BCCC  0101               	movlb	1	; force () banked
 42780  00BCCE  6FD7               	movwf	_nwkDataReqQueue& (0+255),b
 42781  00BCD0  0E00               	movlw	0
 42782  00BCD2  6FD8               	movwf	(_nwkDataReqQueue+1)& (0+255),b
 42783                           
 42784                           ; BSR set to: 1
 42785  00BCD4  0012               	return		;funcret
 42786  00BCD6                     __end_of_nwkDataReqInit:
 42787                           	callstack 0
 42788                           
 42789 ;; *************** function _SYSTEM_Initialize *****************
 42790 ;; Defined at:
 42791 ;;		line 50 in file "mcc_generated_files/mcc.c"
 42792 ;; Parameters:    Size  Location     Type
 42793 ;;		None
 42794 ;; Auto vars:     Size  Location     Type
 42795 ;;		None
 42796 ;; Return value:  Size  Location     Type
 42797 ;;                  1    wreg      void 
 42798 ;; Registers used:
 42799 ;;		wreg, status,2, status,0, cstack
 42800 ;; Tracked objects:
 42801 ;;		On entry : 0/0
 42802 ;;		On exit  : 3F/39
 42803 ;;		Unchanged: 0/0
 42804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42809 ;;Total ram usage:        0 bytes
 42810 ;; Hardware stack levels used:    1
 42811 ;; Hardware stack levels required when called:   13
 42812 ;; This function calls:
 42813 ;;		_CRC_Initialize
 42814 ;;		_INTERRUPT_Initialize
 42815 ;;		_OSCILLATOR_Initialize
 42816 ;;		_PIN_MANAGER_Initialize
 42817 ;;		_PMD_Initialize
 42818 ;;		_SPI1_Initialize
 42819 ;;		_SystemArbiter_Initialize
 42820 ;;		_TMR0_Initialize
 42821 ;;		_TMR3_Initialize
 42822 ;;		_UART1_Initialize
 42823 ;; This function is called by:
 42824 ;;		_main
 42825 ;; This function uses a non-reentrant model
 42826 ;;
 42827                           
 42828                           	psect	text244
 42829  00B6C6                     __ptext244:
 42830                           	callstack 0
 42831  00B6C6                     _SYSTEM_Initialize:
 42832                           	callstack 17
 42833                           
 42834                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 42835                           
 42836                           ; BSR set to: 1
 42837                           ;incstack = 0
 42838  00B6C6  EC33  F054         	call	_INTERRUPT_Initialize	;wreg free
 42839                           
 42840                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 42841  00B6CA  EC2A  F05A         	call	_PMD_Initialize	;wreg free
 42842                           
 42843                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 42844  00B6CE  ECDE  F045         	call	_PIN_MANAGER_Initialize	;wreg free
 42845                           
 42846                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 42847  00B6D2  ECCB  F05C         	call	_OSCILLATOR_Initialize	;wreg free
 42848                           
 42849                           ; BSR set to: 57
 42850                           ;mcc_generated_files/mcc.c: 56:     CRC_Initialize();
 42851  00B6D6  ECB1  F04B         	call	_CRC_Initialize	;wreg free
 42852                           
 42853                           ; BSR set to: 2
 42854                           ;mcc_generated_files/mcc.c: 57:     TMR3_Initialize();
 42855  00B6DA  EC00  F055         	call	_TMR3_Initialize	;wreg free
 42856                           
 42857                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
 42858  00B6DE  EC9B  F056         	call	_TMR0_Initialize	;wreg free
 42859                           
 42860                           ;mcc_generated_files/mcc.c: 59:     UART1_Initialize();
 42861  00B6E2  EC68  F041         	call	_UART1_Initialize	;wreg free
 42862                           
 42863                           ;mcc_generated_files/mcc.c: 60:     SPI1_Initialize();
 42864  00B6E6  EC88  F05C         	call	_SPI1_Initialize	;wreg free
 42865                           
 42866                           ;mcc_generated_files/mcc.c: 61:     SystemArbiter_Initialize();
 42867  00B6EA  EC34  F05E         	call	_SystemArbiter_Initialize	;wreg free
 42868                           
 42869                           ; BSR set to: 57
 42870  00B6EE  0012               	return		;funcret
 42871  00B6F0                     __end_of_SYSTEM_Initialize:
 42872                           	callstack 0
 42873                           
 42874 ;; *************** function _UART1_Initialize *****************
 42875 ;; Defined at:
 42876 ;;		line 95 in file "mcc_generated_files/uart1.c"
 42877 ;; Parameters:    Size  Location     Type
 42878 ;;		None
 42879 ;; Auto vars:     Size  Location     Type
 42880 ;;		None
 42881 ;; Return value:  Size  Location     Type
 42882 ;;                  1    wreg      void 
 42883 ;; Registers used:
 42884 ;;		wreg, status,2, status,0, cstack
 42885 ;; Tracked objects:
 42886 ;;		On entry : 0/2
 42887 ;;		On exit  : 3F/39
 42888 ;;		Unchanged: 0/0
 42889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42894 ;;Total ram usage:        0 bytes
 42895 ;; Hardware stack levels used:    1
 42896 ;; Hardware stack levels required when called:   12
 42897 ;; This function calls:
 42898 ;;		_UART1_SetErrorHandler
 42899 ;;		_UART1_SetFramingErrorHandler
 42900 ;;		_UART1_SetOverrunErrorHandler
 42901 ;;		_UART1_SetRxInterruptHandler
 42902 ;;		_UART1_SetTxInterruptHandler
 42903 ;; This function is called by:
 42904 ;;		_SYSTEM_Initialize
 42905 ;; This function uses a non-reentrant model
 42906 ;;
 42907                           
 42908                           	psect	text245
 42909  0082D0                     __ptext245:
 42910                           	callstack 0
 42911  0082D0                     _UART1_Initialize:
 42912                           	callstack 17
 42913                           
 42914                           ;mcc_generated_files/uart1.c: 98:     PIE3bits.U1RXIE = 0;
 42915                           
 42916                           ; BSR set to: 57
 42917                           ;incstack = 0
 42918  0082D0  0139               	movlb	57	; force () banked
 42919  0082D2  9793               	bcf	147,3,b	;volatile
 42920                           
 42921                           ; BSR set to: 57
 42922                           ;mcc_generated_files/uart1.c: 99:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 42923  0082D4  0EAC               	movlw	low _UART1_Receive_ISR
 42924  0082D6  0100               	movlb	0	; force () banked
 42925  0082D8  6F71               	movwf	UART1_SetRxInterruptHandler@InterruptHandler& (0+255),b
 42926  0082DA  0E90               	movlw	high _UART1_Receive_ISR
 42927  0082DC  6F72               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)& (0+255),b
 42928  0082DE  EC84  F05E         	call	_UART1_SetRxInterruptHandler	;wreg free
 42929                           
 42930                           ;mcc_generated_files/uart1.c: 100:     PIE3bits.U1TXIE = 0;
 42931  0082E2  0139               	movlb	57	; force () banked
 42932  0082E4  9993               	bcf	147,4,b	;volatile
 42933                           
 42934                           ;mcc_generated_files/uart1.c: 101:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 42935  0082E6  0E3A               	movlw	low _UART1_Transmit_ISR
 42936  0082E8  0100               	movlb	0	; force () banked
 42937  0082EA  6F71               	movwf	UART1_SetTxInterruptHandler@InterruptHandler& (0+255),b
 42938  0082EC  0EB2               	movlw	high _UART1_Transmit_ISR
 42939  0082EE  6F72               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)& (0+255),b
 42940  0082F0  EC7F  F05E         	call	_UART1_SetTxInterruptHandler	;wreg free
 42941                           
 42942                           ;mcc_generated_files/uart1.c: 106:     U1P1L = 0x00;
 42943  0082F4  0E00               	movlw	0
 42944  0082F6  013D               	movlb	61	; force () banked
 42945  0082F8  6FEC               	movwf	236,b	;volatile
 42946                           
 42947                           ; BSR set to: 61
 42948                           ;mcc_generated_files/uart1.c: 109:     U1P1H = 0x00;
 42949  0082FA  0E00               	movlw	0
 42950  0082FC  013D               	movlb	61	; force () banked
 42951  0082FE  6FED               	movwf	237,b	;volatile
 42952                           
 42953                           ; BSR set to: 61
 42954                           ;mcc_generated_files/uart1.c: 112:     U1P2L = 0x00;
 42955  008300  0E00               	movlw	0
 42956  008302  013D               	movlb	61	; force () banked
 42957  008304  6FEE               	movwf	238,b	;volatile
 42958                           
 42959                           ; BSR set to: 61
 42960                           ;mcc_generated_files/uart1.c: 115:     U1P2H = 0x00;
 42961  008306  0E00               	movlw	0
 42962  008308  013D               	movlb	61	; force () banked
 42963  00830A  6FEF               	movwf	239,b	;volatile
 42964                           
 42965                           ; BSR set to: 61
 42966                           ;mcc_generated_files/uart1.c: 118:     U1P3L = 0x00;
 42967  00830C  0E00               	movlw	0
 42968  00830E  013D               	movlb	61	; force () banked
 42969  008310  6FF0               	movwf	240,b	;volatile
 42970                           
 42971                           ; BSR set to: 61
 42972                           ;mcc_generated_files/uart1.c: 121:     U1P3H = 0x00;
 42973  008312  0E00               	movlw	0
 42974  008314  013D               	movlb	61	; force () banked
 42975  008316  6FF1               	movwf	241,b	;volatile
 42976                           
 42977                           ; BSR set to: 61
 42978                           ;mcc_generated_files/uart1.c: 124:     U1CON0 = 0xB3;
 42979  008318  0EB3               	movlw	179
 42980  00831A  013D               	movlb	61	; force () banked
 42981  00831C  6FF2               	movwf	242,b	;volatile
 42982                           
 42983                           ; BSR set to: 61
 42984                           ;mcc_generated_files/uart1.c: 127:     U1CON1 = 0x00;
 42985  00831E  0E00               	movlw	0
 42986  008320  013D               	movlb	61	; force () banked
 42987  008322  6FF3               	movwf	243,b	;volatile
 42988                           
 42989                           ; BSR set to: 61
 42990                           ;mcc_generated_files/uart1.c: 130:     U1CON2 = 0x82;
 42991  008324  0E82               	movlw	130
 42992  008326  013D               	movlb	61	; force () banked
 42993  008328  6FF4               	movwf	244,b	;volatile
 42994                           
 42995                           ; BSR set to: 61
 42996                           ;mcc_generated_files/uart1.c: 133:     U1BRGL = 0x40;
 42997  00832A  0E40               	movlw	64
 42998  00832C  013D               	movlb	61	; force () banked
 42999  00832E  6FF5               	movwf	245,b	;volatile
 43000                           
 43001                           ; BSR set to: 61
 43002                           ;mcc_generated_files/uart1.c: 136:     U1BRGH = 0x03;
 43003  008330  0E03               	movlw	3
 43004  008332  013D               	movlb	61	; force () banked
 43005  008334  6FF6               	movwf	246,b	;volatile
 43006                           
 43007                           ; BSR set to: 61
 43008                           ;mcc_generated_files/uart1.c: 139:     U1FIFO = 0x00;
 43009  008336  0E00               	movlw	0
 43010  008338  013D               	movlb	61	; force () banked
 43011  00833A  6FF7               	movwf	247,b	;volatile
 43012                           
 43013                           ; BSR set to: 61
 43014                           ;mcc_generated_files/uart1.c: 142:     U1UIR = 0x00;
 43015  00833C  0E00               	movlw	0
 43016  00833E  013D               	movlb	61	; force () banked
 43017  008340  6FF8               	movwf	248,b	;volatile
 43018                           
 43019                           ; BSR set to: 61
 43020                           ;mcc_generated_files/uart1.c: 145:     U1ERRIR = 0x00;
 43021  008342  0E00               	movlw	0
 43022  008344  013D               	movlb	61	; force () banked
 43023  008346  6FF9               	movwf	249,b	;volatile
 43024                           
 43025                           ; BSR set to: 61
 43026                           ;mcc_generated_files/uart1.c: 148:     U1ERRIE = 0x00;
 43027  008348  0E00               	movlw	0
 43028  00834A  013D               	movlb	61	; force () banked
 43029  00834C  6FFA               	movwf	250,b	;volatile
 43030                           
 43031                           ; BSR set to: 61
 43032                           ;mcc_generated_files/uart1.c: 151:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 43033  00834E  0E96               	movlw	low _UART1_DefaultFramingErrorHandler
 43034  008350  0100               	movlb	0	; force () banked
 43035  008352  6F71               	movwf	UART1_SetFramingErrorHandler@interruptHandler& (0+255),b
 43036  008354  0EBD               	movlw	high _UART1_DefaultFramingErrorHandler
 43037  008356  6F72               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 43038  008358  EC8E  F05E         	call	_UART1_SetFramingErrorHandler	;wreg free
 43039                           
 43040                           ;mcc_generated_files/uart1.c: 152:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 43041  00835C  0E94               	movlw	low _UART1_DefaultOverrunErrorHandler
 43042  00835E  0100               	movlb	0	; force () banked
 43043  008360  6F71               	movwf	UART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
 43044  008362  0EBD               	movlw	high _UART1_DefaultOverrunErrorHandler
 43045  008364  6F72               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 43046  008366  EC89  F05E         	call	_UART1_SetOverrunErrorHandler	;wreg free
 43047                           
 43048                           ;mcc_generated_files/uart1.c: 153:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 43049  00836A  0E6A               	movlw	low _UART1_DefaultErrorHandler
 43050  00836C  0100               	movlb	0	; force () banked
 43051  00836E  6F71               	movwf	UART1_SetErrorHandler@interruptHandler& (0+255),b
 43052  008370  0EBD               	movlw	high _UART1_DefaultErrorHandler
 43053  008372  6F72               	movwf	(UART1_SetErrorHandler@interruptHandler+1)& (0+255),b
 43054  008374  EC93  F05E         	call	_UART1_SetErrorHandler	;wreg free
 43055                           
 43056                           ;mcc_generated_files/uart1.c: 155:     uart1RxLastError.status = 0;
 43057  008378  0E00               	movlw	0
 43058  00837A  0102               	movlb	2	; force () banked
 43059  00837C  6F58               	movwf	_uart1RxLastError& (0+255),b	;volatile
 43060                           
 43061                           ;mcc_generated_files/uart1.c: 158:     uart1TxHead = 0;
 43062  00837E  0E00               	movlw	0
 43063  008380  0101               	movlb	1	; force () banked
 43064  008382  6FE3               	movwf	_uart1TxHead& (0+255),b	;volatile
 43065                           
 43066                           ;mcc_generated_files/uart1.c: 159:     uart1TxTail = 0;
 43067  008384  0E00               	movlw	0
 43068  008386  0101               	movlb	1	; force () banked
 43069  008388  6FE2               	movwf	_uart1TxTail& (0+255),b	;volatile
 43070                           
 43071                           ;mcc_generated_files/uart1.c: 160:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 43072  00838A  0E40               	movlw	64
 43073  00838C  0102               	movlb	2	; force () banked
 43074  00838E  6FF4               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
 43075                           
 43076                           ;mcc_generated_files/uart1.c: 161:     uart1RxHead = 0;
 43077  008390  0E00               	movlw	0
 43078  008392  0100               	movlb	0	; force () banked
 43079  008394  6FDB               	movwf	_uart1RxHead& (0+255),b	;volatile
 43080                           
 43081                           ;mcc_generated_files/uart1.c: 162:     uart1RxTail = 0;
 43082  008396  0E00               	movlw	0
 43083  008398  0100               	movlb	0	; force () banked
 43084  00839A  6FDA               	movwf	_uart1RxTail& (0+255),b	;volatile
 43085                           
 43086                           ;mcc_generated_files/uart1.c: 163:     uart1RxCount = 0;
 43087  00839C  0E00               	movlw	0
 43088  00839E  0101               	movlb	1	; force () banked
 43089  0083A0  6FE1               	movwf	_uart1RxCount& (0+255),b	;volatile
 43090                           
 43091                           ; BSR set to: 1
 43092                           ;mcc_generated_files/uart1.c: 166:     PIE3bits.U1RXIE = 1;
 43093  0083A2  0139               	movlb	57	; force () banked
 43094  0083A4  8793               	bsf	147,3,b	;volatile
 43095                           
 43096                           ; BSR set to: 57
 43097  0083A6  0012               	return		;funcret
 43098  0083A8                     __end_of_UART1_Initialize:
 43099                           	callstack 0
 43100                           
 43101 ;; *************** function _UART1_SetTxInterruptHandler *****************
 43102 ;; Defined at:
 43103 ;;		line 357 in file "mcc_generated_files/uart1.c"
 43104 ;; Parameters:    Size  Location     Type
 43105 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 43106 ;;		 -> UART1_Transmit_ISR(1), 
 43107 ;; Auto vars:     Size  Location     Type
 43108 ;;		None
 43109 ;; Return value:  Size  Location     Type
 43110 ;;                  1    wreg      void 
 43111 ;; Registers used:
 43112 ;;		wreg, status,2, status,0
 43113 ;; Tracked objects:
 43114 ;;		On entry : 3F/0
 43115 ;;		On exit  : 0/0
 43116 ;;		Unchanged: 0/0
 43117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43118 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43121 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43122 ;;Total ram usage:        2 bytes
 43123 ;; Hardware stack levels used:    1
 43124 ;; Hardware stack levels required when called:   11
 43125 ;; This function calls:
 43126 ;;		Nothing
 43127 ;; This function is called by:
 43128 ;;		_UART1_Initialize
 43129 ;; This function uses a non-reentrant model
 43130 ;;
 43131                           
 43132                           	psect	text246
 43133  00BCFE                     __ptext246:
 43134                           	callstack 0
 43135  00BCFE                     _UART1_SetTxInterruptHandler:
 43136                           	callstack 17
 43137                           
 43138                           ;mcc_generated_files/uart1.c: 358:     UART1_TxInterruptHandler = InterruptHandler;
 43139                           
 43140                           ; BSR set to: 57
 43141                           ;incstack = 0
 43142  00BCFE  C071  F2F0         	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 43143  00BD02  C072  F2F1         	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 43144  00BD06  0012               	return		;funcret
 43145  00BD08                     __end_of_UART1_SetTxInterruptHandler:
 43146                           	callstack 0
 43147                           
 43148 ;; *************** function _UART1_SetRxInterruptHandler *****************
 43149 ;; Defined at:
 43150 ;;		line 353 in file "mcc_generated_files/uart1.c"
 43151 ;; Parameters:    Size  Location     Type
 43152 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 43153 ;;		 -> UART1_Receive_ISR(1), 
 43154 ;; Auto vars:     Size  Location     Type
 43155 ;;		None
 43156 ;; Return value:  Size  Location     Type
 43157 ;;                  1    wreg      void 
 43158 ;; Registers used:
 43159 ;;		wreg, status,2, status,0
 43160 ;; Tracked objects:
 43161 ;;		On entry : 3F/0
 43162 ;;		On exit  : 0/0
 43163 ;;		Unchanged: 0/0
 43164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43165 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43168 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43169 ;;Total ram usage:        2 bytes
 43170 ;; Hardware stack levels used:    1
 43171 ;; Hardware stack levels required when called:   11
 43172 ;; This function calls:
 43173 ;;		Nothing
 43174 ;; This function is called by:
 43175 ;;		_UART1_Initialize
 43176 ;; This function uses a non-reentrant model
 43177 ;;
 43178                           
 43179                           	psect	text247
 43180  00BD08                     __ptext247:
 43181                           	callstack 0
 43182  00BD08                     _UART1_SetRxInterruptHandler:
 43183                           	callstack 17
 43184                           
 43185                           ;mcc_generated_files/uart1.c: 354:     UART1_RxInterruptHandler = InterruptHandler;
 43186                           
 43187                           ;incstack = 0
 43188  00BD08  C071  F2F2         	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 43189  00BD0C  C072  F2F3         	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 43190  00BD10  0012               	return		;funcret
 43191  00BD12                     __end_of_UART1_SetRxInterruptHandler:
 43192                           	callstack 0
 43193                           
 43194 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 43195 ;; Defined at:
 43196 ;;		line 343 in file "mcc_generated_files/uart1.c"
 43197 ;; Parameters:    Size  Location     Type
 43198 ;;  interruptHan    2   17[BANK0 ] PTR FTN()void 
 43199 ;;		 -> UART1_DefaultOverrunErrorHandler(1), UART_error_handler(1), 
 43200 ;; Auto vars:     Size  Location     Type
 43201 ;;		None
 43202 ;; Return value:  Size  Location     Type
 43203 ;;                  1    wreg      void 
 43204 ;; Registers used:
 43205 ;;		wreg, status,2, status,0
 43206 ;; Tracked objects:
 43207 ;;		On entry : 3F/0
 43208 ;;		On exit  : 0/0
 43209 ;;		Unchanged: 0/0
 43210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43211 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43214 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43215 ;;Total ram usage:        2 bytes
 43216 ;; Hardware stack levels used:    1
 43217 ;; Hardware stack levels required when called:   11
 43218 ;; This function calls:
 43219 ;;		Nothing
 43220 ;; This function is called by:
 43221 ;;		_bootLoadApplication
 43222 ;;		_UART1_Initialize
 43223 ;; This function uses a non-reentrant model
 43224 ;;
 43225                           
 43226                           	psect	text248
 43227  00BD12                     __ptext248:
 43228                           	callstack 0
 43229  00BD12                     _UART1_SetOverrunErrorHandler:
 43230                           	callstack 18
 43231                           
 43232                           ;mcc_generated_files/uart1.c: 344:     UART1_OverrunErrorHandler = interruptHandler;
 43233                           
 43234                           ;incstack = 0
 43235  00BD12  C071  F3FB         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 43236  00BD16  C072  F3FC         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 43237  00BD1A  0012               	return		;funcret
 43238  00BD1C                     __end_of_UART1_SetOverrunErrorHandler:
 43239                           	callstack 0
 43240                           
 43241 ;; *************** function _UART1_SetFramingErrorHandler *****************
 43242 ;; Defined at:
 43243 ;;		line 339 in file "mcc_generated_files/uart1.c"
 43244 ;; Parameters:    Size  Location     Type
 43245 ;;  interruptHan    2   17[BANK0 ] PTR FTN()void 
 43246 ;;		 -> UART1_DefaultFramingErrorHandler(1), UART_error_handler(1), 
 43247 ;; Auto vars:     Size  Location     Type
 43248 ;;		None
 43249 ;; Return value:  Size  Location     Type
 43250 ;;                  1    wreg      void 
 43251 ;; Registers used:
 43252 ;;		wreg, status,2, status,0
 43253 ;; Tracked objects:
 43254 ;;		On entry : 3F/0
 43255 ;;		On exit  : 0/0
 43256 ;;		Unchanged: 0/0
 43257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43258 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43261 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43262 ;;Total ram usage:        2 bytes
 43263 ;; Hardware stack levels used:    1
 43264 ;; Hardware stack levels required when called:   11
 43265 ;; This function calls:
 43266 ;;		Nothing
 43267 ;; This function is called by:
 43268 ;;		_bootLoadApplication
 43269 ;;		_UART1_Initialize
 43270 ;; This function uses a non-reentrant model
 43271 ;;
 43272                           
 43273                           	psect	text249
 43274  00BD1C                     __ptext249:
 43275                           	callstack 0
 43276  00BD1C                     _UART1_SetFramingErrorHandler:
 43277                           	callstack 18
 43278                           
 43279                           ;mcc_generated_files/uart1.c: 340:     UART1_FramingErrorHandler = interruptHandler;
 43280                           
 43281                           ;incstack = 0
 43282  00BD1C  C071  F2EA         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 43283  00BD20  C072  F2EB         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 43284  00BD24  0012               	return		;funcret
 43285  00BD26                     __end_of_UART1_SetFramingErrorHandler:
 43286                           	callstack 0
 43287                           
 43288 ;; *************** function _UART1_SetErrorHandler *****************
 43289 ;; Defined at:
 43290 ;;		line 347 in file "mcc_generated_files/uart1.c"
 43291 ;; Parameters:    Size  Location     Type
 43292 ;;  interruptHan    2   17[BANK0 ] PTR FTN()void 
 43293 ;;		 -> UART1_DefaultErrorHandler(1), UART_error_handler(1), 
 43294 ;; Auto vars:     Size  Location     Type
 43295 ;;		None
 43296 ;; Return value:  Size  Location     Type
 43297 ;;                  1    wreg      void 
 43298 ;; Registers used:
 43299 ;;		wreg, status,2, status,0
 43300 ;; Tracked objects:
 43301 ;;		On entry : 3F/0
 43302 ;;		On exit  : 0/0
 43303 ;;		Unchanged: 0/0
 43304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43305 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43308 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43309 ;;Total ram usage:        2 bytes
 43310 ;; Hardware stack levels used:    1
 43311 ;; Hardware stack levels required when called:   11
 43312 ;; This function calls:
 43313 ;;		Nothing
 43314 ;; This function is called by:
 43315 ;;		_bootLoadApplication
 43316 ;;		_UART1_Initialize
 43317 ;; This function uses a non-reentrant model
 43318 ;;
 43319                           
 43320                           	psect	text250
 43321  00BD26                     __ptext250:
 43322                           	callstack 0
 43323  00BD26                     _UART1_SetErrorHandler:
 43324                           	callstack 18
 43325                           
 43326                           ;mcc_generated_files/uart1.c: 348:     UART1_ErrorHandler = interruptHandler;
 43327                           
 43328                           ;incstack = 0
 43329  00BD26  C071  F3F9         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 43330  00BD2A  C072  F3FA         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 43331  00BD2E  0012               	return		;funcret
 43332  00BD30                     __end_of_UART1_SetErrorHandler:
 43333                           	callstack 0
 43334                           
 43335 ;; *************** function _TMR3_Initialize *****************
 43336 ;; Defined at:
 43337 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 43338 ;; Parameters:    Size  Location     Type
 43339 ;;		None
 43340 ;; Auto vars:     Size  Location     Type
 43341 ;;		None
 43342 ;; Return value:  Size  Location     Type
 43343 ;;                  1    wreg      void 
 43344 ;; Registers used:
 43345 ;;		wreg, status,2, status,0, cstack
 43346 ;; Tracked objects:
 43347 ;;		On entry : 3F/2
 43348 ;;		On exit  : 0/0
 43349 ;;		Unchanged: 0/0
 43350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43353 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43354 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43355 ;;Total ram usage:        2 bytes
 43356 ;; Hardware stack levels used:    1
 43357 ;; Hardware stack levels required when called:   12
 43358 ;; This function calls:
 43359 ;;		_TMR3_SetInterruptHandler
 43360 ;; This function is called by:
 43361 ;;		_SYSTEM_Initialize
 43362 ;; This function uses a non-reentrant model
 43363 ;;
 43364                           
 43365                           	psect	text251
 43366  00AA00                     __ptext251:
 43367                           	callstack 0
 43368  00AA00                     _TMR3_Initialize:
 43369                           	callstack 17
 43370                           
 43371                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 43372                           
 43373                           ;incstack = 0
 43374  00AA00  0E00               	movlw	0
 43375  00AA02  6EA7               	movwf	167,c	;volatile
 43376                           
 43377                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 43378  00AA04  0E00               	movlw	0
 43379  00AA06  6EA8               	movwf	168,c	;volatile
 43380                           
 43381                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x05;
 43382  00AA08  0E05               	movlw	5
 43383  00AA0A  6EA9               	movwf	169,c	;volatile
 43384                           
 43385                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0xFF;
 43386  00AA0C  68A5               	setf	165,c	;volatile
 43387                           
 43388                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xFD;
 43389  00AA0E  0EFD               	movlw	253
 43390  00AA10  6EA4               	movwf	164,c	;volatile
 43391                           
 43392                           ;mcc_generated_files/tmr3.c: 85:     PIR6bits.TMR3IF = 0;
 43393  00AA12  0139               	movlb	57	; force () banked
 43394  00AA14  9DA6               	bcf	166,6,b	;volatile
 43395                           
 43396                           ; BSR set to: 57
 43397                           ;mcc_generated_files/tmr3.c: 88:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 43398  00AA16  50A4               	movf	164,w,c	;volatile
 43399  00AA18  006F FE94  F073    	movff	16293,??_TMR3_Initialize	;volatile
 43400  00AA1E  0100               	movlb	0	; force () banked
 43401  00AA20  6B74               	clrf	(??_TMR3_Initialize+1)& (0+255),b
 43402  00AA22  C073  F074         	movff	??_TMR3_Initialize,??_TMR3_Initialize+1
 43403  00AA26  6B73               	clrf	??_TMR3_Initialize& (0+255),b
 43404  00AA28  1173               	iorwf	??_TMR3_Initialize& (0+255),w,b
 43405  00AA2A  0102               	movlb	2	; force () banked
 43406  00AA2C  6FE8               	movwf	_timer3ReloadVal& (0+255),b	;volatile
 43407  00AA2E  0100               	movlb	0	; force () banked
 43408  00AA30  5174               	movf	(??_TMR3_Initialize+1)& (0+255),w,b
 43409  00AA32  0102               	movlb	2	; force () banked
 43410  00AA34  6FE9               	movwf	(_timer3ReloadVal+1)& (0+255),b	;volatile
 43411                           
 43412                           ; BSR set to: 2
 43413                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 43414  00AA36  0139               	movlb	57	; force () banked
 43415  00AA38  8D96               	bsf	150,6,b	;volatile
 43416                           
 43417                           ; BSR set to: 57
 43418                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 43419  00AA3A  0E98               	movlw	low _TMR3_DefaultInterruptHandler
 43420  00AA3C  0100               	movlb	0	; force () banked
 43421  00AA3E  6F71               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
 43422  00AA40  0EBD               	movlw	high _TMR3_DefaultInterruptHandler
 43423  00AA42  6F72               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 43424  00AA44  EC98  F05E         	call	_TMR3_SetInterruptHandler	;wreg free
 43425                           
 43426                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x33;
 43427  00AA48  0E33               	movlw	51
 43428  00AA4A  6EA6               	movwf	166,c	;volatile
 43429  00AA4C  0012               	return		;funcret
 43430  00AA4E                     __end_of_TMR3_Initialize:
 43431                           	callstack 0
 43432                           
 43433 ;; *************** function _TMR3_SetInterruptHandler *****************
 43434 ;; Defined at:
 43435 ;;		line 189 in file "mcc_generated_files/tmr3.c"
 43436 ;; Parameters:    Size  Location     Type
 43437 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 43438 ;;		 -> TMR3_DefaultInterruptHandler(1), prvvTIMERExpiredISR(1), 
 43439 ;; Auto vars:     Size  Location     Type
 43440 ;;		None
 43441 ;; Return value:  Size  Location     Type
 43442 ;;                  1    wreg      void 
 43443 ;; Registers used:
 43444 ;;		wreg, status,2, status,0
 43445 ;; Tracked objects:
 43446 ;;		On entry : 3F/0
 43447 ;;		On exit  : 0/0
 43448 ;;		Unchanged: 0/0
 43449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43450 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43453 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43454 ;;Total ram usage:        2 bytes
 43455 ;; Hardware stack levels used:    1
 43456 ;; Hardware stack levels required when called:   11
 43457 ;; This function calls:
 43458 ;;		Nothing
 43459 ;; This function is called by:
 43460 ;;		_bootLoadApplication
 43461 ;;		_TMR3_Initialize
 43462 ;;		_xMBPortTimersInit
 43463 ;; This function uses a non-reentrant model
 43464 ;;
 43465                           
 43466                           	psect	text252
 43467  00BD30                     __ptext252:
 43468                           	callstack 0
 43469  00BD30                     _TMR3_SetInterruptHandler:
 43470                           	callstack 15
 43471                           
 43472                           ;mcc_generated_files/tmr3.c: 190:     TMR3_InterruptHandler = InterruptHandler;
 43473                           
 43474                           ;incstack = 0
 43475  00BD30  C071  F2E6         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
 43476  00BD34  C072  F2E7         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
 43477  00BD38  0012               	return		;funcret
 43478  00BD3A                     __end_of_TMR3_SetInterruptHandler:
 43479                           	callstack 0
 43480                           
 43481 ;; *************** function _TMR0_Initialize *****************
 43482 ;; Defined at:
 43483 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 43484 ;; Parameters:    Size  Location     Type
 43485 ;;		None
 43486 ;; Auto vars:     Size  Location     Type
 43487 ;;		None
 43488 ;; Return value:  Size  Location     Type
 43489 ;;                  1    wreg      void 
 43490 ;; Registers used:
 43491 ;;		wreg, status,2, status,0, cstack
 43492 ;; Tracked objects:
 43493 ;;		On entry : 0/2
 43494 ;;		On exit  : 0/0
 43495 ;;		Unchanged: 0/0
 43496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43499 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43500 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43501 ;;Total ram usage:        2 bytes
 43502 ;; Hardware stack levels used:    1
 43503 ;; Hardware stack levels required when called:   12
 43504 ;; This function calls:
 43505 ;;		_TMR0_SetInterruptHandler
 43506 ;; This function is called by:
 43507 ;;		_SYSTEM_Initialize
 43508 ;; This function uses a non-reentrant model
 43509 ;;
 43510                           
 43511                           	psect	text253
 43512  00AD36                     __ptext253:
 43513                           	callstack 0
 43514  00AD36                     _TMR0_Initialize:
 43515                           	callstack 17
 43516                           
 43517                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x40;
 43518                           
 43519                           ;incstack = 0
 43520  00AD36  0E40               	movlw	64
 43521  00AD38  6EB9               	movwf	185,c	;volatile
 43522                           
 43523                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xC1;
 43524  00AD3A  0EC1               	movlw	193
 43525  00AD3C  6EB7               	movwf	183,c	;volatile
 43526                           
 43527                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x80;
 43528  00AD3E  0E80               	movlw	128
 43529  00AD40  6EB6               	movwf	182,c	;volatile
 43530                           
 43531                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 43532  00AD42  50B6               	movf	182,w,c	;volatile
 43533  00AD44  006F FEDC  F073    	movff	16311,??_TMR0_Initialize	;volatile
 43534  00AD4A  0100               	movlb	0	; force () banked
 43535  00AD4C  6B74               	clrf	(??_TMR0_Initialize+1)& (0+255),b
 43536  00AD4E  C073  F074         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 43537  00AD52  6B73               	clrf	??_TMR0_Initialize& (0+255),b
 43538  00AD54  1173               	iorwf	??_TMR0_Initialize& (0+255),w,b
 43539  00AD56  0102               	movlb	2	; force () banked
 43540  00AD58  6FEE               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
 43541  00AD5A  0100               	movlb	0	; force () banked
 43542  00AD5C  5174               	movf	(??_TMR0_Initialize+1)& (0+255),w,b
 43543  00AD5E  0102               	movlb	2	; force () banked
 43544  00AD60  6FEF               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
 43545                           
 43546                           ; BSR set to: 2
 43547                           ;mcc_generated_files/tmr0.c: 84:     PIR3bits.TMR0IF = 0;
 43548  00AD62  0139               	movlb	57	; force () banked
 43549  00AD64  9FA3               	bcf	163,7,b	;volatile
 43550                           
 43551                           ; BSR set to: 57
 43552                           ;mcc_generated_files/tmr0.c: 87:     PIE3bits.TMR0IE = 1;
 43553  00AD66  0139               	movlb	57	; force () banked
 43554  00AD68  8F93               	bsf	147,7,b	;volatile
 43555                           
 43556                           ; BSR set to: 57
 43557                           ;mcc_generated_files/tmr0.c: 90:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 43558  00AD6A  0E92               	movlw	low _TMR0_DefaultInterruptHandler
 43559  00AD6C  0100               	movlb	0	; force () banked
 43560  00AD6E  6F71               	movwf	TMR0_SetInterruptHandler@InterruptHandler& (0+255),b
 43561  00AD70  0EBD               	movlw	high _TMR0_DefaultInterruptHandler
 43562  00AD72  6F72               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 43563  00AD74  EC9D  F05E         	call	_TMR0_SetInterruptHandler	;wreg free
 43564                           
 43565                           ;mcc_generated_files/tmr0.c: 93:     T0CON0 = 0x90;
 43566  00AD78  0E90               	movlw	144
 43567  00AD7A  6EB8               	movwf	184,c	;volatile
 43568  00AD7C  0012               	return		;funcret
 43569  00AD7E                     __end_of_TMR0_Initialize:
 43570                           	callstack 0
 43571                           
 43572 ;; *************** function _TMR0_SetInterruptHandler *****************
 43573 ;; Defined at:
 43574 ;;		line 163 in file "mcc_generated_files/tmr0.c"
 43575 ;; Parameters:    Size  Location     Type
 43576 ;;  InterruptHan    2   17[BANK0 ] PTR FTN()void 
 43577 ;;		 -> TMR0_DefaultInterruptHandler(1), Timer0Handler(1), 
 43578 ;; Auto vars:     Size  Location     Type
 43579 ;;		None
 43580 ;; Return value:  Size  Location     Type
 43581 ;;                  1    wreg      void 
 43582 ;; Registers used:
 43583 ;;		wreg, status,2, status,0
 43584 ;; Tracked objects:
 43585 ;;		On entry : 3F/0
 43586 ;;		On exit  : 0/0
 43587 ;;		Unchanged: 0/0
 43588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43589 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43592 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43593 ;;Total ram usage:        2 bytes
 43594 ;; Hardware stack levels used:    1
 43595 ;; Hardware stack levels required when called:   11
 43596 ;; This function calls:
 43597 ;;		Nothing
 43598 ;; This function is called by:
 43599 ;;		_bootLoadApplication
 43600 ;;		_TMR0_Initialize
 43601 ;;		_main
 43602 ;; This function uses a non-reentrant model
 43603 ;;
 43604                           
 43605                           	psect	text254
 43606  00BD3A                     __ptext254:
 43607                           	callstack 0
 43608  00BD3A                     _TMR0_SetInterruptHandler:
 43609                           	callstack 18
 43610                           
 43611                           ;mcc_generated_files/tmr0.c: 164:     TMR0_InterruptHandler = InterruptHandler;
 43612                           
 43613                           ;incstack = 0
 43614  00BD3A  C071  F2EC         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 43615  00BD3E  C072  F2ED         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 43616  00BD42  0012               	return		;funcret
 43617  00BD44                     __end_of_TMR0_SetInterruptHandler:
 43618                           	callstack 0
 43619                           
 43620 ;; *************** function _SystemArbiter_Initialize *****************
 43621 ;; Defined at:
 43622 ;;		line 99 in file "mcc_generated_files/mcc.c"
 43623 ;; Parameters:    Size  Location     Type
 43624 ;;		None
 43625 ;; Auto vars:     Size  Location     Type
 43626 ;;		None
 43627 ;; Return value:  Size  Location     Type
 43628 ;;                  1    wreg      void 
 43629 ;; Registers used:
 43630 ;;		wreg, status,2
 43631 ;; Tracked objects:
 43632 ;;		On entry : 3F/3D
 43633 ;;		On exit  : 3F/39
 43634 ;;		Unchanged: 0/0
 43635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43640 ;;Total ram usage:        0 bytes
 43641 ;; Hardware stack levels used:    1
 43642 ;; Hardware stack levels required when called:   11
 43643 ;; This function calls:
 43644 ;;		Nothing
 43645 ;; This function is called by:
 43646 ;;		_SYSTEM_Initialize
 43647 ;; This function uses a non-reentrant model
 43648 ;;
 43649                           
 43650                           	psect	text255
 43651  00BC68                     __ptext255:
 43652                           	callstack 0
 43653  00BC68                     _SystemArbiter_Initialize:
 43654                           	callstack 18
 43655                           
 43656                           ;mcc_generated_files/mcc.c: 102:     PRLOCK = 0x55;
 43657                           
 43658                           ;incstack = 0
 43659  00BC68  0E55               	movlw	85
 43660  00BC6A  0139               	movlb	57	; force () banked
 43661  00BC6C  6FEF               	movwf	239,b	;volatile
 43662                           
 43663                           ;mcc_generated_files/mcc.c: 103:     PRLOCK = 0xAA;
 43664  00BC6E  0EAA               	movlw	170
 43665  00BC70  6FEF               	movwf	239,b	;volatile
 43666                           
 43667                           ; BSR set to: 57
 43668                           ;mcc_generated_files/mcc.c: 104:     PRLOCKbits.PRLOCKED = 1;
 43669  00BC72  0139               	movlb	57	; force () banked
 43670  00BC74  81EF               	bsf	239,0,b	;volatile
 43671                           
 43672                           ; BSR set to: 57
 43673  00BC76  0012               	return		;funcret
 43674  00BC78                     __end_of_SystemArbiter_Initialize:
 43675                           	callstack 0
 43676                           
 43677 ;; *************** function _SPI1_Initialize *****************
 43678 ;; Defined at:
 43679 ;;		line 64 in file "mcc_generated_files/spi1.c"
 43680 ;; Parameters:    Size  Location     Type
 43681 ;;		None
 43682 ;; Auto vars:     Size  Location     Type
 43683 ;;		None
 43684 ;; Return value:  Size  Location     Type
 43685 ;;                  1    wreg      void 
 43686 ;; Registers used:
 43687 ;;		wreg, status,2
 43688 ;; Tracked objects:
 43689 ;;		On entry : 3F/39
 43690 ;;		On exit  : 3F/3D
 43691 ;;		Unchanged: 0/0
 43692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43697 ;;Total ram usage:        0 bytes
 43698 ;; Hardware stack levels used:    1
 43699 ;; Hardware stack levels required when called:   11
 43700 ;; This function calls:
 43701 ;;		Nothing
 43702 ;; This function is called by:
 43703 ;;		_SYSTEM_Initialize
 43704 ;; This function uses a non-reentrant model
 43705 ;;
 43706                           
 43707                           	psect	text256
 43708  00B910                     __ptext256:
 43709                           	callstack 0
 43710  00B910                     _SPI1_Initialize:
 43711                           	callstack 18
 43712                           
 43713                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x82;
 43714                           
 43715                           ; BSR set to: 57
 43716                           ;incstack = 0
 43717  00B910  0E82               	movlw	130
 43718  00B912  013D               	movlb	61	; force () banked
 43719  00B914  6F14               	movwf	20,b	;volatile
 43720                           
 43721                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0xC0;
 43722  00B916  0EC0               	movlw	192
 43723  00B918  013D               	movlb	61	; force () banked
 43724  00B91A  6F15               	movwf	21,b	;volatile
 43725                           
 43726                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x03;
 43727  00B91C  0E03               	movlw	3
 43728  00B91E  013D               	movlb	61	; force () banked
 43729  00B920  6F16               	movwf	22,b	;volatile
 43730                           
 43731                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x01;
 43732  00B922  0E01               	movlw	1
 43733  00B924  013D               	movlb	61	; force () banked
 43734  00B926  6F1C               	movwf	28,b	;volatile
 43735                           
 43736                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x03;
 43737  00B928  0E03               	movlw	3
 43738  00B92A  013D               	movlb	61	; force () banked
 43739  00B92C  6F19               	movwf	25,b	;volatile
 43740                           
 43741                           ; BSR set to: 61
 43742                           ;mcc_generated_files/spi1.c: 76:     TRISCbits.TRISC7 = 0;
 43743  00B92E  9EC4               	bcf	196,7,c	;volatile
 43744                           
 43745                           ; BSR set to: 61
 43746  00B930  0012               	return		;funcret
 43747  00B932                     __end_of_SPI1_Initialize:
 43748                           	callstack 0
 43749                           
 43750 ;; *************** function _PMD_Initialize *****************
 43751 ;; Defined at:
 43752 ;;		line 78 in file "mcc_generated_files/mcc.c"
 43753 ;; Parameters:    Size  Location     Type
 43754 ;;		None
 43755 ;; Auto vars:     Size  Location     Type
 43756 ;;		None
 43757 ;; Return value:  Size  Location     Type
 43758 ;;                  1    wreg      void 
 43759 ;; Registers used:
 43760 ;;		wreg, status,2
 43761 ;; Tracked objects:
 43762 ;;		On entry : 3F/39
 43763 ;;		On exit  : 3F/39
 43764 ;;		Unchanged: 0/0
 43765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43770 ;;Total ram usage:        0 bytes
 43771 ;; Hardware stack levels used:    1
 43772 ;; Hardware stack levels required when called:   11
 43773 ;; This function calls:
 43774 ;;		Nothing
 43775 ;; This function is called by:
 43776 ;;		_SYSTEM_Initialize
 43777 ;; This function uses a non-reentrant model
 43778 ;;
 43779                           
 43780                           	psect	text257
 43781  00B454                     __ptext257:
 43782                           	callstack 0
 43783  00B454                     _PMD_Initialize:
 43784                           	callstack 18
 43785                           
 43786                           ;mcc_generated_files/mcc.c: 81:     PMD0 = 0x00;
 43787                           
 43788                           ; BSR set to: 61
 43789                           ;incstack = 0
 43790  00B454  0E00               	movlw	0
 43791  00B456  0139               	movlb	57	; force () banked
 43792  00B458  6FC0               	movwf	192,b	;volatile
 43793                           
 43794                           ;mcc_generated_files/mcc.c: 83:     PMD1 = 0x00;
 43795  00B45A  0E00               	movlw	0
 43796  00B45C  0139               	movlb	57	; force () banked
 43797  00B45E  6FC1               	movwf	193,b	;volatile
 43798                           
 43799                           ;mcc_generated_files/mcc.c: 85:     PMD2 = 0x00;
 43800  00B460  0E00               	movlw	0
 43801  00B462  0139               	movlb	57	; force () banked
 43802  00B464  6FC2               	movwf	194,b	;volatile
 43803                           
 43804                           ;mcc_generated_files/mcc.c: 87:     PMD3 = 0x00;
 43805  00B466  0E00               	movlw	0
 43806  00B468  0139               	movlb	57	; force () banked
 43807  00B46A  6FC3               	movwf	195,b	;volatile
 43808                           
 43809                           ;mcc_generated_files/mcc.c: 89:     PMD4 = 0x00;
 43810  00B46C  0E00               	movlw	0
 43811  00B46E  0139               	movlb	57	; force () banked
 43812  00B470  6FC4               	movwf	196,b	;volatile
 43813                           
 43814                           ;mcc_generated_files/mcc.c: 91:     PMD5 = 0x00;
 43815  00B472  0E00               	movlw	0
 43816  00B474  0139               	movlb	57	; force () banked
 43817  00B476  6FC5               	movwf	197,b	;volatile
 43818                           
 43819                           ;mcc_generated_files/mcc.c: 93:     PMD6 = 0x00;
 43820  00B478  0E00               	movlw	0
 43821  00B47A  0139               	movlb	57	; force () banked
 43822  00B47C  6FC6               	movwf	198,b	;volatile
 43823                           
 43824                           ;mcc_generated_files/mcc.c: 95:     PMD7 = 0x00;
 43825  00B47E  0E00               	movlw	0
 43826  00B480  0139               	movlb	57	; force () banked
 43827  00B482  6FC7               	movwf	199,b	;volatile
 43828                           
 43829                           ; BSR set to: 57
 43830  00B484  0012               	return		;funcret
 43831  00B486                     __end_of_PMD_Initialize:
 43832                           	callstack 0
 43833                           
 43834 ;; *************** function _PIN_MANAGER_Initialize *****************
 43835 ;; Defined at:
 43836 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 43837 ;; Parameters:    Size  Location     Type
 43838 ;;		None
 43839 ;; Auto vars:     Size  Location     Type
 43840 ;;		None
 43841 ;; Return value:  Size  Location     Type
 43842 ;;                  1    wreg      void 
 43843 ;; Registers used:
 43844 ;;		wreg, status,2
 43845 ;; Tracked objects:
 43846 ;;		On entry : 3F/39
 43847 ;;		On exit  : 3F/3A
 43848 ;;		Unchanged: 0/0
 43849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43854 ;;Total ram usage:        0 bytes
 43855 ;; Hardware stack levels used:    1
 43856 ;; Hardware stack levels required when called:   11
 43857 ;; This function calls:
 43858 ;;		Nothing
 43859 ;; This function is called by:
 43860 ;;		_SYSTEM_Initialize
 43861 ;; This function uses a non-reentrant model
 43862 ;;
 43863                           
 43864                           	psect	text258
 43865  008BBC                     __ptext258:
 43866                           	callstack 0
 43867  008BBC                     _PIN_MANAGER_Initialize:
 43868                           	callstack 18
 43869                           
 43870                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x08;
 43871                           
 43872                           ; BSR set to: 57
 43873                           ;incstack = 0
 43874  008BBC  0E08               	movlw	8
 43875  008BBE  6EBA               	movwf	186,c	;volatile
 43876                           
 43877                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 43878  008BC0  0E00               	movlw	0
 43879  008BC2  6EBB               	movwf	187,c	;volatile
 43880                           
 43881                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x40;
 43882  008BC4  0E40               	movlw	64
 43883  008BC6  6EBC               	movwf	188,c	;volatile
 43884                           
 43885                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xF7;
 43886  008BC8  0EF7               	movlw	247
 43887  008BCA  6EC2               	movwf	194,c	;volatile
 43888                           
 43889                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFE;
 43890  008BCC  0EFE               	movlw	254
 43891  008BCE  6EC3               	movwf	195,c	;volatile
 43892                           
 43893                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x1C;
 43894  008BD0  0E1C               	movlw	28
 43895  008BD2  6EC4               	movwf	196,c	;volatile
 43896                           
 43897                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x21;
 43898  008BD4  0E21               	movlw	33
 43899  008BD6  013A               	movlb	58	; force () banked
 43900  008BD8  6F60               	movwf	96,b	;volatile
 43901                           
 43902                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xCD;
 43903  008BDA  0ECD               	movlw	205
 43904  008BDC  013A               	movlb	58	; force () banked
 43905  008BDE  6F50               	movwf	80,b	;volatile
 43906                           
 43907                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xF0;
 43908  008BE0  0EF0               	movlw	240
 43909  008BE2  013A               	movlb	58	; force () banked
 43910  008BE4  6F40               	movwf	64,b	;volatile
 43911                           
 43912                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
 43913  008BE6  0E00               	movlw	0
 43914  008BE8  013A               	movlb	58	; force () banked
 43915  008BEA  6F81               	movwf	129,b	;volatile
 43916                           
 43917                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
 43918  008BEC  0E00               	movlw	0
 43919  008BEE  013A               	movlb	58	; force () banked
 43920  008BF0  6F51               	movwf	81,b	;volatile
 43921                           
 43922                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
 43923  008BF2  0E00               	movlw	0
 43924  008BF4  013A               	movlb	58	; force () banked
 43925  008BF6  6F41               	movwf	65,b	;volatile
 43926                           
 43927                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x08;
 43928  008BF8  0E08               	movlw	8
 43929  008BFA  013A               	movlb	58	; force () banked
 43930  008BFC  6F61               	movwf	97,b	;volatile
 43931                           
 43932                           ;mcc_generated_files/pin_manager.c: 89:     RB1I2C = 0x00;
 43933  008BFE  0E00               	movlw	0
 43934  008C00  013A               	movlb	58	; force () banked
 43935  008C02  6F5A               	movwf	90,b	;volatile
 43936                           
 43937                           ;mcc_generated_files/pin_manager.c: 90:     RB2I2C = 0x00;
 43938  008C04  0E00               	movlw	0
 43939  008C06  013A               	movlb	58	; force () banked
 43940  008C08  6F5B               	movwf	91,b	;volatile
 43941                           
 43942                           ;mcc_generated_files/pin_manager.c: 91:     RC3I2C = 0x00;
 43943  008C0A  0E00               	movlw	0
 43944  008C0C  013A               	movlb	58	; force () banked
 43945  008C0E  6F6A               	movwf	106,b	;volatile
 43946                           
 43947                           ;mcc_generated_files/pin_manager.c: 92:     RC4I2C = 0x00;
 43948  008C10  0E00               	movlw	0
 43949  008C12  013A               	movlb	58	; force () banked
 43950  008C14  6F6B               	movwf	107,b	;volatile
 43951                           
 43952                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 43953  008C16  0E00               	movlw	0
 43954  008C18  013A               	movlb	58	; force () banked
 43955  008C1A  6F42               	movwf	66,b	;volatile
 43956                           
 43957                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x04;
 43958  008C1C  0E04               	movlw	4
 43959  008C1E  013A               	movlb	58	; force () banked
 43960  008C20  6F52               	movwf	82,b	;volatile
 43961                           
 43962                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 43963  008C22  0E00               	movlw	0
 43964  008C24  013A               	movlb	58	; force () banked
 43965  008C26  6F62               	movwf	98,b	;volatile
 43966                           
 43967                           ; BSR set to: 58
 43968                           ;mcc_generated_files/pin_manager.c: 104:     SLRCONA = 0xFF;
 43969  008C28  013A               	movlb	58	; force () banked
 43970  008C2A  6943               	setf	67,b	;volatile
 43971                           
 43972                           ; BSR set to: 58
 43973                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONB = 0xFF;
 43974  008C2C  013A               	movlb	58	; force () banked
 43975  008C2E  6953               	setf	83,b	;volatile
 43976                           
 43977                           ; BSR set to: 58
 43978                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONC = 0xFF;
 43979  008C30  013A               	movlb	58	; force () banked
 43980  008C32  6963               	setf	99,b	;volatile
 43981                           
 43982                           ; BSR set to: 58
 43983                           ;mcc_generated_files/pin_manager.c: 111:     INLVLA = 0xFF;
 43984  008C34  013A               	movlb	58	; force () banked
 43985  008C36  6944               	setf	68,b	;volatile
 43986                           
 43987                           ; BSR set to: 58
 43988                           ;mcc_generated_files/pin_manager.c: 112:     INLVLB = 0xFF;
 43989  008C38  013A               	movlb	58	; force () banked
 43990  008C3A  6954               	setf	84,b	;volatile
 43991                           
 43992                           ; BSR set to: 58
 43993                           ;mcc_generated_files/pin_manager.c: 113:     INLVLC = 0xFF;
 43994  008C3C  013A               	movlb	58	; force () banked
 43995  008C3E  6964               	setf	100,b	;volatile
 43996                           
 43997                           ;mcc_generated_files/pin_manager.c: 114:     INLVLE = 0x08;
 43998  008C40  0E08               	movlw	8
 43999  008C42  013A               	movlb	58	; force () banked
 44000  008C44  6F84               	movwf	132,b	;volatile
 44001                           
 44002                           ;mcc_generated_files/pin_manager.c: 123:     RC0PPS = 0x13;
 44003  008C46  0E13               	movlw	19
 44004  008C48  013A               	movlb	58	; force () banked
 44005  008C4A  6F10               	movwf	16,b	;volatile
 44006                           
 44007                           ;mcc_generated_files/pin_manager.c: 124:     SPI1SCKPPS = 0x17;
 44008  008C4C  0E17               	movlw	23
 44009  008C4E  013A               	movlb	58	; force () banked
 44010  008C50  6FDE               	movwf	222,b	;volatile
 44011                           
 44012                           ;mcc_generated_files/pin_manager.c: 125:     SPI1SSPPS = 0x13;
 44013  008C52  0E13               	movlw	19
 44014  008C54  013A               	movlb	58	; force () banked
 44015  008C56  6FE0               	movwf	224,b	;volatile
 44016                           
 44017                           ;mcc_generated_files/pin_manager.c: 126:     RB0PPS = 0x1F;
 44018  008C58  0E1F               	movlw	31
 44019  008C5A  013A               	movlb	58	; force () banked
 44020  008C5C  6F08               	movwf	8,b	;volatile
 44021                           
 44022                           ;mcc_generated_files/pin_manager.c: 127:     RC1PPS = 0x14;
 44023  008C5E  0E14               	movlw	20
 44024  008C60  013A               	movlb	58	; force () banked
 44025  008C62  6F11               	movwf	17,b	;volatile
 44026                           
 44027                           ;mcc_generated_files/pin_manager.c: 128:     U1RXPPS = 0x12;
 44028  008C64  0E12               	movlw	18
 44029  008C66  013A               	movlb	58	; force () banked
 44030  008C68  6FE5               	movwf	229,b	;volatile
 44031                           
 44032                           ;mcc_generated_files/pin_manager.c: 129:     U1CTSPPS = 0x1F;
 44033  008C6A  0E1F               	movlw	31
 44034  008C6C  013A               	movlb	58	; force () banked
 44035  008C6E  6FE6               	movwf	230,b	;volatile
 44036                           
 44037                           ;mcc_generated_files/pin_manager.c: 130:     RC7PPS = 0x1E;
 44038  008C70  0E1E               	movlw	30
 44039  008C72  013A               	movlb	58	; force () banked
 44040  008C74  6F17               	movwf	23,b	;volatile
 44041                           
 44042                           ;mcc_generated_files/pin_manager.c: 131:     SPI1SDIPPS = 0x09;
 44043  008C76  0E09               	movlw	9
 44044  008C78  013A               	movlb	58	; force () banked
 44045  008C7A  6FDF               	movwf	223,b	;volatile
 44046                           
 44047                           ; BSR set to: 58
 44048  008C7C  0012               	return		;funcret
 44049  008C7E                     __end_of_PIN_MANAGER_Initialize:
 44050                           	callstack 0
 44051                           
 44052 ;; *************** function _OSCILLATOR_Initialize *****************
 44053 ;; Defined at:
 44054 ;;		line 64 in file "mcc_generated_files/mcc.c"
 44055 ;; Parameters:    Size  Location     Type
 44056 ;;		None
 44057 ;; Auto vars:     Size  Location     Type
 44058 ;;		None
 44059 ;; Return value:  Size  Location     Type
 44060 ;;                  1    wreg      void 
 44061 ;; Registers used:
 44062 ;;		wreg, status,2
 44063 ;; Tracked objects:
 44064 ;;		On entry : 3F/3A
 44065 ;;		On exit  : 3F/39
 44066 ;;		Unchanged: 0/0
 44067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44072 ;;Total ram usage:        0 bytes
 44073 ;; Hardware stack levels used:    1
 44074 ;; Hardware stack levels required when called:   11
 44075 ;; This function calls:
 44076 ;;		Nothing
 44077 ;; This function is called by:
 44078 ;;		_SYSTEM_Initialize
 44079 ;; This function uses a non-reentrant model
 44080 ;;
 44081                           
 44082                           	psect	text259
 44083  00B996                     __ptext259:
 44084                           	callstack 0
 44085  00B996                     _OSCILLATOR_Initialize:
 44086                           	callstack 18
 44087                           
 44088                           ;mcc_generated_files/mcc.c: 67:     OSCCON1 = 0x60;
 44089                           
 44090                           ; BSR set to: 58
 44091                           ;incstack = 0
 44092  00B996  0E60               	movlw	96
 44093  00B998  0139               	movlb	57	; force () banked
 44094  00B99A  6FD9               	movwf	217,b	;volatile
 44095                           
 44096                           ;mcc_generated_files/mcc.c: 69:     OSCCON3 = 0x00;
 44097  00B99C  0E00               	movlw	0
 44098  00B99E  0139               	movlb	57	; force () banked
 44099  00B9A0  6FDB               	movwf	219,b	;volatile
 44100                           
 44101                           ;mcc_generated_files/mcc.c: 71:     OSCEN = 0x00;
 44102  00B9A2  0E00               	movlw	0
 44103  00B9A4  0139               	movlb	57	; force () banked
 44104  00B9A6  6FDD               	movwf	221,b	;volatile
 44105                           
 44106                           ;mcc_generated_files/mcc.c: 73:     OSCFRQ = 0x08;
 44107  00B9A8  0E08               	movlw	8
 44108  00B9AA  0139               	movlb	57	; force () banked
 44109  00B9AC  6FDF               	movwf	223,b	;volatile
 44110                           
 44111                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
 44112  00B9AE  0E00               	movlw	0
 44113  00B9B0  0139               	movlb	57	; force () banked
 44114  00B9B2  6FDE               	movwf	222,b	;volatile
 44115                           
 44116                           ; BSR set to: 57
 44117  00B9B4  0012               	return		;funcret
 44118  00B9B6                     __end_of_OSCILLATOR_Initialize:
 44119                           	callstack 0
 44120                           
 44121 ;; *************** function _INTERRUPT_Initialize *****************
 44122 ;; Defined at:
 44123 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 44124 ;; Parameters:    Size  Location     Type
 44125 ;;		None
 44126 ;; Auto vars:     Size  Location     Type
 44127 ;;  state           1   17[BANK0 ] _Bool 
 44128 ;; Return value:  Size  Location     Type
 44129 ;;                  1    wreg      void 
 44130 ;; Registers used:
 44131 ;;		wreg, status,2
 44132 ;; Tracked objects:
 44133 ;;		On entry : 0/0
 44134 ;;		On exit  : 3F/39
 44135 ;;		Unchanged: 0/0
 44136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44138 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44140 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44141 ;;Total ram usage:        1 bytes
 44142 ;; Hardware stack levels used:    1
 44143 ;; Hardware stack levels required when called:   11
 44144 ;; This function calls:
 44145 ;;		Nothing
 44146 ;; This function is called by:
 44147 ;;		_SYSTEM_Initialize
 44148 ;; This function uses a non-reentrant model
 44149 ;;
 44150                           
 44151                           	psect	text260
 44152  00A866                     __ptext260:
 44153                           	callstack 0
 44154  00A866                     _INTERRUPT_Initialize:
 44155                           	callstack 18
 44156                           
 44157                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 44158                           
 44159                           ; BSR set to: 57
 44160                           ;incstack = 0
 44161  00A866  8AD2               	bsf	210,5,c	;volatile
 44162                           
 44163                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 44164  00A868  0E00               	movlw	0
 44165  00A86A  BED2               	btfsc	16338,7,c	;volatile
 44166  00A86C  0E01               	movlw	1
 44167  00A86E  0100               	movlb	0	; force () banked
 44168  00A870  6F71               	movwf	INTERRUPT_Initialize@state& (0+255),b
 44169                           
 44170                           ; BSR set to: 0
 44171                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 44172  00A872  9ED2               	bcf	16338,7,c	;volatile
 44173                           
 44174                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 44175  00A874  0E55               	movlw	85
 44176  00A876  6ED4               	movwf	212,c	;volatile
 44177                           
 44178                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 44179  00A878  0EAA               	movlw	170
 44180  00A87A  6ED4               	movwf	212,c	;volatile
 44181                           
 44182                           ; BSR set to: 0
 44183                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 44184  00A87C  90D4               	bcf	212,0,c	;volatile
 44185                           
 44186                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 44187  00A87E  0E00               	movlw	0
 44188  00A880  0138               	movlb	56	; force () banked
 44189  00A882  6F9F               	movwf	159,b	;volatile
 44190                           
 44191                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTADH = 00;
 44192  00A884  0E00               	movlw	0
 44193  00A886  0138               	movlb	56	; force () banked
 44194  00A888  6F9E               	movwf	158,b	;volatile
 44195                           
 44196                           ;mcc_generated_files/interrupt_manager.c: 70:     IVTADL = 0x08;
 44197  00A88A  0E08               	movlw	8
 44198  00A88C  0138               	movlb	56	; force () banked
 44199  00A88E  6F9D               	movwf	157,b	;volatile
 44200                           
 44201                           ;mcc_generated_files/interrupt_manager.c: 72:     IVTLOCK = 0x55;
 44202  00A890  0E55               	movlw	85
 44203  00A892  6ED4               	movwf	212,c	;volatile
 44204                           
 44205                           ;mcc_generated_files/interrupt_manager.c: 73:     IVTLOCK = 0xAA;
 44206  00A894  0EAA               	movlw	170
 44207  00A896  6ED4               	movwf	212,c	;volatile
 44208                           
 44209                           ; BSR set to: 56
 44210                           ;mcc_generated_files/interrupt_manager.c: 74:     IVTLOCKbits.IVTLOCKED = 0x01;
 44211  00A898  80D4               	bsf	212,0,c	;volatile
 44212                           
 44213                           ; BSR set to: 56
 44214                           ;mcc_generated_files/interrupt_manager.c: 76:     GIE = state;
 44215  00A89A  0100               	movlb	0	; force () banked
 44216  00A89C  B171               	btfsc	INTERRUPT_Initialize@state& (0+255),0,b
 44217  00A89E  D002               	bra	u6755
 44218  00A8A0  9ED2               	bcf	16338,7,c	;volatile
 44219  00A8A2  D001               	bra	u6756
 44220  00A8A4                     u6755:
 44221  00A8A4  8ED2               	bsf	16338,7,c	;volatile
 44222  00A8A6                     u6756:
 44223                           
 44224                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 44225  00A8A6  0139               	movlb	57	; force () banked
 44226  00A8A8  8983               	bsf	131,4,b	;volatile
 44227                           
 44228                           ; BSR set to: 57
 44229                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 44230  00A8AA  0139               	movlb	57	; force () banked
 44231  00A8AC  8783               	bsf	131,3,b	;volatile
 44232                           
 44233                           ; BSR set to: 57
 44234                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR3bits.TMR0IP = 0;
 44235  00A8AE  0139               	movlb	57	; force () banked
 44236  00A8B0  9F83               	bcf	131,7,b	;volatile
 44237                           
 44238                           ; BSR set to: 57
 44239                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR6bits.TMR3IP = 1;
 44240  00A8B2  0139               	movlb	57	; force () banked
 44241  00A8B4  8D86               	bsf	134,6,b	;volatile
 44242                           
 44243                           ; BSR set to: 57
 44244                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR4bits.TMR1IP = 1;
 44245  00A8B6  0139               	movlb	57	; force () banked
 44246  00A8B8  8184               	bsf	132,0,b	;volatile
 44247                           
 44248                           ; BSR set to: 57
 44249  00A8BA  0012               	return		;funcret
 44250  00A8BC                     __end_of_INTERRUPT_Initialize:
 44251                           	callstack 0
 44252                           
 44253 ;; *************** function _CRC_Initialize *****************
 44254 ;; Defined at:
 44255 ;;		line 76 in file "mcc_generated_files/crc.c"
 44256 ;; Parameters:    Size  Location     Type
 44257 ;;		None
 44258 ;; Auto vars:     Size  Location     Type
 44259 ;;  seed            2   20[BANK0 ] unsigned int 
 44260 ;;  poly            2   18[BANK0 ] unsigned int 
 44261 ;; Return value:  Size  Location     Type
 44262 ;;                  1    wreg      void 
 44263 ;; Registers used:
 44264 ;;		wreg, status,2, status,0
 44265 ;; Tracked objects:
 44266 ;;		On entry : 3F/39
 44267 ;;		On exit  : 3F/2
 44268 ;;		Unchanged: 0/0
 44269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44271 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44272 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44273 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44274 ;;Total ram usage:        5 bytes
 44275 ;; Hardware stack levels used:    1
 44276 ;; Hardware stack levels required when called:   11
 44277 ;; This function calls:
 44278 ;;		Nothing
 44279 ;; This function is called by:
 44280 ;;		_SYSTEM_Initialize
 44281 ;; This function uses a non-reentrant model
 44282 ;;
 44283                           
 44284                           	psect	text261
 44285  009762                     __ptext261:
 44286                           	callstack 0
 44287  009762                     _CRC_Initialize:
 44288                           	callstack 18
 44289                           
 44290                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 44291                           
 44292                           ; BSR set to: 57
 44293                           ;incstack = 0
 44294  009762  0E80               	movlw	128
 44295  009764  0139               	movlb	57	; force () banked
 44296  009766  6F68               	movwf	104,b	;volatile
 44297                           
 44298                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (7 << 4) | (15);
 44299  009768  0E7F               	movlw	127
 44300  00976A  0139               	movlb	57	; force () banked
 44301  00976C  6F69               	movwf	105,b	;volatile
 44302                           
 44303                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 44304  00976E  0E00               	movlw	0
 44305  009770  0139               	movlb	57	; force () banked
 44306  009772  6F62               	movwf	98,b	;volatile
 44307                           
 44308                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 44309  009774  0E00               	movlw	0
 44310  009776  0139               	movlb	57	; force () banked
 44311  009778  6F63               	movwf	99,b	;volatile
 44312                           
 44313                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 44314  00977A  0E00               	movlw	0
 44315  00977C  0139               	movlb	57	; force () banked
 44316  00977E  6F7C               	movwf	124,b	;volatile
 44317                           
 44318                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 44319  009780  0E00               	movlw	0
 44320  009782  0139               	movlb	57	; force () banked
 44321  009784  6F78               	movwf	120,b	;volatile
 44322                           
 44323                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 44324  009786  0E00               	movlw	0
 44325  009788  0139               	movlb	57	; force () banked
 44326  00978A  6F77               	movwf	119,b	;volatile
 44327                           
 44328                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 44329  00978C  0E00               	movlw	0
 44330  00978E  0139               	movlb	57	; force () banked
 44331  009790  6F76               	movwf	118,b	;volatile
 44332                           
 44333                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 44334  009792  0E3F               	movlw	63
 44335  009794  0139               	movlb	57	; force () banked
 44336  009796  6F7B               	movwf	123,b	;volatile
 44337                           
 44338                           ; BSR set to: 57
 44339                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 44340  009798  0139               	movlb	57	; force () banked
 44341  00979A  697A               	setf	122,b	;volatile
 44342                           
 44343                           ; BSR set to: 57
 44344                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 44345  00979C  0139               	movlb	57	; force () banked
 44346  00979E  6979               	setf	121,b	;volatile
 44347                           
 44348                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 44349  0097A0  0E00               	movlw	0
 44350  0097A2  0139               	movlb	57	; force () banked
 44351  0097A4  6F7D               	movwf	125,b	;volatile
 44352                           
 44353                           ;mcc_generated_files/crc.c: 106:     poly = 32773;
 44354  0097A6  0E80               	movlw	128
 44355  0097A8  0100               	movlb	0	; force () banked
 44356  0097AA  6F73               	movwf	(CRC_Initialize@poly+1)& (0+255),b
 44357  0097AC  0E05               	movlw	5
 44358  0097AE  6F72               	movwf	CRC_Initialize@poly& (0+255),b
 44359                           
 44360                           ; BSR set to: 0
 44361                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 44362  0097B0  0060  F1CF  F967   	movff	CRC_Initialize@poly+1,14695	;volatile
 44363                           
 44364                           ; BSR set to: 0
 44365                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 44366  0097B6  0060  F1CB  F966   	movff	CRC_Initialize@poly,14694	;volatile
 44367                           
 44368                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 44369  0097BC  0E00               	movlw	0
 44370  0097BE  0100               	movlb	0	; force () banked
 44371  0097C0  6F75               	movwf	(CRC_Initialize@seed+1)& (0+255),b
 44372  0097C2  0E00               	movlw	0
 44373  0097C4  6F74               	movwf	CRC_Initialize@seed& (0+255),b
 44374                           
 44375                           ; BSR set to: 0
 44376                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 44377  0097C6  0060  F1D7  F963   	movff	CRC_Initialize@seed+1,14691	;volatile
 44378                           
 44379                           ; BSR set to: 0
 44380                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 44381  0097CC  0060  F1D3  F962   	movff	CRC_Initialize@seed,14690	;volatile
 44382                           
 44383                           ; BSR set to: 0
 44384                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 44385  0097D2  0139               	movlb	57	; force () banked
 44386  0097D4  3969               	swapf	105,w,b	;volatile
 44387  0097D6  0B0F               	andlw	15
 44388  0097D8  0100               	movlb	0	; force () banked
 44389  0097DA  6F71               	movwf	??_CRC_Initialize& (0+255),b
 44390  0097DC  2971               	incf	??_CRC_Initialize& (0+255),w,b
 44391  0097DE  0102               	movlb	2	; force () banked
 44392  0097E0  6FE0               	movwf	_crcObj& (0+255),b
 44393                           
 44394                           ; BSR set to: 2
 44395                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 44396  0097E2  0139               	movlb	57	; force () banked
 44397  0097E4  5169               	movf	105,w,b	;volatile
 44398  0097E6  0B0F               	andlw	15
 44399  0097E8  0100               	movlb	0	; force () banked
 44400  0097EA  6F71               	movwf	??_CRC_Initialize& (0+255),b
 44401  0097EC  2971               	incf	??_CRC_Initialize& (0+255),w,b
 44402  0097EE  0102               	movlb	2	; force () banked
 44403  0097F0  6FE1               	movwf	(_crcObj+1)& (0+255),b
 44404                           
 44405                           ; BSR set to: 2
 44406  0097F2  0012               	return		;funcret
 44407  0097F4                     __end_of_CRC_Initialize:
 44408                           	callstack 0
 44409                           
 44410 ;; *************** function _TMR0_ISR *****************
 44411 ;; Defined at:
 44412 ;;		line 137 in file "mcc_generated_files/tmr0.c"
 44413 ;; Parameters:    Size  Location     Type
 44414 ;;		None
 44415 ;; Auto vars:     Size  Location     Type
 44416 ;;		None
 44417 ;; Return value:  Size  Location     Type
 44418 ;;                  1    wreg      void 
 44419 ;; Registers used:
 44420 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 44421 ;; Tracked objects:
 44422 ;;		On entry : 0/0
 44423 ;;		On exit  : 0/0
 44424 ;;		Unchanged: 0/0
 44425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44428 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44429 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44430 ;;Total ram usage:        1 bytes
 44431 ;; Hardware stack levels used:    1
 44432 ;; Hardware stack levels required when called:   10
 44433 ;; This function calls:
 44434 ;;		_TMR0_CallBack
 44435 ;; This function is called by:
 44436 ;;		Interrupt level 1
 44437 ;; This function uses a non-reentrant model
 44438 ;;
 44439                           
 44440                           	psect	text262
 44441  00B768                     __ptext262:
 44442                           	callstack 0
 44443  00B768                     _TMR0_ISR:
 44444                           	callstack 9
 44445                           
 44446                           ; BSR set to: 2
 44447                           ;incstack = 0
 44448  00B768  006F FF60  F070    	movff	status,??_TMR0_ISR
 44449  00B76E  EE12  F1D6         	lfsr	1,___intlo_sp
 44450                           
 44451                           ;mcc_generated_files/tmr0.c: 141:     PIR3bits.TMR0IF = 0;
 44452  00B772  0139               	movlb	57	; force () banked
 44453  00B774  9FA3               	bcf	163,7,b	;volatile
 44454                           
 44455                           ;mcc_generated_files/tmr0.c: 143:     TMR0H = timer0ReloadVal16bit >> 8;
 44456  00B776  0060  FBBF  FFB7   	movff	_timer0ReloadVal16bit+1,16311	;volatile
 44457                           
 44458                           ;mcc_generated_files/tmr0.c: 144:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 44459  00B77C  0060  FBBB  FFB6   	movff	_timer0ReloadVal16bit,16310	;volatile
 44460                           
 44461                           ; BSR set to: 57
 44462                           ;mcc_generated_files/tmr0.c: 148:     TMR0_CallBack();
 44463  00B782  EC99  F05C         	call	_TMR0_CallBack	;wreg free
 44464  00B786  0060  F1C3  FFD8   	movff	??_TMR0_ISR,status
 44465  00B78C  0011               	retfie		f
 44466  00B78E                     __end_of_TMR0_ISR:
 44467                           	callstack 0
 44468                           
 44469 ;; *************** function _TMR0_CallBack *****************
 44470 ;; Defined at:
 44471 ;;		line 153 in file "mcc_generated_files/tmr0.c"
 44472 ;; Parameters:    Size  Location     Type
 44473 ;;		None
 44474 ;; Auto vars:     Size  Location     Type
 44475 ;;		None
 44476 ;; Return value:  Size  Location     Type
 44477 ;;                  1    wreg      void 
 44478 ;; Registers used:
 44479 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 44480 ;; Tracked objects:
 44481 ;;		On entry : 3F/39
 44482 ;;		On exit  : 0/0
 44483 ;;		Unchanged: 0/0
 44484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44489 ;;Total ram usage:        0 bytes
 44490 ;; Hardware stack levels used:    1
 44491 ;; Hardware stack levels required when called:    9
 44492 ;; This function calls:
 44493 ;;		Absolute function
 44494 ;;		_TMR0_DefaultInterruptHandler
 44495 ;;		_Timer0Handler
 44496 ;; This function is called by:
 44497 ;;		_TMR0_ISR
 44498 ;; This function uses a non-reentrant model
 44499 ;;
 44500                           
 44501                           	psect	text263
 44502  00B932                     __ptext263:
 44503                           	callstack 0
 44504  00B932                     _TMR0_CallBack:
 44505                           	callstack 9
 44506                           
 44507                           ;mcc_generated_files/tmr0.c: 157:     if(TMR0_InterruptHandler)
 44508                           
 44509                           ;incstack = 0
 44510  00B932  0102               	movlb	2	; force () banked
 44511  00B934  51EC               	movf	_TMR0_InterruptHandler& (0+255),w,b
 44512  00B936  11ED               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 44513  00B938  B4D8               	btfsc	status,2,c
 44514  00B93A  0012               	return	
 44515                           
 44516                           ; BSR set to: 2
 44517                           ;mcc_generated_files/tmr0.c: 158:     {;mcc_generated_files/tmr0.c: 159:         TMR0_In
      +                          terruptHandler();
 44518  00B93C  D801               	call	i1u1446_28
 44519  00B93E  0012               	return	
 44520  00B940                     i1u1446_28:
 44521  00B940  0005               	push	
 44522  00B942  6EFA               	movwf	pclath,c
 44523  00B944  0102               	movlb	2	; force () banked
 44524  00B946  51EC               	movf	_TMR0_InterruptHandler& (0+255),w,b
 44525  00B948  6EFD               	movwf	tosl,c
 44526  00B94A  51ED               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 44527  00B94C  6EFE               	movwf	tosh,c
 44528  00B94E  6AFF               	clrf	tosu,c
 44529  00B950  50FA               	movf	pclath,w,c
 44530  00B952  0012               	return		;indir
 44531  00B954                     __end_of_TMR0_CallBack:
 44532                           	callstack 0
 44533                           
 44534 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 44535 ;; Defined at:
 44536 ;;		line 167 in file "mcc_generated_files/tmr0.c"
 44537 ;; Parameters:    Size  Location     Type
 44538 ;;		None
 44539 ;; Auto vars:     Size  Location     Type
 44540 ;;		None
 44541 ;; Return value:  Size  Location     Type
 44542 ;;                  1    wreg      void 
 44543 ;; Registers used:
 44544 ;;		None
 44545 ;; Tracked objects:
 44546 ;;		On entry : 3F/2
 44547 ;;		On exit  : 0/0
 44548 ;;		Unchanged: 0/0
 44549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44554 ;;Total ram usage:        0 bytes
 44555 ;; Hardware stack levels used:    1
 44556 ;; Hardware stack levels required when called:    8
 44557 ;; This function calls:
 44558 ;;		Nothing
 44559 ;; This function is called by:
 44560 ;;		_TMR0_Initialize
 44561 ;;		_TMR0_CallBack
 44562 ;; This function uses a non-reentrant model
 44563 ;;
 44564                           
 44565                           	psect	text264
 44566  00BD92                     __ptext264:
 44567                           	callstack 0
 44568  00BD92                     _TMR0_DefaultInterruptHandler:
 44569                           	callstack 9
 44570                           
 44571                           ;incstack = 0
 44572  00BD92  0012               	return		;funcret
 44573  00BD94                     __end_of_TMR0_DefaultInterruptHandler:
 44574                           	callstack 0
 44575                           
 44576 ;; *************** function _Timer0Handler *****************
 44577 ;; Defined at:
 44578 ;;		line 28 in file "../hal/hal_src/Timers.c"
 44579 ;; Parameters:    Size  Location     Type
 44580 ;;		None
 44581 ;; Auto vars:     Size  Location     Type
 44582 ;;		None
 44583 ;; Return value:  Size  Location     Type
 44584 ;;                  1    wreg      void 
 44585 ;; Registers used:
 44586 ;;		wreg, status,2, status,0
 44587 ;; Tracked objects:
 44588 ;;		On entry : 3F/2
 44589 ;;		On exit  : 3F/1
 44590 ;;		Unchanged: 0/0
 44591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44596 ;;Total ram usage:        0 bytes
 44597 ;; Hardware stack levels used:    1
 44598 ;; Hardware stack levels required when called:    8
 44599 ;; This function calls:
 44600 ;;		Nothing
 44601 ;; This function is called by:
 44602 ;;		_bootLoadApplication
 44603 ;;		_main
 44604 ;;		_TMR0_CallBack
 44605 ;; This function uses a non-reentrant model
 44606 ;;
 44607                           
 44608                           	psect	text265
 44609  009D70                     __ptext265:
 44610                           	callstack 0
 44611  009D70                     _Timer0Handler:
 44612                           	callstack 9
 44613                           
 44614                           ;../hal/hal_src/Timers.c: 29:     if(txTimeOut){
 44615                           
 44616                           ;incstack = 0
 44617  009D70  0100               	movlb	0	; force () banked
 44618  009D72  51E2               	movf	_txTimeOut& (0+255),w,b	;volatile
 44619  009D74  11E3               	iorwf	(_txTimeOut+1)& (0+255),w,b	;volatile
 44620  009D76  B4D8               	btfsc	status,2,c
 44621  009D78  D004               	goto	i1l16244
 44622                           
 44623                           ; BSR set to: 0
 44624                           ;../hal/hal_src/Timers.c: 30:         txTimeOut--;
 44625  009D7A  0100               	movlb	0	; force () banked
 44626  009D7C  07E2               	decf	_txTimeOut& (0+255),f,b	;volatile
 44627  009D7E  A0D8               	btfss	status,0,c
 44628  009D80  07E3               	decf	(_txTimeOut+1)& (0+255),f,b	;volatile
 44629  009D82                     i1l16244:
 44630                           
 44631                           ; BSR set to: 0
 44632                           ;../hal/hal_src/Timers.c: 32:     if(ATTimeoutTimer){
 44633  009D82  0102               	movlb	2	; force () banked
 44634  009D84  51FD               	movf	_ATTimeoutTimer& (0+255),w,b	;volatile
 44635  009D86  11FE               	iorwf	(_ATTimeoutTimer+1)& (0+255),w,b	;volatile
 44636  009D88  B4D8               	btfsc	status,2,c
 44637  009D8A  D004               	goto	i1l16248
 44638                           
 44639                           ; BSR set to: 2
 44640                           ;../hal/hal_src/Timers.c: 33:         ATTimeoutTimer--;
 44641  009D8C  0102               	movlb	2	; force () banked
 44642  009D8E  07FD               	decf	_ATTimeoutTimer& (0+255),f,b	;volatile
 44643  009D90  A0D8               	btfss	status,0,c
 44644  009D92  07FE               	decf	(_ATTimeoutTimer+1)& (0+255),f,b	;volatile
 44645  009D94                     i1l16248:
 44646                           
 44647                           ; BSR set to: 2
 44648                           ;../hal/hal_src/Timers.c: 35:     if(cadTimeOut){
 44649  009D94  0100               	movlb	0	; force () banked
 44650  009D96  51E4               	movf	_cadTimeOut& (0+255),w,b	;volatile
 44651  009D98  11E5               	iorwf	(_cadTimeOut+1)& (0+255),w,b	;volatile
 44652  009D9A  B4D8               	btfsc	status,2,c
 44653  009D9C  D004               	goto	i1l16252
 44654                           
 44655                           ; BSR set to: 0
 44656                           ;../hal/hal_src/Timers.c: 36:         cadTimeOut--;
 44657  009D9E  0100               	movlb	0	; force () banked
 44658  009DA0  07E4               	decf	_cadTimeOut& (0+255),f,b	;volatile
 44659  009DA2  A0D8               	btfss	status,0,c
 44660  009DA4  07E5               	decf	(_cadTimeOut+1)& (0+255),f,b	;volatile
 44661  009DA6                     i1l16252:
 44662                           
 44663                           ; BSR set to: 0
 44664                           ;../hal/hal_src/Timers.c: 38:     if(_cadBackoffTimer){
 44665  009DA6  0100               	movlb	0	; force () banked
 44666  009DA8  51E6               	movf	__cadBackoffTimer& (0+255),w,b	;volatile
 44667  009DAA  11E7               	iorwf	(__cadBackoffTimer+1)& (0+255),w,b	;volatile
 44668  009DAC  B4D8               	btfsc	status,2,c
 44669  009DAE  D004               	goto	i1l16256
 44670                           
 44671                           ; BSR set to: 0
 44672                           ;../hal/hal_src/Timers.c: 39:         _cadBackoffTimer--;
 44673  009DB0  0100               	movlb	0	; force () banked
 44674  009DB2  07E6               	decf	__cadBackoffTimer& (0+255),f,b	;volatile
 44675  009DB4  A0D8               	btfss	status,0,c
 44676  009DB6  07E7               	decf	(__cadBackoffTimer+1)& (0+255),f,b	;volatile
 44677  009DB8                     i1l16256:
 44678                           
 44679                           ; BSR set to: 0
 44680                           ;../hal/hal_src/Timers.c: 41:     if(ledtimer){
 44681  009DB8  0101               	movlb	1	; force () banked
 44682  009DBA  51F9               	movf	_ledtimer& (0+255),w,b	;volatile
 44683  009DBC  11FA               	iorwf	(_ledtimer+1)& (0+255),w,b	;volatile
 44684  009DBE  B4D8               	btfsc	status,2,c
 44685  009DC0  D004               	goto	i1l16260
 44686                           
 44687                           ; BSR set to: 1
 44688                           ;../hal/hal_src/Timers.c: 42:         ledtimer--;
 44689  009DC2  0101               	movlb	1	; force () banked
 44690  009DC4  07F9               	decf	_ledtimer& (0+255),f,b	;volatile
 44691  009DC6  A0D8               	btfss	status,0,c
 44692  009DC8  07FA               	decf	(_ledtimer+1)& (0+255),f,b	;volatile
 44693  009DCA                     i1l16260:
 44694                           
 44695                           ; BSR set to: 1
 44696                           ;../hal/hal_src/Timers.c: 44:     if(blen_sample_timer){
 44697  009DCA  0101               	movlb	1	; force () banked
 44698  009DCC  51F7               	movf	_blen_sample_timer& (0+255),w,b
 44699  009DCE  11F8               	iorwf	(_blen_sample_timer+1)& (0+255),w,b
 44700  009DD0  B4D8               	btfsc	status,2,c
 44701  009DD2  D004               	goto	i1l16264
 44702                           
 44703                           ; BSR set to: 1
 44704                           ;../hal/hal_src/Timers.c: 45:         blen_sample_timer--;
 44705  009DD4  0101               	movlb	1	; force () banked
 44706  009DD6  07F7               	decf	_blen_sample_timer& (0+255),f,b
 44707  009DD8  A0D8               	btfss	status,0,c
 44708  009DDA  07F8               	decf	(_blen_sample_timer+1)& (0+255),f,b
 44709  009DDC                     i1l16264:
 44710                           
 44711                           ; BSR set to: 1
 44712                           ;../hal/hal_src/Timers.c: 48:     if(reset_timer){
 44713  009DDC  0102               	movlb	2	; force () banked
 44714  009DDE  514E               	movf	_reset_timer& (0+255),w,b
 44715  009DE0  114F               	iorwf	(_reset_timer+1)& (0+255),w,b
 44716  009DE2  B4D8               	btfsc	status,2,c
 44717  009DE4  D004               	goto	i1l1516
 44718                           
 44719                           ; BSR set to: 2
 44720                           ;../hal/hal_src/Timers.c: 49:         reset_timer--;
 44721  009DE6  0102               	movlb	2	; force () banked
 44722  009DE8  074E               	decf	_reset_timer& (0+255),f,b
 44723  009DEA  A0D8               	btfss	status,0,c
 44724  009DEC  074F               	decf	(_reset_timer+1)& (0+255),f,b
 44725  009DEE                     i1l1516:
 44726                           
 44727                           ; BSR set to: 2
 44728                           ;../hal/hal_src/Timers.c: 52:     halTimerIrqCount++;
 44729  009DEE  0101               	movlb	1	; force () banked
 44730  009DF0  4BD9               	infsnz	_halTimerIrqCount& (0+255),f,b	;volatile
 44731  009DF2  2BDA               	incf	(_halTimerIrqCount+1)& (0+255),f,b	;volatile
 44732                           
 44733                           ; BSR set to: 1
 44734  009DF4  0012               	return		;funcret
 44735  009DF6                     __end_of_Timer0Handler:
 44736                           	callstack 0
 44737                           
 44738 ;; *************** function _Default_ISR *****************
 44739 ;; Defined at:
 44740 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 44741 ;; Parameters:    Size  Location     Type
 44742 ;;		None
 44743 ;; Auto vars:     Size  Location     Type
 44744 ;;		None
 44745 ;; Return value:  Size  Location     Type
 44746 ;;                  1    wreg      void 
 44747 ;; Registers used:
 44748 ;;		None
 44749 ;; Tracked objects:
 44750 ;;		On entry : 0/0
 44751 ;;		On exit  : 0/0
 44752 ;;		Unchanged: 0/0
 44753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44758 ;;Total ram usage:        0 bytes
 44759 ;; Hardware stack levels used:    1
 44760 ;; This function calls:
 44761 ;;		Nothing
 44762 ;; This function is called by:
 44763 ;;		Interrupt level 2
 44764 ;; This function uses a non-reentrant model
 44765 ;;
 44766                           
 44767                           	psect	text266
 44768  00BD64                     __ptext266:
 44769                           	callstack 0
 44770  00BD64                     _Default_ISR:
 44771                           	callstack 16
 44772                           
 44773                           ; BSR set to: 1
 44774                           ;incstack = 0
 44775  00BD64  EE12  F1AC         	lfsr	1,___inthi_sp
 44776  00BD68  0011               	retfie		f
 44777  00BD6A                     __end_of_Default_ISR:
 44778                           	callstack 0
 44779                           
 44780 ;; *************** function _UART1_tx_vect_isr *****************
 44781 ;; Defined at:
 44782 ;;		line 249 in file "mcc_generated_files/uart1.c"
 44783 ;; Parameters:    Size  Location     Type
 44784 ;;		None
 44785 ;; Auto vars:     Size  Location     Type
 44786 ;;		None
 44787 ;; Return value:  Size  Location     Type
 44788 ;;                  1    wreg      void 
 44789 ;; Registers used:
 44790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 44791 ;; Tracked objects:
 44792 ;;		On entry : 0/0
 44793 ;;		On exit  : 0/0
 44794 ;;		Unchanged: 0/0
 44795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44800 ;;Total ram usage:        0 bytes
 44801 ;; Hardware stack levels used:    1
 44802 ;; Hardware stack levels required when called:    1
 44803 ;; This function calls:
 44804 ;;		Absolute function
 44805 ;;		_UART1_Transmit_ISR
 44806 ;; This function is called by:
 44807 ;;		Interrupt level 2
 44808 ;; This function uses a non-reentrant model
 44809 ;;
 44810                           
 44811                           	psect	text267
 44812  00B790                     __ptext267:
 44813                           	callstack 0
 44814  00B790                     _UART1_tx_vect_isr:
 44815                           	callstack 15
 44816                           
 44817                           ;incstack = 0
 44818  00B790  EE12  F1AC         	lfsr	1,___inthi_sp
 44819                           
 44820                           ;mcc_generated_files/uart1.c: 252:     if(UART1_TxInterruptHandler)
 44821  00B794  0102               	movlb	2	; force () banked
 44822  00B796  51F0               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 44823  00B798  11F1               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 44824  00B79A  B4D8               	btfsc	status,2,c
 44825  00B79C  0011               	retfie		f
 44826                           
 44827                           ; BSR set to: 2
 44828                           ;mcc_generated_files/uart1.c: 253:     {;mcc_generated_files/uart1.c: 254:         UART1
      +                          _TxInterruptHandler();
 44829  00B79E  D801               	call	i2u1459_48
 44830  00B7A0  0011               	retfie		f
 44831  00B7A2                     i2u1459_48:
 44832  00B7A2  0005               	push	
 44833  00B7A4  6EFA               	movwf	pclath,c
 44834  00B7A6  0102               	movlb	2	; force () banked
 44835  00B7A8  51F0               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 44836  00B7AA  6EFD               	movwf	tosl,c
 44837  00B7AC  51F1               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 44838  00B7AE  6EFE               	movwf	tosh,c
 44839  00B7B0  6AFF               	clrf	tosu,c
 44840  00B7B2  50FA               	movf	pclath,w,c
 44841  00B7B4  0012               	return		;indir
 44842  00B7B6                     __end_of_UART1_tx_vect_isr:
 44843                           	callstack 0
 44844                           
 44845 ;; *************** function _UART1_Transmit_ISR *****************
 44846 ;; Defined at:
 44847 ;;		line 271 in file "mcc_generated_files/uart1.c"
 44848 ;; Parameters:    Size  Location     Type
 44849 ;;		None
 44850 ;; Auto vars:     Size  Location     Type
 44851 ;;		None
 44852 ;; Return value:  Size  Location     Type
 44853 ;;                  1    wreg      void 
 44854 ;; Registers used:
 44855 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44856 ;; Tracked objects:
 44857 ;;		On entry : 3F/2
 44858 ;;		On exit  : 4/0
 44859 ;;		Unchanged: 0/0
 44860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44865 ;;Total ram usage:        0 bytes
 44866 ;; Hardware stack levels used:    1
 44867 ;; This function calls:
 44868 ;;		Nothing
 44869 ;; This function is called by:
 44870 ;;		_UART1_Initialize
 44871 ;;		_UART1_tx_vect_isr
 44872 ;; This function uses a non-reentrant model
 44873 ;;
 44874                           
 44875                           	psect	text268
 44876  00B23A                     __ptext268:
 44877                           	callstack 0
 44878  00B23A                     _UART1_Transmit_ISR:
 44879                           	callstack 15
 44880                           
 44881                           ;mcc_generated_files/uart1.c: 274:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 44882                           
 44883                           ;incstack = 0
 44884  00B23A  0E40               	movlw	64
 44885  00B23C  0102               	movlb	2	; force () banked
 44886  00B23E  61F4               	cpfslt	_uart1TxBufferRemaining& (0+255),b
 44887  00B240  D016               	goto	i2l1963
 44888                           
 44889                           ; BSR set to: 2
 44890                           ;mcc_generated_files/uart1.c: 275:     {;mcc_generated_files/uart1.c: 279:        U1TXB 
      +                          = uart1TxBuffer[uart1TxTail++];
 44891  00B242  0E40               	movlw	low _uart1TxBuffer
 44892  00B244  0101               	movlb	1	; force () banked
 44893  00B246  25E2               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 44894  00B248  6ED9               	movwf	fsr2l,c
 44895  00B24A  6ADA               	clrf	fsr2h,c
 44896  00B24C  0E05               	movlw	high _uart1TxBuffer
 44897  00B24E  22DA               	addwfc	fsr2h,f,c
 44898  00B250  50DF               	movf	indf2,w,c
 44899  00B252  013D               	movlb	61	; force () banked
 44900  00B254  6FEA               	movwf	234,b	;volatile
 44901                           
 44902                           ; BSR set to: 61
 44903  00B256  0101               	movlb	1	; force () banked
 44904  00B258  2BE2               	incf	_uart1TxTail& (0+255),f,b	;volatile
 44905                           
 44906                           ; BSR set to: 1
 44907                           ;mcc_generated_files/uart1.c: 280:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 44908  00B25A  0E3F               	movlw	63
 44909  00B25C  0101               	movlb	1	; force () banked
 44910  00B25E  65E2               	cpfsgt	_uart1TxTail& (0+255),b
 44911  00B260  D003               	goto	i2l16688
 44912                           
 44913                           ; BSR set to: 1
 44914                           ;mcc_generated_files/uart1.c: 281:         {;mcc_generated_files/uart1.c: 282:          
      +                             uart1TxTail = 0;
 44915  00B262  0E00               	movlw	0
 44916  00B264  0101               	movlb	1	; force () banked
 44917  00B266  6FE2               	movwf	_uart1TxTail& (0+255),b	;volatile
 44918  00B268                     i2l16688:
 44919                           
 44920                           ; BSR set to: 1
 44921                           ;mcc_generated_files/uart1.c: 284:         uart1TxBufferRemaining++;
 44922  00B268  0102               	movlb	2	; force () banked
 44923  00B26A  2BF4               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 44924                           
 44925                           ;mcc_generated_files/uart1.c: 285:     }
 44926  00B26C  0012               	return	
 44927  00B26E                     i2l1963:
 44928                           
 44929                           ; BSR set to: 2
 44930                           ;mcc_generated_files/uart1.c: 287:     {;mcc_generated_files/uart1.c: 292:         PIE3b
      +                          its.U1TXIE = 0;
 44931  00B26E  0139               	movlb	57	; force () banked
 44932  00B270  9993               	bcf	147,4,b	;volatile
 44933  00B272  0012               	return		;funcret
 44934  00B274                     __end_of_UART1_Transmit_ISR:
 44935                           	callstack 0
 44936                           
 44937 ;; *************** function _UART1_rx_vect_isr *****************
 44938 ;; Defined at:
 44939 ;;		line 260 in file "mcc_generated_files/uart1.c"
 44940 ;; Parameters:    Size  Location     Type
 44941 ;;		None
 44942 ;; Auto vars:     Size  Location     Type
 44943 ;;		None
 44944 ;; Return value:  Size  Location     Type
 44945 ;;                  1    wreg      void 
 44946 ;; Registers used:
 44947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, cstack
 44948 ;; Tracked objects:
 44949 ;;		On entry : 0/0
 44950 ;;		On exit  : 0/0
 44951 ;;		Unchanged: 0/0
 44952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44955 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44956 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44957 ;;Total ram usage:        3 bytes
 44958 ;; Hardware stack levels used:    1
 44959 ;; Hardware stack levels required when called:    3
 44960 ;; This function calls:
 44961 ;;		Absolute function
 44962 ;;		_UART1_Receive_ISR
 44963 ;; This function is called by:
 44964 ;;		Interrupt level 2
 44965 ;; This function uses a non-reentrant model
 44966 ;;
 44967                           
 44968                           	psect	text269
 44969  00AAE8                     __ptext269:
 44970                           	callstack 0
 44971  00AAE8                     _UART1_rx_vect_isr:
 44972                           	callstack 13
 44973                           
 44974                           ;incstack = 0
 44975  00AAE8  0060  F004  F060   	movff	btemp,??_UART1_rx_vect_isr
 44976  00AAEE  0060  F02C  F061   	movff	btemp+10,??_UART1_rx_vect_isr+1
 44977  00AAF4  0060  F030  F062   	movff	btemp+11,??_UART1_rx_vect_isr+2
 44978  00AAFA  EE12  F1AC         	lfsr	1,___inthi_sp
 44979                           
 44980                           ;mcc_generated_files/uart1.c: 263:     if(UART1_RxInterruptHandler)
 44981  00AAFE  0102               	movlb	2	; force () banked
 44982  00AB00  51F2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 44983  00AB02  11F3               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 44984  00AB04  B4D8               	btfsc	status,2,c
 44985  00AB06  D00C               	goto	i2u1461_49
 44986                           
 44987                           ; BSR set to: 2
 44988                           ;mcc_generated_files/uart1.c: 264:     {;mcc_generated_files/uart1.c: 265:         UART1
      +                          _RxInterruptHandler();
 44989  00AB08  D801               	call	i2u1461_48
 44990  00AB0A  D00A               	goto	i2u1461_49
 44991  00AB0C                     i2u1461_48:
 44992  00AB0C  0005               	push	
 44993  00AB0E  6EFA               	movwf	pclath,c
 44994  00AB10  0102               	movlb	2	; force () banked
 44995  00AB12  51F2               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 44996  00AB14  6EFD               	movwf	tosl,c
 44997  00AB16  51F3               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 44998  00AB18  6EFE               	movwf	tosh,c
 44999  00AB1A  6AFF               	clrf	tosu,c
 45000  00AB1C  50FA               	movf	pclath,w,c
 45001  00AB1E  0012               	return		;indir
 45002  00AB20                     i2u1461_49:
 45003  00AB20  0060  F188  F00C   	movff	??_UART1_rx_vect_isr+2,btemp+11
 45004  00AB26  0060  F184  F00B   	movff	??_UART1_rx_vect_isr+1,btemp+10
 45005  00AB2C  0060  F180  F001   	movff	??_UART1_rx_vect_isr,btemp
 45006  00AB32  0011               	retfie		f
 45007  00AB34                     __end_of_UART1_rx_vect_isr:
 45008                           	callstack 0
 45009                           
 45010 ;; *************** function _UART1_Receive_ISR *****************
 45011 ;; Defined at:
 45012 ;;		line 298 in file "mcc_generated_files/uart1.c"
 45013 ;; Parameters:    Size  Location     Type
 45014 ;;		None
 45015 ;; Auto vars:     Size  Location     Type
 45016 ;;		None
 45017 ;; Return value:  Size  Location     Type
 45018 ;;                  1    wreg      void 
 45019 ;; Registers used:
 45020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, cstack
 45021 ;; Tracked objects:
 45022 ;;		On entry : 3F/2
 45023 ;;		On exit  : 0/0
 45024 ;;		Unchanged: 0/0
 45025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45030 ;;Total ram usage:        0 bytes
 45031 ;; Hardware stack levels used:    1
 45032 ;; Hardware stack levels required when called:    2
 45033 ;; This function calls:
 45034 ;;		Absolute function
 45035 ;;		_UART1_DefaultErrorHandler
 45036 ;;		_UART1_DefaultFramingErrorHandler
 45037 ;;		_UART1_DefaultOverrunErrorHandler
 45038 ;;		_UART1_RxDataHandler
 45039 ;;		_UART_error_handler
 45040 ;; This function is called by:
 45041 ;;		_UART1_Initialize
 45042 ;;		_UART1_rx_vect_isr
 45043 ;; This function uses a non-reentrant model
 45044 ;;
 45045                           
 45046                           	psect	text270
 45047  0090AC                     __ptext270:
 45048                           	callstack 0
 45049  0090AC                     _UART1_Receive_ISR:
 45050                           	callstack 13
 45051                           
 45052                           ;mcc_generated_files/uart1.c: 301:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 45053                           
 45054                           ;incstack = 0
 45055  0090AC  0E00               	movlw	low _uart1RxStatusBuffer
 45056  0090AE  0100               	movlb	0	; force () banked
 45057  0090B0  25DB               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 45058  0090B2  6ED9               	movwf	fsr2l,c
 45059  0090B4  6ADA               	clrf	fsr2h,c
 45060  0090B6  0E04               	movlw	high _uart1RxStatusBuffer
 45061  0090B8  22DA               	addwfc	fsr2h,f,c
 45062  0090BA  0E00               	movlw	0
 45063  0090BC  6EDF               	movwf	indf2,c
 45064                           
 45065                           ; BSR set to: 0
 45066                           ;mcc_generated_files/uart1.c: 303:     if(U1ERRIRbits.FERIF){
 45067  0090BE  013D               	movlb	61	; force () banked
 45068  0090C0  A7F9               	btfss	249,3,b	;volatile
 45069  0090C2  D015               	goto	i2u1450_49
 45070                           
 45071                           ; BSR set to: 61
 45072                           ;mcc_generated_files/uart1.c: 304:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 45073  0090C4  0E00               	movlw	low _uart1RxStatusBuffer
 45074  0090C6  0100               	movlb	0	; force () banked
 45075  0090C8  25DB               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 45076  0090CA  6ED9               	movwf	fsr2l,c
 45077  0090CC  6ADA               	clrf	fsr2h,c
 45078  0090CE  0E04               	movlw	high _uart1RxStatusBuffer
 45079  0090D0  22DA               	addwfc	fsr2h,f,c
 45080  0090D2  0104               	movlb	4	; force () banked
 45081  0090D4  82DF               	bsf	indf2,1,c
 45082                           
 45083                           ; BSR set to: 4
 45084                           ;mcc_generated_files/uart1.c: 305:         UART1_FramingErrorHandler();
 45085  0090D6  D801               	call	i2u1450_48
 45086  0090D8  D00A               	goto	i2u1450_49
 45087  0090DA                     i2u1450_48:
 45088  0090DA  0005               	push	
 45089  0090DC  6EFA               	movwf	pclath,c
 45090  0090DE  0102               	movlb	2	; force () banked
 45091  0090E0  51EA               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 45092  0090E2  6EFD               	movwf	tosl,c
 45093  0090E4  51EB               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 45094  0090E6  6EFE               	movwf	tosh,c
 45095  0090E8  6AFF               	clrf	tosu,c
 45096  0090EA  50FA               	movf	pclath,w,c
 45097  0090EC  0012               	return		;indir
 45098  0090EE                     i2u1450_49:
 45099                           
 45100                           ;mcc_generated_files/uart1.c: 308:     if(U1ERRIRbits.RXFOIF){
 45101  0090EE  013D               	movlb	61	; force () banked
 45102  0090F0  A3F9               	btfss	249,1,b	;volatile
 45103  0090F2  D015               	goto	i2u1452_49
 45104                           
 45105                           ; BSR set to: 61
 45106                           ;mcc_generated_files/uart1.c: 309:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 45107  0090F4  0E00               	movlw	low _uart1RxStatusBuffer
 45108  0090F6  0100               	movlb	0	; force () banked
 45109  0090F8  25DB               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 45110  0090FA  6ED9               	movwf	fsr2l,c
 45111  0090FC  6ADA               	clrf	fsr2h,c
 45112  0090FE  0E04               	movlw	high _uart1RxStatusBuffer
 45113  009100  22DA               	addwfc	fsr2h,f,c
 45114  009102  0104               	movlb	4	; force () banked
 45115  009104  84DF               	bsf	indf2,2,c
 45116                           
 45117                           ; BSR set to: 4
 45118                           ;mcc_generated_files/uart1.c: 310:         UART1_OverrunErrorHandler();
 45119  009106  D801               	call	i2u1452_48
 45120  009108  D00A               	goto	i2u1452_49
 45121  00910A                     i2u1452_48:
 45122  00910A  0005               	push	
 45123  00910C  6EFA               	movwf	pclath,c
 45124  00910E  0103               	movlb	3	; force () banked
 45125  009110  51FB               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 45126  009112  6EFD               	movwf	tosl,c
 45127  009114  51FC               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 45128  009116  6EFE               	movwf	tosh,c
 45129  009118  6AFF               	clrf	tosu,c
 45130  00911A  50FA               	movf	pclath,w,c
 45131  00911C  0012               	return		;indir
 45132  00911E                     i2u1452_49:
 45133                           
 45134                           ;mcc_generated_files/uart1.c: 313:     if(uart1RxStatusBuffer[uart1RxHead].status){
 45135  00911E  0E00               	movlw	low _uart1RxStatusBuffer
 45136  009120  0100               	movlb	0	; force () banked
 45137  009122  25DB               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 45138  009124  6ED9               	movwf	fsr2l,c
 45139  009126  6ADA               	clrf	fsr2h,c
 45140  009128  0E04               	movlw	high _uart1RxStatusBuffer
 45141  00912A  22DA               	addwfc	fsr2h,f,c
 45142  00912C  50DF               	movf	indf2,w,c
 45143  00912E  B4D8               	btfsc	status,2,c
 45144  009130  D00C               	goto	i2l16708
 45145                           
 45146                           ; BSR set to: 0
 45147                           ;mcc_generated_files/uart1.c: 314:         UART1_ErrorHandler();
 45148  009132  D801               	call	i2u1454_48
 45149  009134  0012               	return	
 45150  009136                     i2u1454_48:
 45151  009136  0005               	push	
 45152  009138  6EFA               	movwf	pclath,c
 45153  00913A  0103               	movlb	3	; force () banked
 45154  00913C  51F9               	movf	_UART1_ErrorHandler& (0+255),w,b
 45155  00913E  6EFD               	movwf	tosl,c
 45156  009140  51FA               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 45157  009142  6EFE               	movwf	tosh,c
 45158  009144  6AFF               	clrf	tosu,c
 45159  009146  50FA               	movf	pclath,w,c
 45160  009148  0012               	return		;indir
 45161  00914A                     i2l16708:
 45162                           
 45163                           ; BSR set to: 0
 45164                           ;mcc_generated_files/uart1.c: 316:         UART1_RxDataHandler();
 45165  00914A  ECF9  F05A         	call	_UART1_RxDataHandler	;wreg free
 45166  00914E  0012               	return		;funcret
 45167  009150                     __end_of_UART1_Receive_ISR:
 45168                           	callstack 0
 45169                           
 45170 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 45171 ;; Defined at:
 45172 ;;		line 333 in file "mcc_generated_files/uart1.c"
 45173 ;; Parameters:    Size  Location     Type
 45174 ;;		None
 45175 ;; Auto vars:     Size  Location     Type
 45176 ;;		None
 45177 ;; Return value:  Size  Location     Type
 45178 ;;                  1  [STACK] void 
 45179 ;; Registers used:
 45180 ;;		None
 45181 ;; Tracked objects:
 45182 ;;		On entry : 3F/3
 45183 ;;		On exit  : 0/0
 45184 ;;		Unchanged: 0/0
 45185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45190 ;;Total ram usage:        0 bytes
 45191 ;; Hardware stack levels used:    1
 45192 ;; This function calls:
 45193 ;;		Nothing
 45194 ;; This function is called by:
 45195 ;;		_UART1_Initialize
 45196 ;;		_UART1_Receive_ISR
 45197 ;; This function uses a reentrant model
 45198 ;;
 45199                           
 45200                           	psect	text271
 45201  00BD94                     __ptext271:
 45202                           	callstack 0
 45203  00BD94                     _UART1_DefaultOverrunErrorHandler:
 45204                           	callstack 14
 45205                           
 45206                           ; _UART1_DefaultOverrunErrorHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsi
      +                          ze = 0 parsize = 0, argsize = 0, vargsize = 0
 45207                           
 45208                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45209                           ;incstack = 0
 45210  00BD94  0012               	return		;funcret
 45211  00BD96                     __end_of_UART1_DefaultOverrunErrorHandler:
 45212                           	callstack 0
 45213                           
 45214 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 45215 ;; Defined at:
 45216 ;;		line 331 in file "mcc_generated_files/uart1.c"
 45217 ;; Parameters:    Size  Location     Type
 45218 ;;		None
 45219 ;; Auto vars:     Size  Location     Type
 45220 ;;		None
 45221 ;; Return value:  Size  Location     Type
 45222 ;;                  1  [STACK] void 
 45223 ;; Registers used:
 45224 ;;		None
 45225 ;; Tracked objects:
 45226 ;;		On entry : 3F/2
 45227 ;;		On exit  : 0/0
 45228 ;;		Unchanged: 0/0
 45229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45234 ;;Total ram usage:        0 bytes
 45235 ;; Hardware stack levels used:    1
 45236 ;; This function calls:
 45237 ;;		Nothing
 45238 ;; This function is called by:
 45239 ;;		_UART1_Initialize
 45240 ;;		_UART1_Receive_ISR
 45241 ;; This function uses a reentrant model
 45242 ;;
 45243                           
 45244                           	psect	text272
 45245  00BD96                     __ptext272:
 45246                           	callstack 0
 45247  00BD96                     _UART1_DefaultFramingErrorHandler:
 45248                           	callstack 14
 45249                           
 45250                           ; _UART1_DefaultFramingErrorHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsi
      +                          ze = 0 parsize = 0, argsize = 0, vargsize = 0
 45251                           
 45252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45253                           ;incstack = 0
 45254  00BD96  0012               	return		;funcret
 45255  00BD98                     __end_of_UART1_DefaultFramingErrorHandler:
 45256                           	callstack 0
 45257                           
 45258 ;; *************** function _UART1_DefaultErrorHandler *****************
 45259 ;; Defined at:
 45260 ;;		line 335 in file "mcc_generated_files/uart1.c"
 45261 ;; Parameters:    Size  Location     Type
 45262 ;;		None
 45263 ;; Auto vars:     Size  Location     Type
 45264 ;;		None
 45265 ;; Return value:  Size  Location     Type
 45266 ;;                  1  [STACK] void 
 45267 ;; Registers used:
 45268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 45269 ;; Tracked objects:
 45270 ;;		On entry : 3F/3
 45271 ;;		On exit  : 3F/1
 45272 ;;		Unchanged: 0/0
 45273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45278 ;;Total ram usage:        0 bytes
 45279 ;; Hardware stack levels used:    1
 45280 ;; Hardware stack levels required when called:    1
 45281 ;; This function calls:
 45282 ;;		_UART1_RxDataHandler
 45283 ;; This function is called by:
 45284 ;;		_UART1_Initialize
 45285 ;;		_UART1_Receive_ISR
 45286 ;; This function uses a reentrant model
 45287 ;;
 45288                           
 45289                           	psect	text273
 45290  00BD6A                     __ptext273:
 45291                           	callstack 0
 45292  00BD6A                     _UART1_DefaultErrorHandler:
 45293                           	callstack 13
 45294                           
 45295                           ;mcc_generated_files/uart1.c: 336:     UART1_RxDataHandler();
 45296                           
 45297                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 45298                           ;incstack = 0
 45299  00BD6A  ECF9  F05A         	call	_UART1_RxDataHandler	;wreg free
 45300                           
 45301                           ; BSR set to: 1
 45302                           ; _UART1_DefaultErrorHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 0, argsize = 0, vargsize = 0
 45303  00BD6E  0012               	return		;funcret
 45304  00BD70                     __end_of_UART1_DefaultErrorHandler:
 45305                           	callstack 0
 45306                           
 45307 ;; *************** function _UART1_RxDataHandler *****************
 45308 ;; Defined at:
 45309 ;;		line 322 in file "mcc_generated_files/uart1.c"
 45310 ;; Parameters:    Size  Location     Type
 45311 ;;		None
 45312 ;; Auto vars:     Size  Location     Type
 45313 ;;		None
 45314 ;; Return value:  Size  Location     Type
 45315 ;;                  1    wreg      void 
 45316 ;; Registers used:
 45317 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 45318 ;; Tracked objects:
 45319 ;;		On entry : 0/0
 45320 ;;		On exit  : 3F/1
 45321 ;;		Unchanged: 0/0
 45322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45327 ;;Total ram usage:        0 bytes
 45328 ;; Hardware stack levels used:    1
 45329 ;; This function calls:
 45330 ;;		Nothing
 45331 ;; This function is called by:
 45332 ;;		_UART1_Receive_ISR
 45333 ;;		_UART1_DefaultErrorHandler
 45334 ;; This function uses a non-reentrant model
 45335 ;;
 45336                           
 45337                           	psect	text274
 45338  00B5F2                     __ptext274:
 45339                           	callstack 0
 45340  00B5F2                     _UART1_RxDataHandler:
 45341                           	callstack 14
 45342                           
 45343                           ;mcc_generated_files/uart1.c: 324:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 45344                           
 45345                           ; BSR set to: 1
 45346                           ;incstack = 0
 45347  00B5F2  0E00               	movlw	low _uart1RxBuffer
 45348  00B5F4  0100               	movlb	0	; force () banked
 45349  00B5F6  25DB               	addwf	_uart1RxHead& (0+255),w,b	;volatile
 45350  00B5F8  6ED9               	movwf	fsr2l,c
 45351  00B5FA  6ADA               	clrf	fsr2h,c
 45352  00B5FC  0E05               	movlw	high _uart1RxBuffer
 45353  00B5FE  22DA               	addwfc	fsr2h,f,c
 45354  00B600  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 45355                           
 45356                           ; BSR set to: 0
 45357  00B606  0100               	movlb	0	; force () banked
 45358  00B608  2BDB               	incf	_uart1RxHead& (0+255),f,b	;volatile
 45359                           
 45360                           ; BSR set to: 0
 45361                           ;mcc_generated_files/uart1.c: 325:     if(sizeof(uart1RxBuffer) <= uart1RxHead){
 45362  00B60A  0E3F               	movlw	63
 45363  00B60C  0100               	movlb	0	; force () banked
 45364  00B60E  65DB               	cpfsgt	_uart1RxHead& (0+255),b
 45365  00B610  D003               	goto	i2l15554
 45366                           
 45367                           ; BSR set to: 0
 45368                           ;mcc_generated_files/uart1.c: 326:         uart1RxHead = 0;
 45369  00B612  0E00               	movlw	0
 45370  00B614  0100               	movlb	0	; force () banked
 45371  00B616  6FDB               	movwf	_uart1RxHead& (0+255),b	;volatile
 45372  00B618                     i2l15554:
 45373                           
 45374                           ; BSR set to: 0
 45375                           ;mcc_generated_files/uart1.c: 328:     uart1RxCount++;
 45376  00B618  0101               	movlb	1	; force () banked
 45377  00B61A  2BE1               	incf	_uart1RxCount& (0+255),f,b	;volatile
 45378                           
 45379                           ; BSR set to: 1
 45380  00B61C  0012               	return		;funcret
 45381  00B61E                     __end_of_UART1_RxDataHandler:
 45382                           	callstack 0
 45383                           
 45384 ;; *************** function _TMR3_ISR *****************
 45385 ;; Defined at:
 45386 ;;		line 167 in file "mcc_generated_files/tmr3.c"
 45387 ;; Parameters:    Size  Location     Type
 45388 ;;		None
 45389 ;; Auto vars:     Size  Location     Type
 45390 ;;		None
 45391 ;; Return value:  Size  Location     Type
 45392 ;;                  1    wreg      void 
 45393 ;; Registers used:
 45394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+
      +10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45395 ;; Tracked objects:
 45396 ;;		On entry : 0/0
 45397 ;;		On exit  : 0/0
 45398 ;;		Unchanged: 0/0
 45399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45402 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45403 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45404 ;;Total ram usage:       10 bytes
 45405 ;; Hardware stack levels used:    1
 45406 ;; Hardware stack levels required when called:    7
 45407 ;; This function calls:
 45408 ;;		_TMR3_CallBack
 45409 ;;		_TMR3_WriteTimer
 45410 ;; This function is called by:
 45411 ;;		Interrupt level 2
 45412 ;; This function uses a non-reentrant model
 45413 ;;
 45414                           
 45415                           	psect	text275
 45416  0095A4                     __ptext275:
 45417                           	callstack 0
 45418  0095A4                     _TMR3_ISR:
 45419                           	callstack 9
 45420                           
 45421                           ; BSR set to: 1
 45422                           ;incstack = 0
 45423  0095A4  006F FFD8  F066    	movff	tblptrl,??_TMR3_ISR
 45424  0095AA  006F FFDC  F067    	movff	tblptrh,??_TMR3_ISR+1
 45425  0095B0  006F FFE0  F068    	movff	tblptru,??_TMR3_ISR+2
 45426  0095B6  006F FFD4  F069    	movff	tablat,??_TMR3_ISR+3
 45427  0095BC  0060  F004  F06A   	movff	btemp,??_TMR3_ISR+4
 45428  0095C2  0060  F008  F06B   	movff	btemp+1,??_TMR3_ISR+5
 45429  0095C8  0060  F024  F06C   	movff	btemp+8,??_TMR3_ISR+6
 45430  0095CE  0060  F028  F06D   	movff	btemp+9,??_TMR3_ISR+7
 45431  0095D4  0060  F02C  F06E   	movff	btemp+10,??_TMR3_ISR+8
 45432  0095DA  0060  F030  F06F   	movff	btemp+11,??_TMR3_ISR+9
 45433  0095E0  EE12  F1AC         	lfsr	1,___inthi_sp
 45434                           
 45435                           ;mcc_generated_files/tmr3.c: 172:     PIR6bits.TMR3IF = 0;
 45436  0095E4  0139               	movlb	57	; force () banked
 45437  0095E6  9DA6               	bcf	166,6,b	;volatile
 45438                           
 45439                           ; BSR set to: 57
 45440                           ;mcc_generated_files/tmr3.c: 173:     TMR3_WriteTimer(timer3ReloadVal);
 45441  0095E8  0060  FBA3  FFE6   	movff	_timer3ReloadVal,postinc1
 45442  0095EE  0060  FBA7  FFE6   	movff	_timer3ReloadVal+1,postinc1
 45443  0095F4  ECAC  F057         	call	_TMR3_WriteTimer	;wreg free
 45444                           
 45445                           ;mcc_generated_files/tmr3.c: 177:     TMR3_CallBack();
 45446  0095F8  ECAA  F05C         	call	_TMR3_CallBack	;wreg free
 45447  0095FC  0060  F1BC  F00C   	movff	??_TMR3_ISR+9,btemp+11
 45448  009602  0060  F1B8  F00B   	movff	??_TMR3_ISR+8,btemp+10
 45449  009608  0060  F1B4  F00A   	movff	??_TMR3_ISR+7,btemp+9
 45450  00960E  0060  F1B0  F009   	movff	??_TMR3_ISR+6,btemp+8
 45451  009614  0060  F1AC  F002   	movff	??_TMR3_ISR+5,btemp+1
 45452  00961A  0060  F1A8  F001   	movff	??_TMR3_ISR+4,btemp
 45453  009620  0060  F1A7  FFF5   	movff	??_TMR3_ISR+3,tablat
 45454  009626  0060  F1A3  FFF8   	movff	??_TMR3_ISR+2,tblptru
 45455  00962C  0060  F19F  FFF7   	movff	??_TMR3_ISR+1,tblptrh
 45456  009632  0060  F19B  FFF6   	movff	??_TMR3_ISR,tblptrl
 45457  009638  0011               	retfie		f
 45458  00963A                     __end_of_TMR3_ISR:
 45459                           	callstack 0
 45460                           
 45461 ;; *************** function _TMR3_CallBack *****************
 45462 ;; Defined at:
 45463 ;;		line 180 in file "mcc_generated_files/tmr3.c"
 45464 ;; Parameters:    Size  Location     Type
 45465 ;;		None
 45466 ;; Auto vars:     Size  Location     Type
 45467 ;;		None
 45468 ;; Return value:  Size  Location     Type
 45469 ;;                  1    wreg      void 
 45470 ;; Registers used:
 45471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+
      +10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45472 ;; Tracked objects:
 45473 ;;		On entry : 0/39
 45474 ;;		On exit  : 0/0
 45475 ;;		Unchanged: 0/0
 45476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45481 ;;Total ram usage:        0 bytes
 45482 ;; Hardware stack levels used:    1
 45483 ;; Hardware stack levels required when called:    6
 45484 ;; This function calls:
 45485 ;;		Absolute function
 45486 ;;		_TMR3_DefaultInterruptHandler
 45487 ;;		_prvvTIMERExpiredISR
 45488 ;; This function is called by:
 45489 ;;		_TMR3_ISR
 45490 ;; This function uses a non-reentrant model
 45491 ;;
 45492                           
 45493                           	psect	text276
 45494  00B954                     __ptext276:
 45495                           	callstack 0
 45496  00B954                     _TMR3_CallBack:
 45497                           	callstack 9
 45498                           
 45499                           ;mcc_generated_files/tmr3.c: 183:     if(TMR3_InterruptHandler)
 45500                           
 45501                           ;incstack = 0
 45502  00B954  0102               	movlb	2	; force () banked
 45503  00B956  51E6               	movf	_TMR3_InterruptHandler& (0+255),w,b
 45504  00B958  11E7               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 45505  00B95A  B4D8               	btfsc	status,2,c
 45506  00B95C  0012               	return	
 45507                           
 45508                           ; BSR set to: 2
 45509                           ;mcc_generated_files/tmr3.c: 184:     {;mcc_generated_files/tmr3.c: 185:         TMR3_In
      +                          terruptHandler();
 45510  00B95E  D801               	call	i2u1457_48
 45511  00B960  0012               	return	
 45512  00B962                     i2u1457_48:
 45513  00B962  0005               	push	
 45514  00B964  6EFA               	movwf	pclath,c
 45515  00B966  0102               	movlb	2	; force () banked
 45516  00B968  51E6               	movf	_TMR3_InterruptHandler& (0+255),w,b
 45517  00B96A  6EFD               	movwf	tosl,c
 45518  00B96C  51E7               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 45519  00B96E  6EFE               	movwf	tosh,c
 45520  00B970  6AFF               	clrf	tosu,c
 45521  00B972  50FA               	movf	pclath,w,c
 45522  00B974  0012               	return		;indir
 45523  00B976                     __end_of_TMR3_CallBack:
 45524                           	callstack 0
 45525                           
 45526 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 45527 ;; Defined at:
 45528 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 45529 ;; Parameters:    Size  Location     Type
 45530 ;;		None
 45531 ;; Auto vars:     Size  Location     Type
 45532 ;;		None
 45533 ;; Return value:  Size  Location     Type
 45534 ;;                  1    wreg      void 
 45535 ;; Registers used:
 45536 ;;		None
 45537 ;; Tracked objects:
 45538 ;;		On entry : 3F/2
 45539 ;;		On exit  : 0/0
 45540 ;;		Unchanged: 0/0
 45541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45546 ;;Total ram usage:        0 bytes
 45547 ;; Hardware stack levels used:    1
 45548 ;; This function calls:
 45549 ;;		Nothing
 45550 ;; This function is called by:
 45551 ;;		_TMR3_Initialize
 45552 ;;		_TMR3_CallBack
 45553 ;; This function uses a non-reentrant model
 45554 ;;
 45555                           
 45556                           	psect	text277
 45557  00BD98                     __ptext277:
 45558                           	callstack 0
 45559  00BD98                     _TMR3_DefaultInterruptHandler:
 45560                           	callstack 14
 45561                           
 45562                           ;incstack = 0
 45563  00BD98  0012               	return		;funcret
 45564  00BD9A                     __end_of_TMR3_DefaultInterruptHandler:
 45565                           	callstack 0
 45566                           
 45567 ;; *************** function _prvvTIMERExpiredISR *****************
 45568 ;; Defined at:
 45569 ;;		line 80 in file "../modbus/port/porttimer.c"
 45570 ;; Parameters:    Size  Location     Type
 45571 ;;		None
 45572 ;; Auto vars:     Size  Location     Type
 45573 ;;		None
 45574 ;; Return value:  Size  Location     Type
 45575 ;;                  1    wreg      void 
 45576 ;; Registers used:
 45577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+
      +10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45578 ;; Tracked objects:
 45579 ;;		On entry : 3F/2
 45580 ;;		On exit  : 0/0
 45581 ;;		Unchanged: 0/0
 45582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45587 ;;Total ram usage:        0 bytes
 45588 ;; Hardware stack levels used:    1
 45589 ;; Hardware stack levels required when called:    5
 45590 ;; This function calls:
 45591 ;;		Absolute function
 45592 ;;		_TMR3_StopTimer
 45593 ;;		_xMBRTUTimerT35Expired
 45594 ;; This function is called by:
 45595 ;;		_bootLoadApplication
 45596 ;;		_xMBPortTimersInit
 45597 ;;		_TMR3_CallBack
 45598 ;; This function uses a non-reentrant model
 45599 ;;
 45600                           
 45601                           	psect	text278
 45602  00BA46                     __ptext278:
 45603                           	callstack 0
 45604  00BA46                     _prvvTIMERExpiredISR:
 45605                           	callstack 9
 45606                           
 45607                           ;../modbus/port/porttimer.c: 83:     TMR3_StopTimer();
 45608                           
 45609                           ;incstack = 0
 45610  00BA46  ECC4  F05E         	call	_TMR3_StopTimer	;wreg free
 45611                           
 45612                           ;../modbus/port/porttimer.c: 88:     ( void )pxMBPortCBTimerExpired( );
 45613  00BA4A  D801               	call	i2u1406_48
 45614  00BA4C  0012               	return	
 45615  00BA4E                     i2u1406_48:
 45616  00BA4E  0005               	push	
 45617  00BA50  6EFA               	movwf	pclath,c
 45618  00BA52  0102               	movlb	2	; force () banked
 45619  00BA54  5144               	movf	_pxMBPortCBTimerExpired& (0+255),w,b
 45620  00BA56  6EFD               	movwf	tosl,c
 45621  00BA58  5145               	movf	(_pxMBPortCBTimerExpired+1)& (0+255),w,b
 45622  00BA5A  6EFE               	movwf	tosh,c
 45623  00BA5C  6AFF               	clrf	tosu,c
 45624  00BA5E  50FA               	movf	pclath,w,c
 45625  00BA60  0012               	return		;indir
 45626  00BA62                     __end_of_prvvTIMERExpiredISR:
 45627                           	callstack 0
 45628                           
 45629 ;; *************** function _xMBRTUTimerT35Expired *****************
 45630 ;; Defined at:
 45631 ;;		line 324 in file "../modbus/rtu/mbrtu.c"
 45632 ;; Parameters:    Size  Location     Type
 45633 ;;		None
 45634 ;; Auto vars:     Size  Location     Type
 45635 ;;  xNeedPoll       1    5[BANK0 ] unsigned char 
 45636 ;; Return value:  Size  Location     Type
 45637 ;;                  1    wreg      unsigned char 
 45638 ;; Registers used:
 45639 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl, prodh
 45640 ;; Tracked objects:
 45641 ;;		On entry : 3F/2
 45642 ;;		On exit  : 3F/0
 45643 ;;		Unchanged: 0/0
 45644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45646 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45647 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45648 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45649 ;;Total ram usage:        3 bytes
 45650 ;; Hardware stack levels used:    1
 45651 ;; Hardware stack levels required when called:    4
 45652 ;; This function calls:
 45653 ;;		__fassert
 45654 ;;		_vMBPortTimersDisable
 45655 ;;		_xMBPortEventPost
 45656 ;; This function is called by:
 45657 ;;		_eMBInit
 45658 ;;		_prvvTIMERExpiredISR
 45659 ;; This function uses a non-reentrant model
 45660 ;;
 45661                           
 45662                           	psect	text279
 45663  0097F4                     __ptext279:
 45664                           	callstack 0
 45665  0097F4                     _xMBRTUTimerT35Expired:
 45666                           	callstack 9
 45667                           
 45668                           ;../modbus/rtu/mbrtu.c: 326:     BOOL xNeedPoll = 0;
 45669                           
 45670                           ;incstack = 0
 45671  0097F4  0E00               	movlw	0
 45672  0097F6  0100               	movlb	0	; force () banked
 45673  0097F8  6F65               	movwf	xMBRTUTimerT35Expired@xNeedPoll& (0+255),b
 45674                           
 45675                           ;../modbus/rtu/mbrtu.c: 328:     switch ( eRcvState )
 45676  0097FA  D02A               	goto	i2l15584
 45677  0097FC                     i2l15572:
 45678                           
 45679                           ; BSR set to: 0
 45680                           ;../modbus/rtu/mbrtu.c: 332:         xNeedPoll = xMBPortEventPost( EV_READY );
 45681  0097FC  0E00               	movlw	0
 45682  0097FE  6EE6               	movwf	postinc1,c
 45683  009800  ECCD  F05D         	call	_xMBPortEventPost	;wreg free
 45684  009804  D004               	goto	L49
 45685  009806                     i2l15574:
 45686                           
 45687                           ; BSR set to: 0
 45688                           ;../modbus/rtu/mbrtu.c: 338:         xNeedPoll = xMBPortEventPost( EV_FRAME_RECEIVED );
 45689  009806  0E01               	movlw	1
 45690  009808  6EE6               	movwf	postinc1,c
 45691  00980A  ECCD  F05D         	call	_xMBPortEventPost	;wreg free
 45692  00980E                     L49:
 45693  00980E  5001               	movf	btemp^0,w,c
 45694  009810  0100               	movlb	0	; force () banked
 45695  009812  6F65               	movwf	xMBRTUTimerT35Expired@xNeedPoll& (0+255),b
 45696                           
 45697                           ;../modbus/rtu/mbrtu.c: 339:         break;
 45698  009814  D030               	goto	i2l2613
 45699  009816                     i2l15576:
 45700                           
 45701                           ; BSR set to: 0
 45702                           ;../modbus/rtu/mbrtu.c: 347:         if(!(( eRcvState == STATE_RX_INIT ) || ( eRcvState 
      +                          == STATE_RX_RCV ) || ( eRcvState == STATE_RX_ERROR ))) {_fassert(348, "../modbus/rtu/mbr
      +                          tu.c", "( eRcvState == STATE_RX_INIT ) || ( eRcvState == STATE_RX_RCV ) || ( eRcvState =
      +                          = STATE_RX_ERROR )");};
 45703  009816  0100               	movlb	0	; force () banked
 45704  009818  51D9               	movf	_eRcvState& (0+255),w,b
 45705  00981A  B4D8               	btfsc	status,2,c
 45706  00981C  D02C               	goto	i2l2613
 45707                           
 45708                           ; BSR set to: 0
 45709  00981E  0E02               	movlw	2
 45710  009820  0100               	movlb	0	; force () banked
 45711  009822  19D9               	xorwf	_eRcvState& (0+255),w,b
 45712  009824  B4D8               	btfsc	status,2,c
 45713  009826  D027               	goto	i2l2613
 45714                           
 45715                           ; BSR set to: 0
 45716  009828  0E03               	movlw	3
 45717  00982A  0100               	movlb	0	; force () banked
 45718  00982C  19D9               	xorwf	_eRcvState& (0+255),w,b
 45719  00982E  B4D8               	btfsc	status,2,c
 45720  009830  D022               	goto	i2l2613
 45721                           
 45722                           ; BSR set to: 0
 45723  009832  0EB4               	movlw	low STR_16
 45724  009834  6EE6               	movwf	postinc1,c
 45725  009836  0EFE               	movlw	high STR_16
 45726  009838  6EE6               	movwf	postinc1,c
 45727  00983A  0EB3               	movlw	low STR_9
 45728  00983C  6EE6               	movwf	postinc1,c
 45729  00983E  0EFF               	movlw	high STR_9
 45730  009840  6EE6               	movwf	postinc1,c
 45731  009842  0E5C               	movlw	92
 45732  009844  6EE6               	movwf	postinc1,c
 45733  009846  0E01               	movlw	1
 45734  009848  6EE6               	movwf	postinc1,c
 45735  00984A  EC32  F051         	call	__fassert	;wreg free
 45736  00984E  D013               	goto	i2l2613
 45737  009850                     i2l15584:
 45738                           
 45739                           ; BSR set to: 0
 45740  009850  0100               	movlb	0	; force () banked
 45741  009852  51D9               	movf	_eRcvState& (0+255),w,b	;volatile
 45742  009854  0100               	movlb	0	; force () banked
 45743  009856  6F63               	movwf	??_xMBRTUTimerT35Expired& (0+255),b
 45744  009858  6B64               	clrf	(??_xMBRTUTimerT35Expired+1)& (0+255),b
 45745                           
 45746                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 45747                           ; Switch size 1, requested type "simple"
 45748                           ; Number of cases is 1, Range of values is 0 to 0
 45749                           ; switch strategies available:
 45750                           ; Name         Instructions Cycles
 45751                           ; simple_byte            4     3 (average)
 45752                           ;	Chosen strategy is simple_byte
 45753  00985A  5164               	movf	(??_xMBRTUTimerT35Expired+1)& (0+255),w,b
 45754  00985C  0A00               	xorlw	0	; case 0
 45755  00985E  A4D8               	btfss	status,2,c
 45756  009860  D7DA               	goto	i2l15576
 45757                           
 45758                           ; BSR set to: 0
 45759                           ; Switch size 1, requested type "simple"
 45760                           ; Number of cases is 3, Range of values is 0 to 3
 45761                           ; switch strategies available:
 45762                           ; Name         Instructions Cycles
 45763                           ; simple_byte           10     6 (average)
 45764                           ;	Chosen strategy is simple_byte
 45765  009862  5163               	movf	??_xMBRTUTimerT35Expired& (0+255),w,b
 45766  009864  0A00               	xorlw	0	; case 0
 45767  009866  B4D8               	btfsc	status,2,c
 45768  009868  D7C9               	goto	i2l15572
 45769  00986A  0A02               	xorlw	2	; case 2
 45770  00986C  B4D8               	btfsc	status,2,c
 45771  00986E  D7CB               	goto	i2l15574
 45772  009870  0A01               	xorlw	1	; case 3
 45773  009872  A4D8               	btfss	status,2,c
 45774  009874  D7D0               	goto	i2l15576
 45775  009876                     i2l2613:
 45776                           
 45777                           ;../modbus/rtu/mbrtu.c: 351:     vMBPortTimersDisable( );
 45778  009876  ECA6  F05E         	call	_vMBPortTimersDisable	;wreg free
 45779                           
 45780                           ;../modbus/rtu/mbrtu.c: 352:     eRcvState = STATE_RX_IDLE;
 45781  00987A  0E01               	movlw	1
 45782  00987C  0100               	movlb	0	; force () banked
 45783  00987E  6FD9               	movwf	_eRcvState& (0+255),b	;volatile
 45784                           
 45785                           ;../modbus/rtu/mbrtu.c: 354:     return xNeedPoll;
 45786  009880  0100               	movlb	0	; force () banked
 45787  009882  5165               	movf	xMBRTUTimerT35Expired@xNeedPoll& (0+255),w,b
 45788                           
 45789                           ; BSR set to: 0
 45790  009884  0012               	return		;funcret
 45791  009886                     __end_of_xMBRTUTimerT35Expired:
 45792                           	callstack 0
 45793                           
 45794                           ;
 45795                           ; Interrupt Vector Table @ 0x8
 45796                           ;
 45797                           
 45798                           	psect	ivt0x8
 45799  000008                     __pivt0x8:
 45800                           	callstack 0
 45801  000008                     ivt0x8_base:
 45802                           	callstack 0
 45803                           
 45804                           ; Vector 0 : SWINT
 45805  000008  2F59               	dw	_Default_ISR shr (0+2)
 45806                           
 45807                           ; Vector 1 : HLVD
 45808  00000A  2F59               	dw	_Default_ISR shr (0+2)
 45809                           
 45810                           ; Vector 2 : OSF
 45811  00000C  2F59               	dw	_Default_ISR shr (0+2)
 45812                           
 45813                           ; Vector 3 : CSW
 45814  00000E  2F59               	dw	_Default_ISR shr (0+2)
 45815                           
 45816                           ; Vector 4 : NVM
 45817  000010  2F59               	dw	_Default_ISR shr (0+2)
 45818                           
 45819                           ; Vector 5 : SCAN
 45820  000012  2F59               	dw	_Default_ISR shr (0+2)
 45821                           
 45822                           ; Vector 6 : CRC
 45823  000014  2F59               	dw	_Default_ISR shr (0+2)
 45824                           
 45825                           ; Vector 7 : IOC
 45826  000016  2F59               	dw	_Default_ISR shr (0+2)
 45827                           
 45828                           ; Vector 8 : INT0
 45829  000018  2F59               	dw	_Default_ISR shr (0+2)
 45830                           
 45831                           ; Vector 9 : ZCD
 45832  00001A  2F59               	dw	_Default_ISR shr (0+2)
 45833                           
 45834                           ; Vector 10 : AD
 45835  00001C  2F59               	dw	_Default_ISR shr (0+2)
 45836                           
 45837                           ; Vector 11 : ADT
 45838  00001E  2F59               	dw	_Default_ISR shr (0+2)
 45839                           
 45840                           ; Vector 12 : CMP1
 45841  000020  2F59               	dw	_Default_ISR shr (0+2)
 45842                           
 45843                           ; Vector 13 : SMT1
 45844  000022  2F59               	dw	_Default_ISR shr (0+2)
 45845                           
 45846                           ; Vector 14 : SMT1PRA
 45847  000024  2F59               	dw	_Default_ISR shr (0+2)
 45848                           
 45849                           ; Vector 15 : SMT1PRW
 45850  000026  2F59               	dw	_Default_ISR shr (0+2)
 45851                           
 45852                           ; Vector 16 : DMA1SCNT
 45853  000028  2F59               	dw	_Default_ISR shr (0+2)
 45854                           
 45855                           ; Vector 17 : DMA1DCNT
 45856  00002A  2F59               	dw	_Default_ISR shr (0+2)
 45857                           
 45858                           ; Vector 18 : DMA1OR
 45859  00002C  2F59               	dw	_Default_ISR shr (0+2)
 45860                           
 45861                           ; Vector 19 : DMA1A
 45862  00002E  2F59               	dw	_Default_ISR shr (0+2)
 45863                           
 45864                           ; Vector 20 : SPI1RX
 45865  000030  2F59               	dw	_Default_ISR shr (0+2)
 45866                           
 45867                           ; Vector 21 : SPI1TX
 45868  000032  2F59               	dw	_Default_ISR shr (0+2)
 45869                           
 45870                           ; Vector 22 : SPI1
 45871  000034  2F59               	dw	_Default_ISR shr (0+2)
 45872                           
 45873                           ; Vector 23 : I2C1RX
 45874  000036  2F59               	dw	_Default_ISR shr (0+2)
 45875                           
 45876                           ; Vector 24 : I2C1TX
 45877  000038  2F59               	dw	_Default_ISR shr (0+2)
 45878                           
 45879                           ; Vector 25 : I2C1
 45880  00003A  2F59               	dw	_Default_ISR shr (0+2)
 45881                           
 45882                           ; Vector 26 : I2C1E
 45883  00003C  2F59               	dw	_Default_ISR shr (0+2)
 45884                           
 45885                           ; Vector 27 : U1RX
 45886  00003E  2ABA               	dw	_UART1_rx_vect_isr shr (0+2)
 45887                           
 45888                           ; Vector 28 : U1TX
 45889  000040  2DE4               	dw	_UART1_tx_vect_isr shr (0+2)
 45890                           
 45891                           ; Vector 29 : U1E
 45892  000042  2F59               	dw	_Default_ISR shr (0+2)
 45893                           
 45894                           ; Vector 30 : U1
 45895  000044  2F59               	dw	_Default_ISR shr (0+2)
 45896                           
 45897                           ; Vector 31 : TMR0
 45898  000046  2DDA               	dw	_TMR0_ISR shr (0+2)
 45899                           
 45900                           ; Vector 32 : TMR1
 45901  000048  2F59               	dw	_Default_ISR shr (0+2)
 45902                           
 45903                           ; Vector 33 : TMR1G
 45904  00004A  2F59               	dw	_Default_ISR shr (0+2)
 45905                           
 45906                           ; Vector 34 : TMR2
 45907  00004C  2F59               	dw	_Default_ISR shr (0+2)
 45908                           
 45909                           ; Vector 35 : CCP1
 45910  00004E  2F59               	dw	_Default_ISR shr (0+2)
 45911                           
 45912                           ; Vector 36 : Undefined
 45913  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 45914                           
 45915                           ; Vector 37 : NCO1
 45916  000052  2F59               	dw	_Default_ISR shr (0+2)
 45917                           
 45918                           ; Vector 38 : CWG1
 45919  000054  2F59               	dw	_Default_ISR shr (0+2)
 45920                           
 45921                           ; Vector 39 : CLC1
 45922  000056  2F59               	dw	_Default_ISR shr (0+2)
 45923                           
 45924                           ; Vector 40 : INT1
 45925  000058  2F59               	dw	_Default_ISR shr (0+2)
 45926                           
 45927                           ; Vector 41 : CMP2
 45928  00005A  2F59               	dw	_Default_ISR shr (0+2)
 45929                           
 45930                           ; Vector 42 : DMA2SCNT
 45931  00005C  2F59               	dw	_Default_ISR shr (0+2)
 45932                           
 45933                           ; Vector 43 : DMA2DCNT
 45934  00005E  2F59               	dw	_Default_ISR shr (0+2)
 45935                           
 45936                           ; Vector 44 : DMA2OR
 45937  000060  2F59               	dw	_Default_ISR shr (0+2)
 45938                           
 45939                           ; Vector 45 : DMA2A
 45940  000062  2F59               	dw	_Default_ISR shr (0+2)
 45941                           
 45942                           ; Vector 46 : I2C2RX
 45943  000064  2F59               	dw	_Default_ISR shr (0+2)
 45944                           
 45945                           ; Vector 47 : I2C2TX
 45946  000066  2F59               	dw	_Default_ISR shr (0+2)
 45947                           
 45948                           ; Vector 48 : I2C2
 45949  000068  2F59               	dw	_Default_ISR shr (0+2)
 45950                           
 45951                           ; Vector 49 : I2C2E
 45952  00006A  2F59               	dw	_Default_ISR shr (0+2)
 45953                           
 45954                           ; Vector 50 : U2RX
 45955  00006C  2F59               	dw	_Default_ISR shr (0+2)
 45956                           
 45957                           ; Vector 51 : U2TX
 45958  00006E  2F59               	dw	_Default_ISR shr (0+2)
 45959                           
 45960                           ; Vector 52 : U2E
 45961  000070  2F59               	dw	_Default_ISR shr (0+2)
 45962                           
 45963                           ; Vector 53 : U2
 45964  000072  2F59               	dw	_Default_ISR shr (0+2)
 45965                           
 45966                           ; Vector 54 : TMR3
 45967  000074  2569               	dw	_TMR3_ISR shr (0+2)
 45968                           
 45969                           ; Vector 55 : TMR3G
 45970  000076  2F59               	dw	_Default_ISR shr (0+2)
 45971                           
 45972                           ; Vector 56 : TMR4
 45973  000078  2F59               	dw	_Default_ISR shr (0+2)
 45974                           
 45975                           ; Vector 57 : CCP2
 45976  00007A  2F59               	dw	_Default_ISR shr (0+2)
 45977                           
 45978                           ; Vector 58 : Undefined
 45979  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 45980                           
 45981                           ; Vector 59 : CWG2
 45982  00007E  2F59               	dw	_Default_ISR shr (0+2)
 45983                           
 45984                           ; Vector 60 : CLC2
 45985  000080  2F59               	dw	_Default_ISR shr (0+2)
 45986                           
 45987                           ; Vector 61 : INT2
 45988  000082  2F59               	dw	_Default_ISR shr (0+2)
 45989                           
 45990                           ; Vector 62 : Undefined
 45991  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 45992                           
 45993                           ; Vector 63 : Undefined
 45994  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 45995                           
 45996                           ; Vector 64 : Undefined
 45997  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 45998                           
 45999                           ; Vector 65 : Undefined
 46000  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 46001                           
 46002                           ; Vector 66 : Undefined
 46003  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 46004                           
 46005                           ; Vector 67 : Undefined
 46006  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 46007                           
 46008                           ; Vector 68 : Undefined
 46009  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 46010                           
 46011                           ; Vector 69 : Undefined
 46012  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 46013                           
 46014                           ; Vector 70 : TMR5
 46015  000094  2F59               	dw	_Default_ISR shr (0+2)
 46016                           
 46017                           ; Vector 71 : TMR5G
 46018  000096  2F59               	dw	_Default_ISR shr (0+2)
 46019                           
 46020                           ; Vector 72 : TMR6
 46021  000098  2F59               	dw	_Default_ISR shr (0+2)
 46022                           
 46023                           ; Vector 73 : CCP3
 46024  00009A  2F59               	dw	_Default_ISR shr (0+2)
 46025                           
 46026                           ; Vector 74 : CWG3
 46027  00009C  2F59               	dw	_Default_ISR shr (0+2)
 46028                           
 46029                           ; Vector 75 : CLC3
 46030  00009E  2F59               	dw	_Default_ISR shr (0+2)
 46031                           
 46032                           ; Vector 76 : Undefined
 46033  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 46034                           
 46035                           ; Vector 77 : Undefined
 46036  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 46037                           
 46038                           ; Vector 78 : Undefined
 46039  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 46040                           
 46041                           ; Vector 79 : Undefined
 46042  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 46043                           
 46044                           ; Vector 80 : CCP4
 46045  0000A8  2F59               	dw	_Default_ISR shr (0+2)
 46046                           
 46047                           ; Vector 81 : CLC4
 46048  0000AA  2F59               	dw	_Default_ISR shr (0+2)
 46049  0000AC                     ivt0x8_undefint:
 46050                           	callstack 0
 46051  0000AC  00FF               	reset	
 46052                           
 46053                           	psect	text280
 46054  000000                     __ptext280:
 46055                           	callstack 0
 46056                           
 46057                           	psect	param0
 46058  0000                     
 46059                           	psect	temp
 46060  000001                     btemp:
 46061                           	callstack 0
 46062  000001                     	ds	12
 46063  0000                     wtemp0	set	btemp
 46064  0000                     wtemp1	set	btemp+2
 46065  0000                     wtemp2	set	btemp+4
 46066  0000                     wtemp3	set	btemp+6
 46067  0000                     wtemp4	set	btemp+8
 46068  0000                     wtemp5	set	btemp+10
 46069  0000                     wtemp8	set	btemp+1
 46070  0000                     ttemp0	set	btemp
 46071  0000                     ttemp1	set	btemp+3
 46072  0000                     ttemp2	set	btemp+6
 46073  0000                     ttemp3	set	btemp+9
 46074  0000                     ttemp5	set	btemp+1
 46075  0000                     ttemp6	set	btemp+4
 46076  0000                     ttemp7	set	btemp+8
 46077  0000                     ltemp0	set	btemp
 46078  0000                     ltemp1	set	btemp+4
 46079  0000                     ltemp2	set	btemp+8
 46080  0000                     lltemp0	set	btemp
 46081                           
 46082                           	psect	idloc
 46083                           
 46084                           ;Config register IDLOC0 @ 0x200000
 46085                           ;	unspecified, using default values
 46086  200000                     	org	2097152
 46087  200000  0FFF               	dw	4095
 46088                           
 46089                           ;Config register IDLOC1 @ 0x200002
 46090                           ;	unspecified, using default values
 46091  200002                     	org	2097154
 46092  200002  0FFF               	dw	4095
 46093                           
 46094                           ;Config register IDLOC2 @ 0x200004
 46095                           ;	unspecified, using default values
 46096  200004                     	org	2097156
 46097  200004  0FFF               	dw	4095
 46098                           
 46099                           ;Config register IDLOC3 @ 0x200006
 46100                           ;	unspecified, using default values
 46101  200006                     	org	2097158
 46102  200006  0FFF               	dw	4095
 46103                           
 46104                           ;Config register IDLOC4 @ 0x200008
 46105                           ;	unspecified, using default values
 46106  200008                     	org	2097160
 46107  200008  0FFF               	dw	4095
 46108                           
 46109                           ;Config register IDLOC5 @ 0x20000A
 46110                           ;	unspecified, using default values
 46111  20000A                     	org	2097162
 46112  20000A  0FFF               	dw	4095
 46113                           
 46114                           ;Config register IDLOC6 @ 0x20000C
 46115                           ;	unspecified, using default values
 46116  20000C                     	org	2097164
 46117  20000C  0FFF               	dw	4095
 46118                           
 46119                           ;Config register IDLOC7 @ 0x20000E
 46120                           ;	unspecified, using default values
 46121  20000E                     	org	2097166
 46122  20000E  0FFF               	dw	4095
 46123                           
 46124                           	psect	config
 46125                           
 46126                           ;Config register CONFIG1L @ 0x300000
 46127                           ;	External Oscillator Selection
 46128                           ;	FEXTOSC = OFF, Oscillator not enabled
 46129                           ;	Reset Oscillator Selection
 46130                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 46131  300000                     	org	3145728
 46132  300000  8C                 	db	140
 46133                           
 46134                           ;Config register CONFIG1H @ 0x300001
 46135                           ;	Clock out Enable bit
 46136                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 46137                           ;	PRLOCKED One-Way Set Enable bit
 46138                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 46139                           ;	Clock Switch Enable bit
 46140                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 46141                           ;	Fail-Safe Clock Monitor Enable bit
 46142                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 46143  300001                     	org	3145729
 46144  300001  FF                 	db	255
 46145                           
 46146                           ;Config register CONFIG2L @ 0x300002
 46147                           ;	MCLR Enable bit
 46148                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 46149                           ;	Power-up timer selection bits
 46150                           ;	PWRTS = PWRT_64, PWRT set at 64ms
 46151                           ;	Multi-vector enable bit
 46152                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 46153                           ;	IVTLOCK bit One-way set enable bit
 46154                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 46155                           ;	Low Power BOR Enable bit
 46156                           ;	LPBOREN = OFF, ULPBOR disabled
 46157                           ;	Brown-out Reset Enable bits
 46158                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 46159  300002                     	org	3145730
 46160  300002  FD                 	db	253
 46161                           
 46162                           ;Config register CONFIG2H @ 0x300003
 46163                           ;	Brown-out Reset Voltage Selection bits
 46164                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 46165                           ;	ZCD Disable bit
 46166                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 46167                           ;	PPSLOCK bit One-Way Set Enable bit
 46168                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 46169                           ;	Stack Full/Underflow Reset Enable bit
 46170                           ;	STVREN = ON, Stack full/underflow will cause Reset
 46171                           ;	Debugger Enable bit
 46172                           ;	DEBUG = OFF, Background debugger disabled
 46173                           ;	Extended Instruction Set Enable bit
 46174                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 46175  300003                     	org	3145731
 46176  300003  FF                 	db	255
 46177                           
 46178                           ;Config register CONFIG3L @ 0x300004
 46179                           ;	WDT Period selection bits
 46180                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 46181                           ;	WDT operating mode
 46182                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 46183  300004                     	org	3145732
 46184  300004  9F                 	db	159
 46185                           
 46186                           ;Config register CONFIG3H @ 0x300005
 46187                           ;	WDT Window Select bits
 46188                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 46189                           ;	WDT input clock selector
 46190                           ;	WDTCCS = SC, Software Control
 46191  300005                     	org	3145733
 46192  300005  FF                 	db	255
 46193                           
 46194                           ;Config register CONFIG4L @ 0x300006
 46195                           ;	Boot Block Size selection bits
 46196                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 46197                           ;	Boot Block enable bit
 46198                           ;	BBEN = OFF, Boot block disabled
 46199                           ;	Storage Area Flash enable bit
 46200                           ;	SAFEN = OFF, SAF disabled
 46201                           ;	Application Block write protection bit
 46202                           ;	WRTAPP = OFF, Application Block not write protected
 46203  300006                     	org	3145734
 46204  300006  FF                 	db	255
 46205                           
 46206                           ;Config register CONFIG4H @ 0x300007
 46207                           ;	Configuration Register Write Protection bit
 46208                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
 46209                           ;	Boot Block Write Protection bit
 46210                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
 46211                           ;	Data EEPROM Write Protection bit
 46212                           ;	WRTD = OFF, Data EEPROM not write-protected
 46213                           ;	SAF Write protection bit
 46214                           ;	WRTSAF = OFF, SAF not Write Protected
 46215                           ;	Low Voltage Programming Enable bit
 46216                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 46217  300007                     	org	3145735
 46218  300007  FF                 	db	255
 46219                           
 46220                           ;Config register CONFIG5L @ 0x300008
 46221                           ;	PFM and Data EEPROM Code Protection bit
 46222                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 46223  300008                     	org	3145736
 46224  300008  FF                 	db	255
 46225                           
 46226                           ;Config register CONFIG5H @ 0x300009
 46227                           ;	unspecified, using default values
 46228  300009                     	org	3145737
 46229  300009  FF                 	db	255
 46230                           tosu	equ	0x3FFF
 46231                           tosh	equ	0x3FFE
 46232                           tosl	equ	0x3FFD
 46233                           stkptr	equ	0x3FFC
 46234                           pclatu	equ	0x3FFB
 46235                           pclath	equ	0x3FFA
 46236                           pcl	equ	0x3FF9
 46237                           tblptru	equ	0x3FF8
 46238                           tblptrh	equ	0x3FF7
 46239                           tblptrl	equ	0x3FF6
 46240                           tablat	equ	0x3FF5
 46241                           prodh	equ	0x3FF4
 46242                           prodl	equ	0x3FF3
 46243                           indf0	equ	0x3FEF
 46244                           postinc0	equ	0x3FEE
 46245                           postdec0	equ	0x3FED
 46246                           preinc0	equ	0x3FEC
 46247                           plusw0	equ	0x3FEB
 46248                           fsr0h	equ	0x3FEA
 46249                           fsr0l	equ	0x3FE9
 46250                           wreg	equ	0x3FE8
 46251                           indf1	equ	0x3FE7
 46252                           postinc1	equ	0x3FE6
 46253                           postdec1	equ	0x3FE5
 46254                           preinc1	equ	0x3FE4
 46255                           plusw1	equ	0x3FE3
 46256                           fsr1h	equ	0x3FE2
 46257                           fsr1l	equ	0x3FE1
 46258                           bsr	equ	0x3FE0
 46259                           indf2	equ	0x3FDF
 46260                           postinc2	equ	0x3FDE
 46261                           postdec2	equ	0x3FDD
 46262                           preinc2	equ	0x3FDC
 46263                           plusw2	equ	0x3FDB
 46264                           fsr2h	equ	0x3FDA
 46265                           fsr2l	equ	0x3FD9
 46266                           status	equ	0x3FD8

Data Sizes:
    Strings     330
    Constant    1119
    Data        46
    BSS         3298
    Persistent  19
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83      0       0
    BANK0           160    113     140
    BANK1           256    215     256
    BANK2           256      0     255
    BANK3           256     20     253
    BANK4           256      0     244
    BANK5           256      0     248
    BANK6           256      0     256
    BANK7           256      0     224
    BANK8           256      0     224
    BANK9           256      0     128
    BANK10          256      0     160
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    nwkRxDuplicateRejectionTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    nwkTxDelayTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    nwkFrameFrames...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    tx_buffer.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    tx_buffer.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    tx_buffer.frame.payload	PTR unsigned char  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[690]), 

    tx_buffer.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    tx_buffer.next.data	PTR unsigned char  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[264]), 

    tx_buffer.next.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    tx_buffer.next.next	PTR void  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    tx_buffer.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    tx_buffer.data	PTR unsigned char  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[264]), 

    tx_buffer.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    tx_buffer.next	PTR void  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    handler$0	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK3[12]), 

    peMBFrameSendCur$1	PTR const unsigned char  size(2) Largest target is 256
		 -> ucRTUBuf(BANK6[256]), NULL(NULL[0]), 

    S9025$1$1	PTR unsigned int  size(2) Largest target is 2
		 -> eMBPoll@usLength(BANK1[2]), 

    S9025$1$0	PTR unsigned char  size(2) Largest target is 256
		 -> ucRTUBuf(BANK6[256]), NULL(NULL[0]), 

    peMBFrameReceiveCur$2	PTR unsigned int  size(2) Largest target is 2
		 -> eMBPoll@usLength(BANK1[2]), 

    peMBFrameReceiveCur$1	PTR PTR unsigned char  size(2) Largest target is 2
		 -> eMBPoll@ucMBFrame(BANK1[2]), 

    peMBFrameReceiveCur$0	PTR unsigned char  size(2) Largest target is 1
		 -> eMBPoll@ucRcvAddress(BANK1[1]), 

    S6430$4$0	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    S4974$3$0	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    S4770$4$0	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK3[12]), 

    ?_nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    ?_nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    ?_nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    S241$11$0	PTR struct NWK_DataReq_t size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    cmdSetSink@cmd	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pxMBFrameCBTransmitFSMCur	 PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    pxMBFrameCBReceiveFSMCur	 PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> exract_sink_addr@p2(BANK0[2]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 5
		 -> exract_sink_addr@addrstr(BANK0[5]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[2]), STR_2(CODE[5]), STR_1(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[2]), STR_2(CODE[5]), STR_1(CODE[5]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(3) Largest target is 16
		 -> STR_4(CODE[2]), cmdSetSink@msgstr(BANK0[16]), STR_2(CODE[5]), STR_1(CODE[5]), 

    strlen@cp	PTR const unsigned char  size(3) Largest target is 16
		 -> STR_4(CODE[2]), cmdSetSink@msgstr(BANK0[16]), STR_2(CODE[5]), STR_1(CODE[5]), 

    memset@p1	PTR void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), exract_sink_addr@addrstr(BANK0[5]), tx_buffer.payload(BIGRAM[110]), cmdSetSink@msgstr(BANK0[16]), 
		 -> tx_buffer(BIGRAM[264]), rx_buffer.payload(BIGRAM[110]), rx_buffer(BIGRAM[369]), 

    memset@p	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), exract_sink_addr@addrstr(BANK0[5]), tx_buffer.payload(BIGRAM[110]), cmdSetSink@msgstr(BANK0[16]), 
		 -> tx_buffer(BIGRAM[264]), rx_buffer.payload(BIGRAM[110]), rx_buffer(BIGRAM[369]), 

    memcpy@d1	PTR void  size(2) Largest target is 695
		 -> phyTxBuffer(BANK9[128]), nwkFrameFrames..(BIGRAM[128]), nwkFrameFrames(BIGRAM[690]), handle_led_events@temp(BANK0[3]), 
		 -> ledqueue(BANK7[96]), exract_sink_addr@addrstr(BANK0[5]), fill_rx_regs@buf_id(BANK0[1]), handle_rw_regs@msg_ack_obj(BANK0[4]), 
		 -> msg_ack_queue(BANK4[32]), rx_buffer_queue(BANK2[3]), write_only_mb_regs(BANK3[36]), tx_buffer.payload(BIGRAM[110]), 
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), rx_buffer.payload(BIGRAM[110]), rx_buffer(BIGRAM[369]), 
		 -> app_aes_decrypt@ctx(BANK1[192]), app_aes_decrypt@iv(BANK1[16]), app_aes_encrypt@ctx(BANK1[192]), app_aes_encrypt@iv(BANK1[16]), 
		 -> AES_CBC_decrypt_buffer@storeNextIv(BANK0[16]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 695
		 -> phyTxBuffer(BANK9[128]), nwkFrameFrames..(BIGRAM[128]), nwkFrameFrames(BIGRAM[690]), handle_led_events@temp(BANK0[3]), 
		 -> ledqueue(BANK7[96]), exract_sink_addr@addrstr(BANK0[5]), fill_rx_regs@buf_id(BANK0[1]), handle_rw_regs@msg_ack_obj(BANK0[4]), 
		 -> msg_ack_queue(BANK4[32]), rx_buffer_queue(BANK2[3]), write_only_mb_regs(BANK3[36]), tx_buffer.payload(BIGRAM[110]), 
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), rx_buffer.payload(BIGRAM[110]), rx_buffer(BIGRAM[369]), 
		 -> app_aes_decrypt@ctx(BANK1[192]), app_aes_decrypt@iv(BANK1[16]), app_aes_encrypt@ctx(BANK1[192]), app_aes_encrypt@iv(BANK1[16]), 
		 -> AES_CBC_decrypt_buffer@storeNextIv(BANK0[16]), 

    memcpy@s1	PTR const void  size(3) Largest target is 695
		 -> ctx.Iv(BANK1[16]), phyRxBuffer(BANK7[128]), nwkFrameFrames..(BIGRAM[128]), nwkFrameFrames(BIGRAM[690]), 
		 -> queueLedEvent@temp(BANK0[3]), ledqueue(BANK7[96]), STR_3(CODE[5]), msg_ack_queue(BANK4[32]), 
		 -> rx_buffer_queue(BANK2[3]), net_key(BANK3[16]), tx_buffer.payload(BIGRAM[110]), cmdSetSink@msgstr(BANK0[16]), 
		 -> free_tx_buffer@msg_ack_obj(BANK0[4]), tx_buffer(BIGRAM[264]), NULL(NULL[0]), appDataInd@buf_id(BANK0[1]), 
		 -> app_aes_decrypt@iv(BANK1[16]), app_aes_decrypt@random(BANK1[2]), aes_key(BANK3[16]), app_aes_encrypt@ctx(BANK1[192]), 
		 -> app_aes_encrypt@iv(BANK1[16]), app_aes_encrypt@random(BANK1[2]), AES_CBC_decrypt_buffer@storeNextIv(BANK0[16]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 695
		 -> ctx.Iv(BANK1[16]), phyRxBuffer(BANK7[128]), nwkFrameFrames..(BIGRAM[128]), nwkFrameFrames(BIGRAM[690]), 
		 -> queueLedEvent@temp(BANK0[3]), ledqueue(BANK7[96]), STR_3(CODE[5]), msg_ack_queue(BANK4[32]), 
		 -> rx_buffer_queue(BANK2[3]), net_key(BANK3[16]), tx_buffer.payload(BIGRAM[110]), cmdSetSink@msgstr(BANK0[16]), 
		 -> free_tx_buffer@msg_ack_obj(BANK0[4]), tx_buffer(BIGRAM[264]), NULL(NULL[0]), appDataInd@buf_id(BANK0[1]), 
		 -> app_aes_decrypt@iv(BANK1[16]), app_aes_decrypt@random(BANK1[2]), aes_key(BANK3[16]), app_aes_encrypt@ctx(BANK1[192]), 
		 -> app_aes_encrypt@iv(BANK1[16]), app_aes_encrypt@random(BANK1[2]), AES_CBC_decrypt_buffer@storeNextIv(BANK0[16]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_17(CODE[36]), 

    printf@cp	PTR const unsigned char  size(3) Largest target is 99
		 -> STR_18(CODE[7]), ?_printf(BANK0[2]), STR_16(CODE[99]), STR_15(CODE[22]), 
		 -> STR_14(CODE[27]), STR_13(CODE[22]), STR_12(CODE[27]), STR_11(CODE[22]), 
		 -> STR_10(CODE[21]), STR_9(CODE[22]), STR_8(CODE[36]), STR_7(CODE[30]), 
		 -> STR_6(CODE[13]), STR_5(CODE[30]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    _fassert@exp	PTR const unsigned char  size(2) Largest target is 99
		 -> STR_16(CODE[99]), STR_14(CODE[27]), STR_12(CODE[27]), STR_10(CODE[21]), 
		 -> STR_8(CODE[36]), STR_6(CODE[13]), 

    _fassert@file	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_15(CODE[22]), STR_13(CODE[22]), STR_11(CODE[22]), STR_9(CODE[22]), 
		 -> STR_7(CODE[30]), STR_5(CODE[30]), 

    eMBPoll@ucMBFrame	 PTR unsigned char  size(2) Largest target is 256
		 -> ucRTUBuf(BANK6[256]), NULL(NULL[0]), 

    pvMBFrameCloseCur	 PTR FTN()void  size(2) Largest target is 1
		 -> vMBPortClose(), Absolute function(), 

    peMBFrameReceiveCur	 PTR FTN(PTR unsigned char ,PTR PTR unsigned char ,PTR unsigned int ,)enum E15837 size(2) Largest target is 1
		 -> eMBRTUReceive(), Absolute function(), 

    peMBFrameSendCur	 PTR FTN(unsigned char ,PTR const unsigned char ,unsigned int ,)enum E15837 size(2) Largest target is 1
		 -> eMBRTUSend(), Absolute function(), 

    pvMBFrameStopCur	 PTR FTN()void  size(2) Largest target is 1
		 -> eMBRTUStop(), Absolute function(), 

    pvMBFrameStartCur	 PTR FTN()void  size(2) Largest target is 1
		 -> eMBRTUStart(), Absolute function(), 

    S9025$pxHandler	PTR FTN(PTR unsigned char ,PTR unsigned int ,)enum E15805 size(2) Largest target is 1
		 -> eMBFuncReadWriteMultipleHoldingRegister(), eMBFuncReadHoldingRegister(), eMBFuncWriteMultipleHoldingRegister(), eMBFuncWriteHoldingRegister(), 
		 -> Absolute function(), 

    xFuncHandlers.pxHandler	PTR FTN(PTR unsigned char ,PTR unsigned int ,)enum E15805 size(2) Largest target is 1
		 -> eMBFuncReadWriteMultipleHoldingRegister(), eMBFuncReadHoldingRegister(), eMBFuncWriteMultipleHoldingRegister(), eMBFuncWriteHoldingRegister(), 
		 -> Absolute function(), 

    get_loop_time@max	PTR unsigned int  size(2) Largest target is 2
		 -> load_on_demand_mb_regs@max(BANK0[2]), 

    get_loop_time@min	PTR unsigned int  size(2) Largest target is 2
		 -> load_on_demand_mb_regs@min(BANK0[2]), 

    placeTimer@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    placeTimer@timer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    placeTimer@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    placeTimer@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    placeTimer@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    placeTimer@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    placeTimer@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    placeTimer@prev	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerTaskHandler@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    SYS_TimerStarted@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStarted@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    SYS_TimerStop@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    timers.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    timers.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    SYS_TimerStart@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    timers	 PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK7[128]), 

    SX1276WriteBuffer@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> SX1276Write@data(BANK0[1]), 

    SX1276ReadBuffer@buffer	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK7[128]), SX1276Read@data(BANK0[1]), 

    PHY_Get_Packet_Rssi_Threshold_Limits@min	PTR char  size(2) Largest target is 1
		 -> bootLoadApplication@rssimin(BANK0[1]), 

    PHY_Get_Packet_Rssi_Threshold_Limits@max	PTR char  size(2) Largest target is 1
		 -> bootLoadApplication@rssimax(BANK0[1]), 

    PHY_DataReq@data	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames..(BIGRAM[128]), nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkTxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxPhyActiveFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxTaskHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkTxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxPhyActiveFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxPhyActiveFrame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkTxDelayTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxDelayTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxDelayTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxDelayTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkTxDelayTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkTxConfirm@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxConfirm@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxConfirm@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkTxConfirm@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxAckWaitTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxAckWaitTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxAckWaitTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkTxAckWaitTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkTxAckReceived@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxAckReceived@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxAckReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxAckReceived@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkTxAckReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkTxAckReceived@ind.data	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkTxAckReceived@ind	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK3[12]), 

    nwkTxAckReceived@command	PTR struct NwkCommandAck_t size(2) Largest target is 695
		 -> nwkFrameFrames..(BIGRAM[128]), nwkFrameFrames(BIGRAM[690]), 

    nwkTxBroadcastFrame@newFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxBroadcastFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxBroadcastFrame@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkTxBroadcastFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxBroadcastFrame@newFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxBroadcastFrame@newFrame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkTxBroadcastFrame@newFrame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkTxFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkTxFrame@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkTxFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkTxFrame@header	PTR struct NwkFrameHeader_t size(2) Largest target is 695
		 -> nwkFrameFrames..(BIGRAM[128]), nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame	 PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkTxDelayTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    nwkRxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkRxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkRxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkRxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkRxHandleIndication@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkRxHandleIndication@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkRxHandleIndication@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames..(BIGRAM[128]), nwkFrameFrames(BIGRAM[690]), 

    nwkRxIndicateFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkRxIndicateFrame@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkRxIndicateFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkRxIndicateFrame@header	PTR struct NwkFrameHeader_t size(2) Largest target is 695
		 -> nwkFrameFrames..(BIGRAM[128]), nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@mcHeader	PTR struct NwkFrameMulticastHeader_t size(2) Largest target is 695
		 -> nwkFrameFrames..(BIGRAM[128]), nwkFrameFrames(BIGRAM[690]), 

    nwkRxHandleReceivedFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkRxHandleReceivedFrame@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkRxHandleReceivedFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@header	PTR struct NwkFrameHeader_t size(2) Largest target is 695
		 -> nwkFrameFrames..(BIGRAM[128]), nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkRxServiceDataInd@ind.data	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkRxServiceDataInd@ind	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK3[12]), 

    nwkRxRejectDuplicate@header	PTR struct NwkFrameHeader_t size(2) Largest target is 695
		 -> nwkFrameFrames..(BIGRAM[128]), nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkRxRejectDuplicate@entry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 160
		 -> nwkRxDuplicateRejectionTable(BANK10[160]), 

    nwkRxRejectDuplicate@freeEntry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 160
		 -> nwkRxDuplicateRejectionTable(BANK10[160]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    nwkRxSendAck@command	PTR struct NwkCommandAck_t size(2) Largest target is 695
		 -> nwkFrameFrames..(BIGRAM[128]), nwkFrameFrames(BIGRAM[690]), 

    nwkRxSendAck@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkRxSendAck@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkRxSendAck@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkRxSendAck@ack...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkRxSendAck@ack.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkRxSendAck@ack...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkRxSendAck@ack.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkRxSendAck@ack	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    PHY_DataInd@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    PHY_DataInd@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    PHY_DataInd@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    PHY_DataInd@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    S6462PHY_DataInd_t$data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK7[128]), 

    PHY_DataInd@ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK7[128]), 

    PHY_DataInd@ind	PTR struct PHY_DataInd_t size(2) Largest target is 6
		 -> DIO0_Receive_ISR@ind(BANK0[5]), 

    S6430SYS_Timer_t$handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    S6430SYS_Timer_t$next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK3[13]), nwkTxAckWaitTimer(BANK2[13]), nwkRxDuplicateRejectionTimer(BANK2[13]), NULL(NULL[0]), 

    nwkRouteErrorReceived@ind.data	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkRouteErrorReceived@ind	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK3[12]), 

    nwkRouteErrorReceived@command	PTR struct NwkCommandRouteError_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkRouteSendRouteError@command	PTR struct NwkCommandRouteError_t size(2) Largest target is 695
		 -> nwkFrameFrames..(BIGRAM[128]), nwkFrameFrames(BIGRAM[690]), 

    nwkRouteSendRouteError@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkRouteSendRouteError@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkRouteSendRouteError@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkRouteSendRouteError@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkRouteSendRouteError@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkRouteFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkRouteFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkRouteFrame@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkRouteFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkRouteFrame@header	PTR struct NwkFrameHeader_t size(2) Largest target is 695
		 -> nwkFrameFrames..(BIGRAM[128]), nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkRoutePrepareTx@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkRoutePrepareTx@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkRoutePrepareTx@header	PTR struct NwkFrameHeader_t size(2) Largest target is 695
		 -> nwkFrameFrames..(BIGRAM[128]), nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkRouteFrameSent@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 224
		 -> nwkRouteTable(BANK8[224]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkRouteFrameSent@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkRouteFrameSent@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkRouteFrameReceived@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 224
		 -> nwkRouteTable(BANK8[224]), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkRouteFrameReceived@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkRouteFrameReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkRouteFrameReceived@header	PTR struct NwkFrameHeader_t size(2) Largest target is 695
		 -> nwkFrameFrames..(BIGRAM[128]), nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkRouteRemove@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 224
		 -> nwkRouteTable(BANK8[224]), NULL(NULL[0]), 

    sp__NWK_RouteTable	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 224
		 -> nwkRouteTable(BANK8[224]), 

    NWK_RouteNextHop@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 224
		 -> nwkRouteTable(BANK8[224]), NULL(NULL[0]), 

    NWK_RouteFreeEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 224
		 -> nwkRouteTable(BANK8[224]), NULL(NULL[0]), 

    sp__NWK_RouteNewEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 224
		 -> nwkRouteTable(BANK8[224]), NULL(NULL[0]), 

    NWK_RouteNewEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 224
		 -> nwkRouteTable(BANK8[224]), NULL(NULL[0]), 

    NWK_RouteNewEntry@iter	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 224
		 -> nwkRouteTable(BANK8[224]), 

    sp__NWK_RouteFindEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 224
		 -> nwkRouteTable(BANK8[224]), NULL(NULL[0]), 

    sp__NWK_GroupTable	PTR unsigned int  size(2) Largest target is 20
		 -> nwkGroups(BANK3[20]), 

    nwkFramePayloadSize@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkFramePayloadSize@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkFramePayloadSize@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkFrameCommandInit@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkFrameCommandInit@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkFrameCommandInit@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkFrameCommandInit@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    sp__nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    sp__nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    sp__nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    sp__nwkFrameNext	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkFrameNext@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkFrameNext@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkFrameNext@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkFrameFree@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkFrameFree@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkFrameFree@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkFrameFrames...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkFrameFrames.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames..(BIGRAM[128]), nwkFrameFrames(BIGRAM[690]), 

    nwkDataReqTaskHandler@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTaskHandler@req.data	PTR unsigned char  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), 

    nwkDataReqTaskHandler@req.frame	PTR void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req.next	PTR void  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req	PTR struct NWK_DataReq_t size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    nwkDataReqConfirm@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@req.data	PTR unsigned char  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), 

    nwkDataReqConfirm@req.frame	PTR void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkDataReqConfirm@req.next	PTR void  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.next.data	PTR unsigned char  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), 

    nwkDataReqConfirm@prev.next.frame	PTR void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next.next	PTR void  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.data	PTR unsigned char  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), 

    nwkDataReqConfirm@prev.frame	PTR void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next	PTR void  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev	PTR struct NWK_DataReq_t size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    nwkDataReqConfirm@req	PTR struct NWK_DataReq_t size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    nwkDataReqTxConf@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkDataReqTxConf@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkDataReqTxConf@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkDataReqTxConf@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTxConf@req.data	PTR unsigned char  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), 

    nwkDataReqTxConf@req.frame	PTR void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.next	PTR void  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    nwkDataReqTxConf@req	PTR struct NWK_DataReq_t size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    nwkDataReqSendFrame@mcHeader	PTR struct NwkFrameMulticastHeader_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkDataReqSendFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkDataReqSendFrame@req.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkDataReqSendFrame@req.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkDataReqSendFrame@req.frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkDataReqSendFrame@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqSendFrame@req.data	PTR unsigned char  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), 

    nwkDataReqSendFrame@req.frame	PTR void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.next	PTR void  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req	PTR struct NWK_DataReq_t size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    S4974$confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    nwkDataReqSendFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), nwkDataReqTxConf(), Absolute function(), 

    S4973NwkFrame_t$payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    nwkDataReqSendFrame@frame.payload	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    sp__nwkFrameAlloc	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    NWK_DataReq@req.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.next.data	PTR unsigned char  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), 

    NWK_DataReq@req.next.frame	PTR void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    NWK_DataReq@req.next.next	PTR void  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    nwkDataReqQueue.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqQueue.data	PTR unsigned char  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), 

    nwkDataReqQueue.frame	PTR void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    nwkDataReqQueue.next	PTR void  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    NWK_DataReq@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.data	PTR unsigned char  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), 

    NWK_DataReq@req.frame	PTR void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    NWK_DataReq@req.next	PTR void  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    NWK_DataReq@req	PTR struct NWK_DataReq_t size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), 

    nwkDataReqQueue	 PTR struct NWK_DataReq_t size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    NWK_OpenEndpoint@handler	PTR FTN(PTR struct NWK_DataInd_t,)_Bool  size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), appManagementEp(), appDataInd(), 

    S4770NwkIb_t$endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), Absolute function(), appManagementEp(), appDataInd(), 

    nwkIb.endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), Absolute function(), appManagementEp(), appDataInd(), 

    eMBRTUSend@pucFrame	PTR const unsigned char  size(2) Largest target is 256
		 -> ucRTUBuf(BANK6[256]), NULL(NULL[0]), 

    pucSndBufferCur	 PTR volatile unsigned char  size(2) Largest target is 256
		 -> ucRTUBuf(BANK6[256]), NULL(NULL[0]), 

    eMBRTUReceive@pucFrame	PTR PTR unsigned char  size(2) Largest target is 2
		 -> eMBPoll@ucMBFrame(BANK1[2]), 

    eMBRTUReceive@pusLength	PTR unsigned int  size(2) Largest target is 2
		 -> eMBPoll@usLength(BANK1[2]), 

    eMBRTUReceive@pucRcvAddress	PTR unsigned char  size(2) Largest target is 1
		 -> eMBPoll@ucRcvAddress(BANK1[1]), 

    usMBCRC16@pucFrame	PTR unsigned char  size(2) Largest target is 256
		 -> ucRTUBuf(BANK6[256]), NULL(NULL[0]), 

    pxMBPortCBTimerExpired	 PTR FTN()unsigned char  size(2) Largest target is 1
		 -> xMBRTUTimerT35Expired(), Absolute function(), 

    pxMBFrameCBByteReceived	 PTR FTN()unsigned char  size(2) Largest target is 1
		 -> xMBRTUReceiveFSM(), Absolute function(), 

    pxMBFrameCBTransmitterEmpty	 PTR FTN()unsigned char  size(2) Largest target is 1
		 -> xMBRTUTransmitFSM(), Absolute function(), 

    xMBPortSerialGetByte@pucByte	PTR unsigned char  size(2) Largest target is 1
		 -> xMBRTUReceiveFSM@ucByte(BANK0[1]), 

    xMBPortEventGet@eEvent	PTR enum E15531 size(2) Largest target is 1
		 -> eMBPoll@eEvent(BANK0[1]), 

    eMBFuncReadWriteMultipleHoldingRegister@pucFrameCur	PTR unsigned char  size(2) Largest target is 256
		 -> ucRTUBuf(BANK6[256]), NULL(NULL[0]), 

    eMBFuncReadWriteMultipleHoldingRegister@pucFrame	PTR unsigned char  size(2) Largest target is 256
		 -> ucRTUBuf(BANK6[256]), NULL(NULL[0]), 

    eMBFuncReadWriteMultipleHoldingRegister@usLen	PTR unsigned int  size(2) Largest target is 2
		 -> eMBPoll@usLength(BANK1[2]), 

    eMBFuncReadHoldingRegister@pucFrameCur	PTR unsigned char  size(2) Largest target is 256
		 -> ucRTUBuf(BANK6[256]), NULL(NULL[0]), 

    eMBFuncReadHoldingRegister@pucFrame	PTR unsigned char  size(2) Largest target is 256
		 -> ucRTUBuf(BANK6[256]), NULL(NULL[0]), 

    eMBFuncReadHoldingRegister@usLen	PTR unsigned int  size(2) Largest target is 2
		 -> eMBPoll@usLength(BANK1[2]), 

    eMBFuncWriteMultipleHoldingRegister@pucFrame	PTR unsigned char  size(2) Largest target is 256
		 -> ucRTUBuf(BANK6[256]), NULL(NULL[0]), 

    eMBFuncWriteMultipleHoldingRegister@usLen	PTR unsigned int  size(2) Largest target is 2
		 -> eMBPoll@usLength(BANK1[2]), 

    eMBFuncWriteHoldingRegister@pucFrame	PTR unsigned char  size(2) Largest target is 256
		 -> ucRTUBuf(BANK6[256]), NULL(NULL[0]), 

    eMBFuncWriteHoldingRegister@usLen	PTR unsigned int  size(2) Largest target is 2
		 -> eMBPoll@usLength(BANK1[2]), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), prvvTIMERExpiredISR(), 

    TMR3_InterruptHandler	 PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), Absolute function(), prvvTIMERExpiredISR(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), UART_error_handler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), UART_error_handler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), UART_error_handler(), 

    UART1_ErrorHandler	 PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), UART_error_handler(), 

    UART1_OverrunErrorHandler	 PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), UART_error_handler(), 

    UART1_FramingErrorHandler	 PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), UART_error_handler(), 

    UART1_RxInterruptHandler	 PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	 PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    TMR0_InterruptHandler	 PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    SPI1_ReadBlock@block	PTR void  size(2) Largest target is 128
		 -> phyRxBuffer(BANK7[128]), SX1276Read@data(BANK0[1]), 

    SPI1_ReadBlock@data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK7[128]), SX1276Read@data(BANK0[1]), 

    SPI1_WriteBlock@block	PTR void  size(2) Largest target is 128
		 -> SX1276Write@data(BANK0[1]), phyTxBuffer(BANK9[128]), 

    SPI1_WriteBlock@data	PTR unsigned char  size(2) Largest target is 128
		 -> SX1276Write@data(BANK0[1]), phyTxBuffer(BANK9[128]), 

    set_timer0base@timer	PTR unsigned int  size(2) Largest target is 2
		 -> _cadBackoffTimer(BANK0[2]), cadTimeOut(BANK0[2]), txTimeOut(BANK0[2]), blen_sample_timer(BANK1[2]), 
		 -> ledtimer(BANK1[2]), 

    get_timer0base@timer	PTR unsigned int  size(2) Largest target is 2
		 -> _cadBackoffTimer(BANK0[2]), cadTimeOut(BANK0[2]), txTimeOut(BANK0[2]), blen_sample_timer(BANK1[2]), 
		 -> ledtimer(BANK1[2]), 

    CircularBufferEmpty@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK7[96]), msg_ack_queue(BANK4[32]), rx_buffer_queue(BANK2[3]), 

    CircularBufferEmpty@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK2[10]), msg_ack_queue_context(BANK3[10]), rx_buffer_queue_context(BANK2[10]), 

    CircularBufferSpace@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK7[96]), msg_ack_queue(BANK4[32]), rx_buffer_queue(BANK2[3]), 

    CircularBufferSpace@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK2[10]), 

    CircularBufferSize@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK7[96]), msg_ack_queue(BANK4[32]), rx_buffer_queue(BANK2[3]), 

    CircularBufferSize@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK2[10]), rx_buffer_queue_context(BANK2[10]), 

    CircularBufferPeek@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK7[96]), msg_ack_queue(BANK4[32]), rx_buffer_queue(BANK2[3]), 

    CircularBufferPopFront@val	PTR void  size(2) Largest target is 4
		 -> handle_led_events@temp(BANK0[3]), fill_rx_regs@buf_id(BANK0[1]), handle_rw_regs@msg_ack_obj(BANK0[4]), 

    CircularBufferPopFront@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK7[96]), msg_ack_queue(BANK4[32]), rx_buffer_queue(BANK2[3]), 

    CircularBufferPopFront@ctx	PTR struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK2[10]), msg_ack_queue_context(BANK3[10]), rx_buffer_queue_context(BANK2[10]), 

    CircularBufferPushBack@val	PTR void  size(2) Largest target is 4
		 -> queueLedEvent@temp(BANK0[3]), free_tx_buffer@msg_ack_obj(BANK0[4]), appDataInd@buf_id(BANK0[1]), 

    CircularBufferPushBack@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK7[96]), msg_ack_queue(BANK4[32]), rx_buffer_queue(BANK2[3]), 

    CircularBufferPushBack@ctx	PTR struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK2[10]), msg_ack_queue_context(BANK3[10]), rx_buffer_queue_context(BANK2[10]), 

    CircularBufferClear@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK7[96]), msg_ack_queue(BANK4[32]), rx_buffer_queue(BANK2[3]), 

    CircularBufferInit@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK7[96]), msg_ack_queue(BANK4[32]), rx_buffer_queue(BANK2[3]), 

    CircularBufferInit@buf	PTR void  size(2) Largest target is 96
		 -> ledqueue(BANK7[96]), msg_ack_queue(BANK4[32]), rx_buffer_queue(BANK2[3]), 

    CircularBufferInit@ctx	PTR struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK2[10]), msg_ack_queue_context(BANK3[10]), rx_buffer_queue_context(BANK2[10]), 

    ledtasksbuf.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK7[96]), msg_ack_queue(BANK4[32]), rx_buffer_queue(BANK2[3]), 

    crc16_app@dptr	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), EUIDbyte(BANK3[12]), tx_buffer.payload(BIGRAM[110]), tx_buffer(BIGRAM[264]), 

    crc16_app@ptr	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), EUIDbyte(BANK3[12]), tx_buffer.payload(BIGRAM[110]), tx_buffer(BIGRAM[264]), 

    exract_sink_addr@p2	PTR unsigned char  size(2) Largest target is 5
		 -> exract_sink_addr@addrstr(BANK0[5]), 

    exract_sink_addr@dataptr	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    exract_sink_addr@p1	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    eMBRegHoldingCB@tempptr_1286	PTR unsigned int  size(2) Largest target is 120
		 -> rx_ctl_mb_regs(BANK5[120]), 

    eMBRegHoldingCB@tempptr_1285	PTR unsigned int  size(2) Largest target is 120
		 -> rx_ctl_mb_regs(BANK5[120]), 

    eMBRegHoldingCB@tempptr_1284	PTR unsigned int  size(2) Largest target is 118
		 -> tx_ctl_mb_regs(BANK4[118]), 

    eMBRegHoldingCB@tempptr_1283	PTR unsigned int  size(2) Largest target is 118
		 -> tx_ctl_mb_regs(BANK4[118]), 

    eMBRegHoldingCB@tempptr_1282	PTR unsigned int  size(2) Largest target is 66
		 -> read_write_mb_regs(BANK2[66]), 

    eMBRegHoldingCB@tempptr_1280	PTR unsigned int  size(2) Largest target is 66
		 -> read_write_mb_regs(BANK2[66]), 

    eMBRegHoldingCB@tempptr_1279	PTR unsigned int  size(2) Largest target is 36
		 -> write_only_mb_regs(BANK3[36]), 

    eMBRegHoldingCB@pucRegBuffer	PTR unsigned char  size(2) Largest target is 256
		 -> ucRTUBuf(BANK6[256]), NULL(NULL[0]), 

    eMBRegHoldingCB@tempptr	PTR unsigned int  size(2) Largest target is 34
		 -> read_only_mb_regs(BANK3[34]), 

    rw_mb_regs@tempptr	PTR unsigned int  size(2) Largest target is 120
		 -> rx_ctl_mb_regs(BANK5[120]), tx_ctl_mb_regs(BANK4[118]), write_only_mb_regs(BANK3[36]), read_only_mb_regs(BANK3[34]), 
		 -> read_write_mb_regs(BANK2[66]), 

    rw_mb_regs@pucRegBuffer	PTR unsigned char  size(2) Largest target is 256
		 -> ucRTUBuf(BANK6[256]), NULL(NULL[0]), 

    handle_write_only_regs@keyptr	PTR unsigned int  size(2) Largest target is 36
		 -> write_only_mb_regs(BANK3[36]), 

    keycmp@key	PTR unsigned int  size(2) Largest target is 16
		 -> net_key(BANK3[16]), aes_key(BANK3[16]), 

    keycmp@new	PTR unsigned int  size(2) Largest target is 36
		 -> write_only_mb_regs(BANK3[36]), 

    get_free_rx_buffer@buf_id	PTR unsigned char  size(2) Largest target is 1
		 -> appDataInd@buf_id(BANK0[1]), 

    free_tx_buffer@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    free_tx_buffer@req.data	PTR unsigned char  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), 

    free_tx_buffer@req.frame	PTR void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    free_tx_buffer@req.next	PTR void  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    free_tx_buffer@req	PTR struct NWK_DataReq_t size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    tx_buffer.nwkDataReq.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    tx_buffer.nwkDataReq.data	PTR unsigned char  size(2) Largest target is 270
		 -> tx_buffer.payload(BIGRAM[110]), tx_buffer(BIGRAM[264]), 

    tx_buffer.nwkDataReq.frame	PTR void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    tx_buffer.nwkDataReq.next	PTR void  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    get_free_tx_buffer@buf_id	PTR unsigned char  size(2) Largest target is 1
		 -> handle_tx_regs@buf_id(BANK0[1]), cmdSetSink@buf_id(BANK0[1]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    appManagementEp@ptr	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    appManagementEp@ind.data	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    appManagementEp@ind	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK3[12]), 

    appManagementEp@dataptr	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    sp__memset	PTR void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), exract_sink_addr@addrstr(BANK0[5]), tx_buffer.payload(BIGRAM[110]), cmdSetSink@msgstr(BANK0[16]), 
		 -> tx_buffer(BIGRAM[264]), rx_buffer.payload(BIGRAM[110]), rx_buffer(BIGRAM[369]), 

    rx_buffer.rx_ind.data	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    appDataInd@ind.data	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    appDataInd@ind	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK3[12]), 

    appDataInd@dataptr	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    S269NWK_DataInd_t$data	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    check_multicast_rx@ind.data	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    check_multicast_rx@ind	PTR struct NWK_DataInd_t size(2) Largest target is 13
		 -> nwkRxIndicateFrame@ind(BANK3[12]), 

    S241NWK_DataReq_t$confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    appDataConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    S241NWK_DataReq_t$data	PTR unsigned char  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), 

    appDataConf@req.data	PTR unsigned char  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), 

    S241NWK_DataReq_t$frame	PTR void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    appDataConf@req.frame	PTR void  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), NULL(NULL[0]), 

    S241NWK_DataReq_t$next	PTR void  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    appDataConf@req.next	PTR void  size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    appDataConf@req	PTR struct NWK_DataReq_t size(2) Largest target is 270
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), 

    app_aes_decrypt@data	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    app_aes_decrypt@apphdr	PTR struct app_header_t size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    app_aes_encrypt@data	PTR unsigned char  size(2) Largest target is 270
		 -> tx_buffer.payload(BIGRAM[110]), tx_buffer(BIGRAM[264]), 

    app_aes_encrypt@apphdr	PTR struct app_header_t size(2) Largest target is 270
		 -> tx_buffer.payload(BIGRAM[110]), tx_buffer(BIGRAM[264]), 

    msg_ack_queue_context.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK7[96]), msg_ack_queue(BANK4[32]), rx_buffer_queue(BANK2[3]), 

    S284$buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK7[96]), msg_ack_queue(BANK4[32]), rx_buffer_queue(BANK2[3]), 

    rx_buffer_queue_context.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK7[96]), msg_ack_queue(BANK4[32]), rx_buffer_queue(BANK2[3]), 

    AES_CBC_decrypt_buffer@ctx	PTR struct AES_ctx size(2) Largest target is 192
		 -> app_aes_decrypt@ctx(BANK1[192]), 

    AES_CBC_decrypt_buffer@buf	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    AES_CBC_encrypt_buffer@buf	PTR unsigned char  size(2) Largest target is 270
		 -> tx_buffer.payload(BIGRAM[110]), tx_buffer(BIGRAM[264]), 

    AES_CBC_encrypt_buffer@ctx	PTR struct AES_ctx size(2) Largest target is 192
		 -> app_aes_encrypt@ctx(BANK1[192]), 

    AES_CBC_encrypt_buffer@Iv	PTR unsigned char  size(2) Largest target is 270
		 -> ctx.Iv(BANK1[16]), tx_buffer.payload(BIGRAM[110]), tx_buffer(BIGRAM[264]), app_aes_encrypt@ctx(BANK1[192]), 

    XorWithIv@Iv	PTR const unsigned char  size(2) Largest target is 270
		 -> ctx.Iv(BANK1[16]), ctx.Iv(BANK1[16]), tx_buffer.payload(BIGRAM[110]), tx_buffer(BIGRAM[264]), 
		 -> app_aes_decrypt@ctx(BANK1[192]), app_aes_encrypt@ctx(BANK1[192]), 

    XorWithIv@buf	PTR unsigned char  size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), tx_buffer.payload(BIGRAM[110]), tx_buffer(BIGRAM[264]), 

    InvCipher@RoundKey	PTR const unsigned char  size(2) Largest target is 192
		 -> ctx.RoundKey(BANK1[176]), app_aes_decrypt@ctx(BANK1[192]), 

    InvCipher@state	PTR unsigned char [4][4] size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    Cipher@RoundKey	PTR const unsigned char  size(2) Largest target is 192
		 -> ctx.RoundKey(BANK1[176]), app_aes_encrypt@ctx(BANK1[192]), 

    Cipher@state	PTR unsigned char [4][4] size(2) Largest target is 270
		 -> tx_buffer.payload(BIGRAM[110]), tx_buffer(BIGRAM[264]), 

    InvShiftRows@state	PTR unsigned char [4][4] size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    InvSubBytes@state	PTR unsigned char [4][4] size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    InvMixColumns@state	PTR unsigned char [4][4] size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), 

    MixColumns@state	PTR unsigned char [4][4] size(2) Largest target is 270
		 -> tx_buffer.payload(BIGRAM[110]), tx_buffer(BIGRAM[264]), 

    ShiftRows@state	PTR unsigned char [4][4] size(2) Largest target is 270
		 -> tx_buffer.payload(BIGRAM[110]), tx_buffer(BIGRAM[264]), 

    SubBytes@state	PTR unsigned char [4][4] size(2) Largest target is 270
		 -> tx_buffer.payload(BIGRAM[110]), tx_buffer(BIGRAM[264]), 

    AddRoundKey@RoundKey	PTR const unsigned char  size(2) Largest target is 192
		 -> ctx.RoundKey(BANK1[176]), ctx.RoundKey(BANK1[176]), app_aes_decrypt@ctx(BANK1[192]), app_aes_encrypt@ctx(BANK1[192]), 

    AddRoundKey@state	PTR unsigned char [4][4] size(2) Largest target is 695
		 -> nwkFrameFrames(BIGRAM[690]), tx_buffer.payload(BIGRAM[110]), tx_buffer(BIGRAM[264]), 

    sp__memcpy	PTR void  size(2) Largest target is 695
		 -> phyTxBuffer(BANK9[128]), nwkFrameFrames..(BIGRAM[128]), nwkFrameFrames(BIGRAM[690]), handle_led_events@temp(BANK0[3]), 
		 -> ledqueue(BANK7[96]), exract_sink_addr@addrstr(BANK0[5]), fill_rx_regs@buf_id(BANK0[1]), handle_rw_regs@msg_ack_obj(BANK0[4]), 
		 -> msg_ack_queue(BANK4[32]), rx_buffer_queue(BANK2[3]), write_only_mb_regs(BANK3[36]), tx_buffer.payload(BIGRAM[110]), 
		 -> tx_buffer(BIGRAM[264]), NULL(NULL[0]), rx_buffer.payload(BIGRAM[110]), rx_buffer(BIGRAM[369]), 
		 -> app_aes_decrypt@ctx(BANK1[192]), app_aes_decrypt@iv(BANK1[16]), app_aes_encrypt@ctx(BANK1[192]), app_aes_encrypt@iv(BANK1[16]), 
		 -> AES_CBC_decrypt_buffer@storeNextIv(BANK0[16]), 

    AES_init_ctx_iv@iv	PTR const unsigned char  size(2) Largest target is 16
		 -> app_aes_decrypt@iv(BANK1[16]), app_aes_encrypt@iv(BANK1[16]), 

    AES_init_ctx_iv@key	PTR const unsigned char  size(2) Largest target is 16
		 -> aes_key(BANK3[16]), 

    AES_init_ctx_iv@ctx	PTR struct AES_ctx size(2) Largest target is 192
		 -> app_aes_decrypt@ctx(BANK1[192]), app_aes_encrypt@ctx(BANK1[192]), 

    KeyExpansion@Key	PTR const unsigned char  size(2) Largest target is 16
		 -> aes_key(BANK3[16]), 

    KeyExpansion@RoundKey	PTR unsigned char  size(2) Largest target is 192
		 -> app_aes_decrypt@ctx(BANK1[192]), app_aes_encrypt@ctx(BANK1[192]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _bootLoadApplication->_eMBInit
    _loadMACAddr->_DIA_ReadByte
    _ledInit->_queueLedEvent
    _NWK_SetPanId->_PHY_SetPanId
    _NWK_SetAddr->_PHY_SetShortAddr
    _DATAEE_ReadByte_Platform->_DATAEE_WriteByte
    _uart_default_engine->_eMBInit
    _sync_eeprom->_DATAEE_WriteByte_Platform
    _stop_loop_timer->_TMR5_ReadTimer
    _start_loop_timer->_TMR5_WriteTimer
    _handle_led_events->_CircularBufferPopFront
    _MBRTUStack->_handle_write_only_regs
    _prvvUARTTxReadyISR->_xMBRTUTransmitFSM
    _xMBRTUTransmitFSM->_vMBPortSerialEnable
    _prvvUARTRxISR->_xMBRTUReceiveFSM
    _xMBRTUReceiveFSM->_xMBPortSerialGetByte
    _handle_write_only_regs->_cmdSetSink
    _cmdSetSink->_app_aes_encrypt
    _handle_tx_regs->_app_aes_encrypt
    _app_aes_encrypt->_AES_CBC_encrypt_buffer
    _AES_CBC_encrypt_buffer->_Cipher
    _Cipher->_MixColumns
    _MixColumns->_xtime
    _handle_rx_regs->_CircularBufferSize
    _handle_rw_regs->_eMBInit
    _eMBInit->_eMBRTUInit
    _eMBRTUInit->___lldiv
    _xMBPortTimersInit->___wmul
    _eMBRTUStart->_vMBPortSerialEnable
    _eMBRTUStop->_vMBPortSerialEnable
    _NWK_GroupAdd->_nwkGroupSwitch
    _fill_rx_regs->_CircularBufferPopFront
    _CircularBufferPopFront->_memcpy
    _eMBPoll->_eMBFuncReadWriteMultipleHoldingRegister
    _eMBRTUSend->_usMBCRC16
    _eMBRTUReceive->_usMBCRC16
    _eMBFuncWriteMultipleHoldingRegister->_eMBRegHoldingCB
    _eMBFuncWriteHoldingRegister->_eMBRegHoldingCB
    _eMBFuncReadWriteMultipleHoldingRegister->_eMBRegHoldingCB
    _eMBFuncReadHoldingRegister->_eMBRegHoldingCB
    _eMBRegHoldingCB->_rw_mb_regs
    _load_on_demand_mb_regs->_get_loop_time
    _SYS_TimerTaskHandler->_nwkTxAckWaitTimerHandler
    _SYS_TimerTaskHandler->_nwkTxDelayTimerHandler
    _nwkTxDelayTimerHandler->_SYS_TimerStart
    _nwkTxAckWaitTimerHandler->_SYS_TimerStart
    _nwkRxDuplicateRejectionTimerHandler->_SYS_TimerStart
    _PHY_TaskHandler->_radio_engine
    _radio_engine->_DIO0_Receive_ISR
    _sx1276_send->_SX1276Write
    _queue_tx_led_event->_queueLedEvent
    _initRadio->_setSignalBandwidth
    _setTxPower->_SX1276Write
    _setSyncWord->_SX1276Write
    _setSpreadingFactor->___lldiv
    _setSignalBandwidth->___lldiv
    _getSpreadingFactor->_SX1276Read
    _getSignalBandwidth->_SX1276Read
    ___flge->___xxtofl
    _setPreambleLength->_SX1276Write
    _setCodingRate4->_SX1276Write
    _enableCrc->_SX1276Write
    _PHY_SetChannel->_setFrequency
    _setFrequency->___lldiv
    ___lldiv->_getSignalBandwidth
    _cad->_SX1276Write
    _start_radio_cad->_SX1276Write
    _idle->_SX1276Write
    _PHY_DataConf->_nwkTxConvertPhyStatus
    _DIO0_Receive_ISR->_get_lqi
    _receive->_SX1276Write
    _implicitHeaderMode->_SX1276Write
    _explicitHeaderMode->_SX1276Write
    _SX1276Write->_SX1276Read
    _SX1276WriteBuffer->_SPI1_WriteBlock
    _SPI1_WriteBlock->_SPI1_ExchangeByte
    _SX1276Read->_SX1276ReadBuffer
    _SX1276ReadBuffer->_SPI1_ReadBlock
    _SPI1_ReadBlock->_SPI1_ExchangeByte
    _queue_rx_led_event->_queueLedEvent
    _queueLedEvent->_CircularBufferPushBack
    _CircularBufferSpace->_CircularBufferSize
    _get_lqi->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul
    _PHY_DataInd->_memcpy
    _NWK_TaskHandler->_nwkRxTaskHandler
    _nwkTxTaskHandler->_PHY_DataReq
    _nwkRouteFrameSent->_NWK_RouteFindEntry
    _nwkDataReqTxConf->_nwkFrameFree
    _PHY_DataReq->_memcpy
    _nwkRxTaskHandler->_nwkRxHandleIndication
    _nwkRxHandleReceivedFrame->_nwkRxRejectDuplicate
    _nwkTxBroadcastFrame->_memcpy
    _nwkRxRejectDuplicate->_SYS_TimerStart
    _SYS_TimerStart->_placeTimer
    _nwkRouteFrameReceived->_NWK_RouteNewEntry
    _nwkRxHandleIndication->_nwkRxIndicateFrame
    _nwkRxSendAck->_nwkTxFrame
    _nwkRxIndicateFrame->_appDataInd
    _nwkTxAckReceived->_nwkFrameNext
    _nwkRouteErrorReceived->_nwkRouteRemove
    _nwkRouteRemove->_NWK_RouteFindEntry
    _appManagementEp->_app_aes_decrypt
    _exract_sink_addr->_strtol
    _strtol->___lmul
    _isalpha->_isupper
    _strstr->_strncmp
    _strncmp->_strlen
    _DATAEE_WriteByte_Platform->_DATAEE_WriteByte
    _appDataInd->_app_aes_decrypt
    _check_multicast_rx->_NWK_GroupIsMember
    _app_aes_decrypt->_AES_CBC_decrypt_buffer
    _crc16_app->_CRC_CalculatedResultGet
    _CRC_CalculatedResultGet->_CRC_ReverseValue
    _AES_init_ctx_iv->_KeyExpansion
    _AES_CBC_decrypt_buffer->_InvCipher
    _InvCipher->_InvMixColumns
    _InvMixColumns->_xtime
    _nwkRouteFrame->_nwkRouteSendRouteError
    _nwkRouteSendRouteError->_nwkTxFrame
    _nwkDataReqTaskHandler->_nwkDataReqConfirm
    _nwkDataReqSendFrame->_nwkTxFrame
    _nwkTxFrame->_nwkRoutePrepareTx
    _rand->___lmul
    _nwkRoutePrepareTx->_NWK_RouteNextHop
    _NWK_RouteNextHop->_NWK_RouteFindEntry
    _nwkFrameAlloc->_memset
    _nwkDataReqConfirm->_appDataConf
    _appDataConf->_free_tx_buffer
    _free_tx_buffer->_CircularBufferPushBack
    _CircularBufferPushBack->_memcpy
    _memcpy->___wmul
    _memcpy->_strlen
    _SYS_Init->_NWK_Init
    _NWK_Init->_nwkRxInit
    _nwkRxInit->_NWK_OpenEndpoint
    _SYSTEM_Initialize->_CRC_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _TMR0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    _prvvTIMERExpiredISR->_xMBRTUTimerT35Expired

Critical Paths under _main in BANK1

    _cmdSetSink->_app_aes_encrypt
    _handle_tx_regs->_app_aes_encrypt
    _appManagementEp->_app_aes_decrypt
    _appDataInd->_app_aes_decrypt

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    _nwkRxHandleIndication->_nwkRxIndicateFrame

Critical Paths under _TMR0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  645962
                  _SYSTEM_Initialize
                           _SYS_Init
                    _SYS_TaskHandler
           _TMR0_SetInterruptHandler
                        _application
                _bootLoadApplication
 ---------------------------------------------------------------------------------
 (1) _bootLoadApplication                                 12    12      0   49904
                                             72 BANK0     12    12      0
                 _CircularBufferInit
           _DATAEE_ReadByte_Platform
          _DATAEE_WriteByte_Platform
                       _NWK_GroupAdd
                   _NWK_OpenEndpoint
                        _NWK_SetAddr
                       _NWK_SetPanId
      _PHY_Get_Packet_Rssi_Threshold
_PHY_Get_Packet_Rssi_Threshold_Limit
      _PHY_Set_Packet_Rssi_Threshold
           _TMR0_SetInterruptHandler
           _TMR3_SetInterruptHandler
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
                          _crc16_app
                          _eMBEnable
                            _eMBInit
                            _ledInit
                        _loadMACAddr
                             _memcpy
                         _set_parity
                      _set_uart_baud
 ---------------------------------------------------------------------------------
 (2) _loadMACAddr                                         10    10      0     359
                                             21 BANK0     10    10      0
                       _DIA_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DIA_ReadByte                                         4     0      4     157
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _ledInit                                              2     2      0   14968
                                             55 BANK0      2     2      0
                 _CircularBufferInit
                      _queueLedEvent
 ---------------------------------------------------------------------------------
 (3) _CircularBufferInit                                  14     6      8    1551
                                             17 BANK0     14     6      8
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) _PHY_Get_Packet_Rssi_Threshold_Limits                 4     0      4     222
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _NWK_SetPanId                                         2     0      2     222
                                             19 BANK0      2     0      2
                       _PHY_SetPanId
 ---------------------------------------------------------------------------------
 (3) _PHY_SetPanId                                         2     0      2      89
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _NWK_SetAddr                                          2     0      2     222
                                             19 BANK0      2     0      2
                   _PHY_SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _PHY_SetShortAddr                                     2     0      2      89
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte_Platform                             6     4      2    5295
                                             21 BANK0      6     4      2
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2     312
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _application                                          0     0      0  187103
                         _MBRTUStack
                  _handle_led_events
                   _nwkEnableRouting
                      _reset_handler
                   _start_loop_timer
                    _stop_loop_timer
                        _sync_eeprom
                _uart_default_engine
 ---------------------------------------------------------------------------------
 (2) _uart_default_engine                                  2     2      0   10375
                                             72 BANK0      2     2      0
                            _eMBInit
                     _get_timer0base
                         _set_parity
                     _set_timer0base
                      _set_uart_baud
 ---------------------------------------------------------------------------------
 (2) _sync_eeprom                                          2     2      0    7856
                                             24 BANK0      2     2      0
          _DATAEE_WriteByte_Platform
      _PHY_Get_Packet_Rssi_Threshold
 ---------------------------------------------------------------------------------
 (2) _stop_loop_timer                                      2     2      0     158
                                             25 BANK0      2     2      0
                     _TMR5_ReadTimer
                     _TMR5_StopTimer
 ---------------------------------------------------------------------------------
 (3) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR5_ReadTimer                                       8     6      2      69
                                             17 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _start_loop_timer                                     0     0      0     255
                    _TMR5_StartTimer
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR5_WriteTimer                                      2     0      2     255
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR5_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _reset_handler                                        2     2      0       0
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _nwkEnableRouting                                     1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _handle_led_events                                    3     3      0   13209
                                             46 BANK0      3     3      0
                _CircularBufferEmpty
             _CircularBufferPopFront
                     _get_timer0base
                     _set_timer0base
 ---------------------------------------------------------------------------------
 (2) _MBRTUStack                                           0     0      0  155228
                _CircularBufferEmpty
                  _UART1_is_rx_ready
                  _UART1_is_tx_ready
                 _UART_error_handler
                            _eMBPoll
                       _fill_rx_regs
                     _handle_rw_regs
                     _handle_rx_regs
                     _handle_tx_regs
             _handle_write_only_regs
                      _prvvUARTRxISR
                 _prvvUARTTxReadyISR
 ---------------------------------------------------------------------------------
 (3) _prvvUARTTxReadyISR                                   0     0      0    2154
                   Absolute function *
                  _xMBRTUTransmitFSM *
 ---------------------------------------------------------------------------------
 (4) _xMBRTUTransmitFSM                                    3     3      0    2154
                                             19 BANK0      3     3      0
                           __fassert
                _vMBPortSerialEnable
                   _xMBPortEventPost
               _xMBPortSerialPutByte
 ---------------------------------------------------------------------------------
 (5) _xMBPortSerialPutByte                                 1     1      0      66
                                             17 BANK0      1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (3) _prvvUARTRxISR                                        0     0      0    1944
                   Absolute function *
                   _xMBRTUReceiveFSM *
 ---------------------------------------------------------------------------------
 (4) _xMBRTUReceiveFSM                                     4     4      0    1944
                                             19 BANK0      4     4      0
                           __fassert
                _vMBPortTimersEnable
               _xMBPortSerialGetByte
 ---------------------------------------------------------------------------------
 (5) _xMBPortSerialGetByte                                 2     0      2     135
                                             17 BANK0      2     0      2
                         _UART1_Read
 ---------------------------------------------------------------------------------
 (3) _handle_write_only_regs                               6     6      0   45106
                                             91 BANK0      6     6      0
                         _cmdSetSink
                             _keycmp
                    _set_eeprom_sync
 ---------------------------------------------------------------------------------
 (4) _keycmp                                              11     6      5     646
                                             17 BANK0     11     6      5
 ---------------------------------------------------------------------------------
 (4) _cmdSetSink                                          29    27      2   44012
                                             62 BANK0     29    27      2
                   _DATAEE_WriteByte
                        _NWK_DataReq
                    _app_aes_encrypt
                 _get_free_tx_buffer
                             _memcpy
                             _memset
               _needed_packet_length
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _handle_tx_regs                                      12    12      0   41065
                                             62 BANK0     12    12      0
                        _NWK_DataReq
                    _app_aes_encrypt
                     _compute_option
                 _get_free_tx_buffer
                             _memcpy
                             _memset
               _needed_packet_length
 ---------------------------------------------------------------------------------
 (5) _needed_packet_length                                 4     4      0     136
                                             17 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (5) _get_free_tx_buffer                                   3     1      2     288
                                             17 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _compute_option                                       5     3      2     136
                                             17 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) _app_aes_encrypt                                    219   216      3   31146
                                             56 BANK0      6     3      3
                                              0 BANK1    213   213      0
             _AES_CBC_encrypt_buffer
                    _AES_init_ctx_iv
                          _crc16_app
                             _memcpy
                               _rand
 ---------------------------------------------------------------------------------
 (6) _AES_CBC_encrypt_buffer                              16     8      8   11977
                                             40 BANK0     16     8      8
                             _Cipher
                          _XorWithIv
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _Cipher                                               5     1      4    4632
                                             35 BANK0      5     1      4
                        _AddRoundKey
                         _MixColumns
                          _ShiftRows
                           _SubBytes
 ---------------------------------------------------------------------------------
 (8) _SubBytes                                            10     8      2     313
                                             17 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (8) _ShiftRows                                            3     1      2     709
                                             17 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (8) _MixColumns                                          17    15      2    1659
                                             18 BANK0     17    15      2
                              _xtime
 ---------------------------------------------------------------------------------
 (5) _NWK_DataReq                                          2     0      2     332
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _handle_rx_regs                                       3     3      0     476
                                             25 BANK0      3     3      0
                 _CircularBufferSize
 ---------------------------------------------------------------------------------
 (3) _handle_rw_regs                                       9     9      0   20369
                                             72 BANK0      9     9      0
                _CircularBufferEmpty
             _CircularBufferPopFront
                       _NWK_GroupAdd
      _PHY_Get_Packet_Rssi_Threshold
      _PHY_Set_Packet_Rssi_Threshold
                         _eMBDisable
                          _eMBEnable
                            _eMBInit
                       _nwkGroupInit
                    _set_eeprom_sync
                         _set_parity
                      _set_uart_baud
 ---------------------------------------------------------------------------------
 (2) _set_uart_baud                                        3     3      0      22
                                             17 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _set_parity                                           3     3      0      88
                                             17 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _set_eeprom_sync                                      4     4      0      46
                                             17 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _eMBInit                                             11     4      7    7595
                                             61 BANK0     11     4      7
                         _eMBRTUInit
                   _xMBPortEventInit
 ---------------------------------------------------------------------------------
 (3) _xMBPortEventInit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _eMBRTUInit                                          12     6      6    5575
                                             50 BANK0     11     5      6
                            ___lldiv
                  _xMBPortSerialInit
                  _xMBPortTimersInit
 ---------------------------------------------------------------------------------
 (4) _xMBPortTimersInit                                    2     0      2    3356
                                             23 BANK0      2     0      2
           _TMR3_SetInterruptHandler
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _xMBPortSerialInit                                    7     1      6     267
                                             17 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _eMBEnable                                            1     1      0     678
                                             19 BANK0      1     1      0
                   Absolute function *
                        _eMBRTUStart *
 ---------------------------------------------------------------------------------
 (3) _eMBRTUStart                                          0     0      0     654
                _vMBPortSerialEnable
                _vMBPortTimersEnable
 ---------------------------------------------------------------------------------
 (4) _vMBPortTimersEnable                                  0     0      0     165
                    _TMR3_StartTimer
                     _TMR3_StopTimer
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2     165
 ---------------------------------------------------------------------------------
 (5) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _eMBDisable                                           1     1      0     514
                                             19 BANK0      1     1      0
                   Absolute function *
                         _eMBRTUStop *
 ---------------------------------------------------------------------------------
 (5) _eMBRTUStop                                           0     0      0     489
                _vMBPortSerialEnable
               _vMBPortTimersDisable
 ---------------------------------------------------------------------------------
 (19) _vMBPortTimersDisable                                0     0      0       0
                     _TMR3_StopTimer
 ---------------------------------------------------------------------------------
 (20) _TMR3_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PHY_Set_Packet_Rssi_Threshold                        1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _PHY_Get_Packet_Rssi_Threshold                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NWK_GroupAdd                                         2     0      2     664
                                             24 BANK0      2     0      2
                     _nwkGroupSwitch
 ---------------------------------------------------------------------------------
 (3) _nwkGroupSwitch                                       7     3      4     464
                                             17 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _fill_rx_regs                                        10    10      0   10796
                                             46 BANK0     10    10      0
                _CircularBufferEmpty
             _CircularBufferPopFront
 ---------------------------------------------------------------------------------
 (3) _CircularBufferPopFront                              10     6      4   10003
                                             36 BANK0     10     6      4
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _CircularBufferEmpty                                  6     4      2     400
                                             17 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _eMBPoll                                              6     6      0   32893
                                             75 BANK0      6     6      0
                   Absolute function *
                             ___wmul
         _eMBFuncReadHoldingRegister *
_eMBFuncReadWriteMultipleHoldingRegi *
        _eMBFuncWriteHoldingRegister *
_eMBFuncWriteMultipleHoldingRegister *
                      _eMBRTUReceive *
                         _eMBRTUSend *
                 _vMBPortTimersDelay
                    _xMBPortEventGet
                   _xMBPortEventPost
 ---------------------------------------------------------------------------------
 (19) _xMBPortEventPost                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _xMBPortEventGet                                      3     1      2     135
                                             17 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _vMBPortTimersDelay                                   2     0      2      89
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _eMBRTUSend                                           8     4      4    1291
                                             27 BANK0      8     4      4
                          _usMBCRC16
                _vMBPortSerialEnable
 ---------------------------------------------------------------------------------
 (4) _vMBPortSerialEnable                                  2     1      1     489
                                             17 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (4) _eMBRTUReceive                                       12     6      6    2375
                                             27 BANK0     12     6      6
                           __fassert
                          _usMBCRC16
 ---------------------------------------------------------------------------------
 (5) _usMBCRC16                                           10     6      4     538
                                             17 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (19) __fassert                                            6     0      6    1553
                             _printf
 ---------------------------------------------------------------------------------
 (20) _printf                                             26    16     10    1037
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (21) _putch                                               1     0      1      66
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (22) _UART1_Write                                         1     0      1      44
 ---------------------------------------------------------------------------------
 (21) ___lwmod                                             5     1      4     209
 ---------------------------------------------------------------------------------
 (21) ___lwdiv                                             7     3      4     262
 ---------------------------------------------------------------------------------
 (4) _eMBFuncWriteMultipleHoldingRegister                 13     9      4    6329
                                             54 BANK0     13     9      4
                             ___wmul (ARG)
                    _eMBRegHoldingCB
              _prveMBError2Exception
 ---------------------------------------------------------------------------------
 (4) _eMBFuncWriteHoldingRegister                         10     6      4    6127
                                             54 BANK0     10     6      4
                             ___wmul (ARG)
                    _eMBRegHoldingCB
              _prveMBError2Exception
 ---------------------------------------------------------------------------------
 (4) _eMBFuncReadWriteMultipleHoldingRegister             21    17      4    6883
                                             54 BANK0     21    17      4
                             ___wmul (ARG)
                    _eMBRegHoldingCB
              _prveMBError2Exception
 ---------------------------------------------------------------------------------
 (4) _eMBFuncReadHoldingRegister                          14    10      4    6441
                                             54 BANK0     14    10      4
                             ___wmul (ARG)
                    _eMBRegHoldingCB
              _prveMBError2Exception
 ---------------------------------------------------------------------------------
 (5) _prveMBError2Exception                                4     4      0      48
                                             17 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (5) _eMBRegHoldingCB                                     25    18      7    5896
                                             29 BANK0     25    18      7
             _load_on_demand_mb_regs
                         _rw_mb_regs
 ---------------------------------------------------------------------------------
 (6) _rw_mb_regs                                          12     6      6    2408
                                             17 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _load_on_demand_mb_regs                               4     4      0     314
                                             21 BANK0      4     4      0
                      _get_loop_time
 ---------------------------------------------------------------------------------
 (7) _get_loop_time                                        4     0      4     222
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (17) _UART_error_handler                                  2     2      0      25
                         _UART1_Read
                  _UART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (18) _UART1_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _UART1_Read                                          1     1      0      24
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYS_TaskHandler                                      0     0      0  406402
                    _NWK_TaskHandler
                    _PHY_TaskHandler
               _SYS_TimerTaskHandler
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerTaskHandler                                11    11      0    7393
                                             40 BANK0     11    11      0
_nwkRxDuplicateRejectionTimerHandler *
           _nwkTxAckWaitTimerHandler *
             _nwkTxDelayTimerHandler *
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _nwkTxDelayTimerHandler                               7     5      2    2384
                                             33 BANK0      7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (3) _nwkTxAckWaitTimerHandler                             7     5      2    2551
                                             33 BANK0      7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
                       _nwkTxConfirm
 ---------------------------------------------------------------------------------
 (4) _nwkTxConfirm                                         3     0      3     244
                                             17 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _nwkRxDuplicateRejectionTimerHandler                  4     2      2    1561
                                             33 BANK0      4     2      2
                     _SYS_TimerStart
 ---------------------------------------------------------------------------------
 (2) _PHY_TaskHandler                                      0     0      0  204618
                       _radio_engine
 ---------------------------------------------------------------------------------
 (3) _radio_engine                                         4     4      0  204618
                                             91 BANK0      4     4      0
                   _DIO0_Receive_ISR
                       _PHY_DataConf
                         _SX1276Read
                                _cad
                     _get_timer0base
                          _initRadio
                 _queue_tx_led_event
                               _rand
                            _receive
                     _set_timer0base
                        _sx1276_send
 ---------------------------------------------------------------------------------
 (4) _sx1276_send                                          0     0      0   16097
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
                        _SX1276Write
                 _explicitHeaderMode
                               _idle
 ---------------------------------------------------------------------------------
 (4) _queue_tx_led_event                                   2     2      0   13349
                                             55 BANK0      2     2      0
                      _queueLedEvent
 ---------------------------------------------------------------------------------
 (4) _initRadio                                            7     7      0   83720
                                             66 BANK0      7     7      0
                     _PHY_SetChannel
                         _SX1276Read
                        _SX1276Write
                          _enableCrc
                 _explicitHeaderMode
                            _receive
                     _setCodingRate4
                  _setPreambleLength
                 _setSignalBandwidth
                 _setSpreadingFactor
                        _setSyncWord
                         _setTxPower
                              _srand
 ---------------------------------------------------------------------------------
 (5) _srand                                                2     0      2     111
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _setTxPower                                           1     1      0    4990
                                             32 BANK0      1     1      0
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setSyncWord                                          1     1      0    4921
                                             32 BANK0      1     1      0
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setSpreadingFactor                                   9     9      0    9217
                                             50 BANK0      9     9      0
                         _SX1276Read
                        _SX1276Write
                            ___lldiv
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (5) _setSignalBandwidth                                  16    12      4   12464
                                             50 BANK0     16    12      4
                         _SX1276Read
                        _SX1276Write
                             ___flge
                            ___lldiv
                           ___xxtofl
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _getSpreadingFactor                                   5     1      4     932
                                             30 BANK0      5     1      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) _getSignalBandwidth                                   7     3      4     955
                                             30 BANK0      7     3      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1784
                                             31 BANK0     12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _setPreambleLength                                    2     0      2    5033
                                             32 BANK0      2     0      2
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setCodingRate4                                       3     3      0    5922
                                             32 BANK0      3     3      0
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _enableCrc                                            0     0      0    5831
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _PHY_SetChannel                                       1     1      0    6939
                                             62 BANK0      1     1      0
                       _setFrequency
 ---------------------------------------------------------------------------------
 (6) _setFrequency                                        12     8      4    6917
                                             50 BANK0     12     8      4
                        _SX1276Write
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     337
                                             17 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1408
                                             37 BANK0     13     5      8
                 _getSignalBandwidth (ARG)
                 _getSpreadingFactor (ARG)
 ---------------------------------------------------------------------------------
 (4) _cad                                                  4     4      0   18434
                                             32 BANK0      4     4      0
                         _SX1276Read
                        _SX1276Write
                     _get_timer0base
                     _set_timer0base
                    _start_radio_cad
 ---------------------------------------------------------------------------------
 (5) _start_radio_cad                                      0     0      0    9798
                        _SX1276Write
                               _idle
 ---------------------------------------------------------------------------------
 (5) _idle                                                 0     0      0    4899
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _set_timer0base                                       4     0      4    1646
                                             17 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _get_timer0base                                       4     2      2    1024
                                             17 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _PHY_DataConf                                         1     1      0      44
                                             20 BANK0      1     1      0
              _nwkTxConvertPhyStatus
 ---------------------------------------------------------------------------------
 (5) _nwkTxConvertPhyStatus                                3     3      0      22
                                             17 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _DIO0_Receive_ISR                                     8     8      0   51979
                                             83 BANK0      8     8      0
                        _PHY_DataInd
                         _SX1276Read
                   _SX1276ReadBuffer
                        _SX1276Write
                            _get_lqi
                           _get_rssi
                 _queue_rx_led_event
                            _receive
 ---------------------------------------------------------------------------------
 (4) _receive                                              1     1      0   16605
                                             32 BANK0      1     1      0
                        _SX1276Write
                 _explicitHeaderMode
                 _implicitHeaderMode
 ---------------------------------------------------------------------------------
 (5) _implicitHeaderMode                                   0     0      0    5831
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _explicitHeaderMode                                   0     0      0    5831
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (6) _SX1276Write                                          2     1      1    4899
                                             30 BANK0      2     1      1
                         _SX1276Read (ARG)
                  _SX1276WriteBuffer
 ---------------------------------------------------------------------------------
 (7) _SX1276WriteBuffer                                    4     1      3     864
                                             24 BANK0      4     1      3
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (8) _SPI1_WriteBlock                                      6     2      4     446
                                             18 BANK0      6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (6) _SX1276Read                                           2     2      0     932
                                             28 BANK0      2     2      0
                   _SX1276ReadBuffer
 ---------------------------------------------------------------------------------
 (7) _SX1276ReadBuffer                                     4     1      3     864
                                             24 BANK0      4     1      3
                  _SPI1_ExchangeByte
                     _SPI1_ReadBlock
 ---------------------------------------------------------------------------------
 (8) _SPI1_ReadBlock                                       6     2      4     268
                                             18 BANK0      6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (9) _SPI1_ExchangeByte                                    1     1      0      22
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _queue_rx_led_event                                   2     2      0   13349
                                             55 BANK0      2     2      0
                      _queueLedEvent
 ---------------------------------------------------------------------------------
 (3) _queueLedEvent                                        7     5      2   13281
                                             48 BANK0      7     5      2
             _CircularBufferPushBack
                _CircularBufferSpace
 ---------------------------------------------------------------------------------
 (4) _CircularBufferSpace                                  4     2      2     571
                                             25 BANK0      4     2      2
                 _CircularBufferSize
 ---------------------------------------------------------------------------------
 (5) _get_rssi                                             3     3      0      68
                                             17 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _get_lqi                                              1     1      0    5837
                                             82 BANK0      1     1      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1212
                                             17 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     318
                                             72 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    1797
                                             31 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2466
                                             56 BANK0     16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _PHY_DataInd                                          7     5      2    8928
                                             36 BANK0      7     5      2
                             _memcpy
                      _nwkFrameAlloc
 ---------------------------------------------------------------------------------
 (2) _NWK_TaskHandler                                      0     0      0  194391
              _nwkDataReqTaskHandler
                   _nwkRxTaskHandler
                   _nwkTxTaskHandler
 ---------------------------------------------------------------------------------
 (3) _nwkTxTaskHandler                                     4     4      0   12271
                                             39 BANK0      4     4      0
                   Absolute function *
                        _PHY_DataReq
                     _SYS_TimerStart
                   _nwkDataReqTxConf *
                       _nwkFrameFree
                       _nwkFrameNext
                  _nwkRouteFrameSent
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrameSent                                    6     4      2    2031
                                             23 BANK0      6     4      2
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
             _nwkRouteNormalizeRanks
 ---------------------------------------------------------------------------------
 (5) _nwkRouteNormalizeRanks                               2     2      0      90
                                             17 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqTxConf                                     6     4      2     664
                                             19 BANK0      6     4      2
                       _nwkFrameFree
 ---------------------------------------------------------------------------------
 (4) _PHY_DataReq                                          3     0      3    6432
                                             36 BANK0      3     0      3
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _nwkRxTaskHandler                                     4     4      0  156567
                                            109 BANK0      4     4      0
                       _nwkFrameFree
                       _nwkFrameNext
                      _nwkRouteFrame
              _nwkRxHandleIndication
           _nwkRxHandleReceivedFrame
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleReceivedFrame                            10     8      2   18612
                                             46 BANK0     10     8      2
                  _NWK_GroupIsMember
              _nwkRouteFrameReceived
               _nwkRxRejectDuplicate
                _nwkTxBroadcastFrame
 ---------------------------------------------------------------------------------
 (5) _nwkTxBroadcastFrame                                  7     5      2    9783
                                             36 BANK0      7     5      2
                             _memcpy
                      _nwkFrameAlloc
                               _rand
 ---------------------------------------------------------------------------------
 (5) _nwkRxRejectDuplicate                                13    11      2    4609
                                             33 BANK0     13    11      2
                     _SYS_TimerStart
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (4) _SYS_TimerStart                                       2     0      2    1425
                                             31 BANK0      2     0      2
                   _SYS_TimerStarted
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _placeTimer                                          14    12      2     668
                                             17 BANK0     14    12      2
 ---------------------------------------------------------------------------------
 (5) _SYS_TimerStarted                                     4     2      2     179
                                             17 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _nwkRouteFrameReceived                               12    10      2    2289
                                             26 BANK0     12    10      2
                 _NWK_RouteFindEntry
                  _NWK_RouteNewEntry
 ---------------------------------------------------------------------------------
 (6) _NWK_RouteNewEntry                                    9     7      2     293
                                             17 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleIndication                                5     3      2  121872
                                            104 BANK0      5     3      2
                 _nwkRxIndicateFrame
                       _nwkRxSendAck
 ---------------------------------------------------------------------------------
 (5) _nwkRxSendAck                                         6     4      2    7521
                                             40 BANK0      6     4      2
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRxIndicateFrame                                  26    24      2  113953
                                             98 BANK0      6     4      2
                                              0 BANK3     20    20      0
                   Absolute function *
                         _appDataInd *
                    _appManagementEp *
                _nwkFramePayloadSize
                _nwkRxServiceDataInd *
 ---------------------------------------------------------------------------------
 (6) _nwkRxServiceDataInd                                  6     4      2    3575
                                             90 BANK0      6     4      2
              _nwkRouteErrorReceived
                   _nwkTxAckReceived
 ---------------------------------------------------------------------------------
 (7) _nwkTxAckReceived                                     8     6      2    1076
                                             23 BANK0      8     6      2
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (4) _nwkFrameNext                                         6     4      2     684
                                             17 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (7) _nwkRouteErrorReceived                                5     3      2    2298
                                             28 BANK0      5     3      2
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (6) _nwkRouteRemove                                       5     2      3    2067
                                             23 BANK0      5     2      3
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFreeEntry                                   2     0      2     301
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _nwkFramePayloadSize                                  4     2      2     197
                                             17 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (6) _appManagementEp                                      6     4      2   56363
                                             90 BANK0      6     4      2
                    _app_aes_decrypt
                 _check_multicast_rx
                   _exract_sink_addr
                             _strstr
 ---------------------------------------------------------------------------------
 (7) _exract_sink_addr                                    15    13      2   20861
                                             45 BANK0     15    13      2
          _DATAEE_WriteByte_Platform
                             _memcpy
                             _memset
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (8) _strtol                                              16    10      6    2579
                                             29 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (9) _toupper                                              1     1      0      96
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (9) _isspace                                              3     3      0     130
                                             17 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (9) _isdigit                                              3     3      0      99
                                             17 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (9) _isalpha                                              3     3      0     229
                                             20 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (10) _isupper                                             3     3      0      99
                                             17 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _strstr                                               4     0      4    2153
                                             30 BANK0      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (8) _strncmp                                              7     1      6     504
                                             23 BANK0      7     1      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     3      3     442
                                             17 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (8) _strchr                                               5     1      4     332
                                             17 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte_Platform                            3     0      3    7596
                                             21 BANK0      3     0      3
                   _DATAEE_WriteByte
      _PHY_Get_Packet_Rssi_Threshold (ARG)
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    2210
                                             17 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (6) _appDataInd                                           8     6      2   52294
                                             90 BANK0      8     6      2
             _CircularBufferPushBack
                 _CircularBufferSize
                    _app_aes_decrypt
                 _check_multicast_rx
                 _get_free_rx_buffer
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (7) _get_free_rx_buffer                                   3     1      2     259
                                             17 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _check_multicast_rx                                   2     0      2     712
                                             22 BANK0      2     0      2
                  _NWK_GroupIsMember
 ---------------------------------------------------------------------------------
 (7) _app_aes_decrypt                                    221   218      3   32318
                                             84 BANK0      6     3      3
                                              0 BANK1    215   215      0
             _AES_CBC_decrypt_buffer
                    _AES_init_ctx_iv
                          _crc16_app
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _crc16_app                                           12     6      6    1722
                                             34 BANK0     12     6      6
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
 ---------------------------------------------------------------------------------
 (3) _CRC_CalculatedResultGet                             10     8      2     520
                                             24 BANK0     10     8      2
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (4) _CRC_ReverseValue                                     7     5      2     246
                                             17 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (3) _CRC_8BitDataWrite                                    1     1      0      31
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _AES_init_ctx_iv                                      6     0      6    9573
                                             40 BANK0      6     0      6
                       _KeyExpansion
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _KeyExpansion                                        23    19      4    2725
                                             17 BANK0     23    19      4
 ---------------------------------------------------------------------------------
 (8) _AES_CBC_decrypt_buffer                              30    22      8   13869
                                             54 BANK0     30    22      8
                          _InvCipher
                          _XorWithIv
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _XorWithIv                                            6     2      4     608
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (9) _InvCipher                                            5     1      4    6521
                                             49 BANK0      5     1      4
                        _AddRoundKey
                      _InvMixColumns
                       _InvShiftRows
                        _InvSubBytes
 ---------------------------------------------------------------------------------
 (10) _InvSubBytes                                        10     8      2     426
                                             17 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (10) _InvShiftRows                                        3     1      2     984
                                             17 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (10) _InvMixColumns                                      31    29      2    3222
                                             18 BANK0     31    29      2
                              _xtime
 ---------------------------------------------------------------------------------
 (9) _xtime                                                1     1      0      62
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (8) _AddRoundKey                                         12     8      4    1393
                                             17 BANK0     12     8      4
 ---------------------------------------------------------------------------------
 (5) _CircularBufferSize                                   8     6      2     405
                                             17 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrame                                        4     2      2   14829
                                             49 BANK0      4     2      2
                   _NWK_RouteNextHop
                       _nwkFrameFree
                        _nwkIsRouter
             _nwkRouteSendRouteError
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRouteSendRouteError                               9     4      5    7760
                                             40 BANK0      9     4      5
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkFrameCommandInit                                  2     0      2     244
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _nwkFrameFree                                         2     0      2     378
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqTaskHandler                                4     4      0   25553
                                             67 BANK0      4     4      0
                  _nwkDataReqConfirm
                _nwkDataReqSendFrame
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqSendFrame                                  9     7      2   14245
                                             40 BANK0      9     7      2
                             _memcpy
                      _nwkFrameAlloc
                        _nwkIsRouter
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkTxFrame                                           6     4      2    4477
                                             34 BANK0      6     4      2
                  _nwkRoutePrepareTx
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                 2     0      2     720
                                             29 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8     720
                                             17 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (7) _nwkRoutePrepareTx                                    6     4      2    2718
                                             28 BANK0      6     4      2
                  _NWK_GroupIsMember
                   _NWK_RouteNextHop
 ---------------------------------------------------------------------------------
 (8) _NWK_RouteNextHop                                     5     2      3    1766
                                             23 BANK0      5     2      3
                 _NWK_RouteFindEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFindEntry                                   6     3      3    1223
                                             17 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (5) _NWK_GroupIsMember                                    5     3      2     442
                                             17 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) _nwkIsRouter                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _nwkFrameAlloc                                        5     3      2    2287
                                             25 BANK0      5     3      2
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6    2033
                                             17 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqConfirm                                    6     4      2   11147
                                             61 BANK0      6     4      2
                        _appDataConf *
 ---------------------------------------------------------------------------------
 (5) _appDataConf                                          3     1      2   10789
                                             58 BANK0      3     1      2
                     _free_tx_buffer
 ---------------------------------------------------------------------------------
 (6) _free_tx_buffer                                      10     7      3   10610
                                             48 BANK0     10     7      3
             _CircularBufferPushBack
 ---------------------------------------------------------------------------------
 (4) _CircularBufferPushBack                              12     8      4   10037
                                             36 BANK0     12     8      4
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              13     6      7    6100
                                             23 BANK0     13     6      7
                             ___wmul (ARG)
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2932
                                             17 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYS_Init                                             0     0      0     757
                           _NWK_Init
                           _PHY_Init
                      _SYS_TimerInit
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PHY_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NWK_Init                                             1     1      0     757
                                             21 BANK0      1     1      0
                     _nwkDataReqInit
                       _nwkFrameInit
                       _nwkGroupInit
                       _nwkRouteInit
                          _nwkRxInit
                          _nwkTxInit
 ---------------------------------------------------------------------------------
 (3) _nwkTxInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _nwkRxInit                                            1     1      0     410
                                             20 BANK0      1     1      0
                   _NWK_OpenEndpoint
 ---------------------------------------------------------------------------------
 (2) _NWK_OpenEndpoint                                     3     1      2     311
                                             17 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _nwkRouteInit                                         1     1      0     112
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _nwkGroupInit                                         1     1      0      68
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkFrameInit                                         1     1      0      68
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1507
                     _CRC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
           _SystemArbiter_Initialize
                    _TMR0_Initialize
                    _TMR3_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     822
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2     111
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2     111
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetOverrunErrorHandler                         2     0      2     200
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetFramingErrorHandler                         2     0      2     200
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_SetErrorHandler                                2     0      2     200
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      2     2      0     289
                                             19 BANK0      2     2      0
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (5) _TMR3_SetInterruptHandler                             2     0      2     289
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     289
                                             19 BANK0      2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     289
                                             17 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _SystemArbiter_Initialize                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                             17 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       5     5      0      92
                                             17 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            1     1      0       0
                                             16 BANK0      1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _Timer0Handler *
 ---------------------------------------------------------------------------------
 (14) _Timer0Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (16) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _UART1_rx_vect_isr                                   3     3      0      25
                                              0 BANK0      3     3      0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (16) _UART1_Receive_ISR                                   0     0      0      25
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
                 _UART_error_handler *
 ---------------------------------------------------------------------------------
 (17) _UART_error_handler                                  2     2      0      25
                         _UART1_Read
                  _UART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (18) _UART1_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _UART1_Read                                          1     1      0      24
 ---------------------------------------------------------------------------------
 (17) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (17) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _TMR3_ISR                                           10    10      0    1765
                                              6 BANK0     10    10      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (16) _TMR3_WriteTimer                                     2     0      2     165
 ---------------------------------------------------------------------------------
 (16) _TMR3_CallBack                                       0     0      0    1600
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                _prvvTIMERExpiredISR *
 ---------------------------------------------------------------------------------
 (17) _prvvTIMERExpiredISR                                 0     0      0    1600
                   Absolute function *
                     _TMR3_StopTimer
              _xMBRTUTimerT35Expired *
 ---------------------------------------------------------------------------------
 (18) _xMBRTUTimerT35Expired                               3     3      0    1600
                                              3 BANK0      3     3      0
                           __fassert
               _vMBPortTimersDisable
                   _xMBPortEventPost
 ---------------------------------------------------------------------------------
 (19) _xMBPortEventPost                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _vMBPortTimersDisable                                0     0      0       0
                     _TMR3_StopTimer
 ---------------------------------------------------------------------------------
 (20) _TMR3_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (19) __fassert                                            6     0      6    1553
                             _printf
 ---------------------------------------------------------------------------------
 (20) _printf                                             26    16     10    1037
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (21) _putch                                               1     0      1      66
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (22) _UART1_Write                                         1     0      1      44
 ---------------------------------------------------------------------------------
 (21) ___lwmod                                             5     1      4     209
 ---------------------------------------------------------------------------------
 (21) ___lwdiv                                             7     3      4     262
 ---------------------------------------------------------------------------------
 (18) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 22
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CRC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _SystemArbiter_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _SYS_Init
     _NWK_Init
       _nwkDataReqInit
       _nwkFrameInit
       _nwkGroupInit
       _nwkRouteInit
       _nwkRxInit
         _NWK_OpenEndpoint
       _nwkTxInit
     _PHY_Init
     _SYS_TimerInit
   _SYS_TaskHandler
     _NWK_TaskHandler
       _nwkDataReqTaskHandler
         _nwkDataReqConfirm
           _appDataConf *
             _free_tx_buffer
               _CircularBufferPushBack
                 ___wmul
                 _memcpy
                   ___wmul (ARG)
                   _strlen (ARG)
         _nwkDataReqSendFrame
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
           _nwkFrameAlloc
             _memset
           _nwkIsRouter
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___lmul
       _nwkRxTaskHandler
         _nwkFrameFree
         _nwkFrameNext
         _nwkRouteFrame
           _NWK_RouteNextHop
             _NWK_RouteFindEntry
           _nwkFrameFree
           _nwkIsRouter
           _nwkRouteSendRouteError
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___lmul
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___lmul
         _nwkRxHandleIndication
           _nwkRxIndicateFrame
             Absolute function(Fake) *
             _appDataInd *
               _CircularBufferPushBack
                 ___wmul
                 _memcpy
                   ___wmul (ARG)
                   _strlen (ARG)
               _CircularBufferSize
               _app_aes_decrypt
                 _AES_CBC_decrypt_buffer
                   _InvCipher
                     _AddRoundKey
                     _InvMixColumns
                       _xtime
                     _InvShiftRows
                     _InvSubBytes
                   _XorWithIv
                   _memcpy
                     ___wmul (ARG)
                     _strlen (ARG)
                 _AES_init_ctx_iv
                   _KeyExpansion
                   _memcpy
                     ___wmul (ARG)
                     _strlen (ARG)
                 _crc16_app
                   _CRC_8BitDataWrite
                   _CRC_CalculatedResultGet
                     _CRC_ReverseValue
                 _memcpy
                   ___wmul (ARG)
                   _strlen (ARG)
               _check_multicast_rx
                 _NWK_GroupIsMember
               _get_free_rx_buffer
               _memcpy
                 ___wmul (ARG)
                 _strlen (ARG)
               _memset
             _appManagementEp *
               _app_aes_decrypt
                 _AES_CBC_decrypt_buffer
                   _InvCipher
                     _AddRoundKey
                     _InvMixColumns
                       _xtime
                     _InvShiftRows
                     _InvSubBytes
                   _XorWithIv
                   _memcpy
                     ___wmul (ARG)
                     _strlen (ARG)
                 _AES_init_ctx_iv
                   _KeyExpansion
                   _memcpy
                     ___wmul (ARG)
                     _strlen (ARG)
                 _crc16_app
                   _CRC_8BitDataWrite
                   _CRC_CalculatedResultGet
                     _CRC_ReverseValue
                 _memcpy
                   ___wmul (ARG)
                   _strlen (ARG)
               _check_multicast_rx
                 _NWK_GroupIsMember
               _exract_sink_addr
                 _DATAEE_WriteByte_Platform
                   _DATAEE_WriteByte
                   _PHY_Get_Packet_Rssi_Threshold (ARG)
                 _memcpy
                   ___wmul (ARG)
                   _strlen (ARG)
                 _memset
                 _strstr
                   _strchr
                   _strlen
                   _strncmp
                     _strlen (ARG)
                 _strtol
                   ___lmul
                   _isalpha
                     _isupper
                   _isdigit
                   _isspace
                   _toupper
               _strstr
                 _strchr
                 _strlen
                 _strncmp
                   _strlen (ARG)
             _nwkFramePayloadSize *
             _nwkRxServiceDataInd *
               _nwkRouteErrorReceived
                 _nwkRouteRemove
                   _NWK_RouteFindEntry
                   _NWK_RouteFreeEntry
               _nwkTxAckReceived
                 _nwkFrameNext
           _nwkRxSendAck
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___lmul
         _nwkRxHandleReceivedFrame
           _NWK_GroupIsMember
           _nwkRouteFrameReceived
             _NWK_RouteFindEntry
             _NWK_RouteNewEntry
           _nwkRxRejectDuplicate
             _SYS_TimerStart
               _SYS_TimerStarted
               _placeTimer
             _nwkRouteRemove
               _NWK_RouteFindEntry
               _NWK_RouteFreeEntry
           _nwkTxBroadcastFrame
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
             _nwkFrameAlloc
               _memset
             _rand
               ___lmul
       _nwkTxTaskHandler
         Absolute function(Fake) *
         _PHY_DataReq *
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
         _SYS_TimerStart *
           _SYS_TimerStarted
           _placeTimer
         _nwkDataReqTxConf *
           _nwkFrameFree
         _nwkFrameFree *
         _nwkFrameNext *
         _nwkRouteFrameSent *
           _NWK_RouteFindEntry
           _NWK_RouteFreeEntry
           _nwkRouteNormalizeRanks
     _PHY_TaskHandler
       _radio_engine
         _DIO0_Receive_ISR
           _PHY_DataInd
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
             _nwkFrameAlloc
               _memset
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _get_lqi
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
           _get_rssi
           _queue_rx_led_event
             _queueLedEvent
               _CircularBufferPushBack
                 ___wmul
                 _memcpy
                   ___wmul (ARG)
                   _strlen (ARG)
               _CircularBufferSpace
                 _CircularBufferSize
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _PHY_DataConf
           _nwkTxConvertPhyStatus
         _SX1276Read
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
         _cad
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _get_timer0base
           _set_timer0base
           _start_radio_cad
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _idle
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _get_timer0base
         _initRadio
           _PHY_SetChannel
             _setFrequency
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
               ___lldiv
                 _getSignalBandwidth (ARG)
                   _SX1276Read
                     _SX1276ReadBuffer
                       _SPI1_ExchangeByte
                       _SPI1_ReadBlock
                         _SPI1_ExchangeByte
                 _getSpreadingFactor (ARG)
                   _SX1276Read
                     _SX1276ReadBuffer
                       _SPI1_ExchangeByte
                       _SPI1_ReadBlock
                         _SPI1_ExchangeByte
               ___llmod
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSyncWord
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _queue_tx_led_event
           _queueLedEvent
             _CircularBufferPushBack
               ___wmul
               _memcpy
                 ___wmul (ARG)
                 _strlen (ARG)
             _CircularBufferSpace
               _CircularBufferSize
         _rand
           ___lmul
         _receive
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _implicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _set_timer0base
         _sx1276_send
           _SPI1_ExchangeByte
           _SPI1_WriteBlock
             _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _idle
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
     _SYS_TimerTaskHandler
       _nwkRxDuplicateRejectionTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
       _nwkTxAckWaitTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
         _nwkTxConfirm
       _nwkTxDelayTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
       _placeTimer *
   _TMR0_SetInterruptHandler
   _application
     _MBRTUStack
       _CircularBufferEmpty
       _UART1_is_rx_ready
       _UART1_is_tx_ready
       _UART_error_handler
         _UART1_Read
         _UART1_is_rx_ready
       _eMBPoll
         Absolute function(Fake) *
         ___wmul *
         _eMBFuncReadHoldingRegister *
           ___wmul (ARG)
           _eMBRegHoldingCB (ARG)
             _load_on_demand_mb_regs
               _get_loop_time
             _rw_mb_regs
           _prveMBError2Exception (ARG)
         _eMBFuncReadWriteMultipleHoldingRegister *
           ___wmul (ARG)
           _eMBRegHoldingCB (ARG)
             _load_on_demand_mb_regs
               _get_loop_time
             _rw_mb_regs
           _prveMBError2Exception (ARG)
         _eMBFuncWriteHoldingRegister *
           ___wmul (ARG)
           _eMBRegHoldingCB (ARG)
             _load_on_demand_mb_regs
               _get_loop_time
             _rw_mb_regs
           _prveMBError2Exception (ARG)
         _eMBFuncWriteMultipleHoldingRegister *
           ___wmul (ARG)
           _eMBRegHoldingCB (ARG)
             _load_on_demand_mb_regs
               _get_loop_time
             _rw_mb_regs
           _prveMBError2Exception (ARG)
         _eMBRTUReceive *
           __fassert
             _printf
               ___lwdiv
               ___lwmod
               _putch
                 _UART1_Write
           _usMBCRC16
         _eMBRTUSend *
           _usMBCRC16
           _vMBPortSerialEnable
         _vMBPortTimersDelay *
         _xMBPortEventGet *
         _xMBPortEventPost *
       _fill_rx_regs
         _CircularBufferEmpty
         _CircularBufferPopFront
           ___wmul
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
       _handle_rw_regs
         _CircularBufferEmpty
         _CircularBufferPopFront
           ___wmul
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
         _NWK_GroupAdd
           _nwkGroupSwitch
         _PHY_Get_Packet_Rssi_Threshold
         _PHY_Set_Packet_Rssi_Threshold
         _eMBDisable
           Absolute function(Fake) *
           _eMBRTUStop *
             _vMBPortSerialEnable
             _vMBPortTimersDisable
               _TMR3_StopTimer
         _eMBEnable
           Absolute function(Fake) *
           _eMBRTUStart *
             _vMBPortSerialEnable
             _vMBPortTimersEnable
               _TMR3_StartTimer
               _TMR3_StopTimer
               _TMR3_WriteTimer
         _eMBInit
           _eMBRTUInit
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _xMBPortSerialInit
             _xMBPortTimersInit
               _TMR3_SetInterruptHandler
               ___wmul
           _xMBPortEventInit
         _nwkGroupInit
         _set_eeprom_sync
         _set_parity
         _set_uart_baud
       _handle_rx_regs
         _CircularBufferSize
       _handle_tx_regs
         _NWK_DataReq
         _app_aes_encrypt
           _AES_CBC_encrypt_buffer
             _Cipher
               _AddRoundKey
               _MixColumns
                 _xtime
               _ShiftRows
               _SubBytes
             _XorWithIv
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
           _AES_init_ctx_iv
             _KeyExpansion
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
           _crc16_app
             _CRC_8BitDataWrite
             _CRC_CalculatedResultGet
               _CRC_ReverseValue
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
           _rand
             ___lmul
         _compute_option
         _get_free_tx_buffer
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _needed_packet_length
       _handle_write_only_regs
         _cmdSetSink
           _DATAEE_WriteByte
           _NWK_DataReq
           _app_aes_encrypt
             _AES_CBC_encrypt_buffer
               _Cipher
                 _AddRoundKey
                 _MixColumns
                   _xtime
                 _ShiftRows
                 _SubBytes
               _XorWithIv
               _memcpy
                 ___wmul (ARG)
                 _strlen (ARG)
             _AES_init_ctx_iv
               _KeyExpansion
               _memcpy
                 ___wmul (ARG)
                 _strlen (ARG)
             _crc16_app
               _CRC_8BitDataWrite
               _CRC_CalculatedResultGet
                 _CRC_ReverseValue
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
             _rand
               ___lmul
           _get_free_tx_buffer
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
           _memset
           _needed_packet_length
           _strlen
         _keycmp
         _set_eeprom_sync
       _prvvUARTRxISR
         Absolute function(Fake) *
         _xMBRTUReceiveFSM *
           __fassert
             _printf
               ___lwdiv
               ___lwmod
               _putch
                 _UART1_Write
           _vMBPortTimersEnable
             _TMR3_StartTimer
             _TMR3_StopTimer
             _TMR3_WriteTimer
           _xMBPortSerialGetByte
             _UART1_Read
       _prvvUARTTxReadyISR
         Absolute function(Fake) *
         _xMBRTUTransmitFSM *
           __fassert
             _printf
               ___lwdiv
               ___lwmod
               _putch
                 _UART1_Write
           _vMBPortSerialEnable
           _xMBPortEventPost
           _xMBPortSerialPutByte
             _UART1_Write
     _handle_led_events
       _CircularBufferEmpty
       _CircularBufferPopFront
         ___wmul
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
       _get_timer0base
       _set_timer0base
     _nwkEnableRouting
     _reset_handler
     _start_loop_timer
       _TMR5_StartTimer
       _TMR5_WriteTimer
     _stop_loop_timer
       _TMR5_ReadTimer
       _TMR5_StopTimer
     _sync_eeprom
       _DATAEE_WriteByte_Platform
         _DATAEE_WriteByte
         _PHY_Get_Packet_Rssi_Threshold (ARG)
       _PHY_Get_Packet_Rssi_Threshold
     _uart_default_engine
       _eMBInit
         _eMBRTUInit
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _xMBPortSerialInit
           _xMBPortTimersInit
             _TMR3_SetInterruptHandler
             ___wmul
         _xMBPortEventInit
       _get_timer0base
       _set_parity
       _set_timer0base
       _set_uart_baud
   _bootLoadApplication
     _CircularBufferInit
       ___lwdiv
     _DATAEE_ReadByte_Platform
       _DATAEE_ReadByte
       _DATAEE_WriteByte
     _DATAEE_WriteByte_Platform
       _DATAEE_WriteByte
       _PHY_Get_Packet_Rssi_Threshold (ARG)
     _NWK_GroupAdd
       _nwkGroupSwitch
     _NWK_OpenEndpoint
     _NWK_SetAddr
       _PHY_SetShortAddr
     _NWK_SetPanId
       _PHY_SetPanId
     _PHY_Get_Packet_Rssi_Threshold
     _PHY_Get_Packet_Rssi_Threshold_Limits
     _PHY_Set_Packet_Rssi_Threshold
     _TMR0_SetInterruptHandler
     _TMR3_SetInterruptHandler
     _UART1_SetErrorHandler
     _UART1_SetFramingErrorHandler
     _UART1_SetOverrunErrorHandler
     _crc16_app
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
     _eMBEnable
       Absolute function(Fake) *
       _eMBRTUStart *
         _vMBPortSerialEnable
         _vMBPortTimersEnable
           _TMR3_StartTimer
           _TMR3_StopTimer
           _TMR3_WriteTimer
     _eMBInit
       _eMBRTUInit
         ___lldiv
           _getSignalBandwidth (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         _xMBPortSerialInit
         _xMBPortTimersInit
           _TMR3_SetInterruptHandler
           ___wmul
       _xMBPortEventInit
     _ledInit
       _CircularBufferInit
         ___lwdiv
       _queueLedEvent
         _CircularBufferPushBack
           ___wmul
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
         _CircularBufferSpace
           _CircularBufferSize
     _loadMACAddr
       _DIA_ReadByte
     _memcpy
       ___wmul (ARG)
       _strlen (ARG)
     _set_parity
     _set_uart_baud

 _TMR0_ISR (ROOT)
   _TMR0_CallBack
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _Timer0Handler *

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *
     _UART_error_handler *
       _UART1_Read
       _UART1_is_rx_ready

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _prvvTIMERExpiredISR *
       Absolute function(Fake) *
       _TMR3_StopTimer *
       _xMBRTUTimerT35Expired *
         __fassert
           _printf
             ___lwdiv
             ___lwmod
             _putch
               _UART1_Write
         _vMBPortTimersDisable
           _TMR3_StopTimer
         _xMBPortEventPost
   _TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     52B      37       32.3%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0      A0      24       62.5%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0      80      23       50.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0      E0      21       87.5%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      E0      19       87.5%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0     100      17      100.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      F8      15       96.9%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      F4      13       95.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100     14      FD      11       98.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FF       9       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D7     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     71      8C       5       87.5%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53      0       0       1        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0      28       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     954      32        0.0%
DATA                 0      0     EA7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Mar 09 23:08:42 2021

                                    rw_mb_regs@pucRegBuffer 0073  
                            nwkRouteFrameReceived@discovery 0080  
                                     xMBPortEventGet@eEvent 0071  
                                             ?_fill_rx_regs 0060  
                                         _SPI1_ExchangeByte BA2A  
                                                _RSSITarget 00E8  
                        __end_of_eMBFuncReadHoldingRegister 5E2A  
                                _eMBFuncReadHoldingRegister 5CB4  
                               __end_of_prvvTIMERExpiredISR BA62  
                                            _setCodingRate4 AB7E  
                               xMBPortSerialGetByte@pucByte 0071  
                                        _commandByteCounter 026C  
                                             ?_KeyExpansion 0071  
                                            ?_get_loop_time 0071  
                                             ??_eMBRTUStart 0073  
                                        ?_SPI1_ExchangeByte 0060  
                                   bootLoadApplication@temp 00AC  
                                    _uart_default_state_var 025B  
                                       ___wmul@multiplicand 0073  
                                         ??_PHY_TaskHandler 00BF  
                                         ??_TMR5_WriteTimer 0073  
                            __end_of_nwkRouteNormalizeRanks AE0A  
                                            _SYS_TimerStart B976  
                                   ??_nwkDataReqTaskHandler 00A3  
                             __size_of_xMBPortSerialGetByte 0018  
                                  __size_of_start_radio_cad 0012  
                                   ?_nwkTxDelayTimerHandler 0081  
                                                       l422 A83E  
                                                       l423 A840  
                                                       l611 1562  
                                                       l621 173E  
                                                       l614 15AA  
                                                       l631 1876  
                                                       l632 186C  
                                                       l608 150C  
                                                       l713 27C8  
                                                       l537 09D8  
                                                       l647 394C  
                                                       l576 96C0  
                                                       l595 55AE  
                                                       l931 46D6  
                                                       l756 99CE  
                                                       l684 8E1C  
                                                       l941 4796  
                                                       l933 471E  
                                                       l599 5654  
                                                       l951 483E  
                                                       l943 47C6  
                                                       l961 48C6  
                                                       l953 485C  
                                                       l945 47E4  
                                                       l937 4766  
                                                       l970 8114  
                                                       l699 6F26  
                                                       l971 8054  
                                                       l963 48D2  
                                                       l955 487A  
                                                       l947 4802  
                                                       l980 808A  
                                                       l972 805A  
                                                       l981 8090  
                                                       l973 8060  
                                                       l957 4898  
                                                       l949 4820  
                                                       l982 8096  
                                                       l974 8066  
                                                       l983 809C  
                                                       l975 806C  
                                                       l959 48A4  
                                                       l976 8072  
                                                       l977 8078  
                                                       l969 804E  
                                                       l978 807E  
                                                       l979 8084  
                                                       _GIE 01FE97  
                                  __end_of_DIO0_Receive_ISR 82D0  
                                                       _SNR 025F  
                                        _CircularBufferInit 8D3C  
                                        _CircularBufferSize A3A0  
                                      ?_uart_default_engine 0060  
                                  bootLoadApplication@temp1 00B2  
                                                       _cad 7CC6  
                                              ?_loadMACAddr 0060  
                                         _NWK_GroupIsMember B0D6  
                                        nwkRouteFrame@frame 0091  
                                           nwkRxSendAck@ack 008C  
                                   __size_of_PMD_Initialize 0032  
                                       ??_SPI1_ExchangeByte 0071  
                                                       prod 003FF3  
                                    CircularBufferEmpty@ctx 0071  
                                               ?_MBRTUStack 0060  
                                                       tosl 003FFD  
                                                       wreg 003FE8  
                                               get_lqi@rssi 00B2  
                                  nwkDataReqSendFrame@frame 008F  
                                              ___flmul@aexp 008C  
                                              ___flmul@bexp 0091  
                                    CircularBufferInit@size 007D  
                                      _FirmwareVersionMajor FEB1  
                                  _DATAEE_ReadByte_Platform 6496  
                                        _UART1_Transmit_ISR B23A  
                                      _FirmwareVersionMinor FEB0  
                                              ___flmul@sign 008B  
                                              ___flmul@temp 0096  
                                              ___flmul@prod 0092  
                                        ?_NWK_GroupIsMember 0071  
                                            ?_queueLedEvent 0090  
                                          _SX1276ReadBuffer B718  
                                         ??_xMBPortEventGet 0073  
                                     __end_of_SYS_TimerInit BCCA  
                             __size_of_xMBPortSerialPutByte 0012  
                   PHY_Get_Packet_Rssi_Threshold_Limits@max 0071  
                   PHY_Get_Packet_Rssi_Threshold_Limits@min 0073  
                                     queueLedEvent@LEDState 0092  
                                       ?_CircularBufferInit 0071  
                                               ?_SX1276Read 0060  
                                           ??_eMBRTUReceive 0081  
                                           PHY_DataReq@data 0084  
                                    NWK_GroupIsMember@group 0071  
                                       ?_CircularBufferSize 0071  
    eMBFuncReadWriteMultipleHoldingRegister@usRegWriteCount 00A6  
                                           ?_get_timer0base 0071  
                                              ___fltol@exp1 00B1  
                                                      ?_cad 0060  
                                                      l1204 5A5A  
                                                      l1054 A15E  
                                                      l1039 A958  
                                           nwkTxFrame@frame 0082  
                                                      l1057 A178  
                                                      l2135 A324  
                                                      l2136 A2FE  
                                                      l2144 7494  
                                                      l3040 2080  
                                                      l2217 AF92  
                                                      l2331 90A6  
                                           _timer3ReloadVal 02E8  
                                                      l2340 6BC8  
                                                      l1197 59C6  
                                                      l1703 A8F8  
                                                      l4023 7946  
                                                      l3161 50C8  
                                                      l2353 4210  
                                                      l4026 7A06  
                                                      l1563 BA3A  
                                                      l4036 79FC  
                                                      l2276 B7F0  
                                                      l3181 9A90  
                                                      l2349 5E24  
                                                      l3098 8876  
                                                      l4138 9EEC  
                                                      l4090 46AC  
                                                      l4067 B1C0  
                                                      l1932 A4BA  
                                                      l3623 B3B6  
                                           PHY_DataReq@size 0086  
                                                      l1939 A9CA  
                                                      l4372 878E  
                                                      l3661 3DDC  
                                                      l3662 3DE6  
                                                      l3583 AD9E  
                                                      l4519 A38E  
                                                      l3664 3E06  
                                                      l2865 AE48  
                                                      l4713 284E  
                                                      l3649 3D30  
                                                      l4730 2AE8  
                                                      l4722 2A62  
                                                      l2884 4D60  
                                                      l4644 36BC  
                                                      l4628 35EA  
                                                      l4901 4CAA  
                                                      l4653 3720  
                                                      l4629 35C8  
                                                      l4761 6194  
                                                      l4754 6116  
                                            ?_prvvUARTRxISR 0060  
                                      nwkDataReqConfirm@req 009D  
                                      _SYS_TimerTaskHandler 6BCE  
                                                      STR_1 FFF7  
                                                      STR_2 FFF2  
                                                      STR_3 FFF2  
                                                      STR_4 FFFC  
                                                      STR_5 FF5F  
                                                      STR_6 FFDE  
                                                      STR_8 FF3B  
                                                      STR_9 FFB3  
                                                      _LATA 003FBA  
                                                      _LATB 003FBB  
                                                      _LATC 003FBC  
                                __end_of_explicitHeaderMode BAB0  
                                                      _PMD0 0039C0  
                                                      _PMD1 0039C1  
                                                      _PMD2 0039C2  
                                                      _PMD3 0039C3  
                                                      _PMD4 0039C4  
                                                      _PMD5 0039C5  
                                                      _PMD6 0039C6  
                                                      _PMD7 0039C7  
                                                      u9100 35AE  
                                                      u9110 35B0  
                                                      u9300 371C  
                                                      u9140 35F2  
                                                      u8600 9EAE  
                                                      u9090 359E  
                                                      u6755 A8A4  
                                                      u6756 A8A6  
                                            _rx_ctl_mb_regs 0580  
                                                      u9350 3772  
                                                      u9270 3704  
                                                      u9510 2A5E  
                                                      u8630 A35C  
                                                      u8570 4F5C  
                                                      u9540 2AB4  
                                                      u9460 285A  
                                                      u9700 71A2  
                                                      u9550 2AD2  
                                                      u9630 7EC4  
                                                      u9720 723C  
                                                      u9635 7EBA  
                                                      u8780 6E98  
                                                      u9740 8596  
                                                      u9670 7F3C  
                                                      u9830 61D0  
                                                      u8960 8198  
                                                      u9760 860A  
                                                      u8970 81B6  
                                         ?_PHY_SetShortAddr 0071  
                                       _CircularBufferEmpty B486  
                                                      _RSSI 0260  
                                                      _WPUA 003A41  
                                                      _WPUB 003A51  
                                                      _WPUC 003A61  
                                                      _WPUE 003A81  
                                _nwkRouteFrameReceived$6093 0081  
                                       _CircularBufferSpace B018  
                                                      _Rcon FE8D  
                                          PHY_DataInd@frame 0089  
                                       ?_UART1_Transmit_ISR 0060  
                          __end_of_nwkTxAckWaitTimerHandler 9AC4  
                                 AES_CBC_decrypt_buffer@buf 0098  
                                       ??_NWK_GroupIsMember 0073  
                                 AES_CBC_decrypt_buffer@ctx 0096  
                                                      _idle BC94  
                                                      _main B61E  
                                       nwkRouteFrame@header 0093  
                                          ?_NWK_TaskHandler 0060  
                                    ?_prveMBError2Exception 0060  
                                                      _rand A64E  
                                                      _sbox FD55  
                                                      fsr0h 003FEA  
                                                      fsr1h 003FE2  
                                                      indf0 003FEF  
                                                      fsr2h 003FDA  
                                                      fsr0l 003FE9  
                                                      indf1 003FE7  
                                                      indf2 003FDF  
                                                      fsr1l 003FE1  
                                                      fsr2l 003FD9  
                                        ??_PHY_SetShortAddr 0073  
                                                      btemp 0001  
                                           _rx_buffer_queue 02E3  
                                   __size_of_SPI1_ReadBlock 0038  
                                  nwkRxRejectDuplicate@diff 0089  
                                             _xFuncHandlers 03C9  
                                                      prodh 003FF4  
                                                      prodl 003FF3  
                                                      start 00AE  
                                           _timer5ReloadVal 024A  
                                         eMBDisable@eStatus 0073  
                                            NWK_DataReq@req 0071  
                                           _TMR3_Initialize AA00  
                                 __end_of_SPI1_ExchangeByte BA46  
                             ??_UART1_SetTxInterruptHandler 0073  
                nwkRxDuplicateRejectionTimerHandler@restart 0083  
                                    CircularBufferSpace@ctx 0079  
                                    __end_of_setCodingRate4 ABC8  
                                         ?_xMBPortEventInit 0060  
                                __end_of_queue_rx_led_event 99A6  
                                         _UART1_rx_vect_isr AAE8  
                                             _InvMixColumns 00B6  
                                            ??_fill_rx_regs 008E  
                                              ___param_bank 000000  
         eMBFuncWriteMultipleHoldingRegister@ucRegByteCount 009C  
                                      __end_of_DIA_ReadByte B844  
                                ??_nwkRxHandleReceivedFrame 0090  
                                         nwkFrameFree@frame 0071  
                                           __end_of_eMBInit 7A0C  
                                 CircularBufferPopFront@ctx 0084  
                                           __end_of_eMBPoll 46B0  
                               _pxMBFrameCBTransmitterEmpty 0248  
                                 CircularBufferPopFront@val 0086  
                                      ??_CircularBufferInit 0079  
                                               _sync_eeprom 46B0  
                                __size_of_UART1_is_rx_ready 0012  
                                      ??_CircularBufferSize 0073  
                                          _SYS_TimerStarted ABC8  
                                        ??_xMBPortEventInit 0071  
                                            ??_KeyExpansion 0075  
                                   ??_nwkRxHandleIndication 00CA  
                                            usMBCRC16@usLen 0073  
                                        ?_UART1_rx_vect_isr 0060  
                                                     ??_cad 0080  
                                             _xEventInQueue 0256  
                                              eMBInit@eMode 00A6  
                                 __size_of_DATAEE_WriteByte 0054  
                                       _vMBPortSerialEnable B866  
                                    __end_of_SYS_TimerStart B996  
                                __size_of_UART1_is_tx_ready 0010  
                                           _stop_loop_timer AB34  
                                   __end_of_TMR0_Initialize AD7E  
                                             ??_InvSubBytes 0073  
                               __end_of_nwkFramePayloadSize B3F0  
                                      ?_CircularBufferEmpty 0071  
                            __end_of_nwkTxDelayTimerHandler 9BDE  
                            ??_TMR0_DefaultInterruptHandler 0070  
                                        _vMBPortTimersDelay BD90  
                                      ?_CircularBufferSpace 0079  
                                          ?_eMBRegHoldingCB 007D  
                            __size_of_OSCILLATOR_Initialize 0020  
                                      ??_UART1_Transmit_ISR 0060  
                                          nwkTxFrame@header 0086  
                                         InvCipher@RoundKey 0093  
           eMBFuncWriteMultipleHoldingRegister@usRegAddress 009D  
                             __end_of_OSCILLATOR_Initialize B9B6  
                                  ??_nwkRouteSendRouteError 008D  
                                              ?_SX1276Write 007E  
                                                     l12200 4F52  
                                                     l20024 6C5E  
                                                     l20016 6BFE  
                                                     l12210 4FCA  
                                                     l13002 8778  
                                                     l20212 0E76  
                                                     l20108 0B66  
                                                     l20060 0A06  
                                                     l12214 4FEC  
                                                     l11510 B2B6  
                                                     l11502 B326  
                                                     l20150 0C98  
                                                     l20118 0BA8  
                                                     l20302 B63E  
                                                     l13120 614A  
                                                     l13112 6126  
                                                     l13008 87C6  
                                                     l20232 0EF0  
                                                     l20208 0E4E  
                                                     l20128 0BE4  
                                                     l20072 0A3C  
                                                     l20056 09E0  
                                                     l13034 7F02  
                                                     l13018 7EA6  
                                                     l13130 61BA  
                                                     l13122 6156  
                                                     l11514 B2D0  
                                                     l11506 B33E  
                                                     l12226 9E9E  
                                                     l14010 22DA  
                                                     l12410 B878  
                                                     l13210 9E56  
                                                     l13202 9E08  
                                                     l20138 0C20  
                                                     l13052 7F52  
                                                     l13044 7F2A  
                                                     l13132 61C6  
                                                     l13124 617C  
                                                     l12228 9EAA  
                                                     l14004 22D4  
                                                     l14100 759C  
                                                     l13212 9E64  
                                                     l20244 0F18  
                                                     l20236 0F08  
                                                     l20068 0A16  
                                                     l12510 813A  
                                                     l12174 ABEC  
                                                     l12190 4ECC  
                                                     l13046 7F36  
                                                     l13038 7F12  
                                                     l13118 6144  
                                                     l12238 9EDE  
                                                     l12254 A380  
                                                     l12246 A34C  
                                                     l13062 7176  
                                                     l12094 A9F4  
                                                     l14022 233E  
                                                     l14110 75BE  
                                                     l20166 0D20  
                                                     l12168 ABD2  
                                                     l12176 AC04  
                                                     l12248 A358  
                                                     l13304 2614  
                                                     l12096 A9F8  
                                                     l14024 2350  
                                                     l14120 75E0  
                                                     l20248 0F30  
                                                     l20088 0AF2  
                                                     l12610 627C  
                                                     l12602 6254  
                                                     l13322 2698  
                                                     l14130 7606  
                                                     l11642 9158  
                                                     l20098 0B2C  
                                                     l12524 81A0  
                                                     l12196 4F12  
                                                     l13148 6206  
                                                     l15020 7D3E  
                                                     l12364 6E22  
                                                     l13340 26F0  
                                                     l13308 2618  
                                                     l13252 24B2  
                                                     l13412 ACF4  
                                                     l13076 721C  
                                                     l14028 23B8  
                                                     l14060 9D22  
                                                     l13228 9CC8  
                                                     l11652 91DC  
                                                     l14300 ACB8  
                                                     l12518 816A  
                                                     l15014 7D1A  
                                                     l12630 62E0  
                                                     l12622 62B8  
                                                     l12614 6290  
                                                     l12606 6268  
                                                     l12382 6EA2  
                                                     l13270 2538  
                                                     l13414 ACF8  
                                                     l13422 AD08  
                                                     l14062 9D2C  
                                                     l14070 9D6C  
                                                     l14302 ACE8  
                                                     l12528 81AE  
                                                     l12800 36E0  
                                                     l12376 6E8E  
                                                     l13336 26EC  
                                                     l13248 24AE  
                                                     l13416 ACFC  
                                                     l13424 AD30  
                                                     l13088 856A  
                                                     l14064 9D36  
                                                     l14048 9D02  
                                                     l14080 7558  
                                                     l14136 760A  
                                                     l11656 91E8  
                                                     l11648 9160  
                                                     l13184 AF48  
                                                     l12810 36F6  
                                                     l12706 3540  
                                                     l15034 7D68  
                                                     l12626 62CC  
                                                     l12618 62A4  
                                                     l13354 2770  
                                                     l13290 25C0  
                                                     l13274 253C  
                                                     l13418 AD00  
                                                     l13098 85EA  
                                                     l13530 A5E2  
                                                     l13522 A59E  
                                                     l14314 80A2  
                                                     l14090 757A  
                                                     l14138 763E  
                                                     l12900 286C  
                                                     l12636 62F4  
                                                     l14404 90A0  
                                                     l13532 A5E6  
                                                     l14340 AFCC  
                                                     l14068 9D44  
                                                     l14350 B4EE  
                                                     l12750 35DA  
                                                     l12670 34D4  
                                                     l15038 7D6C  
                                                     l12638 6344  
                                                     l13454 929E  
                                                     l13462 92FE  
                                                     l14318 80AA  
                                                     l12816 3700  
                                                     l12736 357C  
                                                     l13368 27C4  
                                                     l14336 AFC0  
                                                     l14272 B1BA  
                                                     l14280 963C  
                                                     l14354 B50C  
                                                     l12850 3796  
                                                     l12674 34D8  
                                                     l12594 622C  
                                                     l14434 6BAC  
                                                     l13580 ADCC  
                                                     l12844 378C  
                                                     l12836 3766  
                                                     l12772 3630  
                                                     l12764 360E  
                                                     l12748 35D6  
                                                     l13900 2BA8  
                                                     l14436 6BC2  
                                                     l14700 8FE2  
                                                     l12774 3634  
                                                     l12782 3646  
                                                     l12694 351C  
                                                     l12942 2A0C  
                                                     l12598 6240  
                                                     l14438 6BC2  
                                                     l14542 41F8  
                                                     l14630 8AF2  
                                                     l14294 ACA8  
                                                     l14286 96B6  
                                                     l14702 9002  
                                                     l13584 AE00  
                                                     l12848 3794  
                                                     l12792 36AC  
                                                     l12872 27FA  
                                                     l13840 B0AA  
                                                     l13832 B0A2  
                                                     l13920 2D06  
                                                     l13912 2C7A  
                                                     l13904 2BEE  
                                                     l14480 5DF8  
                                                     l14296 ACAC  
                                                     l14640 7DE2  
                                                     l12698 3520  
                                                     l12890 283A  
                                                     l12874 27FE  
                                                     l15098 A474  
                                                     l14482 5E1E  
                                                     l14546 420A  
                                                     l14298 ACB0  
                                                     l14642 7DE8  
                                                     l18004 6492  
                                                     l12972 2AC4  
                                                     l12948 2A2A  
                                                     l12892 283E  
                                                     l12876 280E  
                                                     l13836 B0A6  
                                                     l13828 B09E  
                                                     l13940 AB8E  
                                                     l13924 2D4C  
                                                     l13916 2CC0  
                                                     l13908 2C34  
                                                     l14484 5E1E  
                                                     l14628 8AEC  
                                                     l14660 7E48  
                                                     l14644 7DEE  
                                                     l16236 AB60  
                                                     l18022 AF14  
                                                     l14750 8EB4  
                                                     l13846 B0AE  
                                                     l13870 B1E6  
                                                     l14582 84B4  
                                                     l14662 7E4E  
                                                     l14654 7E1E  
                                                     l14638 7DD2  
                                                     l15632 B5E8  
                                                     l17400 A314  
                                                     l19000 1FB6  
                                                     l12984 2B06  
                                                     l12968 2AA6  
                                                     l13944 AB9C  
                                                     l13928 2D92  
                                                     l14568 B41C  
                                                     l15642 A70E  
                                                     l17322 9464  
                                                     l17314 93E4  
                                                     l17330 00D0  
                                                     l18018 AF10  
                                                     l18106 A43A  
                                                     l18122 88DA  
                                                     l13970 96E2  
                                                     l13858 AD9A  
                                                     l12994 872E  
                                                     l13882 775A  
                                                     l13866 B1D8  
                                                     l14594 8542  
                                                     l14666 7E54  
                                                     l14682 8F86  
                                                     l15628 B5CE  
                                                     l17308 93DC  
                                                     l18036 9F5E  
                                                     l18028 9F10  
                                                     l17412 B908  
                                                     l18204 5F84  
                                                     l14756 8F2A  
                                                     l13980 20C4  
                                                     l14596 8548  
                                                     l14668 7E80  
                                                     l14692 8FC0  
                                                     l14684 8F94  
                                                     l15646 A756  
                                                     l18054 6976  
                                                     l17318 9458  
                                                     l17350 91FA  
                                                     l17510 AC9C  
                                                     l17422 0FF8  
                                                     l18038 9F6C  
                                                     l18134 8948  
                                                     l19014 2052  
                                                     l14758 8F42  
                                                     l12998 8762  
                                                     l13878 774C  
                                                     l13990 21C4  
                                                     l13982 20CA  
                                                     l15902 A812  
                                                     l15910 A842  
                                                     l18048 68BA  
                                                     l18160 8B02  
                                                     l18304 50FA  
                                                     l17360 927E  
                                                     l18232 803E  
                                                     l19008 200A  
                                                     l18400 9974  
                                                     l13896 2B62  
                                                     l15920 B292  
                                                     l13976 20A8  
                                                     l16720 AF7A  
                                                     l18144 83C8  
                                                     l19112 55F0  
                                                     l18306 5120  
                                                     l17506 AC64  
                                                     l17434 1192  
                                                     l18330 A01C  
                                                     l18226 800A  
                                                     l19034 8846  
                                                     l19026 87F8  
                                                     l19050 B316  
                                                     l15762 A512  
                                                     l15922 B296  
                                                     l13994 220E  
                                                     l18154 840C  
                                                     l19106 55BC  
                                                     l15906 A82C  
                                                     l15930 8972  
                                                     l18092 69FA  
                                                     l17612 A7CA  
                                                     l18316 51B2  
                                                     l17364 928A  
                                                     l17356 9202  
                                                     l19044 888A  
                                                     l18244 A95C  
                                                     l15764 A516  
                                                     l15756 A4E0  
                                                     l13996 2274  
                                                     l13988 2166  
                                                     l18420 8D34  
                                                     l19140 14BE  
                                                     l19300 3980  
                                                     l19124 5662  
                                                     l18262 862C  
                                                     l17550 BB3E  
                                                     l17534 A600  
                                                     l17630 9B2E  
                                                     l17622 9AC6  
                                                     l18334 A02A  
                                                     l19038 8864  
                                                     l18430 4CE8  
                                                     l18414 8CD4  
                                                     l19230 178A  
                                                     l19206 16BA  
                                                     l15942 89B8  
                                                     l15934 89A8  
                                                     l18176 8BAE  
                                                     l18088 69C0  
                                                     l17616 A7DE  
                                                     l17448 1310  
                                                     l17560 748A  
                                                     l17536 A60E  
                                                     l17632 9B36  
                                                     l18344 A03C  
                                                     l18416 8D1C  
                                                     l19216 170C  
                                                     l19152 1514  
                                                     l17466 9F98  
                                                     l17474 9FE8  
                                                     l18178 8BB2  
                                                     l17802 B170  
                                                     l18098 6A56  
                                                     l18338 A038  
                                                     l19066 8240  
                                                     l19242 17B6  
                                                     l19250 1814  
                                                     l19226 1770  
                                                     l18370 6078  
                                                     l15946 8A2A  
                                                     l18276 86E0  
                                                     l17732 783C  
                                                     l17572 7518  
                                                     l17644 B078  
                                                     l17820 954E  
                                                     l17660 B6BE  
                                                     l17900 4C44  
                                                     l18452 4E08  
                                   __end_of_SYS_TaskHandler BC94  
                                                     l19420 45F6  
                                                     l19164 156A  
                                                     l19332 A970  
                                                     l17708 3192  
                                                     l18364 5FFC  
                                                     l19308 39AE  
                                                     l18382 B370  
                                                     l18278 86E4  
                                                     l17486 A21A  
                                                     l17814 950A  
                                                     l17822 957C  
                                                     l19510 491A  
                                                     l19086 82C8  
                                                     l19406 4526  
                                                     l19262 187C  
                                                     l19246 1808  
                                                     l19174 15B2  
                                                     l19094 554A  
                                                     l17744 78E6  
                                                     l17576 7534  
                                                     l17904 4C70  
                                                     l19512 492A  
                                                     l19504 48E4  
                                                     l19416 45DE  
                                                     l19248 180C  
                                                     l19184 161E  
                                                     l19336 A98A  
                                                     l17728 349C  
                                                     l19280 3856  
                                                     l19328 3AA4  
                                                     l18298 50AE  
                                                     l17674 B592  
                                                     l18458 4E64  
                                                     l18554 3BD0  
                                                     l18538 3AC2  
                                                     l19522 4980  
                                                     l18394 993C  
                                                     l19434 4652  
                                                     l19186 163A  
                                                     l17596 A0E8  
                                                     l17588 A08A  
                                                     l17764 99F2  
                                                     l17684 BB26  
                                                     l17924 938E  
                                                     l18660 435C  
                                                     l18652 4338  
                                                     l18492 5BC6  
                                                     l19604 9B64  
                                                     l19612 9BAA  
                                                     l19444 4684  
                                                     l19356 571E  
                                                     l19372 5820  
                                                     l19470 A6B2  
                                                     l17790 B108  
                                                     l17782 B0DE  
                                                     l17598 A0EC  
                                                     l17854 4B36  
                                                     l17918 9372  
                                                     l18638 425C  
                                                     l18582 3C98  
                                                     l18558 3BD4  
                                                     l18566 3C02  
                                                     l19534 49FA  
                                                     l19550 4AB8  
                                                     l19702 3F3E  
                                                     l19630 3D8C  
                                                     l19382 4482  
                                                     l18814 6840  
                                                     l19366 57EA  
                                                     l19294 3952  
                                                     l19286 390C  
                                                     l18840 18EA  
                                                     l17696 B8E6  
                                                     l17848 4B1A  
                                                     l18592 3CB2  
                                                     l18584 3C9C  
                                                     l19544 4A3C  
                                                     l19536 49FA  
                                                     l18832 98E4  
                                                     l19704 3F46  
                                                     l19640 3DBE  
                                                     l19624 3D52  
                                                     l18808 673C  
                                                     l19474 A6CC  
                                                     l17890 4BD6  
                                                     l17882 4BB2  
                                                     l17874 4B92  
                                                     l18578 3C7C  
                                                     l19490 94A4  
                                                     l18906 730C  
                                                     l19538 4A0C  
                                                     l18826 98AC  
                                                     l19634 3DAC  
                                                     l19706 3F4E  
                                                     l19386 4498  
                                                     l17788 B104  
                                                     l19572 A1A2  
                                                     l19564 A194  
                                                     l18924 73FA  
                                                     l18692 440E  
                                                     l18684 43E4  
                                                     l18676 43AA  
                                                     l18668 4380  
                                                     l19484 947A  
                                                     l19548 4A76  
                                                     l19652 3DFC  
                                                     l19644 3DCE  
                                                     l19396 44F8  
                                                     l18780 794C  
                                                     l17956 9C00  
                                                     l19820 8E6C  
                                                     l19804 8E34  
                                                     l19724 768A  
                                                     l17798 B15A  
                                                     l18854 1B2C  
                                                     l19574 A1D4  
                                                     l19558 A186  
                                                     l18918 7386  
                                                     l17886 4BC8  
                                                     l17878 4BA2  
                                                     l18942 1D0E  
                                                     l19494 94B2  
                                                     l19486 9488  
                                                     l19670 3E66  
                                                     l19662 3E3E  
                                                     l18790 79E2  
                                                     l19814 8E5A  
                                                     l19742 7702  
                                             ___fltol@sign1 00B0  
                                                     l18880 7A5E  
                                                     l19576 A1EC  
                                                     l17992 63E4  
                                                     l18952 1D6E  
                                                     l19488 9496  
                                                     l19496 94E8  
                                                     l17968 9C4C  
                                                     l19832 8E90  
                                                     l19728 76AE  
                                                     l17986 6368  
                                                     l18962 1DB6  
                                                     l19690 3EE8  
                                                     l19682 3EB4  
                                                     l19666 3E5C  
                                                     l19658 3E32  
                                                     l18786 79BE  
                                                     l19826 8E7E  
                                                     l19770 655A  
                                                     l19762 652C  
                                                     l19754 64F6  
                                                     l19738 76DE  
                                                     l18884 7AB6  
                                                     l18876 7A3C  
                                                     l18980 1EBE  
                                                     l18892 726E  
                                                     l19684 3EBC  
                                                     l19588 9A48  
                                                     l18788 79C6  
                                                     l19844 A152  
                                                     l19940 5A16  
                                                     l19932 59EA  
                                                     l19780 65C8  
                                                     l18878 7A46  
                                                     l18990 1F72  
                                                     l18982 1F42  
                                                     l18958 1D98  
                                                     l19686 3EC4  
                                                     l19846 A160  
                                                     l19862 46E4  
                                                     l19926 59BE  
                                                     l19782 65CC  
                                                     l19960 5AAA  
                                                     l19952 5A7E  
                                                     l18994 1F86  
                                                     l19874 472C  
                                                     l19866 4710  
                                                     l19938 5A0E  
                                                     l19970 5AF8  
                                                     l19778 6590  
                                                     l18988 1F62  
                                                     l19878 4758  
                                                     l19966 5AF0  
                                                     l19958 5AA2  
                                                     l19984 A556  
                                                     l19988 A574  
                                                     ?_idle 0060  
                                           __end_of___fladd 37B2  
                                 __end_of_NWK_GroupIsMember B114  
                                                     ?_main 0060  
                                                     ?_rand 007D  
                                                     STR_10 FFC9  
                                                     STR_11 FFB3  
                                                     STR_12 FF98  
                                                     STR_13 FFB3  
                                                     STR_14 FF7D  
                                                     STR_15 FFB3  
                                                     STR_16 FEB4  
                                                     STR_17 FF17  
                                                     STR_18 FFEB  
                                           __end_of___flmul 2B1C  
                                  TMR5_ReadTimer@readValLow 0078  
                                        _implicitHeaderMode BA7C  
                                           __end_of___fltol 7F64  
                                     nwkDataReqConfirm@prev 00A1  
                                           __end_of___lldiv 9EFE  
                                                     u11100 AFC8  
                                                     u11200 6AC8  
                                                     u11130 B4B2  
                                                     u12100 7D8C  
                                                     u11060 96B2  
                                                     u11311 40BC  
                                                     u11400 84C2  
                                                     u11058 B19E  
                                                     u11331 40D4  
                                                     u11059 B1B2  
                                                     u12060 7D16  
                                             ?_InvShiftRows 0071  
                                                     u11341 40FA  
                                     ??_uart_default_engine 00A8  
                                           __end_of___llmod A3A0  
                                                     u11290 3FC6  
                                                     u11098 AFA4  
                                                     _U1P1H 003DED  
                                                     u11099 AFB8  
                                                     u10900 2326  
                                                     _U1P2H 003DEF  
                                                     u10670 77BA  
                                                     u12190 BC22  
                                                     _U1P1L 003DEC  
                                                     _U1P3H 003DF1  
                                                     _T3CLK 003FA9  
                                                     u10920 23D4  
                                                     u10840 21BE  
                                                     _U1P2L 003DEE  
                                                     u10770 2DE8  
                                                     u10930 2416  
                                                     u10850 2206  
                                                     _U1P3L 003DF0  
                                                     u10675 77AE  
                                                     u11580 8F4C  
                                                     u10950 9CFE  
                                                     u10775 2DDC  
                                                     u10847 21B0  
                                                     u15120 B6BA  
                                                     u16000 9974  
                                                     _T3CON 003FA6  
                                                     u10857 21F8  
                                                     u15060 9B00  
                                                     u15140 B584  
                                                     u16100 4D9C  
                                                     u16020 8CC0  
                                                     u12708 BAE6  
                                                     u16110 4DC0  
                                                     u16030 8D2E  
                                                     u15240 9A06  
                                                     u15320 9598  
                                                     u15400 4B74  
                                                     u16120 4DC8  
                                                     u12850 BC44  
                                                     u16205 70B6  
                                                     u15510 93C4  
                                                     u16206 70BA  
                                                     u16231 3B10  
                                                     u14720 A2EE  
                                                     u16400 440A  
                                                     u16080 4D6C  
                                                     u16160 5BB0  
                                                     u17200 14EC  
                                                     u14810 148C  
                                                     u16090 4D6E  
                                                     u14820 9FC2  
                                                     u14660 00CE  
                                                     u15380 4B64  
                                                     u17220 1534  
                                                     u14725 A2E6  
                                                     u14670 0942  
                                                     u16254 3B6E  
                                                     u17230 1542  
                                                     u12878 BACE  
                                                     u16255 3B6A  
                                                     u16600 19E8  
                                                     u16520 98E4  
                                                     u17320 166C  
                                                     u15801 5EDE  
                                                     u16425 2EDA  
                                                     u14770 0FF6  
                                                     u16418 445C  
                                                     u17250 158A  
                                                     u19010 B52A  
                                                     u14827 9FB4  
                                                     u16435 2F3A  
                                                     u16540 194E  
                                                     u14780 117E  
                                                     u15580 648E  
                                                     u15564 6390  
                                                     u16380 43A6  
                                                     u16284 3BE6  
                                                     u17180 14AE  
                                                     u19020 B52C  
                                                     u15565 638A  
                                                     u16285 3BE2  
                                                     u16550 1950  
                                                     u14790 1190  
                                                     u16390 43E0  
                                                     u16294 3C5A  
                                                     u16470 7942  
                                                     u17430 17DC  
                                                     u17190 14DE  
                                                     u17510 3914  
                                                     u18230 8E02  
                                                     u16295 3C56  
                                                     u16560 196C  
                                                     u18080 3F0E  
                                                     u17440 1814  
                                                     u17360 16FA  
                                                     u16618 19EC  
                                                     u16730 73C6  
                                                     u14954 74F2  
                                                     u14890 A638  
                                                     u17610 580C  
                                                     u17370 172C  
                                                     u14955 74EC  
                                                     u16580 19A6  
                                                     u16900 1EDC  
                                                     u17380 1762  
                                                     u14885 A90C  
                                                     u19037 6DD0  
                                                     u14990 A0C8  
                                                     u14886 A90E  
                                                     u17720 45F6  
                                                     u18280 8E3C  
                                                     u14897 A62A  
                                                     u16658 7AE4  
                                                     u15890 5062  
                                                     u16578 1970  
                                                     u18290 8E3E  
                                                     u16851 1E3E  
                                           __end_of___lwdiv 7256  
                                                     u14996 A0CA  
                                                     u16780 1D44  
                                                     u15964 6024  
                                                     u15965 601E  
                                                     u16598 19AA  
                                                     u16950 1FEC  
                                                     u16870 1E64  
                                                     u16790 1D5C  
                                                     u18710 6CC6  
                                                     u17718 45C4  
                                                     u17670 44EE  
                                                     u16791 1D5A  
                                                     u17719 45D8  
                                                     u16880 1E66  
                                                     u17648 44BA  
                                                     u17649 44CE  
                                                     u16970 2028  
                                                     u16890 1EDA  
                                                     u18810 0B14  
                                                     u18730 09C4  
                                                     u16980 2040  
                                                     u18900 0C82  
                                                     u18740 09CE  
                                                     u17758 4656  
                                                     u18830 0B4E  
                                                     u17759 467E  
                                                     u18920 0D08  
                                                     u17858 4A62  
                                                     u18930 0D98  
                                                     u18850 0B90  
                                                     u18940 0D9A  
                                                     u18870 0BCA  
                                                     _U1UIR 003DF8  
                                                     u18698 6C84  
                                                     _U1RXB 003DE8  
                                                     u18699 6C98  
                                           __end_of___lwmod 8624  
                                                     _U1TXB 003DEA  
                                       ??_UART1_rx_vect_isr 0060  
                                         ?_NWK_OpenEndpoint 0071  
                                                     _OSCEN 0039DD  
                                                     _TMR0H 003FB7  
                                                     _TMR0L 003FB6  
                                                     _TMR3H 003FA5  
                                                     _TMR3L 003FA4  
                                                     _TMR5H 003F99  
                                                     _TMR5L 003F98  
                             CircularBufferPopFront@ret_var 008C  
                                                     _TRISA 003FC2  
                                                     _TRISB 003FC3  
                                                     _TRISC 003FC4  
                                               _Default_ISR BD64  
                                   AES_CBC_encrypt_buffer@i 0094  
                                 ??_CRC_CalculatedResultGet 007A  
                                              _eQueuedEvent 0257  
                         __size_of_TMR0_SetInterruptHandler 000A  
                                       ?_vMBPortTimersDelay 0071  
           __end_of_eMBFuncReadWriteMultipleHoldingRegister 4216  
          __size_of_eMBFuncReadWriteMultipleHoldingRegister 0270  
                 ??_eMBFuncReadWriteMultipleHoldingRegister 009A  
                  ?_eMBFuncReadWriteMultipleHoldingRegister 0096  
                   _eMBFuncReadWriteMultipleHoldingRegister 3FA6  
                                          _xMBRTUReceiveFSM 7DA8  
                         __size_of_TMR3_SetInterruptHandler 000A  
                                       ___lmul@multiplicand 0075  
                                 ?_TMR0_SetInterruptHandler 0071  
                                       __end_of_eMBRTUStart BA2A  
                                           _app_aes_decrypt 6358  
                                 ?_TMR3_SetInterruptHandler 0071  
                                           __end_of_ledInit 773C  
                                     radio_engine@temp_time 00BD  
                                        ??_NWK_OpenEndpoint 0073  
                                          __end_of_TMR0_ISR B78E  
                                         _UART1_tx_vect_isr B790  
                                           __end_of_get_lqi 9762  
                                  __end_of_start_loop_timer BBDA  
                                          __end_of_TMR3_ISR 963A  
                                  __end_of_NWK_RouteNextHop AE50  
                      eMBFuncReadHoldingRegister@usRegCount 00A2  
                                           _DATAEE_ReadByte B7B6  
                                       ?_implicitHeaderMode 0060  
                                          __end_of_PHY_Init BD4C  
                             nwkRouteSendRouteError@command 008D  
                                           _app_aes_encrypt 5F88  
                                     __end_of_Timer0Handler 9DF6  
                            ??_TMR3_DefaultInterruptHandler 0063  
                                           __end_of_dpowers FEA2  
                                 __size_of_CRC_ReverseValue 006A  
                                                _eMBRTUInit 8C7E  
                                                _eMBRTUSend 8A34  
                                              AddRoundKey@i 007B  
                                              AddRoundKey@j 007C  
                                           __end_of_isalpha B59A  
                                           __end_of_isdigit B8EE  
                                                     _randx 02F5  
                                          ?_AES_init_ctx_iv 0088  
                                      __size_of_sx1276_send 0058  
                                     ?_SYS_TimerTaskHandler 0060  
                                                     _nwkIb 0200  
                                                _eMBRTUStop BB6E  
                                          __end_of_NWK_Init A596  
                                         app_aes_decrypt@iv 0100  
                                      ?_vMBPortSerialEnable 0071  
                                        ?_UART1_tx_vect_isr 0060  
                                           __end_of_receive ADC4  
                                                     _srand BC48  
                                                     _rsbox FC55  
                                                     _putch BC78  
                                                     _xtime BBEE  
                                           __end_of_isspace B6C6  
                                      __size_of_appDataConf 0036  
                                                _eMBDisable AF98  
                                           __end_of_isupper B910  
                                                     pclath 003FFA  
                                                     tablat 003FF5  
                                                     ltemp0 0001  
                                                     ltemp1 0005  
                                                     ltemp2 0009  
                                  __size_of_appManagementEp 00DE  
                                          _nwkTxTaskHandler 48D8  
                                         nwkRxSendAck@frame 0088  
                                   AES_CBC_decrypt_buffer@i 00B2  
                                          ?_set_eeprom_sync 0060  
                                    ??_needed_packet_length 0071  
                                                     plusw0 003FEB  
                                                     plusw1 003FE3  
                                                     plusw2 003FDB  
                                                     ttemp0 0001  
                                                     ttemp1 0004  
                                                     ttemp2 0007  
                                                     ttemp3 000A  
                                                     ttemp5 0002  
                                                     ttemp6 0005  
                                                     ttemp7 0009  
                                       nwkDataReqTxConf@req 0077  
                               nwkTxConvertPhyStatus@status 0073  
                                                     status 003FD8  
                       __end_of_UART1_SetRxInterruptHandler BD12  
                               _UART1_SetRxInterruptHandler BD08  
                              __size_of_nwkRxServiceDataInd 007E  
                                                     wtemp0 0001  
                                                     wtemp1 0003  
                                                     wtemp2 0005  
                                                     wtemp3 0007  
                                                     wtemp4 0009  
                                                     wtemp5 000B  
                                                     wtemp8 0002  
                               eMBRegHoldingCB@pucRegBuffer 007D  
                           nwkTxAckWaitTimerHandler@restart 0085  
                                           __end_of_strncmp 9B52  
                                           __end_of_toupper BB2A  
                                        _read_write_mb_regs 0270  
                  __end_of_UART1_DefaultFramingErrorHandler BD98  
                 __size_of_UART1_DefaultFramingErrorHandler 0002  
                          _UART1_DefaultFramingErrorHandler BD96  
                                   SX1276WriteBuffer@buffer 0078  
                                       ??_UART1_tx_vect_isr 0060  
                                          __end_of_SYS_Init BCBE  
                                 __end_of_UART1_rx_vect_isr AB34  
             eMBFuncWriteMultipleHoldingRegister@usRegCount 00A1  
                                  __size_of_SPI1_Initialize 0022  
                                __size_of_setPreambleLength 0016  
                                      ??_vMBPortTimersDelay 0073  
                                            nwkFrameAlloc@i 007D  
                                            ?_InvMixColumns 0072  
                                         nwkTxConfirm@frame 0071  
                                           ?_setCodingRate4 0060  
                                           __initialization 65D2  
                                __end_of_queue_tx_led_event 9916  
                                       __size_of_MBRTUStack 00B2  
                                              __end_of_Rcon FE98  
                                __end_of_NWK_RouteFindEntry A100  
                                           usMBCRC16@iIndex 0077  
                                      ??_implicitHeaderMode 0080  
                                     TMR5_ReadTimer@readVal 0075  
                                              __end_of_idle BCA2  
                                              __end_of_main B648  
                                           ??_get_loop_time 0075  
                                              __end_of_rand A6AA  
                                         nwkFrameNext@frame 0071  
                               SYS_TimerTaskHandler@elapsed 008D  
                                              __end_of_sbox FE55  
                                     ??_CircularBufferEmpty 0073  
                                           ?_SYS_TimerStart 007F  
                                       __size_of_SX1276Read 0022  
                                     ??_CircularBufferSpace 007B  
                                __end_of_NWK_RouteFreeEntry B23A  
                                                _MixColumns 318A  
                                          _need_radio_reset 01EC  
                                          ??_CRC_Initialize 0071  
                                  ??_AES_CBC_encrypt_buffer 0090  
                                            _free_tx_buffer 8AFA  
                                               MixColumns@i 0082  
                                               MixColumns@t 007F  
                                        exract_sink_addr@p1 0091  
                                        exract_sink_addr@p2 0093  
                                            _compute_option ACA6  
                                            ??_InvShiftRows 0073  
                                                    ??_idle 0080  
                                                    ??_main 00D1  
                                                    ??_rand 007F  
                              __end_of_vMBPortTimersDisable BD52  
                                __end_of_prvvUARTTxReadyISR BAE2  
                                         app_aes_encrypt@iv 0100  
                               __size_of_UART_error_handler 0038  
                                           eMBPoll@usLength 01F3  
                                           _TMR3_StartTimer BD84  
                                  ??_CircularBufferPopFront 0088  
                                             __activetblptr 000003  
                               __size_of_getSignalBandwidth 0140  
     eMBFuncReadWriteMultipleHoldingRegister@usRegReadCount 00A9  
                               __size_of_setSignalBandwidth 0342  
                                     _TMR3_InterruptHandler 02E6  
                            __size_of_xMBRTUTimerT35Expired 0092  
                      __size_of_UART1_SetTxInterruptHandler 000A  
                                 __end_of_UART1_tx_vect_isr B7B6  
                             __end_of_xMBRTUTimerT35Expired 9886  
                                     check_multicast_rx@ind 0076  
                                          __end_of_SubBytes 91F2  
                                             fill_rx_regs@i 0095  
                                __end_of_nwkRxIndicateFrame 4470  
                                           ??_queueLedEvent 0092  
                                       _vMBPortTimersEnable BA62  
                                             eMBInit@ucPort 009E  
                                       __end_of_InvSubBytes 9294  
                                       CRC_ReverseValue@crc 0071  
                                          _UART1_Initialize 82D0  
                                  ??_CircularBufferPushBack 0088  
                                         AES_init_ctx_iv@iv 008C  
                     eMBFuncReadHoldingRegister@pucFrameCur 00A0  
                                            _nwkDataReqInit BCCA  
                                     queueLedEvent@duration 0090  
                              DIO0_Receive_ISR@packetLength 00B4  
                                           ??_prvvUARTRxISR 0077  
                                       NWK_RouteNextHop@dst 0077  
                                         ??_start_radio_cad 0080  
                                       _bootLoadApplication 0944  
                                          InvSubBytes@state 0071  
                              __end_of_nwkRxRejectDuplicate 3D2E  
                              __size_of_nwkDataReqSendFrame 0404  
                                     ??_vMBPortSerialEnable 0072  
                                          ___llmod@dividend 0071  
                                        __size_of_eMBEnable 003A  
                                        fill_rx_regs@buf_id 0097  
                                                    ?_srand 0071  
                                                    _ANSELA 003A40  
                                                    _ANSELB 003A50  
                                                    _ANSELC 003A60  
                                                    _T0CON0 003FB8  
                                                    _T0CON1 003FB9  
                                     __end_of_nwkFrameAlloc 86F8  
                                                    _RB1I2C 003A5A  
                                                    _RB2I2C 003A5B  
                                                    _U1CON0 003DF2  
                                  nwkRxHandleIndication@ack 00CC  
                                                    _U1CON1 003DF3  
                                                    _U1CON2 003DF4  
                                                    _RC3I2C 003A6A  
                                                    _T3GATE 003FA8  
                                                    _RC4I2C 003A6B  
                                       __size_of_UART1_Read 0064  
                                                    _U1BRGH 003DF6  
                                                    _U1FIFO 003DF7  
                                        eMBRTUSend@pucFrame 007B  
                                                    _T3GCON 003FA7  
                                                    _U1BRGL 003DF5  
                                                    ?_xtime 0060  
                                                    _RB0PPS 003A08  
                      __size_of_eMBFuncWriteHoldingRegister 00A4  
                                                    _RC0PPS 003A10  
                                                    _RC1PPS 003A11  
                                                    _ODCONA 003A42  
                                                    _ODCONB 003A52  
                                                    _ODCONC 003A62  
                                                    i1l1516 9DEE  
                                                    _RC7PPS 003A17  
                                   __end_of_TMR3_Initialize AA4E  
                                              loadMACAddr@i 007D  
                                                    i2l2613 9876  
                                                    i2l1963 B26E  
                                                    _INLVLA 003A44  
                                                    _INLVLB 003A54  
                                                    _INLVLC 003A64  
                                                    _INLVLE 003A84  
                                                    _TABLAT 003FF5  
                                        __size_of_InvCipher 006C  
                                         ?_nwkDataReqTxConf 0073  
                                          __end_of__fassert A2CE  
                                                    _IVTADH 00389E  
                                                    _IVTADL 00389D  
                                        eMBRTUSend@usLength 007D  
                                          __end_of_aucCRCHi FC55  
                                                    _IVTADU 00389F  
                                          __end_of_aucCRCLo FB55  
                                              ?_nwkIsRouter 0060  
                                                    _OSCFRQ 0039DF  
                                                    _NVMDAT 0039E3  
                                                    _PRLOCK 0039EF  
                                     _UART1_SetErrorHandler BD26  
                                         _xMBPortSerialInit BD80  
                                             KeyExpansion@i 0086  
                                             KeyExpansion@j 007E  
                                             KeyExpansion@k 0084  
                                 load_on_demand_mb_regs@max 0077  
                                 load_on_demand_mb_regs@min 0075  
                                            placeTimer@prev 007B  
                                  AES_CBC_encrypt_buffer@Iv 0096  
                                              ?_setSyncWord 0060  
                                          __end_of___xxtofl 6218  
                                          _exract_sink_addr 7AF8  
                                        ??_nwkDataReqTxConf 0075  
                                                 ??_eMBInit 00A4  
                                                 ??_eMBPoll 00AB  
                                           _TMR3_WriteTimer AF58  
                                                    _Cipher 9BDE  
                                  ??_handle_write_only_regs 00BB  
                                        PHY_DataConf@status 0074  
                                      ?_vMBPortTimersEnable 0060  
                                   __end_of_stop_loop_timer AB7E  
                                          set_parity@parity 0073  
                                        ?_xMBPortSerialInit 0071  
                                __size_of_SPI1_ExchangeByte 001C  
                               __size_of_check_multicast_rx 0042  
                              vMBPortSerialEnable@xRxEnable 0072  
                                             ?_radio_engine 0060  
                                              ?_PHY_DataInd 0084  
                                              ?_PHY_DataReq 0084  
                              vMBPortSerialEnable@xTxEnable 0071  
                                      ?_bootLoadApplication 0060  
                                      __size_of_application 002C  
                                  __end_of_nwkEnableRouting BCEA  
                                                    ___flge 86F8  
                                          __end_of_get_rssi B3BC  
                                          __end_of_fhssList FE7D  
                                eMBRTUReceive@pucRcvAddress 007B  
                                                    ___lmul A7B8  
                                                 ??___fladd 00A0  
                                                    ___wmul B59A  
                                                 ??___flmul 0087  
                                                 ??___fltol 00AC  
                                                    _crcObj 02E0  
                                                 ??___lldiv 008D  
                                         _xMBPortTimersInit B114  
                                                 ??___llmod 0079  
                                    __end_of_free_tx_buffer 8BBC  
                                    __end_of_compute_option ACEE  
                                       ??_xMBPortSerialInit 0077  
                                                    _pan_id 01DB  
                                                    _memcpy 9F82  
        eMBFuncReadWriteMultipleHoldingRegister@pucFrameCur 00A4  
                                          ?_TMR0_Initialize 0060  
                                                    _keycmp 963A  
                                  __end_of_nwkRxTaskHandler 9508  
                                                    _memset B150  
                                                    clear_0 6662  
                                                    clear_1 6674  
                                                    clear_2 6680  
                                                    clear_3 668C  
                                                    clear_4 6698  
                                                    clear_5 66A6  
                                                    clear_6 66B8  
                                                    clear_7 66C4  
                                                    clear_8 66D0  
                                                    clear_9 66DC  
                                   ?_load_on_demand_mb_regs 0060  
                                   __size_of_nwkGroupSwitch 005C  
                                               _eMBRTUStart BA0E  
                                          setCodingRate4@cr 0081  
                                        __size_of_ShiftRows 019C  
                                   __end_of_app_aes_decrypt 6496  
                                        cmdSetSink@new_sink 00B8  
                                        ?_xMBPortTimersInit 0077  
                                        app_aes_decrypt@ctx 0117  
                                 CircularBufferPushBack@ctx 0084  
                                 CircularBufferPushBack@val 0086  
                             DATAEE_ReadByte_Platform@copy1 007A  
                             DATAEE_ReadByte_Platform@copy2 0079  
                             DATAEE_ReadByte_Platform@copy3 0078  
                                                    _timers 00D1  
                                                    _printf 2082  
                                                 ??_ledInit 0097  
                         __size_of_nwkTxAckWaitTimerHandler 008E  
                                __size_of_NWK_GroupIsMember 003E  
                           __size_of_nwkRouteSendRouteError 00E4  
                                          ?_SYS_TaskHandler 0060  
                                                    _strchr B058  
                                 ?_nwkTxAckWaitTimerHandler 0081  
                                   __end_of_DATAEE_ReadByte B7DA  
                                                 ??_get_lqi 00B2  
                                                    _strlen A5F2  
                                   __end_of_app_aes_encrypt 60D4  
                                                    _strtol 4AD8  
                                       eMBPoll@ucRcvAddress 01FB  
                                                    _strstr 9508  
                                               _DstVarName0 0300  
                                           _TMR5_StartTimer BD7C  
                            __size_of_nwkTxConvertPhyStatus 003E  
                                 _write_only_mb_regs_update 01E9  
                             __end_of_nwkTxConvertPhyStatus B0D6  
                                            _PMD_Initialize B454  
                                              __packetIndex 0261  
                                                 ??_isalpha 0074  
                                                 ??_isdigit 0071  
                                    __end_of_nwkDataReqInit BCD6  
                            __size_of_nwkRouteFrameReceived 01CC  
                                                 ??_receive 0080  
                                                    lltemp0 0001  
                             __end_of_nwkRouteFrameReceived 4E88  
                   eMBFuncWriteHoldingRegister@usRegAddress 009C  
                                              __mediumconst FA54  
                                                 ??_isspace 0071  
                                       ??_xMBPortTimersInit 0079  
                                                    tblptrh 003FF7  
                                                 ??_isupper 0071  
                                                    tblptrl 003FF6  
                                                    tblptru 003FF8  
                                                    srand@x 0071  
                                    ??_SYS_TimerTaskHandler 0088  
                                              ?_NWK_DataReq 0071  
                                      __size_of_loadMACAddr 00CA  
                                     __end_of_TMR0_CallBack B954  
                                      __end_of_fill_rx_regs 5836  
                                               ?_eMBRTUInit 0092  
                  TMR3_SetInterruptHandler@InterruptHandler 0071  
               UART1_SetTxInterruptHandler@InterruptHandler 0071  
               UART1_SetRxInterruptHandler@InterruptHandler 0071  
                  TMR0_SetInterruptHandler@InterruptHandler 0071  
                      __end_of_UART1_SetOverrunErrorHandler BD1C  
                     __size_of_UART1_SetOverrunErrorHandler 000A  
                              _UART1_SetOverrunErrorHandler BD12  
                                               ?_eMBRTUSend 007B  
                                             _curent_parity 00E1  
                                 _UART1_DefaultErrorHandler BD6A  
                               eMBRegHoldingCB@tempptr_1280 008A  
                               eMBRegHoldingCB@tempptr_1282 008C  
                               eMBRegHoldingCB@tempptr_1283 008E  
                               eMBRegHoldingCB@tempptr_1284 0090  
                               eMBRegHoldingCB@tempptr_1285 0092  
                               eMBRegHoldingCB@tempptr_1286 0094  
                               eMBRegHoldingCB@tempptr_1279 0088  
                                               ?_eMBRTUStop 0060  
                                                 ??_strncmp 007D  
                                                 ??_toupper 0071  
                                                    xtime@x 0071  
                                     __end_of_reset_handler A866  
                                      __end_of_KeyExpansion 148E  
                             __size_of_INTERRUPT_Initialize 0056  
                                 __end_of_xMBPortSerialInit BD84  
                                               ?_eMBDisable 0060  
                              __size_of_UART1_RxDataHandler 002C  
                                                ___flge@ff1 007F  
                                                ___flge@ff2 0083  
                                   ??_nwkRouteErrorReceived 007E  
                                              ___xxtofl@arg 007B  
                                  eMBRTUInit@ucSlaveAddress 0060  
                                              ___xxtofl@exp 007A  
                                          eMBPoll@ucMBFrame 01F5  
                                         _SYSTEM_Initialize B6C6  
                                        _get_free_rx_buffer 9EFE  
                                              ___xxtofl@val 0071  
                                                __accesstop 0060  
                                   __end_of__initialization 6706  
                                              ?_NWK_SetAddr 0073  
                                           SX1276Write@addr 007F  
                                  __size_of_SPI1_WriteBlock 0036  
                                      bootLoadApplication@i 00B3  
                                           SX1276Write@data 007E  
                                        __size_of_XorWithIv 004A  
                                            _SPI1_ReadBlock B2AC  
                                        __size_of_crc16_app 0090  
                                     __size_of_DIA_ReadByte 0022  
                                    nwkEnableRouting@enable 0071  
                           xMBRTUReceiveFSM@xTaskNeedSwitch 0075  
                                           ??_InvMixColumns 0074  
                                        ?_SYSTEM_Initialize 0060  
                                        _get_free_tx_buffer 9DF6  
                                        _getSpreadingFactor B9B6  
                                                _cadCounter 01ED  
                                         ?_nwkTxAckReceived 0077  
                                     ??_vMBPortTimersEnable 0071  
                                        _setSpreadingFactor 773C  
                                             ___rparam_used 000000  
                                __size_of_UART1_rx_vect_isr 004C  
                                              ?_AddRoundKey 0071  
                                                ___fltol@f1 00A8  
                                           _PHY_TaskHandler BD58  
                                           _TMR5_WriteTimer B7DA  
                                              InvSubBytes@i 0079  
                                              InvSubBytes@j 007A  
                                   SYS_TimerTaskHandler@cnt 008C  
                                     __end_of_TMR3_CallBack B976  
                     __end_of_PHY_Get_Packet_Rssi_Threshold BD58  
                    __size_of_PHY_Get_Packet_Rssi_Threshold 0006  
                             _PHY_Get_Packet_Rssi_Threshold BD52  
                                       ?_get_free_rx_buffer 0071  
                                            ??_radio_engine 00BB  
                                  eMBRegHoldingCB@usAddress 007F  
                                         ??_appManagementEp 00BC  
                                        ??_nwkTxAckReceived 0079  
                          __end_of_nwkRxHandleReceivedFrame 2082  
                                     ??_bootLoadApplication 00A8  
                                 __end_of_xMBPortTimersInit B150  
                                                _cadTimeOut 00E4  
                                        CRC_Initialize@seed 0074  
                                                ___inthi_sp 09AC  
                                        CRC_Initialize@poly 0072  
                                  __end_of_SX1276ReadBuffer B740  
                                                ___intlo_sp 09D6  
                              __size_of_nwkFrameCommandInit 0044  
                                   handle_write_only_regs@j 00BD  
                                              __pidataBANK0 BD70  
                                              __pidataBANK1 BD74  
                                              __pidataBANK2 BCD6  
                                              __pidataBANK3 B9F2  
                                        nwkTxConfirm@status 0073  
                                       ??_SYSTEM_Initialize 0076  
                                   __end_of_TMR3_StartTimer BD88  
                                       ?_get_free_tx_buffer 0071  
                                       ?_getSpreadingFactor 007E  
                                               placeTimer@t 007D  
                            CircularBufferInit@element_size 0077  
                                                 ?_TMR0_ISR 0060  
                                             eMBPoll@eEvent 00AE  
                                       ?_setSpreadingFactor 0060  
                                              XorWithIv@buf 0071  
                                                 ?_TMR3_ISR 0060  
                            __end_of_load_on_demand_mb_regs B672  
                            nwkRxHandleReceivedFrame@header 0096  
                               ?_eMBFuncReadHoldingRegister 0096  
                                          _DATAEE_WriteByte A8BC  
                              reset_handler@reset_state_var 01E4  
                                            ivt0x8_undefint 00AC  
                                           ?_free_tx_buffer 0090  
                                         PHY_SetPanId@panId 0071  
                                         __end_of_eMBEnable B1C6  
                                                 ?_PHY_Init 0060  
                                         ??_SPI1_Initialize 0071  
                         AES_CBC_decrypt_buffer@storeNextIv 00A2  
                                           ?_compute_option 0071  
                                  nwkRxIndicateFrame@header 03EB  
                                               ?_MixColumns 0072  
                            nwkRxHandleReceivedFrame@member 0093  
                                             __end_of_srand BC58  
                                             __end_of_rsbox FD55  
                                             __end_of_putch BC86  
                                     SX1276WriteBuffer@addr 007B  
                                          usMBCRC16@ucCRCHi 0079  
                                          usMBCRC16@ucCRCLo 007A  
                                           _xMBPortEventGet B3F0  
                                ??_DATAEE_ReadByte_Platform 0077  
                             vMBPortTimersDelay@usTimeOutMS 0071  
                                                 ?_NWK_Init 0060  
                                             __end_of_xtime BC02  
                                               receive@size 0080  
                                               _InvSubBytes 91F2  
                                 eMBRTUInit@usTimerT35_50us 0098  
                                   _rx_buffer_queue_context 02D6  
                                         __end_of_InvCipher A264  
                                     SX1276WriteBuffer@size 007A  
                     eMBFuncWriteHoldingRegister@eRegStatus 009F  
                                    __end_of_PMD_Initialize B486  
                                     SPI1_ExchangeByte@data 0071  
                           __size_of_AES_CBC_encrypt_buffer 00D4  
                                  nwkDataReqTaskHandler@req 00A5  
                                    _user_application_state 0263  
                                             _max_loop_time 023C  
                                        _spi1_configuration FEAB  
                                        __size_of_enableCrc 0014  
                            __size_of_nwkDataReqTaskHandler 007C  
                           __size_of_CircularBufferPopFront 013A  
                                __size_of_UART1_tx_vect_isr 0026  
                                         ?_DIO0_Receive_ISR 0060  
                             __end_of_nwkDataReqTaskHandler A1F8  
                                          ??_get_timer0base 0073  
                                      __size_of_SX1276Write 001E  
                                           ?_nwkDataReqInit 0060  
                                              ??_MBRTUStack 00C1  
                                      ??_get_free_rx_buffer 0073  
                                              crc16_app@len 0084  
                                              crc16_app@ptr 008A  
                                                 ?_SYS_Init 0060  
                                            _nwkFrameFrames 0AA0  
                                 _UART1_FramingErrorHandler 02EA  
                                        ??_DIO0_Receive_ISR 00B3  
                                              MixColumns@Tm 0081  
                           __size_of_CircularBufferPushBack 0136  
                                        _loop_timer_wrt_ptr 0253  
                                     __end_of_set_uart_baud 7646  
                                            eMBInit@eParity 00A3  
                                              _DIA_ReadByte B822  
                                      ??_get_free_tx_buffer 0073  
                                      ??_getSpreadingFactor 0082  
                                          _CRC_ReverseValue A2CE  
                                              ??_SX1276Read 007C  
                                      ??_setSpreadingFactor 0092  
                                 __end_of_SYSTEM_Initialize B6F0  
                                  __end_of_SYS_TimerStarted AC12  
                                   ??_prveMBError2Exception 0071  
                                                   ??_srand 0073  
                                            eMBInit@eStatus 00A7  
                                   __end_of_TMR3_WriteTimer AF98  
                                        app_aes_encrypt@ctx 0115  
                                                   ??_xtime 0071  
                                             ?_setFrequency 0092  
                                    __end_of_SPI1_ReadBlock B2E4  
                                                __pbssBANK0 00D1  
                                                __pbssBANK1 01D7  
                                                __pbssBANK2 0200  
                                                __pbssBANK3 0300  
                                                __pbssBANK4 0400  
                                                __pbssBANK5 0500  
                                                __pbssBANK6 0600  
                                                __pbssBANK7 0700  
                                                __pbssBANK8 0800  
                                                __pbssBANK9 0900  
                             ?_UART1_SetOverrunErrorHandler 0071  
                                    ?_UART1_SetErrorHandler 0071  
                                        __size_of_usMBCRC16 009E  
                                          ?_TMR3_Initialize 0060  
                                       handle_rx_regs@count 007A  
                              __end_of_xMBPortSerialGetByte BB12  
                                                _cmdSetSink 2E5E  
                                     __end_of_nwkRouteFrame 7454  
                                            _tx_ctl_mb_regs 045E  
                                    _nwkRouteSendRouteError 7BE2  
                                         __end_of_ShiftRows 537A  
                                         NWK_GroupAdd@group 0078  
                                  _SystemArbiter_Initialize BC68  
                                             cmdSetSink@cmd 009E  
                                                XorWithIv@i 0076  
                                                _appDataInd 5E2A  
                                        __size_of_initRadio 0122  
                                      __end_of_InvShiftRows 5516  
                                                crc16_app@i 008C  
                              __size_of_nwkTxBroadcastFrame 0186  
                                      _vMBPortTimersDisable BD4C  
                                                   ?_Cipher 0083  
                                                _atStateVar 026B  
                               nwkTxBroadcastFrame@newFrame 0089  
                                                   IVTBASEH 003FD6  
                                                   IVTBASEL 003FD5  
                                                   IVTBASEU 003FD7  
                        eMBFuncReadHoldingRegister@pucFrame 0096  
                       eMBFuncWriteHoldingRegister@pucFrame 0096  
                                          ?_stop_loop_timer 0060  
                                      CRC_ReverseValue@mask 0076  
                           __size_of_handle_write_only_regs 0190  
                                        AES_init_ctx_iv@ctx 0088  
                                        AES_init_ctx_iv@key 008A  
                                  __end_of_xMBRTUReceiveFSM 7E86  
                                           setTxPower@power 0080  
  eMBFuncReadWriteMultipleHoldingRegister@usRegWriteAddress 00A1  
                              __end_of_xMBPortSerialPutByte BC14  
                                   setPreambleLength@length 0080  
                                                 ?_SubBytes 0071  
                                                   ?___flge 007F  
                           prveMBError2Exception@eErrorCode 0073  
                          __end_of_TMR0_SetInterruptHandler BD44  
                                              ?_sync_eeprom 0060  
                                                   ?___lmul 0071  
                                        _explicitHeaderMode BA96  
                                        __end_of_MBRTUStack 8EAA  
                          __end_of_TMR3_SetInterruptHandler BD3A  
                                                   ?___wmul 0071  
                                           _nwkDataReqQueue 01D7  
                                                ??_TMR0_ISR 0070  
                                   __end_of_TMR5_StartTimer BD80  
                                                ??_TMR3_ISR 0066  
                                        NWK_OpenEndpoint@id 0073  
                                      _nwkRxRejectDuplicate 3AB0  
                                          get_loop_time@max 0073  
                                          get_loop_time@min 0071  
                                         _nwkDataReqConfirm 7A0C  
                                   __size_of_set_timer0base 0022  
                                                ??_PHY_Init 0071  
                                 __size_of_PHY_SetShortAddr 0002  
                                       __size_of_eMBRTUInit 00BE  
                                       nwkTxAckReceived@ind 0077  
                                       __size_of_eMBRTUSend 00C6  
                                       __size_of_eMBRTUStop 0016  
                                                   ?_memcpy 0077  
                                                   ?_keycmp 0071  
                                                   ?_memset 0071  
                            __size_of_nwkRxHandleIndication 00D2  
                                            ___lmul@product 0079  
                                                ??_NWK_Init 0075  
                                        __end_of_SX1276Read B8CC  
                                         _SX1276WriteBuffer B6F0  
                             __end_of_nwkRxHandleIndication 889C  
                                  __end_of_nwkTxTaskHandler 4AD8  
                                       __size_of_eMBDisable 0040  
                                        ?_nwkDataReqConfirm 009D  
                                          ?_app_aes_decrypt 00B4  
                                                   _CRCACCH 003963  
                                                   _CRCACCL 003962  
                                           ?_PMD_Initialize 0060  
                                                   _CRCDATH 003961  
                                                   _CRCDATL 003960  
                                         _UART1_Receive_ISR 90AC  
                                                   _CRCCON0 003968  
                                                   _CRCCON1 003969  
                                        __size_of_nwkRxInit 005C  
                                       _nwkRxServiceDataInd A004  
                                        __size_of_nwkTxInit 004C  
                                                   ?_strchr 0071  
                                       ?_explicitHeaderMode 0060  
                                      eMBRTUReceive@eStatus 0086  
                                                   ?_strlen 0071  
                                         __end_of_XorWithIv ACA6  
                                                   ?_strtol 007D  
                                                   ?_strstr 007E  
                                                   _CRCXORH 003967  
                                                   _CRCXORL 003966  
                                          ?_DATAEE_ReadByte 0071  
                                         __end_of_crc16_app 9A36  
                                             ?_nwkFrameFree 0071  
                                        ?_SX1276WriteBuffer 0078  
                                          ?_app_aes_encrypt 0098  
                                             ?_nwkFrameInit 0060  
                                                   _U1ERRIE 003DFA  
                                                   _U1ERRIR 003DF9  
                                             ?_nwkFrameNext 0071  
                                         _CRC_8BitDataWrite BB2A  
                                                   i1l16260 9DCA  
                                                   i1l16252 9DA6  
                                                   i1l16244 9D82  
                                                   i1l16264 9DDC  
                                                   i1l16256 9DB8  
                                                   i1l16248 9D94  
                                        _queue_rx_led_event 9916  
                              __size_of_prvvTIMERExpiredISR 001C  
                                              ?_Default_ISR 0060  
                                      __size_of_UART1_Write 004E  
                                             ShiftRows@temp 0073  
                     __end_of_PHY_Set_Packet_Rssi_Threshold BCFE  
                    __size_of_PHY_Set_Packet_Rssi_Threshold 000A  
                             _PHY_Set_Packet_Rssi_Threshold BCF4  
                                                   i2l15554 B618  
                                                   i2l15572 97FC  
                                                   i2l15574 9806  
                                        ?_UART1_Receive_ISR 0060  
                                                   i2l15576 9816  
                                                   i2l15584 9850  
                                                   i2l16708 914A  
                                                   i2l16688 B268  
                                         _xMBRTUTransmitFSM 8F5A  
                                                   _U1RXPPS 003AE5  
                                                 ?___xxtofl 0071  
                                 __size_of_xMBPortEventInit 000A  
                                             appDataInd@ind 00BA  
                                 __size_of_xMBPortEventPost 0016  
                                                ??_SYS_Init 0076  
                                   __size_of_TMR5_ReadTimer 002C  
                                                   _OSCCON1 0039D9  
                                                   _OSCCON3 0039DB  
                                   nwkRouteNormalizeRanks@i 0072  
                                       ??_nwkDataReqConfirm 009F  
                                                   _IVTLOCK 003FD4  
                                                   _TBLPTRH 003FF7  
                                                   _TBLPTRL 003FF6  
                                        ?_CRC_8BitDataWrite 0060  
                                                   _SPI1CLK 003D1C  
                                                   _TBLPTRU 003FF8  
                                                   _SPI1RXB 003D10  
                                                   _NVMADRH 0039E1  
                                                   _NVMADRL 0039E0  
                                                   _SPI1TXB 003D11  
                                                   _OSCTUNE 0039DE  
                                                   _NVMCON2 0039E6  
                                        ?_xMBRTUTransmitFSM 0060  
                                                   _SLRCONA 003A43  
                                                   _SLRCONB 003A53  
                                                   _SLRCONC 003A63  
                                         ?_start_loop_timer 0060  
                        __size_of_DATAEE_WriteByte_Platform 004A  
                                         ?_NWK_RouteNextHop 0077  
                                       ??_SX1276WriteBuffer 007B  
                                            ??_setFrequency 0096  
                                ?_DATAEE_WriteByte_Platform 0075  
                                       ?_queue_rx_led_event 0060  
                                       ??_UART1_Receive_ISR 0060  
                                                 ?_get_rssi 0060  
                                           placeTimer@timer 0071  
                                   __end_of_PHY_TaskHandler BD5E  
                                   __end_of_TMR5_WriteTimer B7FE  
                                     nwkTxAckReceived@frame 007D  
                                __size_of_xMBPortSerialInit 0004  
                                        ??_start_loop_timer 0073  
                                         eMBPoll@eException 01DD  
                                           ?_SPI1_ReadBlock 0072  
                                  set_eeprom_sync@flag_type 0073  
                                           crc16_app@result 0088  
                                        ??_NWK_RouteNextHop 007A  
                                     __end_of_eMBRTUReceive 8550  
                                   __size_of_handle_rw_regs 0422  
                                        __end_of_UART1_Read A4D2  
                                   __size_of_handle_rx_regs 0050  
                                                 NWK_Init@i 0075  
                                             ?_nwkGroupInit 0060  
                                       ??_CRC_8BitDataWrite 0071  
                                   __size_of_nwkRouteRemove 0030  
                                  _pxMBFrameCBReceiveFSMCur 0230  
                                    _AES_CBC_encrypt_buffer 83A8  
                                      DATAEE_WriteByte@bAdd 0071  
                                   __size_of_handle_tx_regs 02FE  
                                       __size_of_MixColumns 031C  
                                       ??_xMBRTUTransmitFSM 0073  
                                          ??_setCodingRate4 0080  
                                      ?_nwkRxServiceDataInd 00BA  
   eMBFuncReadWriteMultipleHoldingRegister@usRegReadAddress 009F  
                                      ??_explicitHeaderMode 0080  
                           set_eeprom_sync@return_parameter 0074  
                                      eMBRTUInit@ulBaudRate 0093  
                                                   _TXPower 00DC  
                                 __size_of_NWK_OpenEndpoint 0024  
                                   __size_of_TMR3_StopTimer 0004  
                                             _min_loop_time 02F9  
                                    _CircularBufferPopFront 670C  
                                                   _eMBInit 7920  
                                                   _eMBPoll 4470  
                                 INTERRUPT_Initialize@state 0071  
                                           handle_rw_regs@i 00AC  
                                      __size_of_nwkIsRouter 0006  
                                         __end_of_enableCrc BBEE  
                                                _dwellTimer 025D  
                                         __end_of_ascii_lut FE8D  
                                                _need_reset 01E5  
                                           __size_of_Cipher 0086  
                                                _packetRSSI 01EB  
                              needed_packet_length@data_len 0074  
                                                   __Hparam 0000  
                                          ??_SYS_TimerStart 0081  
                                               _SrcVarName0 0314  
                                   __end_of_xMBPortEventGet B422  
                                      __size_of_setSyncWord 0010  
                                                   __Lparam 0000  
                                  __end_of_UART1_Initialize 83A8  
                                    _CircularBufferPushBack 6846  
                                __size_of_xMBPortTimersInit 003C  
                                 __end_of_nwkDataReqConfirm 7AF8  
                                                ??_SubBytes 0073  
                                         ??_SPI1_WriteBlock 0076  
                                         eMBRTUInit@eParity 0097  
                                           handle_tx_regs@i 00A8  
                                             ?_PHY_DataConf 0060  
                                             ?_nwkRxSendAck 0088  
                                             ?_nwkTxConfirm 0071  
                                  ??_AES_CBC_decrypt_buffer 009E  
                                       _nwkDataReqSendFrame 18B0  
                                           __size_of___flge 00D2  
                                     ?_nwkRxRejectDuplicate 0081  
                                                   ___fladd 34A6  
                                       nwkRouteRemove@entry 007A  
                                  __size_of_NWK_TaskHandler 000E  
                                                   _cadDone 01EE  
                                 __end_of_SX1276WriteBuffer B718  
                               __size_of_CircularBufferInit 00BC  
                                      ??_queue_rx_led_event 0097  
                                           __size_of___lmul 0058  
                                         eMBRTUInit@eStatus 009C  
                               __end_of_uart_default_engine 5B38  
                                                   ___flmul 27CC  
                                          ?_TMR3_StartTimer 0060  
                                                   ___fltol 7E86  
                               __size_of_CircularBufferSize 0068  
                                                   ___lldiv 9E7A  
                                           __size_of___wmul 002C  
                                                   ___llmod A338  
                                    __size_of_SYS_TimerInit 000C  
                                                   ___lwdiv 7150  
                            ?_PHY_Get_Packet_Rssi_Threshold 0060  
                                     nwkRxIndicateFrame@ind 03ED  
                                                   ___lwmod 8550  
                                 __end_of_UART1_Receive_ISR 9150  
                                                   cad@temp 0083  
                                      __size_of_PHY_DataInd 017C  
                                      __size_of_PHY_DataReq 0038  
                                            _nwkGroupSwitch A596  
                                                   _aes_key 0396  
                                                _current_sf 00DE  
                                           _start_radio_cad BC26  
                              AES_CBC_decrypt_buffer@length 009A  
                                                   _channel 00DD  
                                                   __pcinit 65D2  
                                           __size_of_memcpy 0082  
                                           __size_of_keycmp 0094  
                                           __size_of_memset 003C  
                                         __end_of_usMBCRC16 9332  
                                                   __ramtop 1000  
                                 __end_of_CRC_8BitDataWrite BB42  
                               __size_of_UART1_Transmit_ISR 003A  
                                   __size_of_PHY_SetChannel 0042  
                                 handle_tx_regs@needed_size 00A6  
                                            ??_nwkFrameFree 0073  
                                                   __ptext0 B61E  
                                                   __ptext1 0944  
                                                   __ptext2 896A  
                                                   __ptext3 B822  
                                                   __ptext4 7646  
                                                   __ptext5 8D3C  
                                                   __ptext6 B844  
                                                   _ledInit 7646  
                                                   __ptext7 BB42  
                                                   __ptext8 BD8C  
                                                   __ptext9 BB58  
                                 __end_of_xMBRTUTransmitFSM 9008  
                                            ??_nwkFrameInit 0071  
                                            ??_nwkFrameNext 0073  
                                           MixColumns@state 0072  
                              ?_eMBFuncWriteHoldingRegister 0096  
                                     _msg_ack_queue_context 03BF  
                                           __size_of_printf 03B0  
                                                   _get_lqi 96CE  
                                  SPI1_WriteBlock@blockSize 0074  
                                                   _fhssReg 0440  
                                         __end_of_initRadio 6E14  
                                   __size_of_TMR5_StopTimer 0004  
                                              sync_eeprom@i 0078  
                                           __size_of_strchr 0040  
                                  __end_of_exract_sink_addr 7BE2  
                                           __size_of_strlen 005C  
                                     __size_of_fill_rx_regs 0190  
                                           __size_of_strtol 01E4  
                                           __size_of_strstr 009A  
                                                   _dpowers FE98  
                                     _OSCILLATOR_Initialize B996  
                                             ?_nwkRouteInit 0060  
                                              __size_of_cad 00E2  
                                          eMBEnable@eStatus 0073  
                                                _placeTimer 4E88  
                                        _queue_tx_led_event 9886  
                                                   _isalpha B56E  
                                                   _isdigit B8CC  
                                    _handle_write_only_regs 5516  
                                                ??___xxtofl 0075  
                                        _NWK_RouteFindEntry A082  
                                                 _T3CONbits 003FA6  
                                                   _net_key 0386  
                                                   clear_10 66E8  
                                                   clear_11 66F4  
                                                   _receive AD7E  
                                  nwkFrameCommandInit@frame 0071  
                                             ??_sx1276_send 0080  
                                     __size_of_KeyExpansion 04AA  
                                           _radio_state_var 01FD  
                              __size_of_nwkFramePayloadSize 0034  
                                  ??_PIN_MANAGER_Initialize 0071  
                                                   _isspace B69C  
                                       app_aes_decrypt@data 00B4  
                                                 _T5CONbits 003F9A  
                                                   _isupper B8EE  
                             CircularBufferPushBack@ret_var 008C  
                                             ??_appDataConf 009C  
                                       app_aes_decrypt@size 00B6  
                         __size_of_nwkRxHandleReceivedFrame 03CE  
                                  __size_of_eMBRegHoldingCB 039A  
                                      __end_of_radio_engine 3FA6  
                                 _read_write_mb_regs_update 01E8  
                                 ?_nwkRxHandleReceivedFrame 008E  
                                      ?_nwkDataReqSendFrame 0088  
                                             ?_PHY_SetPanId 0071  
                                        _NWK_RouteFreeEntry B200  
                                __size_of_SYSTEM_Initialize 002A  
                            xMBRTUTimerT35Expired@xNeedPoll 0065  
                                                   _strncmp 9AC4  
                                                   _toupper BB12  
                                       ?_queue_tx_led_event 0060  
                                                ??_get_rssi 0071  
                                       SYS_TimerStart@timer 007F  
                                      end_of_initialization 6706  
                                       ?_NWK_RouteFindEntry 0071  
                                          _pvMBFrameStopCur 0236  
                                                 _SCANHADRH 00397A  
                                                 _SCANHADRL 003979  
                                                 _SCANHADRU 00397B  
                                       __implicitHeaderMode 0262  
                                            ??_nwkGroupInit 0071  
                                      __size_of_NWK_DataReq 0086  
                         __end_of_DATAEE_WriteByte_Platform AC5C  
                                                 _SCANLADRH 003977  
                                                 _SCANLADRL 003976  
                                                 _SCANLADRU 003978  
                                        _prvvUARTTxReadyISR BACA  
                      nwkRxDuplicateRejectionTimerHandler@i 0084  
                                               ?_cmdSetSink 009E  
                                         queueLedEvent@temp 0094  
                                     ??_nwkRxServiceDataInd 00BC  
                                   xMBPortSerialInit@ucPORT 0060  
                       __size_of_eMBFuncReadHoldingRegister 0176  
                                                   memcpy@d 0082  
                                                   memcpy@n 007C  
                                                   memcpy@s 007E  
                                               ?_appDataInd 00BA  
                                                   memset@c 0073  
                                                   memset@n 0075  
                                                   memset@p 0077  
                       __end_of_UART1_SetTxInterruptHandler BD08  
                               _UART1_SetTxInterruptHandler BCFE  
                               CRC_CalculatedResultGet@mask 007E  
                                       ?_NWK_RouteFreeEntry 0071  
                                         __end_of_nwkRxInit A706  
                                                 i1u1446_28 B940  
                                        _nwkRxIndicateFrame 4216  
                               nwkTxDelayTimerHandler@frame 0086  
                                         __end_of_nwkTxInit AAE6  
                                  _setSpreadingFactor$10480 0096  
                                                _setTxPower B1C6  
                                          nwkGroupSwitch@to 0073  
                                                 i2u1406_48 BA4E  
                                                 i2u1450_48 90DA  
                                                 i2u1450_49 90EE  
                                     NWK_RouteNewEntry@iter 0076  
                                       nwkRxSendAck@command 008A  
                                                 i2u1452_48 910A  
                               nwkTxDelayTimerHandler@timer 0081  
                                                 i2u1452_49 911E  
                             __size_of_needed_packet_length 0040  
                                                 i2u1461_48 AB0C  
                                                 i2u1461_49 AB20  
                                                 i2u1454_48 9136  
                                                 i2u1457_48 B962  
                                                 i2u1459_48 B7A2  
                                      __size_of_NWK_SetAddr 0016  
                            ??_UART1_SetOverrunErrorHandler 0073  
                                  __size_of_AES_init_ctx_iv 004C  
                                           ___lldiv@divisor 0089  
                               __end_of_CircularBufferEmpty B4B6  
                                               cad@RSSI_loc 0081  
                                       ?_prvvUARTTxReadyISR 0060  
                                           ___lldiv@counter 0091  
                               __end_of_CircularBufferSpace B058  
                               __size_of_vMBPortTimersDelay 0002  
                                            ??_PHY_DataConf 0074  
                                            ??_nwkRxSendAck 008A  
                                            ??_nwkTxConfirm 0074  
                                  ??_nwkRouteNormalizeRanks 0071  
                           eMBFuncReadHoldingRegister@usLen 0098  
                                                _nwkTxFrame 503C  
                                      __size_of_AddRoundKey 009E  
                                                _set_parity 9CEA  
                                                 _SPI1TCNTL 003D12  
                                  __size_of_set_eeprom_sync 00DC  
                                       ?_nwkRxIndicateFrame 00C2  
                                    __end_of_nwkGroupSwitch A5F2  
                               __size_of_implicitHeaderMode 001A  
                                                   postdec0 003FED  
                                                   postdec1 003FE5  
                                                   postdec2 003FDD  
                                                 _SPI1SSPPS 003AE0  
                                     app_aes_encrypt@apphdr 0112  
                                         ?_nwkEnableRouting 0060  
                                                   postinc0 003FEE  
                                                   postinc1 003FE6  
                                                   postinc2 003FDE  
                                              _fill_rx_regs 56A6  
                                     nwkDataReqTxConf@frame 0073  
                                      ??_queue_tx_led_event 0097  
                                          ?_TMR5_StartTimer 0060  
                                  _setSignalBandwidth$10481 009A  
                                      ??_NWK_RouteFindEntry 0074  
                                    __size_of_Timer0Handler 0086  
                                     app_aes_encrypt@random 0110  
                                 __size_of_nwkDataReqTxConf 00B0  
                                     __end_of_get_loop_time B454  
                                __end_of_UART_error_handler B2AC  
                                       _UART1_RxDataHandler B5F2  
                                              _KeyExpansion 0FE4  
                                __end_of_getSignalBandwidth 6358  
                                        ??_nwkEnableRouting 0071  
                                              ?_eMBRTUStart 0060  
                                         initRadio@wideRSSI 00A7  
                                __end_of_setSignalBandwidth 2E5E  
                                                   strlen@s 0071  
                                     nwkTxTaskHandler@frame 0089  
                                  ?_CRC_CalculatedResultGet 0078  
                                              _distanceData 0228  
                                         ?_nwkRxTaskHandler 0060  
                                nwkRxHandleIndication@frame 00C8  
                                                   strtol@a 0088  
                                                   strtol@c 008C  
                                                   strtol@s 007D  
                                  _TMR0_SetInterruptHandler BD3A  
                                                 _PORTAbits 003FCA  
                                                 _PORTBbits 003FCB  
                                      ??_NWK_RouteFreeEntry 0073  
                                          _usSndBufferCount 00D5  
                                      _xMBPortSerialGetByte BAFA  
                                  _TMR3_SetInterruptHandler BD30  
                                            ??_nwkRouteInit 0071  
                               __end_of_vMBPortSerialEnable B888  
                                        ??_nwkRxTaskHandler 00CD  
                                                _test_timer 02FB  
                                               ___fladd@grs 00A7  
                                         _handle_led_events A100  
                             ??_eMBFuncWriteHoldingRegister 009A  
                                      ??_prvvUARTTxReadyISR 0076  
                                     setFrequency@frequency 0092  
                                             ___xxtofl@sign 0079  
                                                _rw_mb_regs 6E14  
                                       SPI1_ReadBlock@block 0072  
                                                 _TRISCbits 003FC4  
                                            ??_PHY_SetPanId 0073  
                                             ?_NWK_GroupAdd 0078  
                                     ??_nwkDataReqSendFrame 008A  
                                        ?_handle_led_events 0060  
                                     _xMBRTUTimerT35Expired 97F4  
                                              strtol@endptr 007F  
                                     __end_of_queueLedEvent A962  
                                      ??_nwkRxIndicateFrame 00C4  
                                       _MB_TX_TYPE_ENCODING 026A  
                                      _xMBPortSerialPutByte BC02  
                                              ??_eMBRTUInit 0098  
                                       _nwkFrameCommandInit AE50  
                                             ?_NWK_SetPanId 0073  
                                              ??_eMBRTUSend 007F  
                                         sync_eeprom@i_1693 0079  
                                              ??_eMBRTUStop 0073  
                                    NWK_LinearizeLqi@F16058 FEA2  
                                         placeTimer@timeout 0077  
                                     nwkRxRejectDuplicate@i 0088  
                            ?_PHY_Set_Packet_Rssi_Threshold 0060  
                                   nwkTxAckReceived@command 007B  
                                             _SYS_TimerInit BCBE  
                                     __size_of_InvShiftRows 019C  
                                           _appManagementEp 7F64  
                                  __end_of_DATAEE_WriteByte A910  
                                     __end_of_prvvUARTRxISR BAFA  
                                              ??_eMBDisable 0073  
                                      ?_UART1_RxDataHandler 0060  
                                          ?_PHY_TaskHandler 0060  
                                          ?_TMR5_WriteTimer 0071  
                                            PHY_DataInd@ind 0084  
                                 NWK_RouteNextHop@multicast 0079  
                                       __end_of_sx1276_send A7B8  
                                   TMR5_WriteTimer@timerVal 0071  
                                     CircularBufferInit@buf 0073  
                                     CircularBufferInit@ctx 0071  
                            bootLoadApplication@buf_id_1205 00B1  
                                               ___flmul@grs 008D  
                                       ??_handle_led_events 008E  
                                    eMBRTUReceive@pusLength 007F  
                                                _rssi_debug 01FE  
                                   _nwkRxIndicateFrame$7032 03E5  
                                   _nwkRxIndicateFrame$7033 03E6  
                                   _nwkRxIndicateFrame$7034 03E7  
                                xMBRTUTransmitFSM@xNeedPoll 0075  
                                   _nwkRxIndicateFrame$7035 03E8  
                                   _nwkRxIndicateFrame$7036 03E9  
                                   _nwkRxIndicateFrame$7037 03EA  
                                            InvCipher@state 0091  
                                            InvCipher@round 0095  
                                       __end_of_appDataConf B388  
                            __size_of_nwkRouteErrorReceived 0066  
                                     setSignalBandwidth@sbw 0092  
                                           _SPI1_Initialize B910  
                                __end_of_check_multicast_rx AF18  
                             __end_of_nwkRouteErrorReceived A46E  
                                             ??_application 00C1  
           eMBFuncReadWriteMultipleHoldingRegister@pucFrame 0096  
               eMBFuncWriteMultipleHoldingRegister@pucFrame 0096  
                                          ??_free_tx_buffer 0093  
                                         _nwkTxAckWaitTimer 02B2  
                                             _msg_ack_queue 04D4  
                                         get_rssi@temp_rssi 0072  
                                          ??_compute_option 0073  
                                  ??_nwkTxDelayTimerHandler 0083  
                                   __end_of_start_radio_cad BC38  
                                            __end_of_Cipher 9C64  
                                          ?_xMBPortEventGet 0071  
                                    ??_nwkRxRejectDuplicate 0083  
                                __size_of_nwkDataReqConfirm 00EC  
                                      _timer0ReloadVal16bit 02EE  
                                     CircularBufferSize@ctx 0071  
                                      ?_nwkFrameCommandInit 0071  
                                           ?_nwkGroupSwitch 0071  
                                  __end_of_CRC_ReverseValue A338  
                                __size_of_SX1276WriteBuffer 0028  
                                         ?_SX1276ReadBuffer 0078  
                                            _set_timer0base B888  
                                             SubBytes@state 0071  
                              __end_of_INTERRUPT_Initialize A8BC  
                           __size_of_AES_CBC_decrypt_buffer 00F0  
                                   nwkRouteRemove@multicast 0079  
                                          _PHY_SetShortAddr BD8E  
                                            __end_of___flge 87CA  
                                __size_of_UART1_Receive_ISR 00A4  
                                      __end_of_setFrequency 7044  
                                            __end_of___lmul A810  
                                              ??_MixColumns 0074  
                                            __end_of___wmul B5C6  
                                          ??_nwkDataReqInit 0071  
                                        __end_of_eMBRTUInit 8D3C  
                                              ?_InvSubBytes 0071  
                                      __size_of_sync_eeprom 0228  
                                        __end_of_eMBRTUSend 8AFA  
                                        ??_SX1276ReadBuffer 007B  
                                    __size_of_nwkFrameAlloc 00D4  
                                        __end_of_eMBRTUStop BB84  
                                          cmdSetSink@buf_id 00BA  
                           CircularBufferPushBack@write_pos 008E  
                                         __size_of_TMR0_ISR 0026  
                                     ?_xMBPortSerialGetByte 0071  
                                __size_of_CRC_8BitDataWrite 0018  
                                         __size_of_TMR3_ISR 0096  
                                 __end_of_handle_led_events A17C  
                                __size_of_xMBRTUTransmitFSM 00AE  
                                         __size_of_PHY_Init 0008  
                                            __end_of_memcpy A004  
                                    ?_OSCILLATOR_Initialize 0060  
                                       __size_of_cmdSetSink 032C  
                                            __end_of_keycmp 96CE  
                                        __end_of_eMBDisable AFD8  
                                            __end_of_memset B18C  
                                          app_aes_decrypt@i 0116  
                                            eMBPoll@eStatus 00AD  
                                            _usRcvBufferPos 00D3  
                                 __size_of_nwkTxAckReceived 00CE  
                                            SX1276Read@addr 007C  
                                           setFrequency@num 009A  
                                            SX1276Read@data 007D  
                                                 _eMBEnable B18C  
                                       __size_of_appDataInd 015E  
                                          cmdSetSink@msgstr 00A3  
                                        NWK_RouteNewEntry@i 0075  
                                         __size_of_NWK_Init 0062  
                                         ??_NWK_TaskHandler 00D1  
                                              _InvShiftRows 537A  
                                            __end_of_printf 2432  
                                       _nwkTxBroadcastFrame 5836  
                                             ??_loadMACAddr 0075  
                                               ?_placeTimer 0071  
                                            __end_of_strchr B098  
                                            __end_of_strlen A64E  
                                       _handle_tx_regs$1240 00A2  
                                       _handle_tx_regs$1241 00A4  
                                       _handle_tx_regs$1242 00A5  
                                          _xMBPortEventInit BCEA  
                                            __end_of_strtol 4CBC  
                                            __end_of_strstr 95A2  
                                                 _InvCipher A1F8  
                                            _TMR5_ReadTimer B542  
                                       start_initialization 65D2  
                                          _xMBPortEventPost BB9A  
                                            ??_NWK_GroupAdd 007A  
                                ??_SystemArbiter_Initialize 0071  
                                  __size_of_TMR0_Initialize 0048  
                                    eMBRegHoldingCB@usNRegs 0081  
                                     _nwkTxConvertPhyStatus B098  
                           __size_of_PIN_MANAGER_Initialize 00C2  
                                     _tx_ctl_mb_regs_upadte 01E7  
                                            ??_NWK_SetPanId 0075  
                                               __end_of_cad 7DA8  
                                         eMBRTUSend@eStatus 0080  
                                     ?_xMBPortSerialPutByte 0060  
                                             nwkFrameInit@i 0071  
                                      __size_of_Default_ISR 0006  
                                   ??_UART1_SetErrorHandler 0073  
                                            ?_SYS_TimerInit 0060  
                                         _blen_sample_timer 01F7  
                                    eMBRegHoldingCB@tempptr 0086  
                                     _nwkRouteFrameReceived 4CBC  
                                   __size_of_CRC_Initialize 0092  
                                   ?_nwkRouteSendRouteError 0088  
                                  __size_of_SYS_TaskHandler 000E  
                                         __size_of_SYS_Init 000E  
                                     ??_UART1_RxDataHandler 0060  
                                             _Timer0Handler 9D70  
                               __end_of_vMBPortTimersEnable BA7C  
                                                ivt0x8_base 0008  
                             __size_of_SYS_TimerTaskHandler 0124  
                                   NWK_RouteFreeEntry@entry 0071  
                                         ?_SYS_TimerStarted 0071  
                                          app_aes_encrypt@i 0114  
                                            _handle_rw_regs 148E  
                                            _handle_rx_regs A962  
                             xMBPortEventGet@xEventHappened 0073  
                                   _pxMBFrameCBByteReceived 0246  
                                            _nwkRouteRemove B4B6  
                                         eMBRTUSend@usCRC16 0081  
                                            _handle_tx_regs 37B2  
                            __size_of_prveMBError2Exception 0048  
                                             _uart1RxBuffer 0500  
                             __end_of_prveMBError2Exception AD36  
                                              _msgIDCounter 01F0  
                               __end_of_bootLoadApplication 0FE4  
                                        ??_SYS_TimerStarted 0073  
                                         ??_eMBRegHoldingCB 0084  
                                            _TMR3_StopTimer BD88  
                                        __end_of_MixColumns 34A6  
                                             _uart1TxBuffer 0540  
                                          _NWK_OpenEndpoint B7FE  
                                           ___llmod@divisor 0075  
                                      __end_of_nwkFrameFree BACA  
                                      __end_of_nwkFrameInit B5F2  
                                 __size_of_DIO0_Receive_ISR 00D8  
                                               ?_setTxPower 0060  
                                      __end_of_nwkFrameNext 93D0  
                                      ?_nwkTxBroadcastFrame 0084  
                                           ___llmod@counter 0079  
                                         usMBCRC16@pucFrame 0071  
                                       DATAEE_ReadByte@bAdd 0071  
                                      queueLedEvent@ret_var 0093  
                                                  ??_Cipher 0087  
                                       _prvvTIMERExpiredISR BA46  
                                    nwkRouteFrameSent@frame 0077  
                                             crc16_app@dptr 0082  
                                    nwkRouteFrameSent@entry 007B  
                                             crc16_app@seed 0086  
                                                 SubBytes@i 0079  
                                                 SubBytes@j 007A  
                                     __end_of_InvMixColumns 0944  
                                                 _ShiftRows 51DE  
                                         _nwkRouteFrameSent 7256  
                                    __end_of_set_timer0base B8AA  
                                         eMBInit@ulBaudRate 009F  
                                     ??_nwkFrameCommandInit 0073  
                                           NWK_SetAddr@addr 0073  
                                         ?_xMBRTUReceiveFSM 0060  
                                               ?_nwkTxFrame 0082  
                                         nwkRouteRemove@dst 0077  
                                               ?_set_parity 0060  
                                           _pucSndBufferCur 0240  
                           __end_of_CRC_CalculatedResultGet 754E  
                                             MixColumns@Tmp 0080  
                                                  ??___flge 0087  
                             nwkTxDelayTimerHandler@restart 0085  
                                          ??_PMD_Initialize 0071  
                           __size_of_nwkRouteNormalizeRanks 0046  
                                                  ??___lmul 0079  
                                                  ??___wmul 0075  
                              prveMBError2Exception@eStatus 0074  
                           CRC_CalculatedResultGet@xorValue 0078  
                                        ?_nwkRouteFrameSent 0077  
                                                keycmp@temp 007A  
                                  _nwkTxAckWaitTimerHandler 9A36  
                                                keycmp@size 0075  
                                    __size_of_TMR0_CallBack 0022  
                                        ??_xMBRTUReceiveFSM 0073  
                                       __end_of_application B542  
                                         NWK_SetPanId@panId 0073  
                                         __size_of_SubBytes 00A2  
                                               __pdataBANK0 00E8  
                                               __pdataBANK1 01FC  
                                               __pdataBANK2 02F5  
                                               __pdataBANK3 03C9  
                                     CRC_8BitDataWrite@data 0071  
                                         ??_AES_init_ctx_iv 008E  
                                                  ??_memcpy 007E  
                                         SYS_TimerStarted@t 0073  
                                                  ??_keycmp 0076  
                                                  ??_memset 0077  
                                             ??_SX1276Write 007F  
                                            _PHY_SetChannel AE94  
                                    __size_of_reset_handler 0056  
                                      __end_of_nwkGroupInit B516  
                                       app_aes_encrypt@data 0098  
                                         ?_nwkTxTaskHandler 0060  
                                            _uart_baud_rate 01F2  
                                            _TMR5_StopTimer BD78  
                                       app_aes_encrypt@size 009A  
                                                  ??_strchr 0075  
                                     __size_of_radio_engine 0278  
                                         ??_set_eeprom_sync 0071  
                                                  ??_strlen 0074  
                                    __end_of_TMR5_ReadTimer B56E  
                                                  ??_strtol 0083  
                                                  ??_strstr 0082  
                                                ?_eMBEnable 0060  
                                       ??_nwkRouteFrameSent 0079  
                                                 ___fladd@a 009C  
                                                 _eRcvState 00D9  
                                                 ___fladd@b 0098  
                                               __pbssBANK10 0A00  
                                      ?_prvvTIMERExpiredISR 0060  
                                     PHY_SetChannel@channel 009E  
                                            _symbolDuration 0328  
                                               __pbssBIGRAM 0AA0  
                                   __end_of_appManagementEp 8042  
                                        ??_nwkTxTaskHandler 0087  
                                                 _eSndState 01E0  
                                      handle_rx_regs@buf_id 007B  
                                                ?_InvCipher 0091  
                                                 ___flmul@a 0083  
                                                 ___flmul@b 007F  
                                       _peMBFrameReceiveCur 0234  
                                    ?_xMBRTUTimerT35Expired 0060  
                                            set_uart_baud@i 0073  
                                         __size_of__fassert 006A  
                                               ?_rw_mb_regs 0071  
                                          ??_SPI1_ReadBlock 0076  
                                        _UART1_ErrorHandler 03F9  
                               __size_of_get_free_rx_buffer 0084  
                                             __pcstackBANK0 0060  
                                             __pcstackBANK1 0100  
                                             __pcstackBANK3 03E5  
                                               _sx1276_send A760  
                            __end_of_nwkRouteSendRouteError 7CC6  
                                   nwkRoutePrepareTx@header 0080  
                                      setSpreadingFactor@sf 009A  
                                                 _XorWithIv AC5C  
                                    __size_of_TMR3_CallBack 0022  
                                               _CRCCON0bits 003968  
                                               _CRCCON1bits 003969  
                                 bootLoadApplication@buf_id 00B0  
                                              _isalpha$9726 0075  
                                      eMBRegHoldingCB@eMode 0083  
                                     _nwkDataReqTaskHandler A17C  
                                  nwkFramePayloadSize@frame 0071  
                                                 _crc16_app 99A6  
                                      __end_of_PHY_DataConf B018  
                                               XorWithIv@Iv 0073  
                                      __end_of_nwkRxSendAck 7150  
                                               _appDataConf B352  
                                    __end_of_handle_rw_regs 18B0  
                                      __end_of_nwkTxConfirm B766  
                                    __end_of_handle_rx_regs A9B2  
                                         __size_of___xxtofl 0144  
                       xMBPortTimersInit@usTim1Timerout50us 0077  
                                       AddRoundKey@RoundKey 0073  
                                            ?_Timer0Handler 0060  
                                   __end_of_SPI1_Initialize B932  
                                    _AES_CBC_decrypt_buffer 7830  
                                  _UART1_RxInterruptHandler 02F2  
                                   ?_AES_CBC_encrypt_buffer 0088  
                                    __end_of_nwkRouteRemove B4E6  
                             nwkRxHandleReceivedFrame@frame 008E  
                                    __end_of_handle_tx_regs 3AB0  
                                              _isdigit$9729 0072  
                               __size_of_get_free_tx_buffer 0084  
                                   nwkRxIndicateFrame@frame 00C2  
                               __size_of_getSpreadingFactor 001E  
                                            _sensorStateVar 0259  
                                 SYS_TimerTaskHandler@timer 0091  
                               __size_of_setSpreadingFactor 00F4  
                               ??_DATAEE_WriteByte_Platform 0078  
                        eMBFuncWriteHoldingRegister@eStatus 009E  
                                       __end_of_loadMACAddr 8A34  
                                     cmdSetSink@needed_size 00B7  
                                    __end_of_TMR3_StopTimer BD8C  
                         __size_of_DATAEE_ReadByte_Platform 013C  
                                   ?_CircularBufferPopFront 0084  
                                   CRC_ReverseValue@reverse 0074  
                                           _SPI1_WriteBlock B31C  
                                 ?_DATAEE_ReadByte_Platform 0075  
                                              _currentAddr0 00EB  
                                              _currentAddr1 00EA  
                                             _nwkFrameAlloc 8624  
                                             setSyncWord@sw 0080  
                                         _nwkRoutePrepareTx 697C  
                                       _nwkTxPhyActiveFrame 023E  
                                              _currentNetID 01FF  
                                              _currentMsgID 026E  
                                         __size_of_get_rssi 0034  
                                     ??_nwkTxBroadcastFrame 0086  
                                   ?_CircularBufferPushBack 0084  
                              ?_UART1_SetRxInterruptHandler 0071  
                           nwkRouteSendRouteError@multicast 008C  
                                                  ?_eMBInit 009D  
                                     _TMR0_InterruptHandler 02EC  
                                        ?_nwkRoutePrepareTx 007C  
                                 __end_of_nwkRouteFrameSent 7356  
                                              cmdSetSink@N0 00B6  
                                              cmdSetSink@N1 00B5  
                                              cmdSetSink@N2 00B4  
                                              cmdSetSink@N3 00B3  
                                                  ?_eMBPoll 0060  
                                                 __pnvBANK2 02E6  
                                                 __pnvBANK3 03F9  
                                      __end_of_nwkRouteInit A760  
                                     eMBInit@ucSlaveAddress 009D  
                                            _ATTimeoutTimer 02FD  
                                                ?_ShiftRows 0071  
                                       __size_of_placeTimer 01B4  
                                       _nwkFramePayloadSize B3BC  
                                    _PIN_MANAGER_Initialize 8BBC  
                                          ?_start_radio_cad 0060  
                                           ?_set_timer0base 0071  
                           __size_of_nwkTxDelayTimerHandler 008C  
                                 __size_of_start_loop_timer 0014  
                                  __size_of_TMR3_Initialize 004E  
                                         ?_UART1_Initialize 0060  
                                 __size_of_NWK_RouteNextHop 0046  
                                    appManagementEp@dataptr 00BC  
                      __end_of_UART1_SetFramingErrorHandler BD26  
                     __size_of_UART1_SetFramingErrorHandler 000A  
                              _UART1_SetFramingErrorHandler BD1C  
                                              _radio_engine 3D2E  
                                      __end_of_PHY_SetPanId BD8E  
                                             __pmediumconst FA54  
                                                 _enableCrc BBDA  
                                                  ?___fladd 0098  
                                                 _ascii_lut FE7D  
                                       ??_nwkRoutePrepareTx 007E  
                                                 __ptext100 6BCE  
                                                 __ptext101 9A36  
                                             nwkGroupInit@i 0071  
                                                 __ptext110 BC48  
                                                 __ptext102 A4D2  
                                                 __ptext111 B1C6  
                                                 __ptext103 9B52  
                                                 __ptext200 AA4E  
                                                 __ptext120 BBDA  
                                                 __ptext112 BC58  
                                                 __ptext104 B740  
                                                 __ptext201 0FE4  
                                                 __ptext121 AE94  
                                                 __ptext113 773C  
                                                 __ptext105 BD58  
                                                 __ptext210 A3A0  
                                                 __ptext202 7830  
                                                 __ptext130 AFD8  
                                                 __ptext122 6F32  
                                                 __ptext114 2B1C  
                                                 __ptext106 3D2E  
                                                 __ptext211 7356  
                                                 __ptext203 AC5C  
                                                 __ptext131 B098  
                                                 __ptext123 A338  
                                                 __ptext115 B9B6  
                                                 __ptext107 A760  
                                                 __ptext220 697C  
                                                 __ptext212 7BE2  
                                                 __ptext204 A1F8  
                                                 __ptext140 B718  
                                                 __ptext132 81F8  
                                                 __ptext124 9E7A  
                                                 __ptext116 6218  
                                                 __ptext108 9886  
                                                 __ptext221 AE0A  
                                                 __ptext213 AE50  
                                                 __ptext205 91F2  
                                                 __ptext141 B2AC  
                                                 __ptext133 AD7E  
                                                 __ptext125 7CC6  
                                                 __ptext117 86F8  
                                                 __ptext109 6CF2  
                                                 __ptext230 6846  
                                                 __ptext222 A082  
                                                 __ptext214 BAB0  
                                                 __ptext206 537A  
                                                 __ptext150 27CC  
                                                 __ptext142 BA2A  
                                                 __ptext134 BA7C  
                                                 __ptext126 BC26  
                                                 __ptext118 BBB0  
                                                 __ptext231 9F82  
                                                 __ptext223 B0D6  
                                                 __ptext215 A17C  
                                                 __ptext207 00B6  
                                                 __ptext151 34A6  
                                                 __ptext143 9916  
                                                 __ptext135 BA96  
                                                 __ptext127 BC94  
                                                 __ptext119 AB7E  
                                                 __ptext240 A706  
                                                 __ptext232 B59A  
                                                 __ptext224 BD5E  
                                                 __ptext216 18B0  
                                                 __ptext208 BBEE  
                                                 __ptext160 1CB4  
                                                 __ptext152 5B38  
                                                 __ptext144 A910  
                                                 __ptext136 B9D4  
                                                 __ptext128 B888  
                                                 __ptext241 B4E6  
                                                 __ptext233 BCB0  
                                                 __ptext225 8624  
                                                 __ptext217 503C  
                                                 __ptext209 93D0  
                                                 __ptext161 5836  
                                                 __ptext153 BCA2  
                                                 __ptext145 B018  
                                                 __ptext137 B6F0  
                                                 __ptext129 B672  
                                                 __ptext250 BD26  
                                                 __ptext242 B5C6  
                                                 __ptext234 BCBE  
                                                 __ptext226 B150  
                                                 __ptext218 A64E  
                                                 __ptext170 4216  
                                                 __ptext162 3AB0  
                                                 __ptext154 48D8  
                                                 __ptext146 B388  
                                                 __ptext138 B31C  
                                                 __ptext251 AA00  
                                                 __ptext243 BCCA  
                                                 __ptext235 BD44  
                                                 __ptext227 7A0C  
                                                 __ptext219 A7B8  
                                                 __ptext171 7F64  
                                                 __ptext163 B976  
                                                 __ptext155 7256  
                                                 __ptext147 96CE  
                                                 __ptext139 B8AA  
                                                 __ptext260 A866  
                                                 __ptext252 BD30  
                                                 __ptext244 B6C6  
                                                 __ptext236 A534  
                                                 __ptext228 B352  
                                                 __ptext180 7AF8  
                                                 __ptext172 5E2A  
                                                 __ptext164 4E88  
                                                 __ptext156 ADC4  
                                                 __ptext148 60D4  
                                                 __ptext261 9762  
                                                 __ptext253 AD36  
                                                 __ptext245 82D0  
                                                 __ptext237 AA9A  
                                                 __ptext229 8AFA  
                                                 __ptext181 4AD8  
                                                 __ptext173 A004  
                                                 __ptext165 ABC8  
                                                 __ptext157 8EAA  
                                                 __ptext149 7E86  
                                                 __ptext270 90AC  
                                                 __ptext262 B768  
                                                 __ptext254 BD3A  
                                                 __ptext246 BCFE  
                                                 __ptext238 A6AA  
                                                 __ptext190 B058  
                                                 __ptext182 BB12  
                                                 __ptext174 889C  
                                                 __ptext166 4CBC  
                                                 __ptext158 B2E4  
                                                 __ptext271 BD94  
                                                 __ptext263 B932  
                                                 __ptext255 BC68  
                                                 __ptext247 BD08  
                                                 __ptext239 B7FE  
                                                 __ptext191 AC12  
                                                 __ptext183 B69C  
                                                 __ptext175 9332  
                                                 __ptext167 811E  
                                                 __ptext159 946E  
                                                 __ptext280 0000  
                                                 __ptext272 BD96  
                                                 __ptext264 BD92  
                                                 __ptext256 B910  
                                                 __ptext248 BD12  
                                                 __ptext192 A8BC  
                                                 __ptext184 B8CC  
                                                 __ptext176 A408  
                                                 __ptext168 87CA  
                                                 __ptext273 BD6A  
                                                 __ptext265 9D70  
                                                 __ptext257 B454  
                                                 __ptext249 BD1C  
                                                 __ptext193 9EFE  
                                                 __ptext185 B56E  
                                                 __ptext177 B4B6  
                                                 __ptext169 7044  
                                                 __ptext274 B5F2  
                                                 __ptext266 BD64  
                                                 __ptext258 8BBC  
                                                 __ptext194 AED6  
                                                 __ptext186 B8EE  
                                                 __ptext178 B200  
                                                 __ptext275 95A4  
                                                 __ptext267 B790  
                                                 __ptext259 B996  
                                                 __ptext195 6358  
                                                 __ptext187 9508  
                                                 __ptext179 B3BC  
                                                 __ptext276 B954  
                                                 __ptext268 B23A  
                                                 __ptext196 99A6  
                                                 __ptext188 9AC4  
                                                 __ptext277 BD98  
                                                 __ptext269 AAE8  
                                                 __ptext197 7454  
                                                 __ptext189 A5F2  
                                    __end_of_PHY_SetChannel AED6  
                                                 __ptext278 BA46  
                                                 __ptext198 A2CE  
                                    __size_of_set_uart_baud 00F8  
                                                 __ptext279 97F4  
                                                 __ptext199 BB2A  
                                                  ?___flmul 007F  
                                                  ?___fltol 00A8  
                                                  ?___lldiv 0085  
                                                  ?___llmod 0071  
                                CircularBufferInit@buf_size 0075  
                                        ??_UART1_Initialize 0073  
                                          _nwkDataReqTxConf 8EAA  
                                               _ucMBAddress 01DF  
                                    ??_xMBPortSerialGetByte 0073  
                                    __end_of_TMR5_StopTimer BD7C  
                                 handle_rw_regs@msg_ack_obj 00AD  
                                     NWK_RouteNextHop@entry 007A  
                                          _uart1RxLastError 0258  
                                  __size_of_stop_loop_timer 004A  
                                   ?_handle_write_only_regs 0060  
                                    needed_packet_length@rc 0073  
                                __size_of_handle_led_events 007C  
                                                  ?_ledInit 0060  
                                                  ?_get_lqi 0060  
                                     ??_prvvTIMERExpiredISR 0066  
                                 _pxMBFrameCBTransmitFSMCur 022E  
                                           ?_TMR5_ReadTimer 0071  
                                    __size_of_nwkRouteFrame 00FE  
                                      __size_of_eMBRTUStart 001C  
                                     _nwkRxHandleIndication 87CA  
              eMBFuncReadWriteMultipleHoldingRegister@usLen 0098  
                  eMBFuncWriteMultipleHoldingRegister@usLen 0098  
                                                 _fhssdebug 025E  
                                         ?_exract_sink_addr 008D  
                  __end_of_UART1_DefaultOverrunErrorHandler BD96  
                 __size_of_UART1_DefaultOverrunErrorHandler 0002  
                          _UART1_DefaultOverrunErrorHandler BD94  
                                                  ?_isalpha 0060  
                                                  ?_isdigit 0060  
                                       __size_of_setTxPower 003A  
                                    ?_nwkTxConvertPhyStatus 0060  
                                                  ?_receive 0060  
                                    xMBRTUReceiveFSM@ucByte 0076  
                                    ??_xMBPortSerialPutByte 0071  
                                                 _usMBCRC16 9294  
                                      ?_nwkFramePayloadSize 0071  
                                           ??_SYS_TimerInit 0071  
                                                  ?_isspace 0060  
                            __end_of_AES_CBC_encrypt_buffer 847C  
                                                  ?_isupper 0060  
                                      fill_rx_regs@dest_ptr 0096  
                                    ?_nwkRouteFrameReceived 007A  
                                                ?_XorWithIv 0071  
                                       __end_of_SX1276Write B9F2  
                                        ??_exract_sink_addr 008F  
                                    _nwkRouteNormalizeRanks ADC4  
                                                 _initRadio 6CF2  
                                                ?_crc16_app 0082  
                                     DIA_ReadByte@flashAddr 0071  
                                  __size_of_app_aes_decrypt 013E  
                                           ?_handle_rw_regs 0060  
                                           ?_handle_rx_regs 0060  
                           ??_PHY_Get_Packet_Rssi_Threshold 0071  
                            __end_of_CircularBufferPopFront 6846  
                                       __size_of_nwkTxFrame 01A2  
                                           ?_nwkRouteRemove 0077  
                                 nwkRxRejectDuplicate@entry 008C  
                                       __size_of_set_parity 0086  
                                           ?_handle_tx_regs 0060  
                               eMBRTUReceive@xFrameReceived 0085  
                                             _TMR0_CallBack B932  
                                 __end_of_nwkRoutePrepareTx 6AA8  
                                 nwkRxRejectDuplicate@shift 0087  
                                  __size_of_DATAEE_ReadByte 0024  
                                                  ?_strncmp 0077  
                                                  ?_toupper 0060  
                                  __size_of_app_aes_encrypt 014C  
                                               _U1ERRIRbits 003DF9  
                                            __size_of_srand 0010  
                                            ?_nwkFrameAlloc 0079  
                                            __size_of_putch 000E  
eMBFuncReadWriteMultipleHoldingRegister@ucRegWriteByteCount 009E  
                                      _INTERRUPT_Initialize A866  
                                          eMBRTUInit@ucPort 0092  
                                            __size_of_xtime 0014  
                                          AddRoundKey@state 0071  
                                                  _U1CTSPPS 003AE6  
                                          AddRoundKey@round 007A  
                                          __cadBackoffTimer 00E6  
                            __end_of_CircularBufferPushBack 697C  
                                             ??_nwkIsRouter 0071  
                                             _reset_handler A810  
                                              ??_cmdSetSink 00A0  
                                      SX1276ReadBuffer@addr 007B  
                                              ??_appDataInd 00BC  
                                                nwkRxInit@i 0074  
                                         ??_TMR0_Initialize 0073  
                                   __size_of_get_timer0base 002A  
                                      SX1276ReadBuffer@size 007A  
                                         free_tx_buffer@ack 0092  
                                         free_tx_buffer@req 0090  
                                             ??_setSyncWord 0080  
                                            ___wmul@product 0075  
                                            ShiftRows@state 0071  
                                       queue_rx_led_event@i 0097  
                                                  _LATAbits 003FBA  
                     UART1_SetErrorHandler@interruptHandler 0071  
                                                  _LATCbits 003FBC  
                  nwkRxDuplicateRejectionTimerHandler@timer 0081  
                               __size_of_explicitHeaderMode 001A  
                                                  _SCANCON0 00397C  
                                                  _EUIDbyte 03B3  
                                               _ledTimerVar 024C  
                                         ??_SYS_TaskHandler 00D1  
                                            appDataConf@ack 009C  
                                                  _IPR3bits 003983  
                                                  _SCANTRIG 00397D  
                                                  _IPR4bits 003984  
                                                  _PIE3bits 003993  
                                            appDataConf@req 009A  
                                  ??_load_on_demand_mb_regs 0075  
                                                  _IPR6bits 003986  
                                                  _PIE6bits 003996  
                                               _application B516  
                                                 _phyTxSize 01EA  
                                     app_aes_decrypt@apphdr 0114  
                                           nwkGroupSwitch@i 0077  
                                               _ledStateVar 025C  
                                         _NWK_RouteNewEntry 811E  
                                                 _sinkAddr0 00E0  
                                                 _sinkAddr1 00DF  
                             ??_UART1_SetRxInterruptHandler 0073  
                                     __size_of_setFrequency 0112  
                                __end_of_CircularBufferInit 8DF8  
                                ??_TMR0_SetInterruptHandler 0073  
                                                  _PIR0bits 0039A0  
                                                 _nwkGroups 0372  
                                __end_of_CircularBufferSize A408  
                               nwkRouteFrameReceived@header 0082  
                                                  _PIR2bits 0039A2  
                                                  _SPI1BAUD 003D19  
                                     app_aes_decrypt@random 0112  
                                                  _PIR3bits 0039A3  
                                                  _SPI1CON0 003D14  
                                                  _SPI1CON1 003D15  
                                                  _SPI1CON2 003D16  
                                ??_TMR3_SetInterruptHandler 0073  
                                             _TMR3_CallBack B954  
                                             ??_PHY_DataInd 0086  
                                                  _PIR6bits 0039A6  
                                      __end_of_NWK_GroupAdd BB9A  
                                                 _nwkRxInit A6AA  
                                             ??_PHY_DataReq 0087  
                                                 _nwkTxInit AA9A  
                                       __size_of_rw_mb_regs 011E  
                                        ?_NWK_RouteNewEntry 0071  
                                   _eeprom_write_flags_enum 026F  
                                            _ATVersionMajor FEB3  
                                      __end_of_NWK_SetPanId BB58  
                                                ?_enableCrc 0060  
                                            _ATVersionMinor FEB2  
                                                  _TMR0_ISR B768  
                                 _DATAEE_WriteByte_Platform AC12  
                                                  _TMR3_ISR 95A4  
                                           ?_PHY_SetChannel 0060  
                                __end_of_UART1_Transmit_ISR B274  
                               xMBPortSerialInit@ucDataBits 0075  
                               __size_of_queue_rx_led_event 0090  
            eMBFuncReadWriteMultipleHoldingRegister@eStatus 00A3  
                eMBFuncWriteMultipleHoldingRegister@eStatus 009F  
                            __end_of_handle_write_only_regs 56A6  
                                                  _PHY_Init BD44  
                             ?_UART1_SetFramingErrorHandler 0071  
                                           ?_TMR5_StopTimer 0060  
                                          initRadio@version 00A6  
                                           KeyExpansion@Key 0073  
                                                  _NWK_Init A534  
                                                 _txTimeOut 00E2  
                                        SPI1_ReadBlock@data 0076  
                                     eMBRTUReceive@pucFrame 007D  
                                                 _rx_buffer 0D52  
                              AES_CBC_encrypt_buffer@length 008C  
                                    __size_of_eMBRTUReceive 00D4  
                                        NWK_GroupIsMember@i 0075  
                                      free_tx_buffer@buf_id 0099  
                                       ??_NWK_RouteNewEntry 0073  
                                         ___wmul@multiplier 0071  
                                          _nwkTxAckReceived 889C  
                                      getSignalBandwidth@bw 0084  
                              __end_of_needed_packet_length AF58  
                         nwkRxHandleReceivedFrame@broadcast 0092  
                                               ??_eMBEnable 0073  
                                      __size_of_InvSubBytes 00A2  
                                        __end_of_cmdSetSink 318A  
                                         loadMACAddr@i_1185 007E  
                                    nwkDataReqSendFrame@req 0088  
                                                  eMBPoll@i 00AF  
                                                 _tx_buffer 0EC3  
                              __size_of_uart_default_engine 017C  
                                        __end_of_appDataInd 5F88  
                                      setSignalBandwidth@bw 009E  
                                     ??_nwkFramePayloadSize 0073  
                          __end_of_SystemArbiter_Initialize BC78  
                                  __size_of_TMR3_StartTimer 0004  
                                          ?_appManagementEp 00BA  
                                               _loadMACAddr 896A  
                                               ??_InvCipher 0095  
                                                ?_usMBCRC16 0071  
                                    ?_nwkDataReqTaskHandler 0060  
                                   __end_of_SPI1_WriteBlock B352  
                                           ??_Timer0Handler 0070  
                                    _nwkTxDelayTimerHandler 9B52  
                                 TMR5_ReadTimer@readValHigh 0077  
                                                  _SYS_Init BCB0  
                                  exract_sink_addr@tempaddr 0095  
                       DATAEE_ReadByte_Platform@return_copy 0077  
                                       __end_of_UART1_Write AA00  
                                         _read_only_mb_regs 0350  
                                     DATAEE_WriteByte@bData 0073  
                                             ??_NWK_DataReq 0073  
                               __end_of_nwkRxServiceDataInd A082  
                                                ?_initRadio 0060  
                                 __size_of_nwkEnableRouting 000A  
                                              _isspace$9732 0072  
                              handle_write_only_regs@j_1224 00BE  
                                            _CRC_Initialize 9762  
                                               _mb_rtu_addr 00E9  
                                            ?_TMR0_CallBack 0060  
                                    _pxMBPortCBTimerExpired 0244  
                                        _UART_error_handler B274  
                                             _set_uart_baud 754E  
                                          ?_SPI1_Initialize 0060  
                                        _getSignalBandwidth 6218  
                                        _setSignalBandwidth 2B1C  
                                               _INTCON0bits 003FD2  
                                         ___lmul@multiplier 0071  
                                     __size_of_nwkFrameFree 001A  
                                                 copy_data0 65E6  
                                                 copy_data1 6608  
                                                 copy_data2 662A  
                                                 copy_data3 664C  
                                     __size_of_nwkFrameInit 002C  
                                     ?_INTERRUPT_Initialize 0060  
                                          get_rssi@rssi_reg 0071  
                                     __size_of_nwkFrameNext 009E  
                               nwkDataReqSendFrame@mcHeader 008D  
                          __size_of_CRC_CalculatedResultGet 00FA  
                                  __end_of_PHY_SetShortAddr BD90  
                                            ?_reset_handler 0060  
                                  app_aes_decrypt@crc16_cal 0110  
                               xMBPortSerialInit@ulBaudRate 0071  
                             nwkRxRejectDuplicate@freeEntry 008A  
                                         ?_DATAEE_WriteByte 0071  
                                              _setFrequency 6F32  
                                 __size_of_nwkRxTaskHandler 009A  
                                       _distanceDataCounter 025A  
                                             ??_NWK_SetAddr 0075  
                                    _uart1TxBufferRemaining 02F4  
                                                  _eMBState 01FC  
                              _nwkRxDuplicateRejectionTable 0A00  
                              _nwkRxDuplicateRejectionTimer 02BF  
                                 __end_of_NWK_RouteNewEntry 81F8  
                                             _nwkRouteFrame 7356  
                                        ??_DATAEE_WriteByte 0074  
                                __end_of_vMBPortTimersDelay BD92  
                              handle_write_only_regs@keyptr 00BF  
                                               _ledtasksbuf 02CC  
                                          _DIO0_Receive_ISR 81F8  
                                             _nwkRouteTable 0800  
                                       ?_getSignalBandwidth 007E  
                                       ?_setSignalBandwidth 0092  
                                          ??_nwkGroupSwitch 0075  
                                             ??_AddRoundKey 0075  
                                __size_of_nwkRouteFrameSent 0100  
                                                  __Hparam0 0000  
                                        appManagementEp@ind 00BA  
                                              _uart1RxCount 01E1  
                                        appManagementEp@ptr 00BE  
                                          __size_of_eMBInit 00EC  
                                __end_of_implicitHeaderMode BA96  
                                          __size_of_eMBPoll 0240  
                                                  __Lparam0 0000  
                                  __end_of_xMBPortEventInit BCF4  
                                               ??_ShiftRows 0073  
                                            ?_TMR3_CallBack 0060  
                                    __end_of_ATVersionMajor FEB4  
                                  __end_of_xMBPortEventPost BBB0  
                                  __size_of_TMR3_WriteTimer 0040  
                                    __end_of_ATVersionMinor FEB3  
                                       __end_of_nwkIsRouter BD64  
                                                 memcpy@tmp 0081  
                                                ?_nwkRxInit 0060  
                                                ?_nwkTxInit 0060  
                                                  _SubBytes 9150  
                                           _NWK_TaskHandler BCA2  
                                     __size_of_nwkGroupInit 0030  
                           ??_PHY_Set_Packet_Rssi_Threshold 0071  
                         PHY_Set_Packet_Rssi_Threshold@rssi 0071  
                                xMBPortSerialPutByte@ucByte 0071  
                                                 keycmp@key 0071  
                                                 keycmp@new 0073  
                                           _nwkRxAckControl 0254  
                                       __end_of_setSyncWord BC68  
                                            InvMixColumns@a 008D  
                                            InvMixColumns@b 008E  
                                            InvMixColumns@c 008F  
                                            InvMixColumns@d 0090  
                                            InvMixColumns@i 008B  
                                   ??_OSCILLATOR_Initialize 0071  
                                         ?_CRC_ReverseValue 0071  
                                   __size_of_setCodingRate4 004A  
              __end_of_PHY_Get_Packet_Rssi_Threshold_Limits B866  
             __size_of_PHY_Get_Packet_Rssi_Threshold_Limits 0022  
                    ??_PHY_Get_Packet_Rssi_Threshold_Limits 0075  
                     ?_PHY_Get_Packet_Rssi_Threshold_Limits 0071  
                      _PHY_Get_Packet_Rssi_Threshold_Limits B844  
                               __size_of_queue_tx_led_event 0090  
                                         appDataInd@dataptr 00BF  
                                          __size_of___fladd 030C  
                              nwkRouteErrorReceived@command 007F  
                               __size_of_NWK_RouteFindEntry 007E  
                              ??_eMBFuncReadHoldingRegister 009A  
                                          __size_of___flmul 0350  
                                               _REGION_CODE 0264  
                                          __size_of___fltol 00DE  
                              DATAEE_ReadByte_Platform@addr 0075  
                                          __size_of___lldiv 0084  
                              __size_of_CircularBufferEmpty 0030  
                                          __size_of___llmod 0068  
                                        _check_multicast_rx AED6  
                                     handle_tx_regs@src_ptr 00A7  
                                     SYS_TimerStarted@timer 0071  
                                     nwkRxTaskHandler@frame 00CF  
                                          __size_of___lwdiv 0106  
                                          __size_of___lwmod 00D4  
                              __size_of_CircularBufferSpace 0040  
                                        ??_CRC_ReverseValue 0073  
               __end_of_nwkRxDuplicateRejectionTimerHandler A534  
              __size_of_nwkRxDuplicateRejectionTimerHandler 0062  
                     ??_nwkRxDuplicateRejectionTimerHandler 0083  
                      ?_nwkRxDuplicateRejectionTimerHandler 0081  
                       _nwkRxDuplicateRejectionTimerHandler A4D2  
                                    nwkRoutePrepareTx@frame 007C  
                                               _SX1276Write B9D4  
                                       __end_of_PHY_DataInd 5CB4  
                                    ?_nwkRxHandleIndication 00C8  
                                       __end_of_PHY_DataReq B31C  
                                         ??_TMR3_Initialize 0073  
                               __end_of_nwkDataReqSendFrame 1CB4  
                                   __size_of_SYS_TimerStart 0020  
                                      ??_getSignalBandwidth 0082  
                               __size_of_NWK_RouteFreeEntry 003A  
                                  __end_of_NWK_OpenEndpoint B822  
                                      ??_setSignalBandwidth 0096  
                                                  __fassert A264  
                            __end_ofNWK_LinearizeLqi@F16058 FEAB  
                                                  _aucCRCHi FB55  
                                     __size_of_PHY_DataConf 0040  
                                                  _aucCRCLo FA55  
                                            Cipher@RoundKey 0085  
                                     __size_of_nwkRxSendAck 010C  
                                     __size_of_nwkTxConfirm 0026  
                                  _nwkRxHandleReceivedFrame 1CB4  
                                          __size_of_ledInit 00F6  
                                              _nwkFrameFree BAB0  
                      __size_of_UART1_SetRxInterruptHandler 000A  
                                              _nwkFrameInit B5C6  
                                              ??_placeTimer 0073  
                                              _nwkFrameNext 9332  
                                          __size_of_get_lqi 0094  
                                               _currentMode 026D  
                                              _isupper$9735 0072  
                                                  ___xxtofl 60D4  
                                    __end_of_CRC_Initialize 97F4  
                                  __size_of_TMR5_StartTimer 0004  
                                        nwkGroupSwitch@from 0071  
                                           _eMBRegHoldingCB 2432  
                                       ?_check_multicast_rx 0076  
                                          _peMBFrameSendCur 023A  
                               __size_of_prvvUARTTxReadyISR 0018  
                                          __size_of_isalpha 002C  
                                          __size_of_isdigit 0022  
                                  eMBRTUSend@ucSlaveAddress 007F  
                                         ??_stop_loop_timer 0079  
                                               ??_XorWithIv 0075  
                                                  __pivt0x8 0008  
                                          __size_of_receive 0046  
                               nwkRouteSendRouteError@frame 008F  
                                               ??_crc16_app 0088  
                                            ?_set_uart_baud 0060  
                                          __size_of_isspace 002A  
                                             ?_DIA_ReadByte 0071  
                                           ??_nwkFrameAlloc 007B  
                                 __size_of_SX1276ReadBuffer 0028  
                                                  __ptext10 BD8E  
                                                  __ptext11 6496  
                                                  __ptext20 B7DA  
                                                  __ptext12 B7B6  
                                                  __ptext21 BD7C  
                                                  __ptext13 B516  
                                                  __ptext30 7DA8  
                                                  __ptext22 A810  
                                                  __ptext14 59BC  
                                                  __ptext31 BAFA  
                                                  __ptext23 BCE0  
                                                  __ptext15 46B0  
                                                  __ptext40 83A8  
                                                  __ptext32 5516  
                                                  __ptext24 A100  
                                                  __ptext16 AB34  
                                                  __ptext41 9BDE  
                                                  __ptext33 963A  
                                                  __ptext25 8DF8  
                                                  __ptext17 BD78  
                                                  __ptext50 8042  
                                                  __ptext42 9150  
                                                  __ptext34 2E5E  
                                                  __ptext26 BACA  
                                                  __ptext18 B542  
                                                  __ptext51 7920  
                                                  __ptext43 51DE  
                                                  __ptext35 37B2  
                                                  __ptext27 8F5A  
                                                  __ptext19 BBC6  
                                                  __ptext60 BD84  
                                                  __ptext52 BCEA  
                                                  __ptext44 318A  
                                                  __ptext36 AF18  
                                                  __ptext28 BC02  
                                                  __ptext61 AF98  
                                                  __ptext53 8C7E  
                                                  __ptext45 9C64  
                                                  __ptext37 9DF6  
                                                  __ptext29 BAE2  
                                                  __ptext70 670C  
                                                  __ptext62 BB6E  
                                                  __ptext54 B114  
                                                  __ptext46 A962  
                                                  __ptext38 ACA6  
                                                  __ptext71 B486  
                                                  __ptext63 BD4C  
                                                  __ptext55 BD80  
                                                  __ptext47 148E  
                                                  __ptext39 5F88  
                                                  __ptext80 A264  
                                                  __ptext72 4470  
                                                  __ptext64 BD88  
                                                  __ptext56 B18C  
                                                  __ptext48 754E  
                                                  __ptext81 2082  
                                                  __ptext73 BB9A  
                                                  __ptext65 BCF4  
                                                  __ptext57 BA0E  
                                                  __ptext49 9CEA  
                                                  __ptext90 ACEE  
                                                  __ptext82 BC78  
                                                  __ptext74 B3F0  
                                                  __ptext66 BD52  
                                                  __ptext58 BA62  
                                                  __ptext91 2432  
                                                  __ptext83 A9B2  
                                                  __ptext75 BD90  
                                                  __ptext67 BB84  
                                                  __ptext59 AF58  
                                                  __ptext92 6E14  
                                                  __ptext84 8550  
                                                  __ptext76 8A34  
                                                  __ptext68 A596  
                                                  __ptext93 B648  
                                                  __ptext85 7150  
                                                  __ptext77 B866  
                                                  __ptext69 56A6  
                                                  __ptext94 B422  
                                                  __ptext86 3FA6  
                                                  __ptext78 847C  
                                                  __ptext95 B274  
                                                  __ptext87 5CB4  
                                                  __ptext79 9294  
                                                  __ptext96 BC14  
                                                  __ptext88 9008  
                                                  __ptext97 A46E  
                                                  __ptext89 6AA8  
                                                  __ptext98 BC38  
                                                  __ptext99 BC86  
                                          __size_of_isupper 0022  
                               __size_of_nwkRxIndicateFrame 025A  
                                __size_of_nwkRoutePrepareTx 012C  
                                     needed_packet_length@i 0072  
                                                  _ucRTUBuf 0600  
                            __size_of_UART1_SetErrorHandler 000A  
                              __size_of_vMBPortSerialEnable 0022  
                                                  _get_rssi B388  
                                                  _fhssList FE55  
                             __end_of_UART1_SetErrorHandler BD30  
                                     __size_of_nwkRouteInit 005A  
                               DATAEE_WriteByte@GIEBitValue 0074  
                                             nwkRouteInit@i 0071  
                                          __size_of_strncmp 008E  
                                          __size_of_toupper 0018  
                                 free_tx_buffer@msg_ack_obj 0095  
                                  nwkTxBroadcastFrame@frame 0084  
                                                  _mcast_id 0250  
                         eMBFuncReadHoldingRegister@eStatus 009E  
                                         _pvMBFrameCloseCur 0232  
                                                  _ledtimer 01F9  
                                                  _ledqueue 0780  
                                    __size_of_get_loop_time 0032  
                                            ?_nwkRouteFrame 0091  
                                             _eMBRTUReceive 847C  
                                              _nwkGroupInit B4E6  
                                       __end_of_NWK_DataReq 9CEA  
                                             __size_of_idle 000E  
                                             __size_of_main 002A  
                                             __size_of_rand 005C  
                                         ??_app_aes_decrypt 00B7  
                                ??_nwkTxAckWaitTimerHandler 0083  
               __end_of_eMBFuncWriteMultipleHoldingRegister 6BCE  
              __size_of_eMBFuncWriteMultipleHoldingRegister 0126  
                     ??_eMBFuncWriteMultipleHoldingRegister 009A  
                      ?_eMBFuncWriteMultipleHoldingRegister 0096  
                       _eMBFuncWriteMultipleHoldingRegister 6AA8  
                                           _AES_init_ctx_iv AA4E  
                                              ??_setTxPower 0080  
                                     __size_of_PHY_SetPanId 0002  
                             __size_of_vMBPortTimersDisable 0006  
                                                strncmp@len 007B  
                      __end_of_TMR0_DefaultInterruptHandler BD94  
                     __size_of_TMR0_DefaultInterruptHandler 0002  
                              _TMR0_DefaultInterruptHandler BD92  
                                         ??_DATAEE_ReadByte 0073  
                                       get_timer0base@timer 0071  
                                         ??_app_aes_encrypt 009B  
                                               Cipher@state 0083  
                                               Cipher@round 0087  
                             DATAEE_WriteByte_Platform@addr 0075  
                                   exract_sink_addr@addrstr 0097  
                              __end_of_FirmwareVersionMajor FEB2  
                                      ??_check_multicast_rx 0078  
                           __size_of_load_on_demand_mb_regs 002A  
                             DATAEE_WriteByte_Platform@data 0077  
                                               _IVTLOCKbits 003FD4  
                              __end_of_FirmwareVersionMinor FEB1  
                                       set_timer0base@timer 0071  
                                     _nwkRouteErrorReceived A408  
                                    SX1276ReadBuffer@buffer 0078  
                                           _set_eeprom_sync 8042  
                                  __size_of_PHY_TaskHandler 0006  
                          nwkRxHandleReceivedFrame@mcHeader 0094  
                                  __size_of_TMR5_WriteTimer 0024  
                                   exract_sink_addr@dataptr 008D  
                                          _start_loop_timer BBC6  
                                              ??_nwkTxFrame 0084  
                                nwkRouteFrameReceived@frame 007A  
                                 _UART1_OverrunErrorHandler 03FB  
                                       __end_of_NWK_SetAddr BB6E  
                                        __end_of_placeTimer 503C  
                                              ??_set_parity 0071  
                                          _NWK_RouteNextHop AE0A  
              UART1_SetOverrunErrorHandler@interruptHandler 0071  
                                nwkRouteFrameReceived@entry 0084  
                                             ledInit@i_1801 0098  
                                             ??_sync_eeprom 0078  
                      eMBFuncReadHoldingRegister@eRegStatus 009F  
                        __size_of_UART1_DefaultErrorHandler 0006  
                                                  ledInit@i 0097  
                                               ??_enableCrc 0080  
                          eMBFuncWriteHoldingRegister@usLen 0098  
                                                  _uartmode 01EF  
                                              _PHY_DataConf AFD8  
                                              _nwkRxSendAck 7044  
                                              _nwkTxConfirm B740  
                                                  _timerval 0242  
                              __end_of_SYS_TimerTaskHandler 6CF2  
                                 __size_of_SYS_TimerStarted 004A  
                                    __size_of_queueLedEvent 0052  
                                                strtol@base 0081  
                             __size_of_nwkRxRejectDuplicate 027E  
                                       __end_of_AddRoundKey 946E  
                                                strtol@sign 0087  
                             nwkTxAckWaitTimerHandler@frame 0086  
                                bootLoadApplication@rssimax 00AE  
                                         _UART1_is_rx_ready BC14  
                                bootLoadApplication@rssimin 00AF  
                                    __size_of_prvvUARTRxISR 0018  
                                                  _syncList 03DB  
                             nwkTxAckWaitTimerHandler@timer 0081  
                      __end_of_TMR3_DefaultInterruptHandler BD9A  
                     __size_of_TMR3_DefaultInterruptHandler 0002  
                              _TMR3_DefaultInterruptHandler BD98  
                                       setFrequency@num_mod 0096  
                       __end_of_eMBFuncWriteHoldingRegister 90AC  
                               _eMBFuncWriteHoldingRegister 9008  
                                  xMBPortSerialInit@eParity 0076  
                                               _UART1_Write A9B2  
                                   ??_xMBRTUTimerT35Expired 0063  
                                         _UART1_is_tx_ready BC38  
                                         _pvMBFrameStartCur 0238  
                                  __size_of_xMBPortEventGet 0032  
                          __end_of_DATAEE_ReadByte_Platform 65D2  
                                             ??_Default_ISR 0060  
                            ??_UART1_SetFramingErrorHandler 0073  
                                        ?_UART1_is_tx_ready 0060  
                               __end_of_UART1_RxDataHandler B61E  
                                   ?_AES_CBC_decrypt_buffer 0096  
         eMBFuncReadWriteMultipleHoldingRegister@eRegStatus 00A8  
             eMBFuncWriteMultipleHoldingRegister@eRegStatus 00A0  
                                              _nwkRouteInit A706  
                                               _uart1RxHead 00DB  
                                               ??_usMBCRC16 0075  
                                        _write_only_mb_regs 032C  
                                 setCodingRate4@denominator 0082  
                                           ?_CRC_Initialize 0060  
                                     eMBPoll@ucFunctionCode 01DE  
                                               _uart1TxHead 01E3  
                                           ??_TMR0_CallBack 0070  
                                                _MBRTUStack 8DF8  
                                               _uart1RxTail 00DA  
                                               _NVMCON1bits 0039E5  
                                              ??_rw_mb_regs 0077  
                                               _phyRxBuffer 0700  
                                 __size_of_xMBRTUReceiveFSM 00DE  
                                          ?_SPI1_WriteBlock 0072  
                                               _uart1TxTail 01E2  
                                              ?_sx1276_send 0060  
                                                  memcpy@d1 0077  
                                        __end_of_setTxPower B200  
                                      handle_tx_regs@buf_id 00A9  
                                                  memcpy@s1 0079  
                                            ??_DIA_ReadByte 0075  
                                     _rx_ctl_mb_regs_upadte 01E6  
                                               ??_initRadio 00A2  
                                      SPI1_WriteBlock@block 0072  
                                               _phyTxBuffer 0900  
                                              ?_appDataConf 009A  
                                                  isalpha@c 0076  
                                                  isdigit@c 0073  
                                           ??_reset_handler 0071  
                                    ??_INTERRUPT_Initialize 0071  
                                                  memset@p1 0071  
                                       DIO0_Receive_ISR@ind 00B6  
                                         rw_mb_regs@usNRegs 0075  
                                              _PHY_SetPanId BD8C  
                                          appDataInd@buf_id 00C1  
                                                _SX1276Read B8AA  
                                       ??_UART1_is_tx_ready 0071  
                                        __end_of_nwkTxFrame 51DE  
                                        __end_of_set_parity 9D70  
                                         rw_mb_regs@tempptr 0071  
                                  __end_of_nwkDataReqTxConf 8F5A  
                                         ??_TMR3_StartTimer 0071  
                                                  intlevel1 0000  
                                                  intlevel2 0000  
                                     compute_option@options 0075  
                                  get_free_rx_buffer@buf_id 0071  
                                 nwkRouteSendRouteError@dst 008A  
                                            ?_eMBRTUReceive 007B  
                                 nwkRouteSendRouteError@src 0088  
                                                _MB_RO_REGS 0269  
                                            _get_timer0base B672  
                                 __size_of_nwkTxTaskHandler 0200  
                                    NWK_RouteNewEntry@entry 0078  
                                               _nwkIsRouter BD5E  
                                                 strchr@chr 0073  
                                   __end_of_NWK_TaskHandler BCB0  
                                          ??_set_timer0base 0075  
                                                 strchr@ptr 0071  
                                                _MB_RW_REGS 0267  
                                                _MB_RX_REGS 0265  
                                                  isspace@c 0073  
                               __end_of_nwkFrameCommandInit AE94  
                                      KeyExpansion@RoundKey 0071  
                                     __size_of_NWK_GroupAdd 0016  
                                          ___lldiv@dividend 0085  
                                                _MB_WO_REGS 0268  
                                   ?_PIN_MANAGER_Initialize 0060  
                                __size_of_NWK_RouteNewEntry 00DA  
                                                _MB_TX_REGS 0266  
                                           ??_TMR3_CallBack 0066  
                                               _setSyncWord BC58  
                                            _eMBCurrentMode 0252  
                                     __size_of_NWK_SetPanId 0016  
                                      _needed_packet_length AF18  
                                     _prveMBError2Exception ACEE  
                                                  isupper@c 0073  
                                                 strncmp@s1 0077  
                                                 strncmp@s2 0079  
                              __size_of_vMBPortTimersEnable 001A  
                         __size_of_SystemArbiter_Initialize 0010  
                                     handle_led_events@temp 008E  
                                        _nwk_RoutingEnabled 0255  
                                 ?_SystemArbiter_Initialize 0060  
                                        get_timer0base@tval 0073  
                               NWK_RouteFindEntry@multicast 0073  
                                    nwkRxServiceDataInd@ind 00BA  
                                        set_timer0base@tval 0073  
                                   NWK_OpenEndpoint@handler 0071  
                                       _uart1RxStatusBuffer 0400  
                                               _reset_timer 024E  
                             ?_TMR0_DefaultInterruptHandler 0060  
                                               ??_nwkRxInit 0074  
                                               ??_nwkTxInit 0071  
                                           _nwkTxDelayTimer 03A6  
                                         _setPreambleLength BBB0  
                                               _PHY_DataInd 5B38  
                                               _PHY_DataReq B2E4  
                                      PHY_SetShortAddr@addr 0071  
                              __size_of_bootLoadApplication 06A0  
                                                _SPI1SCKPPS 003ADE  
                                                _SPI1SDIPPS 003ADF  
                                 __end_of_UART1_is_rx_ready BC26  
                                        __end_of_rw_mb_regs 6F32  
                                                _UART1_Read A46E  
                                        InvMixColumns@state 0072  
                                          ??_TMR5_ReadTimer 0073  
              UART1_SetFramingErrorHandler@interruptHandler 0071  
                                 __end_of_UART1_is_tx_ready BC48  
                                        ?_setPreambleLength 0080  
                         __end_of_UART1_DefaultErrorHandler BD70  
                                  nwkRouteErrorReceived@ind 007C  
                                   __end_of_eMBRegHoldingCB 27CC  
                                             _get_loop_time B422  
                                       SPI1_WriteBlock@data 0076  
                                   ??_nwkTxConvertPhyStatus 0071  
                                   __size_of_free_tx_buffer 00C2  
                            __end_of_AES_CBC_decrypt_buffer 7920  
                                   __size_of_compute_option 0048  
                                       __end_of_sync_eeprom 48D8  
                                   ??_nwkRouteFrameReceived 007C  
                                __end_of_get_free_rx_buffer 9F82  
                                          ??_handle_rw_regs 00A8  
                                   ?_nwkRouteNormalizeRanks 0060  
                                          ??_handle_rx_regs 0079  
                             ?_TMR3_DefaultInterruptHandler 0060  
                                      compute_option@tx_ctl 0071  
                                          ??_nwkRouteRemove 007A  
                                          _halTimerIrqCount 01D9  
                                          ??_handle_tx_regs 009E  
                                                _PRLOCKbits 0039EF  
                                    _load_on_demand_mb_regs B648  
                                       ??_setPreambleLength 0082  
                                          ___lldiv@quotient 008D  
                                               _uart_parity 01F1  
                                           _TMR0_Initialize AD36  
                                           ??_set_uart_baud 0071  
                                                  strlen@cp 0074  
                                         _current_baud_rate 022B  
                                __end_of_get_free_tx_buffer 9E7A  
                                __end_of_getSpreadingFactor B9D4  
                                                  toupper@c 0071  
                                __end_of_setSpreadingFactor 7830  
                                 __size_of_UART1_Initialize 00D8  
                                  DIO0_Receive_ISR@irqFlags 00B5  
                                           _SYS_TaskHandler BC86  
                                 AES_CBC_encrypt_buffer@buf 008A  
                                    __size_of_InvMixColumns 088E  
                                          _nwkEnableRouting BCE0  
                                 AES_CBC_encrypt_buffer@ctx 0088  
                                              _NWK_GroupAdd BB84  
                                                  strstr@s1 007E  
                                                  strstr@s2 0080  
                                           rw_mb_regs@eMode 007C  
                                               _NWK_DataReq 9C64  
                                   __size_of_nwkDataReqInit 000C  
                                   _CRC_CalculatedResultGet 7454  
                                  _UART1_TxInterruptHandler 02F0  
                                   __end_of_AES_init_ctx_iv AA9A  
                               __end_of_nwkTxBroadcastFrame 59BC  
                                             _queueLedEvent A910  
                                              _NWK_SetPanId BB42  
                                    __end_of_get_timer0base B69C  
                                             ___fladd@signs 00A4  
                                       __end_of_Default_ISR BD6A  
                                           ??_nwkRouteFrame 0093  
                                         ??_TMR5_StartTimer 0071  
                                          _nwkRxTaskHandler 946E  
                            __end_of_PIN_MANAGER_Initialize 8C7E  
                                         InvShiftRows@state 0071  
                                             _prvvUARTRxISR BAE2  
                                   SPI1_ReadBlock@blockSize 0074  
                                   __end_of_set_eeprom_sync 811E  
                                     NWK_RouteFindEntry@dst 0071  
                                              ___fladd@aexp 00A5  
                                   stop_loop_timer@looptime 0079  
                                              ___fladd@bexp 00A6  
                                               _NWK_SetAddr BB58  
                                  __end_of_nwkTxAckReceived 896A  
                    eMBFuncReadHoldingRegister@usRegAddress 009C  
                                     ?_needed_packet_length 0060  
                                          InvShiftRows@temp 0073  
                                 __size_of_exract_sink_addr 00EA  
                              ?_UART1_SetTxInterruptHandler 0071  
                                       queue_tx_led_event@i 0097  
                                    ?_nwkRouteErrorReceived 007C  
                                        _eeprom_write_flags 00D7  
                                         KeyExpansion@u8tmp 007D  
                                              ?_application 0060  
                                       _uart_default_engine 59BC  
                                               _AddRoundKey 93D0  
                                          ??_PHY_SetChannel 009E  
                                 __end_of_setPreambleLength BBC6  
                                       NWK_RouteFindEntry@i 0076  
                                  get_free_tx_buffer@buf_id 0071  
                                         KeyExpansion@tempa 0080  
                                __end_of_spi1_configuration FEB0  
                                          ??_TMR5_StopTimer 0071  
                                nwkRxRejectDuplicate@header 0081  
                            CRC_CalculatedResultGet@reverse 007D  
                             CRC_CalculatedResultGet@result 0080  
