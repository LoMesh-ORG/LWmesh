

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jun 13 23:43:34 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F26K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1,inline
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1,inline
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1,inline
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1,group=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1,group=2
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1,group=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1,group=2
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1,group=2
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1,group=2
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1,group=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1,group=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=2,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	text198,global,reloc=2,class=CODE,delta=1
   222                           	psect	text199,global,reloc=2,class=CODE,delta=1
   223                           	psect	text200,global,reloc=2,class=CODE,delta=1
   224                           	psect	text201,global,reloc=2,class=CODE,delta=1
   225                           	psect	text202,global,reloc=2,class=CODE,delta=1
   226                           	psect	text203,global,reloc=2,class=CODE,delta=1
   227                           	psect	text204,global,reloc=2,class=CODE,delta=1
   228                           	psect	text205,global,reloc=2,class=CODE,delta=1
   229                           	psect	text206,global,reloc=2,class=CODE,delta=1
   230                           	psect	text207,global,reloc=2,class=CODE,delta=1
   231                           	psect	text208,global,reloc=2,class=CODE,delta=1
   232                           	psect	text209,global,reloc=2,class=CODE,delta=1
   233                           	psect	text210,global,reloc=2,class=CODE,delta=1,group=1
   234                           	psect	text211,global,reloc=2,class=CODE,delta=1,group=1
   235                           	psect	text212,global,reloc=2,class=CODE,delta=1
   236                           	psect	text213,global,reloc=2,class=CODE,delta=1
   237                           	psect	text214,global,reloc=2,class=CODE,delta=1
   238                           	psect	text215,global,reloc=2,class=CODE,delta=1
   239                           	psect	text216,global,reloc=2,class=CODE,delta=1
   240                           	psect	text217,global,reloc=2,class=CODE,delta=1
   241                           	psect	text218,global,reloc=2,class=CODE,delta=1
   242                           	psect	text219,global,reloc=2,class=CODE,delta=1
   243                           	psect	text220,global,reloc=2,class=CODE,delta=1
   244                           	psect	text221,global,reloc=2,class=CODE,delta=1
   245                           	psect	text222,global,reloc=2,class=CODE,delta=1
   246                           	psect	text223,global,reloc=2,class=CODE,delta=1
   247                           	psect	text224,global,reloc=2,class=CODE,delta=1
   248                           	psect	text225,global,reloc=2,class=CODE,delta=1
   249                           	psect	text226,global,reloc=2,class=CODE,delta=1
   250                           	psect	text227,global,reloc=2,class=CODE,delta=1
   251                           	psect	text228,global,reloc=2,class=CODE,delta=1
   252                           	psect	text229,global,reloc=2,class=CODE,delta=1
   253                           	psect	text230,global,reloc=2,class=CODE,delta=1
   254                           	psect	text231,global,reloc=2,class=CODE,delta=1
   255                           	psect	text232,global,reloc=2,class=CODE,delta=1
   256                           	psect	text233,global,reloc=2,class=CODE,delta=1
   257                           	psect	text234,global,reloc=2,class=CODE,delta=1
   258                           	psect	text235,global,reloc=2,class=CODE,delta=1
   259                           	psect	text236,global,reloc=4,class=CODE,delta=1
   260                           	psect	text237,global,reloc=2,class=CODE,delta=1
   261                           	psect	text238,global,reloc=2,class=CODE,delta=1
   262                           	psect	text239,global,reloc=2,class=CODE,delta=1
   263                           	psect	text240,global,reloc=4,class=CODE,delta=1
   264                           	psect	text241,global,reloc=4,class=CODE,delta=1
   265                           	psect	text242,global,reloc=2,class=CODE,delta=1
   266                           	psect	text243,global,reloc=4,class=CODE,delta=1
   267                           	psect	text244,global,reloc=2,class=CODE,delta=1
   268                           	psect	text245,global,reloc=2,class=CODE,delta=1
   269                           	psect	text246,global,reloc=2,class=CODE,delta=1
   270                           	psect	text247,global,reloc=2,class=CODE,delta=1
   271                           	psect	text248,global,reloc=2,class=CODE,delta=1
   272                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   273                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   274                           	psect	text249,global,reloc=2,class=CODE,delta=1
   275                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   276  0000                     
   277                           ; Version 2.10
   278                           ; Generated 31/07/2019 GMT
   279                           ; 
   280                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   281                           ; All rights reserved.
   282                           ; 
   283                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   284                           ; 
   285                           ; Redistribution and use in source and binary forms, with or without modification, are
   286                           ; permitted provided that the following conditions are met:
   287                           ; 
   288                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   289                           ;        conditions and the following disclaimer.
   290                           ; 
   291                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   292                           ;        of conditions and the following disclaimer in the documentation and/or other
   293                           ;        materials provided with the distribution.
   294                           ; 
   295                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   296                           ;        software without specific prior written permission.
   297                           ; 
   298                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   299                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   300                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   301                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   302                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   303                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   304                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   305                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   306                           ; 
   307                           ; 
   308                           ; Code-generator required, PIC18F26K42 Definitions
   309                           ; 
   310                           ; SFR Addresses
   311  0000                     
   312                           	psect	idataBANK0
   313  0099FA                     __pidataBANK0:
   314                           	opt callstack 0
   315                           
   316                           ;initializer for _RSSITarget
   317  0099FA  B0                 	db	176
   318                           
   319                           ;initializer for _currentNetID
   320  0099FB  55                 	db	85
   321                           
   322                           ;initializer for _currentAddr1
   323  0099FC  34                 	db	52
   324                           
   325                           ;initializer for _currentAddr0
   326  0099FD  12                 	db	18
   327                           
   328                           ;initializer for _ATTimeoutTimer
   329  0099FE  03E8               	dw	1000
   330                           
   331                           	psect	idataBANK1
   332  0098BA                     __pidataBANK1:
   333                           	opt callstack 0
   334                           
   335                           ;initializer for _syncList
   336  0098BA  12                 	db	18
   337  0098BB  23                 	db	35
   338  0098BC  45                 	db	69
   339  0098BD  56                 	db	86
   340  0098BE  67                 	db	103
   341  0098BF  78                 	db	120
   342  0098C0  89                 	db	137
   343  0098C1  9A                 	db	154
   344  0098C2  AB                 	db	171
   345  0098C3  BC                 	db	188
   346                           
   347                           ;initializer for sendOKMessage@F16699
   348  0098C4  4F                 	db	79
   349  0098C5  4B                 	db	75
   350  0098C6  0D                 	db	13
   351  0098C7  0A                 	db	10
   352  0098C8  00                 	db	0
   353                           
   354                           ;initializer for _test_timer
   355  0098C9  1388               	dw	5000
   356                           
   357                           	psect	mediumconst
   358  00FCAA                     __pmediumconst:
   359                           	opt callstack 0
   360  00FCAA  00                 	db	0
   361  00FCAB                     _fhssList:
   362                           	opt callstack 0
   363  00FCAB  7680               	dw	30336
   364  00FCAD  3600               	dw	13824
   365  00FCAF  FB00               	dw	64256
   366  00FCB1  361E               	dw	13854
   367  00FCB3  7F80               	dw	32640
   368  00FCB5  363D               	dw	13885
   369  00FCB7  0400               	dw	1024
   370  00FCB9  365C               	dw	13916
   371  00FCBB  8880               	dw	34944
   372  00FCBD  367A               	dw	13946
   373  00FCBF  0D00               	dw	3328
   374  00FCC1  3699               	dw	13977
   375  00FCC3  9180               	dw	37248
   376  00FCC5  36B7               	dw	14007
   377  00FCC7  1600               	dw	5632
   378  00FCC9  36D6               	dw	14038
   379  00FCCB  9A80               	dw	39552
   380  00FCCD  36F4               	dw	14068
   381  00FCCF  1F00               	dw	7936
   382  00FCD1  3713               	dw	14099
   383  00FCD3  DCC0               	dw	56512
   384  00FCD5  3703               	dw	14083
   385  00FCD7  5840               	dw	22592
   386  00FCD9  36E5               	dw	14053
   387  00FCDB  D3C0               	dw	54208
   388  00FCDD  36C6               	dw	14022
   389  00FCDF  4F40               	dw	20288
   390  00FCE1  36A8               	dw	13992
   391  00FCE3  CAC0               	dw	51904
   392  00FCE5  3689               	dw	13961
   393  00FCE7  4640               	dw	17984
   394  00FCE9  366B               	dw	13931
   395  00FCEB  C1C0               	dw	49600
   396  00FCED  364C               	dw	13900
   397  00FCEF  3D40               	dw	15680
   398  00FCF1  362E               	dw	13870
   399  00FCF3  B8C0               	dw	47296
   400  00FCF5  360F               	dw	13839
   401  00FCF7  3440               	dw	13376
   402  00FCF9  35F1               	dw	13809
   403  00FCFB  AFC0               	dw	44992
   404  00FCFD  35D2               	dw	13778
   405  00FCFF  D560               	dw	54624
   406  00FD01  35F8               	dw	13816
   407  00FD03  59E0               	dw	23008
   408  00FD05  3617               	dw	13847
   409  00FD07  DE60               	dw	56928
   410  00FD09  3635               	dw	13877
   411  00FD0B  6BE0               	dw	27616
   412  00FD0D  3691               	dw	13969
   413  00FD0F  F060               	dw	61536
   414  00FD11  36AF               	dw	13999
   415  00FD13  74E0               	dw	29920
   416  00FD15  36CE               	dw	14030
   417  00FD17  F960               	dw	63840
   418  00FD19  36EC               	dw	14060
   419  00FD1B  7DE0               	dw	32224
   420  00FD1D  370B               	dw	14091
   421  00FD1F  C020               	dw	49184
   422  00FD21  371A               	dw	14106
   423  00FD23  4710               	dw	18192
   424  00FD25  3604               	dw	13828
   425  00FD27  6CB0               	dw	27824
   426  00FD29  362A               	dw	13866
   427  00FD2B  5010               	dw	20496
   428  00FD2D  3641               	dw	13889
   429  00FD2F  75B0               	dw	30128
   430  00FD31  3667               	dw	13927
   431  00FD33  5910               	dw	22800
   432  00FD35  367E               	dw	13950
   433  00FD37  7EB0               	dw	32432
   434  00FD39  36A4               	dw	13988
   435  00FD3B  6210               	dw	25104
   436  00FD3D  36BB               	dw	14011
   437  00FD3F  87B0               	dw	34736
   438  00FD41  36E1               	dw	14049
   439  00FD43  6B10               	dw	27408
   440  00FD45  36F8               	dw	14072
   441  00FD47  90B0               	dw	37040
   442  00FD49  371E               	dw	14110
   443  00FD4B  AD50               	dw	44368
   444  00FD4D  3707               	dw	14087
   445  00FD4F  28D0               	dw	10448
   446  00FD51  36E9               	dw	14057
   447  00FD53  A450               	dw	42064
   448  00FD55  36CA               	dw	14026
   449  00FD57  C0F0               	dw	49392
   450  00FD59  36B3               	dw	14003
   451  00FD5B  9B50               	dw	39760
   452  00FD5D  368D               	dw	13965
   453  00FD5F  B7F0               	dw	47088
   454  00FD61  3676               	dw	13942
   455  00FD63  9250               	dw	37456
   456  00FD65  3650               	dw	13904
   457  00FD67  AEF0               	dw	44784
   458  00FD69  3639               	dw	13881
   459  00FD6B  8950               	dw	35152
   460  00FD6D  3613               	dw	13843
   461  00FD6F  A5F0               	dw	42480
   462  00FD71  35FC               	dw	13820
   463  00FD73  50E0               	dw	20704
   464  00FD75  35DA               	dw	13786
   465  00FD77  04D0               	dw	1232
   466  00FD79  35F5               	dw	13813
   467  00FD7B  2A70               	dw	10864
   468  00FD7D  361B               	dw	13851
   469  00FD7F  0DD0               	dw	3536
   470  00FD81  3632               	dw	13874
   471  00FD83  3C70               	dw	15472
   472  00FD85  3695               	dw	13973
   473  00FD87  1FD0               	dw	8144
   474  00FD89  36AC               	dw	13996
   475  00FD8B  4570               	dw	17776
   476  00FD8D  36D2               	dw	14034
   477  00FD8F  28D0               	dw	10448
   478  00FD91  36E9               	dw	14057
   479  00FD93  4E70               	dw	20080
   480  00FD95  370F               	dw	14095
   481  00FD97  0E40               	dw	3648
   482  00FD99  371B               	dw	14107
   483  00FD9B  A5F0               	dw	42480
   484  00FD9D  35FC               	dw	13820
   485  00FD9F  F130               	dw	61744
   486  00FDA1  3648               	dw	13896
   487  00FDA3  75B0               	dw	30128
   488  00FDA5  3667               	dw	13927
   489  00FDA7                     __end_of_fhssList:
   490                           	opt callstack 0
   491  00FDA7  03                 	db	3
   492  00FDA8  08                 	db	8
   493  00FDA9  1A                 	db	26
   494  00FDAA  40                 	db	64
   495  00FDAB  80                 	db	128
   496  00FDAC  BE                 	db	190
   497  00FDAD  E6                 	db	230
   498  00FDAE  F7                 	db	247
   499  00FDAF  FC                 	db	252
   500  00FDB0                     __end_ofNWK_LinearizeLqi@val:
   501                           	opt callstack 0
   502  00FDB0  82                 	db	130
   503  00FDB1  C0                 	db	192
   504  00FDB2  03                 	db	3
   505  00FDB3  03                 	db	3
   506  00FDB4  00                 	db	0
   507  00FDB5                     __end_of_spi1_configuration:
   508                           	opt callstack 0
   509  00FDB5  01                 	db	1
   510  00FDB6                     __end_of_FirmwareVersionMinor:
   511                           	opt callstack 0
   512  00FDB6  02                 	db	2
   513  00FDB7                     __end_of_FirmwareVersionMajor:
   514                           	opt callstack 0
   515  00FDB7  00                 	db	0
   516  00FDB8                     __end_of_ATVersionMinor:
   517                           	opt callstack 0
   518  00FDB8  01                 	db	1
   519  00FDB9                     __end_of_ATVersionMajor:
   520                           	opt callstack 0
   521  00FDB9                     STR_64:
   522                           
   523                           ; BSR set to: 0
   524  00FDB9  44                 	db	68	;'D'
   525  00FDBA  53                 	db	83	;'S'
   526  00FDBB  54                 	db	84	;'T'
   527  00FDBC  3A                 	db	58	;':'
   528  00FDBD  25                 	db	37
   529  00FDBE  30                 	db	48	;'0'
   530  00FDBF  34                 	db	52	;'4'
   531  00FDC0  58                 	db	88	;'X'
   532  00FDC1  20                 	db	32
   533  00FDC2  4E                 	db	78	;'N'
   534  00FDC3  58                 	db	88	;'X'
   535  00FDC4  54                 	db	84	;'T'
   536  00FDC5  3A                 	db	58	;':'
   537  00FDC6  25                 	db	37
   538  00FDC7  30                 	db	48	;'0'
   539  00FDC8  34                 	db	52	;'4'
   540  00FDC9  58                 	db	88	;'X'
   541  00FDCA  20                 	db	32
   542  00FDCB  53                 	db	83	;'S'
   543  00FDCC  43                 	db	67	;'C'
   544  00FDCD  4F                 	db	79	;'O'
   545  00FDCE  3A                 	db	58	;':'
   546  00FDCF  25                 	db	37
   547  00FDD0  75                 	db	117	;'u'
   548  00FDD1  20                 	db	32
   549  00FDD2  4C                 	db	76	;'L'
   550  00FDD3  51                 	db	81	;'Q'
   551  00FDD4  49                 	db	73	;'I'
   552  00FDD5  3A                 	db	58	;':'
   553  00FDD6  25                 	db	37
   554  00FDD7  75                 	db	117	;'u'
   555  00FDD8  0D                 	db	13
   556  00FDD9  0A                 	db	10
   557  00FDDA  00                 	db	0
   558  00FDDB                     STR_137:
   559                           
   560                           ; BSR set to: 0
   561  00FDDB  46                 	db	70	;'F'
   562  00FDDC  69                 	db	105	;'i'
   563  00FDDD  72                 	db	114	;'r'
   564  00FDDE  6D                 	db	109	;'m'
   565  00FDDF  77                 	db	119	;'w'
   566  00FDE0  61                 	db	97	;'a'
   567  00FDE1  72                 	db	114	;'r'
   568  00FDE2  65                 	db	101	;'e'
   569  00FDE3  20                 	db	32
   570  00FDE4  56                 	db	86	;'V'
   571  00FDE5  65                 	db	101	;'e'
   572  00FDE6  72                 	db	114	;'r'
   573  00FDE7  73                 	db	115	;'s'
   574  00FDE8  69                 	db	105	;'i'
   575  00FDE9  6F                 	db	111	;'o'
   576  00FDEA  6E                 	db	110	;'n'
   577  00FDEB  20                 	db	32
   578  00FDEC  25                 	db	37
   579  00FDED  31                 	db	49	;'1'
   580  00FDEE  75                 	db	117	;'u'
   581  00FDEF  2E                 	db	46
   582  00FDF0  25                 	db	37
   583  00FDF1  30                 	db	48	;'0'
   584  00FDF2  32                 	db	50	;'2'
   585  00FDF3  75                 	db	117	;'u'
   586  00FDF4  0D                 	db	13
   587  00FDF5  0A                 	db	10
   588  00FDF6  00                 	db	0
   589  00FDF7                     STR_136:
   590                           
   591                           ; BSR set to: 0
   592  00FDF7  41                 	db	65	;'A'
   593  00FDF8  54                 	db	84	;'T'
   594  00FDF9  20                 	db	32
   595  00FDFA  43                 	db	67	;'C'
   596  00FDFB  6F                 	db	111	;'o'
   597  00FDFC  6D                 	db	109	;'m'
   598  00FDFD  6D                 	db	109	;'m'
   599  00FDFE  61                 	db	97	;'a'
   600  00FDFF  6E                 	db	110	;'n'
   601  00FE00  64                 	db	100	;'d'
   602  00FE01  20                 	db	32
   603  00FE02  53                 	db	83	;'S'
   604  00FE03  65                 	db	101	;'e'
   605  00FE04  74                 	db	116	;'t'
   606  00FE05  20                 	db	32
   607  00FE06  25                 	db	37
   608  00FE07  31                 	db	49	;'1'
   609  00FE08  75                 	db	117	;'u'
   610  00FE09  2E                 	db	46
   611  00FE0A  25                 	db	37
   612  00FE0B  30                 	db	48	;'0'
   613  00FE0C  32                 	db	50	;'2'
   614  00FE0D  75                 	db	117	;'u'
   615  00FE0E  0D                 	db	13
   616  00FE0F  0A                 	db	10
   617  00FE10  00                 	db	0
   618  00FE11                     STR_32:
   619                           
   620                           ; BSR set to: 0
   621  00FE11  43                 	db	67	;'C'
   622  00FE12  41                 	db	65	;'A'
   623  00FE13  44                 	db	68	;'D'
   624  00FE14  20                 	db	32
   625  00FE15  43                 	db	67	;'C'
   626  00FE16  4F                 	db	79	;'O'
   627  00FE17  55                 	db	85	;'U'
   628  00FE18  4E                 	db	78	;'N'
   629  00FE19  54                 	db	84	;'T'
   630  00FE1A  45                 	db	69	;'E'
   631  00FE1B  52                 	db	82	;'R'
   632  00FE1C  20                 	db	32
   633  00FE1D  3D                 	db	61	;'='
   634  00FE1E  20                 	db	32
   635  00FE1F  25                 	db	37
   636  00FE20  30                 	db	48	;'0'
   637  00FE21  32                 	db	50	;'2'
   638  00FE22  58                 	db	88	;'X'
   639  00FE23  0D                 	db	13
   640  00FE24  0A                 	db	10
   641  00FE25  00                 	db	0
   642  00FE26                     
   643                           ; BSR set to: 0
   644  00FE26  4D                 	db	77	;'M'
   645  00FE27  4F                 	db	79	;'O'
   646  00FE28  44                 	db	68	;'D'
   647  00FE29  45                 	db	69	;'E'
   648  00FE2A  20                 	db	32
   649  00FE2B  3D                 	db	61	;'='
   650  00FE2C  20                 	db	32
   651  00FE2D  45                 	db	69	;'E'
   652  00FE2E  4E                 	db	78	;'N'
   653  00FE2F  44                 	db	68	;'D'
   654  00FE30  20                 	db	32
   655  00FE31  4E                 	db	78	;'N'
   656  00FE32  4F                 	db	79	;'O'
   657  00FE33  44                 	db	68	;'D'
   658  00FE34  45                 	db	69	;'E'
   659  00FE35  0D                 	db	13
   660  00FE36  0A                 	db	10
   661  00FE37  00                 	db	0
   662  00FE38                     STR_34:
   663                           
   664                           ; BSR set to: 0
   665  00FE38  4D                 	db	77	;'M'
   666  00FE39  4F                 	db	79	;'O'
   667  00FE3A  44                 	db	68	;'D'
   668  00FE3B  45                 	db	69	;'E'
   669  00FE3C  20                 	db	32
   670  00FE3D  3D                 	db	61	;'='
   671  00FE3E  20                 	db	32
   672  00FE3F  52                 	db	82	;'R'
   673  00FE40  45                 	db	69	;'E'
   674  00FE41  50                 	db	80	;'P'
   675  00FE42  45                 	db	69	;'E'
   676  00FE43  41                 	db	65	;'A'
   677  00FE44  54                 	db	84	;'T'
   678  00FE45  45                 	db	69	;'E'
   679  00FE46  52                 	db	82	;'R'
   680  00FE47  0D                 	db	13
   681  00FE48  0A                 	db	10
   682  00FE49  00                 	db	0
   683  00FE4A                     STR_10:
   684                           
   685                           ; BSR set to: 0
   686  00FE4A  41                 	db	65	;'A'
   687  00FE4B  44                 	db	68	;'D'
   688  00FE4C  44                 	db	68	;'D'
   689  00FE4D  52                 	db	82	;'R'
   690  00FE4E  3D                 	db	61	;'='
   691  00FE4F  25                 	db	37
   692  00FE50  30                 	db	48	;'0'
   693  00FE51  32                 	db	50	;'2'
   694  00FE52  58                 	db	88	;'X'
   695  00FE53  25                 	db	37
   696  00FE54  30                 	db	48	;'0'
   697  00FE55  32                 	db	50	;'2'
   698  00FE56  58                 	db	88	;'X'
   699  00FE57  0D                 	db	13
   700  00FE58  0A                 	db	10
   701  00FE59  00                 	db	0
   702  00FE5A                     STR_92:
   703                           
   704                           ; BSR set to: 0
   705  00FE5A  2B                 	db	43
   706  00FE5B  43                 	db	67	;'C'
   707  00FE5C  41                 	db	65	;'A'
   708  00FE5D  44                 	db	68	;'D'
   709  00FE5E  43                 	db	67	;'C'
   710  00FE5F  4F                 	db	79	;'O'
   711  00FE60  55                 	db	85	;'U'
   712  00FE61  4E                 	db	78	;'N'
   713  00FE62  54                 	db	84	;'T'
   714  00FE63  45                 	db	69	;'E'
   715  00FE64  52                 	db	82	;'R'
   716  00FE65  52                 	db	82	;'R'
   717  00FE66  53                 	db	83	;'S'
   718  00FE67  54                 	db	84	;'T'
   719  00FE68  00                 	db	0
   720  00FE69                     STR_63:
   721                           
   722                           ; BSR set to: 0
   723  00FE69  52                 	db	82	;'R'
   724  00FE6A  58                 	db	88	;'X'
   725  00FE6B  43                 	db	67	;'C'
   726  00FE6C  4E                 	db	78	;'N'
   727  00FE6D  54                 	db	84	;'T'
   728  00FE6E  3D                 	db	61	;'='
   729  00FE6F  25                 	db	37
   730  00FE70  75                 	db	117	;'u'
   731  00FE71  2F                 	db	47
   732  00FE72  25                 	db	37
   733  00FE73  75                 	db	117	;'u'
   734  00FE74  0D                 	db	13
   735  00FE75  0A                 	db	10
   736  00FE76  00                 	db	0
   737  00FE77                     STR_40:
   738                           
   739                           ; BSR set to: 0
   740  00FE77  54                 	db	84	;'T'
   741  00FE78  58                 	db	88	;'X'
   742  00FE79  20                 	db	32
   743  00FE7A  50                 	db	80	;'P'
   744  00FE7B  4F                 	db	79	;'O'
   745  00FE7C  57                 	db	87	;'W'
   746  00FE7D  45                 	db	69	;'E'
   747  00FE7E  52                 	db	82	;'R'
   748  00FE7F  3D                 	db	61	;'='
   749  00FE80  25                 	db	37
   750  00FE81  75                 	db	117	;'u'
   751  00FE82  0D                 	db	13
   752  00FE83  0A                 	db	10
   753  00FE84  00                 	db	0
   754  00FE85                     STR_14:
   755                           
   756                           ; BSR set to: 0
   757  00FE85  4E                 	db	78	;'N'
   758  00FE86  41                 	db	65	;'A'
   759  00FE87  44                 	db	68	;'D'
   760  00FE88  44                 	db	68	;'D'
   761  00FE89  52                 	db	82	;'R'
   762  00FE8A  3D                 	db	61	;'='
   763  00FE8B  25                 	db	37
   764  00FE8C  30                 	db	48	;'0'
   765  00FE8D  32                 	db	50	;'2'
   766  00FE8E  58                 	db	88	;'X'
   767  00FE8F  0D                 	db	13
   768  00FE90  0A                 	db	10
   769  00FE91  00                 	db	0
   770  00FE92                     STR_45:
   771                           
   772                           ; BSR set to: 0
   773  00FE92  43                 	db	67	;'C'
   774  00FE93  41                 	db	65	;'A'
   775  00FE94  44                 	db	68	;'D'
   776  00FE95  20                 	db	32
   777  00FE96  52                 	db	82	;'R'
   778  00FE97  53                 	db	83	;'S'
   779  00FE98  53                 	db	83	;'S'
   780  00FE99  3D                 	db	61	;'='
   781  00FE9A  25                 	db	37
   782  00FE9B  69                 	db	105	;'i'
   783  00FE9C  0D                 	db	13
   784  00FE9D  0A                 	db	10
   785  00FE9E  00                 	db	0
   786  00FE9F                     STR_36:
   787                           
   788                           ; BSR set to: 0
   789  00FE9F  43                 	db	67	;'C'
   790  00FEA0  48                 	db	72	;'H'
   791  00FEA1  41                 	db	65	;'A'
   792  00FEA2  4E                 	db	78	;'N'
   793  00FEA3  4E                 	db	78	;'N'
   794  00FEA4  45                 	db	69	;'E'
   795  00FEA5  4C                 	db	76	;'L'
   796  00FEA6  3D                 	db	61	;'='
   797  00FEA7  25                 	db	37
   798  00FEA8  75                 	db	117	;'u'
   799  00FEA9  0D                 	db	13
   800  00FEAA  0A                 	db	10
   801  00FEAB  00                 	db	0
   802  00FEAC                     STR_90:
   803                           
   804                           ; BSR set to: 0
   805  00FEAC  2B                 	db	43
   806  00FEAD  43                 	db	67	;'C'
   807  00FEAE  41                 	db	65	;'A'
   808  00FEAF  44                 	db	68	;'D'
   809  00FEB0  43                 	db	67	;'C'
   810  00FEB1  4F                 	db	79	;'O'
   811  00FEB2  55                 	db	85	;'U'
   812  00FEB3  4E                 	db	78	;'N'
   813  00FEB4  54                 	db	84	;'T'
   814  00FEB5  45                 	db	69	;'E'
   815  00FEB6  52                 	db	82	;'R'
   816  00FEB7  3F                 	db	63	;'?'
   817  00FEB8  00                 	db	0
   818  00FEB9                     STR_135:
   819                           
   820                           ; BSR set to: 0
   821  00FEB9  4C                 	db	76	;'L'
   822  00FEBA  6F                 	db	111	;'o'
   823  00FEBB  52                 	db	82	;'R'
   824  00FEBC  61                 	db	97	;'a'
   825  00FEBD  20                 	db	32
   826  00FEBE  4D                 	db	77	;'M'
   827  00FEBF  65                 	db	101	;'e'
   828  00FEC0  73                 	db	115	;'s'
   829  00FEC1  68                 	db	104	;'h'
   830  00FEC2  0D                 	db	13
   831  00FEC3  0A                 	db	10
   832  00FEC4  00                 	db	0
   833  00FEC5                     STR_3:
   834                           
   835                           ; BSR set to: 0
   836  00FEC5  4E                 	db	78	;'N'
   837  00FEC6  4F                 	db	79	;'O'
   838  00FEC7  54                 	db	84	;'T'
   839  00FEC8  20                 	db	32
   840  00FEC9  4F                 	db	79	;'O'
   841  00FECA  4B                 	db	75	;'K'
   842  00FECB  3A                 	db	58	;':'
   843  00FECC  25                 	db	37
   844  00FECD  75                 	db	117	;'u'
   845  00FECE  0D                 	db	13
   846  00FECF  0A                 	db	10
   847  00FED0  00                 	db	0
   848  00FED1                     STR_76:
   849                           
   850                           ; BSR set to: 0
   851  00FED1  2B                 	db	43
   852  00FED2  53                 	db	83	;'S'
   853  00FED3  48                 	db	72	;'H'
   854  00FED4  4F                 	db	79	;'O'
   855  00FED5  57                 	db	87	;'W'
   856  00FED6  48                 	db	72	;'H'
   857  00FED7  4F                 	db	79	;'O'
   858  00FED8  50                 	db	80	;'P'
   859  00FED9  53                 	db	83	;'S'
   860  00FEDA  3F                 	db	63	;'?'
   861  00FEDB  00                 	db	0
   862  00FEDC                     STR_96:
   863                           
   864                           ; BSR set to: 0
   865  00FEDC  2B                 	db	43
   866  00FEDD  43                 	db	67	;'C'
   867  00FEDE  41                 	db	65	;'A'
   868  00FEDF  44                 	db	68	;'D'
   869  00FEE0  52                 	db	82	;'R'
   870  00FEE1  53                 	db	83	;'S'
   871  00FEE2  53                 	db	83	;'S'
   872  00FEE3  49                 	db	73	;'I'
   873  00FEE4  3D                 	db	61	;'='
   874  00FEE5  00                 	db	0
   875  00FEE6                     STR_132:
   876                           
   877                           ; BSR set to: 0
   878  00FEE6  2B                 	db	43
   879  00FEE7  54                 	db	84	;'T'
   880  00FEE8  58                 	db	88	;'X'
   881  00FEE9  50                 	db	80	;'P'
   882  00FEEA  4F                 	db	79	;'O'
   883  00FEEB  57                 	db	87	;'W'
   884  00FEEC  45                 	db	69	;'E'
   885  00FEED  52                 	db	82	;'R'
   886  00FEEE  3D                 	db	61	;'='
   887  00FEEF  00                 	db	0
   888  00FEF0                     STR_94:
   889                           
   890                           ; BSR set to: 0
   891  00FEF0  2B                 	db	43
   892  00FEF1  43                 	db	67	;'C'
   893  00FEF2  41                 	db	65	;'A'
   894  00FEF3  44                 	db	68	;'D'
   895  00FEF4  52                 	db	82	;'R'
   896  00FEF5  53                 	db	83	;'S'
   897  00FEF6  53                 	db	83	;'S'
   898  00FEF7  49                 	db	73	;'I'
   899  00FEF8  3F                 	db	63	;'?'
   900  00FEF9  00                 	db	0
   901  00FEFA                     STR_130:
   902                           
   903                           ; BSR set to: 0
   904  00FEFA  2B                 	db	43
   905  00FEFB  54                 	db	84	;'T'
   906  00FEFC  58                 	db	88	;'X'
   907  00FEFD  50                 	db	80	;'P'
   908  00FEFE  4F                 	db	79	;'O'
   909  00FEFF  57                 	db	87	;'W'
   910  00FF00  45                 	db	69	;'E'
   911  00FF01  52                 	db	82	;'R'
   912  00FF02  3F                 	db	63	;'?'
   913  00FF03  00                 	db	0
   914  00FF04                     STR_82:
   915                           
   916                           ; BSR set to: 0
   917  00FF04  2B                 	db	43
   918  00FF05  42                 	db	66	;'B'
   919  00FF06  4F                 	db	79	;'O'
   920  00FF07  4F                 	db	79	;'O'
   921  00FF08  54                 	db	84	;'T'
   922  00FF09  4C                 	db	76	;'L'
   923  00FF0A  4F                 	db	79	;'O'
   924  00FF0B  41                 	db	65	;'A'
   925  00FF0C  44                 	db	68	;'D'
   926  00FF0D  00                 	db	0
   927  00FF0E                     STR_88:
   928                           
   929                           ; BSR set to: 0
   930  00FF0E  2B                 	db	43
   931  00FF0F  41                 	db	65	;'A'
   932  00FF10  45                 	db	69	;'E'
   933  00FF11  53                 	db	83	;'S'
   934  00FF12  4B                 	db	75	;'K'
   935  00FF13  45                 	db	69	;'E'
   936  00FF14  59                 	db	89	;'Y'
   937  00FF15  3A                 	db	58	;':'
   938  00FF16  00                 	db	0
   939  00FF17                     STR_102:
   940                           
   941                           ; BSR set to: 0
   942  00FF17  2B                 	db	43
   943  00FF18  48                 	db	72	;'H'
   944  00FF19  4F                 	db	79	;'O'
   945  00FF1A  50                 	db	80	;'P'
   946  00FF1B  54                 	db	84	;'T'
   947  00FF1C  54                 	db	84	;'T'
   948  00FF1D  4C                 	db	76	;'L'
   949  00FF1E  3D                 	db	61	;'='
   950  00FF1F  00                 	db	0
   951  00FF20                     STR_114:
   952                           
   953                           ; BSR set to: 0
   954  00FF20  2B                 	db	43
   955  00FF21  50                 	db	80	;'P'
   956  00FF22  41                 	db	65	;'A'
   957  00FF23  52                 	db	82	;'R'
   958  00FF24  49                 	db	73	;'I'
   959  00FF25  54                 	db	84	;'T'
   960  00FF26  59                 	db	89	;'Y'
   961  00FF27  3D                 	db	61	;'='
   962  00FF28  00                 	db	0
   963  00FF29                     STR_68:
   964                           
   965                           ; BSR set to: 0
   966  00FF29  2B                 	db	43
   967  00FF2A  53                 	db	83	;'S'
   968  00FF2B  45                 	db	69	;'E'
   969  00FF2C  54                 	db	84	;'T'
   970  00FF2D  53                 	db	83	;'S'
   971  00FF2E  49                 	db	73	;'I'
   972  00FF2F  4E                 	db	78	;'N'
   973  00FF30  4B                 	db	75	;'K'
   974  00FF31  00                 	db	0
   975  00FF32                     STR_59:
   976                           
   977                           ; BSR set to: 0
   978  00FF32  53                 	db	83	;'S'
   979  00FF33  46                 	db	70	;'F'
   980  00FF34  3D                 	db	61	;'='
   981  00FF35  25                 	db	37
   982  00FF36  75                 	db	117	;'u'
   983  00FF37  0D                 	db	13
   984  00FF38  0A                 	db	10
   985  00FF39  00                 	db	0
   986  00FF3A                     STR_138:
   987                           
   988                           ; BSR set to: 0
   989  00FF3A  52                 	db	82	;'R'
   990  00FF3B  65                 	db	101	;'e'
   991  00FF3C  67                 	db	103	;'g'
   992  00FF3D  69                 	db	105	;'i'
   993  00FF3E  6F                 	db	111	;'o'
   994  00FF3F  6E                 	db	110	;'n'
   995  00FF40  20                 	db	32
   996  00FF41  00                 	db	0
   997  00FF42                     STR_112:
   998                           
   999                           ; BSR set to: 0
  1000  00FF42  2B                 	db	43
  1001  00FF43  4E                 	db	78	;'N'
  1002  00FF44  41                 	db	65	;'A'
  1003  00FF45  44                 	db	68	;'D'
  1004  00FF46  44                 	db	68	;'D'
  1005  00FF47  52                 	db	82	;'R'
  1006  00FF48  3D                 	db	61	;'='
  1007  00FF49  00                 	db	0
  1008  00FF4A                     STR_78:
  1009                           
  1010                           ; BSR set to: 0
  1011  00FF4A  2B                 	db	43
  1012  00FF4B  42                 	db	66	;'B'
  1013  00FF4C  43                 	db	67	;'C'
  1014  00FF4D  41                 	db	65	;'A'
  1015  00FF4E  53                 	db	83	;'S'
  1016  00FF4F  54                 	db	84	;'T'
  1017  00FF50  3D                 	db	61	;'='
  1018  00FF51  00                 	db	0
  1019  00FF52                     STR_110:
  1020                           
  1021                           ; BSR set to: 0
  1022  00FF52  2B                 	db	43
  1023  00FF53  4E                 	db	78	;'N'
  1024  00FF54  41                 	db	65	;'A'
  1025  00FF55  44                 	db	68	;'D'
  1026  00FF56  44                 	db	68	;'D'
  1027  00FF57  52                 	db	82	;'R'
  1028  00FF58  3F                 	db	63	;'?'
  1029  00FF59  00                 	db	0
  1030  00FF5A                     STR_66:
  1031                           
  1032                           ; BSR set to: 0
  1033  00FF5A  2B                 	db	43
  1034  00FF5B  53                 	db	83	;'S'
  1035  00FF5C  45                 	db	69	;'E'
  1036  00FF5D  4E                 	db	78	;'N'
  1037  00FF5E  44                 	db	68	;'D'
  1038  00FF5F  3A                 	db	58	;':'
  1039  00FF60  00                 	db	0
  1040  00FF61                     STR_80:
  1041                           
  1042                           ; BSR set to: 0
  1043  00FF61  2B                 	db	43
  1044  00FF62  42                 	db	66	;'B'
  1045  00FF63  41                 	db	65	;'A'
  1046  00FF64  55                 	db	85	;'U'
  1047  00FF65  44                 	db	68	;'D'
  1048  00FF66  3D                 	db	61	;'='
  1049  00FF67  00                 	db	0
  1050  00FF68                     STR_120:
  1051                           
  1052                           ; BSR set to: 0
  1053  00FF68  2B                 	db	43
  1054  00FF69  52                 	db	82	;'R'
  1055  00FF6A  46                 	db	70	;'F'
  1056  00FF6B  43                 	db	67	;'C'
  1057  00FF6C  48                 	db	72	;'H'
  1058  00FF6D  3D                 	db	61	;'='
  1059  00FF6E  00                 	db	0
  1060  00FF6F                     STR_86:
  1061                           
  1062                           ; BSR set to: 0
  1063  00FF6F  2B                 	db	43
  1064  00FF70  41                 	db	65	;'A'
  1065  00FF71  44                 	db	68	;'D'
  1066  00FF72  44                 	db	68	;'D'
  1067  00FF73  52                 	db	82	;'R'
  1068  00FF74  3D                 	db	61	;'='
  1069  00FF75  00                 	db	0
  1070  00FF76                     STR_100:
  1071                           
  1072                           ; BSR set to: 0
  1073  00FF76  2B                 	db	43
  1074  00FF77  48                 	db	72	;'H'
  1075  00FF78  4F                 	db	79	;'O'
  1076  00FF79  50                 	db	80	;'P'
  1077  00FF7A  53                 	db	83	;'S'
  1078  00FF7B  3D                 	db	61	;'='
  1079  00FF7C  00                 	db	0
  1080  00FF7D                     STR_108:
  1081                           
  1082                           ; BSR set to: 0
  1083  00FF7D  2B                 	db	43
  1084  00FF7E  4D                 	db	77	;'M'
  1085  00FF7F  4F                 	db	79	;'O'
  1086  00FF80  44                 	db	68	;'D'
  1087  00FF81  45                 	db	69	;'E'
  1088  00FF82  3F                 	db	63	;'?'
  1089  00FF83  00                 	db	0
  1090  00FF84                     STR_118:
  1091                           
  1092                           ; BSR set to: 0
  1093  00FF84  2B                 	db	43
  1094  00FF85  52                 	db	82	;'R'
  1095  00FF86  46                 	db	70	;'F'
  1096  00FF87  43                 	db	67	;'C'
  1097  00FF88  48                 	db	72	;'H'
  1098  00FF89  3F                 	db	63	;'?'
  1099  00FF8A  00                 	db	0
  1100  00FF8B                     STR_84:
  1101                           
  1102                           ; BSR set to: 0
  1103  00FF8B  2B                 	db	43
  1104  00FF8C  41                 	db	65	;'A'
  1105  00FF8D  44                 	db	68	;'D'
  1106  00FF8E  44                 	db	68	;'D'
  1107  00FF8F  52                 	db	82	;'R'
  1108  00FF90  3F                 	db	63	;'?'
  1109  00FF91  00                 	db	0
  1110  00FF92                     STR_98:
  1111                           
  1112                           ; BSR set to: 0
  1113  00FF92  2B                 	db	43
  1114  00FF93  48                 	db	72	;'H'
  1115  00FF94  4F                 	db	79	;'O'
  1116  00FF95  50                 	db	80	;'P'
  1117  00FF96  53                 	db	83	;'S'
  1118  00FF97  3F                 	db	63	;'?'
  1119  00FF98  00                 	db	0
  1120  00FF99                     STR_124:
  1121                           
  1122                           ; BSR set to: 0
  1123  00FF99  2B                 	db	43
  1124  00FF9A  52                 	db	82	;'R'
  1125  00FF9B  58                 	db	88	;'X'
  1126  00FF9C  43                 	db	67	;'C'
  1127  00FF9D  54                 	db	84	;'T'
  1128  00FF9E  3F                 	db	63	;'?'
  1129  00FF9F  00                 	db	0
  1130  00FFA0                     STR_70:
  1131                           
  1132                           ; BSR set to: 0
  1133  00FFA0  2B                 	db	43
  1134  00FFA1  53                 	db	83	;'S'
  1135  00FFA2  53                 	db	83	;'S'
  1136  00FFA3  49                 	db	73	;'I'
  1137  00FFA4  4E                 	db	78	;'N'
  1138  00FFA5  4B                 	db	75	;'K'
  1139  00FFA6  00                 	db	0
  1140  00FFA7                     STR_17:
  1141                           
  1142                           ; BSR set to: 0
  1143  00FFA7  25                 	db	37
  1144  00FFA8  30                 	db	48	;'0'
  1145  00FFA9  34                 	db	52	;'4'
  1146  00FFAA  58                 	db	88	;'X'
  1147  00FFAB  3A                 	db	58	;':'
  1148  00FFAC  00                 	db	0
  1149  00FFAD                     STR_128:
  1150                           
  1151                           ; BSR set to: 0
  1152  00FFAD  2B                 	db	43
  1153  00FFAE  54                 	db	84	;'T'
  1154  00FFAF  54                 	db	84	;'T'
  1155  00FFB0  4C                 	db	76	;'L'
  1156  00FFB1  3D                 	db	61	;'='
  1157  00FFB2  00                 	db	0
  1158  00FFB3                     STR_106:
  1159                           
  1160                           ; BSR set to: 0
  1161  00FFB3  2B                 	db	43
  1162  00FFB4  4D                 	db	77	;'M'
  1163  00FFB5  41                 	db	65	;'A'
  1164  00FFB6  43                 	db	67	;'C'
  1165  00FFB7  3F                 	db	63	;'?'
  1166  00FFB8  00                 	db	0
  1167  00FFB9                     STR_126:
  1168                           
  1169                           ; BSR set to: 0
  1170  00FFB9  2B                 	db	43
  1171  00FFBA  54                 	db	84	;'T'
  1172  00FFBB  54                 	db	84	;'T'
  1173  00FFBC  4C                 	db	76	;'L'
  1174  00FFBD  3F                 	db	63	;'?'
  1175  00FFBE  00                 	db	0
  1176  00FFBF                     STR_51:
  1177                           
  1178                           ; BSR set to: 0
  1179  00FFBF  3D                 	db	61	;'='
  1180  00FFC0  4E                 	db	78	;'N'
  1181  00FFC1  4F                 	db	79	;'O'
  1182  00FFC2  4E                 	db	78	;'N'
  1183  00FFC3  45                 	db	69	;'E'
  1184  00FFC4  00                 	db	0
  1185  00FFC5                     STR_53:
  1186                           
  1187                           ; BSR set to: 0
  1188  00FFC5  3D                 	db	61	;'='
  1189  00FFC6  45                 	db	69	;'E'
  1190  00FFC7  56                 	db	86	;'V'
  1191  00FFC8  45                 	db	69	;'E'
  1192  00FFC9  4E                 	db	78	;'N'
  1193  00FFCA  00                 	db	0
  1194  00FFCB                     STR_116:
  1195                           
  1196                           ; BSR set to: 0
  1197  00FFCB  2B                 	db	43
  1198  00FFCC  52                 	db	82	;'R'
  1199  00FFCD  45                 	db	69	;'E'
  1200  00FFCE  43                 	db	67	;'C'
  1201  00FFCF  56                 	db	86	;'V'
  1202  00FFD0  00                 	db	0
  1203  00FFD1                     STR_139:
  1204                           
  1205                           ; BSR set to: 0
  1206  00FFD1  4E                 	db	78	;'N'
  1207  00FFD2  41                 	db	65	;'A'
  1208  00FFD3  0D                 	db	13
  1209  00FFD4  0A                 	db	10
  1210  00FFD5  00                 	db	0
  1211  00FFD6                     STR_12:
  1212                           
  1213                           ; BSR set to: 0
  1214  00FFD6  4F                 	db	79	;'O'
  1215  00FFD7  4B                 	db	75	;'K'
  1216  00FFD8  0D                 	db	13
  1217  00FFD9  0A                 	db	10
  1218  00FFDA  00                 	db	0
  1219  00FFDB                     STR_21:
  1220                           
  1221                           ; BSR set to: 0
  1222  00FFDB  4D                 	db	77	;'M'
  1223  00FFDC  41                 	db	65	;'A'
  1224  00FFDD  43                 	db	67	;'C'
  1225  00FFDE  3D                 	db	61	;'='
  1226  00FFDF  00                 	db	0
  1227  00FFE0                     STR_74:
  1228                           
  1229                           ; BSR set to: 0
  1230  00FFE0  2B                 	db	43
  1231  00FFE1  53                 	db	83	;'S'
  1232  00FFE2  46                 	db	70	;'F'
  1233  00FFE3  3D                 	db	61	;'='
  1234  00FFE4  00                 	db	0
  1235  00FFE5                     STR_72:
  1236                           
  1237                           ; BSR set to: 0
  1238  00FFE5  2B                 	db	43
  1239  00FFE6  53                 	db	83	;'S'
  1240  00FFE7  46                 	db	70	;'F'
  1241  00FFE8  3F                 	db	63	;'?'
  1242  00FFE9  00                 	db	0
  1243  00FFEA                     STR_49:
  1244                           
  1245                           ; BSR set to: 0
  1246  00FFEA  3D                 	db	61	;'='
  1247  00FFEB  4F                 	db	79	;'O'
  1248  00FFEC  44                 	db	68	;'D'
  1249  00FFED  44                 	db	68	;'D'
  1250  00FFEE  00                 	db	0
  1251  00FFEF                     STR_122:
  1252                           
  1253                           ; BSR set to: 0
  1254  00FFEF  2B                 	db	43
  1255  00FFF0  52                 	db	82	;'R'
  1256  00FFF1  53                 	db	83	;'S'
  1257  00FFF2  54                 	db	84	;'T'
  1258  00FFF3  00                 	db	0
  1259  00FFF4                     STR_22:
  1260                           
  1261                           ; BSR set to: 0
  1262  00FFF4  25                 	db	37
  1263  00FFF5  30                 	db	48	;'0'
  1264  00FFF6  32                 	db	50	;'2'
  1265  00FFF7  58                 	db	88	;'X'
  1266  00FFF8  00                 	db	0
  1267  00FFF9                     STR_104:
  1268                           
  1269                           ; BSR set to: 0
  1270  00FFF9  2B                 	db	43
  1271  00FFFA  49                 	db	73	;'I'
  1272  00FFFB  00                 	db	0
  1273  00FFFC                     STR_58:
  1274                           
  1275                           ; BSR set to: 0
  1276  00FFFC  0D                 	db	13
  1277  00FFFD  00                 	db	0
  1278  0000                     
  1279                           ; #config settings
  1280  00FFFE  00                 	db	0	; dummy byte at the end
  1281  0000                     
  1282                           	psect	nvBANK0
  1283  0000FD                     __pnvBANK0:
  1284                           	opt callstack 0
  1285  0000FD                     _timer0ReloadVal16bit:
  1286                           	opt callstack 0
  1287  0000FD                     	ds	2
  1288  0000FF                     _uart1TxBufferRemaining:
  1289                           	opt callstack 0
  1290  0000FF                     	ds	1
  1291                           
  1292                           	psect	nvBANK1
  1293  0001ED                     __pnvBANK1:
  1294                           	opt callstack 0
  1295  0001ED                     _UART1_ErrorHandler:
  1296                           	opt callstack 0
  1297  0001ED                     	ds	2
  1298  0001EF                     _UART1_OverrunErrorHandler:
  1299                           	opt callstack 0
  1300  0001EF                     	ds	2
  1301  0001F1                     _UART1_FramingErrorHandler:
  1302                           	opt callstack 0
  1303  0001F1                     	ds	2
  1304  0001F3                     _TMR0_InterruptHandler:
  1305                           	opt callstack 0
  1306  0001F3                     	ds	2
  1307  0001F5                     _UART1_TxInterruptHandler:
  1308                           	opt callstack 0
  1309  0001F5                     	ds	2
  1310  0001F7                     _UART1_RxInterruptHandler:
  1311                           	opt callstack 0
  1312  0001F7                     	ds	2
  1313  0000                     _CRCDATH	set	14689
  1314  0000                     _CRCDATL	set	14688
  1315  0000                     _CRCCON1bits	set	14697
  1316  0000                     _CRCXORL	set	14694
  1317  0000                     _CRCXORH	set	14695
  1318  0000                     _SCANTRIG	set	14717
  1319  0000                     _SCANHADRL	set	14713
  1320  0000                     _SCANHADRH	set	14714
  1321  0000                     _SCANHADRU	set	14715
  1322  0000                     _SCANLADRL	set	14710
  1323  0000                     _SCANLADRH	set	14711
  1324  0000                     _SCANLADRU	set	14712
  1325  0000                     _SCANCON0	set	14716
  1326  0000                     _CRCCON1	set	14697
  1327  0000                     _CRCCON0	set	14696
  1328  0000                     _PMD7	set	14791
  1329  0000                     _PMD6	set	14790
  1330  0000                     _PMD5	set	14789
  1331  0000                     _PMD4	set	14788
  1332  0000                     _PMD3	set	14787
  1333  0000                     _PMD2	set	14786
  1334  0000                     _PMD1	set	14785
  1335  0000                     _PMD0	set	14784
  1336  0000                     _OSCTUNE	set	14814
  1337  0000                     _OSCFRQ	set	14815
  1338  0000                     _OSCEN	set	14813
  1339  0000                     _OSCCON3	set	14811
  1340  0000                     _OSCCON1	set	14809
  1341  0000                     _IPR3bits	set	14723
  1342  0000                     _PIR0bits	set	14752
  1343  0000                     _NVMCON2	set	14822
  1344  0000                     _NVMDAT	set	14819
  1345  0000                     _NVMADRL	set	14816
  1346  0000                     _NVMADRH	set	14817
  1347  0000                     _NVMCON1bits	set	14821
  1348  0000                     _PIR3bits	set	14755
  1349  0000                     _PIR2bits	set	14754
  1350  0000                     _PIE3bits	set	14739
  1351  0000                     _CRCCON0bits	set	14696
  1352  0000                     _CRCACCH	set	14691
  1353  0000                     _CRCACCL	set	14690
  1354  0000                     _SPI1SDIPPS	set	15071
  1355  0000                     _RC7PPS	set	14871
  1356  0000                     _U1CTSPPS	set	15078
  1357  0000                     _U1RXPPS	set	15077
  1358  0000                     _RC1PPS	set	14865
  1359  0000                     _RB0PPS	set	14856
  1360  0000                     _SPI1SSPPS	set	15072
  1361  0000                     _SPI1SCKPPS	set	15070
  1362  0000                     _RC0PPS	set	14864
  1363  0000                     _INLVLE	set	14980
  1364  0000                     _INLVLC	set	14948
  1365  0000                     _INLVLB	set	14932
  1366  0000                     _INLVLA	set	14916
  1367  0000                     _SLRCONC	set	14947
  1368  0000                     _SLRCONB	set	14931
  1369  0000                     _SLRCONA	set	14915
  1370  0000                     _ODCONC	set	14946
  1371  0000                     _ODCONB	set	14930
  1372  0000                     _ODCONA	set	14914
  1373  0000                     _RC4I2C	set	14955
  1374  0000                     _RC3I2C	set	14954
  1375  0000                     _RB2I2C	set	14939
  1376  0000                     _RB1I2C	set	14938
  1377  0000                     _WPUC	set	14945
  1378  0000                     _WPUA	set	14913
  1379  0000                     _WPUB	set	14929
  1380  0000                     _WPUE	set	14977
  1381  0000                     _ANSELA	set	14912
  1382  0000                     _ANSELB	set	14928
  1383  0000                     _ANSELC	set	14944
  1384  0000                     _U1TXB	set	15850
  1385  0000                     _U1ERRIE	set	15866
  1386  0000                     _U1UIR	set	15864
  1387  0000                     _U1P3H	set	15857
  1388  0000                     _U1P3L	set	15856
  1389  0000                     _U1P2H	set	15855
  1390  0000                     _U1P2L	set	15854
  1391  0000                     _U1P1H	set	15853
  1392  0000                     _U1P1L	set	15852
  1393  0000                     _SPI1RXB	set	15632
  1394  0000                     _SPI1TXB	set	15633
  1395  0000                     _SPI1TCNTL	set	15634
  1396  0000                     _SPI1BAUD	set	15641
  1397  0000                     _SPI1CLK	set	15644
  1398  0000                     _SPI1CON2	set	15638
  1399  0000                     _SPI1CON1	set	15637
  1400  0000                     _SPI1CON0	set	15636
  1401  0000                     _U1ERRIR	set	15865
  1402  0000                     _U1FIFO	set	15863
  1403  0000                     _U1ERRIRbits	set	15865
  1404  0000                     _U1BRGH	set	15862
  1405  0000                     _U1BRGL	set	15861
  1406  0000                     _U1CON2	set	15860
  1407  0000                     _U1CON0	set	15858
  1408  0000                     _U1CON1	set	15859
  1409  0000                     _U1RXB	set	15848
  1410  0000                     _PORTBbits	set	16331
  1411  0000                     _LATCbits	set	16316
  1412  0000                     _TRISC	set	16324
  1413  0000                     _TRISB	set	16323
  1414  0000                     _TRISA	set	16322
  1415  0000                     _LATC	set	16316
  1416  0000                     _LATB	set	16315
  1417  0000                     _LATA	set	16314
  1418  0000                     _IVTBASEL	set	16341
  1419  0000                     _IVTBASEH	set	16342
  1420  0000                     _IVTBASEU	set	16343
  1421  0000                     _IVTLOCKbits	set	16340
  1422  0000                     _IVTLOCK	set	16340
  1423  0000                     _INTCON0bits	set	16338
  1424  0000                     _TABLAT	set	16373
  1425  0000                     _TBLPTRL	set	16374
  1426  0000                     _TBLPTRH	set	16375
  1427  0000                     _TBLPTRU	set	16376
  1428  0000                     _T0CON0	set	16312
  1429  0000                     _TMR0L	set	16310
  1430  0000                     _TMR0H	set	16311
  1431  0000                     _T0CON1	set	16313
  1432  0000                     _TRISBbits	set	16323
  1433  0000                     _LATAbits	set	16314
  1434  0000                     _GIE	set	130711
  1435                           
  1436                           	psect	cinit
  1437  007004                     __pcinit:
  1438                           	opt callstack 0
  1439  007004                     start_initialization:
  1440                           	opt callstack 0
  1441  007004                     __initialization:
  1442                           	opt callstack 0
  1443                           
  1444                           ; Initialize objects allocated to BANK1 (17 bytes)
  1445                           ; load TBLPTR registers with __pidataBANK1
  1446  007004  0EBA               	movlw	low __pidataBANK1
  1447  007006  6EF6               	movwf	tblptrl,c
  1448  007008  0E98               	movlw	high __pidataBANK1
  1449  00700A  6EF7               	movwf	tblptrh,c
  1450  00700C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1451  00700E  6EF8               	movwf	tblptru,c
  1452  007010  EE00  F1DC         	lfsr	0,__pdataBANK1
  1453  007014  EE10 F011          	lfsr	1,17
  1454  007018                     copy_data0:
  1455  007018  0009               	tblrd		*+
  1456  00701A  006F FFD7 FFEE     	movff	tablat,postinc0
  1457  007020  50E5               	movf	postdec1,w,c
  1458  007022  50E1               	movf	fsr1l,w,c
  1459  007024  E1F9               	bnz	copy_data0
  1460                           
  1461                           ; Initialize objects allocated to BANK0 (6 bytes)
  1462                           ; load TBLPTR registers with __pidataBANK0
  1463  007026  0EFA               	movlw	low __pidataBANK0
  1464  007028  6EF6               	movwf	tblptrl,c
  1465  00702A  0E99               	movlw	high __pidataBANK0
  1466  00702C  6EF7               	movwf	tblptrh,c
  1467  00702E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1468  007030  6EF8               	movwf	tblptru,c
  1469  007032  EE00  F0F7         	lfsr	0,__pdataBANK0
  1470  007036  EE10 F006          	lfsr	1,6
  1471  00703A                     copy_data1:
  1472  00703A  0009               	tblrd		*+
  1473  00703C  006F FFD7 FFEE     	movff	tablat,postinc0
  1474  007042  50E5               	movf	postdec1,w,c
  1475  007044  50E1               	movf	fsr1l,w,c
  1476  007046  E1F9               	bnz	copy_data1
  1477                           
  1478                           ; Clear objects allocated to BIGRAM (1697 bytes)
  1479  007048  EE01  F1BD         	lfsr	0,__pbssBIGRAM
  1480  00704C  EE11 F2A1          	lfsr	1,1697
  1481  007050                     clear_0:
  1482  007050  6AEE               	clrf	postinc0,c
  1483  007052  50E5               	movf	postdec1,w,c
  1484  007054  50E1               	movf	fsr1l,w,c
  1485  007056  E1FC               	bnz	clear_0
  1486  007058  50E2               	movf	fsr1h,w,c
  1487  00705A  E1FA               	bnz	clear_0
  1488                           
  1489                           ; Clear objects allocated to BANK5 (189 bytes)
  1490  00705C  EE01  F100         	lfsr	0,__pbssBANK5
  1491  007060  0EBD               	movlw	189
  1492  007062                     clear_1:
  1493  007062  6AEE               	clrf	postinc0,c
  1494  007064  06E8               	decf	wreg,f,c
  1495  007066  E1FD               	bnz	clear_1
  1496                           
  1497                           ; Clear objects allocated to BANK4 (96 bytes)
  1498  007068  EE01  F000         	lfsr	0,__pbssBANK4
  1499  00706C  0E60               	movlw	96
  1500  00706E                     clear_2:
  1501  00706E  6AEE               	clrf	postinc0,c
  1502  007070  06E8               	decf	wreg,f,c
  1503  007072  E1FD               	bnz	clear_2
  1504                           
  1505                           ; Clear objects allocated to BANK3 (242 bytes)
  1506  007074  EE00  F300         	lfsr	0,__pbssBANK3
  1507  007078  0EF2               	movlw	242
  1508  00707A                     clear_3:
  1509  00707A  6AEE               	clrf	postinc0,c
  1510  00707C  06E8               	decf	wreg,f,c
  1511  00707E  E1FD               	bnz	clear_3
  1512                           
  1513                           ; Clear objects allocated to BANK2 (218 bytes)
  1514  007080  EE00  F200         	lfsr	0,__pbssBANK2
  1515  007084  0EDA               	movlw	218
  1516  007086                     clear_4:
  1517  007086  6AEE               	clrf	postinc0,c
  1518  007088  06E8               	decf	wreg,f,c
  1519  00708A  E1FD               	bnz	clear_4
  1520                           
  1521                           ; Clear objects allocated to BANK1 (220 bytes)
  1522  00708C  EE00  F100         	lfsr	0,__pbssBANK1
  1523  007090  0EDC               	movlw	220
  1524  007092                     clear_5:
  1525  007092  6AEE               	clrf	postinc0,c
  1526  007094  06E8               	decf	wreg,f,c
  1527  007096  E1FD               	bnz	clear_5
  1528                           
  1529                           ; Clear objects allocated to BANK0 (70 bytes)
  1530  007098  EE00  F0B1         	lfsr	0,__pbssBANK0
  1531  00709C  0E46               	movlw	70
  1532  00709E                     clear_6:
  1533  00709E  6AEE               	clrf	postinc0,c
  1534  0070A0  06E8               	decf	wreg,f,c
  1535  0070A2  E1FD               	bnz	clear_6
  1536                           
  1537                           ; Clear objects allocated to COMRAM (1 bytes)
  1538  0070A4  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  1539                           
  1540                           ;
  1541                           ; Setup IVTBASE
  1542                           ;
  1543  0070A6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1544  0070A8  6ED5               	movwf	213,c
  1545  0070AA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1546  0070AC  6ED6               	movwf	214,c
  1547  0070AE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1548  0070B0  6ED7               	movwf	215,c
  1549  0070B2                     end_of_initialization:
  1550                           	opt callstack 0
  1551  0070B2                     __end_of__initialization:
  1552                           	opt callstack 0
  1553  0070B2  0100               	movlb	0
  1554  0070B4  EFC8  F049         	goto	_main	;jump to C main() function
  1555                           
  1556                           	psect	bssCOMRAM
  1557  00005E                     __pbssCOMRAM:
  1558                           	opt callstack 0
  1559  00005E                     _uart1RxHead:
  1560                           	opt callstack 0
  1561  00005E                     	ds	1
  1562                           
  1563                           	psect	bssBANK0
  1564  0000B1                     __pbssBANK0:
  1565                           	opt callstack 0
  1566  0000B1                     strtok@p:
  1567                           	opt callstack 0
  1568  0000B1                     	ds	2
  1569  0000B3                     _nout:
  1570                           	opt callstack 0
  1571  0000B3                     	ds	2
  1572  0000B5                     _width:
  1573                           	opt callstack 0
  1574  0000B5                     	ds	2
  1575  0000B7                     _prec:
  1576                           	opt callstack 0
  1577  0000B7                     	ds	2
  1578  0000B9                     _flags:
  1579                           	opt callstack 0
  1580  0000B9                     	ds	2
  1581  0000BB                     _timers:
  1582                           	opt callstack 0
  1583  0000BB                     	ds	2
  1584  0000BD                     _nwkTxPhyActiveFrame:
  1585                           	opt callstack 0
  1586  0000BD                     	ds	2
  1587  0000BF                     _nwkSecurityActiveFrame:
  1588                           	opt callstack 0
  1589  0000BF                     	ds	2
  1590  0000C1                     _nwkDataReqQueue:
  1591                           	opt callstack 0
  1592  0000C1                     	ds	2
  1593  0000C3                     _halTimerIrqCount:
  1594                           	opt callstack 0
  1595  0000C3                     	ds	2
  1596  0000C5                     _eeprom_write_flags:
  1597                           	opt callstack 0
  1598  0000C5                     	ds	2
  1599  0000C7                     _nwkSecurityEncrypt:
  1600                           	opt callstack 0
  1601  0000C7                     	ds	1
  1602  0000C8                     _nwkSecurityOffset:
  1603                           	opt callstack 0
  1604  0000C8                     	ds	1
  1605  0000C9                     _nwkSecuritySize:
  1606                           	opt callstack 0
  1607  0000C9                     	ds	1
  1608  0000CA                     _nwkSecurityActiveFrames:
  1609                           	opt callstack 0
  1610  0000CA                     	ds	1
  1611  0000CB                     _nwkRxAckControl:
  1612                           	opt callstack 0
  1613  0000CB                     	ds	1
  1614  0000CC                     _uart1RxLastError:
  1615                           	opt callstack 0
  1616  0000CC                     	ds	1
  1617  0000CD                     _uart1RxCount:
  1618                           	opt callstack 0
  1619  0000CD                     	ds	1
  1620  0000CE                     _uart1RxTail:
  1621                           	opt callstack 0
  1622  0000CE                     	ds	1
  1623  0000CF                     _uart1TxTail:
  1624                           	opt callstack 0
  1625  0000CF                     	ds	1
  1626  0000D0                     _uart1TxHead:
  1627                           	opt callstack 0
  1628  0000D0                     	ds	1
  1629  0000D1                     _ledStateVar:
  1630                           	opt callstack 0
  1631  0000D1                     	ds	1
  1632  0000D2                     _radio_state_var:
  1633                           	opt callstack 0
  1634  0000D2                     	ds	1
  1635  0000D3                     _dwellTimer:
  1636                           	opt callstack 0
  1637  0000D3                     	ds	1
  1638  0000D4                     _TXPower:
  1639                           	opt callstack 0
  1640  0000D4                     	ds	1
  1641  0000D5                     _fhssdebug:
  1642                           	opt callstack 0
  1643  0000D5                     	ds	1
  1644  0000D6                     _channel:
  1645                           	opt callstack 0
  1646  0000D6                     	ds	1
  1647  0000D7                     _current_sf:
  1648                           	opt callstack 0
  1649  0000D7                     	ds	1
  1650  0000D8                     _SNR:
  1651                           	opt callstack 0
  1652  0000D8                     	ds	1
  1653  0000D9                     _packetRSSI:
  1654                           	opt callstack 0
  1655  0000D9                     	ds	1
  1656  0000DA                     _RSSI:
  1657                           	opt callstack 0
  1658  0000DA                     	ds	1
  1659  0000DB                     _need_radio_reset:
  1660                           	opt callstack 0
  1661  0000DB                     	ds	1
  1662  0000DC                     _cadCounter:
  1663                           	opt callstack 0
  1664  0000DC                     	ds	1
  1665  0000DD                     _cadDone:
  1666                           	opt callstack 0
  1667  0000DD                     	ds	1
  1668  0000DE                     __packetIndex:
  1669                           	opt callstack 0
  1670  0000DE                     	ds	1
  1671  0000DF                     __implicitHeaderMode:
  1672                           	opt callstack 0
  1673  0000DF                     	ds	1
  1674  0000E0                     _atStateVar:
  1675                           	opt callstack 0
  1676  0000E0                     	ds	1
  1677  0000E1                     _commandByteCounter:
  1678                           	opt callstack 0
  1679  0000E1                     	ds	1
  1680  0000E2                     _tx_done:
  1681                           	opt callstack 0
  1682  0000E2                     	ds	1
  1683  0000E3                     _msgIDCounter:
  1684                           	opt callstack 0
  1685  0000E3                     	ds	1
  1686  0000E4                     _currentMode:
  1687                           	opt callstack 0
  1688  0000E4                     	ds	1
  1689  0000E5                     _sinkAddr1:
  1690                           	opt callstack 0
  1691  0000E5                     	ds	1
  1692  0000E6                     _sinkAddr0:
  1693                           	opt callstack 0
  1694  0000E6                     	ds	1
  1695  0000E7                     _currentMsgID:
  1696                           	opt callstack 0
  1697  0000E7                     	ds	1
  1698  0000E8                     _curent_parity:
  1699                           	opt callstack 0
  1700  0000E8                     	ds	1
  1701  0000E9                     _uart_parity:
  1702                           	opt callstack 0
  1703  0000E9                     	ds	1
  1704  0000EA                     _uart_baud_rate:
  1705                           	opt callstack 0
  1706  0000EA                     	ds	1
  1707  0000EB                     _eeprom_write_flags_enum:
  1708                           	opt callstack 0
  1709  0000EB                     	ds	1
  1710  0000EC                     _crcObj:
  1711                           	opt callstack 0
  1712  0000EC                     	ds	3
  1713  0000EF                     _ledtimer:
  1714                           	opt callstack 0
  1715  0000EF                     	ds	2
  1716  0000F1                     _txTimeOut:
  1717                           	opt callstack 0
  1718  0000F1                     	ds	2
  1719  0000F3                     _cadTimeOut:
  1720                           	opt callstack 0
  1721  0000F3                     	ds	2
  1722  0000F5                     __cadBackoffTimer:
  1723                           	opt callstack 0
  1724  0000F5                     	ds	2
  1725                           
  1726                           	psect	dataBANK0
  1727  0000F7                     __pdataBANK0:
  1728                           	opt callstack 0
  1729  0000F7                     _RSSITarget:
  1730                           	opt callstack 0
  1731  0000F7                     	ds	1
  1732  0000F8                     _currentNetID:
  1733                           	opt callstack 0
  1734  0000F8                     	ds	1
  1735  0000F9                     _currentAddr1:
  1736                           	opt callstack 0
  1737  0000F9                     	ds	1
  1738  0000FA                     _currentAddr0:
  1739                           	opt callstack 0
  1740  0000FA                     	ds	1
  1741  0000FB                     _ATTimeoutTimer:
  1742                           	opt callstack 0
  1743  0000FB                     	ds	2
  1744                           
  1745                           	psect	bssBANK1
  1746  000100                     __pbssBANK1:
  1747                           	opt callstack 0
  1748  000100                     _uart1RxStatusBuffer:
  1749                           	opt callstack 0
  1750  000100                     	ds	16
  1751  000110                     _uart1RxBuffer:
  1752                           	opt callstack 0
  1753  000110                     	ds	16
  1754  000120                     _uartmsg:
  1755                           	opt callstack 0
  1756  000120                     	ds	6
  1757  000126                     _symbolDuration:
  1758                           	opt callstack 0
  1759  000126                     	ds	4
  1760  00012A                     _current_baud_rate:
  1761                           	opt callstack 0
  1762  00012A                     	ds	3
  1763  00012D                     _errno:
  1764                           	opt callstack 0
  1765  00012D                     	ds	2
  1766  00012F                     _ledTimerVar:
  1767                           	opt callstack 0
  1768  00012F                     	ds	2
  1769  000131                     _nwkIb:
  1770                           	opt callstack 0
  1771  000131                     	ds	56
  1772  000169                     _nwkSecurityVector:
  1773                           	opt callstack 0
  1774  000169                     	ds	16
  1775  000179                     _net_key:
  1776                           	opt callstack 0
  1777  000179                     	ds	16
  1778  000189                     _nwkTxDelayTimer:
  1779                           	opt callstack 0
  1780  000189                     	ds	13
  1781  000196                     _nwkTxAckWaitTimer:
  1782                           	opt callstack 0
  1783  000196                     	ds	13
  1784  0001A3                     _nwkRxDuplicateRejectionTimer:
  1785                           	opt callstack 0
  1786  0001A3                     	ds	13
  1787  0001B0                     _EUIDbyte:
  1788                           	opt callstack 0
  1789  0001B0                     	ds	12
  1790  0001BC                     _ledtasksbuf:
  1791                           	opt callstack 0
  1792  0001BC                     	ds	10
  1793  0001C6                     _rx_buffer_queue_context:
  1794                           	opt callstack 0
  1795  0001C6                     	ds	10
  1796  0001D0                     _seed:
  1797                           	opt callstack 0
  1798  0001D0                     	ds	8
  1799  0001D8                     _rx_buffer_queue:
  1800                           	opt callstack 0
  1801  0001D8                     	ds	4
  1802                           
  1803                           	psect	dataBANK1
  1804  0001DC                     __pdataBANK1:
  1805                           	opt callstack 0
  1806  0001DC                     _syncList:
  1807                           	opt callstack 0
  1808  0001DC                     	ds	10
  1809  0001E6                     	ds	5
  1810  0001EB                     _test_timer:
  1811                           	opt callstack 0
  1812  0001EB                     	ds	2
  1813                           
  1814                           	psect	bssBANK2
  1815  000200                     __pbssBANK2:
  1816                           	opt callstack 0
  1817  000200                     _nwkGroups:
  1818                           	opt callstack 0
  1819  000200                     	ds	20
  1820  000214                     _aes_key:
  1821                           	opt callstack 0
  1822  000214                     	ds	16
  1823  000224                     _atCommand:
  1824                           	opt callstack 0
  1825  000224                     	ds	80
  1826  000274                     _nwkRouteTable:
  1827                           	opt callstack 0
  1828  000274                     	ds	70
  1829  0002BA                     _dbuf:
  1830                           	opt callstack 0
  1831  0002BA                     	ds	32
  1832                           
  1833                           	psect	bssBANK3
  1834  000300                     __pbssBANK3:
  1835                           	opt callstack 0
  1836  000300                     _uart1TxBuffer:
  1837                           	opt callstack 0
  1838  000300                     	ds	64
  1839  000340                     _phyRxBuffer:
  1840                           	opt callstack 0
  1841  000340                     	ds	128
  1842  0003C0                     _nwkRxDuplicateRejectionTable:
  1843                           	opt callstack 0
  1844  0003C0                     	ds	50
  1845                           
  1846                           	psect	bssBANK4
  1847  000400                     __pbssBANK4:
  1848                           	opt callstack 0
  1849  000400                     _ledqueue:
  1850                           	opt callstack 0
  1851  000400                     	ds	96
  1852                           
  1853                           	psect	bssBANK5
  1854  000500                     __pbssBANK5:
  1855                           	opt callstack 0
  1856  000500                     _fhssReg:
  1857                           	opt callstack 0
  1858  000500                     	ds	189
  1859                           
  1860                           	psect	bssBIGRAM
  1861  0005BD                     __pbssBIGRAM:
  1862                           	opt callstack 0
  1863  0005BD                     _nwkFrameFrames:
  1864                           	opt callstack 0
  1865  0005BD                     	ds	685
  1866  00086A                     _tx_buffer:
  1867                           	opt callstack 0
  1868  00086A                     	ds	524
  1869  000A76                     _rx_buffer:
  1870                           	opt callstack 0
  1871  000A76                     	ds	488
  1872                           
  1873                           	psect	cstackBANK0
  1874  000060                     __pcstackBANK0:
  1875                           	opt callstack 0
  1876  000060                     vfpfcnvrt@ll:
  1877                           	opt callstack 0
  1878                           
  1879                           ; 8 bytes @ 0x0
  1880  000060                     	ds	8
  1881  000068                     vfpfcnvrt@c:
  1882                           	opt callstack 0
  1883                           
  1884                           ; 1 bytes @ 0x8
  1885  000068                     	ds	1
  1886  000069                     vfpfcnvrt@done:
  1887                           	opt callstack 0
  1888                           
  1889                           ; 2 bytes @ 0x9
  1890  000069                     	ds	2
  1891  00006B                     _vfpfcnvrt$7039:
  1892                           	opt callstack 0
  1893                           
  1894                           ; 2 bytes @ 0xB
  1895  00006B                     	ds	2
  1896  00006D                     vfpfcnvrt@llu:
  1897                           	opt callstack 0
  1898                           
  1899                           ; 8 bytes @ 0xD
  1900  00006D                     	ds	8
  1901  000075                     ?_printf:
  1902                           	opt callstack 0
  1903  000075                     printf@fmt:
  1904                           	opt callstack 0
  1905                           
  1906                           ; 2 bytes @ 0x15
  1907  000075                     	ds	10
  1908  00007F                     ??_print_hop_table:
  1909  00007F                     cmdBcast@p1:
  1910                           	opt callstack 0
  1911  00007F                     cmdSetAddr@p2:
  1912                           	opt callstack 0
  1913  00007F                     cmdSetNaddr@p2:
  1914                           	opt callstack 0
  1915  00007F                     cmdSetRFCH@p1:
  1916                           	opt callstack 0
  1917  00007F                     cmdSetTX@p2:
  1918                           	opt callstack 0
  1919  00007F                     cmdSetCADRSSI@p1:
  1920                           	opt callstack 0
  1921  00007F                     cmdSetSF@p1:
  1922                           	opt callstack 0
  1923  00007F                     cmdSend@destaddr:
  1924                           	opt callstack 0
  1925  00007F                     cmdSetAES@AESstr:
  1926                           	opt callstack 0
  1927                           
  1928                           ; 32 bytes @ 0x1F
  1929  00007F                     	ds	2
  1930  000081                     cmdBcast@buf_id:
  1931                           	opt callstack 0
  1932  000081                     cmdSetAddr@p1:
  1933                           	opt callstack 0
  1934  000081                     cmdSetNaddr@p1:
  1935                           	opt callstack 0
  1936  000081                     cmdSetTX@p1:
  1937                           	opt callstack 0
  1938  000081                     cmdSetRFCH@CHstr:
  1939                           	opt callstack 0
  1940  000081                     cmdSetCADRSSI@CHstr:
  1941                           	opt callstack 0
  1942  000081                     cmdSetSF@CHstr:
  1943                           	opt callstack 0
  1944                           
  1945                           ; 3 bytes @ 0x21
  1946  000081                     	ds	2
  1947  000083                     cmdSetNaddr@tempaddr:
  1948                           	opt callstack 0
  1949  000083                     cmdSetTX@temp:
  1950                           	opt callstack 0
  1951  000083                     cmdSetAddr@tempaddr:
  1952                           	opt callstack 0
  1953                           
  1954                           ; 2 bytes @ 0x23
  1955  000083                     	ds	1
  1956  000084                     cmdSend@tempaddr:
  1957                           	opt callstack 0
  1958  000084                     cmdSetRFCH@p2:
  1959                           	opt callstack 0
  1960  000084                     cmdSetCADRSSI@p2:
  1961                           	opt callstack 0
  1962  000084                     cmdSetSF@p2:
  1963                           	opt callstack 0
  1964  000084                     cmdSetTX@CHstr:
  1965                           	opt callstack 0
  1966                           
  1967                           ; 3 bytes @ 0x24
  1968  000084                     	ds	2
  1969  000086                     cmdSetRFCH@temp:
  1970                           	opt callstack 0
  1971  000086                     cmdSetCADRSSI@temp:
  1972                           	opt callstack 0
  1973  000086                     cmdSetSF@temp:
  1974                           	opt callstack 0
  1975  000086                     cmdSend@p2:
  1976                           	opt callstack 0
  1977                           
  1978                           ; 2 bytes @ 0x26
  1979  000086                     	ds	2
  1980  000088                     cmdSend@p1:
  1981                           	opt callstack 0
  1982                           
  1983                           ; 2 bytes @ 0x28
  1984  000088                     	ds	2
  1985  00008A                     cmdSend@buf_id:
  1986                           	opt callstack 0
  1987                           
  1988                           ; 1 bytes @ 0x2A
  1989  00008A                     	ds	21
  1990  00009F                     cmdSetAES@p2:
  1991                           	opt callstack 0
  1992                           
  1993                           ; 2 bytes @ 0x3F
  1994  00009F                     	ds	2
  1995  0000A1                     cmdSetAES@temp:
  1996                           	opt callstack 0
  1997                           
  1998                           ; 3 bytes @ 0x41
  1999  0000A1                     	ds	3
  2000  0000A4                     cmdSetAES@key_type:
  2001                           	opt callstack 0
  2002                           
  2003                           ; 1 bytes @ 0x44
  2004  0000A4                     	ds	1
  2005  0000A5                     cmdSetAES@byte:
  2006                           	opt callstack 0
  2007                           
  2008                           ; 1 bytes @ 0x45
  2009  0000A5                     	ds	1
  2010  0000A6                     cmdSetAES@p1:
  2011                           	opt callstack 0
  2012                           
  2013                           ; 2 bytes @ 0x46
  2014  0000A6                     	ds	2
  2015  0000A8                     cmdSetAES@i:
  2016                           	opt callstack 0
  2017                           
  2018                           ; 1 bytes @ 0x48
  2019  0000A8                     	ds	1
  2020  0000A9                     executeATCommand@cmd:
  2021                           	opt callstack 0
  2022                           
  2023                           ; 2 bytes @ 0x49
  2024  0000A9                     	ds	2
  2025  0000AB                     ??_executeATCommand:
  2026                           
  2027                           ; 1 bytes @ 0x4B
  2028  0000AB                     	ds	2
  2029  0000AD                     ??_processATCommand:
  2030                           
  2031                           ; 1 bytes @ 0x4D
  2032  0000AD                     	ds	2
  2033  0000AF                     processATCommand@data_855:
  2034                           	opt callstack 0
  2035                           
  2036                           ; 1 bytes @ 0x4F
  2037  0000AF                     	ds	1
  2038  0000B0                     processATCommand@data:
  2039                           	opt callstack 0
  2040                           
  2041                           ; 1 bytes @ 0x50
  2042  0000B0                     	ds	1
  2043                           
  2044                           	psect	cstackCOMRAM
  2045  000001                     __pcstackCOMRAM:
  2046                           	opt callstack 0
  2047  000001                     ??_TMR0_ISR:
  2048  000001                     
  2049                           ; 1 bytes @ 0x0
  2050  000001                     	ds	1
  2051  000002                     ??_CRC_Initialize:
  2052  000002                     ??_nwkRouteNormalizeRanks:
  2053  000002                     ??_set_parity:
  2054  000002                     ??_set_uart_baud:
  2055  000002                     ??_SYS_EncryptConf:
  2056  000002                     ??_nwkTxConvertPhyStatus:
  2057  000002                     ?_strlen:
  2058                           	opt callstack 0
  2059  000002                     ?_NWK_RouteTable:
  2060                           	opt callstack 0
  2061  000002                     ?_get_timer0base:
  2062                           	opt callstack 0
  2063  000002                     ?_nwkFrameNext:
  2064                           	opt callstack 0
  2065  000002                     ?_NWK_RouteFindEntry:
  2066                           	opt callstack 0
  2067  000002                     ?_NWK_RouteNewEntry:
  2068                           	opt callstack 0
  2069  000002                     ?_isupper:
  2070                           	opt callstack 0
  2071  000002                     ?_isalpha:
  2072                           	opt callstack 0
  2073  000002                     ?_isdigit:
  2074                           	opt callstack 0
  2075  000002                     ?_isspace:
  2076                           	opt callstack 0
  2077  000002                     ?_strncmp:
  2078                           	opt callstack 0
  2079  000002                     ?_strchr:
  2080                           	opt callstack 0
  2081  000002                     ?_islower:
  2082                           	opt callstack 0
  2083  000002                     ?_CircularBufferSize:
  2084                           	opt callstack 0
  2085  000002                     ?_CRC_ReverseValue:
  2086                           	opt callstack 0
  2087  000002                     ?___wmul:
  2088                           	opt callstack 0
  2089  000002                     ?___lwdiv:
  2090                           	opt callstack 0
  2091  000002                     ?___lmul:
  2092                           	opt callstack 0
  2093  000002                     ?___llmod:
  2094                           	opt callstack 0
  2095  000002                     ?___xxtofl:
  2096                           	opt callstack 0
  2097  000002                     ?___omul:
  2098                           	opt callstack 0
  2099  000002                     ?___aodiv:
  2100                           	opt callstack 0
  2101  000002                     ?___aomod:
  2102                           	opt callstack 0
  2103  000002                     ?___lodiv:
  2104                           	opt callstack 0
  2105  000002                     ?___lomod:
  2106                           	opt callstack 0
  2107  000002                     get_free_tx_buffer@buf_id:
  2108                           	opt callstack 0
  2109  000002                     get_free_rx_buffer@buf_id:
  2110                           	opt callstack 0
  2111  000002                     get_timer0base@timer:
  2112                           	opt callstack 0
  2113  000002                     set_timer0base@timer:
  2114                           	opt callstack 0
  2115  000002                     SPI1_ExchangeByte@data:
  2116                           	opt callstack 0
  2117  000002                     INTERRUPT_Initialize@state:
  2118                           	opt callstack 0
  2119  000002                     UART1_Read@readValue:
  2120                           	opt callstack 0
  2121  000002                     UART1_Write@txData:
  2122                           	opt callstack 0
  2123  000002                     CRC_8BitDataWrite@data:
  2124                           	opt callstack 0
  2125  000002                     nwkFrameInit@i:
  2126                           	opt callstack 0
  2127  000002                     nwkGroupInit@i:
  2128                           	opt callstack 0
  2129  000002                     nwkRouteInit@i:
  2130                           	opt callstack 0
  2131  000002                     get_rssi@rssi_reg:
  2132                           	opt callstack 0
  2133  000002                     free_tx_buffer@req:
  2134                           	opt callstack 0
  2135  000002                     cmdSendSink@cmd:
  2136                           	opt callstack 0
  2137  000002                     cmdSetTTL@cmd:
  2138                           	opt callstack 0
  2139  000002                     CircularBufferSize@ctx:
  2140                           	opt callstack 0
  2141  000002                     CircularBufferEmpty@ctx:
  2142                           	opt callstack 0
  2143  000002                     TMR0_SetInterruptHandler@InterruptHandler:
  2144                           	opt callstack 0
  2145  000002                     DATAEE_WriteByte@bAdd:
  2146                           	opt callstack 0
  2147  000002                     DATAEE_ReadByte@bAdd:
  2148                           	opt callstack 0
  2149  000002                     UART1_SetFramingErrorHandler@interruptHandler:
  2150                           	opt callstack 0
  2151  000002                     UART1_SetOverrunErrorHandler@interruptHandler:
  2152                           	opt callstack 0
  2153  000002                     UART1_SetErrorHandler@interruptHandler:
  2154                           	opt callstack 0
  2155  000002                     UART1_SetRxInterruptHandler@InterruptHandler:
  2156                           	opt callstack 0
  2157  000002                     UART1_SetTxInterruptHandler@InterruptHandler:
  2158                           	opt callstack 0
  2159  000002                     CRC_ReverseValue@crc:
  2160                           	opt callstack 0
  2161  000002                     NWK_OpenEndpoint@handler:
  2162                           	opt callstack 0
  2163  000002                     NWK_DataReq@req:
  2164                           	opt callstack 0
  2165  000002                     nwkFrameFree@frame:
  2166                           	opt callstack 0
  2167  000002                     nwkFrameNext@frame:
  2168                           	opt callstack 0
  2169  000002                     nwkFrameCommandInit@frame:
  2170                           	opt callstack 0
  2171  000002                     nwkFramePayloadSize@frame:
  2172                           	opt callstack 0
  2173  000002                     NWK_GroupIsMember@group:
  2174                           	opt callstack 0
  2175  000002                     NWK_RouteFindEntry@dst:
  2176                           	opt callstack 0
  2177  000002                     NWK_RouteFreeEntry@entry:
  2178                           	opt callstack 0
  2179  000002                     nwkRxDecryptConf@frame:
  2180                           	opt callstack 0
  2181  000002                     nwkSecurityProcess@frame:
  2182                           	opt callstack 0
  2183  000002                     nwkTxConfirm@frame:
  2184                           	opt callstack 0
  2185  000002                     nwkTxEncryptConf@frame:
  2186                           	opt callstack 0
  2187  000002                     PHY_SetPanId@panId:
  2188                           	opt callstack 0
  2189  000002                     PHY_SetShortAddr@addr:
  2190                           	opt callstack 0
  2191  000002                     xtea@text:
  2192                           	opt callstack 0
  2193  000002                     SYS_TimerStarted@timer:
  2194                           	opt callstack 0
  2195  000002                     placeTimer@timer:
  2196                           	opt callstack 0
  2197  000002                     ___wmul@multiplier:
  2198                           	opt callstack 0
  2199  000002                     ___lwdiv@dividend:
  2200                           	opt callstack 0
  2201  000002                     isalpha@c:
  2202                           	opt callstack 0
  2203  000002                     isdigit@c:
  2204                           	opt callstack 0
  2205  000002                     isspace@c:
  2206                           	opt callstack 0
  2207  000002                     isupper@c:
  2208                           	opt callstack 0
  2209  000002                     memset@dest:
  2210                           	opt callstack 0
  2211  000002                     srand@s:
  2212                           	opt callstack 0
  2213  000002                     strlen@s:
  2214                           	opt callstack 0
  2215  000002                     islower@c:
  2216                           	opt callstack 0
  2217  000002                     strchr@s:
  2218                           	opt callstack 0
  2219  000002                     strncmp@_l:
  2220                           	opt callstack 0
  2221  000002                     DIA_ReadByte@flashAddr:
  2222                           	opt callstack 0
  2223  000002                     ___lmul@multiplier:
  2224                           	opt callstack 0
  2225  000002                     ___llmod@dividend:
  2226                           	opt callstack 0
  2227  000002                     ___xxtofl@val:
  2228                           	opt callstack 0
  2229  000002                     ___omul@multiplier:
  2230                           	opt callstack 0
  2231  000002                     ___aodiv@dividend:
  2232                           	opt callstack 0
  2233  000002                     ___aomod@dividend:
  2234                           	opt callstack 0
  2235  000002                     ___lodiv@dividend:
  2236                           	opt callstack 0
  2237  000002                     ___lomod@dividend:
  2238                           	opt callstack 0
  2239                           
  2240                           ; 8 bytes @ 0x1
  2241  000002                     	ds	1
  2242  000003                     ??_get_free_rx_buffer:
  2243  000003                     ??_get_free_tx_buffer:
  2244  000003                     putch@txData:
  2245                           	opt callstack 0
  2246  000003                     nwkRouteNormalizeRanks@i:
  2247                           	opt callstack 0
  2248  000003                     set_timer0base@tval:
  2249                           	opt callstack 0
  2250  000003                     SPI1_WriteBlock@block:
  2251                           	opt callstack 0
  2252  000003                     SPI1_ReadBlock@block:
  2253                           	opt callstack 0
  2254  000003                     CRC_Initialize@poly:
  2255                           	opt callstack 0
  2256  000003                     get_rssi@temp_rssi:
  2257                           	opt callstack 0
  2258                           
  2259                           ; 2 bytes @ 0x2
  2260  000003                     	ds	1
  2261  000004                     ??_free_tx_buffer:
  2262  000004                     ??_nwkFrameNext:
  2263  000004                     ??_srand:
  2264  000004                     ??_isupper:
  2265  000004                     ??_isalpha:
  2266  000004                     ??_isdigit:
  2267  000004                     ??_isspace:
  2268  000004                     ??_islower:
  2269  000004                     ??_CircularBufferSize:
  2270  000004                     ??_TMR0_Initialize:
  2271  000004                     ??_CRC_ReverseValue:
  2272  000004                     ??_nwkFramePayloadSize:
  2273  000004                     set_parity@parity:
  2274                           	opt callstack 0
  2275  000004                     set_uart_baud@i:
  2276                           	opt callstack 0
  2277  000004                     DATAEE_WriteByte@bData:
  2278                           	opt callstack 0
  2279  000004                     NWK_OpenEndpoint@id:
  2280                           	opt callstack 0
  2281  000004                     NWK_RouteFindEntry@multicast:
  2282                           	opt callstack 0
  2283  000004                     nwkRxDecryptConf@status:
  2284                           	opt callstack 0
  2285  000004                     nwkSecurityProcess@encrypt:
  2286                           	opt callstack 0
  2287  000004                     nwkTxConfirm@status:
  2288                           	opt callstack 0
  2289  000004                     nwkTxConvertPhyStatus@status:
  2290                           	opt callstack 0
  2291  000004                     get_timer0base@tval:
  2292                           	opt callstack 0
  2293  000004                     NWK_SetAddr@addr:
  2294                           	opt callstack 0
  2295  000004                     NWK_SetPanId@panId:
  2296                           	opt callstack 0
  2297  000004                     nwkDataReqTxConf@frame:
  2298                           	opt callstack 0
  2299  000004                     _SYS_EncryptConf$5182:
  2300                           	opt callstack 0
  2301  000004                     xtea@key:
  2302                           	opt callstack 0
  2303  000004                     SYS_TimerStarted@t:
  2304                           	opt callstack 0
  2305  000004                     ___wmul@multiplicand:
  2306                           	opt callstack 0
  2307  000004                     ___lwdiv@divisor:
  2308                           	opt callstack 0
  2309  000004                     memset@c:
  2310                           	opt callstack 0
  2311  000004                     fputc@c:
  2312                           	opt callstack 0
  2313  000004                     strlen@a:
  2314                           	opt callstack 0
  2315  000004                     strchr@c:
  2316                           	opt callstack 0
  2317  000004                     strncmp@_r:
  2318                           	opt callstack 0
  2319                           
  2320                           ; 2 bytes @ 0x3
  2321  000004                     	ds	1
  2322  000005                     DATAEE_WriteByte@GIEBitValue:
  2323                           	opt callstack 0
  2324  000005                     nwkRxInit@i:
  2325                           	opt callstack 0
  2326  000005                     PHY_DataConf@status:
  2327                           	opt callstack 0
  2328  000005                     SPI1_WriteBlock@blockSize:
  2329                           	opt callstack 0
  2330  000005                     SPI1_ReadBlock@blockSize:
  2331                           	opt callstack 0
  2332  000005                     CRC_Initialize@seed:
  2333                           	opt callstack 0
  2334  000005                     CRC_ReverseValue@reverse:
  2335                           	opt callstack 0
  2336                           
  2337                           ; 2 bytes @ 0x4
  2338  000005                     	ds	1
  2339  000006                     ??_strchr:
  2340  000006                     ??_nwkSecurityStart:
  2341  000006                     ??_xtea:
  2342  000006                     ??___xxtofl:
  2343  000006                     free_tx_buffer@buf_id:
  2344                           	opt callstack 0
  2345  000006                     loadMACAddr@i:
  2346                           	opt callstack 0
  2347  000006                     NWK_Init@i:
  2348                           	opt callstack 0
  2349  000006                     NWK_GroupIsMember@i:
  2350                           	opt callstack 0
  2351  000006                     NWK_RouteNewEntry@i:
  2352                           	opt callstack 0
  2353  000006                     DATAEE_ReadByte_Platform@addr:
  2354                           	opt callstack 0
  2355  000006                     DATAEE_WriteByte_Platform@addr:
  2356                           	opt callstack 0
  2357  000006                     SYS_EncryptConf@vector:
  2358                           	opt callstack 0
  2359  000006                     ___wmul@product:
  2360                           	opt callstack 0
  2361  000006                     ___lwdiv@quotient:
  2362                           	opt callstack 0
  2363  000006                     memset@n:
  2364                           	opt callstack 0
  2365  000006                     fputc@fp:
  2366                           	opt callstack 0
  2367  000006                     strncmp@n:
  2368                           	opt callstack 0
  2369  000006                     ___lmul@multiplicand:
  2370                           	opt callstack 0
  2371  000006                     ___llmod@divisor:
  2372                           	opt callstack 0
  2373                           
  2374                           ; 4 bytes @ 0x5
  2375  000006                     	ds	1
  2376  000007                     NWK_RouteFindEntry@i:
  2377                           	opt callstack 0
  2378  000007                     appDataConf@req:
  2379                           	opt callstack 0
  2380  000007                     SPI1_WriteBlock@data:
  2381                           	opt callstack 0
  2382  000007                     SPI1_ReadBlock@data:
  2383                           	opt callstack 0
  2384  000007                     CRC_ReverseValue@mask:
  2385                           	opt callstack 0
  2386  000007                     NWK_RouteNewEntry@iter:
  2387                           	opt callstack 0
  2388                           
  2389                           ; 2 bytes @ 0x6
  2390  000007                     	ds	1
  2391  000008                     ??_memset:
  2392  000008                     ??_fputc:
  2393  000008                     ??_strncmp:
  2394  000008                     ?_toupper:
  2395                           	opt callstack 0
  2396  000008                     ?_strspn:
  2397                           	opt callstack 0
  2398  000008                     ?_strcspn:
  2399                           	opt callstack 0
  2400  000008                     ?_NWK_RouteNextHop:
  2401                           	opt callstack 0
  2402  000008                     DATAEE_ReadByte_Platform@copy3:
  2403                           	opt callstack 0
  2404  000008                     DATAEE_WriteByte_Platform@data:
  2405                           	opt callstack 0
  2406  000008                     nwkTxAckReceived@ind:
  2407                           	opt callstack 0
  2408  000008                     ___lwdiv@counter:
  2409                           	opt callstack 0
  2410  000008                     _isspace$7525:
  2411                           	opt callstack 0
  2412  000008                     nwkDataReqTxConf@req:
  2413                           	opt callstack 0
  2414  000008                     NWK_RouteNextHop@dst:
  2415                           	opt callstack 0
  2416  000008                     nwkRouteRemove@dst:
  2417                           	opt callstack 0
  2418  000008                     nwkRouteFrameSent@frame:
  2419                           	opt callstack 0
  2420  000008                     SYS_EncryptConf@text:
  2421                           	opt callstack 0
  2422  000008                     memcpy@d1:
  2423                           	opt callstack 0
  2424  000008                     toupper@c:
  2425                           	opt callstack 0
  2426  000008                     strcspn@s:
  2427                           	opt callstack 0
  2428  000008                     strspn@s:
  2429                           	opt callstack 0
  2430  000008                     placeTimer@timeout:
  2431                           	opt callstack 0
  2432                           
  2433                           ; 4 bytes @ 0x7
  2434  000008                     	ds	1
  2435  000009                     ?_CRC_CalculatedResultGet:
  2436                           	opt callstack 0
  2437  000009                     ?_atoi:
  2438                           	opt callstack 0
  2439  000009                     DATAEE_ReadByte_Platform@copy2:
  2440                           	opt callstack 0
  2441  000009                     SX1276WriteBuffer@buffer:
  2442                           	opt callstack 0
  2443  000009                     CircularBufferInit@ctx:
  2444                           	opt callstack 0
  2445  000009                     CRC_CalculatedResultGet@xorValue:
  2446                           	opt callstack 0
  2447  000009                     nwkDataReqConfirm@req:
  2448                           	opt callstack 0
  2449  000009                     NWK_RouteNewEntry@entry:
  2450                           	opt callstack 0
  2451  000009                     SX1276ReadBuffer@buffer:
  2452                           	opt callstack 0
  2453  000009                     atoi@s:
  2454                           	opt callstack 0
  2455  000009                     strncmp@l:
  2456                           	opt callstack 0
  2457                           
  2458                           ; 2 bytes @ 0x8
  2459  000009                     	ds	1
  2460  00000A                     ??_toupper:
  2461  00000A                     ??_nwkRouteFrameSent:
  2462  00000A                     ?_CircularBufferSpace:
  2463                           	opt callstack 0
  2464  00000A                     DATAEE_ReadByte_Platform@copy1:
  2465                           	opt callstack 0
  2466  00000A                     NWK_RouteNextHop@multicast:
  2467                           	opt callstack 0
  2468  00000A                     nwkRouteRemove@multicast:
  2469                           	opt callstack 0
  2470  00000A                     SYS_EncryptConf@block:
  2471                           	opt callstack 0
  2472  00000A                     SX1276WriteBuffer@size:
  2473                           	opt callstack 0
  2474  00000A                     ___llmod@counter:
  2475                           	opt callstack 0
  2476  00000A                     ___xxtofl@sign:
  2477                           	opt callstack 0
  2478  00000A                     CircularBufferSpace@ctx:
  2479                           	opt callstack 0
  2480  00000A                     memcpy@s1:
  2481                           	opt callstack 0
  2482  00000A                     memset@k:
  2483                           	opt callstack 0
  2484  00000A                     strcspn@c:
  2485                           	opt callstack 0
  2486  00000A                     strspn@c:
  2487                           	opt callstack 0
  2488  00000A                     ___lmul@product:
  2489                           	opt callstack 0
  2490  00000A                     ___omul@multiplicand:
  2491                           	opt callstack 0
  2492  00000A                     ___aodiv@divisor:
  2493                           	opt callstack 0
  2494  00000A                     ___aomod@divisor:
  2495                           	opt callstack 0
  2496  00000A                     ___lodiv@divisor:
  2497                           	opt callstack 0
  2498  00000A                     ___lomod@divisor:
  2499                           	opt callstack 0
  2500                           
  2501                           ; 8 bytes @ 0x9
  2502  00000A                     	ds	1
  2503  00000B                     ??_CRC_CalculatedResultGet:
  2504  00000B                     ??_atoi:
  2505  00000B                     ??_nwkDataReqConfirm:
  2506  00000B                     SYS_EncryptConf@i:
  2507                           	opt callstack 0
  2508  00000B                     SX1276ReadBuffer@size:
  2509                           	opt callstack 0
  2510  00000B                     SX1276WriteBuffer@addr:
  2511                           	opt callstack 0
  2512  00000B                     ___xxtofl@exp:
  2513                           	opt callstack 0
  2514  00000B                     CircularBufferInit@buf:
  2515                           	opt callstack 0
  2516  00000B                     NWK_RouteNextHop@entry:
  2517                           	opt callstack 0
  2518  00000B                     nwkRouteRemove@entry:
  2519                           	opt callstack 0
  2520  00000B                     nwkRouteFrameReceived@frame:
  2521                           	opt callstack 0
  2522  00000B                     nwkTxAckReceived@command:
  2523                           	opt callstack 0
  2524  00000B                     strncmp@r:
  2525                           	opt callstack 0
  2526                           
  2527                           ; 2 bytes @ 0xA
  2528  00000B                     	ds	1
  2529  00000C                     ??_strspn:
  2530  00000C                     ??_strcspn:
  2531  00000C                     ??_CircularBufferSpace:
  2532  00000C                     SX1276ReadBuffer@addr:
  2533                           	opt callstack 0
  2534  00000C                     nwkRouteFrameSent@entry:
  2535                           	opt callstack 0
  2536  00000C                     placeTimer@prev:
  2537                           	opt callstack 0
  2538  00000C                     memcpy@n:
  2539                           	opt callstack 0
  2540  00000C                     memset@s:
  2541                           	opt callstack 0
  2542  00000C                     ___xxtofl@arg:
  2543                           	opt callstack 0
  2544                           
  2545                           ; 4 bytes @ 0xB
  2546  00000C                     	ds	1
  2547  00000D                     ??_nwkRouteFrameReceived:
  2548  00000D                     ?_strstr:
  2549                           	opt callstack 0
  2550  00000D                     nwkRouteErrorReceived@ind:
  2551                           	opt callstack 0
  2552  00000D                     SX1276Read@addr:
  2553                           	opt callstack 0
  2554  00000D                     CircularBufferInit@buf_size:
  2555                           	opt callstack 0
  2556  00000D                     nwkDataReqConfirm@prev:
  2557                           	opt callstack 0
  2558  00000D                     nwkRoutePrepareTx@frame:
  2559                           	opt callstack 0
  2560  00000D                     nwkSecurityStart@header:
  2561                           	opt callstack 0
  2562  00000D                     nwkTxAckReceived@frame:
  2563                           	opt callstack 0
  2564  00000D                     fputs@s:
  2565                           	opt callstack 0
  2566  00000D                     strstr@h:
  2567                           	opt callstack 0
  2568  00000D                     strcspn@i:
  2569                           	opt callstack 0
  2570  00000D                     strspn@i:
  2571                           	opt callstack 0
  2572                           
  2573                           ; 2 bytes @ 0xC
  2574  00000D                     	ds	1
  2575  00000E                     ?_nwkFrameAlloc:
  2576                           	opt callstack 0
  2577  00000E                     SX1276Read@data:
  2578                           	opt callstack 0
  2579  00000E                     memcpy@tmp:
  2580                           	opt callstack 0
  2581  00000E                     CRC_CalculatedResultGet@mask:
  2582                           	opt callstack 0
  2583  00000E                     placeTimer@t:
  2584                           	opt callstack 0
  2585  00000E                     _toupper$7663:
  2586                           	opt callstack 0
  2587                           
  2588                           ; 2 bytes @ 0xD
  2589  00000E                     	ds	1
  2590  00000F                     ?_strtok:
  2591                           	opt callstack 0
  2592  00000F                     ?_getSignalBandwidth:
  2593                           	opt callstack 0
  2594  00000F                     ?_getSpreadingFactor:
  2595                           	opt callstack 0
  2596  00000F                     SX1276Write@data:
  2597                           	opt callstack 0
  2598  00000F                     CircularBufferInit@element_size:
  2599                           	opt callstack 0
  2600  00000F                     nwkRouteErrorReceived@command:
  2601                           	opt callstack 0
  2602  00000F                     atoi@neg:
  2603                           	opt callstack 0
  2604  00000F                     memcpy@d:
  2605                           	opt callstack 0
  2606  00000F                     fputs@fp:
  2607                           	opt callstack 0
  2608  00000F                     strstr@n:
  2609                           	opt callstack 0
  2610  00000F                     strtok@s:
  2611                           	opt callstack 0
  2612                           
  2613                           ; 2 bytes @ 0xE
  2614  00000F                     	ds	1
  2615  000010                     ??_nwkFrameAlloc:
  2616  000010                     ?___flmul:
  2617                           	opt callstack 0
  2618  000010                     ?___strtoxl:
  2619                           	opt callstack 0
  2620  000010                     CRC_CalculatedResultGet@reverse:
  2621                           	opt callstack 0
  2622  000010                     SX1276Write@addr:
  2623                           	opt callstack 0
  2624  000010                     SYS_TimerStart@timer:
  2625                           	opt callstack 0
  2626  000010                     ___strtoxl@s:
  2627                           	opt callstack 0
  2628  000010                     ___flge@ff1:
  2629                           	opt callstack 0
  2630  000010                     ___flmul@b:
  2631                           	opt callstack 0
  2632                           
  2633                           ; 4 bytes @ 0xF
  2634  000010                     	ds	1
  2635  000011                     ??_CircularBufferInit:
  2636  000011                     ??_setCodingRate4:
  2637  000011                     ??_cad:
  2638  000011                     nwkRouteFrameReceived@discovery:
  2639                           	opt callstack 0
  2640  000011                     setTxPower@power:
  2641                           	opt callstack 0
  2642  000011                     setSyncWord@sw:
  2643                           	opt callstack 0
  2644  000011                     receive@size:
  2645                           	opt callstack 0
  2646  000011                     fputs@c:
  2647                           	opt callstack 0
  2648  000011                     CRC_CalculatedResultGet@result:
  2649                           	opt callstack 0
  2650  000011                     nwkRoutePrepareTx@header:
  2651                           	opt callstack 0
  2652  000011                     setPreambleLength@length:
  2653                           	opt callstack 0
  2654  000011                     PHY_DataReq@data:
  2655                           	opt callstack 0
  2656  000011                     _atoi$7498:
  2657                           	opt callstack 0
  2658  000011                     memcpy@s:
  2659                           	opt callstack 0
  2660  000011                     strstr@nl:
  2661                           	opt callstack 0
  2662  000011                     strtok@sep:
  2663                           	opt callstack 0
  2664                           
  2665                           ; 2 bytes @ 0x10
  2666  000011                     	ds	1
  2667  000012                     nwkFrameAlloc@i:
  2668                           	opt callstack 0
  2669  000012                     _nwkRouteFrameReceived$3893:
  2670                           	opt callstack 0
  2671  000012                     setCodingRate4@cr:
  2672                           	opt callstack 0
  2673  000012                     ___aodiv@counter:
  2674                           	opt callstack 0
  2675  000012                     ___aomod@counter:
  2676                           	opt callstack 0
  2677  000012                     ___lomod@counter:
  2678                           	opt callstack 0
  2679  000012                     nwkRxDuplicateRejectionTimerHandler@timer:
  2680                           	opt callstack 0
  2681  000012                     nwkRxRejectDuplicate@header:
  2682                           	opt callstack 0
  2683  000012                     nwkTxAckWaitTimerHandler@timer:
  2684                           	opt callstack 0
  2685  000012                     nwkTxDelayTimerHandler@timer:
  2686                           	opt callstack 0
  2687  000012                     cad@RSSI:
  2688                           	opt callstack 0
  2689  000012                     fputs@i:
  2690                           	opt callstack 0
  2691  000012                     ___strtoxl@endptr:
  2692                           	opt callstack 0
  2693  000012                     ___omul@product:
  2694                           	opt callstack 0
  2695  000012                     ___lodiv@quotient:
  2696                           	opt callstack 0
  2697                           
  2698                           ; 8 bytes @ 0x11
  2699  000012                     	ds	1
  2700  000013                     ??_getSignalBandwidth:
  2701  000013                     ??_getSpreadingFactor:
  2702  000013                     ??_nwkSecurityProcessMic:
  2703  000013                     ?_crc16_app:
  2704                           	opt callstack 0
  2705  000013                     PHY_DataInd@ind:
  2706                           	opt callstack 0
  2707  000013                     setCodingRate4@denominator:
  2708                           	opt callstack 0
  2709  000013                     PHY_DataReq@size:
  2710                           	opt callstack 0
  2711  000013                     ___aodiv@sign:
  2712                           	opt callstack 0
  2713  000013                     ___aomod@sign:
  2714                           	opt callstack 0
  2715  000013                     CircularBufferPushBack@ctx:
  2716                           	opt callstack 0
  2717  000013                     CircularBufferPopFront@ctx:
  2718                           	opt callstack 0
  2719  000013                     crc16_app@dptr:
  2720                           	opt callstack 0
  2721  000013                     nwkRouteFrameReceived@entry:
  2722                           	opt callstack 0
  2723  000013                     NWK_SetSecurityKey@key:
  2724                           	opt callstack 0
  2725  000013                     _atoi$7500:
  2726                           	opt callstack 0
  2727                           
  2728                           ; 2 bytes @ 0x12
  2729  000013                     	ds	1
  2730  000014                     ??_nwkTxTaskHandler:
  2731  000014                     ??_PHY_DataInd:
  2732  000014                     ??_nwkRxRejectDuplicate:
  2733  000014                     ?_abs:
  2734                           	opt callstack 0
  2735  000014                     ?_pad:
  2736                           	opt callstack 0
  2737  000014                     nwkRxDuplicateRejectionTimerHandler@restart:
  2738                           	opt callstack 0
  2739  000014                     cad@temp:
  2740                           	opt callstack 0
  2741  000014                     pad@fp:
  2742                           	opt callstack 0
  2743  000014                     abs@a:
  2744                           	opt callstack 0
  2745  000014                     ___strtoxl@base:
  2746                           	opt callstack 0
  2747  000014                     ___flge@ff2:
  2748                           	opt callstack 0
  2749  000014                     ___flmul@a:
  2750                           	opt callstack 0
  2751  000014                     ___aodiv@quotient:
  2752                           	opt callstack 0
  2753                           
  2754                           ; 8 bytes @ 0x13
  2755  000014                     	ds	1
  2756  000015                     CircularBufferPushBack@val:
  2757                           	opt callstack 0
  2758  000015                     CircularBufferPopFront@val:
  2759                           	opt callstack 0
  2760  000015                     nwkRxDuplicateRejectionTimerHandler@i:
  2761                           	opt callstack 0
  2762  000015                     getSignalBandwidth@bw:
  2763                           	opt callstack 0
  2764  000015                     _atoi$7499:
  2765                           	opt callstack 0
  2766  000015                     CircularBufferInit@size:
  2767                           	opt callstack 0
  2768  000015                     crc16_app@len:
  2769                           	opt callstack 0
  2770  000015                     nwkRouteFrameReceived@header:
  2771                           	opt callstack 0
  2772                           
  2773                           ; 2 bytes @ 0x14
  2774  000015                     	ds	1
  2775  000016                     ??_CircularBufferPushBack:
  2776  000016                     ??_CircularBufferPopFront:
  2777  000016                     ??_abs:
  2778  000016                     ?___lldiv:
  2779                           	opt callstack 0
  2780  000016                     nwkTxAckWaitTimerHandler@restart:
  2781                           	opt callstack 0
  2782  000016                     nwkTxDelayTimerHandler@restart:
  2783                           	opt callstack 0
  2784  000016                     ___strtoxl@is_signed:
  2785                           	opt callstack 0
  2786  000016                     nwkTxTaskHandler@frame:
  2787                           	opt callstack 0
  2788  000016                     pad@buf:
  2789                           	opt callstack 0
  2790  000016                     atoi@n:
  2791                           	opt callstack 0
  2792  000016                     ___lldiv@dividend:
  2793                           	opt callstack 0
  2794                           
  2795                           ; 4 bytes @ 0x15
  2796  000016                     	ds	1
  2797  000017                     ??___strtoxl:
  2798  000017                     crc16_app@seed:
  2799                           	opt callstack 0
  2800  000017                     PHY_DataInd@frame:
  2801                           	opt callstack 0
  2802  000017                     nwkTxAckWaitTimerHandler@frame:
  2803                           	opt callstack 0
  2804  000017                     nwkTxDelayTimerHandler@frame:
  2805                           	opt callstack 0
  2806                           
  2807                           ; 2 bytes @ 0x16
  2808  000017                     	ds	1
  2809  000018                     ??___flmul:
  2810  000018                     ??___flge:
  2811  000018                     nwkRxRejectDuplicate@shift:
  2812                           	opt callstack 0
  2813  000018                     pad@p:
  2814                           	opt callstack 0
  2815                           
  2816                           ; 2 bytes @ 0x17
  2817  000018                     	ds	1
  2818  000019                     ??_SYS_TimerTaskHandler:
  2819  000019                     nwkRxRejectDuplicate@i:
  2820                           	opt callstack 0
  2821  000019                     crc16_app@result:
  2822                           	opt callstack 0
  2823                           
  2824                           ; 2 bytes @ 0x18
  2825  000019                     	ds	1
  2826  00001A                     ??_pad:
  2827  00001A                     ?_rand:
  2828                           	opt callstack 0
  2829  00001A                     nwkRxRejectDuplicate@diff:
  2830                           	opt callstack 0
  2831  00001A                     ___lodiv@counter:
  2832                           	opt callstack 0
  2833  00001A                     CircularBufferPushBack@write_pos:
  2834                           	opt callstack 0
  2835  00001A                     ___lldiv@divisor:
  2836                           	opt callstack 0
  2837                           
  2838                           ; 4 bytes @ 0x19
  2839  00001A                     	ds	1
  2840  00001B                     crc16_app@ptr:
  2841                           	opt callstack 0
  2842  00001B                     nwkRxRejectDuplicate@freeEntry:
  2843                           	opt callstack 0
  2844  00001B                     nwkSecurityProcessMic@mic:
  2845                           	opt callstack 0
  2846  00001B                     pad@i:
  2847                           	opt callstack 0
  2848  00001B                     ___strtoxl@prev_a:
  2849                           	opt callstack 0
  2850                           
  2851                           ; 4 bytes @ 0x1A
  2852  00001B                     	ds	1
  2853  00001C                     ??_rand:
  2854  00001C                     appDataInd@ind:
  2855                           	opt callstack 0
  2856  00001C                     nwkRxServiceDataInd@ind:
  2857                           	opt callstack 0
  2858  00001C                     ___flmul@sign:
  2859                           	opt callstack 0
  2860  00001C                     queueLedEvent@duration:
  2861                           	opt callstack 0
  2862                           
  2863                           ; 2 bytes @ 0x1B
  2864  00001C                     	ds	1
  2865  00001D                     ??_nwkRxServiceDataInd:
  2866  00001D                     ??_appDataInd:
  2867  00001D                     SYS_TimerTaskHandler@cnt:
  2868                           	opt callstack 0
  2869  00001D                     ___flmul@aexp:
  2870                           	opt callstack 0
  2871  00001D                     crc16_app@i:
  2872                           	opt callstack 0
  2873  00001D                     nwkRxRejectDuplicate@entry:
  2874                           	opt callstack 0
  2875  00001D                     pad@w:
  2876                           	opt callstack 0
  2877  00001D                     nwkSecurityProcessMic@vmic:
  2878                           	opt callstack 0
  2879                           
  2880                           ; 4 bytes @ 0x1C
  2881  00001D                     	ds	1
  2882  00001E                     queueLedEvent@LEDState:
  2883                           	opt callstack 0
  2884  00001E                     appDataInd@dataptr:
  2885                           	opt callstack 0
  2886  00001E                     SYS_TimerTaskHandler@elapsed:
  2887                           	opt callstack 0
  2888  00001E                     ___lldiv@quotient:
  2889                           	opt callstack 0
  2890  00001E                     ___flmul@grs:
  2891                           	opt callstack 0
  2892                           
  2893                           ; 4 bytes @ 0x1D
  2894  00001E                     	ds	1
  2895  00001F                     ?_dtoa:
  2896                           	opt callstack 0
  2897  00001F                     ?_utoa:
  2898                           	opt callstack 0
  2899  00001F                     ?_xtoa:
  2900                           	opt callstack 0
  2901  00001F                     dtoa@fp:
  2902                           	opt callstack 0
  2903  00001F                     utoa@fp:
  2904                           	opt callstack 0
  2905  00001F                     xtoa@fp:
  2906                           	opt callstack 0
  2907  00001F                     ___strtoxl$7685:
  2908                           	opt callstack 0
  2909  00001F                     queueLedEvent@temp:
  2910                           	opt callstack 0
  2911                           
  2912                           ; 3 bytes @ 0x1E
  2913  00001F                     	ds	1
  2914  000020                     appDataInd@buf_id:
  2915                           	opt callstack 0
  2916                           
  2917                           ; 1 bytes @ 0x1F
  2918  000020                     	ds	1
  2919  000021                     nwkRxIndicateFrame@frame:
  2920                           	opt callstack 0
  2921  000021                     ___strtoxl$7687:
  2922                           	opt callstack 0
  2923  000021                     nwkSecurityProcessMic@tmic:
  2924                           	opt callstack 0
  2925  000021                     dtoa@d:
  2926                           	opt callstack 0
  2927  000021                     utoa@d:
  2928                           	opt callstack 0
  2929  000021                     xtoa@d:
  2930                           	opt callstack 0
  2931                           
  2932                           ; 8 bytes @ 0x20
  2933  000021                     	ds	1
  2934  000022                     queue_serial_led_event@i:
  2935                           	opt callstack 0
  2936  000022                     ___lldiv@counter:
  2937                           	opt callstack 0
  2938  000022                     ___flmul@bexp:
  2939                           	opt callstack 0
  2940  000022                     SYS_TimerTaskHandler@timer:
  2941                           	opt callstack 0
  2942                           
  2943                           ; 2 bytes @ 0x21
  2944  000022                     	ds	1
  2945  000023                     ??_nwkRxIndicateFrame:
  2946  000023                     ??_setSpreadingFactor:
  2947  000023                     ___strtoxl$7688:
  2948                           	opt callstack 0
  2949  000023                     setFrequency@frequency:
  2950                           	opt callstack 0
  2951  000023                     setSignalBandwidth@sbw:
  2952                           	opt callstack 0
  2953  000023                     computeFRF@frequency:
  2954                           	opt callstack 0
  2955  000023                     ___flmul@prod:
  2956                           	opt callstack 0
  2957                           
  2958                           ; 4 bytes @ 0x22
  2959  000023                     	ds	1
  2960  000024                     nwkTxFrame@frame:
  2961                           	opt callstack 0
  2962  000024                     nwkTxBroadcastFrame@frame:
  2963                           	opt callstack 0
  2964                           
  2965                           ; 2 bytes @ 0x23
  2966  000024                     	ds	1
  2967  000025                     ___strtoxl$7686:
  2968                           	opt callstack 0
  2969  000025                     xtea@delta:
  2970                           	opt callstack 0
  2971                           
  2972                           ; 4 bytes @ 0x24
  2973  000025                     	ds	1
  2974  000026                     ??_nwkTxBroadcastFrame:
  2975  000026                     ___strtoxl@conv_done:
  2976                           	opt callstack 0
  2977                           
  2978                           ; 1 bytes @ 0x25
  2979  000026                     	ds	1
  2980  000027                     ??_setSignalBandwidth:
  2981  000027                     _nwkRxIndicateFrame$4855:
  2982                           	opt callstack 0
  2983  000027                     nwkTxBroadcastFrame@newFrame:
  2984                           	opt callstack 0
  2985  000027                     ___flmul@temp:
  2986                           	opt callstack 0
  2987  000027                     setFrequency@num_mod:
  2988                           	opt callstack 0
  2989  000027                     computeFRF@num_mod:
  2990                           	opt callstack 0
  2991  000027                     ___strtoxl@limit:
  2992                           	opt callstack 0
  2993  000027                     _setSpreadingFactor$8391:
  2994                           	opt callstack 0
  2995                           
  2996                           ; 4 bytes @ 0x26
  2997  000027                     	ds	1
  2998  000028                     _nwkRxIndicateFrame$4856:
  2999                           	opt callstack 0
  3000  000028                     nwkTxFrame@header:
  3001                           	opt callstack 0
  3002                           
  3003                           ; 2 bytes @ 0x27
  3004  000028                     	ds	1
  3005  000029                     ??_dtoa:
  3006  000029                     ??_utoa:
  3007  000029                     ?___fladd:
  3008                           	opt callstack 0
  3009  000029                     _nwkRxIndicateFrame$4857:
  3010                           	opt callstack 0
  3011  000029                     xtea@i:
  3012                           	opt callstack 0
  3013  000029                     xtoa@x:
  3014                           	opt callstack 0
  3015  000029                     nwkRxHandleReceivedFrame@frame:
  3016                           	opt callstack 0
  3017  000029                     ___fladd@b:
  3018                           	opt callstack 0
  3019                           
  3020                           ; 4 bytes @ 0x28
  3021  000029                     	ds	1
  3022  00002A                     ??_xtoa:
  3023  00002A                     _nwkRxIndicateFrame$4858:
  3024                           	opt callstack 0
  3025  00002A                     nwkDataReqSendFrame@req:
  3026                           	opt callstack 0
  3027  00002A                     nwkRouteSendRouteError@src:
  3028                           	opt callstack 0
  3029  00002A                     nwkRxSendAck@frame:
  3030                           	opt callstack 0
  3031  00002A                     xtea@t0:
  3032                           	opt callstack 0
  3033                           
  3034                           ; 4 bytes @ 0x29
  3035  00002A                     	ds	1
  3036  00002B                     ??_nwkRxHandleReceivedFrame:
  3037  00002B                     _nwkRxIndicateFrame$4859:
  3038                           	opt callstack 0
  3039  00002B                     setSpreadingFactor@sf:
  3040                           	opt callstack 0
  3041  00002B                     ___strtoxl@sign:
  3042                           	opt callstack 0
  3043  00002B                     setFrequency@num:
  3044                           	opt callstack 0
  3045  00002B                     computeFRF@num:
  3046                           	opt callstack 0
  3047  00002B                     _setSignalBandwidth$8392:
  3048                           	opt callstack 0
  3049                           
  3050                           ; 4 bytes @ 0x2A
  3051  00002B                     	ds	1
  3052  00002C                     ??_nwkDataReqSendFrame:
  3053  00002C                     _nwkRxIndicateFrame$4860:
  3054                           	opt callstack 0
  3055  00002C                     ___strtoxl@skip:
  3056                           	opt callstack 0
  3057  00002C                     nwkRouteSendRouteError@dst:
  3058                           	opt callstack 0
  3059  00002C                     nwkRxSendAck@command:
  3060                           	opt callstack 0
  3061                           
  3062                           ; 2 bytes @ 0x2B
  3063  00002C                     	ds	1
  3064  00002D                     nwkRxHandleReceivedFrame@broadcast:
  3065                           	opt callstack 0
  3066  00002D                     nwkDataReqSendFrame@mcHeader:
  3067                           	opt callstack 0
  3068  00002D                     nwkRxIndicateFrame@header:
  3069                           	opt callstack 0
  3070  00002D                     ___fladd@a:
  3071                           	opt callstack 0
  3072  00002D                     ___strtoxl@a:
  3073                           	opt callstack 0
  3074                           
  3075                           ; 4 bytes @ 0x2C
  3076  00002D                     	ds	1
  3077  00002E                     nwkRouteSendRouteError@multicast:
  3078                           	opt callstack 0
  3079  00002E                     nwkRxHandleReceivedFrame@member:
  3080                           	opt callstack 0
  3081  00002E                     nwkRxSendAck@ack:
  3082                           	opt callstack 0
  3083  00002E                     xtea@t1:
  3084                           	opt callstack 0
  3085                           
  3086                           ; 4 bytes @ 0x2D
  3087  00002E                     	ds	1
  3088  00002F                     computeFRF@i:
  3089                           	opt callstack 0
  3090  00002F                     PHY_SetChannel@channel:
  3091                           	opt callstack 0
  3092  00002F                     nwkDataReqSendFrame@frame:
  3093                           	opt callstack 0
  3094  00002F                     nwkRouteSendRouteError@command:
  3095                           	opt callstack 0
  3096  00002F                     nwkRxHandleReceivedFrame@mcHeader:
  3097                           	opt callstack 0
  3098  00002F                     setSignalBandwidth@bw:
  3099                           	opt callstack 0
  3100  00002F                     nwkRxIndicateFrame@ind:
  3101                           	opt callstack 0
  3102                           
  3103                           ; 12 bytes @ 0x2E
  3104  00002F                     	ds	1
  3105  000030                     ??_bootLoadApplication:
  3106                           
  3107                           ; 1 bytes @ 0x2F
  3108  000030                     	ds	1
  3109  000031                     ??_nwkDataReqTaskHandler:
  3110  000031                     ??___fladd:
  3111  000031                     nwkRouteSendRouteError@frame:
  3112                           	opt callstack 0
  3113  000031                     nwkRxHandleReceivedFrame@header:
  3114                           	opt callstack 0
  3115  000031                     _dtoa$7006:
  3116                           	opt callstack 0
  3117  000031                     utoa@p:
  3118                           	opt callstack 0
  3119  000031                     ___strtoxl@cp:
  3120                           	opt callstack 0
  3121                           
  3122                           ; 2 bytes @ 0x30
  3123  000031                     	ds	1
  3124  000032                     bootLoadApplication@buf_id:
  3125                           	opt callstack 0
  3126  000032                     _xtoa$7024:
  3127                           	opt callstack 0
  3128  000032                     xtea@sum:
  3129                           	opt callstack 0
  3130                           
  3131                           ; 4 bytes @ 0x31
  3132  000032                     	ds	1
  3133  000033                     ??_initRadio:
  3134  000033                     bootLoadApplication@buf_id_879:
  3135                           	opt callstack 0
  3136  000033                     ___strtoxl@c:
  3137                           	opt callstack 0
  3138  000033                     nwkDataReqTaskHandler@req:
  3139                           	opt callstack 0
  3140  000033                     nwkRouteFrame@frame:
  3141                           	opt callstack 0
  3142  000033                     dtoa@p:
  3143                           	opt callstack 0
  3144  000033                     utoa@w:
  3145                           	opt callstack 0
  3146                           
  3147                           ; 2 bytes @ 0x32
  3148  000033                     	ds	1
  3149  000034                     ?_strtoul:
  3150                           	opt callstack 0
  3151  000034                     ?_strtol:
  3152                           	opt callstack 0
  3153  000034                     strtol@s:
  3154                           	opt callstack 0
  3155  000034                     bootLoadApplication@temp:
  3156                           	opt callstack 0
  3157  000034                     _xtoa$7025:
  3158                           	opt callstack 0
  3159  000034                     strtoul@s:
  3160                           	opt callstack 0
  3161                           
  3162                           ; 2 bytes @ 0x33
  3163  000034                     	ds	1
  3164  000035                     ___fladd@signs:
  3165                           	opt callstack 0
  3166  000035                     strtol@endptr:
  3167                           	opt callstack 0
  3168  000035                     nwkRouteFrame@header:
  3169                           	opt callstack 0
  3170  000035                     dtoa@w:
  3171                           	opt callstack 0
  3172  000035                     utoa@n:
  3173                           	opt callstack 0
  3174                           
  3175                           ; 8 bytes @ 0x34
  3176  000035                     	ds	1
  3177  000036                     bootLoadApplication@i:
  3178                           	opt callstack 0
  3179  000036                     ___fladd@aexp:
  3180                           	opt callstack 0
  3181  000036                     SYS_EncryptReq@text:
  3182                           	opt callstack 0
  3183  000036                     xtoa@p:
  3184                           	opt callstack 0
  3185  000036                     strtol@base:
  3186                           	opt callstack 0
  3187  000036                     strtoul@endptr:
  3188                           	opt callstack 0
  3189                           
  3190                           ; 2 bytes @ 0x35
  3191  000036                     	ds	1
  3192  000037                     initRadio@version:
  3193                           	opt callstack 0
  3194  000037                     ___fladd@bexp:
  3195                           	opt callstack 0
  3196  000037                     dtoa@s:
  3197                           	opt callstack 0
  3198                           
  3199                           ; 2 bytes @ 0x36
  3200  000037                     	ds	1
  3201  000038                     ___fladd@grs:
  3202                           	opt callstack 0
  3203  000038                     initRadio@wideRSSI:
  3204                           	opt callstack 0
  3205  000038                     SYS_EncryptReq@key:
  3206                           	opt callstack 0
  3207  000038                     xtoa@w:
  3208                           	opt callstack 0
  3209  000038                     strtoul@base:
  3210                           	opt callstack 0
  3211                           
  3212                           ; 2 bytes @ 0x37
  3213  000038                     	ds	1
  3214  000039                     ?___fltol:
  3215                           	opt callstack 0
  3216  000039                     ___fltol@f1:
  3217                           	opt callstack 0
  3218  000039                     dtoa@n:
  3219                           	opt callstack 0
  3220                           
  3221                           ; 8 bytes @ 0x38
  3222  000039                     	ds	1
  3223  00003A                     ??_SYS_EncryptReq:
  3224  00003A                     cmdSetBaud@atCommand:
  3225                           	opt callstack 0
  3226  00003A                     xtoa@n:
  3227                           	opt callstack 0
  3228                           
  3229                           ; 8 bytes @ 0x39
  3230  00003A                     	ds	1
  3231  00003B                     nwkRxHandleIndication@frame:
  3232                           	opt callstack 0
  3233                           
  3234                           ; 2 bytes @ 0x3A
  3235  00003B                     	ds	1
  3236  00003C                     cmdSetBaud@tempbaud:
  3237                           	opt callstack 0
  3238  00003C                     nwkSecurityTaskHandler@micStatus:
  3239                           	opt callstack 0
  3240                           
  3241                           ; 1 bytes @ 0x3B
  3242  00003C                     	ds	1
  3243  00003D                     ??___fltol:
  3244  00003D                     cmdSetBaud@ptr:
  3245                           	opt callstack 0
  3246  00003D                     nwkSecurityTaskHandler@frame:
  3247                           	opt callstack 0
  3248  00003D                     utoa@i:
  3249                           	opt callstack 0
  3250                           
  3251                           ; 2 bytes @ 0x3C
  3252  00003D                     	ds	2
  3253  00003F                     nwkRxHandleIndication@ack:
  3254                           	opt callstack 0
  3255                           
  3256                           ; 1 bytes @ 0x3E
  3257  00003F                     	ds	1
  3258  000040                     ??_nwkRxTaskHandler:
  3259                           
  3260                           ; 1 bytes @ 0x3F
  3261  000040                     	ds	1
  3262  000041                     ___fltol@sign1:
  3263                           	opt callstack 0
  3264  000041                     dtoa@i:
  3265                           	opt callstack 0
  3266                           
  3267                           ; 2 bytes @ 0x40
  3268  000041                     	ds	1
  3269  000042                     ___fltol@exp1:
  3270                           	opt callstack 0
  3271  000042                     nwkRxTaskHandler@frame:
  3272                           	opt callstack 0
  3273  000042                     xtoa@i:
  3274                           	opt callstack 0
  3275                           
  3276                           ; 2 bytes @ 0x41
  3277  000042                     	ds	1
  3278  000043                     get_lqi@rssi:
  3279                           	opt callstack 0
  3280                           
  3281                           ; 1 bytes @ 0x42
  3282  000043                     	ds	1
  3283  000044                     DIO0_Receive_ISR@packetLength:
  3284                           	opt callstack 0
  3285  000044                     xtoa@c:
  3286                           	opt callstack 0
  3287                           
  3288                           ; 2 bytes @ 0x43
  3289  000044                     	ds	1
  3290  000045                     DIO0_Receive_ISR@irqFlags:
  3291                           	opt callstack 0
  3292                           
  3293                           ; 1 bytes @ 0x44
  3294  000045                     	ds	1
  3295  000046                     ?_vfpfcnvrt:
  3296                           	opt callstack 0
  3297  000046                     vfpfcnvrt@fp:
  3298                           	opt callstack 0
  3299  000046                     DIO0_Receive_ISR@ind:
  3300                           	opt callstack 0
  3301                           
  3302                           ; 5 bytes @ 0x45
  3303  000046                     	ds	2
  3304  000048                     vfpfcnvrt@fmt:
  3305                           	opt callstack 0
  3306                           
  3307                           ; 1 bytes @ 0x47
  3308  000048                     	ds	1
  3309  000049                     vfpfcnvrt@ap:
  3310                           	opt callstack 0
  3311                           
  3312                           ; 1 bytes @ 0x48
  3313  000049                     	ds	1
  3314  00004A                     ??_vfpfcnvrt:
  3315                           
  3316                           ; 1 bytes @ 0x49
  3317  00004A                     	ds	1
  3318  00004B                     ??_radio_engine:
  3319                           
  3320                           ; 1 bytes @ 0x4A
  3321  00004B                     	ds	2
  3322  00004D                     
  3323                           ; 1 bytes @ 0x4C
  3324  00004D                     	ds	1
  3325  00004E                     ?_vfprintf:
  3326                           	opt callstack 0
  3327  00004E                     vfprintf@fp:
  3328                           	opt callstack 0
  3329                           
  3330                           ; 2 bytes @ 0x4D
  3331  00004E                     	ds	2
  3332  000050                     vfprintf@fmt:
  3333                           	opt callstack 0
  3334                           
  3335                           ; 2 bytes @ 0x4F
  3336  000050                     	ds	2
  3337  000052                     vfprintf@ap:
  3338                           	opt callstack 0
  3339                           
  3340                           ; 1 bytes @ 0x51
  3341  000052                     	ds	1
  3342  000053                     vfprintf@cfmt:
  3343                           	opt callstack 0
  3344                           
  3345                           ; 2 bytes @ 0x52
  3346  000053                     	ds	2
  3347  000055                     
  3348                           ; 1 bytes @ 0x54
  3349  000055                     	ds	2
  3350  000057                     printf@ap:
  3351                           	opt callstack 0
  3352                           
  3353                           ; 1 bytes @ 0x56
  3354  000057                     	ds	1
  3355  000058                     ??_cmdRecv:
  3356  000058                     ??_cmdMac:
  3357  000058                     ??_cmdBootLoad:
  3358  000058                     cmdSend@cmd:
  3359                           	opt callstack 0
  3360  000058                     cmdBcast@cmd:
  3361                           	opt callstack 0
  3362  000058                     cmdSetAddr@cmd:
  3363                           	opt callstack 0
  3364  000058                     cmdSetNaddr@cmd:
  3365                           	opt callstack 0
  3366  000058                     cmdSetAES@cmd:
  3367                           	opt callstack 0
  3368  000058                     cmdSetRFCH@cmd:
  3369                           	opt callstack 0
  3370  000058                     cmdSetTX@cmd:
  3371                           	opt callstack 0
  3372  000058                     cmdSetCADRSSI@atCommand:
  3373                           	opt callstack 0
  3374  000058                     cmdSetParity@atCommand:
  3375                           	opt callstack 0
  3376  000058                     cmdSetSF@atCommand:
  3377                           	opt callstack 0
  3378  000058                     cmdGetRxCnt@atCommand:
  3379                           	opt callstack 0
  3380  000058                     print_hop_table@atCommand:
  3381                           	opt callstack 0
  3382  000058                     set_hop_table_ttl@cmd:
  3383                           	opt callstack 0
  3384                           
  3385                           ; 2 bytes @ 0x57
  3386  000058                     	ds	1
  3387  000059                     cmdMac@i:
  3388                           	opt callstack 0
  3389                           
  3390                           ; 1 bytes @ 0x58
  3391  000059                     	ds	1
  3392  00005A                     ??_cmdSend:
  3393  00005A                     ??_cmdBcast:
  3394  00005A                     ??_cmdSetAES:
  3395  00005A                     ??_cmdGetRxCnt:
  3396  00005A                     cmdRecv@i:
  3397                           	opt callstack 0
  3398  00005A                     print_hop_table@entry:
  3399                           	opt callstack 0
  3400                           
  3401                           ; 2 bytes @ 0x59
  3402  00005A                     	ds	1
  3403  00005B                     cmdRecv@buf_id:
  3404                           	opt callstack 0
  3405  00005B                     cmdGetRxCnt@count:
  3406                           	opt callstack 0
  3407                           
  3408                           ; 1 bytes @ 0x5A
  3409  00005B                     	ds	1
  3410  00005C                     cmdGetRxCnt@buf_id:
  3411                           	opt callstack 0
  3412  00005C                     print_hop_table@i:
  3413                           	opt callstack 0
  3414                           
  3415                           ; 1 bytes @ 0x5B
  3416  00005C                     	ds	2
  3417  00005E                     
  3418                           ; 1 bytes @ 0x5D
  3419 ;;
  3420 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3421 ;;
  3422 ;; *************** function _main *****************
  3423 ;; Defined at:
  3424 ;;		line 51 in file "main.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;		None
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;		None
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      void 
  3431 ;; Registers used:
  3432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 6/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3442 ;;Total ram usage:        0 bytes
  3443 ;; Hardware stack levels required when called:   20
  3444 ;; This function calls:
  3445 ;;		_SYSTEM_Initialize
  3446 ;;		_SYS_Init
  3447 ;;		_SYS_TaskHandler
  3448 ;;		_TMR0_SetInterruptHandler
  3449 ;;		_bootLoadApplication
  3450 ;;		_processATCommand
  3451 ;; This function is called by:
  3452 ;;		Startup code after reset
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text0
  3457  009390                     __ptext0:
  3458                           	opt callstack 0
  3459  009390                     _main:
  3460                           	opt callstack 11
  3461                           
  3462                           ;main.c: 54:     SYSTEM_Initialize();
  3463                           
  3464                           ;incstack = 0
  3465  009390  ECB5  F04A         	call	_SYSTEM_Initialize	;wreg free
  3466                           
  3467                           ; BSR set to: 61
  3468                           ;main.c: 61:     (INTCON0bits.GIEH = 1);
  3469  009394  8ED2               	bsf	210,7,c	;volatile
  3470                           
  3471                           ; BSR set to: 61
  3472                           ;main.c: 64:     (INTCON0bits.GIEL = 1);
  3473  009396  8CD2               	bsf	210,6,c	;volatile
  3474                           
  3475                           ;main.c: 71:     TMR0_SetInterruptHandler(Timer0Handler);
  3476  009398  0EBC               	movlw	low _Timer0Handler
  3477  00939A  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3478  00939C  0E88               	movlw	high _Timer0Handler
  3479  00939E  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3480  0093A0  ECD6  F04C         	call	_TMR0_SetInterruptHandler	;wreg free
  3481                           
  3482                           ;main.c: 73:     SYS_Init();
  3483  0093A4  ECAC  F04C         	call	_SYS_Init	;wreg free
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;main.c: 74:     bootLoadApplication();
  3487  0093A8  ECC0  F011         	call	_bootLoadApplication	;wreg free
  3488                           
  3489                           ; BSR set to: 61
  3490  0093AC  86BA               	bsf	186,3,c	;volatile
  3491  0093AE                     l17448:
  3492                           
  3493                           ;main.c: 77:     {;main.c: 78:         SYS_TaskHandler();
  3494  0093AE  ECA5  F04C         	call	_SYS_TaskHandler	;wreg free
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;main.c: 79:         processATCommand();
  3498  0093B2  EC3C  F021         	call	_processATCommand	;wreg free
  3499  0093B6  D7FB               	goto	l17448
  3500  0093B8                     __end_of_main:
  3501                           	opt callstack 0
  3502                           
  3503 ;; *************** function _processATCommand *****************
  3504 ;; Defined at:
  3505 ;;		line 1036 in file "../app/app_src/application.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;		None
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  data            1   79[BANK0 ] unsigned char 
  3510 ;;  data            1   80[BANK0 ] unsigned char 
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      void 
  3513 ;; Registers used:
  3514 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3515 ;; Tracked objects:
  3516 ;;		On entry : 3F/0
  3517 ;;		On exit  : 6/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;Total ram usage:        4 bytes
  3525 ;; Hardware stack levels used:    1
  3526 ;; Hardware stack levels required when called:   19
  3527 ;; This function calls:
  3528 ;;		_UART1_Read
  3529 ;;		_UART1_is_rx_ready
  3530 ;;		_executeATCommand
  3531 ;;		_get_timer0base
  3532 ;;		_memset
  3533 ;;		_queue_serial_led_event
  3534 ;;		_set_timer0base
  3535 ;; This function is called by:
  3536 ;;		_main
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text1
  3541  004278                     __ptext1:
  3542                           	opt callstack 0
  3543  004278                     _processATCommand:
  3544                           	opt callstack 11
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;../app/app_src/application.c: 1039:     if(tx_done && U1ERRIRbits.TXMTIF){
  3548                           
  3549                           ;incstack = 0
  3550  004278  51E2               	movf	_tx_done& (0+255),w,b	;volatile
  3551  00427A  B4D8               	btfsc	status,2,c
  3552  00427C  D006               	goto	l17210
  3553                           
  3554                           ; BSR set to: 0
  3555  00427E  013D               	movlb	61	; () banked
  3556  004280  AFF9               	btfss	249,7,b	;volatile
  3557  004282  D003               	goto	l17210
  3558                           
  3559                           ; BSR set to: 61
  3560                           ;../app/app_src/application.c: 1041:        tx_done = 0;
  3561  004284  0E00               	movlw	0
  3562  004286  0100               	movlb	0	; () banked
  3563  004288  6FE2               	movwf	_tx_done& (0+255),b	;volatile
  3564  00428A                     l17210:
  3565                           
  3566                           ;../app/app_src/application.c: 1044:     if(((atStateVar != lookingForA) || (atStateVar 
      +                          != processCommand)) &&
  3567  00428A  0100               	movlb	0	; () banked
  3568  00428C  05E0               	decf	_atStateVar& (0+255),w,b
  3569  00428E  A4D8               	btfss	status,2,c
  3570  004290  D004               	goto	u17770
  3571                           
  3572                           ; BSR set to: 0
  3573  004292  0E05               	movlw	5
  3574  004294  19E0               	xorwf	_atStateVar& (0+255),w,b
  3575  004296  B4D8               	btfsc	status,2,c
  3576  004298  D08B               	goto	l17280
  3577  00429A                     u17770:
  3578                           
  3579                           ; BSR set to: 0
  3580  00429A  0EFB               	movlw	low _ATTimeoutTimer
  3581  00429C  6E02               	movwf	get_timer0base@timer^0,c
  3582  00429E  EC04  F04A         	call	_get_timer0base	;wreg free
  3583  0042A2  5002               	movf	?_get_timer0base^0,w,c
  3584  0042A4  1003               	iorwf	(?_get_timer0base+1)^0,w,c
  3585  0042A6  A4D8               	btfss	status,2,c
  3586  0042A8  D083               	goto	l17280
  3587                           
  3588                           ; BSR set to: 57
  3589                           ;../app/app_src/application.c: 1045:             (!get_timer0base(&ATTimeoutTimer))) {;.
      +                          ./app/app_src/application.c: 1046:         atStateVar = resetATMachine;
  3590  0042AA  0E06               	movlw	6
  3591  0042AC  0100               	movlb	0	; () banked
  3592  0042AE  6FE0               	movwf	_atStateVar& (0+255),b
  3593  0042B0  D07F               	goto	l17280
  3594  0042B2                     l17218:
  3595                           
  3596                           ;../app/app_src/application.c: 1050:             atStateVar = resetATMachine;
  3597  0042B2  0E06               	movlw	6
  3598  0042B4  0100               	movlb	0	; () banked
  3599  0042B6  6FE0               	movwf	_atStateVar& (0+255),b
  3600                           
  3601                           ;../app/app_src/application.c: 1051:             break;
  3602  0042B8  0012               	return	
  3603  0042BA                     l17220:
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;../app/app_src/application.c: 1054:             if(UART1_is_rx_ready()){
  3607  0042BA  EC9E  F04C         	call	_UART1_is_rx_ready	;wreg free
  3608  0042BE  0900               	iorlw	0
  3609  0042C0  B4D8               	btfsc	status,2,c
  3610  0042C2  0012               	return	
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;../app/app_src/application.c: 1056:                 if(UART1_Read() == 'A')
  3614  0042C4  ECE7  F045         	call	_UART1_Read	;wreg free
  3615  0042C8  0A41               	xorlw	65
  3616  0042CA  A4D8               	btfss	status,2,c
  3617  0042CC  0012               	return	
  3618                           
  3619                           ; BSR set to: 57
  3620                           ;../app/app_src/application.c: 1057:                 {;../app/app_src/application.c: 105
      +                          9:                     atStateVar = lookingForT;
  3621  0042CE  0E02               	movlw	2
  3622  0042D0  0100               	movlb	0	; () banked
  3623  0042D2  6FE0               	movwf	_atStateVar& (0+255),b
  3624  0042D4                     l17226:
  3625                           
  3626                           ;../app/app_src/application.c: 1060:                     set_timer0base(&ATTimeoutTimer,
      +                           1000);
  3627  0042D4  0EFB               	movlw	low _ATTimeoutTimer
  3628  0042D6  6E02               	movwf	set_timer0base@timer^0,c
  3629  0042D8  0E03               	movlw	3
  3630  0042DA  6E04               	movwf	(set_timer0base@tval+1)^0,c
  3631  0042DC  0EE8               	movlw	232
  3632  0042DE  6E03               	movwf	set_timer0base@tval^0,c
  3633  0042E0  EC82  F04B         	call	_set_timer0base	;wreg free
  3634  0042E4  0012               	return	
  3635  0042E6                     l17228:
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;../app/app_src/application.c: 1065:             if(UART1_is_rx_ready()){
  3639  0042E6  EC9E  F04C         	call	_UART1_is_rx_ready	;wreg free
  3640  0042EA  0900               	iorlw	0
  3641  0042EC  B4D8               	btfsc	status,2,c
  3642  0042EE  0012               	return	
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;../app/app_src/application.c: 1067:                 if(UART1_Read() == 'T')
  3646  0042F0  ECE7  F045         	call	_UART1_Read	;wreg free
  3647  0042F4  0A54               	xorlw	84
  3648  0042F6  A4D8               	btfss	status,2,c
  3649  0042F8  D004               	goto	l17234
  3650                           
  3651                           ; BSR set to: 57
  3652                           ;../app/app_src/application.c: 1068:                 {;../app/app_src/application.c: 107
      +                          0:                     atStateVar = readingCommand;
  3653  0042FA  0E03               	movlw	3
  3654  0042FC  0100               	movlb	0	; () banked
  3655  0042FE  6FE0               	movwf	_atStateVar& (0+255),b
  3656                           
  3657                           ;../app/app_src/application.c: 1071:                 }
  3658  004300  0012               	return	
  3659  004302                     l17234:
  3660                           
  3661                           ; BSR set to: 57
  3662                           ;../app/app_src/application.c: 1073:                 {;../app/app_src/application.c: 107
      +                          4:                     atStateVar = lookingForA;
  3663  004302  0E01               	movlw	1
  3664  004304  0100               	movlb	0	; () banked
  3665  004306  6FE0               	movwf	_atStateVar& (0+255),b
  3666  004308  0012               	return	
  3667  00430A                     l17236:
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;../app/app_src/application.c: 1080:             if(UART1_is_rx_ready())
  3671  00430A  EC9E  F04C         	call	_UART1_is_rx_ready	;wreg free
  3672  00430E  0900               	iorlw	0
  3673  004310  B4D8               	btfsc	status,2,c
  3674  004312  0012               	return	
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;../app/app_src/application.c: 1081:             {;../app/app_src/application.c: 1082:  
      +                                         uint8_t data = UART1_Read();
  3678  004314  ECE7  F045         	call	_UART1_Read	;wreg free
  3679  004318  0100               	movlb	0	; () banked
  3680  00431A  6FB0               	movwf	processATCommand@data& (0+255),b
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;../app/app_src/application.c: 1083:                 if(data == '\r')
  3684  00431C  0E0D               	movlw	13
  3685  00431E  19B0               	xorwf	processATCommand@data& (0+255),w,b
  3686  004320  A4D8               	btfss	status,2,c
  3687  004322  D00C               	goto	l17248
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;../app/app_src/application.c: 1084:                 {;../app/app_src/application.c: 108
      +                          6:                     atStateVar = endingCommand;
  3691  004324  0E04               	movlw	4
  3692  004326  6FE0               	movwf	_atStateVar& (0+255),b
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;../app/app_src/application.c: 1088:                     atCommand[commandByteCounter++]
      +                           = '\0';
  3696  004328  0E24               	movlw	low _atCommand
  3697  00432A  25E1               	addwf	_commandByteCounter& (0+255),w,b
  3698  00432C  6ED9               	movwf	fsr2l,c
  3699  00432E  6ADA               	clrf	fsr2h,c
  3700  004330  0E02               	movlw	high _atCommand
  3701  004332  22DA               	addwfc	fsr2h,f,c
  3702  004334  0E00               	movlw	0
  3703  004336  6EDF               	movwf	indf2,c
  3704                           
  3705                           ; BSR set to: 0
  3706  004338  2BE1               	incf	_commandByteCounter& (0+255),f,b
  3707                           
  3708                           ;../app/app_src/application.c: 1089:                 }
  3709  00433A  0012               	return	
  3710  00433C                     l17248:
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;../app/app_src/application.c: 1091:                 {;../app/app_src/application.c: 109
      +                          2:                     atCommand[commandByteCounter++] = data;
  3714  00433C  0E24               	movlw	low _atCommand
  3715  00433E  25E1               	addwf	_commandByteCounter& (0+255),w,b
  3716  004340  6ED9               	movwf	fsr2l,c
  3717  004342  6ADA               	clrf	fsr2h,c
  3718  004344  0E02               	movlw	high _atCommand
  3719  004346  22DA               	addwfc	fsr2h,f,c
  3720  004348  0060  F2C3  FFDF   	movff	processATCommand@data,indf2
  3721                           
  3722                           ; BSR set to: 0
  3723  00434E  2BE1               	incf	_commandByteCounter& (0+255),f,b
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;../app/app_src/application.c: 1093:                     if(commandByteCounter >= 80)
  3727  004350  0E4F               	movlw	79
  3728  004352  65E1               	cpfsgt	_commandByteCounter& (0+255),b
  3729  004354  0012               	return	
  3730  004356  D7AD               	goto	l17218
  3731  004358                     l17256:
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;../app/app_src/application.c: 1103:             if(UART1_is_rx_ready())
  3735  004358  EC9E  F04C         	call	_UART1_is_rx_ready	;wreg free
  3736  00435C  0900               	iorlw	0
  3737  00435E  B4D8               	btfsc	status,2,c
  3738  004360  0012               	return	
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;../app/app_src/application.c: 1104:             {;../app/app_src/application.c: 1105:  
      +                                         uint8_t data = UART1_Read();
  3742  004362  ECE7  F045         	call	_UART1_Read	;wreg free
  3743  004366  0100               	movlb	0	; () banked
  3744  004368  6FAF               	movwf	processATCommand@data_855& (0+255),b
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;../app/app_src/application.c: 1106:                 if(data == '\n')
  3748  00436A  0E0A               	movlw	10
  3749  00436C  19AF               	xorwf	processATCommand@data_855& (0+255),w,b
  3750  00436E  A4D8               	btfss	status,2,c
  3751  004370  D7A0               	goto	l17218
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;../app/app_src/application.c: 1107:                 {;../app/app_src/application.c: 110
      +                          9:                     atStateVar = processCommand;
  3755  004372  0E05               	movlw	5
  3756  004374  6FE0               	movwf	_atStateVar& (0+255),b
  3757                           
  3758                           ;../app/app_src/application.c: 1110:                 }
  3759  004376  0012               	return	
  3760  004378                     l17266:
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;../app/app_src/application.c: 1120:             executeATCommand(atCommand);
  3764  004378  0E24               	movlw	low _atCommand
  3765  00437A  6FA9               	movwf	executeATCommand@cmd& (0+255),b
  3766  00437C  0E02               	movlw	high _atCommand
  3767  00437E  6FAA               	movwf	(executeATCommand@cmd+1)& (0+255),b
  3768  004380  EC59  F000         	call	_executeATCommand	;wreg free
  3769                           
  3770                           ;../app/app_src/application.c: 1121:             queue_serial_led_event();
  3771  004384  EC6B  F043         	call	_queue_serial_led_event	;wreg free
  3772  004388  D794               	goto	l17218
  3773  00438A                     l17272:
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;../app/app_src/application.c: 1125:             atStateVar = lookingForA;
  3777  00438A  0E01               	movlw	1
  3778  00438C  6FE0               	movwf	_atStateVar& (0+255),b
  3779                           
  3780                           ;../app/app_src/application.c: 1126:             commandByteCounter = 0;
  3781  00438E  0E00               	movlw	0
  3782  004390  6FE1               	movwf	_commandByteCounter& (0+255),b
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;../app/app_src/application.c: 1128:             memset(atCommand,0,sizeof(atCommand));
  3786  004392  0E24               	movlw	low _atCommand
  3787  004394  6E02               	movwf	memset@dest^0,c
  3788  004396  0E02               	movlw	high _atCommand
  3789  004398  6E03               	movwf	(memset@dest+1)^0,c
  3790  00439A  0E00               	movlw	0
  3791  00439C  6E05               	movwf	(memset@c+1)^0,c
  3792  00439E  0E00               	movlw	0
  3793  0043A0  6E04               	movwf	memset@c^0,c
  3794  0043A2  0E00               	movlw	0
  3795  0043A4  6E07               	movwf	(memset@n+1)^0,c
  3796  0043A6  0E50               	movlw	80
  3797  0043A8  6E06               	movwf	memset@n^0,c
  3798  0043AA  ECBC  F024         	call	_memset	;wreg free
  3799  0043AE  D792               	goto	l17226
  3800  0043B0                     l17280:
  3801  0043B0  0100               	movlb	0	; () banked
  3802  0043B2  51E0               	movf	_atStateVar& (0+255),w,b
  3803  0043B4  6FAD               	movwf	??_processATCommand& (0+255),b
  3804  0043B6  6BAE               	clrf	(??_processATCommand+1)& (0+255),b
  3805                           
  3806                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3807                           ; Switch size 1, requested type "simple"
  3808                           ; Number of cases is 1, Range of values is 0 to 0
  3809                           ; switch strategies available:
  3810                           ; Name         Instructions Cycles
  3811                           ; simple_byte            4     3 (average)
  3812                           ;	Chosen strategy is simple_byte
  3813  0043B8  51AE               	movf	(??_processATCommand+1)& (0+255),w,b
  3814  0043BA  0A00               	xorlw	0	; case 0
  3815  0043BC  A4D8               	btfss	status,2,c
  3816  0043BE  D779               	goto	l17218
  3817                           
  3818                           ; BSR set to: 0
  3819                           ; Switch size 1, requested type "simple"
  3820                           ; Number of cases is 7, Range of values is 0 to 6
  3821                           ; switch strategies available:
  3822                           ; Name         Instructions Cycles
  3823                           ; simple_byte           22    12 (average)
  3824                           ;	Chosen strategy is simple_byte
  3825  0043C0  51AD               	movf	??_processATCommand& (0+255),w,b
  3826  0043C2  0A00               	xorlw	0	; case 0
  3827  0043C4  B4D8               	btfsc	status,2,c
  3828  0043C6  D775               	goto	l17218
  3829  0043C8  0A01               	xorlw	1	; case 1
  3830  0043CA  B4D8               	btfsc	status,2,c
  3831  0043CC  D776               	goto	l17220
  3832  0043CE  0A03               	xorlw	3	; case 2
  3833  0043D0  B4D8               	btfsc	status,2,c
  3834  0043D2  D789               	goto	l17228
  3835  0043D4  0A01               	xorlw	1	; case 3
  3836  0043D6  B4D8               	btfsc	status,2,c
  3837  0043D8  D798               	goto	l17236
  3838  0043DA  0A07               	xorlw	7	; case 4
  3839  0043DC  B4D8               	btfsc	status,2,c
  3840  0043DE  D7BC               	goto	l17256
  3841  0043E0  0A01               	xorlw	1	; case 5
  3842  0043E2  B4D8               	btfsc	status,2,c
  3843  0043E4  D7C9               	goto	l17266
  3844  0043E6  0A03               	xorlw	3	; case 6
  3845  0043E8  B4D8               	btfsc	status,2,c
  3846  0043EA  D7CF               	goto	l17272
  3847  0043EC  D762               	goto	l17218
  3848  0043EE                     __end_of_processATCommand:
  3849                           	opt callstack 0
  3850                           
  3851 ;; *************** function _queue_serial_led_event *****************
  3852 ;; Defined at:
  3853 ;;		line 96 in file "../app/app_src/led.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;		None
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;  i               1   33[COMRAM] unsigned char 
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  1    wreg      void 
  3860 ;; Registers used:
  3861 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3870 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3871 ;;Total ram usage:        1 bytes
  3872 ;; Hardware stack levels used:    1
  3873 ;; Hardware stack levels required when called:   10
  3874 ;; This function calls:
  3875 ;;		_queueLedEvent
  3876 ;; This function is called by:
  3877 ;;		_processATCommand
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           	psect	text2
  3882  0086D6                     __ptext2:
  3883                           	opt callstack 0
  3884  0086D6                     _queue_serial_led_event:
  3885                           	opt callstack 19
  3886                           
  3887                           ;../app/app_src/led.c: 98:     queueLedEvent(0,400);
  3888                           
  3889                           ;incstack = 0
  3890  0086D6  0E01               	movlw	1
  3891  0086D8  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3892  0086DA  0E90               	movlw	144
  3893  0086DC  6E1C               	movwf	queueLedEvent@duration^0,c
  3894  0086DE  0E00               	movlw	0
  3895  0086E0  EC7D  F047         	call	_queueLedEvent
  3896                           
  3897                           ;../app/app_src/led.c: 99:     for(uint8_t i = 0; i < 2; i++)
  3898  0086E4  0E00               	movlw	0
  3899  0086E6  6E22               	movwf	queue_serial_led_event@i^0,c
  3900  0086E8                     l17114:
  3901                           
  3902                           ;../app/app_src/led.c: 100:     {;../app/app_src/led.c: 101:         queueLedEvent(1,100
      +                          );
  3903  0086E8  0E00               	movlw	0
  3904  0086EA  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3905  0086EC  0E64               	movlw	100
  3906  0086EE  6E1C               	movwf	queueLedEvent@duration^0,c
  3907  0086F0  0E01               	movlw	1
  3908  0086F2  EC7D  F047         	call	_queueLedEvent
  3909                           
  3910                           ;../app/app_src/led.c: 102:         queueLedEvent(0,100);
  3911  0086F6  0E00               	movlw	0
  3912  0086F8  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3913  0086FA  0E64               	movlw	100
  3914  0086FC  6E1C               	movwf	queueLedEvent@duration^0,c
  3915  0086FE  0E00               	movlw	0
  3916  008700  EC7D  F047         	call	_queueLedEvent
  3917                           
  3918                           ;../app/app_src/led.c: 103:     }
  3919  008704  2A22               	incf	queue_serial_led_event@i^0,f,c
  3920  008706  0E01               	movlw	1
  3921  008708  6422               	cpfsgt	queue_serial_led_event@i^0,c
  3922  00870A  D7EE               	goto	l17114
  3923                           
  3924                           ;../app/app_src/led.c: 104:     queueLedEvent(0,100);
  3925  00870C  0E00               	movlw	0
  3926  00870E  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3927  008710  0E64               	movlw	100
  3928  008712  6E1C               	movwf	queueLedEvent@duration^0,c
  3929  008714  0E00               	movlw	0
  3930  008716  EC7D  F047         	call	_queueLedEvent
  3931                           
  3932                           ;../app/app_src/led.c: 105:     queueLedEvent(1,100);
  3933  00871A  0E00               	movlw	0
  3934  00871C  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3935  00871E  0E64               	movlw	100
  3936  008720  6E1C               	movwf	queueLedEvent@duration^0,c
  3937  008722  0E01               	movlw	1
  3938  008724  EC7D  F047         	call	_queueLedEvent
  3939  008728  0012               	return		;funcret
  3940  00872A                     __end_of_queue_serial_led_event:
  3941                           	opt callstack 0
  3942                           
  3943 ;; *************** function _queueLedEvent *****************
  3944 ;; Defined at:
  3945 ;;		line 53 in file "../app/app_src/led.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  LEDState        1    wreg     unsigned char 
  3948 ;;  duration        2   27[COMRAM] unsigned short 
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;  LEDState        1   29[COMRAM] unsigned char 
  3951 ;;  temp            3   30[COMRAM] struct ledEvent
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  1    wreg      char 
  3954 ;; Registers used:
  3955 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3961 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3962 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3964 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3965 ;;Total ram usage:        6 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    9
  3968 ;; This function calls:
  3969 ;;		_CircularBufferPushBack
  3970 ;;		_CircularBufferSpace
  3971 ;; This function is called by:
  3972 ;;		_queue_serial_led_event
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           	psect	text3
  3977  008EFA                     __ptext3:
  3978                           	opt callstack 0
  3979  008EFA                     _queueLedEvent:
  3980                           	opt callstack 19
  3981                           
  3982                           ;incstack = 0
  3983                           ;queueLedEvent@LEDState stored from wreg
  3984  008EFA  6E1E               	movwf	queueLedEvent@LEDState^0,c
  3985                           
  3986                           ;../app/app_src/led.c: 53: int8_t queueLedEvent(uint8_t LEDState,uint16_t duration);../a
      +                          pp/app_src/led.c: 54: {;../app/app_src/led.c: 55:     if(0 != CircularBufferSpace(&ledta
      +                          sksbuf))
  3987  008EFC  0EBC               	movlw	low _ledtasksbuf
  3988  008EFE  6E0A               	movwf	CircularBufferSpace@ctx^0,c
  3989  008F00  0E01               	movlw	high _ledtasksbuf
  3990  008F02  6E0B               	movwf	(CircularBufferSpace@ctx+1)^0,c
  3991  008F04  EC28  F048         	call	_CircularBufferSpace	;wreg free
  3992  008F08  500A               	movf	?_CircularBufferSpace^0,w,c
  3993  008F0A  100B               	iorwf	(?_CircularBufferSpace+1)^0,w,c
  3994  008F0C  B4D8               	btfsc	status,2,c
  3995  008F0E  0012               	return	
  3996                           
  3997                           ;../app/app_src/led.c: 56:     {;../app/app_src/led.c: 57:         struct ledEvent temp;
      +                          ;../app/app_src/led.c: 58:         temp.LEDCondition = LEDState;
  3998  008F10  0060  F078  F01F   	movff	queueLedEvent@LEDState,queueLedEvent@temp
  3999                           
  4000                           ;../app/app_src/led.c: 59:         temp.eventDuration = duration;
  4001  008F16  0060  F070  F020   	movff	queueLedEvent@duration,queueLedEvent@temp+1
  4002  008F1C  0060  F074  F021   	movff	queueLedEvent@duration+1,queueLedEvent@temp+2
  4003                           
  4004                           ;../app/app_src/led.c: 60:         CircularBufferPushBack(&ledtasksbuf,&temp);
  4005  008F22  0EBC               	movlw	low _ledtasksbuf
  4006  008F24  6E13               	movwf	CircularBufferPushBack@ctx^0,c
  4007  008F26  0E01               	movlw	high _ledtasksbuf
  4008  008F28  6E14               	movwf	(CircularBufferPushBack@ctx+1)^0,c
  4009  008F2A  0E1F               	movlw	low queueLedEvent@temp
  4010  008F2C  6E15               	movwf	CircularBufferPushBack@val^0,c
  4011  008F2E  EC12  F02E         	call	_CircularBufferPushBack	;wreg free
  4012  008F32  0012               	return		;funcret
  4013  008F34                     __end_of_queueLedEvent:
  4014                           	opt callstack 0
  4015                           
  4016 ;; *************** function _CircularBufferSpace *****************
  4017 ;; Defined at:
  4018 ;;		line 126 in file "../app/app_src/circular buffer.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  ctx             2    9[COMRAM] PTR const struct .
  4021 ;;		 -> ledtasksbuf(10), 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;		None
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  2    9[COMRAM] unsigned int 
  4026 ;; Registers used:
  4027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 0/0
  4030 ;;		On exit  : 0/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4033 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4035 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;Total ram usage:        4 bytes
  4038 ;; Hardware stack levels used:    1
  4039 ;; Hardware stack levels required when called:    8
  4040 ;; This function calls:
  4041 ;;		_CircularBufferSize
  4042 ;; This function is called by:
  4043 ;;		_queueLedEvent
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           	psect	text4
  4048  009050                     __ptext4:
  4049                           	opt callstack 0
  4050  009050                     _CircularBufferSpace:
  4051                           	opt callstack 19
  4052                           
  4053                           ;../app/app_src/circular buffer.c: 128:     return (ctx->max_size - CircularBufferSize(c
      +                          tx));
  4054                           
  4055                           ;incstack = 0
  4056  009050  0060  F028  F002   	movff	CircularBufferSpace@ctx,CircularBufferSize@ctx
  4057  009056  0060  F02C  F003   	movff	CircularBufferSpace@ctx+1,CircularBufferSize@ctx+1
  4058  00905C  EC2D  F042         	call	_CircularBufferSize	;wreg free
  4059  009060  EE20 F008          	lfsr	2,8
  4060  009064  500A               	movf	CircularBufferSpace@ctx^0,w,c
  4061  009066  26D9               	addwf	fsr2l,f,c
  4062  009068  500B               	movf	(CircularBufferSpace@ctx+1)^0,w,c
  4063  00906A  22DA               	addwfc	fsr2h,f,c
  4064  00906C  006F FF78  F00C    	movff	postinc2,??_CircularBufferSpace
  4065  009072  006F FF74  F00D    	movff	postdec2,??_CircularBufferSpace+1
  4066  009078  5002               	movf	?_CircularBufferSize^0,w,c
  4067  00907A  5C0C               	subwf	??_CircularBufferSpace^0,w,c
  4068  00907C  6E0A               	movwf	?_CircularBufferSpace^0,c
  4069  00907E  5003               	movf	(?_CircularBufferSize+1)^0,w,c
  4070  009080  580D               	subwfb	(??_CircularBufferSpace+1)^0,w,c
  4071  009082  6E0B               	movwf	(?_CircularBufferSpace+1)^0,c
  4072  009084  0012               	return		;funcret
  4073  009086                     __end_of_CircularBufferSpace:
  4074                           	opt callstack 0
  4075                           
  4076 ;; *************** function _CircularBufferSize *****************
  4077 ;; Defined at:
  4078 ;;		line 122 in file "../app/app_src/circular buffer.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  ctx             2    1[COMRAM] PTR const struct .
  4081 ;;		 -> ledtasksbuf(10), 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  2    1[COMRAM] unsigned int 
  4086 ;; Registers used:
  4087 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4095 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;Total ram usage:        8 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:    7
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_CircularBufferSpace
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text5
  4108  00845A                     __ptext5:
  4109                           	opt callstack 0
  4110  00845A                     _CircularBufferSize:
  4111                           	opt callstack 19
  4112                           
  4113                           ;../app/app_src/circular buffer.c: 123:     return ((ctx->write_pos - ctx->read_pos) & c
      +                          tx->max_size);
  4114                           
  4115                           ;incstack = 0
  4116  00845A  EE20 F008          	lfsr	2,8
  4117  00845E  5002               	movf	CircularBufferSize@ctx^0,w,c
  4118  008460  26D9               	addwf	fsr2l,f,c
  4119  008462  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4120  008464  22DA               	addwfc	fsr2h,f,c
  4121  008466  006F FF78  F004    	movff	postinc2,??_CircularBufferSize
  4122  00846C  006F FF74  F005    	movff	postdec2,??_CircularBufferSize+1
  4123  008472  EE20 F004          	lfsr	2,4
  4124  008476  5002               	movf	CircularBufferSize@ctx^0,w,c
  4125  008478  26D9               	addwf	fsr2l,f,c
  4126  00847A  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4127  00847C  22DA               	addwfc	fsr2h,f,c
  4128  00847E  006F FF78  F006    	movff	postinc2,??_CircularBufferSize+2
  4129  008484  006F FF74  F007    	movff	postdec2,??_CircularBufferSize+3
  4130  00848A  EE20 F002          	lfsr	2,2
  4131  00848E  5002               	movf	CircularBufferSize@ctx^0,w,c
  4132  008490  26D9               	addwf	fsr2l,f,c
  4133  008492  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4134  008494  22DA               	addwfc	fsr2h,f,c
  4135  008496  006F FF78  F008    	movff	postinc2,??_CircularBufferSize+4
  4136  00849C  006F FF74  F009    	movff	postdec2,??_CircularBufferSize+5
  4137  0084A2  5006               	movf	(??_CircularBufferSize+2)^0,w,c
  4138  0084A4  5E08               	subwf	(??_CircularBufferSize+4)^0,f,c
  4139  0084A6  5007               	movf	(??_CircularBufferSize+3)^0,w,c
  4140  0084A8  5A09               	subwfb	(??_CircularBufferSize+5)^0,f,c
  4141  0084AA  5004               	movf	??_CircularBufferSize^0,w,c
  4142  0084AC  1408               	andwf	(??_CircularBufferSize+4)^0,w,c
  4143  0084AE  6E02               	movwf	?_CircularBufferSize^0,c
  4144  0084B0  5005               	movf	(??_CircularBufferSize+1)^0,w,c
  4145  0084B2  1409               	andwf	(??_CircularBufferSize+5)^0,w,c
  4146  0084B4  6E03               	movwf	(?_CircularBufferSize+1)^0,c
  4147  0084B6  0012               	return		;funcret
  4148  0084B8                     __end_of_CircularBufferSize:
  4149                           	opt callstack 0
  4150                           
  4151 ;; *************** function _executeATCommand *****************
  4152 ;; Defined at:
  4153 ;;		line 859 in file "../app/app_src/application.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;  cmd             2   73[BANK0 ] PTR unsigned char 
  4156 ;;		 -> atCommand(80), 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;  retcode         1    0        unsigned char 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      unsigned char 
  4161 ;; Registers used:
  4162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 3F/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4168 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4169 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;Total ram usage:        5 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; Hardware stack levels required when called:   18
  4175 ;; This function calls:
  4176 ;;		_cmdAddr
  4177 ;;		_cmdBcast
  4178 ;;		_cmdBootLoad
  4179 ;;		_cmdGetCAD
  4180 ;;		_cmdGetCADRSSI
  4181 ;;		_cmdGetMode
  4182 ;;		_cmdGetRFCH
  4183 ;;		_cmdGetRxCnt
  4184 ;;		_cmdGetSF
  4185 ;;		_cmdGetTTL
  4186 ;;		_cmdGetTX
  4187 ;;		_cmdI
  4188 ;;		_cmdMac
  4189 ;;		_cmdNaddr
  4190 ;;		_cmdRecv
  4191 ;;		_cmdReset
  4192 ;;		_cmdRstCAD
  4193 ;;		_cmdSend
  4194 ;;		_cmdSendSink
  4195 ;;		_cmdSetAES
  4196 ;;		_cmdSetAddr
  4197 ;;		_cmdSetBaud
  4198 ;;		_cmdSetCADRSSI
  4199 ;;		_cmdSetNaddr
  4200 ;;		_cmdSetParity
  4201 ;;		_cmdSetRFCH
  4202 ;;		_cmdSetSF
  4203 ;;		_cmdSetSink
  4204 ;;		_cmdSetTTL
  4205 ;;		_cmdSetTX
  4206 ;;		_print_hop_table
  4207 ;;		_printf
  4208 ;;		_set_hop_table_ttl
  4209 ;;		_strstr
  4210 ;; This function is called by:
  4211 ;;		_processATCommand
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           	psect	text6
  4216  0000B2                     __ptext6:
  4217                           	opt callstack 0
  4218  0000B2                     _executeATCommand:
  4219                           	opt callstack 11
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;../app/app_src/application.c: 862:     switch(*(cmd+1))
  4223                           
  4224                           ;incstack = 0
  4225  0000B2  D28D               	goto	l17100
  4226  0000B4                     l16960:
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;../app/app_src/application.c: 865:          if(strstr(atCommand,"+SEND:")){
  4230  0000B4  0E24               	movlw	low _atCommand
  4231  0000B6  6E0D               	movwf	strstr@h^0,c
  4232  0000B8  0E02               	movlw	high _atCommand
  4233  0000BA  6E0E               	movwf	(strstr@h+1)^0,c
  4234  0000BC  0E5A               	movlw	low STR_66
  4235  0000BE  6E0F               	movwf	strstr@n^0,c
  4236  0000C0  0EFF               	movlw	high STR_66
  4237  0000C2  6E10               	movwf	(strstr@n+1)^0,c
  4238  0000C4  EC93  F032         	call	_strstr	;wreg free
  4239  0000C8  500D               	movf	?_strstr^0,w,c
  4240  0000CA  100E               	iorwf	(?_strstr+1)^0,w,c
  4241  0000CC  B4D8               	btfsc	status,2,c
  4242  0000CE  D009               	goto	l16964
  4243                           
  4244                           ;../app/app_src/application.c: 866:           cmdSend(cmd);
  4245  0000D0  0060  F2A4  F058   	movff	executeATCommand@cmd,cmdSend@cmd
  4246  0000D6  0060  F2A8  F059   	movff	executeATCommand@cmd+1,cmdSend@cmd+1
  4247  0000DC  ECBB  F015         	call	_cmdSend	;wreg free
  4248                           
  4249                           ;../app/app_src/application.c: 867:          }
  4250  0000E0  0012               	return	
  4251  0000E2                     l16964:
  4252  0000E2  0E24               	movlw	low _atCommand
  4253  0000E4  6E0D               	movwf	strstr@h^0,c
  4254  0000E6  0E02               	movlw	high _atCommand
  4255  0000E8  6E0E               	movwf	(strstr@h+1)^0,c
  4256  0000EA  0E29               	movlw	low STR_68
  4257  0000EC  6E0F               	movwf	strstr@n^0,c
  4258  0000EE  0EFF               	movlw	high STR_68
  4259  0000F0  6E10               	movwf	(strstr@n+1)^0,c
  4260  0000F2  EC93  F032         	call	_strstr	;wreg free
  4261  0000F6  500D               	movf	?_strstr^0,w,c
  4262  0000F8  100E               	iorwf	(?_strstr+1)^0,w,c
  4263  0000FA  B4D8               	btfsc	status,2,c
  4264  0000FC  D003               	goto	l16968
  4265                           
  4266                           ;../app/app_src/application.c: 869:           cmdSetSink();
  4267  0000FE  EC6E  F04C         	call	_cmdSetSink	;wreg free
  4268                           
  4269                           ;../app/app_src/application.c: 870:          }
  4270  000102  0012               	return	
  4271  000104                     l16968:
  4272  000104  0E24               	movlw	low _atCommand
  4273  000106  6E0D               	movwf	strstr@h^0,c
  4274  000108  0E02               	movlw	high _atCommand
  4275  00010A  6E0E               	movwf	(strstr@h+1)^0,c
  4276  00010C  0EA0               	movlw	low STR_70
  4277  00010E  6E0F               	movwf	strstr@n^0,c
  4278  000110  0EFF               	movlw	high STR_70
  4279  000112  6E10               	movwf	(strstr@n+1)^0,c
  4280  000114  EC93  F032         	call	_strstr	;wreg free
  4281  000118  500D               	movf	?_strstr^0,w,c
  4282  00011A  100E               	iorwf	(?_strstr+1)^0,w,c
  4283  00011C  B4D8               	btfsc	status,2,c
  4284  00011E  D007               	goto	l16972
  4285                           
  4286                           ;../app/app_src/application.c: 872:           cmdSendSink(atCommand);
  4287  000120  0E24               	movlw	low _atCommand
  4288  000122  6E02               	movwf	cmdSendSink@cmd^0,c
  4289  000124  0E02               	movlw	high _atCommand
  4290  000126  6E03               	movwf	(cmdSendSink@cmd+1)^0,c
  4291  000128  EC0F  F04D         	call	_cmdSendSink	;wreg free
  4292                           
  4293                           ;../app/app_src/application.c: 873:          }
  4294  00012C  0012               	return	
  4295  00012E                     l16972:
  4296  00012E  0E24               	movlw	low _atCommand
  4297  000130  6E0D               	movwf	strstr@h^0,c
  4298  000132  0E02               	movlw	high _atCommand
  4299  000134  6E0E               	movwf	(strstr@h+1)^0,c
  4300  000136  0EE5               	movlw	low STR_72
  4301  000138  6E0F               	movwf	strstr@n^0,c
  4302  00013A  0EFF               	movlw	high STR_72
  4303  00013C  6E10               	movwf	(strstr@n+1)^0,c
  4304  00013E  EC93  F032         	call	_strstr	;wreg free
  4305  000142  500D               	movf	?_strstr^0,w,c
  4306  000144  100E               	iorwf	(?_strstr+1)^0,w,c
  4307  000146  B4D8               	btfsc	status,2,c
  4308  000148  D003               	goto	l16976
  4309                           
  4310                           ;../app/app_src/application.c: 875:           cmdGetSF();
  4311  00014A  ECE8  F04B         	call	_cmdGetSF	;wreg free
  4312                           
  4313                           ;../app/app_src/application.c: 876:          }
  4314  00014E  0012               	return	
  4315  000150                     l16976:
  4316  000150  0E24               	movlw	low _atCommand
  4317  000152  6E0D               	movwf	strstr@h^0,c
  4318  000154  0E02               	movlw	high _atCommand
  4319  000156  6E0E               	movwf	(strstr@h+1)^0,c
  4320  000158  0EE0               	movlw	low STR_74
  4321  00015A  6E0F               	movwf	strstr@n^0,c
  4322  00015C  0EFF               	movlw	high STR_74
  4323  00015E  6E10               	movwf	(strstr@n+1)^0,c
  4324  000160  EC93  F032         	call	_strstr	;wreg free
  4325  000164  500D               	movf	?_strstr^0,w,c
  4326  000166  100E               	iorwf	(?_strstr+1)^0,w,c
  4327  000168  B4D8               	btfsc	status,2,c
  4328  00016A  D007               	goto	l16980
  4329                           
  4330                           ;../app/app_src/application.c: 878:           cmdSetSF(atCommand);
  4331  00016C  0E24               	movlw	low _atCommand
  4332  00016E  6E58               	movwf	cmdSetSF@atCommand^0,c
  4333  000170  0E02               	movlw	high _atCommand
  4334  000172  6E59               	movwf	(cmdSetSF@atCommand+1)^0,c
  4335  000174  EC0F  F039         	call	_cmdSetSF	;wreg free
  4336                           
  4337                           ;../app/app_src/application.c: 879:          }
  4338  000178  0012               	return	
  4339  00017A                     l16980:
  4340  00017A  0E24               	movlw	low _atCommand
  4341  00017C  6E0D               	movwf	strstr@h^0,c
  4342  00017E  0E02               	movlw	high _atCommand
  4343  000180  6E0E               	movwf	(strstr@h+1)^0,c
  4344  000182  0ED1               	movlw	low STR_76
  4345  000184  6E0F               	movwf	strstr@n^0,c
  4346  000186  0EFE               	movlw	high STR_76
  4347  000188  6E10               	movwf	(strstr@n+1)^0,c
  4348  00018A  EC93  F032         	call	_strstr	;wreg free
  4349  00018E  500D               	movf	?_strstr^0,w,c
  4350  000190  100E               	iorwf	(?_strstr+1)^0,w,c
  4351  000192  B4D8               	btfsc	status,2,c
  4352  000194  D210               	goto	l17096
  4353                           
  4354                           ;../app/app_src/application.c: 881:                 print_hop_table(atCommand);
  4355  000196  0E24               	movlw	low _atCommand
  4356  000198  6E58               	movwf	print_hop_table@atCommand^0,c
  4357  00019A  0E02               	movlw	high _atCommand
  4358  00019C  6E59               	movwf	(print_hop_table@atCommand+1)^0,c
  4359  00019E  EC64  F030         	call	_print_hop_table	;wreg free
  4360                           
  4361                           ;../app/app_src/application.c: 882:             }
  4362  0001A2  0012               	return	
  4363  0001A4                     l16984:
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;../app/app_src/application.c: 888:          if(strstr(atCommand,"+BCAST=")){
  4367  0001A4  0E24               	movlw	low _atCommand
  4368  0001A6  6E0D               	movwf	strstr@h^0,c
  4369  0001A8  0E02               	movlw	high _atCommand
  4370  0001AA  6E0E               	movwf	(strstr@h+1)^0,c
  4371  0001AC  0E4A               	movlw	low STR_78
  4372  0001AE  6E0F               	movwf	strstr@n^0,c
  4373  0001B0  0EFF               	movlw	high STR_78
  4374  0001B2  6E10               	movwf	(strstr@n+1)^0,c
  4375  0001B4  EC93  F032         	call	_strstr	;wreg free
  4376  0001B8  500D               	movf	?_strstr^0,w,c
  4377  0001BA  100E               	iorwf	(?_strstr+1)^0,w,c
  4378  0001BC  B4D8               	btfsc	status,2,c
  4379  0001BE  D009               	goto	l16988
  4380                           
  4381                           ;../app/app_src/application.c: 889:     cmdBcast(cmd);
  4382  0001C0  0060  F2A4  F058   	movff	executeATCommand@cmd,cmdBcast@cmd
  4383  0001C6  0060  F2A8  F059   	movff	executeATCommand@cmd+1,cmdBcast@cmd+1
  4384  0001CC  EC1C  F01C         	call	_cmdBcast	;wreg free
  4385                           
  4386                           ;../app/app_src/application.c: 890:    }
  4387  0001D0  0012               	return	
  4388  0001D2                     l16988:
  4389  0001D2  0E24               	movlw	low _atCommand
  4390  0001D4  6E0D               	movwf	strstr@h^0,c
  4391  0001D6  0E02               	movlw	high _atCommand
  4392  0001D8  6E0E               	movwf	(strstr@h+1)^0,c
  4393  0001DA  0E61               	movlw	low STR_80
  4394  0001DC  6E0F               	movwf	strstr@n^0,c
  4395  0001DE  0EFF               	movlw	high STR_80
  4396  0001E0  6E10               	movwf	(strstr@n+1)^0,c
  4397  0001E2  EC93  F032         	call	_strstr	;wreg free
  4398  0001E6  500D               	movf	?_strstr^0,w,c
  4399  0001E8  100E               	iorwf	(?_strstr+1)^0,w,c
  4400  0001EA  B4D8               	btfsc	status,2,c
  4401  0001EC  D007               	goto	l16992
  4402                           
  4403                           ;../app/app_src/application.c: 892:                 cmdSetBaud(atCommand);
  4404  0001EE  0E24               	movlw	low _atCommand
  4405  0001F0  6E3A               	movwf	cmdSetBaud@atCommand^0,c
  4406  0001F2  0E02               	movlw	high _atCommand
  4407  0001F4  6E3B               	movwf	(cmdSetBaud@atCommand+1)^0,c
  4408  0001F6  EC05  F040         	call	_cmdSetBaud	;wreg free
  4409                           
  4410                           ;../app/app_src/application.c: 893:             }
  4411  0001FA  0012               	return	
  4412  0001FC                     l16992:
  4413  0001FC  0E24               	movlw	low _atCommand
  4414  0001FE  6E0D               	movwf	strstr@h^0,c
  4415  000200  0E02               	movlw	high _atCommand
  4416  000202  6E0E               	movwf	(strstr@h+1)^0,c
  4417  000204  0E04               	movlw	low STR_82
  4418  000206  6E0F               	movwf	strstr@n^0,c
  4419  000208  0EFF               	movlw	high STR_82
  4420  00020A  6E10               	movwf	(strstr@n+1)^0,c
  4421  00020C  EC93  F032         	call	_strstr	;wreg free
  4422  000210  500D               	movf	?_strstr^0,w,c
  4423  000212  100E               	iorwf	(?_strstr+1)^0,w,c
  4424  000214  B4D8               	btfsc	status,2,c
  4425  000216  D1CF               	goto	l17096
  4426                           
  4427                           ;../app/app_src/application.c: 895:                 cmdBootLoad();
  4428  000218  EC9A  F047         	call	_cmdBootLoad	;wreg free
  4429                           
  4430                           ;../app/app_src/application.c: 896:             }
  4431  00021C  0012               	return	
  4432  00021E                     l16996:
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;../app/app_src/application.c: 902:          if(strstr(atCommand,"+ADDR?")){
  4436  00021E  0E24               	movlw	low _atCommand
  4437  000220  6E0D               	movwf	strstr@h^0,c
  4438  000222  0E02               	movlw	high _atCommand
  4439  000224  6E0E               	movwf	(strstr@h+1)^0,c
  4440  000226  0E8B               	movlw	low STR_84
  4441  000228  6E0F               	movwf	strstr@n^0,c
  4442  00022A  0EFF               	movlw	high STR_84
  4443  00022C  6E10               	movwf	(strstr@n+1)^0,c
  4444  00022E  EC93  F032         	call	_strstr	;wreg free
  4445  000232  500D               	movf	?_strstr^0,w,c
  4446  000234  100E               	iorwf	(?_strstr+1)^0,w,c
  4447  000236  B4D8               	btfsc	status,2,c
  4448  000238  D003               	goto	l17000
  4449                           
  4450                           ;../app/app_src/application.c: 903:           cmdAddr();
  4451  00023A  ECE9  F04A         	call	_cmdAddr	;wreg free
  4452                           
  4453                           ;../app/app_src/application.c: 904:          }
  4454  00023E  0012               	return	
  4455  000240                     l17000:
  4456  000240  0E24               	movlw	low _atCommand
  4457  000242  6E0D               	movwf	strstr@h^0,c
  4458  000244  0E02               	movlw	high _atCommand
  4459  000246  6E0E               	movwf	(strstr@h+1)^0,c
  4460  000248  0E6F               	movlw	low STR_86
  4461  00024A  6E0F               	movwf	strstr@n^0,c
  4462  00024C  0EFF               	movlw	high STR_86
  4463  00024E  6E10               	movwf	(strstr@n+1)^0,c
  4464  000250  EC93  F032         	call	_strstr	;wreg free
  4465  000254  500D               	movf	?_strstr^0,w,c
  4466  000256  100E               	iorwf	(?_strstr+1)^0,w,c
  4467  000258  B4D8               	btfsc	status,2,c
  4468  00025A  D007               	goto	l17004
  4469                           
  4470                           ;../app/app_src/application.c: 906:     cmdSetAddr(atCommand);
  4471  00025C  0E24               	movlw	low _atCommand
  4472  00025E  6E58               	movwf	cmdSetAddr@cmd^0,c
  4473  000260  0E02               	movlw	high _atCommand
  4474  000262  6E59               	movwf	(cmdSetAddr@cmd+1)^0,c
  4475  000264  ECE9  F03B         	call	_cmdSetAddr	;wreg free
  4476                           
  4477                           ;../app/app_src/application.c: 907:    }
  4478  000268  0012               	return	
  4479  00026A                     l17004:
  4480  00026A  0E24               	movlw	low _atCommand
  4481  00026C  6E0D               	movwf	strstr@h^0,c
  4482  00026E  0E02               	movlw	high _atCommand
  4483  000270  6E0E               	movwf	(strstr@h+1)^0,c
  4484  000272  0E0E               	movlw	low STR_88
  4485  000274  6E0F               	movwf	strstr@n^0,c
  4486  000276  0EFF               	movlw	high STR_88
  4487  000278  6E10               	movwf	(strstr@n+1)^0,c
  4488  00027A  EC93  F032         	call	_strstr	;wreg free
  4489  00027E  500D               	movf	?_strstr^0,w,c
  4490  000280  100E               	iorwf	(?_strstr+1)^0,w,c
  4491  000282  B4D8               	btfsc	status,2,c
  4492  000284  D198               	goto	l17096
  4493                           
  4494                           ;../app/app_src/application.c: 909:           cmdSetAES(atCommand);
  4495  000286  0E24               	movlw	low _atCommand
  4496  000288  6E58               	movwf	cmdSetAES@cmd^0,c
  4497  00028A  0E02               	movlw	high _atCommand
  4498  00028C  6E59               	movwf	(cmdSetAES@cmd+1)^0,c
  4499  00028E  EC0F  F019         	call	_cmdSetAES	;wreg free
  4500                           
  4501                           ;../app/app_src/application.c: 910:          }
  4502  000292  0012               	return	
  4503  000294                     l17008:
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;../app/app_src/application.c: 916:          if(strstr(atCommand,"+CADCOUNTER?")){
  4507  000294  0E24               	movlw	low _atCommand
  4508  000296  6E0D               	movwf	strstr@h^0,c
  4509  000298  0E02               	movlw	high _atCommand
  4510  00029A  6E0E               	movwf	(strstr@h+1)^0,c
  4511  00029C  0EAC               	movlw	low STR_90
  4512  00029E  6E0F               	movwf	strstr@n^0,c
  4513  0002A0  0EFE               	movlw	high STR_90
  4514  0002A2  6E10               	movwf	(strstr@n+1)^0,c
  4515  0002A4  EC93  F032         	call	_strstr	;wreg free
  4516  0002A8  500D               	movf	?_strstr^0,w,c
  4517  0002AA  100E               	iorwf	(?_strstr+1)^0,w,c
  4518  0002AC  B4D8               	btfsc	status,2,c
  4519  0002AE  D003               	goto	l17012
  4520                           
  4521                           ;../app/app_src/application.c: 917:           cmdGetCAD();
  4522  0002B0  ECF4  F04B         	call	_cmdGetCAD	;wreg free
  4523                           
  4524                           ;../app/app_src/application.c: 918:          }
  4525  0002B4  0012               	return	
  4526  0002B6                     l17012:
  4527  0002B6  0E24               	movlw	low _atCommand
  4528  0002B8  6E0D               	movwf	strstr@h^0,c
  4529  0002BA  0E02               	movlw	high _atCommand
  4530  0002BC  6E0E               	movwf	(strstr@h+1)^0,c
  4531  0002BE  0E5A               	movlw	low STR_92
  4532  0002C0  6E0F               	movwf	strstr@n^0,c
  4533  0002C2  0EFE               	movlw	high STR_92
  4534  0002C4  6E10               	movwf	(strstr@n+1)^0,c
  4535  0002C6  EC93  F032         	call	_strstr	;wreg free
  4536  0002CA  500D               	movf	?_strstr^0,w,c
  4537  0002CC  100E               	iorwf	(?_strstr+1)^0,w,c
  4538  0002CE  B4D8               	btfsc	status,2,c
  4539  0002D0  D003               	goto	l17016
  4540                           
  4541                           ;../app/app_src/application.c: 920:           cmdRstCAD();
  4542  0002D2  EC2F  F04C         	call	_cmdRstCAD	;wreg free
  4543                           
  4544                           ;../app/app_src/application.c: 921:          }
  4545  0002D6  0012               	return	
  4546  0002D8                     l17016:
  4547  0002D8  0E24               	movlw	low _atCommand
  4548  0002DA  6E0D               	movwf	strstr@h^0,c
  4549  0002DC  0E02               	movlw	high _atCommand
  4550  0002DE  6E0E               	movwf	(strstr@h+1)^0,c
  4551  0002E0  0EF0               	movlw	low STR_94
  4552  0002E2  6E0F               	movwf	strstr@n^0,c
  4553  0002E4  0EFE               	movlw	high STR_94
  4554  0002E6  6E10               	movwf	(strstr@n+1)^0,c
  4555  0002E8  EC93  F032         	call	_strstr	;wreg free
  4556  0002EC  500D               	movf	?_strstr^0,w,c
  4557  0002EE  100E               	iorwf	(?_strstr+1)^0,w,c
  4558  0002F0  B4D8               	btfsc	status,2,c
  4559  0002F2  D003               	goto	l17020
  4560                           
  4561                           ;../app/app_src/application.c: 923:           cmdGetCADRSSI();
  4562  0002F4  EC75  F04B         	call	_cmdGetCADRSSI	;wreg free
  4563                           
  4564                           ;../app/app_src/application.c: 924:          }
  4565  0002F8  0012               	return	
  4566  0002FA                     l17020:
  4567  0002FA  0E24               	movlw	low _atCommand
  4568  0002FC  6E0D               	movwf	strstr@h^0,c
  4569  0002FE  0E02               	movlw	high _atCommand
  4570  000300  6E0E               	movwf	(strstr@h+1)^0,c
  4571  000302  0EDC               	movlw	low STR_96
  4572  000304  6E0F               	movwf	strstr@n^0,c
  4573  000306  0EFE               	movlw	high STR_96
  4574  000308  6E10               	movwf	(strstr@n+1)^0,c
  4575  00030A  EC93  F032         	call	_strstr	;wreg free
  4576  00030E  500D               	movf	?_strstr^0,w,c
  4577  000310  100E               	iorwf	(?_strstr+1)^0,w,c
  4578  000312  B4D8               	btfsc	status,2,c
  4579  000314  D150               	goto	l17096
  4580                           
  4581                           ;../app/app_src/application.c: 926:           cmdSetCADRSSI(atCommand);
  4582  000316  0E24               	movlw	low _atCommand
  4583  000318  6E58               	movwf	cmdSetCADRSSI@atCommand^0,c
  4584  00031A  0E02               	movlw	high _atCommand
  4585  00031C  6E59               	movwf	(cmdSetCADRSSI@atCommand+1)^0,c
  4586  00031E  EC67  F039         	call	_cmdSetCADRSSI	;wreg free
  4587                           
  4588                           ;../app/app_src/application.c: 927:          }
  4589  000322  0012               	return	
  4590  000324                     l17024:
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;../app/app_src/application.c: 933:             if(strstr(atCommand,"+HOPS?")){
  4594  000324  0E24               	movlw	low _atCommand
  4595  000326  6E0D               	movwf	strstr@h^0,c
  4596  000328  0E02               	movlw	high _atCommand
  4597  00032A  6E0E               	movwf	(strstr@h+1)^0,c
  4598  00032C  0E92               	movlw	low STR_98
  4599  00032E  6E0F               	movwf	strstr@n^0,c
  4600  000330  0EFF               	movlw	high STR_98
  4601  000332  6E10               	movwf	(strstr@n+1)^0,c
  4602  000334  EC93  F032         	call	_strstr	;wreg free
  4603  000338  500D               	movf	?_strstr^0,w,c
  4604  00033A  100E               	iorwf	(?_strstr+1)^0,w,c
  4605  00033C  B4D8               	btfsc	status,2,c
  4606  00033E  D003               	goto	l17028
  4607  000340                     u17470:
  4608                           
  4609                           ;../app/app_src/application.c: 934:                 cmdGetTTL();
  4610  000340  EC10  F04D         	call	_cmdGetTTL	;wreg free
  4611                           
  4612                           ;../app/app_src/application.c: 935:             }
  4613  000344  0012               	return	
  4614  000346                     l17028:
  4615  000346  0E24               	movlw	low _atCommand
  4616  000348  6E0D               	movwf	strstr@h^0,c
  4617  00034A  0E02               	movlw	high _atCommand
  4618  00034C  6E0E               	movwf	(strstr@h+1)^0,c
  4619  00034E  0E76               	movlw	low STR_100
  4620  000350  6E0F               	movwf	strstr@n^0,c
  4621  000352  0EFF               	movlw	high STR_100
  4622  000354  6E10               	movwf	(strstr@n+1)^0,c
  4623  000356  EC93  F032         	call	_strstr	;wreg free
  4624  00035A  500D               	movf	?_strstr^0,w,c
  4625  00035C  100E               	iorwf	(?_strstr+1)^0,w,c
  4626  00035E  B4D8               	btfsc	status,2,c
  4627  000360  D007               	goto	l17032
  4628  000362                     u17480:
  4629                           
  4630                           ;../app/app_src/application.c: 937:                 cmdSetTTL(atCommand);
  4631  000362  0E24               	movlw	low _atCommand
  4632  000364  6E02               	movwf	cmdSetTTL@cmd^0,c
  4633  000366  0E02               	movlw	high _atCommand
  4634  000368  6E03               	movwf	(cmdSetTTL@cmd+1)^0,c
  4635  00036A  EC0E  F04D         	call	_cmdSetTTL	;wreg free
  4636                           
  4637                           ;../app/app_src/application.c: 938:             }
  4638  00036E  0012               	return	
  4639  000370                     l17032:
  4640  000370  0E24               	movlw	low _atCommand
  4641  000372  6E0D               	movwf	strstr@h^0,c
  4642  000374  0E02               	movlw	high _atCommand
  4643  000376  6E0E               	movwf	(strstr@h+1)^0,c
  4644  000378  0E17               	movlw	low STR_102
  4645  00037A  6E0F               	movwf	strstr@n^0,c
  4646  00037C  0EFF               	movlw	high STR_102
  4647  00037E  6E10               	movwf	(strstr@n+1)^0,c
  4648  000380  EC93  F032         	call	_strstr	;wreg free
  4649  000384  500D               	movf	?_strstr^0,w,c
  4650  000386  100E               	iorwf	(?_strstr+1)^0,w,c
  4651  000388  B4D8               	btfsc	status,2,c
  4652  00038A  D115               	goto	l17096
  4653                           
  4654                           ;../app/app_src/application.c: 940:                 set_hop_table_ttl(atCommand);
  4655  00038C  0E24               	movlw	low _atCommand
  4656  00038E  6E58               	movwf	set_hop_table_ttl@cmd^0,c
  4657  000390  0E02               	movlw	high _atCommand
  4658  000392  6E59               	movwf	(set_hop_table_ttl@cmd+1)^0,c
  4659  000394  EC66  F04C         	call	_set_hop_table_ttl	;wreg free
  4660                           
  4661                           ;../app/app_src/application.c: 941:             }
  4662  000398  0012               	return	
  4663  00039A                     l17036:
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;../app/app_src/application.c: 947:             if(strstr(cmd,"+I")){
  4667  00039A  0060  F2A4  F00D   	movff	executeATCommand@cmd,strstr@h
  4668  0003A0  0060  F2A8  F00E   	movff	executeATCommand@cmd+1,strstr@h+1
  4669  0003A6  0EF9               	movlw	low STR_104
  4670  0003A8  6E0F               	movwf	strstr@n^0,c
  4671  0003AA  0EFF               	movlw	high STR_104
  4672  0003AC  6E10               	movwf	(strstr@n+1)^0,c
  4673  0003AE  EC93  F032         	call	_strstr	;wreg free
  4674  0003B2  500D               	movf	?_strstr^0,w,c
  4675  0003B4  100E               	iorwf	(?_strstr+1)^0,w,c
  4676  0003B6  B4D8               	btfsc	status,2,c
  4677  0003B8  D0FE               	goto	l17096
  4678                           
  4679                           ;../app/app_src/application.c: 948:                 cmdI();
  4680  0003BA  EC00  F04D         	call	_cmdI	;wreg free
  4681                           
  4682                           ;../app/app_src/application.c: 949:             }
  4683  0003BE  0012               	return	
  4684  0003C0                     l17040:
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;../app/app_src/application.c: 955:          if(strstr(atCommand,"+MAC?")){
  4688  0003C0  0E24               	movlw	low _atCommand
  4689  0003C2  6E0D               	movwf	strstr@h^0,c
  4690  0003C4  0E02               	movlw	high _atCommand
  4691  0003C6  6E0E               	movwf	(strstr@h+1)^0,c
  4692  0003C8  0EB3               	movlw	low STR_106
  4693  0003CA  6E0F               	movwf	strstr@n^0,c
  4694  0003CC  0EFF               	movlw	high STR_106
  4695  0003CE  6E10               	movwf	(strstr@n+1)^0,c
  4696  0003D0  EC93  F032         	call	_strstr	;wreg free
  4697  0003D4  500D               	movf	?_strstr^0,w,c
  4698  0003D6  100E               	iorwf	(?_strstr+1)^0,w,c
  4699  0003D8  B4D8               	btfsc	status,2,c
  4700  0003DA  D003               	goto	l17044
  4701                           
  4702                           ;../app/app_src/application.c: 956:           cmdMac();
  4703  0003DC  ECAB  F044         	call	_cmdMac	;wreg free
  4704                           
  4705                           ;../app/app_src/application.c: 957:          }
  4706  0003E0  0012               	return	
  4707  0003E2                     l17044:
  4708  0003E2  0E24               	movlw	low _atCommand
  4709  0003E4  6E0D               	movwf	strstr@h^0,c
  4710  0003E6  0E02               	movlw	high _atCommand
  4711  0003E8  6E0E               	movwf	(strstr@h+1)^0,c
  4712  0003EA  0E7D               	movlw	low STR_108
  4713  0003EC  6E0F               	movwf	strstr@n^0,c
  4714  0003EE  0EFF               	movlw	high STR_108
  4715  0003F0  6E10               	movwf	(strstr@n+1)^0,c
  4716  0003F2  EC93  F032         	call	_strstr	;wreg free
  4717  0003F6  500D               	movf	?_strstr^0,w,c
  4718  0003F8  100E               	iorwf	(?_strstr+1)^0,w,c
  4719  0003FA  B4D8               	btfsc	status,2,c
  4720  0003FC  D0DC               	goto	l17096
  4721                           
  4722                           ;../app/app_src/application.c: 959:           cmdGetMode();
  4723  0003FE  EC7E  F04C         	call	_cmdGetMode	;wreg free
  4724                           
  4725                           ;../app/app_src/application.c: 960:          }
  4726  000402  0012               	return	
  4727  000404                     l17048:
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;../app/app_src/application.c: 966:          if(strstr(atCommand,"+NADDR?")){
  4731  000404  0E24               	movlw	low _atCommand
  4732  000406  6E0D               	movwf	strstr@h^0,c
  4733  000408  0E02               	movlw	high _atCommand
  4734  00040A  6E0E               	movwf	(strstr@h+1)^0,c
  4735  00040C  0E52               	movlw	low STR_110
  4736  00040E  6E0F               	movwf	strstr@n^0,c
  4737  000410  0EFF               	movlw	high STR_110
  4738  000412  6E10               	movwf	(strstr@n+1)^0,c
  4739  000414  EC93  F032         	call	_strstr	;wreg free
  4740  000418  500D               	movf	?_strstr^0,w,c
  4741  00041A  100E               	iorwf	(?_strstr+1)^0,w,c
  4742  00041C  B4D8               	btfsc	status,2,c
  4743  00041E  D003               	goto	l17052
  4744                           
  4745                           ;../app/app_src/application.c: 967:     cmdNaddr();
  4746  000420  ECD0  F04B         	call	_cmdNaddr	;wreg free
  4747                           
  4748                           ;../app/app_src/application.c: 968:    }
  4749  000424  0012               	return	
  4750  000426                     l17052:
  4751  000426  0E24               	movlw	low _atCommand
  4752  000428  6E0D               	movwf	strstr@h^0,c
  4753  00042A  0E02               	movlw	high _atCommand
  4754  00042C  6E0E               	movwf	(strstr@h+1)^0,c
  4755  00042E  0E42               	movlw	low STR_112
  4756  000430  6E0F               	movwf	strstr@n^0,c
  4757  000432  0EFF               	movlw	high STR_112
  4758  000434  6E10               	movwf	(strstr@n+1)^0,c
  4759  000436  EC93  F032         	call	_strstr	;wreg free
  4760  00043A  500D               	movf	?_strstr^0,w,c
  4761  00043C  100E               	iorwf	(?_strstr+1)^0,w,c
  4762  00043E  B4D8               	btfsc	status,2,c
  4763  000440  D0BA               	goto	l17096
  4764                           
  4765                           ;../app/app_src/application.c: 970:     cmdSetNaddr(atCommand);
  4766  000442  0E24               	movlw	low _atCommand
  4767  000444  6E58               	movwf	cmdSetNaddr@cmd^0,c
  4768  000446  0E02               	movlw	high _atCommand
  4769  000448  6E59               	movwf	(cmdSetNaddr@cmd+1)^0,c
  4770  00044A  ECD9  F03E         	call	_cmdSetNaddr	;wreg free
  4771                           
  4772                           ;../app/app_src/application.c: 971:    }
  4773  00044E  0012               	return	
  4774  000450                     l17056:
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;../app/app_src/application.c: 977:             if(strstr(atCommand,"+PARITY=")){
  4778  000450  0E24               	movlw	low _atCommand
  4779  000452  6E0D               	movwf	strstr@h^0,c
  4780  000454  0E02               	movlw	high _atCommand
  4781  000456  6E0E               	movwf	(strstr@h+1)^0,c
  4782  000458  0E20               	movlw	low STR_114
  4783  00045A  6E0F               	movwf	strstr@n^0,c
  4784  00045C  0EFF               	movlw	high STR_114
  4785  00045E  6E10               	movwf	(strstr@n+1)^0,c
  4786  000460  EC93  F032         	call	_strstr	;wreg free
  4787  000464  500D               	movf	?_strstr^0,w,c
  4788  000466  100E               	iorwf	(?_strstr+1)^0,w,c
  4789  000468  B4D8               	btfsc	status,2,c
  4790  00046A  D0A5               	goto	l17096
  4791                           
  4792                           ;../app/app_src/application.c: 978:                 cmdSetParity(atCommand);
  4793  00046C  0E24               	movlw	low _atCommand
  4794  00046E  6E58               	movwf	cmdSetParity@atCommand^0,c
  4795  000470  0E02               	movlw	high _atCommand
  4796  000472  6E59               	movwf	(cmdSetParity@atCommand+1)^0,c
  4797  000474  EC7A  F03C         	call	_cmdSetParity	;wreg free
  4798  000478                     l17060:
  4799                           
  4800                           ;../app/app_src/application.c: 984:          if(strstr(atCommand,"+RECV")){
  4801  000478  0E24               	movlw	low _atCommand
  4802  00047A  6E0D               	movwf	strstr@h^0,c
  4803  00047C  0E02               	movlw	high _atCommand
  4804  00047E  6E0E               	movwf	(strstr@h+1)^0,c
  4805  000480  0ECB               	movlw	low STR_116
  4806  000482  6E0F               	movwf	strstr@n^0,c
  4807  000484  0EFF               	movlw	high STR_116
  4808  000486  6E10               	movwf	(strstr@n+1)^0,c
  4809  000488  EC93  F032         	call	_strstr	;wreg free
  4810  00048C  500D               	movf	?_strstr^0,w,c
  4811  00048E  100E               	iorwf	(?_strstr+1)^0,w,c
  4812  000490  B4D8               	btfsc	status,2,c
  4813  000492  D003               	goto	l17064
  4814                           
  4815                           ;../app/app_src/application.c: 985:           cmdRecv();
  4816  000494  EC1C  F02C         	call	_cmdRecv	;wreg free
  4817                           
  4818                           ;../app/app_src/application.c: 986:          }
  4819  000498  0012               	return	
  4820  00049A                     l17064:
  4821  00049A  0E24               	movlw	low _atCommand
  4822  00049C  6E0D               	movwf	strstr@h^0,c
  4823  00049E  0E02               	movlw	high _atCommand
  4824  0004A0  6E0E               	movwf	(strstr@h+1)^0,c
  4825  0004A2  0E84               	movlw	low STR_118
  4826  0004A4  6E0F               	movwf	strstr@n^0,c
  4827  0004A6  0EFF               	movlw	high STR_118
  4828  0004A8  6E10               	movwf	(strstr@n+1)^0,c
  4829  0004AA  EC93  F032         	call	_strstr	;wreg free
  4830  0004AE  500D               	movf	?_strstr^0,w,c
  4831  0004B0  100E               	iorwf	(?_strstr+1)^0,w,c
  4832  0004B2  B4D8               	btfsc	status,2,c
  4833  0004B4  D003               	goto	l17068
  4834                           
  4835                           ;../app/app_src/application.c: 988:           cmdGetRFCH();
  4836  0004B6  EC67  F04B         	call	_cmdGetRFCH	;wreg free
  4837                           
  4838                           ;../app/app_src/application.c: 989:          }
  4839  0004BA  0012               	return	
  4840  0004BC                     l17068:
  4841  0004BC  0E24               	movlw	low _atCommand
  4842  0004BE  6E0D               	movwf	strstr@h^0,c
  4843  0004C0  0E02               	movlw	high _atCommand
  4844  0004C2  6E0E               	movwf	(strstr@h+1)^0,c
  4845  0004C4  0E68               	movlw	low STR_120
  4846  0004C6  6E0F               	movwf	strstr@n^0,c
  4847  0004C8  0EFF               	movlw	high STR_120
  4848  0004CA  6E10               	movwf	(strstr@n+1)^0,c
  4849  0004CC  EC93  F032         	call	_strstr	;wreg free
  4850  0004D0  500D               	movf	?_strstr^0,w,c
  4851  0004D2  100E               	iorwf	(?_strstr+1)^0,w,c
  4852  0004D4  B4D8               	btfsc	status,2,c
  4853  0004D6  D007               	goto	l17072
  4854                           
  4855                           ;../app/app_src/application.c: 991:           cmdSetRFCH(atCommand);
  4856  0004D8  0E24               	movlw	low _atCommand
  4857  0004DA  6E58               	movwf	cmdSetRFCH@cmd^0,c
  4858  0004DC  0E02               	movlw	high _atCommand
  4859  0004DE  6E59               	movwf	(cmdSetRFCH@cmd+1)^0,c
  4860  0004E0  EC65  F03A         	call	_cmdSetRFCH	;wreg free
  4861                           
  4862                           ;../app/app_src/application.c: 992:          }
  4863  0004E4  0012               	return	
  4864  0004E6                     l17072:
  4865  0004E6  0E24               	movlw	low _atCommand
  4866  0004E8  6E0D               	movwf	strstr@h^0,c
  4867  0004EA  0E02               	movlw	high _atCommand
  4868  0004EC  6E0E               	movwf	(strstr@h+1)^0,c
  4869  0004EE  0EEF               	movlw	low STR_122
  4870  0004F0  6E0F               	movwf	strstr@n^0,c
  4871  0004F2  0EFF               	movlw	high STR_122
  4872  0004F4  6E10               	movwf	(strstr@n+1)^0,c
  4873  0004F6  EC93  F032         	call	_strstr	;wreg free
  4874  0004FA  500D               	movf	?_strstr^0,w,c
  4875  0004FC  100E               	iorwf	(?_strstr+1)^0,w,c
  4876  0004FE  B4D8               	btfsc	status,2,c
  4877  000500  D003               	goto	l17076
  4878                           
  4879                           ;../app/app_src/application.c: 994:           cmdReset();
  4880  000502  EC0C  F04D         	call	_cmdReset	;wreg free
  4881                           
  4882                           ;../app/app_src/application.c: 995:          }
  4883  000506  0012               	return	
  4884  000508                     l17076:
  4885  000508  0E24               	movlw	low _atCommand
  4886  00050A  6E0D               	movwf	strstr@h^0,c
  4887  00050C  0E02               	movlw	high _atCommand
  4888  00050E  6E0E               	movwf	(strstr@h+1)^0,c
  4889  000510  0E99               	movlw	low STR_124
  4890  000512  6E0F               	movwf	strstr@n^0,c
  4891  000514  0EFF               	movlw	high STR_124
  4892  000516  6E10               	movwf	(strstr@n+1)^0,c
  4893  000518  EC93  F032         	call	_strstr	;wreg free
  4894  00051C  500D               	movf	?_strstr^0,w,c
  4895  00051E  100E               	iorwf	(?_strstr+1)^0,w,c
  4896  000520  B4D8               	btfsc	status,2,c
  4897  000522  D049               	goto	l17096
  4898                           
  4899                           ;../app/app_src/application.c: 997:           cmdGetRxCnt(atCommand);
  4900  000524  0E24               	movlw	low _atCommand
  4901  000526  6E58               	movwf	cmdGetRxCnt@atCommand^0,c
  4902  000528  0E02               	movlw	high _atCommand
  4903  00052A  6E59               	movwf	(cmdGetRxCnt@atCommand+1)^0,c
  4904  00052C  ECD0  F044         	call	_cmdGetRxCnt	;wreg free
  4905                           
  4906                           ;../app/app_src/application.c: 998:          }
  4907  000530  0012               	return	
  4908  000532                     l17080:
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;../app/app_src/application.c: 1004:          if(strstr(atCommand,"+TTL?")){
  4912  000532  0E24               	movlw	low _atCommand
  4913  000534  6E0D               	movwf	strstr@h^0,c
  4914  000536  0E02               	movlw	high _atCommand
  4915  000538  6E0E               	movwf	(strstr@h+1)^0,c
  4916  00053A  0EB9               	movlw	low STR_126
  4917  00053C  6E0F               	movwf	strstr@n^0,c
  4918  00053E  0EFF               	movlw	high STR_126
  4919  000540  6E10               	movwf	(strstr@n+1)^0,c
  4920  000542  EC93  F032         	call	_strstr	;wreg free
  4921  000546  500D               	movf	?_strstr^0,w,c
  4922  000548  100E               	iorwf	(?_strstr+1)^0,w,c
  4923  00054A  A4D8               	btfss	status,2,c
  4924  00054C  D6F9               	goto	u17470
  4925  00054E  0E24               	movlw	low _atCommand
  4926  000550  6E0D               	movwf	strstr@h^0,c
  4927  000552  0E02               	movlw	high _atCommand
  4928  000554  6E0E               	movwf	(strstr@h+1)^0,c
  4929  000556  0EAD               	movlw	low STR_128
  4930  000558  6E0F               	movwf	strstr@n^0,c
  4931  00055A  0EFF               	movlw	high STR_128
  4932  00055C  6E10               	movwf	(strstr@n+1)^0,c
  4933  00055E  EC93  F032         	call	_strstr	;wreg free
  4934  000562  500D               	movf	?_strstr^0,w,c
  4935  000564  100E               	iorwf	(?_strstr+1)^0,w,c
  4936  000566  A4D8               	btfss	status,2,c
  4937  000568  D6FC               	goto	u17480
  4938  00056A  0E24               	movlw	low _atCommand
  4939  00056C  6E0D               	movwf	strstr@h^0,c
  4940  00056E  0E02               	movlw	high _atCommand
  4941  000570  6E0E               	movwf	(strstr@h+1)^0,c
  4942  000572  0EFA               	movlw	low STR_130
  4943  000574  6E0F               	movwf	strstr@n^0,c
  4944  000576  0EFE               	movlw	high STR_130
  4945  000578  6E10               	movwf	(strstr@n+1)^0,c
  4946  00057A  EC93  F032         	call	_strstr	;wreg free
  4947  00057E  500D               	movf	?_strstr^0,w,c
  4948  000580  100E               	iorwf	(?_strstr+1)^0,w,c
  4949  000582  B4D8               	btfsc	status,2,c
  4950  000584  D003               	goto	l17092
  4951                           
  4952                           ;../app/app_src/application.c: 1011:           cmdGetTX();
  4953  000586  ECDC  F04B         	call	_cmdGetTX	;wreg free
  4954                           
  4955                           ;../app/app_src/application.c: 1012:          }
  4956  00058A  0012               	return	
  4957  00058C                     l17092:
  4958  00058C  0E24               	movlw	low _atCommand
  4959  00058E  6E0D               	movwf	strstr@h^0,c
  4960  000590  0E02               	movlw	high _atCommand
  4961  000592  6E0E               	movwf	(strstr@h+1)^0,c
  4962  000594  0EE6               	movlw	low STR_132
  4963  000596  6E0F               	movwf	strstr@n^0,c
  4964  000598  0EFE               	movlw	high STR_132
  4965  00059A  6E10               	movwf	(strstr@n+1)^0,c
  4966  00059C  EC93  F032         	call	_strstr	;wreg free
  4967  0005A0  500D               	movf	?_strstr^0,w,c
  4968  0005A2  100E               	iorwf	(?_strstr+1)^0,w,c
  4969  0005A4  B4D8               	btfsc	status,2,c
  4970  0005A6  D007               	goto	l17096
  4971                           
  4972                           ;../app/app_src/application.c: 1014:           cmdSetTX(atCommand);
  4973  0005A8  0E24               	movlw	low _atCommand
  4974  0005AA  6E58               	movwf	cmdSetTX@cmd^0,c
  4975  0005AC  0E02               	movlw	high _atCommand
  4976  0005AE  6E59               	movwf	(cmdSetTX@cmd+1)^0,c
  4977  0005B0  ECD5  F030         	call	_cmdSetTX	;wreg free
  4978                           
  4979                           ;../app/app_src/application.c: 1015:          }
  4980  0005B4  0012               	return	
  4981  0005B6                     l17096:
  4982                           
  4983                           ;../app/app_src/application.c: 1024:             printf("NOT OK:%u\r\n", (uint16_t)UNDEF
      +                          CMD);
  4984  0005B6  0EC5               	movlw	low STR_3
  4985  0005B8  0100               	movlb	0	; () banked
  4986  0005BA  6F75               	movwf	printf@fmt& (0+255),b
  4987  0005BC  0EFE               	movlw	high STR_3
  4988  0005BE  6F76               	movwf	(printf@fmt+1)& (0+255),b
  4989  0005C0  0E00               	movlw	0
  4990  0005C2  6F78               	movwf	(?_printf+3)& (0+255),b
  4991  0005C4  0E09               	movlw	9
  4992  0005C6  6F77               	movwf	(?_printf+2)& (0+255),b
  4993  0005C8  EC60  F04A         	call	_printf	;wreg free
  4994                           
  4995                           ;../app/app_src/application.c: 1025:             break;
  4996  0005CC  0012               	return	
  4997  0005CE                     l17100:
  4998                           
  4999                           ; BSR set to: 0
  5000  0005CE  EE20 F001          	lfsr	2,1
  5001  0005D2  51A9               	movf	executeATCommand@cmd& (0+255),w,b
  5002  0005D4  26D9               	addwf	fsr2l,f,c
  5003  0005D6  51AA               	movf	(executeATCommand@cmd+1)& (0+255),w,b
  5004  0005D8  22DA               	addwfc	fsr2h,f,c
  5005  0005DA  50DF               	movf	indf2,w,c
  5006  0005DC  6FAB               	movwf	??_executeATCommand& (0+255),b
  5007  0005DE  6BAC               	clrf	(??_executeATCommand+1)& (0+255),b
  5008                           
  5009                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5010                           ; Switch size 1, requested type "simple"
  5011                           ; Number of cases is 1, Range of values is 0 to 0
  5012                           ; switch strategies available:
  5013                           ; Name         Instructions Cycles
  5014                           ; simple_byte            4     3 (average)
  5015                           ;	Chosen strategy is simple_byte
  5016  0005E0  51AC               	movf	(??_executeATCommand+1)& (0+255),w,b
  5017  0005E2  0A00               	xorlw	0	; case 0
  5018  0005E4  A4D8               	btfss	status,2,c
  5019  0005E6  D7E7               	goto	l17096
  5020                           
  5021                           ; BSR set to: 0
  5022                           ; Switch size 1, requested type "simple"
  5023                           ; Number of cases is 11, Range of values is 65 to 84
  5024                           ; switch strategies available:
  5025                           ; Name         Instructions Cycles
  5026                           ; simple_byte           34    18 (average)
  5027                           ;	Chosen strategy is simple_byte
  5028  0005E8  51AB               	movf	??_executeATCommand& (0+255),w,b
  5029  0005EA  0A41               	xorlw	65	; case 65
  5030  0005EC  B4D8               	btfsc	status,2,c
  5031  0005EE  D617               	goto	l16996
  5032  0005F0  0A03               	xorlw	3	; case 66
  5033  0005F2  B4D8               	btfsc	status,2,c
  5034  0005F4  D5D7               	goto	l16984
  5035  0005F6  0A01               	xorlw	1	; case 67
  5036  0005F8  B4D8               	btfsc	status,2,c
  5037  0005FA  D64C               	goto	l17008
  5038  0005FC  0A0B               	xorlw	11	; case 72
  5039  0005FE  B4D8               	btfsc	status,2,c
  5040  000600  D691               	goto	l17024
  5041  000602  0A01               	xorlw	1	; case 73
  5042  000604  B4D8               	btfsc	status,2,c
  5043  000606  D6C9               	goto	l17036
  5044  000608  0A04               	xorlw	4	; case 77
  5045  00060A  B4D8               	btfsc	status,2,c
  5046  00060C  D6D9               	goto	l17040
  5047  00060E  0A03               	xorlw	3	; case 78
  5048  000610  B4D8               	btfsc	status,2,c
  5049  000612  D6F8               	goto	l17048
  5050  000614  0A1E               	xorlw	30	; case 80
  5051  000616  B4D8               	btfsc	status,2,c
  5052  000618  D71B               	goto	l17056
  5053  00061A  0A02               	xorlw	2	; case 82
  5054  00061C  B4D8               	btfsc	status,2,c
  5055  00061E  D72C               	goto	l17060
  5056  000620  0A01               	xorlw	1	; case 83
  5057  000622  B4D8               	btfsc	status,2,c
  5058  000624  D547               	goto	l16960
  5059  000626  0A07               	xorlw	7	; case 84
  5060  000628  B4D8               	btfsc	status,2,c
  5061  00062A  D783               	goto	l17080
  5062  00062C  D7C4               	goto	l17096
  5063  00062E                     __end_of_executeATCommand:
  5064                           	opt callstack 0
  5065                           
  5066 ;; *************** function _set_hop_table_ttl *****************
  5067 ;; Defined at:
  5068 ;;		line 837 in file "../app/app_src/application.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  5071 ;;		 -> atCommand(80), 
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;		None
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  1    wreg      void 
  5076 ;; Registers used:
  5077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 3F/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5086 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5087 ;;Total ram usage:        2 bytes
  5088 ;; Hardware stack levels used:    1
  5089 ;; Hardware stack levels required when called:   16
  5090 ;; This function calls:
  5091 ;;		_printf
  5092 ;; This function is called by:
  5093 ;;		_executeATCommand
  5094 ;; This function uses a non-reentrant model
  5095 ;;
  5096                           
  5097                           	psect	text7
  5098  0098CC                     __ptext7:
  5099                           	opt callstack 0
  5100  0098CC                     _set_hop_table_ttl:
  5101                           	opt callstack 12
  5102                           
  5103                           ;../app/app_src/application.c: 850:     printf("OK\r\n");
  5104                           
  5105                           ;incstack = 0
  5106  0098CC  0ED6               	movlw	low STR_12
  5107  0098CE  0100               	movlb	0	; () banked
  5108  0098D0  6F75               	movwf	printf@fmt& (0+255),b
  5109  0098D2  0EFF               	movlw	high STR_12
  5110  0098D4  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5111  0098D6  EC60  F04A         	call	_printf	;wreg free
  5112                           
  5113                           ; BSR set to: 0
  5114  0098DA  0012               	return		;funcret
  5115  0098DC                     __end_of_set_hop_table_ttl:
  5116                           	opt callstack 0
  5117                           
  5118 ;; *************** function _print_hop_table *****************
  5119 ;; Defined at:
  5120 ;;		line 823 in file "../app/app_src/application.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;  atCommand       2   87[COMRAM] PTR unsigned char 
  5123 ;;		 -> atCommand(80), 
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;  i               1   91[COMRAM] unsigned char 
  5126 ;;  entry           2   89[COMRAM] PTR struct NWK_RouteTabl
  5127 ;;		 -> nwkRouteTable(70), 
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  1    wreg      void 
  5130 ;; Registers used:
  5131 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 3F/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5139 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;      Totals:         5      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;Total ram usage:       15 bytes
  5142 ;; Hardware stack levels used:    1
  5143 ;; Hardware stack levels required when called:   16
  5144 ;; This function calls:
  5145 ;;		_NWK_RouteTable
  5146 ;;		_printf
  5147 ;; This function is called by:
  5148 ;;		_executeATCommand
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text8
  5153  0060C8                     __ptext8:
  5154                           	opt callstack 0
  5155  0060C8                     _print_hop_table:
  5156                           	opt callstack 12
  5157                           
  5158                           ;../app/app_src/application.c: 824:     NWK_RouteTableEntry_t *entry = NWK_RouteTable();
  5159                           
  5160                           ; BSR set to: 0
  5161                           ;incstack = 0
  5162  0060C8  ECEF  F04C         	call	_NWK_RouteTable	;wreg free
  5163  0060CC  0060  F008  F05A   	movff	?_NWK_RouteTable,print_hop_table@entry
  5164  0060D2  0060  F00C  F05B   	movff	?_NWK_RouteTable+1,print_hop_table@entry+1
  5165                           
  5166                           ;../app/app_src/application.c: 825:     for(uint8_t i = 0; i < 10; i++){
  5167  0060D8  0E00               	movlw	0
  5168  0060DA  6E5C               	movwf	print_hop_table@i^0,c
  5169  0060DC                     l16728:
  5170                           
  5171                           ;../app/app_src/application.c: 826:         printf("DST:%04X NXT:%04X SCO:%u LQI:%u\r\n"
      +                          , (entry+i)->dstAddr,
  5172  0060DC  0EB9               	movlw	low STR_64
  5173  0060DE  0100               	movlb	0	; () banked
  5174  0060E0  6F75               	movwf	printf@fmt& (0+255),b
  5175  0060E2  0EFD               	movlw	high STR_64
  5176  0060E4  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5177  0060E6  505C               	movf	print_hop_table@i^0,w,c
  5178  0060E8  0D07               	mullw	7
  5179  0060EA  0060  F168  F07F   	movff	print_hop_table@entry,??_print_hop_table
  5180  0060F0  0060  F16C  F080   	movff	print_hop_table@entry+1,??_print_hop_table+1
  5181  0060F6  50F3               	movf	243,w,c
  5182  0060F8  277F               	addwf	??_print_hop_table& (0+255),f,b
  5183  0060FA  50F4               	movf	244,w,c
  5184  0060FC  2380               	addwfc	(??_print_hop_table+1)& (0+255),f,b
  5185  0060FE  0E01               	movlw	1
  5186  006100  257F               	addwf	??_print_hop_table& (0+255),w,b
  5187  006102  6ED9               	movwf	fsr2l,c
  5188  006104  0E00               	movlw	0
  5189  006106  2180               	addwfc	(??_print_hop_table+1)& (0+255),w,b
  5190  006108  6EDA               	movwf	fsr2h,c
  5191  00610A  006F FF78  F077    	movff	postinc2,?_printf+2
  5192  006110  006F FF74  F078    	movff	postdec2,?_printf+3
  5193  006116  505C               	movf	print_hop_table@i^0,w,c
  5194  006118  0D07               	mullw	7
  5195  00611A  0060  F168  F081   	movff	print_hop_table@entry,??_print_hop_table+2
  5196  006120  0060  F16C  F082   	movff	print_hop_table@entry+1,??_print_hop_table+3
  5197  006126  50F3               	movf	243,w,c
  5198  006128  2781               	addwf	(??_print_hop_table+2)& (0+255),f,b
  5199  00612A  50F4               	movf	244,w,c
  5200  00612C  2382               	addwfc	(??_print_hop_table+3)& (0+255),f,b
  5201  00612E  0E03               	movlw	3
  5202  006130  2581               	addwf	(??_print_hop_table+2)& (0+255),w,b
  5203  006132  6ED9               	movwf	fsr2l,c
  5204  006134  0E00               	movlw	0
  5205  006136  2182               	addwfc	(??_print_hop_table+3)& (0+255),w,b
  5206  006138  6EDA               	movwf	fsr2h,c
  5207  00613A  006F FF78  F079    	movff	postinc2,?_printf+4
  5208  006140  006F FF74  F07A    	movff	postdec2,?_printf+5
  5209  006146  505C               	movf	print_hop_table@i^0,w,c
  5210  006148  0D07               	mullw	7
  5211  00614A  006F FFCC  F083    	movff	prodl,??_print_hop_table+4
  5212  006150  006F FFD0  F084    	movff	prodh,??_print_hop_table+5
  5213  006156  5183               	movf	(??_print_hop_table+4)& (0+255),w,b
  5214  006158  245A               	addwf	print_hop_table@entry^0,w,c
  5215  00615A  6ED9               	movwf	fsr2l,c
  5216  00615C  5184               	movf	(??_print_hop_table+5)& (0+255),w,b
  5217  00615E  205B               	addwfc	(print_hop_table@entry+1)^0,w,c
  5218  006160  6EDA               	movwf	fsr2h,c
  5219  006162  38DF               	swapf	indf2,w,c
  5220  006164  0B0F               	andlw	15
  5221  006166  6F85               	movwf	(??_print_hop_table+6)& (0+255),b
  5222  006168  5185               	movf	(??_print_hop_table+6)& (0+255),w,b
  5223  00616A  6F7B               	movwf	(?_printf+6)& (0+255),b
  5224  00616C  6B7C               	clrf	(?_printf+7)& (0+255),b
  5225  00616E  505C               	movf	print_hop_table@i^0,w,c
  5226  006170  0D07               	mullw	7
  5227  006172  0060  F168  F086   	movff	print_hop_table@entry,??_print_hop_table+7
  5228  006178  0060  F16C  F087   	movff	print_hop_table@entry+1,??_print_hop_table+8
  5229  00617E  50F3               	movf	243,w,c
  5230  006180  2786               	addwf	(??_print_hop_table+7)& (0+255),f,b
  5231  006182  50F4               	movf	244,w,c
  5232  006184  2387               	addwfc	(??_print_hop_table+8)& (0+255),f,b
  5233  006186  0E06               	movlw	6
  5234  006188  2586               	addwf	(??_print_hop_table+7)& (0+255),w,b
  5235  00618A  6ED9               	movwf	fsr2l,c
  5236  00618C  0E00               	movlw	0
  5237  00618E  2187               	addwfc	(??_print_hop_table+8)& (0+255),w,b
  5238  006190  6EDA               	movwf	fsr2h,c
  5239  006192  50DF               	movf	indf2,w,c
  5240  006194  6F88               	movwf	(??_print_hop_table+9)& (0+255),b
  5241  006196  5188               	movf	(??_print_hop_table+9)& (0+255),w,b
  5242  006198  6F7D               	movwf	(?_printf+8)& (0+255),b
  5243  00619A  6B7E               	clrf	(?_printf+9)& (0+255),b
  5244  00619C  EC60  F04A         	call	_printf	;wreg free
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;../app/app_src/application.c: 828:     }
  5248  0061A0  2A5C               	incf	print_hop_table@i^0,f,c
  5249                           
  5250                           ; BSR set to: 0
  5251  0061A2  0E09               	movlw	9
  5252  0061A4  645C               	cpfsgt	print_hop_table@i^0,c
  5253  0061A6  D79A               	goto	l16728
  5254  0061A8  0012               	return	
  5255  0061AA                     __end_of_print_hop_table:
  5256                           	opt callstack 0
  5257                           
  5258 ;; *************** function _NWK_RouteTable *****************
  5259 ;; Defined at:
  5260 ;;		line 157 in file "../nwk/nwk_src/nwkRoute.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;		None
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;		None
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
  5267 ;; Registers used:
  5268 ;;		wreg, status,2, status,0
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5277 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5278 ;;Total ram usage:        2 bytes
  5279 ;; Hardware stack levels used:    1
  5280 ;; Hardware stack levels required when called:    7
  5281 ;; This function calls:
  5282 ;;		Nothing
  5283 ;; This function is called by:
  5284 ;;		_print_hop_table
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           	psect	text9
  5289  0099DE                     __ptext9:
  5290                           	opt callstack 0
  5291  0099DE                     _NWK_RouteTable:
  5292                           	opt callstack 20
  5293                           
  5294                           ;../nwk/nwk_src/nwkRoute.c: 159:   return nwkRouteTable;
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;incstack = 0
  5298  0099DE  0E74               	movlw	low _nwkRouteTable
  5299  0099E0  6E02               	movwf	?_NWK_RouteTable^0,c
  5300  0099E2  0E02               	movlw	high _nwkRouteTable
  5301  0099E4  6E03               	movwf	(?_NWK_RouteTable+1)^0,c
  5302  0099E6  0012               	return		;funcret
  5303  0099E8                     __end_of_NWK_RouteTable:
  5304                           	opt callstack 0
  5305                           
  5306 ;; *************** function _cmdSetTX *****************
  5307 ;; Defined at:
  5308 ;;		line 641 in file "../app/app_src/application.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  5311 ;;		 -> atCommand(80), 
  5312 ;; Auto vars:     Size  Location     Type
  5313 ;;  CHstr           3   36[BANK0 ] unsigned char [3]
  5314 ;;  p1              2   33[BANK0 ] PTR unsigned char 
  5315 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  5316 ;;  p2              2   31[BANK0 ] PTR unsigned char 
  5317 ;;		 -> cmdSetSF@CHstr(3), STR_58(2), STR_57(2), cmdSetCADRSSI@CHstr(3), 
  5318 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5319 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5320 ;;  temp            1   35[BANK0 ] unsigned char 
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  1    wreg      void 
  5323 ;; Registers used:
  5324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 3F/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5330 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5331 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5333 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5334 ;;Total ram usage:       10 bytes
  5335 ;; Hardware stack levels used:    1
  5336 ;; Hardware stack levels required when called:   16
  5337 ;; This function calls:
  5338 ;;		_DATAEE_WriteByte_Platform
  5339 ;;		_initRadio
  5340 ;;		_memcpy
  5341 ;;		_memset
  5342 ;;		_printf
  5343 ;;		_strstr
  5344 ;;		_strtoul
  5345 ;; This function is called by:
  5346 ;;		_executeATCommand
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text10
  5351  0061AA                     __ptext10:
  5352                           	opt callstack 0
  5353  0061AA                     _cmdSetTX:
  5354                           	opt callstack 12
  5355                           
  5356                           ;../app/app_src/application.c: 642:  char *p1,*p2;;../app/app_src/application.c: 643:  c
      +                          har CHstr[3];;../app/app_src/application.c: 644:  uint8_t temp;;../app/app_src/applicati
      +                          on.c: 645:  p1 = strstr(atCommand,"=") + 1;
  5357                           
  5358                           ;incstack = 0
  5359  0061AA  0E24               	movlw	low _atCommand
  5360  0061AC  6E0D               	movwf	strstr@h^0,c
  5361  0061AE  0E02               	movlw	high _atCommand
  5362  0061B0  6E0E               	movwf	(strstr@h+1)^0,c
  5363  0061B2  0EDE               	movlw	low (STR_21+3)
  5364  0061B4  6E0F               	movwf	strstr@n^0,c
  5365  0061B6  0EFF               	movlw	high (STR_21+3)
  5366  0061B8  6E10               	movwf	(strstr@n+1)^0,c
  5367  0061BA  EC93  F032         	call	_strstr	;wreg free
  5368  0061BE  0E01               	movlw	1
  5369  0061C0  240D               	addwf	?_strstr^0,w,c
  5370  0061C2  0100               	movlb	0	; () banked
  5371  0061C4  6F81               	movwf	cmdSetTX@p1& (0+255),b
  5372  0061C6  0E00               	movlw	0
  5373  0061C8  200E               	addwfc	(?_strstr+1)^0,w,c
  5374  0061CA  6F82               	movwf	(cmdSetTX@p1+1)& (0+255),b
  5375                           
  5376                           ; BSR set to: 0
  5377                           ;../app/app_src/application.c: 646:     if(!p1){
  5378  0061CC  5181               	movf	cmdSetTX@p1& (0+255),w,b
  5379  0061CE  1182               	iorwf	(cmdSetTX@p1+1)& (0+255),w,b
  5380  0061D0  A4D8               	btfss	status,2,c
  5381  0061D2  D00A               	goto	l16616
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;../app/app_src/application.c: 647:         printf("NOT OK:%u\r\n",(uint16_t)TXOUTOFBOUN
      +                          DS);
  5385  0061D4  0EC5               	movlw	low STR_3
  5386  0061D6  6F75               	movwf	printf@fmt& (0+255),b
  5387  0061D8  0EFE               	movlw	high STR_3
  5388  0061DA  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5389  0061DC  0E00               	movlw	0
  5390  0061DE  6F78               	movwf	(?_printf+3)& (0+255),b
  5391  0061E0  0E0B               	movlw	11
  5392  0061E2  6F77               	movwf	(?_printf+2)& (0+255),b
  5393  0061E4  EC60  F04A         	call	_printf	;wreg free
  5394  0061E8                     l16616:
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;../app/app_src/application.c: 649:     memset(CHstr, 0 , sizeof(CHstr));
  5398  0061E8  0E84               	movlw	low cmdSetTX@CHstr
  5399  0061EA  6E02               	movwf	memset@dest^0,c
  5400  0061EC  6A03               	clrf	(memset@dest+1)^0,c
  5401  0061EE  0E00               	movlw	0
  5402  0061F0  6E05               	movwf	(memset@c+1)^0,c
  5403  0061F2  0E00               	movlw	0
  5404  0061F4  6E04               	movwf	memset@c^0,c
  5405  0061F6  0E00               	movlw	0
  5406  0061F8  6E07               	movwf	(memset@n+1)^0,c
  5407  0061FA  0E03               	movlw	3
  5408  0061FC  6E06               	movwf	memset@n^0,c
  5409  0061FE  ECBC  F024         	call	_memset	;wreg free
  5410                           
  5411                           ;../app/app_src/application.c: 650:  memcpy(CHstr,p1,2);
  5412  006202  0E84               	movlw	low cmdSetTX@CHstr
  5413  006204  6E08               	movwf	memcpy@d1^0,c
  5414  006206  6A09               	clrf	(memcpy@d1+1)^0,c
  5415  006208  0060  F204  F00A   	movff	cmdSetTX@p1,memcpy@s1
  5416  00620E  0060  F208  F00B   	movff	cmdSetTX@p1+1,memcpy@s1+1
  5417  006214  0E00               	movlw	0
  5418  006216  6E0D               	movwf	(memcpy@n+1)^0,c
  5419  006218  0E02               	movlw	2
  5420  00621A  6E0C               	movwf	memcpy@n^0,c
  5421  00621C  EC95  F03F         	call	_memcpy	;wreg free
  5422                           
  5423                           ;../app/app_src/application.c: 651:  temp = (uint8_t)strtoul(CHstr,&p2,10);
  5424  006220  0E84               	movlw	low cmdSetTX@CHstr
  5425  006222  6E34               	movwf	strtoul@s^0,c
  5426  006224  6A35               	clrf	(strtoul@s+1)^0,c
  5427  006226  0E7F               	movlw	low cmdSetTX@p2
  5428  006228  6E36               	movwf	strtoul@endptr^0,c
  5429  00622A  6A37               	clrf	(strtoul@endptr+1)^0,c
  5430  00622C  0E00               	movlw	0
  5431  00622E  6E39               	movwf	(strtoul@base+1)^0,c
  5432  006230  0E0A               	movlw	10
  5433  006232  6E38               	movwf	strtoul@base^0,c
  5434  006234  EC1A  F045         	call	_strtoul	;wreg free
  5435  006238  5034               	movf	?_strtoul^0,w,c
  5436  00623A  0100               	movlb	0	; () banked
  5437  00623C  6F83               	movwf	cmdSetTX@temp& (0+255),b
  5438                           
  5439                           ; BSR set to: 0
  5440                           ;../app/app_src/application.c: 652:  if((temp > 13) || (temp < 2)){
  5441  00623E  0E0E               	movlw	14
  5442  006240  6183               	cpfslt	cmdSetTX@temp& (0+255),b
  5443  006242  D003               	goto	u16930
  5444                           
  5445                           ; BSR set to: 0
  5446  006244  0E02               	movlw	2
  5447  006246  6183               	cpfslt	cmdSetTX@temp& (0+255),b
  5448  006248  D00B               	goto	l370
  5449  00624A                     u16930:
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;../app/app_src/application.c: 653:   printf("NOT OK:%u\r\n",(uint16_t)TXOUTOFBOUNDS);
  5453  00624A  0EC5               	movlw	low STR_3
  5454  00624C  6F75               	movwf	printf@fmt& (0+255),b
  5455  00624E  0EFE               	movlw	high STR_3
  5456  006250  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5457  006252  0E00               	movlw	0
  5458  006254  6F78               	movwf	(?_printf+3)& (0+255),b
  5459  006256  0E0B               	movlw	11
  5460  006258  6F77               	movwf	(?_printf+2)& (0+255),b
  5461  00625A  EC60  F04A         	call	_printf	;wreg free
  5462                           
  5463                           ;../app/app_src/application.c: 654:  }
  5464  00625E  0012               	return	
  5465  006260                     l370:
  5466                           
  5467                           ; BSR set to: 0
  5468                           ;../app/app_src/application.c: 656:   TXPower = temp;
  5469  006260  0060  F20C  F0D4   	movff	cmdSetTX@temp,_TXPower
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;../app/app_src/application.c: 657:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1,TXPower);
  5473  006266  0E00               	movlw	0
  5474  006268  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5475  00626A  0E1D               	movlw	29
  5476  00626C  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5477  00626E  0060  F350  F008   	movff	_TXPower,DATAEE_WriteByte_Platform@data
  5478  006274  EC82  F045         	call	_DATAEE_WriteByte_Platform	;wreg free
  5479                           
  5480                           ;../app/app_src/application.c: 658:   initRadio();
  5481  006278  EC61  F023         	call	_initRadio	;wreg free
  5482                           
  5483                           ; BSR set to: 1
  5484                           ;../app/app_src/application.c: 659:   printf("OK\r\n");
  5485  00627C  0ED6               	movlw	low STR_12
  5486  00627E  0100               	movlb	0	; () banked
  5487  006280  6F75               	movwf	printf@fmt& (0+255),b
  5488  006282  0EFF               	movlw	high STR_12
  5489  006284  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5490  006286  EC60  F04A         	call	_printf	;wreg free
  5491                           
  5492                           ; BSR set to: 0
  5493  00628A  0012               	return		;funcret
  5494  00628C                     __end_of_cmdSetTX:
  5495                           	opt callstack 0
  5496                           
  5497 ;; *************** function _cmdSetTTL *****************
  5498 ;; Defined at:
  5499 ;;		line 539 in file "../app/app_src/application.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;  cmd             2    1[COMRAM] PTR unsigned char 
  5502 ;;		 -> atCommand(80), 
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;		None
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  1    wreg      void 
  5507 ;; Registers used:
  5508 ;;		None
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5514 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5517 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5518 ;;Total ram usage:        2 bytes
  5519 ;; Hardware stack levels used:    1
  5520 ;; Hardware stack levels required when called:    7
  5521 ;; This function calls:
  5522 ;;		Nothing
  5523 ;; This function is called by:
  5524 ;;		_executeATCommand
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           	psect	text11
  5529  009A1C                     __ptext11:
  5530                           	opt callstack 0
  5531  009A1C                     _cmdSetTTL:
  5532                           	opt callstack 21
  5533                           
  5534                           ;../app/app_src/application.c: 546:  return;
  5535                           
  5536                           ; BSR set to: 0
  5537                           ;incstack = 0
  5538  009A1C  0012               	return		;funcret
  5539  009A1E                     __end_of_cmdSetTTL:
  5540                           	opt callstack 0
  5541                           
  5542 ;; *************** function _cmdSetSink *****************
  5543 ;; Defined at:
  5544 ;;		line 427 in file "../app/app_src/application.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;		None
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;		None
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      void 
  5551 ;; Registers used:
  5552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 3F/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;Total ram usage:        0 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:   16
  5565 ;; This function calls:
  5566 ;;		_printf
  5567 ;; This function is called by:
  5568 ;;		_executeATCommand
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           	psect	text12
  5573  0098DC                     __ptext12:
  5574                           	opt callstack 0
  5575  0098DC                     _cmdSetSink:
  5576                           	opt callstack 12
  5577                           
  5578                           ;../app/app_src/application.c: 441:  printf("OK\r\n");
  5579                           
  5580                           ;incstack = 0
  5581  0098DC  0ED6               	movlw	low STR_12
  5582  0098DE  0100               	movlb	0	; () banked
  5583  0098E0  6F75               	movwf	printf@fmt& (0+255),b
  5584  0098E2  0EFF               	movlw	high STR_12
  5585  0098E4  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5586  0098E6  EC60  F04A         	call	_printf	;wreg free
  5587                           
  5588                           ; BSR set to: 0
  5589  0098EA  0012               	return		;funcret
  5590  0098EC                     __end_of_cmdSetSink:
  5591                           	opt callstack 0
  5592                           
  5593 ;; *************** function _cmdSetSF *****************
  5594 ;; Defined at:
  5595 ;;		line 782 in file "../app/app_src/application.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  atCommand       2   87[COMRAM] PTR unsigned char 
  5598 ;;		 -> atCommand(80), 
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;  CHstr           3   33[BANK0 ] unsigned char [3]
  5601 ;;  p2              2   36[BANK0 ] PTR unsigned char 
  5602 ;;		 -> cmdSetSF@CHstr(3), STR_58(2), STR_57(2), cmdSetCADRSSI@CHstr(3), 
  5603 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5604 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5605 ;;  p1              2   31[BANK0 ] PTR unsigned char 
  5606 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  5607 ;;  temp            1   38[BANK0 ] char 
  5608 ;; Return value:  Size  Location     Type
  5609 ;;                  1    wreg      void 
  5610 ;; Registers used:
  5611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 3F/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5618 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5620 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5621 ;;Total ram usage:       10 bytes
  5622 ;; Hardware stack levels used:    1
  5623 ;; Hardware stack levels required when called:   16
  5624 ;; This function calls:
  5625 ;;		_DATAEE_WriteByte_Platform
  5626 ;;		_initRadio
  5627 ;;		_memcpy
  5628 ;;		_printf
  5629 ;;		_strstr
  5630 ;;		_strtol
  5631 ;; This function is called by:
  5632 ;;		_executeATCommand
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text13
  5637  00721E                     __ptext13:
  5638                           	opt callstack 0
  5639  00721E                     _cmdSetSF:
  5640                           	opt callstack 12
  5641                           
  5642                           ;../app/app_src/application.c: 783:  char *p1,*p2;;../app/app_src/application.c: 784:  c
      +                          har CHstr[3];;../app/app_src/application.c: 785:  int8_t temp;;../app/app_src/applicatio
      +                          n.c: 786:  p1 = strstr(atCommand,"=") + 1;
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;incstack = 0
  5646  00721E  0060  F160  F00D   	movff	cmdSetSF@atCommand,strstr@h
  5647  007224  0060  F164  F00E   	movff	cmdSetSF@atCommand+1,strstr@h+1
  5648  00722A  0EDE               	movlw	low (STR_21+3)
  5649  00722C  6E0F               	movwf	strstr@n^0,c
  5650  00722E  0EFF               	movlw	high (STR_21+3)
  5651  007230  6E10               	movwf	(strstr@n+1)^0,c
  5652  007232  EC93  F032         	call	_strstr	;wreg free
  5653  007236  0E01               	movlw	1
  5654  007238  240D               	addwf	?_strstr^0,w,c
  5655  00723A  0100               	movlb	0	; () banked
  5656  00723C  6F7F               	movwf	cmdSetSF@p1& (0+255),b
  5657  00723E  0E00               	movlw	0
  5658  007240  200E               	addwfc	(?_strstr+1)^0,w,c
  5659  007242  6F80               	movwf	(cmdSetSF@p1+1)& (0+255),b
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;../app/app_src/application.c: 787:  memcpy(CHstr,p1,2);
  5663  007244  0E81               	movlw	low cmdSetSF@CHstr
  5664  007246  6E08               	movwf	memcpy@d1^0,c
  5665  007248  6A09               	clrf	(memcpy@d1+1)^0,c
  5666  00724A  0060  F1FC  F00A   	movff	cmdSetSF@p1,memcpy@s1
  5667  007250  0060  F200  F00B   	movff	cmdSetSF@p1+1,memcpy@s1+1
  5668  007256  0E00               	movlw	0
  5669  007258  6E0D               	movwf	(memcpy@n+1)^0,c
  5670  00725A  0E02               	movlw	2
  5671  00725C  6E0C               	movwf	memcpy@n^0,c
  5672  00725E  EC95  F03F         	call	_memcpy	;wreg free
  5673                           
  5674                           ;../app/app_src/application.c: 788:  temp = (uint8_t)strtol(CHstr,&p2,16);
  5675  007262  0E81               	movlw	low cmdSetSF@CHstr
  5676  007264  6E34               	movwf	strtol@s^0,c
  5677  007266  0E84               	movlw	low cmdSetSF@p2
  5678  007268  6E35               	movwf	strtol@endptr^0,c
  5679  00726A  0E00               	movlw	0
  5680  00726C  6E37               	movwf	(strtol@base+1)^0,c
  5681  00726E  0E10               	movlw	16
  5682  007270  6E36               	movwf	strtol@base^0,c
  5683  007272  EC69  F046         	call	_strtol	;wreg free
  5684  007276  5034               	movf	?_strtol^0,w,c
  5685  007278  0100               	movlb	0	; () banked
  5686  00727A  6F86               	movwf	cmdSetSF@temp& (0+255),b
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;../app/app_src/application.c: 789:  if((temp > 12) || (temp < 7)){
  5690  00727C  5186               	movf	cmdSetSF@temp& (0+255),w,b
  5691  00727E  0A80               	xorlw	128
  5692  007280  0F73               	addlw	-141
  5693  007282  B0D8               	btfsc	status,0,c
  5694  007284  D005               	goto	u17000
  5695                           
  5696                           ; BSR set to: 0
  5697  007286  5186               	movf	cmdSetSF@temp& (0+255),w,b
  5698  007288  0A80               	xorlw	128
  5699  00728A  0F79               	addlw	-135
  5700  00728C  B0D8               	btfsc	status,0,c
  5701  00728E  D009               	goto	l411
  5702  007290                     u17000:
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;../app/app_src/application.c: 790:   printf("NOT OK:%u\r\n", ILLEGALPARAMETER);
  5706  007290  0EC5               	movlw	low STR_3
  5707  007292  6F75               	movwf	printf@fmt& (0+255),b
  5708  007294  0EFE               	movlw	high STR_3
  5709  007296  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5710  007298  0E0D               	movlw	13
  5711  00729A  6F77               	movwf	(?_printf+2)& (0+255),b
  5712  00729C  EC60  F04A         	call	_printf	;wreg free
  5713                           
  5714                           ;../app/app_src/application.c: 791:  }
  5715  0072A0  0012               	return	
  5716  0072A2                     l411:
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;../app/app_src/application.c: 793:   current_sf = temp;
  5720  0072A2  0060  F218  F0D7   	movff	cmdSetSF@temp,_current_sf
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;../app/app_src/application.c: 794:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1,temp);
  5724  0072A8  0E00               	movlw	0
  5725  0072AA  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5726  0072AC  0E21               	movlw	33
  5727  0072AE  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5728  0072B0  0060  F218  F008   	movff	cmdSetSF@temp,DATAEE_WriteByte_Platform@data
  5729  0072B6  EC82  F045         	call	_DATAEE_WriteByte_Platform	;wreg free
  5730                           
  5731                           ;../app/app_src/application.c: 795:   initRadio();
  5732  0072BA  EC61  F023         	call	_initRadio	;wreg free
  5733                           
  5734                           ; BSR set to: 1
  5735                           ;../app/app_src/application.c: 796:   printf("OK\r\n");
  5736  0072BE  0ED6               	movlw	low STR_12
  5737  0072C0  0100               	movlb	0	; () banked
  5738  0072C2  6F75               	movwf	printf@fmt& (0+255),b
  5739  0072C4  0EFF               	movlw	high STR_12
  5740  0072C6  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5741  0072C8  EC60  F04A         	call	_printf	;wreg free
  5742                           
  5743                           ; BSR set to: 0
  5744  0072CC  0012               	return		;funcret
  5745  0072CE                     __end_of_cmdSetSF:
  5746                           	opt callstack 0
  5747                           
  5748 ;; *************** function _cmdSetRFCH *****************
  5749 ;; Defined at:
  5750 ;;		line 605 in file "../app/app_src/application.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  5753 ;;		 -> atCommand(80), 
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;  CHstr           3   33[BANK0 ] unsigned char [3]
  5756 ;;  p2              2   36[BANK0 ] PTR unsigned char 
  5757 ;;		 -> cmdSetSF@CHstr(3), STR_58(2), STR_57(2), cmdSetCADRSSI@CHstr(3), 
  5758 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5759 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5760 ;;  p1              2   31[BANK0 ] PTR unsigned char 
  5761 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  5762 ;;  temp            1   38[BANK0 ] unsigned char 
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  1    wreg      void 
  5765 ;; Registers used:
  5766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 3F/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5773 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5775 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5776 ;;Total ram usage:       10 bytes
  5777 ;; Hardware stack levels used:    1
  5778 ;; Hardware stack levels required when called:   16
  5779 ;; This function calls:
  5780 ;;		_DATAEE_WriteByte_Platform
  5781 ;;		_initRadio
  5782 ;;		_memcpy
  5783 ;;		_printf
  5784 ;;		_strstr
  5785 ;;		_strtoul
  5786 ;; This function is called by:
  5787 ;;		_executeATCommand
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           	psect	text14
  5792  0074CA                     __ptext14:
  5793                           	opt callstack 0
  5794  0074CA                     _cmdSetRFCH:
  5795                           	opt callstack 12
  5796                           
  5797                           ;../app/app_src/application.c: 606:  char *p1,*p2;;../app/app_src/application.c: 607:  c
      +                          har CHstr[3];;../app/app_src/application.c: 608:  uint8_t temp;;../app/app_src/applicati
      +                          on.c: 609:  p1 = strstr(atCommand,"=") + 1;
  5798                           
  5799                           ; BSR set to: 0
  5800                           ;incstack = 0
  5801  0074CA  0E24               	movlw	low _atCommand
  5802  0074CC  6E0D               	movwf	strstr@h^0,c
  5803  0074CE  0E02               	movlw	high _atCommand
  5804  0074D0  6E0E               	movwf	(strstr@h+1)^0,c
  5805  0074D2  0EDE               	movlw	low (STR_21+3)
  5806  0074D4  6E0F               	movwf	strstr@n^0,c
  5807  0074D6  0EFF               	movlw	high (STR_21+3)
  5808  0074D8  6E10               	movwf	(strstr@n+1)^0,c
  5809  0074DA  EC93  F032         	call	_strstr	;wreg free
  5810  0074DE  0E01               	movlw	1
  5811  0074E0  240D               	addwf	?_strstr^0,w,c
  5812  0074E2  0100               	movlb	0	; () banked
  5813  0074E4  6F7F               	movwf	cmdSetRFCH@p1& (0+255),b
  5814  0074E6  0E00               	movlw	0
  5815  0074E8  200E               	addwfc	(?_strstr+1)^0,w,c
  5816  0074EA  6F80               	movwf	(cmdSetRFCH@p1+1)& (0+255),b
  5817                           
  5818                           ; BSR set to: 0
  5819                           ;../app/app_src/application.c: 610:  memcpy(CHstr,p1,2);
  5820  0074EC  0E81               	movlw	low cmdSetRFCH@CHstr
  5821  0074EE  6E08               	movwf	memcpy@d1^0,c
  5822  0074F0  6A09               	clrf	(memcpy@d1+1)^0,c
  5823  0074F2  0060  F1FC  F00A   	movff	cmdSetRFCH@p1,memcpy@s1
  5824  0074F8  0060  F200  F00B   	movff	cmdSetRFCH@p1+1,memcpy@s1+1
  5825  0074FE  0E00               	movlw	0
  5826  007500  6E0D               	movwf	(memcpy@n+1)^0,c
  5827  007502  0E02               	movlw	2
  5828  007504  6E0C               	movwf	memcpy@n^0,c
  5829  007506  EC95  F03F         	call	_memcpy	;wreg free
  5830                           
  5831                           ;../app/app_src/application.c: 611:  temp = (uint8_t)strtoul(CHstr,&p2,16) - 1;
  5832  00750A  0E81               	movlw	low cmdSetRFCH@CHstr
  5833  00750C  6E34               	movwf	strtoul@s^0,c
  5834  00750E  6A35               	clrf	(strtoul@s+1)^0,c
  5835  007510  0E84               	movlw	low cmdSetRFCH@p2
  5836  007512  6E36               	movwf	strtoul@endptr^0,c
  5837  007514  6A37               	clrf	(strtoul@endptr+1)^0,c
  5838  007516  0E00               	movlw	0
  5839  007518  6E39               	movwf	(strtoul@base+1)^0,c
  5840  00751A  0E10               	movlw	16
  5841  00751C  6E38               	movwf	strtoul@base^0,c
  5842  00751E  EC1A  F045         	call	_strtoul	;wreg free
  5843  007522  0434               	decf	?_strtoul^0,w,c
  5844  007524  0100               	movlb	0	; () banked
  5845  007526  6F86               	movwf	cmdSetRFCH@temp& (0+255),b
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;../app/app_src/application.c: 612:  if(temp > sizeof(fhssList)){
  5849  007528  0EFC               	movlw	252
  5850  00752A  6586               	cpfsgt	cmdSetRFCH@temp& (0+255),b
  5851  00752C  D009               	goto	l361
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;../app/app_src/application.c: 613:   printf("NOT OK:%u\r\n",CHOUTOFBOUNDS);
  5855  00752E  0EC5               	movlw	low STR_3
  5856  007530  6F75               	movwf	printf@fmt& (0+255),b
  5857  007532  0EFE               	movlw	high STR_3
  5858  007534  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5859  007536  0E0A               	movlw	10
  5860  007538  6F77               	movwf	(?_printf+2)& (0+255),b
  5861  00753A  EC60  F04A         	call	_printf	;wreg free
  5862                           
  5863                           ;../app/app_src/application.c: 614:  }
  5864  00753E  0012               	return	
  5865  007540                     l361:
  5866                           
  5867                           ; BSR set to: 0
  5868                           ;../app/app_src/application.c: 616:   channel = temp;
  5869  007540  0060  F218  F0D6   	movff	cmdSetRFCH@temp,_channel
  5870                           
  5871                           ; BSR set to: 0
  5872                           ;../app/app_src/application.c: 617:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1,channel);
  5873  007546  0E00               	movlw	0
  5874  007548  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5875  00754A  0E1C               	movlw	28
  5876  00754C  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5877  00754E  0060  F358  F008   	movff	_channel,DATAEE_WriteByte_Platform@data
  5878  007554  EC82  F045         	call	_DATAEE_WriteByte_Platform	;wreg free
  5879                           
  5880                           ;../app/app_src/application.c: 618:   initRadio();
  5881  007558  EC61  F023         	call	_initRadio	;wreg free
  5882                           
  5883                           ; BSR set to: 1
  5884                           ;../app/app_src/application.c: 619:         printf("OK\r\n");
  5885  00755C  0ED6               	movlw	low STR_12
  5886  00755E  0100               	movlb	0	; () banked
  5887  007560  6F75               	movwf	printf@fmt& (0+255),b
  5888  007562  0EFF               	movlw	high STR_12
  5889  007564  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5890  007566  EC60  F04A         	call	_printf	;wreg free
  5891                           
  5892                           ; BSR set to: 0
  5893  00756A  0012               	return		;funcret
  5894  00756C                     __end_of_cmdSetRFCH:
  5895                           	opt callstack 0
  5896                           
  5897 ;; *************** function _cmdSetParity *****************
  5898 ;; Defined at:
  5899 ;;		line 717 in file "../app/app_src/application.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;  atCommand       2   87[COMRAM] PTR unsigned char 
  5902 ;;		 -> atCommand(80), 
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;		None
  5905 ;; Return value:  Size  Location     Type
  5906 ;;                  1    wreg      void 
  5907 ;; Registers used:
  5908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5909 ;; Tracked objects:
  5910 ;;		On entry : 0/0
  5911 ;;		On exit  : 0/0
  5912 ;;		Unchanged: 0/0
  5913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5917 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5918 ;;Total ram usage:        2 bytes
  5919 ;; Hardware stack levels used:    1
  5920 ;; Hardware stack levels required when called:   16
  5921 ;; This function calls:
  5922 ;;		_printf
  5923 ;;		_set_parity
  5924 ;;		_strstr
  5925 ;; This function is called by:
  5926 ;;		_executeATCommand
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           	psect	text15
  5931  0078F4                     __ptext15:
  5932                           	opt callstack 0
  5933  0078F4                     _cmdSetParity:
  5934                           	opt callstack 12
  5935                           
  5936                           ;../app/app_src/application.c: 718:     if(strstr(atCommand,"=ODD"))
  5937                           
  5938                           ; BSR set to: 0
  5939                           ;incstack = 0
  5940  0078F4  0060  F160  F00D   	movff	cmdSetParity@atCommand,strstr@h
  5941  0078FA  0060  F164  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  5942  007900  0EEA               	movlw	low STR_49
  5943  007902  6E0F               	movwf	strstr@n^0,c
  5944  007904  0EFF               	movlw	high STR_49
  5945  007906  6E10               	movwf	(strstr@n+1)^0,c
  5946  007908  EC93  F032         	call	_strstr	;wreg free
  5947  00790C  500D               	movf	?_strstr^0,w,c
  5948  00790E  100E               	iorwf	(?_strstr+1)^0,w,c
  5949  007910  B4D8               	btfsc	status,2,c
  5950  007912  D004               	goto	l16666
  5951                           
  5952                           ;../app/app_src/application.c: 719:     {;../app/app_src/application.c: 720:         set
      +                          _parity(UART_9BIT_ODD_PARITY);
  5953  007914  0E02               	movlw	2
  5954  007916  ECFD  F041         	call	_set_parity
  5955                           
  5956                           ;../app/app_src/application.c: 721:     }
  5957  00791A  0012               	return	
  5958  00791C                     l16666:
  5959  00791C  0060  F160  F00D   	movff	cmdSetParity@atCommand,strstr@h
  5960  007922  0060  F164  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  5961  007928  0EBF               	movlw	low STR_51
  5962  00792A  6E0F               	movwf	strstr@n^0,c
  5963  00792C  0EFF               	movlw	high STR_51
  5964  00792E  6E10               	movwf	(strstr@n+1)^0,c
  5965  007930  EC93  F032         	call	_strstr	;wreg free
  5966  007934  500D               	movf	?_strstr^0,w,c
  5967  007936  100E               	iorwf	(?_strstr+1)^0,w,c
  5968  007938  B4D8               	btfsc	status,2,c
  5969  00793A  D004               	goto	l16670
  5970                           
  5971                           ;../app/app_src/application.c: 723:     {;../app/app_src/application.c: 724:         set
      +                          _parity(UART_8BIT_NO_PARITY);
  5972  00793C  0E00               	movlw	0
  5973  00793E  ECFD  F041         	call	_set_parity
  5974                           
  5975                           ;../app/app_src/application.c: 725:     }
  5976  007942  0012               	return	
  5977  007944                     l16670:
  5978  007944  0060  F160  F00D   	movff	cmdSetParity@atCommand,strstr@h
  5979  00794A  0060  F164  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  5980  007950  0EC5               	movlw	low STR_53
  5981  007952  6E0F               	movwf	strstr@n^0,c
  5982  007954  0EFF               	movlw	high STR_53
  5983  007956  6E10               	movwf	(strstr@n+1)^0,c
  5984  007958  EC93  F032         	call	_strstr	;wreg free
  5985  00795C  500D               	movf	?_strstr^0,w,c
  5986  00795E  100E               	iorwf	(?_strstr+1)^0,w,c
  5987  007960  B4D8               	btfsc	status,2,c
  5988  007962  D004               	goto	l16674
  5989                           
  5990                           ;../app/app_src/application.c: 727:     {;../app/app_src/application.c: 728:         set
      +                          _parity(UART_9BIT_EVEN_PARITY);
  5991  007964  0E03               	movlw	3
  5992  007966  ECFD  F041         	call	_set_parity
  5993                           
  5994                           ;../app/app_src/application.c: 729:     }
  5995  00796A  0012               	return	
  5996  00796C                     l16674:
  5997                           
  5998                           ;../app/app_src/application.c: 731:     {;../app/app_src/application.c: 732:         pri
      +                          ntf("NOT OK:%u\r\n",ILLEGALPARAMETER);
  5999  00796C  0EC5               	movlw	low STR_3
  6000  00796E  0100               	movlb	0	; () banked
  6001  007970  6F75               	movwf	printf@fmt& (0+255),b
  6002  007972  0EFE               	movlw	high STR_3
  6003  007974  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6004  007976  0E0D               	movlw	13
  6005  007978  6F77               	movwf	(?_printf+2)& (0+255),b
  6006  00797A  EC60  F04A         	call	_printf	;wreg free
  6007  00797E  0012               	return		;funcret
  6008  007980                     __end_of_cmdSetParity:
  6009                           	opt callstack 0
  6010                           
  6011 ;; *************** function _cmdSetNaddr *****************
  6012 ;; Defined at:
  6013 ;;		line 359 in file "../app/app_src/application.c"
  6014 ;; Parameters:    Size  Location     Type
  6015 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  6016 ;;		 -> atCommand(80), 
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;  p1              2   33[BANK0 ] PTR unsigned char 
  6019 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  6020 ;;  p2              2   31[BANK0 ] PTR unsigned char 
  6021 ;;  tempaddr        1   35[BANK0 ] unsigned char 
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  1    wreg      void 
  6024 ;; Registers used:
  6025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 3F/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6031 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6032 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6034 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6035 ;;Total ram usage:        7 bytes
  6036 ;; Hardware stack levels used:    1
  6037 ;; Hardware stack levels required when called:   16
  6038 ;; This function calls:
  6039 ;;		_DATAEE_WriteByte_Platform
  6040 ;;		_initRadio
  6041 ;;		_printf
  6042 ;;		_setSyncWord
  6043 ;;		_strstr
  6044 ;;		_strtoul
  6045 ;; This function is called by:
  6046 ;;		_executeATCommand
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           	psect	text16
  6051  007DB2                     __ptext16:
  6052                           	opt callstack 0
  6053  007DB2                     _cmdSetNaddr:
  6054                           	opt callstack 12
  6055                           
  6056                           ;../app/app_src/application.c: 360:  uint8_t tempaddr;;../app/app_src/application.c: 361
      +                          :  char *p1,*p2;;../app/app_src/application.c: 362:  p1 = strstr(atCommand,"=") + 1;
  6057                           
  6058                           ;incstack = 0
  6059  007DB2  0E24               	movlw	low _atCommand
  6060  007DB4  6E0D               	movwf	strstr@h^0,c
  6061  007DB6  0E02               	movlw	high _atCommand
  6062  007DB8  6E0E               	movwf	(strstr@h+1)^0,c
  6063  007DBA  0EDE               	movlw	low (STR_21+3)
  6064  007DBC  6E0F               	movwf	strstr@n^0,c
  6065  007DBE  0EFF               	movlw	high (STR_21+3)
  6066  007DC0  6E10               	movwf	(strstr@n+1)^0,c
  6067  007DC2  EC93  F032         	call	_strstr	;wreg free
  6068  007DC6  0E01               	movlw	1
  6069  007DC8  240D               	addwf	?_strstr^0,w,c
  6070  007DCA  0100               	movlb	0	; () banked
  6071  007DCC  6F81               	movwf	cmdSetNaddr@p1& (0+255),b
  6072  007DCE  0E00               	movlw	0
  6073  007DD0  200E               	addwfc	(?_strstr+1)^0,w,c
  6074  007DD2  6F82               	movwf	(cmdSetNaddr@p1+1)& (0+255),b
  6075                           
  6076                           ; BSR set to: 0
  6077                           ;../app/app_src/application.c: 364:  tempaddr = strtoul(p1,p2,16);
  6078  007DD4  0060  F204  F034   	movff	cmdSetNaddr@p1,strtoul@s
  6079  007DDA  0060  F208  F035   	movff	cmdSetNaddr@p1+1,strtoul@s+1
  6080  007DE0  0060  F1FC  F036   	movff	cmdSetNaddr@p2,strtoul@endptr
  6081  007DE6  0060  F200  F037   	movff	cmdSetNaddr@p2+1,strtoul@endptr+1
  6082  007DEC  0E00               	movlw	0
  6083  007DEE  6E39               	movwf	(strtoul@base+1)^0,c
  6084  007DF0  0E10               	movlw	16
  6085  007DF2  6E38               	movwf	strtoul@base^0,c
  6086  007DF4  EC1A  F045         	call	_strtoul	;wreg free
  6087  007DF8  5034               	movf	?_strtoul^0,w,c
  6088  007DFA  0100               	movlb	0	; () banked
  6089  007DFC  6F83               	movwf	cmdSetNaddr@tempaddr& (0+255),b
  6090                           
  6091                           ; BSR set to: 0
  6092                           ;../app/app_src/application.c: 365:  currentNetID = tempaddr;
  6093  007DFE  0060  F20C  F0F8   	movff	cmdSetNaddr@tempaddr,_currentNetID
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;../app/app_src/application.c: 366:  setSyncWord(currentNetID);
  6097  007E04  51F8               	movf	_currentNetID& (0+255),w,b
  6098  007E06  EC76  F04C         	call	_setSyncWord
  6099                           
  6100                           ;../app/app_src/application.c: 368:  DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1,current
      +                          NetID);
  6101  007E0A  0E00               	movlw	0
  6102  007E0C  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  6103  007E0E  0E19               	movlw	25
  6104  007E10  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  6105  007E12  0060  F3E0  F008   	movff	_currentNetID,DATAEE_WriteByte_Platform@data
  6106  007E18  EC82  F045         	call	_DATAEE_WriteByte_Platform	;wreg free
  6107                           
  6108                           ;../app/app_src/application.c: 369:     initRadio();
  6109  007E1C  EC61  F023         	call	_initRadio	;wreg free
  6110                           
  6111                           ; BSR set to: 1
  6112                           ;../app/app_src/application.c: 370:  printf("OK\r\n");
  6113  007E20  0ED6               	movlw	low STR_12
  6114  007E22  0100               	movlb	0	; () banked
  6115  007E24  6F75               	movwf	printf@fmt& (0+255),b
  6116  007E26  0EFF               	movlw	high STR_12
  6117  007E28  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6118  007E2A  EC60  F04A         	call	_printf	;wreg free
  6119                           
  6120                           ; BSR set to: 0
  6121  007E2E  0012               	return		;funcret
  6122  007E30                     __end_of_cmdSetNaddr:
  6123                           	opt callstack 0
  6124                           
  6125 ;; *************** function _setSyncWord *****************
  6126 ;; Defined at:
  6127 ;;		line 329 in file "../phy/sx1216/phy_src/phy.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;  sw              1    wreg     unsigned char 
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;  sw              1   16[COMRAM] unsigned char 
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  1    wreg      void 
  6134 ;; Registers used:
  6135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6136 ;; Tracked objects:
  6137 ;;		On entry : 3F/0
  6138 ;;		On exit  : 3F/3D
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6144 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6145 ;;Total ram usage:        1 bytes
  6146 ;; Hardware stack levels used:    1
  6147 ;; Hardware stack levels required when called:   11
  6148 ;; This function calls:
  6149 ;;		_SX1276Write
  6150 ;; This function is called by:
  6151 ;;		_cmdSetNaddr
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155                           	psect	text17
  6156  0098EC                     __ptext17:
  6157                           	opt callstack 0
  6158  0098EC                     _setSyncWord:
  6159                           	opt callstack 16
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;incstack = 0
  6163                           ;setSyncWord@sw stored from wreg
  6164  0098EC  6E11               	movwf	setSyncWord@sw^0,c
  6165                           
  6166                           ;../phy/sx1216/phy_src/phy.c: 329: void setSyncWord(uint8_t sw);../phy/sx1216/phy_src/ph
      +                          y.c: 330: {;../phy/sx1216/phy_src/phy.c: 331:   SX1276Write(0x39, sw);
  6167  0098EE  0060  F044  F00F   	movff	setSyncWord@sw,SX1276Write@data
  6168  0098F4  0E39               	movlw	57
  6169  0098F6  EC54  F04C         	call	_SX1276Write
  6170                           
  6171                           ; BSR set to: 61
  6172  0098FA  0012               	return		;funcret
  6173  0098FC                     __end_of_setSyncWord:
  6174                           	opt callstack 0
  6175                           
  6176 ;; *************** function _cmdSetCADRSSI *****************
  6177 ;; Defined at:
  6178 ;;		line 681 in file "../app/app_src/application.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;  atCommand       2   87[COMRAM] PTR unsigned char 
  6181 ;;		 -> atCommand(80), 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;  CHstr           3   33[BANK0 ] unsigned char [3]
  6184 ;;  p2              2   36[BANK0 ] PTR unsigned char 
  6185 ;;		 -> cmdSetSF@CHstr(3), STR_58(2), STR_57(2), cmdSetCADRSSI@CHstr(3), 
  6186 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  6187 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  6188 ;;  p1              2   31[BANK0 ] PTR unsigned char 
  6189 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  6190 ;;  temp            1   38[BANK0 ] char 
  6191 ;; Return value:  Size  Location     Type
  6192 ;;                  1    wreg      void 
  6193 ;; Registers used:
  6194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6195 ;; Tracked objects:
  6196 ;;		On entry : 0/0
  6197 ;;		On exit  : 3F/0
  6198 ;;		Unchanged: 0/0
  6199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6201 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6203 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6204 ;;Total ram usage:       10 bytes
  6205 ;; Hardware stack levels used:    1
  6206 ;; Hardware stack levels required when called:   16
  6207 ;; This function calls:
  6208 ;;		_DATAEE_WriteByte_Platform
  6209 ;;		_initRadio
  6210 ;;		_memcpy
  6211 ;;		_printf
  6212 ;;		_strstr
  6213 ;;		_strtol
  6214 ;; This function is called by:
  6215 ;;		_executeATCommand
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           	psect	text18
  6220  0072CE                     __ptext18:
  6221                           	opt callstack 0
  6222  0072CE                     _cmdSetCADRSSI:
  6223                           	opt callstack 12
  6224                           
  6225                           ;../app/app_src/application.c: 682:  char *p1,*p2;;../app/app_src/application.c: 683:  c
      +                          har CHstr[3];;../app/app_src/application.c: 684:  int8_t temp;;../app/app_src/applicatio
      +                          n.c: 685:  p1 = strstr(atCommand,"=") + 1;
  6226                           
  6227                           ; BSR set to: 61
  6228                           ;incstack = 0
  6229  0072CE  0060  F160  F00D   	movff	cmdSetCADRSSI@atCommand,strstr@h
  6230  0072D4  0060  F164  F00E   	movff	cmdSetCADRSSI@atCommand+1,strstr@h+1
  6231  0072DA  0EDE               	movlw	low (STR_21+3)
  6232  0072DC  6E0F               	movwf	strstr@n^0,c
  6233  0072DE  0EFF               	movlw	high (STR_21+3)
  6234  0072E0  6E10               	movwf	(strstr@n+1)^0,c
  6235  0072E2  EC93  F032         	call	_strstr	;wreg free
  6236  0072E6  0E01               	movlw	1
  6237  0072E8  240D               	addwf	?_strstr^0,w,c
  6238  0072EA  0100               	movlb	0	; () banked
  6239  0072EC  6F7F               	movwf	cmdSetCADRSSI@p1& (0+255),b
  6240  0072EE  0E00               	movlw	0
  6241  0072F0  200E               	addwfc	(?_strstr+1)^0,w,c
  6242  0072F2  6F80               	movwf	(cmdSetCADRSSI@p1+1)& (0+255),b
  6243                           
  6244                           ; BSR set to: 0
  6245                           ;../app/app_src/application.c: 686:  memcpy(CHstr,p1,3);
  6246  0072F4  0E81               	movlw	low cmdSetCADRSSI@CHstr
  6247  0072F6  6E08               	movwf	memcpy@d1^0,c
  6248  0072F8  6A09               	clrf	(memcpy@d1+1)^0,c
  6249  0072FA  0060  F1FC  F00A   	movff	cmdSetCADRSSI@p1,memcpy@s1
  6250  007300  0060  F200  F00B   	movff	cmdSetCADRSSI@p1+1,memcpy@s1+1
  6251  007306  0E00               	movlw	0
  6252  007308  6E0D               	movwf	(memcpy@n+1)^0,c
  6253  00730A  0E03               	movlw	3
  6254  00730C  6E0C               	movwf	memcpy@n^0,c
  6255  00730E  EC95  F03F         	call	_memcpy	;wreg free
  6256                           
  6257                           ;../app/app_src/application.c: 687:  temp = (uint8_t)strtol(CHstr,&p2,10);
  6258  007312  0E81               	movlw	low cmdSetCADRSSI@CHstr
  6259  007314  6E34               	movwf	strtol@s^0,c
  6260  007316  0E84               	movlw	low cmdSetCADRSSI@p2
  6261  007318  6E35               	movwf	strtol@endptr^0,c
  6262  00731A  0E00               	movlw	0
  6263  00731C  6E37               	movwf	(strtol@base+1)^0,c
  6264  00731E  0E0A               	movlw	10
  6265  007320  6E36               	movwf	strtol@base^0,c
  6266  007322  EC69  F046         	call	_strtol	;wreg free
  6267  007326  5034               	movf	?_strtol^0,w,c
  6268  007328  0100               	movlb	0	; () banked
  6269  00732A  6F86               	movwf	cmdSetCADRSSI@temp& (0+255),b
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;../app/app_src/application.c: 688:  if((temp > 0) || (temp < -120)){
  6273  00732C  5186               	movf	cmdSetCADRSSI@temp& (0+255),w,b
  6274  00732E  0A80               	xorlw	128
  6275  007330  0F7F               	addlw	-129
  6276  007332  B0D8               	btfsc	status,0,c
  6277  007334  D005               	goto	u16950
  6278                           
  6279                           ; BSR set to: 0
  6280  007336  5186               	movf	cmdSetCADRSSI@temp& (0+255),w,b
  6281  007338  0A80               	xorlw	128
  6282  00733A  0FF8               	addlw	248
  6283  00733C  B0D8               	btfsc	status,0,c
  6284  00733E  D009               	goto	l380
  6285  007340                     u16950:
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;../app/app_src/application.c: 689:   printf("NOT OK:%u\r\n",TXOUTOFBOUNDS);
  6289  007340  0EC5               	movlw	low STR_3
  6290  007342  6F75               	movwf	printf@fmt& (0+255),b
  6291  007344  0EFE               	movlw	high STR_3
  6292  007346  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6293  007348  0E0B               	movlw	11
  6294  00734A  6F77               	movwf	(?_printf+2)& (0+255),b
  6295  00734C  EC60  F04A         	call	_printf	;wreg free
  6296                           
  6297                           ;../app/app_src/application.c: 690:  }
  6298  007350  0012               	return	
  6299  007352                     l380:
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;../app/app_src/application.c: 692:   RSSITarget = temp;
  6303  007352  0060  F218  F0F7   	movff	cmdSetCADRSSI@temp,_RSSITarget
  6304                           
  6305                           ; BSR set to: 0
  6306                           ;../app/app_src/application.c: 693:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1,RSSITarget);
  6307  007358  0E00               	movlw	0
  6308  00735A  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  6309  00735C  0E1E               	movlw	30
  6310  00735E  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  6311  007360  0060  F3DC  F008   	movff	_RSSITarget,DATAEE_WriteByte_Platform@data
  6312  007366  EC82  F045         	call	_DATAEE_WriteByte_Platform	;wreg free
  6313                           
  6314                           ;../app/app_src/application.c: 694:   initRadio();
  6315  00736A  EC61  F023         	call	_initRadio	;wreg free
  6316                           
  6317                           ; BSR set to: 1
  6318                           ;../app/app_src/application.c: 695:   printf("OK\r\n");
  6319  00736E  0ED6               	movlw	low STR_12
  6320  007370  0100               	movlb	0	; () banked
  6321  007372  6F75               	movwf	printf@fmt& (0+255),b
  6322  007374  0EFF               	movlw	high STR_12
  6323  007376  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6324  007378  EC60  F04A         	call	_printf	;wreg free
  6325                           
  6326                           ; BSR set to: 0
  6327  00737C  0012               	return		;funcret
  6328  00737E                     __end_of_cmdSetCADRSSI:
  6329                           	opt callstack 0
  6330                           
  6331 ;; *************** function _strtol *****************
  6332 ;; Defined at:
  6333 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtol.c"
  6334 ;; Parameters:    Size  Location     Type
  6335 ;;  s               1   51[COMRAM] PTR const unsigned char 
  6336 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), 
  6337 ;;  endptr          1   52[COMRAM] PTR PTR unsigned char 
  6338 ;;		 -> cmdSetSF@p2(2), cmdSetCADRSSI@p2(2), 
  6339 ;;  base            2   53[COMRAM] int 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  4   51[COMRAM] long 
  6344 ;; Registers used:
  6345 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6351 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6354 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6355 ;;Total ram usage:        4 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:   10
  6358 ;; This function calls:
  6359 ;;		___strtoxl
  6360 ;; This function is called by:
  6361 ;;		_cmdSetCADRSSI
  6362 ;;		_cmdSetSF
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           	psect	text19
  6367  008CD2                     __ptext19:
  6368                           	opt callstack 0
  6369  008CD2                     _strtol:
  6370                           	opt callstack 17
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;incstack = 0
  6374  008CD2  0060  F0D0  F010   	movff	strtol@s,___strtoxl@s
  6375  008CD8  6A11               	clrf	(___strtoxl@s+1)^0,c
  6376  008CDA  0060  F0D4  F012   	movff	strtol@endptr,___strtoxl@endptr
  6377  008CE0  6A13               	clrf	(___strtoxl@endptr+1)^0,c
  6378  008CE2  0060  F0D8  F014   	movff	strtol@base,___strtoxl@base
  6379  008CE8  0060  F0DC  F015   	movff	strtol@base+1,___strtoxl@base+1
  6380  008CEE  0E01               	movlw	1
  6381  008CF0  6E16               	movwf	___strtoxl@is_signed^0,c
  6382  008CF2  EC5D  F005         	call	___strtoxl	;wreg free
  6383  008CF6  0060  F040  F034   	movff	?___strtoxl,?_strtol
  6384  008CFC  0060  F044  F035   	movff	?___strtoxl+1,?_strtol+1
  6385  008D02  0060  F048  F036   	movff	?___strtoxl+2,?_strtol+2
  6386  008D08  0060  F04C  F037   	movff	?___strtoxl+3,?_strtol+3
  6387  008D0E  0012               	return		;funcret
  6388  008D10                     __end_of_strtol:
  6389                           	opt callstack 0
  6390                           
  6391 ;; *************** function _cmdSetBaud *****************
  6392 ;; Defined at:
  6393 ;;		line 756 in file "../app/app_src/application.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  atCommand       2   57[COMRAM] PTR unsigned char 
  6396 ;;		 -> atCommand(80), 
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;  ptr             2   60[COMRAM] PTR unsigned char 
  6399 ;;		 -> atCommand(80), NULL(0), 
  6400 ;;  tempbaud        1   59[COMRAM] unsigned char 
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  1    wreg      void 
  6403 ;; Registers used:
  6404 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6410 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6413 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6414 ;;Total ram usage:        5 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; Hardware stack levels required when called:   11
  6417 ;; This function calls:
  6418 ;;		_strtok
  6419 ;;		_strtoul
  6420 ;; This function is called by:
  6421 ;;		_executeATCommand
  6422 ;; This function uses a non-reentrant model
  6423 ;;
  6424                           
  6425                           	psect	text20
  6426  00800A                     __ptext20:
  6427                           	opt callstack 0
  6428  00800A                     _cmdSetBaud:
  6429                           	opt callstack 17
  6430                           
  6431                           ;../app/app_src/application.c: 756: static void cmdSetBaud(char* atCommand);../app/app_s
      +                          rc/application.c: 757: {;../app/app_src/application.c: 758:     uint8_t tempbaud;;../app
      +                          /app_src/application.c: 759:     char *ptr;;../app/app_src/application.c: 760:     ptr =
      +                           strtok(atCommand,"=");
  6432                           
  6433                           ;incstack = 0
  6434  00800A  0060  F0E8  F00F   	movff	cmdSetBaud@atCommand,strtok@s
  6435  008010  0060  F0EC  F010   	movff	cmdSetBaud@atCommand+1,strtok@s+1
  6436  008016  0EDE               	movlw	low (STR_21+3)
  6437  008018  6E11               	movwf	strtok@sep^0,c
  6438  00801A  0EFF               	movlw	high (STR_21+3)
  6439  00801C  6E12               	movwf	(strtok@sep+1)^0,c
  6440  00801E  EC25  F032         	call	_strtok	;wreg free
  6441  008022  0060  F03C  F03D   	movff	?_strtok,cmdSetBaud@ptr
  6442  008028  0060  F040  F03E   	movff	?_strtok+1,cmdSetBaud@ptr+1
  6443                           
  6444                           ;../app/app_src/application.c: 761:     ptr = strtok(((void*)0),"\r");
  6445  00802E  0E00               	movlw	0
  6446  008030  6E0F               	movwf	strtok@s^0,c
  6447  008032  0E00               	movlw	0
  6448  008034  6E10               	movwf	(strtok@s+1)^0,c
  6449  008036  0EFC               	movlw	low STR_58
  6450  008038  6E11               	movwf	strtok@sep^0,c
  6451  00803A  0EFF               	movlw	high STR_58
  6452  00803C  6E12               	movwf	(strtok@sep+1)^0,c
  6453  00803E  EC25  F032         	call	_strtok	;wreg free
  6454  008042  0060  F03C  F03D   	movff	?_strtok,cmdSetBaud@ptr
  6455  008048  0060  F040  F03E   	movff	?_strtok+1,cmdSetBaud@ptr+1
  6456                           
  6457                           ;../app/app_src/application.c: 762:     tempbaud = (uint8_t)strtoul(ptr,((void*)0),10);
  6458  00804E  0060  F0F4  F034   	movff	cmdSetBaud@ptr,strtoul@s
  6459  008054  0060  F0F8  F035   	movff	cmdSetBaud@ptr+1,strtoul@s+1
  6460  00805A  0E00               	movlw	0
  6461  00805C  6E36               	movwf	strtoul@endptr^0,c
  6462  00805E  0E00               	movlw	0
  6463  008060  6E37               	movwf	(strtoul@endptr+1)^0,c
  6464  008062  0E00               	movlw	0
  6465  008064  6E39               	movwf	(strtoul@base+1)^0,c
  6466  008066  0E0A               	movlw	10
  6467  008068  6E38               	movwf	strtoul@base^0,c
  6468  00806A  EC1A  F045         	call	_strtoul	;wreg free
  6469  00806E  5034               	movf	?_strtoul^0,w,c
  6470  008070  6E3C               	movwf	cmdSetBaud@tempbaud^0,c
  6471                           
  6472                           ;../app/app_src/application.c: 763:     tempbaud++;
  6473  008072  2A3C               	incf	cmdSetBaud@tempbaud^0,f,c
  6474  008074  0012               	return		;funcret
  6475  008076                     __end_of_cmdSetBaud:
  6476                           	opt callstack 0
  6477                           
  6478 ;; *************** function _strtok *****************
  6479 ;; Defined at:
  6480 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtok.c"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;  s               2   14[COMRAM] PTR unsigned char 
  6483 ;;		 -> atCommand(80), NULL(0), 
  6484 ;;  sep             2   16[COMRAM] PTR const unsigned char 
  6485 ;;		 -> STR_58(2), STR_57(2), 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;		None
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  2   14[COMRAM] PTR unsigned char 
  6490 ;; Registers used:
  6491 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6497 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6500 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6501 ;;Total ram usage:        4 bytes
  6502 ;; Hardware stack levels used:    1
  6503 ;; Hardware stack levels required when called:    9
  6504 ;; This function calls:
  6505 ;;		_strcspn
  6506 ;;		_strspn
  6507 ;; This function is called by:
  6508 ;;		_cmdSetBaud
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text21
  6513  00644A                     __ptext21:
  6514                           	opt callstack 0
  6515  00644A                     _strtok:
  6516                           	opt callstack 18
  6517                           
  6518                           ;incstack = 0
  6519  00644A  500F               	movf	strtok@s^0,w,c
  6520  00644C  1010               	iorwf	(strtok@s+1)^0,w,c
  6521  00644E  A4D8               	btfss	status,2,c
  6522  006450  D00F               	goto	l15998
  6523  006452  0060  F2C4  F00F   	movff	strtok@p,strtok@s
  6524  006458  0060  F2C8  F010   	movff	strtok@p+1,strtok@s+1
  6525  00645E  500F               	movf	strtok@s^0,w,c
  6526  006460  1010               	iorwf	(strtok@s+1)^0,w,c
  6527  006462  A4D8               	btfss	status,2,c
  6528  006464  D005               	goto	l15998
  6529  006466  0E00               	movlw	0
  6530  006468  6E0F               	movwf	?_strtok^0,c
  6531  00646A  0E00               	movlw	0
  6532  00646C  6E10               	movwf	(?_strtok+1)^0,c
  6533  00646E  0012               	return	
  6534  006470                     l15998:
  6535  006470  0060  F03C  F008   	movff	strtok@s,strspn@s
  6536  006476  0060  F040  F009   	movff	strtok@s+1,strspn@s+1
  6537  00647C  0060  F044  F00A   	movff	strtok@sep,strspn@c
  6538  006482  0060  F048  F00B   	movff	strtok@sep+1,strspn@c+1
  6539  006488  EC3D  F041         	call	_strspn	;wreg free
  6540  00648C  5008               	movf	?_strspn^0,w,c
  6541  00648E  260F               	addwf	strtok@s^0,f,c
  6542  006490  5009               	movf	(?_strspn+1)^0,w,c
  6543  006492  2210               	addwfc	(strtok@s+1)^0,f,c
  6544  006494  0060  F03F  FFD9   	movff	strtok@s,fsr2l
  6545  00649A  0060  F043  FFDA   	movff	strtok@s+1,fsr2h
  6546  0064A0  50DF               	movf	indf2,w,c
  6547  0064A2  A4D8               	btfss	status,2,c
  6548  0064A4  D00C               	goto	l16006
  6549  0064A6  0E00               	movlw	0
  6550  0064A8  0100               	movlb	0	; () banked
  6551  0064AA  6FB1               	movwf	strtok@p& (0+255),b
  6552  0064AC  0E00               	movlw	0
  6553  0064AE  6FB2               	movwf	(strtok@p+1)& (0+255),b
  6554  0064B0  0060  F2C4  F00F   	movff	strtok@p,?_strtok
  6555  0064B6  0060  F2C8  F010   	movff	strtok@p+1,?_strtok+1
  6556  0064BC  0012               	return	
  6557  0064BE                     l16006:
  6558  0064BE  0060  F03C  F008   	movff	strtok@s,strcspn@s
  6559  0064C4  0060  F040  F009   	movff	strtok@s+1,strcspn@s+1
  6560  0064CA  0060  F044  F00A   	movff	strtok@sep,strcspn@c
  6561  0064D0  0060  F048  F00B   	movff	strtok@sep+1,strcspn@c+1
  6562  0064D6  EC6D  F041         	call	_strcspn	;wreg free
  6563  0064DA  5008               	movf	?_strcspn^0,w,c
  6564  0064DC  240F               	addwf	strtok@s^0,w,c
  6565  0064DE  0100               	movlb	0	; () banked
  6566  0064E0  6FB1               	movwf	strtok@p& (0+255),b
  6567  0064E2  5009               	movf	(?_strcspn+1)^0,w,c
  6568  0064E4  2010               	addwfc	(strtok@s+1)^0,w,c
  6569  0064E6  6FB2               	movwf	(strtok@p+1)& (0+255),b
  6570                           
  6571                           ; BSR set to: 0
  6572  0064E8  0060  F2C7  FFD9   	movff	strtok@p,fsr2l
  6573  0064EE  0060  F2CB  FFDA   	movff	strtok@p+1,fsr2h
  6574  0064F4  50DF               	movf	indf2,w,c
  6575  0064F6  B4D8               	btfsc	status,2,c
  6576  0064F8  D00B               	goto	l16014
  6577                           
  6578                           ; BSR set to: 0
  6579  0064FA  0060  F2C7  FFD9   	movff	strtok@p,fsr2l
  6580  006500  0060  F2CB  FFDA   	movff	strtok@p+1,fsr2h
  6581  006506  0E00               	movlw	0
  6582  006508  6EDF               	movwf	indf2,c
  6583                           
  6584                           ; BSR set to: 0
  6585  00650A  4BB1               	infsnz	strtok@p& (0+255),f,b
  6586  00650C  2BB2               	incf	(strtok@p+1)& (0+255),f,b
  6587  00650E  D004               	goto	l4132
  6588  006510                     l16014:
  6589                           
  6590                           ; BSR set to: 0
  6591  006510  0E00               	movlw	0
  6592  006512  6FB1               	movwf	strtok@p& (0+255),b
  6593  006514  0E00               	movlw	0
  6594  006516  6FB2               	movwf	(strtok@p+1)& (0+255),b
  6595  006518                     l4132:
  6596                           
  6597                           ; BSR set to: 0
  6598  006518  0060  F03C  F00F   	movff	strtok@s,?_strtok
  6599  00651E  0060  F040  F010   	movff	strtok@s+1,?_strtok+1
  6600  006524  0012               	return		;funcret
  6601  006526                     __end_of_strtok:
  6602                           	opt callstack 0
  6603                           
  6604 ;; *************** function _strspn *****************
  6605 ;; Defined at:
  6606 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strspn.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6609 ;;		 -> atCommand(80), NULL(0), 
  6610 ;;  c               2    9[COMRAM] PTR const unsigned char 
  6611 ;;		 -> STR_58(2), STR_57(2), 
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;  i               2   12[COMRAM] unsigned int 
  6614 ;; Return value:  Size  Location     Type
  6615 ;;                  2    7[COMRAM] unsigned int 
  6616 ;; Registers used:
  6617 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6618 ;; Tracked objects:
  6619 ;;		On entry : 0/0
  6620 ;;		On exit  : 0/0
  6621 ;;		Unchanged: 0/0
  6622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6623 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6624 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6625 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6626 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6627 ;;Total ram usage:        7 bytes
  6628 ;; Hardware stack levels used:    1
  6629 ;; Hardware stack levels required when called:    8
  6630 ;; This function calls:
  6631 ;;		_strchr
  6632 ;; This function is called by:
  6633 ;;		_strtok
  6634 ;; This function uses a non-reentrant model
  6635 ;;
  6636                           
  6637                           	psect	text22
  6638  00827A                     __ptext22:
  6639                           	opt callstack 0
  6640  00827A                     _strspn:
  6641                           	opt callstack 18
  6642                           
  6643                           ;incstack = 0
  6644  00827A  0E00               	movlw	0
  6645  00827C  6E0E               	movwf	(strspn@i+1)^0,c
  6646  00827E  0E00               	movlw	0
  6647  008280  6E0D               	movwf	strspn@i^0,c
  6648  008282  D004               	goto	l15692
  6649  008284                     l15690:
  6650  008284  4A08               	infsnz	strspn@s^0,f,c
  6651  008286  2A09               	incf	(strspn@s+1)^0,f,c
  6652  008288  4A0D               	infsnz	strspn@i^0,f,c
  6653  00828A  2A0E               	incf	(strspn@i+1)^0,f,c
  6654  00828C                     l15692:
  6655  00828C  0060  F023  FFD9   	movff	strspn@s,fsr2l
  6656  008292  0060  F027  FFDA   	movff	strspn@s+1,fsr2h
  6657  008298  50DF               	movf	indf2,w,c
  6658  00829A  B4D8               	btfsc	status,2,c
  6659  00829C  D017               	goto	u15540
  6660  00829E  0060  F028  F002   	movff	strspn@c,strchr@s
  6661  0082A4  0060  F02C  F003   	movff	strspn@c+1,strchr@s+1
  6662  0082AA  0060  F023  FFD9   	movff	strspn@s,fsr2l
  6663  0082B0  0060  F027  FFDA   	movff	strspn@s+1,fsr2h
  6664  0082B6  50DF               	movf	indf2,w,c
  6665  0082B8  6E0C               	movwf	??_strspn^0,c
  6666  0082BA  500C               	movf	??_strspn^0,w,c
  6667  0082BC  6E04               	movwf	strchr@c^0,c
  6668  0082BE  6A05               	clrf	(strchr@c+1)^0,c
  6669  0082C0  ECD4  F03D         	call	_strchr	;wreg free
  6670  0082C4  5002               	movf	?_strchr^0,w,c
  6671  0082C6  1003               	iorwf	(?_strchr+1)^0,w,c
  6672  0082C8  A4D8               	btfss	status,2,c
  6673  0082CA  D7DC               	goto	l15690
  6674  0082CC                     u15540:
  6675  0082CC  0060  F034  F008   	movff	strspn@i,?_strspn
  6676  0082D2  0060  F038  F009   	movff	strspn@i+1,?_strspn+1
  6677  0082D8  0012               	return		;funcret
  6678  0082DA                     __end_of_strspn:
  6679                           	opt callstack 0
  6680                           
  6681 ;; *************** function _strcspn *****************
  6682 ;; Defined at:
  6683 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcspn.c"
  6684 ;; Parameters:    Size  Location     Type
  6685 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6686 ;;		 -> atCommand(80), NULL(0), 
  6687 ;;  c               2    9[COMRAM] PTR const unsigned char 
  6688 ;;		 -> STR_58(2), STR_57(2), 
  6689 ;; Auto vars:     Size  Location     Type
  6690 ;;  i               2   12[COMRAM] unsigned int 
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  2    7[COMRAM] unsigned int 
  6693 ;; Registers used:
  6694 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6695 ;; Tracked objects:
  6696 ;;		On entry : 0/0
  6697 ;;		On exit  : 0/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6700 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6701 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6702 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6703 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6704 ;;Total ram usage:        7 bytes
  6705 ;; Hardware stack levels used:    1
  6706 ;; Hardware stack levels required when called:    8
  6707 ;; This function calls:
  6708 ;;		_strchr
  6709 ;; This function is called by:
  6710 ;;		_strtok
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           	psect	text23
  6715  0082DA                     __ptext23:
  6716                           	opt callstack 0
  6717  0082DA                     _strcspn:
  6718                           	opt callstack 18
  6719                           
  6720                           ;incstack = 0
  6721  0082DA  0E00               	movlw	0
  6722  0082DC  6E0E               	movwf	(strcspn@i+1)^0,c
  6723  0082DE  0E00               	movlw	0
  6724  0082E0  6E0D               	movwf	strcspn@i^0,c
  6725  0082E2  D004               	goto	l15700
  6726  0082E4                     l15698:
  6727  0082E4  4A08               	infsnz	strcspn@s^0,f,c
  6728  0082E6  2A09               	incf	(strcspn@s+1)^0,f,c
  6729  0082E8  4A0D               	infsnz	strcspn@i^0,f,c
  6730  0082EA  2A0E               	incf	(strcspn@i+1)^0,f,c
  6731  0082EC                     l15700:
  6732  0082EC  0060  F023  FFD9   	movff	strcspn@s,fsr2l
  6733  0082F2  0060  F027  FFDA   	movff	strcspn@s+1,fsr2h
  6734  0082F8  50DF               	movf	indf2,w,c
  6735  0082FA  B4D8               	btfsc	status,2,c
  6736  0082FC  D017               	goto	u15560
  6737  0082FE  0060  F028  F002   	movff	strcspn@c,strchr@s
  6738  008304  0060  F02C  F003   	movff	strcspn@c+1,strchr@s+1
  6739  00830A  0060  F023  FFD9   	movff	strcspn@s,fsr2l
  6740  008310  0060  F027  FFDA   	movff	strcspn@s+1,fsr2h
  6741  008316  50DF               	movf	indf2,w,c
  6742  008318  6E0C               	movwf	??_strcspn^0,c
  6743  00831A  500C               	movf	??_strcspn^0,w,c
  6744  00831C  6E04               	movwf	strchr@c^0,c
  6745  00831E  6A05               	clrf	(strchr@c+1)^0,c
  6746  008320  ECD4  F03D         	call	_strchr	;wreg free
  6747  008324  5002               	movf	?_strchr^0,w,c
  6748  008326  1003               	iorwf	(?_strchr+1)^0,w,c
  6749  008328  B4D8               	btfsc	status,2,c
  6750  00832A  D7DC               	goto	l15698
  6751  00832C                     u15560:
  6752  00832C  0060  F034  F008   	movff	strcspn@i,?_strcspn
  6753  008332  0060  F038  F009   	movff	strcspn@i+1,?_strcspn+1
  6754  008338  0012               	return		;funcret
  6755  00833A                     __end_of_strcspn:
  6756                           	opt callstack 0
  6757                           
  6758 ;; *************** function _cmdSetAddr *****************
  6759 ;; Defined at:
  6760 ;;		line 324 in file "../app/app_src/application.c"
  6761 ;; Parameters:    Size  Location     Type
  6762 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  6763 ;;		 -> atCommand(80), 
  6764 ;; Auto vars:     Size  Location     Type
  6765 ;;  tempaddr        2   35[BANK0 ] unsigned short 
  6766 ;;  p1              2   33[BANK0 ] PTR unsigned char 
  6767 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  6768 ;;  p2              2   31[BANK0 ] PTR unsigned char 
  6769 ;; Return value:  Size  Location     Type
  6770 ;;                  1    wreg      void 
  6771 ;; Registers used:
  6772 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6773 ;; Tracked objects:
  6774 ;;		On entry : 0/0
  6775 ;;		On exit  : 3F/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6778 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6779 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6781 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6782 ;;Total ram usage:        8 bytes
  6783 ;; Hardware stack levels used:    1
  6784 ;; Hardware stack levels required when called:   16
  6785 ;; This function calls:
  6786 ;;		_printf
  6787 ;;		_strstr
  6788 ;;		_strtoul
  6789 ;; This function is called by:
  6790 ;;		_executeATCommand
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           	psect	text24
  6795  0077D2                     __ptext24:
  6796                           	opt callstack 0
  6797  0077D2                     _cmdSetAddr:
  6798                           	opt callstack 12
  6799                           
  6800                           ;../app/app_src/application.c: 325:  uint16_t tempaddr;;../app/app_src/application.c: 32
      +                          6:  char *p1,*p2;;../app/app_src/application.c: 327:  p1 = strstr(atCommand,"=") + 1;
  6801                           
  6802                           ;incstack = 0
  6803  0077D2  0E24               	movlw	low _atCommand
  6804  0077D4  6E0D               	movwf	strstr@h^0,c
  6805  0077D6  0E02               	movlw	high _atCommand
  6806  0077D8  6E0E               	movwf	(strstr@h+1)^0,c
  6807  0077DA  0EDE               	movlw	low (STR_21+3)
  6808  0077DC  6E0F               	movwf	strstr@n^0,c
  6809  0077DE  0EFF               	movlw	high (STR_21+3)
  6810  0077E0  6E10               	movwf	(strstr@n+1)^0,c
  6811  0077E2  EC93  F032         	call	_strstr	;wreg free
  6812  0077E6  0E01               	movlw	1
  6813  0077E8  240D               	addwf	?_strstr^0,w,c
  6814  0077EA  0100               	movlb	0	; () banked
  6815  0077EC  6F81               	movwf	cmdSetAddr@p1& (0+255),b
  6816  0077EE  0E00               	movlw	0
  6817  0077F0  200E               	addwfc	(?_strstr+1)^0,w,c
  6818  0077F2  6F82               	movwf	(cmdSetAddr@p1+1)& (0+255),b
  6819                           
  6820                           ; BSR set to: 0
  6821                           ;../app/app_src/application.c: 329:  tempaddr = strtoul(p1,p2,16);
  6822  0077F4  0060  F204  F034   	movff	cmdSetAddr@p1,strtoul@s
  6823  0077FA  0060  F208  F035   	movff	cmdSetAddr@p1+1,strtoul@s+1
  6824  007800  0060  F1FC  F036   	movff	cmdSetAddr@p2,strtoul@endptr
  6825  007806  0060  F200  F037   	movff	cmdSetAddr@p2+1,strtoul@endptr+1
  6826  00780C  0E00               	movlw	0
  6827  00780E  6E39               	movwf	(strtoul@base+1)^0,c
  6828  007810  0E10               	movlw	16
  6829  007812  6E38               	movwf	strtoul@base^0,c
  6830  007814  EC1A  F045         	call	_strtoul	;wreg free
  6831  007818  0060  F0D0  F083   	movff	?_strtoul,cmdSetAddr@tempaddr
  6832  00781E  0060  F0D4  F084   	movff	?_strtoul+1,cmdSetAddr@tempaddr+1
  6833                           
  6834                           ;../app/app_src/application.c: 331:  if((tempaddr != 0x0000) && (tempaddr != 0xFFFF)){
  6835  007824  0100               	movlb	0	; () banked
  6836  007826  5183               	movf	cmdSetAddr@tempaddr& (0+255),w,b
  6837  007828  1184               	iorwf	(cmdSetAddr@tempaddr+1)& (0+255),w,b
  6838  00782A  B4D8               	btfsc	status,2,c
  6839  00782C  D012               	goto	l16422
  6840                           
  6841                           ; BSR set to: 0
  6842  00782E  2983               	incf	cmdSetAddr@tempaddr& (0+255),w,b
  6843  007830  E103               	bnz	u16790
  6844  007832  2984               	incf	(cmdSetAddr@tempaddr+1)& (0+255),w,b
  6845  007834  B4D8               	btfsc	status,2,c
  6846  007836  D00D               	goto	l16422
  6847  007838                     u16790:
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;../app/app_src/application.c: 332:   currentAddr0 = (uint8_t)(tempaddr >> 8);
  6851  007838  0060  F210  F0FA   	movff	cmdSetAddr@tempaddr+1,_currentAddr0
  6852                           
  6853                           ;../app/app_src/application.c: 333:   currentAddr1 = (uint8_t)(tempaddr & 0xFF);
  6854  00783E  0060  F20C  F0F9   	movff	cmdSetAddr@tempaddr,_currentAddr1
  6855                           
  6856                           ; BSR set to: 0
  6857                           ;../app/app_src/application.c: 334:   printf("OK\r\n");
  6858  007844  0ED6               	movlw	low STR_12
  6859  007846  6F75               	movwf	printf@fmt& (0+255),b
  6860  007848  0EFF               	movlw	high STR_12
  6861  00784A  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6862  00784C  EC60  F04A         	call	_printf	;wreg free
  6863                           
  6864                           ;../app/app_src/application.c: 335:  }
  6865  007850  0012               	return	
  6866  007852                     l16422:
  6867                           
  6868                           ; BSR set to: 0
  6869                           ;../app/app_src/application.c: 337:   printf("NOT OK:%u\r\n", NOT_VADLID_ADDR);
  6870  007852  0EC5               	movlw	low STR_3
  6871  007854  6F75               	movwf	printf@fmt& (0+255),b
  6872  007856  0EFE               	movlw	high STR_3
  6873  007858  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6874  00785A  0E05               	movlw	5
  6875  00785C  6F77               	movwf	(?_printf+2)& (0+255),b
  6876  00785E  EC60  F04A         	call	_printf	;wreg free
  6877                           
  6878                           ; BSR set to: 0
  6879  007862  0012               	return		;funcret
  6880  007864                     __end_of_cmdSetAddr:
  6881                           	opt callstack 0
  6882                           
  6883 ;; *************** function _cmdSetAES *****************
  6884 ;; Defined at:
  6885 ;;		line 473 in file "../app/app_src/application.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  6888 ;;		 -> atCommand(80), 
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;  temp            3   65[BANK0 ] unsigned char [3]
  6891 ;;  p2              2   63[BANK0 ] PTR unsigned char 
  6892 ;;		 -> cmdSetSF@CHstr(3), STR_58(2), STR_57(2), cmdSetCADRSSI@CHstr(3), 
  6893 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  6894 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  6895 ;;  byte            1   69[BANK0 ] unsigned char 
  6896 ;;  i               1   72[BANK0 ] unsigned char 
  6897 ;;  AESstr         32   31[BANK0 ] unsigned char [32]
  6898 ;;  p1              2   70[BANK0 ] PTR unsigned char 
  6899 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  6900 ;;  key_type        1   68[BANK0 ] unsigned char 
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  1    wreg      void 
  6903 ;; Registers used:
  6904 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 3F/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6911 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6913 ;;      Totals:         4      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6914 ;;Total ram usage:       46 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:   16
  6917 ;; This function calls:
  6918 ;;		_DATAEE_WriteByte_Platform
  6919 ;;		_NWK_SetSecurityKey
  6920 ;;		_memcpy
  6921 ;;		_printf
  6922 ;;		_strlen
  6923 ;;		_strstr
  6924 ;;		_strtoul
  6925 ;; This function is called by:
  6926 ;;		_executeATCommand
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           	psect	text25
  6931  00321E                     __ptext25:
  6932                           	opt callstack 0
  6933  00321E                     _cmdSetAES:
  6934                           	opt callstack 12
  6935                           
  6936                           ;../app/app_src/application.c: 477:  p1 = strstr(atCommand,":") + 1;
  6937                           
  6938                           ; BSR set to: 0
  6939                           ;incstack = 0
  6940  00321E  0E24               	movlw	low _atCommand
  6941  003220  6E0D               	movwf	strstr@h^0,c
  6942  003222  0E02               	movlw	high _atCommand
  6943  003224  6E0E               	movwf	(strstr@h+1)^0,c
  6944  003226  0E5F               	movlw	low (STR_66+5)
  6945  003228  6E0F               	movwf	strstr@n^0,c
  6946  00322A  0EFF               	movlw	high (STR_66+5)
  6947  00322C  6E10               	movwf	(strstr@n+1)^0,c
  6948  00322E  EC93  F032         	call	_strstr	;wreg free
  6949  003232  0E01               	movlw	1
  6950  003234  240D               	addwf	?_strstr^0,w,c
  6951  003236  0100               	movlb	0	; () banked
  6952  003238  6FA6               	movwf	cmdSetAES@p1& (0+255),b
  6953  00323A  0E00               	movlw	0
  6954  00323C  200E               	addwfc	(?_strstr+1)^0,w,c
  6955  00323E  6FA7               	movwf	(cmdSetAES@p1+1)& (0+255),b
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;../app/app_src/application.c: 478:     if(!p1){
  6959  003240  51A6               	movf	cmdSetAES@p1& (0+255),w,b
  6960  003242  11A7               	iorwf	(cmdSetAES@p1+1)& (0+255),w,b
  6961  003244  A4D8               	btfss	status,2,c
  6962  003246  D019               	goto	l16510
  6963                           
  6964                           ; BSR set to: 0
  6965                           ;../app/app_src/application.c: 479:         printf("NOT OK:%u\r\n", UNDEFCMD);
  6966  003248  0EC5               	movlw	low STR_3
  6967  00324A  6F75               	movwf	printf@fmt& (0+255),b
  6968  00324C  0EFE               	movlw	high STR_3
  6969  00324E  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6970  003250  0E09               	movlw	9
  6971  003252  6F77               	movwf	(?_printf+2)& (0+255),b
  6972  003254  EC60  F04A         	call	_printf	;wreg free
  6973  003258  0012               	return	
  6974  00325A                     l16500:
  6975  00325A  0E4E               	movlw	78
  6976  00325C  D001               	goto	L1
  6977  00325E                     l16502:
  6978  00325E  0E41               	movlw	65
  6979  003260                     L1:
  6980  003260  0100               	movlb	0	; () banked
  6981  003262  6FA4               	movwf	cmdSetAES@key_type& (0+255),b
  6982  003264  D02D               	goto	l16512
  6983  003266                     l16504:
  6984                           
  6985                           ;../app/app_src/application.c: 486:             printf("NOT OK:%u\r\n", ILLEGALPARAMETER
      +                          );
  6986  003266  0EC5               	movlw	low STR_3
  6987  003268  0100               	movlb	0	; () banked
  6988  00326A  6F75               	movwf	printf@fmt& (0+255),b
  6989  00326C  0EFE               	movlw	high STR_3
  6990  00326E  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6991  003270  0E0D               	movlw	13
  6992  003272  6F77               	movwf	(?_printf+2)& (0+255),b
  6993  003274  EC60  F04A         	call	_printf	;wreg free
  6994  003278  0012               	return	
  6995  00327A                     l16510:
  6996                           
  6997                           ; BSR set to: 0
  6998  00327A  0060  F29B  FFF6   	movff	cmdSetAES@p1,tblptrl
  6999  003280  0060  F29F  FFF7   	movff	cmdSetAES@p1+1,tblptrh
  7000  003286  0E00               	movlw	low (__mediumconst shr (0+16))
  7001  003288  6EF8               	movwf	tblptru,c
  7002  00328A  0E0F               	movlw	(high __ramtop+-1)
  7003  00328C  64F7               	cpfsgt	tblptrh,c
  7004  00328E  D003               	bra	u16857
  7005  003290  0008               	tblrd		*
  7006  003292  50F5               	movf	tablat,w,c
  7007  003294  D007               	bra	u16850
  7008  003296                     u16857:
  7009  003296  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7010  00329C  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7011  0032A2  50EF               	movf	indf0,w,c
  7012  0032A4                     u16850:
  7013  0032A4  6E5A               	movwf	??_cmdSetAES^0,c
  7014  0032A6  6A5B               	clrf	(??_cmdSetAES+1)^0,c
  7015                           
  7016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7017                           ; Switch size 1, requested type "simple"
  7018                           ; Number of cases is 1, Range of values is 0 to 0
  7019                           ; switch strategies available:
  7020                           ; Name         Instructions Cycles
  7021                           ; simple_byte            4     3 (average)
  7022                           ;	Chosen strategy is simple_byte
  7023  0032A8  505B               	movf	(??_cmdSetAES+1)^0,w,c
  7024  0032AA  0A00               	xorlw	0	; case 0
  7025  0032AC  A4D8               	btfss	status,2,c
  7026  0032AE  D7DB               	goto	l16504
  7027                           
  7028                           ; Switch size 1, requested type "simple"
  7029                           ; Number of cases is 2, Range of values is 65 to 78
  7030                           ; switch strategies available:
  7031                           ; Name         Instructions Cycles
  7032                           ; simple_byte            7     4 (average)
  7033                           ;	Chosen strategy is simple_byte
  7034  0032B0  505A               	movf	??_cmdSetAES^0,w,c
  7035  0032B2  0A41               	xorlw	65	; case 65
  7036  0032B4  B4D8               	btfsc	status,2,c
  7037  0032B6  D7D3               	goto	l16502
  7038  0032B8  0A0F               	xorlw	15	; case 78
  7039  0032BA  B4D8               	btfsc	status,2,c
  7040  0032BC  D7CE               	goto	l16500
  7041  0032BE  D7D3               	goto	l16504
  7042  0032C0                     l16512:
  7043                           
  7044                           ; BSR set to: 0
  7045                           ;../app/app_src/application.c: 489:     p1 = strstr(atCommand,"=") + 1;
  7046  0032C0  0E24               	movlw	low _atCommand
  7047  0032C2  6E0D               	movwf	strstr@h^0,c
  7048  0032C4  0E02               	movlw	high _atCommand
  7049  0032C6  6E0E               	movwf	(strstr@h+1)^0,c
  7050  0032C8  0EDE               	movlw	low (STR_21+3)
  7051  0032CA  6E0F               	movwf	strstr@n^0,c
  7052  0032CC  0EFF               	movlw	high (STR_21+3)
  7053  0032CE  6E10               	movwf	(strstr@n+1)^0,c
  7054  0032D0  EC93  F032         	call	_strstr	;wreg free
  7055  0032D4  0E01               	movlw	1
  7056  0032D6  240D               	addwf	?_strstr^0,w,c
  7057  0032D8  0100               	movlb	0	; () banked
  7058  0032DA  6FA6               	movwf	cmdSetAES@p1& (0+255),b
  7059  0032DC  0E00               	movlw	0
  7060  0032DE  200E               	addwfc	(?_strstr+1)^0,w,c
  7061  0032E0  6FA7               	movwf	(cmdSetAES@p1+1)& (0+255),b
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;../app/app_src/application.c: 490:     if(!p1){
  7065  0032E2  51A6               	movf	cmdSetAES@p1& (0+255),w,b
  7066  0032E4  11A7               	iorwf	(cmdSetAES@p1+1)& (0+255),w,b
  7067  0032E6  A4D8               	btfss	status,2,c
  7068  0032E8  D009               	goto	l16520
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;../app/app_src/application.c: 491:         printf("NOT OK:%u\r\n", UNDEFCMD);
  7072  0032EA  0EC5               	movlw	low STR_3
  7073  0032EC  6F75               	movwf	printf@fmt& (0+255),b
  7074  0032EE  0EFE               	movlw	high STR_3
  7075  0032F0  6F76               	movwf	(printf@fmt+1)& (0+255),b
  7076  0032F2  0E09               	movlw	9
  7077  0032F4  6F77               	movwf	(?_printf+2)& (0+255),b
  7078  0032F6  EC60  F04A         	call	_printf	;wreg free
  7079  0032FA  0012               	return	
  7080  0032FC                     l16520:
  7081                           
  7082                           ; BSR set to: 0
  7083                           ;../app/app_src/application.c: 495:  if(strlen(p1) != 32){
  7084  0032FC  0060  F298  F002   	movff	cmdSetAES@p1,strlen@s
  7085  003302  0060  F29C  F003   	movff	cmdSetAES@p1+1,strlen@s+1
  7086  003308  ECE8  F043         	call	_strlen	;wreg free
  7087  00330C  0E20               	movlw	32
  7088  00330E  1802               	xorwf	?_strlen^0,w,c
  7089  003310  1003               	iorwf	(?_strlen+1)^0,w,c
  7090  003312  B4D8               	btfsc	status,2,c
  7091  003314  D00A               	goto	l16526
  7092                           
  7093                           ;../app/app_src/application.c: 496:   printf("NOT OK:%u\r\n",KEYLENERROR);
  7094  003316  0EC5               	movlw	low STR_3
  7095  003318  0100               	movlb	0	; () banked
  7096  00331A  6F75               	movwf	printf@fmt& (0+255),b
  7097  00331C  0EFE               	movlw	high STR_3
  7098  00331E  6F76               	movwf	(printf@fmt+1)& (0+255),b
  7099  003320  0E08               	movlw	8
  7100  003322  6F77               	movwf	(?_printf+2)& (0+255),b
  7101  003324  EC60  F04A         	call	_printf	;wreg free
  7102  003328  0012               	return	
  7103  00332A                     l16526:
  7104                           
  7105                           ;../app/app_src/application.c: 499:  memcpy(AESstr,p1,32);
  7106  00332A  0E7F               	movlw	low cmdSetAES@AESstr
  7107  00332C  6E08               	movwf	memcpy@d1^0,c
  7108  00332E  6A09               	clrf	(memcpy@d1+1)^0,c
  7109  003330  0060  F298  F00A   	movff	cmdSetAES@p1,memcpy@s1
  7110  003336  0060  F29C  F00B   	movff	cmdSetAES@p1+1,memcpy@s1+1
  7111  00333C  0E00               	movlw	0
  7112  00333E  6E0D               	movwf	(memcpy@n+1)^0,c
  7113  003340  0E20               	movlw	32
  7114  003342  6E0C               	movwf	memcpy@n^0,c
  7115  003344  EC95  F03F         	call	_memcpy	;wreg free
  7116                           
  7117                           ;../app/app_src/application.c: 501:  for(uint8_t i = 0; i < 16; i++){
  7118  003348  0E00               	movlw	0
  7119  00334A  0100               	movlb	0	; () banked
  7120  00334C  6FA8               	movwf	cmdSetAES@i& (0+255),b
  7121  00334E                     l16534:
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;../app/app_src/application.c: 502:   char temp[3];;../app/app_src/application.c: 503:  
      +                           char *p2;;../app/app_src/application.c: 504:   uint8_t byte;;../app/app_src/application
      +                          .c: 505:   memcpy(temp,0,sizeof(temp));
  7125  00334E  0EA1               	movlw	low cmdSetAES@temp
  7126  003350  6E08               	movwf	memcpy@d1^0,c
  7127  003352  6A09               	clrf	(memcpy@d1+1)^0,c
  7128  003354  0E00               	movlw	0
  7129  003356  6E0A               	movwf	memcpy@s1^0,c
  7130  003358  0E00               	movlw	0
  7131  00335A  6E0B               	movwf	(memcpy@s1+1)^0,c
  7132  00335C  0E00               	movlw	0
  7133  00335E  6E0D               	movwf	(memcpy@n+1)^0,c
  7134  003360  0E03               	movlw	3
  7135  003362  6E0C               	movwf	memcpy@n^0,c
  7136  003364  EC95  F03F         	call	_memcpy	;wreg free
  7137                           
  7138                           ;../app/app_src/application.c: 506:   memcpy(temp,(AESstr + i*2),2);
  7139  003368  0EA1               	movlw	low cmdSetAES@temp
  7140  00336A  6E08               	movwf	memcpy@d1^0,c
  7141  00336C  6A09               	clrf	(memcpy@d1+1)^0,c
  7142  00336E  0100               	movlb	0	; () banked
  7143  003370  51A8               	movf	cmdSetAES@i& (0+255),w,b
  7144  003372  0D02               	mullw	2
  7145  003374  50F3               	movf	243,w,c
  7146  003376  0F7F               	addlw	low cmdSetAES@AESstr
  7147  003378  6E5A               	movwf	??_cmdSetAES^0,c
  7148  00337A  0060  F168  F00A   	movff	??_cmdSetAES,memcpy@s1
  7149  003380  6A0B               	clrf	(memcpy@s1+1)^0,c
  7150  003382  0E00               	movlw	0
  7151  003384  6E0D               	movwf	(memcpy@n+1)^0,c
  7152  003386  0E02               	movlw	2
  7153  003388  6E0C               	movwf	memcpy@n^0,c
  7154  00338A  EC95  F03F         	call	_memcpy	;wreg free
  7155                           
  7156                           ;../app/app_src/application.c: 507:   byte = (uint8_t)strtoul(temp,&p2,16);
  7157  00338E  0EA1               	movlw	low cmdSetAES@temp
  7158  003390  6E34               	movwf	strtoul@s^0,c
  7159  003392  6A35               	clrf	(strtoul@s+1)^0,c
  7160  003394  0E9F               	movlw	low cmdSetAES@p2
  7161  003396  6E36               	movwf	strtoul@endptr^0,c
  7162  003398  6A37               	clrf	(strtoul@endptr+1)^0,c
  7163  00339A  0E00               	movlw	0
  7164  00339C  6E39               	movwf	(strtoul@base+1)^0,c
  7165  00339E  0E10               	movlw	16
  7166  0033A0  6E38               	movwf	strtoul@base^0,c
  7167  0033A2  EC1A  F045         	call	_strtoul	;wreg free
  7168  0033A6  5034               	movf	?_strtoul^0,w,c
  7169  0033A8  0100               	movlb	0	; () banked
  7170  0033AA  6FA5               	movwf	cmdSetAES@byte& (0+255),b
  7171                           
  7172                           ; BSR set to: 0
  7173                           ;../app/app_src/application.c: 508:         if('A' == key_type){
  7174  0033AC  0E41               	movlw	65
  7175  0033AE  19A4               	xorwf	cmdSetAES@key_type& (0+255),w,b
  7176  0033B0  A4D8               	btfss	status,2,c
  7177  0033B2  D015               	goto	l16546
  7178                           
  7179                           ; BSR set to: 0
  7180                           ;../app/app_src/application.c: 509:             aes_key[i] = byte;
  7181  0033B4  0E14               	movlw	low _aes_key
  7182  0033B6  25A8               	addwf	cmdSetAES@i& (0+255),w,b
  7183  0033B8  6ED9               	movwf	fsr2l,c
  7184  0033BA  6ADA               	clrf	fsr2h,c
  7185  0033BC  0E02               	movlw	high _aes_key
  7186  0033BE  22DA               	addwfc	fsr2h,f,c
  7187  0033C0  0060  F297  FFDF   	movff	cmdSetAES@byte,indf2
  7188                           
  7189                           ; BSR set to: 0
  7190                           ;../app/app_src/application.c: 510:             DATAEE_WriteByte_Platform((0 + 0 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i),byte);
  7191  0033C6  0E09               	movlw	9
  7192  0033C8  25A8               	addwf	cmdSetAES@i& (0+255),w,b
  7193  0033CA  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  7194  0033CC  6A07               	clrf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  7195  0033CE  0E00               	movlw	0
  7196  0033D0  2207               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,f,c
  7197  0033D2  0060  F294  F008   	movff	cmdSetAES@byte,DATAEE_WriteByte_Platform@data
  7198  0033D8  EC82  F045         	call	_DATAEE_WriteByte_Platform	;wreg free
  7199                           
  7200                           ;../app/app_src/application.c: 511:         }
  7201  0033DC  D014               	goto	l16550
  7202  0033DE                     l16546:
  7203                           
  7204                           ; BSR set to: 0
  7205                           ;../app/app_src/application.c: 513:             net_key[i] = byte;
  7206  0033DE  0E79               	movlw	low _net_key
  7207  0033E0  25A8               	addwf	cmdSetAES@i& (0+255),w,b
  7208  0033E2  6ED9               	movwf	fsr2l,c
  7209  0033E4  6ADA               	clrf	fsr2h,c
  7210  0033E6  0E01               	movlw	high _net_key
  7211  0033E8  22DA               	addwfc	fsr2h,f,c
  7212  0033EA  0060  F297  FFDF   	movff	cmdSetAES@byte,indf2
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;../app/app_src/application.c: 514:             DATAEE_WriteByte_Platform((0 + 0 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i),byte);
  7216  0033F0  0E23               	movlw	35
  7217  0033F2  25A8               	addwf	cmdSetAES@i& (0+255),w,b
  7218  0033F4  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  7219  0033F6  6A07               	clrf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  7220  0033F8  0E00               	movlw	0
  7221  0033FA  2207               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,f,c
  7222  0033FC  0060  F294  F008   	movff	cmdSetAES@byte,DATAEE_WriteByte_Platform@data
  7223  003402  EC82  F045         	call	_DATAEE_WriteByte_Platform	;wreg free
  7224  003406                     l16550:
  7225                           
  7226                           ;../app/app_src/application.c: 516:  }
  7227  003406  0100               	movlb	0	; () banked
  7228  003408  2BA8               	incf	cmdSetAES@i& (0+255),f,b
  7229                           
  7230                           ; BSR set to: 0
  7231  00340A  0E0F               	movlw	15
  7232  00340C  65A8               	cpfsgt	cmdSetAES@i& (0+255),b
  7233  00340E  D79F               	goto	l16534
  7234                           
  7235                           ; BSR set to: 0
  7236                           ;../app/app_src/application.c: 517:     NWK_SetSecurityKey(net_key);
  7237  003410  0E79               	movlw	low _net_key
  7238  003412  6E13               	movwf	NWK_SetSecurityKey@key^0,c
  7239  003414  0E01               	movlw	high _net_key
  7240  003416  6E14               	movwf	(NWK_SetSecurityKey@key+1)^0,c
  7241  003418  EC82  F04A         	call	_NWK_SetSecurityKey	;wreg free
  7242                           
  7243                           ;../app/app_src/application.c: 518:  printf("OK\r\n");
  7244  00341C  0ED6               	movlw	low STR_12
  7245  00341E  0100               	movlb	0	; () banked
  7246  003420  6F75               	movwf	printf@fmt& (0+255),b
  7247  003422  0EFF               	movlw	high STR_12
  7248  003424  6F76               	movwf	(printf@fmt+1)& (0+255),b
  7249  003426  EC60  F04A         	call	_printf	;wreg free
  7250                           
  7251                           ; BSR set to: 0
  7252  00342A  0012               	return		;funcret
  7253  00342C                     __end_of_cmdSetAES:
  7254                           	opt callstack 0
  7255                           
  7256 ;; *************** function _cmdSendSink *****************
  7257 ;; Defined at:
  7258 ;;		line 452 in file "../app/app_src/application.c"
  7259 ;; Parameters:    Size  Location     Type
  7260 ;;  cmd             2    1[COMRAM] PTR unsigned char 
  7261 ;;		 -> atCommand(80), 
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;		None
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  1    wreg      void 
  7266 ;; Registers used:
  7267 ;;		None
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7276 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7277 ;;Total ram usage:        2 bytes
  7278 ;; Hardware stack levels used:    1
  7279 ;; Hardware stack levels required when called:    7
  7280 ;; This function calls:
  7281 ;;		Nothing
  7282 ;; This function is called by:
  7283 ;;		_executeATCommand
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           	psect	text26
  7288  009A1E                     __ptext26:
  7289                           	opt callstack 0
  7290  009A1E                     _cmdSendSink:
  7291                           	opt callstack 21
  7292                           
  7293                           ; BSR set to: 0
  7294                           ;incstack = 0
  7295  009A1E  0012               	return		;funcret
  7296  009A20                     __end_of_cmdSendSink:
  7297                           	opt callstack 0
  7298                           
  7299 ;; *************** function _cmdSend *****************
  7300 ;; Defined at:
  7301 ;;		line 234 in file "../app/app_src/application.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  7304 ;;		 -> atCommand(80), 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;  buf_id          1   42[BANK0 ] unsigned char 
  7307 ;;  destaddr        5   31[BANK0 ] unsigned char [5]
  7308 ;;  p1              2   40[BANK0 ] PTR unsigned char 
  7309 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  7310 ;;  p2              2   38[BANK0 ] PTR unsigned char 
  7311 ;;		 -> cmdSetSF@CHstr(3), STR_58(2), STR_57(2), cmdSetCADRSSI@CHstr(3), 
  7312 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7313 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7314 ;;  tempaddr        2   36[BANK0 ] unsigned short 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  1    wreg      void 
  7317 ;; Registers used:
  7318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 3F/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7325 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7326 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7327 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7328 ;;Total ram usage:       16 bytes
  7329 ;; Hardware stack levels used:    1
  7330 ;; Hardware stack levels required when called:   16
  7331 ;; This function calls:
  7332 ;;		_NWK_DataReq
  7333 ;;		_get_free_tx_buffer
  7334 ;;		_memcpy
  7335 ;;		_memset
  7336 ;;		_printf
  7337 ;;		_strlen
  7338 ;;		_strstr
  7339 ;;		_strtoul
  7340 ;; This function is called by:
  7341 ;;		_executeATCommand
  7342 ;; This function uses a non-reentrant model
  7343 ;;
  7344                           
  7345                           	psect	text27
  7346  002B76                     __ptext27:
  7347                           	opt callstack 0
  7348  002B76                     _cmdSend:
  7349                           	opt callstack 12
  7350                           
  7351                           ;../app/app_src/application.c: 235:  uint16_t tempaddr;;../app/app_src/application.c: 23
      +                          6:  char *p1,*p2;;../app/app_src/application.c: 237:  char destaddr[5];;../app/app_src/a
      +                          pplication.c: 238:         destaddr[4] = 0;
  7352                           
  7353                           ;incstack = 0
  7354  002B76  0E00               	movlw	0
  7355  002B78  0100               	movlb	0	; () banked
  7356  002B7A  6F83               	movwf	(cmdSend@destaddr+4)& (0+255),b
  7357                           
  7358                           ; BSR set to: 0
  7359                           ;../app/app_src/application.c: 239:  p1 = strstr(cmd,":") + 1;
  7360  002B7C  0060  F160  F00D   	movff	cmdSend@cmd,strstr@h
  7361  002B82  0060  F164  F00E   	movff	cmdSend@cmd+1,strstr@h+1
  7362  002B88  0E5F               	movlw	low (STR_66+5)
  7363  002B8A  6E0F               	movwf	strstr@n^0,c
  7364  002B8C  0EFF               	movlw	high (STR_66+5)
  7365  002B8E  6E10               	movwf	(strstr@n+1)^0,c
  7366  002B90  EC93  F032         	call	_strstr	;wreg free
  7367  002B94  0E01               	movlw	1
  7368  002B96  240D               	addwf	?_strstr^0,w,c
  7369  002B98  0100               	movlb	0	; () banked
  7370  002B9A  6F88               	movwf	cmdSend@p1& (0+255),b
  7371  002B9C  0E00               	movlw	0
  7372  002B9E  200E               	addwfc	(?_strstr+1)^0,w,c
  7373  002BA0  6F89               	movwf	(cmdSend@p1+1)& (0+255),b
  7374                           
  7375                           ; BSR set to: 0
  7376                           ;../app/app_src/application.c: 240:  memcpy(destaddr,p1,4);
  7377  002BA2  0E7F               	movlw	low cmdSend@destaddr
  7378  002BA4  6E08               	movwf	memcpy@d1^0,c
  7379  002BA6  6A09               	clrf	(memcpy@d1+1)^0,c
  7380  002BA8  0060  F220  F00A   	movff	cmdSend@p1,memcpy@s1
  7381  002BAE  0060  F224  F00B   	movff	cmdSend@p1+1,memcpy@s1+1
  7382  002BB4  0E00               	movlw	0
  7383  002BB6  6E0D               	movwf	(memcpy@n+1)^0,c
  7384  002BB8  0E04               	movlw	4
  7385  002BBA  6E0C               	movwf	memcpy@n^0,c
  7386  002BBC  EC95  F03F         	call	_memcpy	;wreg free
  7387                           
  7388                           ;../app/app_src/application.c: 242:  tempaddr = strtoul(destaddr,&p2,16);
  7389  002BC0  0E7F               	movlw	low cmdSend@destaddr
  7390  002BC2  6E34               	movwf	strtoul@s^0,c
  7391  002BC4  6A35               	clrf	(strtoul@s+1)^0,c
  7392  002BC6  0E86               	movlw	low cmdSend@p2
  7393  002BC8  6E36               	movwf	strtoul@endptr^0,c
  7394  002BCA  6A37               	clrf	(strtoul@endptr+1)^0,c
  7395  002BCC  0E00               	movlw	0
  7396  002BCE  6E39               	movwf	(strtoul@base+1)^0,c
  7397  002BD0  0E10               	movlw	16
  7398  002BD2  6E38               	movwf	strtoul@base^0,c
  7399  002BD4  EC1A  F045         	call	_strtoul	;wreg free
  7400  002BD8  0060  F0D0  F084   	movff	?_strtoul,cmdSend@tempaddr
  7401  002BDE  0060  F0D4  F085   	movff	?_strtoul+1,cmdSend@tempaddr+1
  7402                           
  7403                           ;../app/app_src/application.c: 244:  p1 = strstr(cmd,"=") + 1;
  7404  002BE4  0060  F160  F00D   	movff	cmdSend@cmd,strstr@h
  7405  002BEA  0060  F164  F00E   	movff	cmdSend@cmd+1,strstr@h+1
  7406  002BF0  0EDE               	movlw	low (STR_21+3)
  7407  002BF2  6E0F               	movwf	strstr@n^0,c
  7408  002BF4  0EFF               	movlw	high (STR_21+3)
  7409  002BF6  6E10               	movwf	(strstr@n+1)^0,c
  7410  002BF8  EC93  F032         	call	_strstr	;wreg free
  7411  002BFC  0E01               	movlw	1
  7412  002BFE  240D               	addwf	?_strstr^0,w,c
  7413  002C00  0100               	movlb	0	; () banked
  7414  002C02  6F88               	movwf	cmdSend@p1& (0+255),b
  7415  002C04  0E00               	movlw	0
  7416  002C06  200E               	addwfc	(?_strstr+1)^0,w,c
  7417  002C08  6F89               	movwf	(cmdSend@p1+1)& (0+255),b
  7418                           
  7419                           ; BSR set to: 0
  7420                           ;../app/app_src/application.c: 245:  if(strlen(p1) > 64){
  7421  002C0A  0060  F220  F002   	movff	cmdSend@p1,strlen@s
  7422  002C10  0060  F224  F003   	movff	cmdSend@p1+1,strlen@s+1
  7423  002C16  ECE8  F043         	call	_strlen	;wreg free
  7424  002C1A  5003               	movf	(?_strlen+1)^0,w,c
  7425  002C1C  E104               	bnz	u16730
  7426  002C1E  0E41               	movlw	65
  7427  002C20  5C02               	subwf	?_strlen^0,w,c
  7428  002C22  A0D8               	btfss	status,0,c
  7429  002C24  D00A               	goto	l16330
  7430  002C26                     u16730:
  7431                           
  7432                           ;../app/app_src/application.c: 246:   printf("NOT OK:%u\r\n", MESSAGE_TOO_LONG);
  7433  002C26  0EC5               	movlw	low STR_3
  7434  002C28  0100               	movlb	0	; () banked
  7435  002C2A  6F75               	movwf	printf@fmt& (0+255),b
  7436  002C2C  0EFE               	movlw	high STR_3
  7437  002C2E  6F76               	movwf	(printf@fmt+1)& (0+255),b
  7438  002C30  0E07               	movlw	7
  7439  002C32  6F77               	movwf	(?_printf+2)& (0+255),b
  7440  002C34  EC60  F04A         	call	_printf	;wreg free
  7441                           
  7442                           ;../app/app_src/application.c: 247:  }
  7443  002C38  0012               	return	
  7444  002C3A                     l16330:
  7445                           
  7446                           ;../app/app_src/application.c: 249:         uint8_t buf_id;;../app/app_src/application.c
      +                          : 250:         if(!get_free_tx_buffer(&buf_id)){
  7447  002C3A  0E8A               	movlw	low cmdSend@buf_id
  7448  002C3C  6E02               	movwf	get_free_tx_buffer@buf_id^0,c
  7449  002C3E  ECDB  F040         	call	_get_free_tx_buffer	;wreg free
  7450  002C42  0900               	iorlw	0
  7451  002C44  A4D8               	btfss	status,2,c
  7452  002C46  D00A               	goto	l16336
  7453                           
  7454                           ;../app/app_src/application.c: 251:             printf("NOT OK:%u\r\n", NO_FREE_BUF);
  7455  002C48  0EC5               	movlw	low STR_3
  7456  002C4A  0100               	movlb	0	; () banked
  7457  002C4C  6F75               	movwf	printf@fmt& (0+255),b
  7458  002C4E  0EFE               	movlw	high STR_3
  7459  002C50  6F76               	movwf	(printf@fmt+1)& (0+255),b
  7460  002C52  0E11               	movlw	17
  7461  002C54  6F77               	movwf	(?_printf+2)& (0+255),b
  7462  002C56  EC60  F04A         	call	_printf	;wreg free
  7463  002C5A  0012               	return	
  7464  002C5C                     l16336:
  7465                           
  7466                           ;../app/app_src/application.c: 254:         memset(&tx_buffer[buf_id].payload, 0, (127 -
      +                           16 - 2 ));
  7467  002C5C  0100               	movlb	0	; () banked
  7468  002C5E  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7469  002C60  0D83               	mullw	131
  7470  002C62  0E80               	movlw	low (_tx_buffer+22)
  7471  002C64  24F3               	addwf	243,w,c
  7472  002C66  6E02               	movwf	memset@dest^0,c
  7473  002C68  0E08               	movlw	high (_tx_buffer+22)
  7474  002C6A  20F4               	addwfc	prodh,w,c
  7475  002C6C  6E03               	movwf	(memset@dest+1)^0,c
  7476  002C6E  0E00               	movlw	0
  7477  002C70  6E05               	movwf	(memset@c+1)^0,c
  7478  002C72  0E00               	movlw	0
  7479  002C74  6E04               	movwf	memset@c^0,c
  7480  002C76  0E00               	movlw	0
  7481  002C78  6E07               	movwf	(memset@n+1)^0,c
  7482  002C7A  0E6D               	movlw	109
  7483  002C7C  6E06               	movwf	memset@n^0,c
  7484  002C7E  ECBC  F024         	call	_memset	;wreg free
  7485                           
  7486                           ;../app/app_src/application.c: 255:   memcpy(&tx_buffer[buf_id].payload,p1,strlen(p1));
  7487  002C82  0100               	movlb	0	; () banked
  7488  002C84  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7489  002C86  0D83               	mullw	131
  7490  002C88  0E80               	movlw	low (_tx_buffer+22)
  7491  002C8A  24F3               	addwf	243,w,c
  7492  002C8C  6E08               	movwf	memcpy@d1^0,c
  7493  002C8E  0E08               	movlw	high (_tx_buffer+22)
  7494  002C90  20F4               	addwfc	prodh,w,c
  7495  002C92  6E09               	movwf	(memcpy@d1+1)^0,c
  7496  002C94  0060  F220  F00A   	movff	cmdSend@p1,memcpy@s1
  7497  002C9A  0060  F224  F00B   	movff	cmdSend@p1+1,memcpy@s1+1
  7498  002CA0  0060  F220  F002   	movff	cmdSend@p1,strlen@s
  7499  002CA6  0060  F224  F003   	movff	cmdSend@p1+1,strlen@s+1
  7500  002CAC  ECE8  F043         	call	_strlen	;wreg free
  7501  002CB0  0060  F008  F00C   	movff	?_strlen,memcpy@n
  7502  002CB6  0060  F00C  F00D   	movff	?_strlen+1,memcpy@n+1
  7503  002CBC  EC95  F03F         	call	_memcpy	;wreg free
  7504                           
  7505                           ;../app/app_src/application.c: 256:   tx_buffer[buf_id].nwkDataReq.dstAddr = tempaddr;
  7506  002CC0  0100               	movlb	0	; () banked
  7507  002CC2  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7508  002CC4  0D83               	mullw	131
  7509  002CC6  0E72               	movlw	low (_tx_buffer+8)
  7510  002CC8  24F3               	addwf	243,w,c
  7511  002CCA  6ED9               	movwf	fsr2l,c
  7512  002CCC  0E08               	movlw	high (_tx_buffer+8)
  7513  002CCE  20F4               	addwfc	prodh,w,c
  7514  002CD0  6EDA               	movwf	fsr2h,c
  7515  002CD2  0060  F213  FFDE   	movff	cmdSend@tempaddr,postinc2
  7516  002CD8  0060  F217  FFDD   	movff	cmdSend@tempaddr+1,postdec2
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;../app/app_src/application.c: 257:         tx_buffer[buf_id].nwkDataReq.dstEndpoint = A
      +                          SCII_EP;
  7520  002CDE  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7521  002CE0  0D83               	mullw	131
  7522  002CE2  0E74               	movlw	low (_tx_buffer+10)
  7523  002CE4  24F3               	addwf	243,w,c
  7524  002CE6  6ED9               	movwf	fsr2l,c
  7525  002CE8  0E08               	movlw	high (_tx_buffer+10)
  7526  002CEA  20F4               	addwfc	prodh,w,c
  7527  002CEC  6EDA               	movwf	fsr2h,c
  7528  002CEE  0E01               	movlw	1
  7529  002CF0  6EDF               	movwf	indf2,c
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;../app/app_src/application.c: 258:         tx_buffer[buf_id].nwkDataReq.srcEndpoint = A
      +                          SCII_EP;
  7533  002CF2  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7534  002CF4  0D83               	mullw	131
  7535  002CF6  0E75               	movlw	low (_tx_buffer+11)
  7536  002CF8  24F3               	addwf	243,w,c
  7537  002CFA  6ED9               	movwf	fsr2l,c
  7538  002CFC  0E08               	movlw	high (_tx_buffer+11)
  7539  002CFE  20F4               	addwfc	prodh,w,c
  7540  002D00  6EDA               	movwf	fsr2h,c
  7541  002D02  0E01               	movlw	1
  7542  002D04  6EDF               	movwf	indf2,c
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;../app/app_src/application.c: 259:         tx_buffer[buf_id].nwkDataReq.options = NWK_O
      +                          PT_ACK_REQUEST |
  7546  002D06  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7547  002D08  0D83               	mullw	131
  7548  002D0A  0E76               	movlw	low (_tx_buffer+12)
  7549  002D0C  24F3               	addwf	243,w,c
  7550  002D0E  6ED9               	movwf	fsr2l,c
  7551  002D10  0E08               	movlw	high (_tx_buffer+12)
  7552  002D12  20F4               	addwfc	prodh,w,c
  7553  002D14  6EDA               	movwf	fsr2h,c
  7554  002D16  0E03               	movlw	3
  7555  002D18  6EDF               	movwf	indf2,c
  7556                           
  7557                           ; BSR set to: 0
  7558                           ;../app/app_src/application.c: 261:         tx_buffer[buf_id].nwkDataReq.data = &tx_buff
      +                          er[buf_id].payload;
  7559  002D1A  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7560  002D1C  0D83               	mullw	131
  7561  002D1E  0E80               	movlw	low (_tx_buffer+22)
  7562  002D20  24F3               	addwf	243,w,c
  7563  002D22  6E5A               	movwf	??_cmdSend^0,c
  7564  002D24  0E08               	movlw	high (_tx_buffer+22)
  7565  002D26  20F4               	addwfc	prodh,w,c
  7566  002D28  6E5B               	movwf	(??_cmdSend+1)^0,c
  7567  002D2A  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7568  002D2C  0D83               	mullw	131
  7569  002D2E  0E79               	movlw	low (_tx_buffer+15)
  7570  002D30  24F3               	addwf	243,w,c
  7571  002D32  6ED9               	movwf	fsr2l,c
  7572  002D34  0E08               	movlw	high (_tx_buffer+15)
  7573  002D36  20F4               	addwfc	prodh,w,c
  7574  002D38  6EDA               	movwf	fsr2h,c
  7575  002D3A  0060  F16B  FFDE   	movff	??_cmdSend,postinc2
  7576  002D40  0060  F16F  FFDD   	movff	??_cmdSend+1,postdec2
  7577                           
  7578                           ; BSR set to: 0
  7579                           ;../app/app_src/application.c: 262:         tx_buffer[buf_id].nwkDataReq.size = strlen(p
      +                          1);
  7580  002D46  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7581  002D48  0D83               	mullw	131
  7582  002D4A  0E7B               	movlw	low (_tx_buffer+17)
  7583  002D4C  24F3               	addwf	243,w,c
  7584  002D4E  6ED9               	movwf	fsr2l,c
  7585  002D50  0E08               	movlw	high (_tx_buffer+17)
  7586  002D52  20F4               	addwfc	prodh,w,c
  7587  002D54  6EDA               	movwf	fsr2h,c
  7588  002D56  0060  F220  F002   	movff	cmdSend@p1,strlen@s
  7589  002D5C  0060  F224  F003   	movff	cmdSend@p1+1,strlen@s+1
  7590  002D62  ECE8  F043         	call	_strlen	;wreg free
  7591  002D66  5002               	movf	?_strlen^0,w,c
  7592  002D68  6EDF               	movwf	indf2,c
  7593                           
  7594                           ;../app/app_src/application.c: 263:         tx_buffer[buf_id].nwkDataReq.confirm = appDa
      +                          taConf;
  7595  002D6A  0100               	movlb	0	; () banked
  7596  002D6C  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7597  002D6E  0D83               	mullw	131
  7598  002D70  0E7C               	movlw	low (_tx_buffer+18)
  7599  002D72  24F3               	addwf	243,w,c
  7600  002D74  6ED9               	movwf	fsr2l,c
  7601  002D76  0E08               	movlw	high (_tx_buffer+18)
  7602  002D78  20F4               	addwfc	prodh,w,c
  7603  002D7A  6EDA               	movwf	fsr2h,c
  7604  002D7C  0E26               	movlw	low _appDataConf
  7605  002D7E  6EDE               	movwf	postinc2,c
  7606  002D80  0E95               	movlw	high _appDataConf
  7607  002D82  6EDD               	movwf	postdec2,c
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;../app/app_src/application.c: 264:         tx_buffer[buf_id].msgid = msgIDCounter++;
  7611  002D84  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7612  002D86  0D83               	mullw	131
  7613  002D88  0E6C               	movlw	low (_tx_buffer+2)
  7614  002D8A  24F3               	addwf	243,w,c
  7615  002D8C  6ED9               	movwf	fsr2l,c
  7616  002D8E  0E08               	movlw	high (_tx_buffer+2)
  7617  002D90  20F4               	addwfc	prodh,w,c
  7618  002D92  6EDA               	movwf	fsr2h,c
  7619  002D94  0060  F38F  FFDF   	movff	_msgIDCounter,indf2
  7620                           
  7621                           ; BSR set to: 0
  7622  002D9A  2BE3               	incf	_msgIDCounter& (0+255),f,b
  7623                           
  7624                           ; BSR set to: 0
  7625                           ;../app/app_src/application.c: 265:         NWK_DataReq(&tx_buffer[buf_id].nwkDataReq);
  7626  002D9C  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7627  002D9E  0D83               	mullw	131
  7628  002DA0  0E6D               	movlw	low (_tx_buffer+3)
  7629  002DA2  24F3               	addwf	243,w,c
  7630  002DA4  6E02               	movwf	NWK_DataReq@req^0,c
  7631  002DA6  0E08               	movlw	high (_tx_buffer+3)
  7632  002DA8  20F4               	addwfc	prodh,w,c
  7633  002DAA  6E03               	movwf	(NWK_DataReq@req+1)^0,c
  7634  002DAC  EC99  F03E         	call	_NWK_DataReq	;wreg free
  7635                           
  7636                           ; BSR set to: 0
  7637                           ;../app/app_src/application.c: 266:   printf("OK:%u\r\n", tx_buffer[buf_id].msgid);
  7638  002DB0  0EC9               	movlw	low (STR_3+4)
  7639  002DB2  6F75               	movwf	printf@fmt& (0+255),b
  7640  002DB4  0EFE               	movlw	high (STR_3+4)
  7641  002DB6  6F76               	movwf	(printf@fmt+1)& (0+255),b
  7642  002DB8  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7643  002DBA  0D83               	mullw	131
  7644  002DBC  0E6C               	movlw	low (_tx_buffer+2)
  7645  002DBE  24F3               	addwf	243,w,c
  7646  002DC0  6ED9               	movwf	fsr2l,c
  7647  002DC2  0E08               	movlw	high (_tx_buffer+2)
  7648  002DC4  20F4               	addwfc	prodh,w,c
  7649  002DC6  6EDA               	movwf	fsr2h,c
  7650  002DC8  50DF               	movf	indf2,w,c
  7651  002DCA  6E5A               	movwf	??_cmdSend^0,c
  7652  002DCC  505A               	movf	??_cmdSend^0,w,c
  7653  002DCE  6F77               	movwf	(?_printf+2)& (0+255),b
  7654  002DD0  6B78               	clrf	(?_printf+3)& (0+255),b
  7655  002DD2  EC60  F04A         	call	_printf	;wreg free
  7656                           
  7657                           ; BSR set to: 0
  7658  002DD6  0012               	return		;funcret
  7659  002DD8                     __end_of_cmdSend:
  7660                           	opt callstack 0
  7661                           
  7662 ;; *************** function _strtoul *****************
  7663 ;; Defined at:
  7664 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtoul.c"
  7665 ;; Parameters:    Size  Location     Type
  7666 ;;  s               2   51[COMRAM] PTR const unsigned char 
  7667 ;;		 -> STR_58(2), STR_57(2), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
  7668 ;;		 -> cmdSetAES@temp(3), atCommand(80), NULL(0), cmdSend@destaddr(5), 
  7669 ;;  endptr          2   53[COMRAM] PTR PTR unsigned char 
  7670 ;;		 -> cmdSetTX@p2(2), cmdSetRFCH@p2(2), cmdSetAES@p2(2), NULL(0), 
  7671 ;;		 -> cmdSend@p2(2), 
  7672 ;;  base            2   55[COMRAM] int 
  7673 ;; Auto vars:     Size  Location     Type
  7674 ;;		None
  7675 ;; Return value:  Size  Location     Type
  7676 ;;                  4   51[COMRAM] unsigned long 
  7677 ;; Registers used:
  7678 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7679 ;; Tracked objects:
  7680 ;;		On entry : 0/0
  7681 ;;		On exit  : 0/0
  7682 ;;		Unchanged: 0/0
  7683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7684 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7687 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7688 ;;Total ram usage:        6 bytes
  7689 ;; Hardware stack levels used:    1
  7690 ;; Hardware stack levels required when called:   10
  7691 ;; This function calls:
  7692 ;;		___strtoxl
  7693 ;; This function is called by:
  7694 ;;		_cmdSend
  7695 ;;		_cmdSetAddr
  7696 ;;		_cmdSetNaddr
  7697 ;;		_cmdSetAES
  7698 ;;		_cmdSetRFCH
  7699 ;;		_cmdSetTX
  7700 ;;		_cmdSetBaud
  7701 ;; This function uses a non-reentrant model
  7702 ;;
  7703                           
  7704                           	psect	text28
  7705  008A34                     __ptext28:
  7706                           	opt callstack 0
  7707  008A34                     _strtoul:
  7708                           	opt callstack 17
  7709                           
  7710                           ; BSR set to: 0
  7711                           ;incstack = 0
  7712  008A34  0060  F0D0  F010   	movff	strtoul@s,___strtoxl@s
  7713  008A3A  0060  F0D4  F011   	movff	strtoul@s+1,___strtoxl@s+1
  7714  008A40  0060  F0D8  F012   	movff	strtoul@endptr,___strtoxl@endptr
  7715  008A46  0060  F0DC  F013   	movff	strtoul@endptr+1,___strtoxl@endptr+1
  7716  008A4C  0060  F0E0  F014   	movff	strtoul@base,___strtoxl@base
  7717  008A52  0060  F0E4  F015   	movff	strtoul@base+1,___strtoxl@base+1
  7718  008A58  0E00               	movlw	0
  7719  008A5A  6E16               	movwf	___strtoxl@is_signed^0,c
  7720  008A5C  EC5D  F005         	call	___strtoxl	;wreg free
  7721  008A60  0060  F040  F034   	movff	?___strtoxl,?_strtoul
  7722  008A66  0060  F044  F035   	movff	?___strtoxl+1,?_strtoul+1
  7723  008A6C  0060  F048  F036   	movff	?___strtoxl+2,?_strtoul+2
  7724  008A72  0060  F04C  F037   	movff	?___strtoxl+3,?_strtoul+3
  7725  008A78  0012               	return		;funcret
  7726  008A7A                     __end_of_strtoul:
  7727                           	opt callstack 0
  7728                           
  7729 ;; *************** function ___strtoxl *****************
  7730 ;; Defined at:
  7731 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__strtoxl.c"
  7732 ;; Parameters:    Size  Location     Type
  7733 ;;  s               2   15[COMRAM] PTR const unsigned char 
  7734 ;;		 -> cmdSetSF@CHstr(3), STR_58(2), STR_57(2), cmdSetCADRSSI@CHstr(3), 
  7735 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7736 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7737 ;;  endptr          2   17[COMRAM] PTR PTR unsigned char 
  7738 ;;		 -> cmdSetSF@p2(2), cmdSetCADRSSI@p2(2), cmdSetTX@p2(2), cmdSetRFCH@p2(2), 
  7739 ;;		 -> cmdSetAES@p2(2), NULL(0), cmdSend@p2(2), 
  7740 ;;  base            2   19[COMRAM] int 
  7741 ;;  is_signed       1   21[COMRAM] unsigned char 
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;  a               4   44[COMRAM] unsigned long 
  7744 ;;  limit           4   38[COMRAM] unsigned long 
  7745 ;;  prev_a          4   26[COMRAM] unsigned long 
  7746 ;;  cp              2   48[COMRAM] PTR const unsigned char 
  7747 ;;		 -> cmdSetSF@CHstr(3), STR_58(2), STR_57(2), cmdSetCADRSSI@CHstr(3), 
  7748 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7749 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7750 ;;  c               1   50[COMRAM] unsigned char 
  7751 ;;  skip            1   43[COMRAM] unsigned char 
  7752 ;;  sign            1   42[COMRAM] unsigned char 
  7753 ;;  conv_done       1   37[COMRAM] unsigned char 
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  4   15[COMRAM] unsigned long 
  7756 ;; Registers used:
  7757 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7763 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7764 ;;      Locals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7765 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7766 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7767 ;;Total ram usage:       36 bytes
  7768 ;; Hardware stack levels used:    1
  7769 ;; Hardware stack levels required when called:    9
  7770 ;; This function calls:
  7771 ;;		___lmul
  7772 ;;		_isalpha
  7773 ;;		_isdigit
  7774 ;;		_isspace
  7775 ;;		_toupper
  7776 ;; This function is called by:
  7777 ;;		_strtol
  7778 ;;		_strtoul
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           	psect	text29
  7783  000ABA                     __ptext29:
  7784                           	opt callstack 0
  7785  000ABA                     ___strtoxl:
  7786                           	opt callstack 17
  7787                           
  7788                           ;incstack = 0
  7789  000ABA  0E00               	movlw	0
  7790  000ABC  6E2D               	movwf	___strtoxl@a^0,c
  7791  000ABE  0E00               	movlw	0
  7792  000AC0  6E2E               	movwf	(___strtoxl@a+1)^0,c
  7793  000AC2  0E00               	movlw	0
  7794  000AC4  6E2F               	movwf	(___strtoxl@a+2)^0,c
  7795  000AC6  0E00               	movlw	0
  7796  000AC8  6E30               	movwf	(___strtoxl@a+3)^0,c
  7797  000ACA  0060  F040  F031   	movff	___strtoxl@s,___strtoxl@cp
  7798  000AD0  0060  F044  F032   	movff	___strtoxl@s+1,___strtoxl@cp+1
  7799  000AD6  5031               	movf	___strtoxl@cp^0,w,c
  7800  000AD8  1032               	iorwf	(___strtoxl@cp+1)^0,w,c
  7801  000ADA  B4D8               	btfsc	status,2,c
  7802  000ADC  D1DF               	goto	l15816
  7803  000ADE  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7804  000AE4  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7805  000AEA  0E00               	movlw	low (__mediumconst shr (0+16))
  7806  000AEC  6EF8               	movwf	tblptru,c
  7807  000AEE  0E0F               	movlw	(high __ramtop+-1)
  7808  000AF0  64F7               	cpfsgt	tblptrh,c
  7809  000AF2  D003               	bra	u15587
  7810  000AF4  0008               	tblrd		*
  7811  000AF6  50F5               	movf	tablat,w,c
  7812  000AF8  D007               	bra	u15580
  7813  000AFA                     u15587:
  7814  000AFA  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7815  000B00  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7816  000B06  50EF               	movf	indf0,w,c
  7817  000B08                     u15580:
  7818  000B08  0900               	iorlw	0
  7819  000B0A  B4D8               	btfsc	status,2,c
  7820  000B0C  D1C7               	goto	l15816
  7821  000B0E  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7822  000B14  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7823  000B1A  0E00               	movlw	low (__mediumconst shr (0+16))
  7824  000B1C  6EF8               	movwf	tblptru,c
  7825  000B1E  0E0F               	movlw	(high __ramtop+-1)
  7826  000B20  64F7               	cpfsgt	tblptrh,c
  7827  000B22  D003               	bra	u15607
  7828  000B24  0008               	tblrd		*
  7829  000B26  50F5               	movf	tablat,w,c
  7830  000B28  D007               	bra	u15600
  7831  000B2A                     u15607:
  7832  000B2A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7833  000B30  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7834  000B36  50EF               	movf	indf0,w,c
  7835  000B38                     u15600:
  7836  000B38  D017               	goto	u15610
  7837  000B3A                     l15714:
  7838  000B3A  4A31               	infsnz	___strtoxl@cp^0,f,c
  7839  000B3C  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7840  000B3E  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7841  000B44  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7842  000B4A  0E00               	movlw	low (__mediumconst shr (0+16))
  7843  000B4C  6EF8               	movwf	tblptru,c
  7844  000B4E  0E0F               	movlw	(high __ramtop+-1)
  7845  000B50  64F7               	cpfsgt	tblptrh,c
  7846  000B52  D003               	bra	u15617
  7847  000B54  0008               	tblrd		*
  7848  000B56  50F5               	movf	tablat,w,c
  7849  000B58  D007               	bra	u15610
  7850  000B5A                     u15617:
  7851  000B5A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7852  000B60  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7853  000B66  50EF               	movf	indf0,w,c
  7854  000B68                     u15610:
  7855  000B68  6E33               	movwf	___strtoxl@c^0,c
  7856  000B6A  0E01               	movlw	1
  7857  000B6C  6E25               	movwf	___strtoxl$7686^0,c
  7858  000B6E  0E20               	movlw	32
  7859  000B70  1833               	xorwf	___strtoxl@c^0,w,c
  7860  000B72  B4D8               	btfsc	status,2,c
  7861  000B74  D013               	goto	l15724
  7862  000B76  0EF7               	movlw	247
  7863  000B78  6E17               	movwf	??___strtoxl^0,c
  7864  000B7A  0EFF               	movlw	255
  7865  000B7C  6E18               	movwf	(??___strtoxl+1)^0,c
  7866  000B7E  5033               	movf	___strtoxl@c^0,w,c
  7867  000B80  6E19               	movwf	(??___strtoxl+2)^0,c
  7868  000B82  6A1A               	clrf	(??___strtoxl+3)^0,c
  7869  000B84  5017               	movf	??___strtoxl^0,w,c
  7870  000B86  2619               	addwf	(??___strtoxl+2)^0,f,c
  7871  000B88  5018               	movf	(??___strtoxl+1)^0,w,c
  7872  000B8A  221A               	addwfc	(??___strtoxl+3)^0,f,c
  7873  000B8C  501A               	movf	(??___strtoxl+3)^0,w,c
  7874  000B8E  E104               	bnz	u15630
  7875  000B90  0E05               	movlw	5
  7876  000B92  5C19               	subwf	(??___strtoxl+2)^0,w,c
  7877  000B94  A0D8               	btfss	status,0,c
  7878  000B96  D002               	goto	l15724
  7879  000B98                     u15630:
  7880  000B98  0E00               	movlw	0
  7881  000B9A  6E25               	movwf	___strtoxl$7686^0,c
  7882  000B9C                     l15724:
  7883  000B9C  0060  F094  F01F   	movff	___strtoxl$7686,___strtoxl$7685
  7884  000BA2  6A20               	clrf	(___strtoxl$7685+1)^0,c
  7885  000BA4  501F               	movf	___strtoxl$7685^0,w,c
  7886  000BA6  1020               	iorwf	(___strtoxl$7685+1)^0,w,c
  7887  000BA8  A4D8               	btfss	status,2,c
  7888  000BAA  D7C7               	goto	l15714
  7889  000BAC  0E00               	movlw	0
  7890  000BAE  6E2B               	movwf	___strtoxl@sign^0,c
  7891  000BB0  0E00               	movlw	0
  7892  000BB2  6E26               	movwf	___strtoxl@conv_done^0,c
  7893  000BB4  0E00               	movlw	0
  7894  000BB6  6E2C               	movwf	___strtoxl@skip^0,c
  7895  000BB8  0E2D               	movlw	45
  7896  000BBA  1833               	xorwf	___strtoxl@c^0,w,c
  7897  000BBC  A4D8               	btfss	status,2,c
  7898  000BBE  D01B               	goto	l15738
  7899  000BC0  0E01               	movlw	1
  7900  000BC2  6E2B               	movwf	___strtoxl@sign^0,c
  7901  000BC4                     l15736:
  7902  000BC4  4A31               	infsnz	___strtoxl@cp^0,f,c
  7903  000BC6  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7904  000BC8  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7905  000BCE  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7906  000BD4  0E00               	movlw	low (__mediumconst shr (0+16))
  7907  000BD6  6EF8               	movwf	tblptru,c
  7908  000BD8  0E0F               	movlw	(high __ramtop+-1)
  7909  000BDA  64F7               	cpfsgt	tblptrh,c
  7910  000BDC  D003               	bra	u15667
  7911  000BDE  0008               	tblrd		*
  7912  000BE0  50F5               	movf	tablat,w,c
  7913  000BE2  D007               	bra	u15660
  7914  000BE4                     u15667:
  7915  000BE4  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7916  000BEA  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7917  000BF0  50EF               	movf	indf0,w,c
  7918  000BF2                     u15660:
  7919  000BF2  6E33               	movwf	___strtoxl@c^0,c
  7920  000BF4  D004               	goto	l15742
  7921  000BF6                     l15738:
  7922  000BF6  0E2B               	movlw	43
  7923  000BF8  1833               	xorwf	___strtoxl@c^0,w,c
  7924  000BFA  B4D8               	btfsc	status,2,c
  7925  000BFC  D7E3               	goto	l15736
  7926  000BFE                     l15742:
  7927  000BFE  0E30               	movlw	48
  7928  000C00  1833               	xorwf	___strtoxl@c^0,w,c
  7929  000C02  A4D8               	btfss	status,2,c
  7930  000C04  D050               	goto	l15764
  7931  000C06  4A31               	infsnz	___strtoxl@cp^0,f,c
  7932  000C08  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7933  000C0A  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7934  000C10  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7935  000C16  0E00               	movlw	low (__mediumconst shr (0+16))
  7936  000C18  6EF8               	movwf	tblptru,c
  7937  000C1A  0E0F               	movlw	(high __ramtop+-1)
  7938  000C1C  64F7               	cpfsgt	tblptrh,c
  7939  000C1E  D003               	bra	u15697
  7940  000C20  0008               	tblrd		*
  7941  000C22  50F5               	movf	tablat,w,c
  7942  000C24  D007               	bra	u15690
  7943  000C26                     u15697:
  7944  000C26  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7945  000C2C  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7946  000C32  50EF               	movf	indf0,w,c
  7947  000C34                     u15690:
  7948  000C34  6E33               	movwf	___strtoxl@c^0,c
  7949  000C36  5014               	movf	___strtoxl@base^0,w,c
  7950  000C38  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7951  000C3A  B4D8               	btfsc	status,2,c
  7952  000C3C  D005               	goto	u15710
  7953  000C3E  0E10               	movlw	16
  7954  000C40  1814               	xorwf	___strtoxl@base^0,w,c
  7955  000C42  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7956  000C44  A4D8               	btfss	status,2,c
  7957  000C46  D025               	goto	l15758
  7958  000C48                     u15710:
  7959  000C48  0E78               	movlw	120
  7960  000C4A  1833               	xorwf	___strtoxl@c^0,w,c
  7961  000C4C  B4D8               	btfsc	status,2,c
  7962  000C4E  D004               	goto	u15730
  7963  000C50  0E58               	movlw	88
  7964  000C52  1833               	xorwf	___strtoxl@c^0,w,c
  7965  000C54  A4D8               	btfss	status,2,c
  7966  000C56  D01D               	goto	l15758
  7967  000C58                     u15730:
  7968  000C58  0E00               	movlw	0
  7969  000C5A  6E15               	movwf	(___strtoxl@base+1)^0,c
  7970  000C5C  0E10               	movlw	16
  7971  000C5E  6E14               	movwf	___strtoxl@base^0,c
  7972  000C60  4A31               	infsnz	___strtoxl@cp^0,f,c
  7973  000C62  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7974  000C64  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7975  000C6A  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7976  000C70  0E00               	movlw	low (__mediumconst shr (0+16))
  7977  000C72  6EF8               	movwf	tblptru,c
  7978  000C74  0E0F               	movlw	(high __ramtop+-1)
  7979  000C76  64F7               	cpfsgt	tblptrh,c
  7980  000C78  D003               	bra	u15747
  7981  000C7A  0008               	tblrd		*
  7982  000C7C  50F5               	movf	tablat,w,c
  7983  000C7E  D007               	bra	u15740
  7984  000C80                     u15747:
  7985  000C80  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7986  000C86  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7987  000C8C  50EF               	movf	indf0,w,c
  7988  000C8E                     u15740:
  7989  000C8E  6E33               	movwf	___strtoxl@c^0,c
  7990  000C90  D00A               	goto	l15764
  7991  000C92                     l15758:
  7992  000C92  0E01               	movlw	1
  7993  000C94  6E26               	movwf	___strtoxl@conv_done^0,c
  7994  000C96  5014               	movf	___strtoxl@base^0,w,c
  7995  000C98  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7996  000C9A  A4D8               	btfss	status,2,c
  7997  000C9C  D004               	goto	l15764
  7998  000C9E  0E00               	movlw	0
  7999  000CA0  6E15               	movwf	(___strtoxl@base+1)^0,c
  8000  000CA2  0E08               	movlw	8
  8001  000CA4  6E14               	movwf	___strtoxl@base^0,c
  8002  000CA6                     l15764:
  8003  000CA6  5014               	movf	___strtoxl@base^0,w,c
  8004  000CA8  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  8005  000CAA  A4D8               	btfss	status,2,c
  8006  000CAC  D004               	goto	l4192
  8007  000CAE  0E00               	movlw	0
  8008  000CB0  6E15               	movwf	(___strtoxl@base+1)^0,c
  8009  000CB2  0E0A               	movlw	10
  8010  000CB4  6E14               	movwf	___strtoxl@base^0,c
  8011  000CB6                     l4192:
  8012  000CB6  5016               	movf	___strtoxl@is_signed^0,w,c
  8013  000CB8  B4D8               	btfsc	status,2,c
  8014  000CBA  D014               	goto	l4193
  8015  000CBC  502B               	movf	___strtoxl@sign^0,w,c
  8016  000CBE  A4D8               	btfss	status,2,c
  8017  000CC0  D008               	goto	l15772
  8018  000CC2  0EFF               	movlw	255
  8019  000CC4  6E27               	movwf	___strtoxl@limit^0,c
  8020  000CC6  0EFF               	movlw	255
  8021  000CC8  6E28               	movwf	(___strtoxl@limit+1)^0,c
  8022  000CCA  0EFF               	movlw	255
  8023  000CCC  6E29               	movwf	(___strtoxl@limit+2)^0,c
  8024  000CCE  0E7F               	movlw	127
  8025  000CD0  D007               	goto	L2
  8026  000CD2                     l15772:
  8027  000CD2  0E00               	movlw	0
  8028  000CD4  6E27               	movwf	___strtoxl@limit^0,c
  8029  000CD6  0E00               	movlw	0
  8030  000CD8  6E28               	movwf	(___strtoxl@limit+1)^0,c
  8031  000CDA  0E00               	movlw	0
  8032  000CDC  6E29               	movwf	(___strtoxl@limit+2)^0,c
  8033  000CDE  0E80               	movlw	128
  8034  000CE0                     L2:
  8035  000CE0  6E2A               	movwf	(___strtoxl@limit+3)^0,c
  8036  000CE2  D004               	goto	l4199
  8037  000CE4                     l4193:
  8038  000CE4  6827               	setf	___strtoxl@limit^0,c
  8039  000CE6  6828               	setf	(___strtoxl@limit+1)^0,c
  8040  000CE8  6829               	setf	(___strtoxl@limit+2)^0,c
  8041  000CEA  682A               	setf	(___strtoxl@limit+3)^0,c
  8042  000CEC                     l4199:
  8043  000CEC  0060  F0B4  F01B   	movff	___strtoxl@a,___strtoxl@prev_a
  8044  000CF2  0060  F0B8  F01C   	movff	___strtoxl@a+1,___strtoxl@prev_a+1
  8045  000CF8  0060  F0BC  F01D   	movff	___strtoxl@a+2,___strtoxl@prev_a+2
  8046  000CFE  0060  F0C0  F01E   	movff	___strtoxl@a+3,___strtoxl@prev_a+3
  8047  000D04  0E9F               	movlw	159
  8048  000D06  6E17               	movwf	??___strtoxl^0,c
  8049  000D08  0EFF               	movlw	255
  8050  000D0A  6E18               	movwf	(??___strtoxl+1)^0,c
  8051  000D0C  5033               	movf	___strtoxl@c^0,w,c
  8052  000D0E  6E19               	movwf	(??___strtoxl+2)^0,c
  8053  000D10  6A1A               	clrf	(??___strtoxl+3)^0,c
  8054  000D12  0E20               	movlw	32
  8055  000D14  1219               	iorwf	(??___strtoxl+2)^0,f,c
  8056  000D16  0E00               	movlw	0
  8057  000D18  121A               	iorwf	(??___strtoxl+3)^0,f,c
  8058  000D1A  5017               	movf	??___strtoxl^0,w,c
  8059  000D1C  2619               	addwf	(??___strtoxl+2)^0,f,c
  8060  000D1E  5018               	movf	(??___strtoxl+1)^0,w,c
  8061  000D20  221A               	addwfc	(??___strtoxl+3)^0,f,c
  8062  000D22  501A               	movf	(??___strtoxl+3)^0,w,c
  8063  000D24  E106               	bnz	u15790
  8064  000D26  0E1A               	movlw	26
  8065  000D28  5C19               	subwf	(??___strtoxl+2)^0,w,c
  8066  000D2A  B0D8               	btfsc	status,0,c
  8067  000D2C  D002               	goto	u15790
  8068  000D2E  0E01               	movlw	1
  8069  000D30  D001               	goto	u15800
  8070  000D32                     u15790:
  8071  000D32  0E00               	movlw	0
  8072  000D34                     u15800:
  8073  000D34  6E21               	movwf	___strtoxl$7687^0,c
  8074  000D36  6A22               	clrf	(___strtoxl$7687+1)^0,c
  8075  000D38  5021               	movf	___strtoxl$7687^0,w,c
  8076  000D3A  1022               	iorwf	(___strtoxl$7687+1)^0,w,c
  8077  000D3C  B4D8               	btfsc	status,2,c
  8078  000D3E  D00A               	goto	l15782
  8079  000D40  0060  F0CC  F008   	movff	___strtoxl@c,toupper@c
  8080  000D46  6A09               	clrf	(toupper@c+1)^0,c
  8081  000D48  ECBF  F043         	call	_toupper	;wreg free
  8082  000D4C  5008               	movf	?_toupper^0,w,c
  8083  000D4E  0FC9               	addlw	201
  8084  000D50  6E33               	movwf	___strtoxl@c^0,c
  8085  000D52  D01C               	goto	l15790
  8086  000D54                     l15782:
  8087  000D54  0ED0               	movlw	208
  8088  000D56  6E17               	movwf	??___strtoxl^0,c
  8089  000D58  0EFF               	movlw	255
  8090  000D5A  6E18               	movwf	(??___strtoxl+1)^0,c
  8091  000D5C  5033               	movf	___strtoxl@c^0,w,c
  8092  000D5E  6E19               	movwf	(??___strtoxl+2)^0,c
  8093  000D60  6A1A               	clrf	(??___strtoxl+3)^0,c
  8094  000D62  5017               	movf	??___strtoxl^0,w,c
  8095  000D64  2619               	addwf	(??___strtoxl+2)^0,f,c
  8096  000D66  5018               	movf	(??___strtoxl+1)^0,w,c
  8097  000D68  221A               	addwfc	(??___strtoxl+3)^0,f,c
  8098  000D6A  501A               	movf	(??___strtoxl+3)^0,w,c
  8099  000D6C  E106               	bnz	u15820
  8100  000D6E  0E0A               	movlw	10
  8101  000D70  5C19               	subwf	(??___strtoxl+2)^0,w,c
  8102  000D72  B0D8               	btfsc	status,0,c
  8103  000D74  D002               	goto	u15820
  8104  000D76  0E01               	movlw	1
  8105  000D78  D001               	goto	u15830
  8106  000D7A                     u15820:
  8107  000D7A  0E00               	movlw	0
  8108  000D7C                     u15830:
  8109  000D7C  6E23               	movwf	___strtoxl$7688^0,c
  8110  000D7E  6A24               	clrf	(___strtoxl$7688+1)^0,c
  8111  000D80  5023               	movf	___strtoxl$7688^0,w,c
  8112  000D82  1024               	iorwf	(___strtoxl$7688+1)^0,w,c
  8113  000D84  B4D8               	btfsc	status,2,c
  8114  000D86  D07C               	goto	l15810
  8115  000D88  0E30               	movlw	48
  8116  000D8A  5E33               	subwf	___strtoxl@c^0,f,c
  8117  000D8C                     l15790:
  8118  000D8C  5033               	movf	___strtoxl@c^0,w,c
  8119  000D8E  6E17               	movwf	??___strtoxl^0,c
  8120  000D90  6A18               	clrf	(??___strtoxl+1)^0,c
  8121  000D92  5014               	movf	___strtoxl@base^0,w,c
  8122  000D94  5C17               	subwf	??___strtoxl^0,w,c
  8123  000D96  5018               	movf	(??___strtoxl+1)^0,w,c
  8124  000D98  0A80               	xorlw	128
  8125  000D9A  6E19               	movwf	(??___strtoxl+2)^0,c
  8126  000D9C  5015               	movf	(___strtoxl@base+1)^0,w,c
  8127  000D9E  0A80               	xorlw	128
  8128  000DA0  5819               	subwfb	(??___strtoxl+2)^0,w,c
  8129  000DA2  B0D8               	btfsc	status,0,c
  8130  000DA4  D06D               	goto	l15810
  8131  000DA6  502C               	movf	___strtoxl@skip^0,w,c
  8132  000DA8  A4D8               	btfss	status,2,c
  8133  000DAA  D04F               	goto	l15806
  8134  000DAC  0060  F050  F002   	movff	___strtoxl@base,___lmul@multiplier
  8135  000DB2  0060  F054  F003   	movff	___strtoxl@base+1,___lmul@multiplier+1
  8136  000DB8  0E00               	movlw	0
  8137  000DBA  BE03               	btfsc	(___lmul@multiplier+1)^0,7,c
  8138  000DBC  0EFF               	movlw	-1
  8139  000DBE  6E04               	movwf	(___lmul@multiplier+2)^0,c
  8140  000DC0  6E05               	movwf	(___lmul@multiplier+3)^0,c
  8141  000DC2  0060  F0B4  F006   	movff	___strtoxl@a,___lmul@multiplicand
  8142  000DC8  0060  F0B8  F007   	movff	___strtoxl@a+1,___lmul@multiplicand+1
  8143  000DCE  0060  F0BC  F008   	movff	___strtoxl@a+2,___lmul@multiplicand+2
  8144  000DD4  0060  F0C0  F009   	movff	___strtoxl@a+3,___lmul@multiplicand+3
  8145  000DDA  EC5C  F042         	call	___lmul	;wreg free
  8146  000DDE  5033               	movf	___strtoxl@c^0,w,c
  8147  000DE0  2402               	addwf	?___lmul^0,w,c
  8148  000DE2  6E2D               	movwf	___strtoxl@a^0,c
  8149  000DE4  0E00               	movlw	0
  8150  000DE6  2003               	addwfc	(?___lmul+1)^0,w,c
  8151  000DE8  6E2E               	movwf	(___strtoxl@a+1)^0,c
  8152  000DEA  0E00               	movlw	0
  8153  000DEC  2004               	addwfc	(?___lmul+2)^0,w,c
  8154  000DEE  6E2F               	movwf	(___strtoxl@a+2)^0,c
  8155  000DF0  0E00               	movlw	0
  8156  000DF2  2005               	addwfc	(?___lmul+3)^0,w,c
  8157  000DF4  6E30               	movwf	(___strtoxl@a+3)^0,c
  8158  000DF6  501B               	movf	___strtoxl@prev_a^0,w,c
  8159  000DF8  5C2D               	subwf	___strtoxl@a^0,w,c
  8160  000DFA  501C               	movf	(___strtoxl@prev_a+1)^0,w,c
  8161  000DFC  582E               	subwfb	(___strtoxl@a+1)^0,w,c
  8162  000DFE  501D               	movf	(___strtoxl@prev_a+2)^0,w,c
  8163  000E00  582F               	subwfb	(___strtoxl@a+2)^0,w,c
  8164  000E02  501E               	movf	(___strtoxl@prev_a+3)^0,w,c
  8165  000E04  5830               	subwfb	(___strtoxl@a+3)^0,w,c
  8166  000E06  A0D8               	btfss	status,0,c
  8167  000E08  D00D               	goto	u15890
  8168  000E0A  5016               	movf	___strtoxl@is_signed^0,w,c
  8169  000E0C  B4D8               	btfsc	status,2,c
  8170  000E0E  D01D               	goto	l15806
  8171  000E10  502D               	movf	___strtoxl@a^0,w,c
  8172  000E12  5C27               	subwf	___strtoxl@limit^0,w,c
  8173  000E14  502E               	movf	(___strtoxl@a+1)^0,w,c
  8174  000E16  5828               	subwfb	(___strtoxl@limit+1)^0,w,c
  8175  000E18  502F               	movf	(___strtoxl@a+2)^0,w,c
  8176  000E1A  5829               	subwfb	(___strtoxl@limit+2)^0,w,c
  8177  000E1C  5030               	movf	(___strtoxl@a+3)^0,w,c
  8178  000E1E  582A               	subwfb	(___strtoxl@limit+3)^0,w,c
  8179  000E20  B0D8               	btfsc	status,0,c
  8180  000E22  D013               	goto	l15806
  8181  000E24                     u15890:
  8182  000E24  0060  F09C  F02D   	movff	___strtoxl@limit,___strtoxl@a
  8183  000E2A  0060  F0A0  F02E   	movff	___strtoxl@limit+1,___strtoxl@a+1
  8184  000E30  0060  F0A4  F02F   	movff	___strtoxl@limit+2,___strtoxl@a+2
  8185  000E36  0060  F0A8  F030   	movff	___strtoxl@limit+3,___strtoxl@a+3
  8186  000E3C  0E00               	movlw	0
  8187  000E3E  0101               	movlb	1	; () banked
  8188  000E40  6F2E               	movwf	(_errno+1)& (0+255),b
  8189  000E42  0E22               	movlw	34
  8190  000E44  6F2D               	movwf	_errno& (0+255),b
  8191  000E46  0E01               	movlw	1
  8192  000E48  6E2C               	movwf	___strtoxl@skip^0,c
  8193  000E4A                     l15806:
  8194  000E4A  4A31               	infsnz	___strtoxl@cp^0,f,c
  8195  000E4C  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  8196  000E4E  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  8197  000E54  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  8198  000E5A  0E00               	movlw	low (__mediumconst shr (0+16))
  8199  000E5C  6EF8               	movwf	tblptru,c
  8200  000E5E  0E0F               	movlw	(high __ramtop+-1)
  8201  000E60  64F7               	cpfsgt	tblptrh,c
  8202  000E62  D003               	bra	u15907
  8203  000E64  0008               	tblrd		*
  8204  000E66  50F5               	movf	tablat,w,c
  8205  000E68  D007               	bra	u15900
  8206  000E6A                     u15907:
  8207  000E6A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8208  000E70  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8209  000E76  50EF               	movf	indf0,w,c
  8210  000E78                     u15900:
  8211  000E78  6E33               	movwf	___strtoxl@c^0,c
  8212  000E7A  0E01               	movlw	1
  8213  000E7C  6E26               	movwf	___strtoxl@conv_done^0,c
  8214  000E7E  D736               	goto	l4199
  8215  000E80                     l15810:
  8216  000E80  502C               	movf	___strtoxl@skip^0,w,c
  8217  000E82  A4D8               	btfss	status,2,c
  8218  000E84  D00B               	goto	l15816
  8219  000E86  502B               	movf	___strtoxl@sign^0,w,c
  8220  000E88  B4D8               	btfsc	status,2,c
  8221  000E8A  D008               	goto	l15816
  8222  000E8C  1E30               	comf	(___strtoxl@a+3)^0,f,c
  8223  000E8E  1E2F               	comf	(___strtoxl@a+2)^0,f,c
  8224  000E90  1E2E               	comf	(___strtoxl@a+1)^0,f,c
  8225  000E92  6C2D               	negf	___strtoxl@a^0,c
  8226  000E94  0E00               	movlw	0
  8227  000E96  222E               	addwfc	(___strtoxl@a+1)^0,f,c
  8228  000E98  222F               	addwfc	(___strtoxl@a+2)^0,f,c
  8229  000E9A  2230               	addwfc	(___strtoxl@a+3)^0,f,c
  8230  000E9C                     l15816:
  8231  000E9C  5012               	movf	___strtoxl@endptr^0,w,c
  8232  000E9E  1013               	iorwf	(___strtoxl@endptr+1)^0,w,c
  8233  000EA0  B4D8               	btfsc	status,2,c
  8234  000EA2  D015               	goto	l15824
  8235  000EA4  5026               	movf	___strtoxl@conv_done^0,w,c
  8236  000EA6  A4D8               	btfss	status,2,c
  8237  000EA8  D006               	goto	l15822
  8238  000EAA  0060  F040  F031   	movff	___strtoxl@s,___strtoxl@cp
  8239  000EB0  0060  F044  F032   	movff	___strtoxl@s+1,___strtoxl@cp+1
  8240  000EB6                     l15822:
  8241  000EB6  0060  F04B  FFD9   	movff	___strtoxl@endptr,fsr2l
  8242  000EBC  0060  F04F  FFDA   	movff	___strtoxl@endptr+1,fsr2h
  8243  000EC2  0060  F0C7  FFDE   	movff	___strtoxl@cp,postinc2
  8244  000EC8  0060  F0CB  FFDD   	movff	___strtoxl@cp+1,postdec2
  8245  000ECE                     l15824:
  8246  000ECE  0060  F0B4  F010   	movff	___strtoxl@a,?___strtoxl
  8247  000ED4  0060  F0B8  F011   	movff	___strtoxl@a+1,?___strtoxl+1
  8248  000EDA  0060  F0BC  F012   	movff	___strtoxl@a+2,?___strtoxl+2
  8249  000EE0  0060  F0C0  F013   	movff	___strtoxl@a+3,?___strtoxl+3
  8250  000EE6  0012               	return		;funcret
  8251  000EE8                     __end_of___strtoxl:
  8252                           	opt callstack 0
  8253                           
  8254 ;; *************** function ___lmul *****************
  8255 ;; Defined at:
  8256 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  8257 ;; Parameters:    Size  Location     Type
  8258 ;;  multiplier      4    1[COMRAM] unsigned long 
  8259 ;;  multiplicand    4    5[COMRAM] unsigned long 
  8260 ;; Auto vars:     Size  Location     Type
  8261 ;;  product         4    9[COMRAM] unsigned long 
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  4    1[COMRAM] unsigned long 
  8264 ;; Registers used:
  8265 ;;		wreg, status,2, status,0
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/0
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8271 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8272 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8274 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8275 ;;Total ram usage:       12 bytes
  8276 ;; Hardware stack levels used:    1
  8277 ;; Hardware stack levels required when called:    7
  8278 ;; This function calls:
  8279 ;;		Nothing
  8280 ;; This function is called by:
  8281 ;;		___strtoxl
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285                           	psect	text30
  8286  0084B8                     __ptext30:
  8287                           	opt callstack 0
  8288  0084B8                     ___lmul:
  8289                           	opt callstack 18
  8290                           
  8291                           ;incstack = 0
  8292  0084B8  0E00               	movlw	0
  8293  0084BA  6E0A               	movwf	___lmul@product^0,c
  8294  0084BC  0E00               	movlw	0
  8295  0084BE  6E0B               	movwf	(___lmul@product+1)^0,c
  8296  0084C0  0E00               	movlw	0
  8297  0084C2  6E0C               	movwf	(___lmul@product+2)^0,c
  8298  0084C4  0E00               	movlw	0
  8299  0084C6  6E0D               	movwf	(___lmul@product+3)^0,c
  8300  0084C8                     l15162:
  8301  0084C8  A002               	btfss	___lmul@multiplier^0,0,c
  8302  0084CA  D008               	goto	l15166
  8303  0084CC  5006               	movf	___lmul@multiplicand^0,w,c
  8304  0084CE  260A               	addwf	___lmul@product^0,f,c
  8305  0084D0  5007               	movf	(___lmul@multiplicand+1)^0,w,c
  8306  0084D2  220B               	addwfc	(___lmul@product+1)^0,f,c
  8307  0084D4  5008               	movf	(___lmul@multiplicand+2)^0,w,c
  8308  0084D6  220C               	addwfc	(___lmul@product+2)^0,f,c
  8309  0084D8  5009               	movf	(___lmul@multiplicand+3)^0,w,c
  8310  0084DA  220D               	addwfc	(___lmul@product+3)^0,f,c
  8311  0084DC                     l15166:
  8312  0084DC  90D8               	bcf	status,0,c
  8313  0084DE  3606               	rlcf	___lmul@multiplicand^0,f,c
  8314  0084E0  3607               	rlcf	(___lmul@multiplicand+1)^0,f,c
  8315  0084E2  3608               	rlcf	(___lmul@multiplicand+2)^0,f,c
  8316  0084E4  3609               	rlcf	(___lmul@multiplicand+3)^0,f,c
  8317  0084E6  90D8               	bcf	status,0,c
  8318  0084E8  3205               	rrcf	(___lmul@multiplier+3)^0,f,c
  8319  0084EA  3204               	rrcf	(___lmul@multiplier+2)^0,f,c
  8320  0084EC  3203               	rrcf	(___lmul@multiplier+1)^0,f,c
  8321  0084EE  3202               	rrcf	___lmul@multiplier^0,f,c
  8322  0084F0  5002               	movf	___lmul@multiplier^0,w,c
  8323  0084F2  1003               	iorwf	(___lmul@multiplier+1)^0,w,c
  8324  0084F4  1004               	iorwf	(___lmul@multiplier+2)^0,w,c
  8325  0084F6  1005               	iorwf	(___lmul@multiplier+3)^0,w,c
  8326  0084F8  A4D8               	btfss	status,2,c
  8327  0084FA  D7E6               	goto	l15162
  8328  0084FC  0060  F028  F002   	movff	___lmul@product,?___lmul
  8329  008502  0060  F02C  F003   	movff	___lmul@product+1,?___lmul+1
  8330  008508  0060  F030  F004   	movff	___lmul@product+2,?___lmul+2
  8331  00850E  0060  F034  F005   	movff	___lmul@product+3,?___lmul+3
  8332  008514  0012               	return		;funcret
  8333  008516                     __end_of___lmul:
  8334                           	opt callstack 0
  8335                           
  8336 ;; *************** function _cmdRstCAD *****************
  8337 ;; Defined at:
  8338 ;;		line 566 in file "../app/app_src/application.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;		None
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;		None
  8343 ;; Return value:  Size  Location     Type
  8344 ;;                  1    wreg      void 
  8345 ;; Registers used:
  8346 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8347 ;; Tracked objects:
  8348 ;;		On entry : 0/0
  8349 ;;		On exit  : 3F/0
  8350 ;;		Unchanged: 0/0
  8351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8356 ;;Total ram usage:        0 bytes
  8357 ;; Hardware stack levels used:    1
  8358 ;; Hardware stack levels required when called:   16
  8359 ;; This function calls:
  8360 ;;		_printf
  8361 ;; This function is called by:
  8362 ;;		_executeATCommand
  8363 ;; This function uses a non-reentrant model
  8364 ;;
  8365                           
  8366                           	psect	text31
  8367  00985E                     __ptext31:
  8368                           	opt callstack 0
  8369  00985E                     _cmdRstCAD:
  8370                           	opt callstack 12
  8371                           
  8372                           ;../app/app_src/application.c: 567:  cadCounter = 0;
  8373                           
  8374                           ;incstack = 0
  8375  00985E  0E00               	movlw	0
  8376  009860  0100               	movlb	0	; () banked
  8377  009862  6FDC               	movwf	_cadCounter& (0+255),b
  8378                           
  8379                           ; BSR set to: 0
  8380                           ;../app/app_src/application.c: 568:  printf("OK\r\n");
  8381  009864  0ED6               	movlw	low STR_12
  8382  009866  6F75               	movwf	printf@fmt& (0+255),b
  8383  009868  0EFF               	movlw	high STR_12
  8384  00986A  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8385  00986C  EC60  F04A         	call	_printf	;wreg free
  8386                           
  8387                           ; BSR set to: 0
  8388  009870  0012               	return		;funcret
  8389  009872                     __end_of_cmdRstCAD:
  8390                           	opt callstack 0
  8391                           
  8392 ;; *************** function _cmdReset *****************
  8393 ;; Defined at:
  8394 ;;		line 706 in file "../app/app_src/application.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;		None
  8397 ;; Auto vars:     Size  Location     Type
  8398 ;;		None
  8399 ;; Return value:  Size  Location     Type
  8400 ;;                  1    wreg      void 
  8401 ;; Registers used:
  8402 ;;		None
  8403 ;; Tracked objects:
  8404 ;;		On entry : 0/0
  8405 ;;		On exit  : 0/0
  8406 ;;		Unchanged: 0/0
  8407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8412 ;;Total ram usage:        0 bytes
  8413 ;; Hardware stack levels used:    1
  8414 ;; Hardware stack levels required when called:    7
  8415 ;; This function calls:
  8416 ;;		Nothing
  8417 ;; This function is called by:
  8418 ;;		_executeATCommand
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           	psect	text32
  8423  009A18                     __ptext32:
  8424                           	opt callstack 0
  8425  009A18                     _cmdReset:
  8426                           	opt callstack 21
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;incstack = 0
  8430  009A18  00FF               	reset		;# 
  8431  009A1A                     l387:
  8432  009A1A  D7FF               	goto	l387
  8433  009A1C                     __end_of_cmdReset:
  8434                           	opt callstack 0
  8435                           
  8436 ;; *************** function _cmdRecv *****************
  8437 ;; Defined at:
  8438 ;;		line 380 in file "../app/app_src/application.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;		None
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;  i               1   89[COMRAM] unsigned char 
  8443 ;;  buf_id          1   90[COMRAM] unsigned char 
  8444 ;; Return value:  Size  Location     Type
  8445 ;;                  1    wreg      void 
  8446 ;; Registers used:
  8447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8448 ;; Tracked objects:
  8449 ;;		On entry : 0/0
  8450 ;;		On exit  : 3F/0
  8451 ;;		Unchanged: 0/0
  8452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8455 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8456 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8457 ;;Total ram usage:        4 bytes
  8458 ;; Hardware stack levels used:    1
  8459 ;; Hardware stack levels required when called:   16
  8460 ;; This function calls:
  8461 ;;		_CircularBufferEmpty
  8462 ;;		_CircularBufferPopFront
  8463 ;;		_printf
  8464 ;;		_putch
  8465 ;; This function is called by:
  8466 ;;		_executeATCommand
  8467 ;; This function uses a non-reentrant model
  8468 ;;
  8469                           
  8470                           	psect	text33
  8471  005838                     __ptext33:
  8472                           	opt callstack 0
  8473  005838                     _cmdRecv:
  8474                           	opt callstack 12
  8475                           
  8476                           ;../app/app_src/application.c: 382:     if(!CircularBufferEmpty(&rx_buffer_queue_context
      +                          )){
  8477                           
  8478                           ;incstack = 0
  8479  005838  0EC6               	movlw	low _rx_buffer_queue_context
  8480  00583A  6E02               	movwf	CircularBufferEmpty@ctx^0,c
  8481  00583C  0E01               	movlw	high _rx_buffer_queue_context
  8482  00583E  6E03               	movwf	(CircularBufferEmpty@ctx+1)^0,c
  8483  005840  EC30  F049         	call	_CircularBufferEmpty	;wreg free
  8484  005844  0900               	iorlw	0
  8485  005846  A4D8               	btfss	status,2,c
  8486  005848  D06B               	goto	l16466
  8487                           
  8488                           ;../app/app_src/application.c: 383:         uint8_t buf_id;;../app/app_src/application.c
      +                          : 384:         CircularBufferPopFront(&rx_buffer_queue_context, &buf_id);
  8489  00584A  0EC6               	movlw	low _rx_buffer_queue_context
  8490  00584C  6E13               	movwf	CircularBufferPopFront@ctx^0,c
  8491  00584E  0E01               	movlw	high _rx_buffer_queue_context
  8492  005850  6E14               	movwf	(CircularBufferPopFront@ctx+1)^0,c
  8493  005852  0E5B               	movlw	low cmdRecv@buf_id
  8494  005854  6E15               	movwf	CircularBufferPopFront@val^0,c
  8495  005856  EC9C  F02C         	call	_CircularBufferPopFront	;wreg free
  8496                           
  8497                           ;../app/app_src/application.c: 385:         if(!rx_buffer[buf_id].free){
  8498  00585A  505B               	movf	cmdRecv@buf_id^0,w,c
  8499  00585C  0D7A               	mullw	122
  8500  00585E  0E76               	movlw	low _rx_buffer
  8501  005860  24F3               	addwf	243,w,c
  8502  005862  6ED9               	movwf	fsr2l,c
  8503  005864  0E0A               	movlw	high _rx_buffer
  8504  005866  20F4               	addwfc	prodh,w,c
  8505  005868  6EDA               	movwf	fsr2h,c
  8506  00586A  B0DF               	btfsc	indf2,0,c
  8507  00586C  D04D               	goto	l16464
  8508                           
  8509                           ;../app/app_src/application.c: 386:             uint8_t i = 0;
  8510  00586E  0E00               	movlw	0
  8511  005870  6E5A               	movwf	cmdRecv@i^0,c
  8512                           
  8513                           ;../app/app_src/application.c: 388:             printf("%04X:", rx_buffer[buf_id].rx_ind
      +                          .srcAddr);
  8514  005872  0EA7               	movlw	low STR_17
  8515  005874  0100               	movlb	0	; () banked
  8516  005876  6F75               	movwf	printf@fmt& (0+255),b
  8517  005878  0EFF               	movlw	high STR_17
  8518  00587A  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8519  00587C  505B               	movf	cmdRecv@buf_id^0,w,c
  8520  00587E  0D7A               	mullw	122
  8521  005880  0E77               	movlw	low (_rx_buffer+1)
  8522  005882  24F3               	addwf	243,w,c
  8523  005884  6ED9               	movwf	fsr2l,c
  8524  005886  0E0A               	movlw	high (_rx_buffer+1)
  8525  005888  20F4               	addwfc	prodh,w,c
  8526  00588A  6EDA               	movwf	fsr2h,c
  8527  00588C  006F FF78  F077    	movff	postinc2,?_printf+2
  8528  005892  006F FF74  F078    	movff	postdec2,?_printf+3
  8529  005898  EC60  F04A         	call	_printf	;wreg free
  8530                           
  8531                           ;../app/app_src/application.c: 389:             while(rx_buffer[buf_id].rx_ind.size--){
  8532  00589C  D018               	goto	l16458
  8533  00589E                     l16454:
  8534                           
  8535                           ;../app/app_src/application.c: 390:                 putch(rx_buffer[buf_id].payload[i++]
      +                          );
  8536  00589E  505B               	movf	cmdRecv@buf_id^0,w,c
  8537  0058A0  0D7A               	mullw	122
  8538  0058A2  0E76               	movlw	low _rx_buffer
  8539  0058A4  6E58               	movwf	??_cmdRecv^0,c
  8540  0058A6  0E0A               	movlw	high _rx_buffer
  8541  0058A8  6E59               	movwf	(??_cmdRecv+1)^0,c
  8542  0058AA  0E0D               	movlw	13
  8543  0058AC  2658               	addwf	??_cmdRecv^0,f,c
  8544  0058AE  0E00               	movlw	0
  8545  0058B0  2259               	addwfc	(??_cmdRecv+1)^0,f,c
  8546  0058B2  50F3               	movf	243,w,c
  8547  0058B4  2658               	addwf	??_cmdRecv^0,f,c
  8548  0058B6  50F4               	movf	244,w,c
  8549  0058B8  2259               	addwfc	(??_cmdRecv+1)^0,f,c
  8550  0058BA  505A               	movf	cmdRecv@i^0,w,c
  8551  0058BC  2458               	addwf	??_cmdRecv^0,w,c
  8552  0058BE  6ED9               	movwf	fsr2l,c
  8553  0058C0  0E00               	movlw	0
  8554  0058C2  2059               	addwfc	(??_cmdRecv+1)^0,w,c
  8555  0058C4  6EDA               	movwf	fsr2h,c
  8556  0058C6  50DF               	movf	indf2,w,c
  8557  0058C8  ECF4  F04C         	call	_putch
  8558                           
  8559                           ; BSR set to: 57
  8560  0058CC  2A5A               	incf	cmdRecv@i^0,f,c
  8561  0058CE                     l16458:
  8562                           
  8563                           ;../app/app_src/application.c: 389:             while(rx_buffer[buf_id].rx_ind.size--){
  8564  0058CE  505B               	movf	cmdRecv@buf_id^0,w,c
  8565  0058D0  0D7A               	mullw	122
  8566  0058D2  0E80               	movlw	low (_rx_buffer+10)
  8567  0058D4  24F3               	addwf	243,w,c
  8568  0058D6  6ED9               	movwf	fsr2l,c
  8569  0058D8  0E0A               	movlw	high (_rx_buffer+10)
  8570  0058DA  20F4               	addwfc	prodh,w,c
  8571  0058DC  6EDA               	movwf	fsr2h,c
  8572  0058DE  06DF               	decf	indf2,f,c
  8573  0058E0  28DE               	incf	postinc2,w,c
  8574  0058E2  A4D8               	btfss	status,2,c
  8575  0058E4  D7DC               	goto	l16454
  8576                           
  8577                           ;../app/app_src/application.c: 392:             rx_buffer[buf_id].free = 1;
  8578  0058E6  505B               	movf	cmdRecv@buf_id^0,w,c
  8579  0058E8  0D7A               	mullw	122
  8580  0058EA  0E76               	movlw	low _rx_buffer
  8581  0058EC  24F3               	addwf	243,w,c
  8582  0058EE  6ED9               	movwf	fsr2l,c
  8583  0058F0  0E0A               	movlw	high _rx_buffer
  8584  0058F2  20F4               	addwfc	prodh,w,c
  8585  0058F4  6EDA               	movwf	fsr2h,c
  8586  0058F6  80DF               	bsf	indf2,0,c
  8587                           
  8588                           ;../app/app_src/application.c: 393:             printf("\r\n");
  8589  0058F8  0ED3               	movlw	low (STR_139+2)
  8590  0058FA  0100               	movlb	0	; () banked
  8591  0058FC  6F75               	movwf	printf@fmt& (0+255),b
  8592  0058FE  0EFF               	movlw	high (STR_139+2)
  8593  005900  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8594  005902  EC60  F04A         	call	_printf	;wreg free
  8595                           
  8596                           ;../app/app_src/application.c: 394:         }
  8597  005906  0012               	return	
  8598  005908                     l16464:
  8599                           
  8600                           ;../app/app_src/application.c: 396:             printf("NOT OK:%u\r\n", (uint16_t)NO_RX_
      +                          MESSAGES);
  8601  005908  0EC5               	movlw	low STR_3
  8602  00590A  0100               	movlb	0	; () banked
  8603  00590C  6F75               	movwf	printf@fmt& (0+255),b
  8604  00590E  0EFE               	movlw	high STR_3
  8605  005910  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8606  005912  0E00               	movlw	0
  8607  005914  6F78               	movwf	(?_printf+3)& (0+255),b
  8608  005916  0E10               	movlw	16
  8609  005918  6F77               	movwf	(?_printf+2)& (0+255),b
  8610  00591A  EC60  F04A         	call	_printf	;wreg free
  8611  00591E  0012               	return	
  8612  005920                     l16466:
  8613                           
  8614                           ;../app/app_src/application.c: 400:         printf("NOT OK:%u\r\n", (uint16_t)NO_RX_MESS
      +                          AGES);
  8615  005920  0EC5               	movlw	low STR_3
  8616  005922  0100               	movlb	0	; () banked
  8617  005924  6F75               	movwf	printf@fmt& (0+255),b
  8618  005926  0EFE               	movlw	high STR_3
  8619  005928  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8620  00592A  0E00               	movlw	0
  8621  00592C  6F78               	movwf	(?_printf+3)& (0+255),b
  8622  00592E  0E10               	movlw	16
  8623  005930  6F77               	movwf	(?_printf+2)& (0+255),b
  8624  005932  EC60  F04A         	call	_printf	;wreg free
  8625                           
  8626                           ; BSR set to: 0
  8627  005936  0012               	return		;funcret
  8628  005938                     __end_of_cmdRecv:
  8629                           	opt callstack 0
  8630                           
  8631 ;; *************** function _CircularBufferPopFront *****************
  8632 ;; Defined at:
  8633 ;;		line 87 in file "../app/app_src/circular buffer.c"
  8634 ;; Parameters:    Size  Location     Type
  8635 ;;  ctx             2   18[COMRAM] PTR struct .
  8636 ;;		 -> ledtasksbuf(10), rx_buffer_queue_context(10), 
  8637 ;;  val             1   20[COMRAM] PTR void 
  8638 ;;		 -> handle_led_events@temp(3), cmdRecv@buf_id(1), 
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;		None
  8641 ;; Return value:  Size  Location     Type
  8642 ;;                  1    wreg      char 
  8643 ;; Registers used:
  8644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8645 ;; Tracked objects:
  8646 ;;		On entry : 0/0
  8647 ;;		On exit  : 0/0
  8648 ;;		Unchanged: 0/0
  8649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8650 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8652 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8653 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8654 ;;Total ram usage:        7 bytes
  8655 ;; Hardware stack levels used:    1
  8656 ;; Hardware stack levels required when called:    8
  8657 ;; This function calls:
  8658 ;;		___wmul
  8659 ;;		_memcpy
  8660 ;; This function is called by:
  8661 ;;		_cmdRecv
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           	psect	text34
  8666  005938                     __ptext34:
  8667                           	opt callstack 0
  8668  005938                     _CircularBufferPopFront:
  8669                           	opt callstack 19
  8670                           
  8671                           ;../app/app_src/circular buffer.c: 89:     if (ctx->read_pos == ctx->write_pos) {
  8672                           
  8673                           ; BSR set to: 0
  8674                           ;incstack = 0
  8675  005938  EE20 F002          	lfsr	2,2
  8676  00593C  5013               	movf	CircularBufferPopFront@ctx^0,w,c
  8677  00593E  26D9               	addwf	fsr2l,f,c
  8678  005940  5014               	movf	(CircularBufferPopFront@ctx+1)^0,w,c
  8679  005942  22DA               	addwfc	fsr2h,f,c
  8680  005944  EE10 F004          	lfsr	1,4
  8681  005948  5013               	movf	CircularBufferPopFront@ctx^0,w,c
  8682  00594A  26E1               	addwf	fsr1l,f,c
  8683  00594C  5014               	movf	(CircularBufferPopFront@ctx+1)^0,w,c
  8684  00594E  22E2               	addwfc	fsr1h,f,c
  8685  005950  50DE               	movf	postinc2,w,c
  8686  005952  18E6               	xorwf	postinc1,w,c
  8687  005954  E104               	bnz	l15978
  8688  005956  50DE               	movf	postinc2,w,c
  8689  005958  18E6               	xorwf	postinc1,w,c
  8690  00595A  B4D8               	btfsc	status,2,c
  8691  00595C  0012               	return	
  8692  00595E                     l15978:
  8693                           
  8694                           ;../app/app_src/circular buffer.c: 93:     memcpy(val, &ctx->buf[ctx->read_pos * ctx->el
      +                          ement_size],
  8695  00595E  0060  F054  F008   	movff	CircularBufferPopFront@val,memcpy@d1
  8696  005964  6A09               	clrf	(memcpy@d1+1)^0,c
  8697  005966  EE20 F004          	lfsr	2,4
  8698  00596A  5013               	movf	CircularBufferPopFront@ctx^0,w,c
  8699  00596C  26D9               	addwf	fsr2l,f,c
  8700  00596E  5014               	movf	(CircularBufferPopFront@ctx+1)^0,w,c
  8701  005970  22DA               	addwfc	fsr2h,f,c
  8702  005972  006F FF78  F002    	movff	postinc2,___wmul@multiplier
  8703  005978  006F FF74  F003    	movff	postdec2,___wmul@multiplier+1
  8704  00597E  EE20 F006          	lfsr	2,6
  8705  005982  5013               	movf	CircularBufferPopFront@ctx^0,w,c
  8706  005984  26D9               	addwf	fsr2l,f,c
  8707  005986  5014               	movf	(CircularBufferPopFront@ctx+1)^0,w,c
  8708  005988  22DA               	addwfc	fsr2h,f,c
  8709  00598A  006F FF78  F004    	movff	postinc2,___wmul@multiplicand
  8710  005990  006F FF74  F005    	movff	postdec2,___wmul@multiplicand+1
  8711  005996  EC47  F049         	call	___wmul	;wreg free
  8712  00599A  0060  F04F  FFD9   	movff	CircularBufferPopFront@ctx,fsr2l
  8713  0059A0  0060  F053  FFDA   	movff	CircularBufferPopFront@ctx+1,fsr2h
  8714  0059A6  006F FF78  F016    	movff	postinc2,??_CircularBufferPopFront
  8715  0059AC  006F FF74  F017    	movff	postdec2,??_CircularBufferPopFront+1
  8716  0059B2  5002               	movf	?___wmul^0,w,c
  8717  0059B4  2416               	addwf	??_CircularBufferPopFront^0,w,c
  8718  0059B6  6E0A               	movwf	memcpy@s1^0,c
  8719  0059B8  5003               	movf	(?___wmul+1)^0,w,c
  8720  0059BA  2017               	addwfc	(??_CircularBufferPopFront+1)^0,w,c
  8721  0059BC  6E0B               	movwf	(memcpy@s1+1)^0,c
  8722  0059BE  EE20 F006          	lfsr	2,6
  8723  0059C2  5013               	movf	CircularBufferPopFront@ctx^0,w,c
  8724  0059C4  26D9               	addwf	fsr2l,f,c
  8725  0059C6  5014               	movf	(CircularBufferPopFront@ctx+1)^0,w,c
  8726  0059C8  22DA               	addwfc	fsr2h,f,c
  8727  0059CA  006F FF78  F00C    	movff	postinc2,memcpy@n
  8728  0059D0  006F FF74  F00D    	movff	postdec2,memcpy@n+1
  8729  0059D6  EC95  F03F         	call	_memcpy	;wreg free
  8730                           
  8731                           ;../app/app_src/circular buffer.c: 96:     ctx->read_pos = (ctx->read_pos + 1) & ctx->ma
      +                          x_size;
  8732  0059DA  EE20 F008          	lfsr	2,8
  8733  0059DE  5013               	movf	CircularBufferPopFront@ctx^0,w,c
  8734  0059E0  26D9               	addwf	fsr2l,f,c
  8735  0059E2  5014               	movf	(CircularBufferPopFront@ctx+1)^0,w,c
  8736  0059E4  22DA               	addwfc	fsr2h,f,c
  8737  0059E6  006F FF78  F016    	movff	postinc2,??_CircularBufferPopFront
  8738  0059EC  006F FF74  F017    	movff	postdec2,??_CircularBufferPopFront+1
  8739  0059F2  EE20 F004          	lfsr	2,4
  8740  0059F6  5013               	movf	CircularBufferPopFront@ctx^0,w,c
  8741  0059F8  26D9               	addwf	fsr2l,f,c
  8742  0059FA  5014               	movf	(CircularBufferPopFront@ctx+1)^0,w,c
  8743  0059FC  22DA               	addwfc	fsr2h,f,c
  8744  0059FE  006F FF78  F018    	movff	postinc2,??_CircularBufferPopFront+2
  8745  005A04  006F FF74  F019    	movff	postdec2,??_CircularBufferPopFront+3
  8746  005A0A  0E01               	movlw	1
  8747  005A0C  2618               	addwf	(??_CircularBufferPopFront+2)^0,f,c
  8748  005A0E  0E00               	movlw	0
  8749  005A10  2219               	addwfc	(??_CircularBufferPopFront+3)^0,f,c
  8750  005A12  5016               	movf	??_CircularBufferPopFront^0,w,c
  8751  005A14  1618               	andwf	(??_CircularBufferPopFront+2)^0,f,c
  8752  005A16  5017               	movf	(??_CircularBufferPopFront+1)^0,w,c
  8753  005A18  1619               	andwf	(??_CircularBufferPopFront+3)^0,f,c
  8754  005A1A  EE20 F004          	lfsr	2,4
  8755  005A1E  5013               	movf	CircularBufferPopFront@ctx^0,w,c
  8756  005A20  26D9               	addwf	fsr2l,f,c
  8757  005A22  5014               	movf	(CircularBufferPopFront@ctx+1)^0,w,c
  8758  005A24  22DA               	addwfc	fsr2h,f,c
  8759  005A26  0060  F063  FFDE   	movff	??_CircularBufferPopFront+2,postinc2
  8760  005A2C  0060  F067  FFDD   	movff	??_CircularBufferPopFront+3,postdec2
  8761  005A32  0012               	return		;funcret
  8762  005A34                     __end_of_CircularBufferPopFront:
  8763                           	opt callstack 0
  8764                           
  8765 ;; *************** function _CircularBufferEmpty *****************
  8766 ;; Defined at:
  8767 ;;		line 131 in file "../app/app_src/circular buffer.c"
  8768 ;; Parameters:    Size  Location     Type
  8769 ;;  ctx             2    1[COMRAM] PTR const struct .
  8770 ;;		 -> ledtasksbuf(10), rx_buffer_queue_context(10), 
  8771 ;; Auto vars:     Size  Location     Type
  8772 ;;		None
  8773 ;; Return value:  Size  Location     Type
  8774 ;;                  1    wreg      _Bool 
  8775 ;; Registers used:
  8776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8777 ;; Tracked objects:
  8778 ;;		On entry : 0/0
  8779 ;;		On exit  : 0/0
  8780 ;;		Unchanged: 0/0
  8781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8784 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8785 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8786 ;;Total ram usage:        6 bytes
  8787 ;; Hardware stack levels used:    1
  8788 ;; Hardware stack levels required when called:    7
  8789 ;; This function calls:
  8790 ;;		Nothing
  8791 ;; This function is called by:
  8792 ;;		_cmdRecv
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           	psect	text35
  8797  009260                     __ptext35:
  8798                           	opt callstack 0
  8799  009260                     _CircularBufferEmpty:
  8800                           	opt callstack 20
  8801                           
  8802                           ;../app/app_src/circular buffer.c: 132:     return (ctx->read_pos == ctx->write_pos);
  8803                           
  8804                           ;incstack = 0
  8805  009260  EE20 F002          	lfsr	2,2
  8806  009264  5002               	movf	CircularBufferEmpty@ctx^0,w,c
  8807  009266  26D9               	addwf	fsr2l,f,c
  8808  009268  5003               	movf	(CircularBufferEmpty@ctx+1)^0,w,c
  8809  00926A  22DA               	addwfc	fsr2h,f,c
  8810  00926C  EE10 F004          	lfsr	1,4
  8811  009270  5002               	movf	CircularBufferEmpty@ctx^0,w,c
  8812  009272  26E1               	addwf	fsr1l,f,c
  8813  009274  5003               	movf	(CircularBufferEmpty@ctx+1)^0,w,c
  8814  009276  22E2               	addwfc	fsr1h,f,c
  8815  009278  50DE               	movf	postinc2,w,c
  8816  00927A  18E6               	xorwf	postinc1,w,c
  8817  00927C  E106               	bnz	u16050
  8818  00927E  50DE               	movf	postinc2,w,c
  8819  009280  18E6               	xorwf	postinc1,w,c
  8820  009282  A4D8               	btfss	status,2,c
  8821  009284  D002               	goto	u16050
  8822  009286  0E01               	movlw	1
  8823  009288  0012               	return	
  8824  00928A                     u16050:
  8825  00928A  0E00               	movlw	0
  8826  00928C  0012               	return		;funcret
  8827  00928E                     __end_of_CircularBufferEmpty:
  8828                           	opt callstack 0
  8829                           
  8830 ;; *************** function _cmdNaddr *****************
  8831 ;; Defined at:
  8832 ;;		line 348 in file "../app/app_src/application.c"
  8833 ;; Parameters:    Size  Location     Type
  8834 ;;		None
  8835 ;; Auto vars:     Size  Location     Type
  8836 ;;		None
  8837 ;; Return value:  Size  Location     Type
  8838 ;;                  1    wreg      void 
  8839 ;; Registers used:
  8840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8841 ;; Tracked objects:
  8842 ;;		On entry : 0/0
  8843 ;;		On exit  : 3F/0
  8844 ;;		Unchanged: 0/0
  8845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8850 ;;Total ram usage:        0 bytes
  8851 ;; Hardware stack levels used:    1
  8852 ;; Hardware stack levels required when called:   16
  8853 ;; This function calls:
  8854 ;;		_printf
  8855 ;; This function is called by:
  8856 ;;		_executeATCommand
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           	psect	text36
  8861  0097A0                     __ptext36:
  8862                           	opt callstack 0
  8863  0097A0                     _cmdNaddr:
  8864                           	opt callstack 12
  8865                           
  8866                           ;../app/app_src/application.c: 349:  printf("NADDR=%02X\r\n",currentNetID);
  8867                           
  8868                           ;incstack = 0
  8869  0097A0  0E85               	movlw	low STR_14
  8870  0097A2  0100               	movlb	0	; () banked
  8871  0097A4  6F75               	movwf	printf@fmt& (0+255),b
  8872  0097A6  0EFE               	movlw	high STR_14
  8873  0097A8  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8874  0097AA  0060  F3E0  F077   	movff	_currentNetID,?_printf+2
  8875  0097B0  6B78               	clrf	(?_printf+3)& (0+255),b
  8876  0097B2  EC60  F04A         	call	_printf	;wreg free
  8877                           
  8878                           ; BSR set to: 0
  8879  0097B6  0012               	return		;funcret
  8880  0097B8                     __end_of_cmdNaddr:
  8881                           	opt callstack 0
  8882                           
  8883 ;; *************** function _cmdMac *****************
  8884 ;; Defined at:
  8885 ;;		line 411 in file "../app/app_src/application.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;		None
  8888 ;; Auto vars:     Size  Location     Type
  8889 ;;  i               1   88[COMRAM] unsigned char 
  8890 ;; Return value:  Size  Location     Type
  8891 ;;                  1    wreg      void 
  8892 ;; Registers used:
  8893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8894 ;; Tracked objects:
  8895 ;;		On entry : 0/0
  8896 ;;		On exit  : 3F/0
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8901 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8902 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8903 ;;Total ram usage:        2 bytes
  8904 ;; Hardware stack levels used:    1
  8905 ;; Hardware stack levels required when called:   16
  8906 ;; This function calls:
  8907 ;;		_printf
  8908 ;; This function is called by:
  8909 ;;		_executeATCommand
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           	psect	text37
  8914  008956                     __ptext37:
  8915                           	opt callstack 0
  8916  008956                     _cmdMac:
  8917                           	opt callstack 12
  8918                           
  8919                           ;../app/app_src/application.c: 412:  printf("MAC=");
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;incstack = 0
  8923  008956  0EDB               	movlw	low STR_21
  8924  008958  0100               	movlb	0	; () banked
  8925  00895A  6F75               	movwf	printf@fmt& (0+255),b
  8926  00895C  0EFF               	movlw	high STR_21
  8927  00895E  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8928  008960  EC60  F04A         	call	_printf	;wreg free
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;../app/app_src/application.c: 413:  for(uint8_t i = 0; i < sizeof(EUIDbyte); i++){
  8932  008964  0E00               	movlw	0
  8933  008966  6E59               	movwf	cmdMac@i^0,c
  8934  008968                     l16478:
  8935                           
  8936                           ; BSR set to: 0
  8937                           ;../app/app_src/application.c: 414:   printf("%02X", EUIDbyte[i]);
  8938  008968  0EF4               	movlw	low STR_22
  8939  00896A  6F75               	movwf	printf@fmt& (0+255),b
  8940  00896C  0EFF               	movlw	high STR_22
  8941  00896E  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8942  008970  0EB0               	movlw	low _EUIDbyte
  8943  008972  2459               	addwf	cmdMac@i^0,w,c
  8944  008974  6ED9               	movwf	fsr2l,c
  8945  008976  6ADA               	clrf	fsr2h,c
  8946  008978  0E01               	movlw	high _EUIDbyte
  8947  00897A  22DA               	addwfc	fsr2h,f,c
  8948  00897C  50DF               	movf	indf2,w,c
  8949  00897E  6E58               	movwf	??_cmdMac^0,c
  8950  008980  5058               	movf	??_cmdMac^0,w,c
  8951  008982  6F77               	movwf	(?_printf+2)& (0+255),b
  8952  008984  6B78               	clrf	(?_printf+3)& (0+255),b
  8953  008986  EC60  F04A         	call	_printf	;wreg free
  8954                           
  8955                           ; BSR set to: 0
  8956                           ;../app/app_src/application.c: 415:  }
  8957  00898A  2A59               	incf	cmdMac@i^0,f,c
  8958                           
  8959                           ; BSR set to: 0
  8960  00898C  0E0B               	movlw	11
  8961  00898E  6459               	cpfsgt	cmdMac@i^0,c
  8962  008990  D7EB               	goto	l16478
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;../app/app_src/application.c: 416:  printf("\r\n");
  8966  008992  0ED3               	movlw	low (STR_139+2)
  8967  008994  6F75               	movwf	printf@fmt& (0+255),b
  8968  008996  0EFF               	movlw	high (STR_139+2)
  8969  008998  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8970  00899A  EC60  F04A         	call	_printf	;wreg free
  8971                           
  8972                           ; BSR set to: 0
  8973  00899E  0012               	return		;funcret
  8974  0089A0                     __end_of_cmdMac:
  8975                           	opt callstack 0
  8976                           
  8977 ;; *************** function _cmdI *****************
  8978 ;; Defined at:
  8979 ;;		line 222 in file "../app/app_src/application.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;		None
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;		None
  8984 ;; Return value:  Size  Location     Type
  8985 ;;                  1    wreg      void 
  8986 ;; Registers used:
  8987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8988 ;; Tracked objects:
  8989 ;;		On entry : 0/0
  8990 ;;		On exit  : 3F/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8997 ;;Total ram usage:        0 bytes
  8998 ;; Hardware stack levels used:    1
  8999 ;; Hardware stack levels required when called:   17
  9000 ;; This function calls:
  9001 ;;		_sendInfo
  9002 ;; This function is called by:
  9003 ;;		_executeATCommand
  9004 ;; This function uses a non-reentrant model
  9005 ;;
  9006                           
  9007                           	psect	text38
  9008  009A00                     __ptext38:
  9009                           	opt callstack 0
  9010  009A00                     _cmdI:
  9011                           	opt callstack 11
  9012                           
  9013                           ;../app/app_src/application.c: 224:     sendInfo();
  9014                           
  9015                           ; BSR set to: 0
  9016                           ;incstack = 0
  9017  009A00  EC9D  F041         	call	_sendInfo	;wreg free
  9018                           
  9019                           ; BSR set to: 0
  9020  009A04  0012               	return		;funcret
  9021  009A06                     __end_of_cmdI:
  9022                           	opt callstack 0
  9023                           
  9024 ;; *************** function _sendInfo *****************
  9025 ;; Defined at:
  9026 ;;		line 1174 in file "../app/app_src/application.c"
  9027 ;; Parameters:    Size  Location     Type
  9028 ;;		None
  9029 ;; Auto vars:     Size  Location     Type
  9030 ;;		None
  9031 ;; Return value:  Size  Location     Type
  9032 ;;                  1    wreg      void 
  9033 ;; Registers used:
  9034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9035 ;; Tracked objects:
  9036 ;;		On entry : 0/0
  9037 ;;		On exit  : 3F/0
  9038 ;;		Unchanged: 0/0
  9039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9044 ;;Total ram usage:        0 bytes
  9045 ;; Hardware stack levels used:    1
  9046 ;; Hardware stack levels required when called:   16
  9047 ;; This function calls:
  9048 ;;		_printf
  9049 ;; This function is called by:
  9050 ;;		_cmdI
  9051 ;; This function uses a non-reentrant model
  9052 ;;
  9053                           
  9054                           	psect	text39
  9055  00833A                     __ptext39:
  9056                           	opt callstack 0
  9057  00833A                     _sendInfo:
  9058                           	opt callstack 11
  9059                           
  9060                           ;../app/app_src/application.c: 1176:     printf("LoRa Mesh\r\n");
  9061                           
  9062                           ; BSR set to: 0
  9063                           ;incstack = 0
  9064  00833A  0EB9               	movlw	low STR_135
  9065  00833C  0100               	movlb	0	; () banked
  9066  00833E  6F75               	movwf	printf@fmt& (0+255),b
  9067  008340  0EFE               	movlw	high STR_135
  9068  008342  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9069  008344  EC60  F04A         	call	_printf	;wreg free
  9070  008348  0EF7               	movlw	low STR_136
  9071  00834A  6F75               	movwf	printf@fmt& (0+255),b
  9072  00834C  0EFD               	movlw	high STR_136
  9073  00834E  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9074  008350  0E00               	movlw	0
  9075  008352  6F78               	movwf	(?_printf+3)& (0+255),b
  9076  008354  0E01               	movlw	1
  9077  008356  6F77               	movwf	(?_printf+2)& (0+255),b
  9078  008358  0E00               	movlw	0
  9079  00835A  6F7A               	movwf	(?_printf+5)& (0+255),b
  9080  00835C  0E00               	movlw	0
  9081  00835E  6F79               	movwf	(?_printf+4)& (0+255),b
  9082  008360  EC60  F04A         	call	_printf	;wreg free
  9083  008364  0EDB               	movlw	low STR_137
  9084  008366  6F75               	movwf	printf@fmt& (0+255),b
  9085  008368  0EFD               	movlw	high STR_137
  9086  00836A  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9087  00836C  0E00               	movlw	0
  9088  00836E  6F78               	movwf	(?_printf+3)& (0+255),b
  9089  008370  0E02               	movlw	2
  9090  008372  6F77               	movwf	(?_printf+2)& (0+255),b
  9091  008374  0E00               	movlw	0
  9092  008376  6F7A               	movwf	(?_printf+5)& (0+255),b
  9093  008378  0E01               	movlw	1
  9094  00837A  6F79               	movwf	(?_printf+4)& (0+255),b
  9095  00837C  EC60  F04A         	call	_printf	;wreg free
  9096                           
  9097                           ;../app/app_src/application.c: 1180:     printf("Region ");
  9098  008380  0E3A               	movlw	low STR_138
  9099  008382  6F75               	movwf	printf@fmt& (0+255),b
  9100  008384  0EFF               	movlw	high STR_138
  9101  008386  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9102  008388  EC60  F04A         	call	_printf	;wreg free
  9103                           
  9104                           ;../app/app_src/application.c: 1182:     printf("NA\r\n");
  9105  00838C  0ED1               	movlw	low STR_139
  9106  00838E  6F75               	movwf	printf@fmt& (0+255),b
  9107  008390  0EFF               	movlw	high STR_139
  9108  008392  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9109  008394  EC60  F04A         	call	_printf	;wreg free
  9110                           
  9111                           ; BSR set to: 0
  9112  008398  0012               	return		;funcret
  9113  00839A                     __end_of_sendInfo:
  9114                           	opt callstack 0
  9115                           
  9116 ;; *************** function _cmdGetTX *****************
  9117 ;; Defined at:
  9118 ;;		line 630 in file "../app/app_src/application.c"
  9119 ;; Parameters:    Size  Location     Type
  9120 ;;		None
  9121 ;; Auto vars:     Size  Location     Type
  9122 ;;		None
  9123 ;; Return value:  Size  Location     Type
  9124 ;;                  1    wreg      void 
  9125 ;; Registers used:
  9126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9127 ;; Tracked objects:
  9128 ;;		On entry : 0/0
  9129 ;;		On exit  : 3F/0
  9130 ;;		Unchanged: 0/0
  9131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9136 ;;Total ram usage:        0 bytes
  9137 ;; Hardware stack levels used:    1
  9138 ;; Hardware stack levels required when called:   16
  9139 ;; This function calls:
  9140 ;;		_printf
  9141 ;; This function is called by:
  9142 ;;		_executeATCommand
  9143 ;; This function uses a non-reentrant model
  9144 ;;
  9145                           
  9146                           	psect	text40
  9147  0097B8                     __ptext40:
  9148                           	opt callstack 0
  9149  0097B8                     _cmdGetTX:
  9150                           	opt callstack 12
  9151                           
  9152                           ;../app/app_src/application.c: 631:  printf("TX POWER=%u\r\n",(uint16_t)TXPower);
  9153                           
  9154                           ; BSR set to: 0
  9155                           ;incstack = 0
  9156  0097B8  0E77               	movlw	low STR_40
  9157  0097BA  0100               	movlb	0	; () banked
  9158  0097BC  6F75               	movwf	printf@fmt& (0+255),b
  9159  0097BE  0EFE               	movlw	high STR_40
  9160  0097C0  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9161  0097C2  0060  F350  F077   	movff	_TXPower,?_printf+2
  9162  0097C8  6B78               	clrf	(?_printf+3)& (0+255),b
  9163  0097CA  EC60  F04A         	call	_printf	;wreg free
  9164                           
  9165                           ; BSR set to: 0
  9166  0097CE  0012               	return		;funcret
  9167  0097D0                     __end_of_cmdGetTX:
  9168                           	opt callstack 0
  9169                           
  9170 ;; *************** function _cmdGetTTL *****************
  9171 ;; Defined at:
  9172 ;;		line 528 in file "../app/app_src/application.c"
  9173 ;; Parameters:    Size  Location     Type
  9174 ;;		None
  9175 ;; Auto vars:     Size  Location     Type
  9176 ;;		None
  9177 ;; Return value:  Size  Location     Type
  9178 ;;                  1    wreg      void 
  9179 ;; Registers used:
  9180 ;;		None
  9181 ;; Tracked objects:
  9182 ;;		On entry : 0/0
  9183 ;;		On exit  : 0/0
  9184 ;;		Unchanged: 0/0
  9185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9190 ;;Total ram usage:        0 bytes
  9191 ;; Hardware stack levels used:    1
  9192 ;; Hardware stack levels required when called:    7
  9193 ;; This function calls:
  9194 ;;		Nothing
  9195 ;; This function is called by:
  9196 ;;		_executeATCommand
  9197 ;; This function uses a non-reentrant model
  9198 ;;
  9199                           
  9200                           	psect	text41
  9201  009A20                     __ptext41:
  9202                           	opt callstack 0
  9203  009A20                     _cmdGetTTL:
  9204                           	opt callstack 21
  9205                           
  9206                           ;../app/app_src/application.c: 530:  return;
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;incstack = 0
  9210  009A20  0012               	return		;funcret
  9211  009A22                     __end_of_cmdGetTTL:
  9212                           	opt callstack 0
  9213                           
  9214 ;; *************** function _cmdGetSF *****************
  9215 ;; Defined at:
  9216 ;;		line 772 in file "../app/app_src/application.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;		None
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;		None
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  1    wreg      void 
  9223 ;; Registers used:
  9224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 3F/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9234 ;;Total ram usage:        0 bytes
  9235 ;; Hardware stack levels used:    1
  9236 ;; Hardware stack levels required when called:   16
  9237 ;; This function calls:
  9238 ;;		_printf
  9239 ;; This function is called by:
  9240 ;;		_executeATCommand
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           	psect	text42
  9245  0097D0                     __ptext42:
  9246                           	opt callstack 0
  9247  0097D0                     _cmdGetSF:
  9248                           	opt callstack 12
  9249                           
  9250                           ;../app/app_src/application.c: 773:     printf("SF=%u\r\n", current_sf);
  9251                           
  9252                           ;incstack = 0
  9253  0097D0  0E32               	movlw	low STR_59
  9254  0097D2  0100               	movlb	0	; () banked
  9255  0097D4  6F75               	movwf	printf@fmt& (0+255),b
  9256  0097D6  0EFF               	movlw	high STR_59
  9257  0097D8  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9258  0097DA  0060  F35C  F077   	movff	_current_sf,?_printf+2
  9259  0097E0  6B78               	clrf	(?_printf+3)& (0+255),b
  9260  0097E2  EC60  F04A         	call	_printf	;wreg free
  9261                           
  9262                           ; BSR set to: 0
  9263  0097E6  0012               	return		;funcret
  9264  0097E8                     __end_of_cmdGetSF:
  9265                           	opt callstack 0
  9266                           
  9267 ;; *************** function _cmdGetRxCnt *****************
  9268 ;; Defined at:
  9269 ;;		line 807 in file "../app/app_src/application.c"
  9270 ;; Parameters:    Size  Location     Type
  9271 ;;  atCommand       2   87[COMRAM] PTR unsigned char 
  9272 ;;		 -> atCommand(80), 
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;  buf_id          1   91[COMRAM] unsigned char 
  9275 ;;  count           1   90[COMRAM] unsigned char 
  9276 ;; Return value:  Size  Location     Type
  9277 ;;                  1    wreg      void 
  9278 ;; Registers used:
  9279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9280 ;; Tracked objects:
  9281 ;;		On entry : 0/0
  9282 ;;		On exit  : 3F/0
  9283 ;;		Unchanged: 0/0
  9284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9286 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9287 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9288 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9289 ;;Total ram usage:        5 bytes
  9290 ;; Hardware stack levels used:    1
  9291 ;; Hardware stack levels required when called:   16
  9292 ;; This function calls:
  9293 ;;		_printf
  9294 ;; This function is called by:
  9295 ;;		_executeATCommand
  9296 ;; This function uses a non-reentrant model
  9297 ;;
  9298                           
  9299                           	psect	text43
  9300  0089A0                     __ptext43:
  9301                           	opt callstack 0
  9302  0089A0                     _cmdGetRxCnt:
  9303                           	opt callstack 12
  9304                           
  9305                           ;../app/app_src/application.c: 808:     uint8_t count = 0, buf_id = 0;
  9306                           
  9307                           ; BSR set to: 0
  9308                           ;incstack = 0
  9309  0089A0  0E00               	movlw	0
  9310  0089A2  6E5B               	movwf	cmdGetRxCnt@count^0,c
  9311  0089A4  0E00               	movlw	0
  9312  0089A6  6E5C               	movwf	cmdGetRxCnt@buf_id^0,c
  9313                           
  9314                           ;../app/app_src/application.c: 809:     while(buf_id++ < 4){
  9315  0089A8  D00A               	goto	l16716
  9316  0089AA                     l16712:
  9317                           
  9318                           ;../app/app_src/application.c: 810:         if(!rx_buffer[buf_id].free){
  9319  0089AA  505C               	movf	cmdGetRxCnt@buf_id^0,w,c
  9320  0089AC  0D7A               	mullw	122
  9321  0089AE  0E76               	movlw	low _rx_buffer
  9322  0089B0  24F3               	addwf	243,w,c
  9323  0089B2  6ED9               	movwf	fsr2l,c
  9324  0089B4  0E0A               	movlw	high _rx_buffer
  9325  0089B6  20F4               	addwfc	prodh,w,c
  9326  0089B8  6EDA               	movwf	fsr2h,c
  9327  0089BA  A0DF               	btfss	indf2,0,c
  9328                           
  9329                           ;../app/app_src/application.c: 811:             count++;
  9330  0089BC  2A5B               	incf	cmdGetRxCnt@count^0,f,c
  9331  0089BE                     l16716:
  9332                           
  9333                           ;../app/app_src/application.c: 809:     while(buf_id++ < 4){
  9334  0089BE  2A5C               	incf	cmdGetRxCnt@buf_id^0,f,c
  9335  0089C0  045C               	decf	cmdGetRxCnt@buf_id^0,w,c
  9336  0089C2  6E5A               	movwf	??_cmdGetRxCnt^0,c
  9337  0089C4  0E03               	movlw	3
  9338  0089C6  645A               	cpfsgt	??_cmdGetRxCnt^0,c
  9339  0089C8  D7F0               	goto	l16712
  9340                           
  9341                           ;../app/app_src/application.c: 814:     printf("RXCNT=%u/%u\r\n", count, 4);
  9342  0089CA  0E69               	movlw	low STR_63
  9343  0089CC  0100               	movlb	0	; () banked
  9344  0089CE  6F75               	movwf	printf@fmt& (0+255),b
  9345  0089D0  0EFE               	movlw	high STR_63
  9346  0089D2  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9347  0089D4  0060  F16C  F077   	movff	cmdGetRxCnt@count,?_printf+2
  9348  0089DA  6B78               	clrf	(?_printf+3)& (0+255),b
  9349  0089DC  0E00               	movlw	0
  9350  0089DE  6F7A               	movwf	(?_printf+5)& (0+255),b
  9351  0089E0  0E04               	movlw	4
  9352  0089E2  6F79               	movwf	(?_printf+4)& (0+255),b
  9353  0089E4  EC60  F04A         	call	_printf	;wreg free
  9354                           
  9355                           ; BSR set to: 0
  9356  0089E8  0012               	return		;funcret
  9357  0089EA                     __end_of_cmdGetRxCnt:
  9358                           	opt callstack 0
  9359                           
  9360 ;; *************** function _cmdGetRFCH *****************
  9361 ;; Defined at:
  9362 ;;		line 594 in file "../app/app_src/application.c"
  9363 ;; Parameters:    Size  Location     Type
  9364 ;;		None
  9365 ;; Auto vars:     Size  Location     Type
  9366 ;;		None
  9367 ;; Return value:  Size  Location     Type
  9368 ;;                  1    wreg      void 
  9369 ;; Registers used:
  9370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9371 ;; Tracked objects:
  9372 ;;		On entry : 0/0
  9373 ;;		On exit  : 3F/0
  9374 ;;		Unchanged: 0/0
  9375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9380 ;;Total ram usage:        0 bytes
  9381 ;; Hardware stack levels used:    1
  9382 ;; Hardware stack levels required when called:   16
  9383 ;; This function calls:
  9384 ;;		_printf
  9385 ;; This function is called by:
  9386 ;;		_executeATCommand
  9387 ;; This function uses a non-reentrant model
  9388 ;;
  9389                           
  9390                           	psect	text44
  9391  0096CE                     __ptext44:
  9392                           	opt callstack 0
  9393  0096CE                     _cmdGetRFCH:
  9394                           	opt callstack 12
  9395                           
  9396                           ;../app/app_src/application.c: 595:  printf("CHANNEL=%u\r\n",(channel + 1));
  9397                           
  9398                           ; BSR set to: 0
  9399                           ;incstack = 0
  9400  0096CE  0E9F               	movlw	low STR_36
  9401  0096D0  0100               	movlb	0	; () banked
  9402  0096D2  6F75               	movwf	printf@fmt& (0+255),b
  9403  0096D4  0EFE               	movlw	high STR_36
  9404  0096D6  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9405  0096D8  0E01               	movlw	1
  9406  0096DA  25D6               	addwf	_channel& (0+255),w,b
  9407  0096DC  6F77               	movwf	(?_printf+2)& (0+255),b
  9408  0096DE  6B78               	clrf	(?_printf+3)& (0+255),b
  9409  0096E0  0E00               	movlw	0
  9410  0096E2  2378               	addwfc	(?_printf+3)& (0+255),f,b
  9411  0096E4  EC60  F04A         	call	_printf	;wreg free
  9412                           
  9413                           ; BSR set to: 0
  9414  0096E8  0012               	return		;funcret
  9415  0096EA                     __end_of_cmdGetRFCH:
  9416                           	opt callstack 0
  9417                           
  9418 ;; *************** function _cmdGetMode *****************
  9419 ;; Defined at:
  9420 ;;		line 578 in file "../app/app_src/application.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;		None
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;		None
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  1    wreg      void 
  9427 ;; Registers used:
  9428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/0
  9431 ;;		On exit  : 3F/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9438 ;;Total ram usage:        0 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; Hardware stack levels required when called:   16
  9441 ;; This function calls:
  9442 ;;		_printf
  9443 ;; This function is called by:
  9444 ;;		_executeATCommand
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           
  9448                           	psect	text45
  9449  0098FC                     __ptext45:
  9450                           	opt callstack 0
  9451  0098FC                     _cmdGetMode:
  9452                           	opt callstack 12
  9453                           
  9454                           ;../app/app_src/application.c: 580:   printf("MODE = REPEATER\r\n");
  9455                           
  9456                           ; BSR set to: 0
  9457                           ;incstack = 0
  9458  0098FC  0E38               	movlw	low STR_34
  9459  0098FE  0100               	movlb	0	; () banked
  9460  009900  6F75               	movwf	printf@fmt& (0+255),b
  9461  009902  0EFE               	movlw	high STR_34
  9462  009904  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9463  009906  EC60  F04A         	call	_printf	;wreg free
  9464                           
  9465                           ; BSR set to: 0
  9466                           
  9467                           ;../app/app_src/application.c: 581:  }
  9468  00990A  0012               	return		;funcret
  9469  00990C                     __end_of_cmdGetMode:
  9470                           	opt callstack 0
  9471                           
  9472 ;; *************** function _cmdGetCADRSSI *****************
  9473 ;; Defined at:
  9474 ;;		line 670 in file "../app/app_src/application.c"
  9475 ;; Parameters:    Size  Location     Type
  9476 ;;		None
  9477 ;; Auto vars:     Size  Location     Type
  9478 ;;		None
  9479 ;; Return value:  Size  Location     Type
  9480 ;;                  1    wreg      void 
  9481 ;; Registers used:
  9482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9483 ;; Tracked objects:
  9484 ;;		On entry : 0/0
  9485 ;;		On exit  : 3F/0
  9486 ;;		Unchanged: 0/0
  9487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9492 ;;Total ram usage:        0 bytes
  9493 ;; Hardware stack levels used:    1
  9494 ;; Hardware stack levels required when called:   16
  9495 ;; This function calls:
  9496 ;;		_printf
  9497 ;; This function is called by:
  9498 ;;		_executeATCommand
  9499 ;; This function uses a non-reentrant model
  9500 ;;
  9501                           
  9502                           	psect	text46
  9503  0096EA                     __ptext46:
  9504                           	opt callstack 0
  9505  0096EA                     _cmdGetCADRSSI:
  9506                           	opt callstack 12
  9507                           
  9508                           ;../app/app_src/application.c: 671:  printf("CAD RSS=%i\r\n",RSSITarget);
  9509                           
  9510                           ; BSR set to: 0
  9511                           ;incstack = 0
  9512  0096EA  0E92               	movlw	low STR_45
  9513  0096EC  0100               	movlb	0	; () banked
  9514  0096EE  6F75               	movwf	printf@fmt& (0+255),b
  9515  0096F0  0EFE               	movlw	high STR_45
  9516  0096F2  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9517  0096F4  51F7               	movf	_RSSITarget& (0+255),w,b
  9518  0096F6  6F77               	movwf	(?_printf+2)& (0+255),b
  9519  0096F8  6B78               	clrf	(?_printf+3)& (0+255),b
  9520  0096FA  BF77               	btfsc	(?_printf+2)& (0+255),7,b
  9521  0096FC  0778               	decf	(?_printf+3)& (0+255),f,b
  9522  0096FE  EC60  F04A         	call	_printf	;wreg free
  9523                           
  9524                           ; BSR set to: 0
  9525  009702  0012               	return		;funcret
  9526  009704                     __end_of_cmdGetCADRSSI:
  9527                           	opt callstack 0
  9528                           
  9529 ;; *************** function _cmdGetCAD *****************
  9530 ;; Defined at:
  9531 ;;		line 555 in file "../app/app_src/application.c"
  9532 ;; Parameters:    Size  Location     Type
  9533 ;;		None
  9534 ;; Auto vars:     Size  Location     Type
  9535 ;;		None
  9536 ;; Return value:  Size  Location     Type
  9537 ;;                  1    wreg      void 
  9538 ;; Registers used:
  9539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9540 ;; Tracked objects:
  9541 ;;		On entry : 0/0
  9542 ;;		On exit  : 3F/0
  9543 ;;		Unchanged: 0/0
  9544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9549 ;;Total ram usage:        0 bytes
  9550 ;; Hardware stack levels used:    1
  9551 ;; Hardware stack levels required when called:   16
  9552 ;; This function calls:
  9553 ;;		_printf
  9554 ;; This function is called by:
  9555 ;;		_executeATCommand
  9556 ;; This function uses a non-reentrant model
  9557 ;;
  9558                           
  9559                           	psect	text47
  9560  0097E8                     __ptext47:
  9561                           	opt callstack 0
  9562  0097E8                     _cmdGetCAD:
  9563                           	opt callstack 12
  9564                           
  9565                           ;../app/app_src/application.c: 556:  printf("CAD COUNTER = %02X\r\n",cadCounter);
  9566                           
  9567                           ; BSR set to: 0
  9568                           ;incstack = 0
  9569  0097E8  0E11               	movlw	low STR_32
  9570  0097EA  0100               	movlb	0	; () banked
  9571  0097EC  6F75               	movwf	printf@fmt& (0+255),b
  9572  0097EE  0EFE               	movlw	high STR_32
  9573  0097F0  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9574  0097F2  0060  F370  F077   	movff	_cadCounter,?_printf+2
  9575  0097F8  6B78               	clrf	(?_printf+3)& (0+255),b
  9576  0097FA  EC60  F04A         	call	_printf	;wreg free
  9577                           
  9578                           ; BSR set to: 0
  9579  0097FE  0012               	return		;funcret
  9580  009800                     __end_of_cmdGetCAD:
  9581                           	opt callstack 0
  9582                           
  9583 ;; *************** function _cmdBootLoad *****************
  9584 ;; Defined at:
  9585 ;;		line 743 in file "../app/app_src/application.c"
  9586 ;; Parameters:    Size  Location     Type
  9587 ;;		None
  9588 ;; Auto vars:     Size  Location     Type
  9589 ;;		None
  9590 ;; Return value:  Size  Location     Type
  9591 ;;                  1    wreg      void 
  9592 ;; Registers used:
  9593 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9601 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9602 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9603 ;;Total ram usage:        2 bytes
  9604 ;; Hardware stack levels used:    1
  9605 ;; Hardware stack levels required when called:   16
  9606 ;; This function calls:
  9607 ;;		_DATAEE_WriteByte_Platform
  9608 ;;		_printf
  9609 ;; This function is called by:
  9610 ;;		_executeATCommand
  9611 ;; This function uses a non-reentrant model
  9612 ;;
  9613                           
  9614                           	psect	text48
  9615  008F34                     __ptext48:
  9616                           	opt callstack 0
  9617  008F34                     _cmdBootLoad:
  9618                           	opt callstack 12
  9619                           
  9620                           ;../app/app_src/application.c: 744:     DATAEE_WriteByte_Platform(0 + 0,0x00);
  9621                           
  9622                           ; BSR set to: 0
  9623                           ;incstack = 0
  9624  008F34  0E00               	movlw	0
  9625  008F36  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  9626  008F38  0E00               	movlw	0
  9627  008F3A  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  9628  008F3C  0E00               	movlw	0
  9629  008F3E  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
  9630  008F40  EC82  F045         	call	_DATAEE_WriteByte_Platform	;wreg free
  9631                           
  9632                           ;../app/app_src/application.c: 745:     printf("OK\r\n");
  9633  008F44  0ED6               	movlw	low STR_12
  9634  008F46  0100               	movlb	0	; () banked
  9635  008F48  6F75               	movwf	printf@fmt& (0+255),b
  9636  008F4A  0EFF               	movlw	high STR_12
  9637  008F4C  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9638  008F4E  EC60  F04A         	call	_printf	;wreg free
  9639                           
  9640                           ; BSR set to: 0
  9641                           ;../app/app_src/application.c: 746:     _delay((unsigned long)((1000)*(64000000/4000.0))
      +                          );
  9642  008F52  0E52               	movlw	82
  9643  008F54  6E59               	movwf	(??_cmdBootLoad+1)^0,c
  9644  008F56  0E2B               	movlw	43
  9645  008F58  6E58               	movwf	??_cmdBootLoad^0,c
  9646  008F5A  0E00               	movlw	0
  9647  008F5C                     u18037:
  9648  008F5C  2EE8               	decfsz	wreg,f,c
  9649  008F5E  D7FE               	bra	u18037
  9650  008F60  2E58               	decfsz	??_cmdBootLoad^0,f,c
  9651  008F62  D7FC               	bra	u18037
  9652  008F64  2E59               	decfsz	(??_cmdBootLoad+1)^0,f,c
  9653  008F66  D7FA               	bra	u18037
  9654  008F68  D000               	nop2	
  9655  008F6A  00FF               	reset		;# 
  9656  008F6C  0012               	return		;funcret
  9657  008F6E                     __end_of_cmdBootLoad:
  9658                           	opt callstack 0
  9659                           
  9660 ;; *************** function _cmdBcast *****************
  9661 ;; Defined at:
  9662 ;;		line 277 in file "../app/app_src/application.c"
  9663 ;; Parameters:    Size  Location     Type
  9664 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  9665 ;;		 -> atCommand(80), 
  9666 ;; Auto vars:     Size  Location     Type
  9667 ;;  buf_id          1   33[BANK0 ] unsigned char 
  9668 ;;  p2              3    0        PTR unsigned char 
  9669 ;;  p1              2   31[BANK0 ] PTR unsigned char 
  9670 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  9671 ;; Return value:  Size  Location     Type
  9672 ;;                  1    wreg      void 
  9673 ;; Registers used:
  9674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9675 ;; Tracked objects:
  9676 ;;		On entry : 0/0
  9677 ;;		On exit  : 3F/0
  9678 ;;		Unchanged: 0/0
  9679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9681 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9682 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9683 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9684 ;;Total ram usage:        7 bytes
  9685 ;; Hardware stack levels used:    1
  9686 ;; Hardware stack levels required when called:   16
  9687 ;; This function calls:
  9688 ;;		_NWK_DataReq
  9689 ;;		_get_free_tx_buffer
  9690 ;;		_memcpy
  9691 ;;		_memset
  9692 ;;		_printf
  9693 ;;		_strlen
  9694 ;;		_strstr
  9695 ;; This function is called by:
  9696 ;;		_executeATCommand
  9697 ;; This function uses a non-reentrant model
  9698 ;;
  9699                           
  9700                           	psect	text49
  9701  003838                     __ptext49:
  9702                           	opt callstack 0
  9703  003838                     _cmdBcast:
  9704                           	opt callstack 12
  9705                           
  9706                           ;../app/app_src/application.c: 278:  char *p1,*p2;;../app/app_src/application.c: 280:  p
      +                          1 = strstr(cmd,"=") + 1;
  9707                           
  9708                           ;incstack = 0
  9709  003838  0060  F160  F00D   	movff	cmdBcast@cmd,strstr@h
  9710  00383E  0060  F164  F00E   	movff	cmdBcast@cmd+1,strstr@h+1
  9711  003844  0EDE               	movlw	low (STR_21+3)
  9712  003846  6E0F               	movwf	strstr@n^0,c
  9713  003848  0EFF               	movlw	high (STR_21+3)
  9714  00384A  6E10               	movwf	(strstr@n+1)^0,c
  9715  00384C  EC93  F032         	call	_strstr	;wreg free
  9716  003850  0E01               	movlw	1
  9717  003852  240D               	addwf	?_strstr^0,w,c
  9718  003854  0100               	movlb	0	; () banked
  9719  003856  6F7F               	movwf	cmdBcast@p1& (0+255),b
  9720  003858  0E00               	movlw	0
  9721  00385A  200E               	addwfc	(?_strstr+1)^0,w,c
  9722  00385C  6F80               	movwf	(cmdBcast@p1+1)& (0+255),b
  9723                           
  9724                           ; BSR set to: 0
  9725                           ;../app/app_src/application.c: 282:  if((!p1) || (strlen(p1) > 64)){
  9726  00385E  517F               	movf	cmdBcast@p1& (0+255),w,b
  9727  003860  1180               	iorwf	(cmdBcast@p1+1)& (0+255),w,b
  9728  003862  B4D8               	btfsc	status,2,c
  9729  003864  D00E               	goto	u16760
  9730                           
  9731                           ; BSR set to: 0
  9732  003866  0060  F1FC  F002   	movff	cmdBcast@p1,strlen@s
  9733  00386C  0060  F200  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9734  003872  ECE8  F043         	call	_strlen	;wreg free
  9735  003876  5003               	movf	(?_strlen+1)^0,w,c
  9736  003878  E104               	bnz	u16760
  9737  00387A  0E41               	movlw	65
  9738  00387C  5C02               	subwf	?_strlen^0,w,c
  9739  00387E  A0D8               	btfss	status,0,c
  9740  003880  D00A               	goto	l16372
  9741  003882                     u16760:
  9742                           
  9743                           ;../app/app_src/application.c: 283:   printf("NOT OK:%u\r\n", MESSAGE_TOO_LONG);
  9744  003882  0EC5               	movlw	low STR_3
  9745  003884  0100               	movlb	0	; () banked
  9746  003886  6F75               	movwf	printf@fmt& (0+255),b
  9747  003888  0EFE               	movlw	high STR_3
  9748  00388A  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9749  00388C  0E07               	movlw	7
  9750  00388E  6F77               	movwf	(?_printf+2)& (0+255),b
  9751  003890  EC60  F04A         	call	_printf	;wreg free
  9752                           
  9753                           ;../app/app_src/application.c: 284:  }
  9754  003894  0012               	return	
  9755  003896                     l16372:
  9756                           
  9757                           ;../app/app_src/application.c: 286:   uint8_t buf_id;;../app/app_src/application.c: 287:
      +                                   if(!get_free_tx_buffer(&buf_id)){
  9758  003896  0E81               	movlw	low cmdBcast@buf_id
  9759  003898  6E02               	movwf	get_free_tx_buffer@buf_id^0,c
  9760  00389A  ECDB  F040         	call	_get_free_tx_buffer	;wreg free
  9761  00389E  0900               	iorlw	0
  9762  0038A0  A4D8               	btfss	status,2,c
  9763  0038A2  D00A               	goto	l16378
  9764                           
  9765                           ;../app/app_src/application.c: 288:             printf("NOT OK:%u\r\n", NO_FREE_BUF);
  9766  0038A4  0EC5               	movlw	low STR_3
  9767  0038A6  0100               	movlb	0	; () banked
  9768  0038A8  6F75               	movwf	printf@fmt& (0+255),b
  9769  0038AA  0EFE               	movlw	high STR_3
  9770  0038AC  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9771  0038AE  0E11               	movlw	17
  9772  0038B0  6F77               	movwf	(?_printf+2)& (0+255),b
  9773  0038B2  EC60  F04A         	call	_printf	;wreg free
  9774  0038B6  0012               	return	
  9775  0038B8                     l16378:
  9776                           
  9777                           ;../app/app_src/application.c: 291:         memset(&tx_buffer[buf_id].payload, 0, (127 -
      +                           16 - 2 ));
  9778  0038B8  0100               	movlb	0	; () banked
  9779  0038BA  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9780  0038BC  0D83               	mullw	131
  9781  0038BE  0E80               	movlw	low (_tx_buffer+22)
  9782  0038C0  24F3               	addwf	243,w,c
  9783  0038C2  6E02               	movwf	memset@dest^0,c
  9784  0038C4  0E08               	movlw	high (_tx_buffer+22)
  9785  0038C6  20F4               	addwfc	prodh,w,c
  9786  0038C8  6E03               	movwf	(memset@dest+1)^0,c
  9787  0038CA  0E00               	movlw	0
  9788  0038CC  6E05               	movwf	(memset@c+1)^0,c
  9789  0038CE  0E00               	movlw	0
  9790  0038D0  6E04               	movwf	memset@c^0,c
  9791  0038D2  0E00               	movlw	0
  9792  0038D4  6E07               	movwf	(memset@n+1)^0,c
  9793  0038D6  0E6D               	movlw	109
  9794  0038D8  6E06               	movwf	memset@n^0,c
  9795  0038DA  ECBC  F024         	call	_memset	;wreg free
  9796                           
  9797                           ;../app/app_src/application.c: 292:   memcpy(&tx_buffer[buf_id].payload,p1,strlen(p1));
  9798  0038DE  0100               	movlb	0	; () banked
  9799  0038E0  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9800  0038E2  0D83               	mullw	131
  9801  0038E4  0E80               	movlw	low (_tx_buffer+22)
  9802  0038E6  24F3               	addwf	243,w,c
  9803  0038E8  6E08               	movwf	memcpy@d1^0,c
  9804  0038EA  0E08               	movlw	high (_tx_buffer+22)
  9805  0038EC  20F4               	addwfc	prodh,w,c
  9806  0038EE  6E09               	movwf	(memcpy@d1+1)^0,c
  9807  0038F0  0060  F1FC  F00A   	movff	cmdBcast@p1,memcpy@s1
  9808  0038F6  0060  F200  F00B   	movff	cmdBcast@p1+1,memcpy@s1+1
  9809  0038FC  0060  F1FC  F002   	movff	cmdBcast@p1,strlen@s
  9810  003902  0060  F200  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9811  003908  ECE8  F043         	call	_strlen	;wreg free
  9812  00390C  0060  F008  F00C   	movff	?_strlen,memcpy@n
  9813  003912  0060  F00C  F00D   	movff	?_strlen+1,memcpy@n+1
  9814  003918  EC95  F03F         	call	_memcpy	;wreg free
  9815                           
  9816                           ;../app/app_src/application.c: 293:   tx_buffer[buf_id].nwkDataReq.dstAddr = 0xffff;
  9817  00391C  0100               	movlb	0	; () banked
  9818  00391E  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9819  003920  0D83               	mullw	131
  9820  003922  0E72               	movlw	low (_tx_buffer+8)
  9821  003924  24F3               	addwf	243,w,c
  9822  003926  6ED9               	movwf	fsr2l,c
  9823  003928  0E08               	movlw	high (_tx_buffer+8)
  9824  00392A  20F4               	addwfc	prodh,w,c
  9825  00392C  6EDA               	movwf	fsr2h,c
  9826  00392E  0EFF               	movlw	255
  9827  003930  6EDE               	movwf	postinc2,c
  9828  003932  0EFF               	movlw	255
  9829  003934  6EDD               	movwf	postdec2,c
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;../app/app_src/application.c: 294:         tx_buffer[buf_id].nwkDataReq.dstEndpoint = A
      +                          SCII_EP;
  9833  003936  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9834  003938  0D83               	mullw	131
  9835  00393A  0E74               	movlw	low (_tx_buffer+10)
  9836  00393C  24F3               	addwf	243,w,c
  9837  00393E  6ED9               	movwf	fsr2l,c
  9838  003940  0E08               	movlw	high (_tx_buffer+10)
  9839  003942  20F4               	addwfc	prodh,w,c
  9840  003944  6EDA               	movwf	fsr2h,c
  9841  003946  0E01               	movlw	1
  9842  003948  6EDF               	movwf	indf2,c
  9843                           
  9844                           ; BSR set to: 0
  9845                           ;../app/app_src/application.c: 295:         tx_buffer[buf_id].nwkDataReq.srcEndpoint = A
      +                          SCII_EP;
  9846  00394A  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9847  00394C  0D83               	mullw	131
  9848  00394E  0E75               	movlw	low (_tx_buffer+11)
  9849  003950  24F3               	addwf	243,w,c
  9850  003952  6ED9               	movwf	fsr2l,c
  9851  003954  0E08               	movlw	high (_tx_buffer+11)
  9852  003956  20F4               	addwfc	prodh,w,c
  9853  003958  6EDA               	movwf	fsr2h,c
  9854  00395A  0E01               	movlw	1
  9855  00395C  6EDF               	movwf	indf2,c
  9856                           
  9857                           ; BSR set to: 0
  9858                           ;../app/app_src/application.c: 296:         tx_buffer[buf_id].nwkDataReq.options = NWK_O
      +                          PT_ENABLE_SECURITY;
  9859  00395E  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9860  003960  0D83               	mullw	131
  9861  003962  0E76               	movlw	low (_tx_buffer+12)
  9862  003964  24F3               	addwf	243,w,c
  9863  003966  6ED9               	movwf	fsr2l,c
  9864  003968  0E08               	movlw	high (_tx_buffer+12)
  9865  00396A  20F4               	addwfc	prodh,w,c
  9866  00396C  6EDA               	movwf	fsr2h,c
  9867  00396E  0E02               	movlw	2
  9868  003970  6EDF               	movwf	indf2,c
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;../app/app_src/application.c: 297:         tx_buffer[buf_id].nwkDataReq.data = &tx_buff
      +                          er[buf_id].payload;
  9872  003972  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9873  003974  0D83               	mullw	131
  9874  003976  0E80               	movlw	low (_tx_buffer+22)
  9875  003978  24F3               	addwf	243,w,c
  9876  00397A  6E5A               	movwf	??_cmdBcast^0,c
  9877  00397C  0E08               	movlw	high (_tx_buffer+22)
  9878  00397E  20F4               	addwfc	prodh,w,c
  9879  003980  6E5B               	movwf	(??_cmdBcast+1)^0,c
  9880  003982  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9881  003984  0D83               	mullw	131
  9882  003986  0E79               	movlw	low (_tx_buffer+15)
  9883  003988  24F3               	addwf	243,w,c
  9884  00398A  6ED9               	movwf	fsr2l,c
  9885  00398C  0E08               	movlw	high (_tx_buffer+15)
  9886  00398E  20F4               	addwfc	prodh,w,c
  9887  003990  6EDA               	movwf	fsr2h,c
  9888  003992  0060  F16B  FFDE   	movff	??_cmdBcast,postinc2
  9889  003998  0060  F16F  FFDD   	movff	??_cmdBcast+1,postdec2
  9890                           
  9891                           ; BSR set to: 0
  9892                           ;../app/app_src/application.c: 298:         tx_buffer[buf_id].nwkDataReq.size = strlen(p
      +                          1);
  9893  00399E  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9894  0039A0  0D83               	mullw	131
  9895  0039A2  0E7B               	movlw	low (_tx_buffer+17)
  9896  0039A4  24F3               	addwf	243,w,c
  9897  0039A6  6ED9               	movwf	fsr2l,c
  9898  0039A8  0E08               	movlw	high (_tx_buffer+17)
  9899  0039AA  20F4               	addwfc	prodh,w,c
  9900  0039AC  6EDA               	movwf	fsr2h,c
  9901  0039AE  0060  F1FC  F002   	movff	cmdBcast@p1,strlen@s
  9902  0039B4  0060  F200  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9903  0039BA  ECE8  F043         	call	_strlen	;wreg free
  9904  0039BE  5002               	movf	?_strlen^0,w,c
  9905  0039C0  6EDF               	movwf	indf2,c
  9906                           
  9907                           ;../app/app_src/application.c: 299:         tx_buffer[buf_id].nwkDataReq.confirm = (void
      +                          *)&appDataConf;
  9908  0039C2  0100               	movlb	0	; () banked
  9909  0039C4  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9910  0039C6  0D83               	mullw	131
  9911  0039C8  0E7C               	movlw	low (_tx_buffer+18)
  9912  0039CA  24F3               	addwf	243,w,c
  9913  0039CC  6ED9               	movwf	fsr2l,c
  9914  0039CE  0E08               	movlw	high (_tx_buffer+18)
  9915  0039D0  20F4               	addwfc	prodh,w,c
  9916  0039D2  6EDA               	movwf	fsr2h,c
  9917  0039D4  0E26               	movlw	low _appDataConf
  9918  0039D6  6EDE               	movwf	postinc2,c
  9919  0039D8  0E95               	movlw	high _appDataConf
  9920  0039DA  6EDD               	movwf	postdec2,c
  9921                           
  9922                           ; BSR set to: 0
  9923                           ;../app/app_src/application.c: 300:         tx_buffer[buf_id].msgid = msgIDCounter++;
  9924  0039DC  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9925  0039DE  0D83               	mullw	131
  9926  0039E0  0E6C               	movlw	low (_tx_buffer+2)
  9927  0039E2  24F3               	addwf	243,w,c
  9928  0039E4  6ED9               	movwf	fsr2l,c
  9929  0039E6  0E08               	movlw	high (_tx_buffer+2)
  9930  0039E8  20F4               	addwfc	prodh,w,c
  9931  0039EA  6EDA               	movwf	fsr2h,c
  9932  0039EC  0060  F38F  FFDF   	movff	_msgIDCounter,indf2
  9933                           
  9934                           ; BSR set to: 0
  9935  0039F2  2BE3               	incf	_msgIDCounter& (0+255),f,b
  9936                           
  9937                           ; BSR set to: 0
  9938                           ;../app/app_src/application.c: 301:         NWK_DataReq(&tx_buffer[buf_id].nwkDataReq);
  9939  0039F4  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9940  0039F6  0D83               	mullw	131
  9941  0039F8  0E6D               	movlw	low (_tx_buffer+3)
  9942  0039FA  24F3               	addwf	243,w,c
  9943  0039FC  6E02               	movwf	NWK_DataReq@req^0,c
  9944  0039FE  0E08               	movlw	high (_tx_buffer+3)
  9945  003A00  20F4               	addwfc	prodh,w,c
  9946  003A02  6E03               	movwf	(NWK_DataReq@req+1)^0,c
  9947  003A04  EC99  F03E         	call	_NWK_DataReq	;wreg free
  9948                           
  9949                           ; BSR set to: 0
  9950                           ;../app/app_src/application.c: 302:   printf("OK:%u\r\n", tx_buffer[buf_id].msgid);
  9951  003A08  0EC9               	movlw	low (STR_3+4)
  9952  003A0A  6F75               	movwf	printf@fmt& (0+255),b
  9953  003A0C  0EFE               	movlw	high (STR_3+4)
  9954  003A0E  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9955  003A10  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9956  003A12  0D83               	mullw	131
  9957  003A14  0E6C               	movlw	low (_tx_buffer+2)
  9958  003A16  24F3               	addwf	243,w,c
  9959  003A18  6ED9               	movwf	fsr2l,c
  9960  003A1A  0E08               	movlw	high (_tx_buffer+2)
  9961  003A1C  20F4               	addwfc	prodh,w,c
  9962  003A1E  6EDA               	movwf	fsr2h,c
  9963  003A20  50DF               	movf	indf2,w,c
  9964  003A22  6E5A               	movwf	??_cmdBcast^0,c
  9965  003A24  505A               	movf	??_cmdBcast^0,w,c
  9966  003A26  6F77               	movwf	(?_printf+2)& (0+255),b
  9967  003A28  6B78               	clrf	(?_printf+3)& (0+255),b
  9968  003A2A  EC60  F04A         	call	_printf	;wreg free
  9969                           
  9970                           ; BSR set to: 0
  9971  003A2E  0012               	return		;funcret
  9972  003A30                     __end_of_cmdBcast:
  9973                           	opt callstack 0
  9974                           
  9975 ;; *************** function _strstr *****************
  9976 ;; Defined at:
  9977 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strstr.c"
  9978 ;; Parameters:    Size  Location     Type
  9979 ;;  h               2   12[COMRAM] PTR const unsigned char 
  9980 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  9981 ;;  n               2   14[COMRAM] PTR const unsigned char 
  9982 ;;		 -> STR_133(10), STR_131(10), STR_129(6), STR_127(6), 
  9983 ;;		 -> STR_125(7), STR_123(5), STR_121(7), STR_119(7), 
  9984 ;;		 -> STR_117(6), STR_115(9), STR_113(8), STR_111(8), 
  9985 ;;		 -> STR_109(7), STR_107(6), STR_105(3), STR_103(9), 
  9986 ;;		 -> STR_101(7), STR_99(7), STR_97(10), STR_95(10), 
  9987 ;;		 -> STR_93(15), STR_91(13), STR_89(9), STR_87(7), 
  9988 ;;		 -> STR_85(7), STR_83(10), STR_81(7), STR_79(8), 
  9989 ;;		 -> STR_77(11), STR_75(5), STR_73(5), STR_71(7), 
  9990 ;;		 -> STR_69(9), STR_67(7), STR_60(2), STR_54(6), 
  9991 ;;		 -> STR_52(6), STR_50(5), STR_46(2), STR_41(2), 
  9992 ;;		 -> STR_37(2), STR_28(2), STR_25(2), STR_15(2), 
  9993 ;;		 -> STR_11(2), STR_6(2), STR_2(2), STR_1(2), 
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;  nl              2   16[COMRAM] unsigned int 
  9996 ;; Return value:  Size  Location     Type
  9997 ;;                  2   12[COMRAM] PTR unsigned char 
  9998 ;; Registers used:
  9999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10000 ;; Tracked objects:
 10001 ;;		On entry : 0/0
 10002 ;;		On exit  : 0/0
 10003 ;;		Unchanged: 0/0
 10004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10005 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10006 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10008 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10009 ;;Total ram usage:        6 bytes
 10010 ;; Hardware stack levels used:    1
 10011 ;; Hardware stack levels required when called:    8
 10012 ;; This function calls:
 10013 ;;		_strchr
 10014 ;;		_strlen
 10015 ;;		_strncmp
 10016 ;; This function is called by:
 10017 ;;		_cmdSend
 10018 ;;		_cmdBcast
 10019 ;;		_cmdSetAddr
 10020 ;;		_cmdSetNaddr
 10021 ;;		_cmdSetAES
 10022 ;;		_cmdSetRFCH
 10023 ;;		_cmdSetTX
 10024 ;;		_cmdSetCADRSSI
 10025 ;;		_cmdSetParity
 10026 ;;		_cmdSetSF
 10027 ;;		_executeATCommand
 10028 ;; This function uses a non-reentrant model
 10029 ;;
 10030                           
 10031                           	psect	text50
 10032  006526                     __ptext50:
 10033                           	opt callstack 0
 10034  006526                     _strstr:
 10035                           	opt callstack 20
 10036                           
 10037                           ; BSR set to: 0
 10038                           ;incstack = 0
 10039  006526  500F               	movf	strstr@n^0,w,c
 10040  006528  1010               	iorwf	(strstr@n+1)^0,w,c
 10041  00652A  B4D8               	btfsc	status,2,c
 10042  00652C  D063               	goto	u16030
 10043  00652E  0060  F03C  F002   	movff	strstr@n,strlen@s
 10044  006534  0060  F040  F003   	movff	strstr@n+1,strlen@s+1
 10045  00653A  ECE8  F043         	call	_strlen	;wreg free
 10046  00653E  0060  F008  F011   	movff	?_strlen,strstr@nl
 10047  006544  0060  F00C  F012   	movff	?_strlen+1,strstr@nl+1
 10048  00654A  D038               	goto	l15886
 10049  00654C                     l15878:
 10050  00654C  0060  F034  F002   	movff	strstr@h,strncmp@_l
 10051  006552  0060  F038  F003   	movff	strstr@h+1,strncmp@_l+1
 10052  006558  0060  F03C  F004   	movff	strstr@n,strncmp@_r
 10053  00655E  0060  F040  F005   	movff	strstr@n+1,strncmp@_r+1
 10054  006564  0060  F044  F006   	movff	strstr@nl,strncmp@n
 10055  00656A  0060  F048  F007   	movff	strstr@nl+1,strncmp@n+1
 10056  006570  EC5E  F028         	call	_strncmp	;wreg free
 10057  006574  5002               	movf	?_strncmp^0,w,c
 10058  006576  1003               	iorwf	(?_strncmp+1)^0,w,c
 10059  006578  A4D8               	btfss	status,2,c
 10060  00657A  D007               	goto	l15884
 10061  00657C  0060  F034  F00D   	movff	strstr@h,?_strstr
 10062  006582  0060  F038  F00E   	movff	strstr@h+1,?_strstr+1
 10063  006588  0012               	return	
 10064  00658A                     l15884:
 10065  00658A  0E01               	movlw	1
 10066  00658C  240D               	addwf	strstr@h^0,w,c
 10067  00658E  6E02               	movwf	strchr@s^0,c
 10068  006590  0E00               	movlw	0
 10069  006592  200E               	addwfc	(strstr@h+1)^0,w,c
 10070  006594  6E03               	movwf	(strchr@s+1)^0,c
 10071  006596  0060  F03F  FFF6   	movff	strstr@n,tblptrl
 10072  00659C  0060  F043  FFF7   	movff	strstr@n+1,tblptrh
 10073  0065A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10074  0065A2  6AF8               	clrf	tblptru,c
 10075  0065A4                     	endif
 10076  0065A4                     	if	0	;tblptru may be non-zero
 10077  0065A4                     	endif
 10078  0065A4  0008               	tblrd		*
 10079  0065A6  50F5               	movf	tablat,w,c
 10080  0065A8  6E04               	movwf	strchr@c^0,c
 10081  0065AA  6A05               	clrf	(strchr@c+1)^0,c
 10082  0065AC  ECD4  F03D         	call	_strchr	;wreg free
 10083  0065B0  0060  F008  F00D   	movff	?_strchr,strstr@h
 10084  0065B6  0060  F00C  F00E   	movff	?_strchr+1,strstr@h+1
 10085  0065BC                     l15886:
 10086  0065BC  500D               	movf	strstr@h^0,w,c
 10087  0065BE  100E               	iorwf	(strstr@h+1)^0,w,c
 10088  0065C0  B4D8               	btfsc	status,2,c
 10089  0065C2  D018               	goto	u16030
 10090  0065C4  0060  F037  FFF6   	movff	strstr@h,tblptrl
 10091  0065CA  0060  F03B  FFF7   	movff	strstr@h+1,tblptrh
 10092  0065D0  0E00               	movlw	low (__mediumconst shr (0+16))
 10093  0065D2  6EF8               	movwf	tblptru,c
 10094  0065D4  0E0F               	movlw	(high __ramtop+-1)
 10095  0065D6  64F7               	cpfsgt	tblptrh,c
 10096  0065D8  D003               	bra	u16027
 10097  0065DA  0008               	tblrd		*
 10098  0065DC  50F5               	movf	tablat,w,c
 10099  0065DE  D007               	bra	u16020
 10100  0065E0                     u16027:
 10101  0065E0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10102  0065E6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10103  0065EC  50EF               	movf	indf0,w,c
 10104  0065EE                     u16020:
 10105  0065EE  0900               	iorlw	0
 10106  0065F0  A4D8               	btfss	status,2,c
 10107  0065F2  D7AC               	goto	l15878
 10108  0065F4                     u16030:
 10109  0065F4  0E00               	movlw	0
 10110  0065F6  6E0D               	movwf	?_strstr^0,c
 10111  0065F8  0E00               	movlw	0
 10112  0065FA  6E0E               	movwf	(?_strstr+1)^0,c
 10113  0065FC  0012               	return		;funcret
 10114  0065FE                     __end_of_strstr:
 10115                           	opt callstack 0
 10116                           
 10117 ;; *************** function _strncmp *****************
 10118 ;; Defined at:
 10119 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
 10120 ;; Parameters:    Size  Location     Type
 10121 ;;  _l              2    1[COMRAM] PTR const unsigned char 
 10122 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
 10123 ;;  _r              2    3[COMRAM] PTR const unsigned char 
 10124 ;;		 -> STR_133(10), STR_131(10), STR_129(6), STR_127(6), 
 10125 ;;		 -> STR_125(7), STR_123(5), STR_121(7), STR_119(7), 
 10126 ;;		 -> STR_117(6), STR_115(9), STR_113(8), STR_111(8), 
 10127 ;;		 -> STR_109(7), STR_107(6), STR_105(3), STR_103(9), 
 10128 ;;		 -> STR_101(7), STR_99(7), STR_97(10), STR_95(10), 
 10129 ;;		 -> STR_93(15), STR_91(13), STR_89(9), STR_87(7), 
 10130 ;;		 -> STR_85(7), STR_83(10), STR_81(7), STR_79(8), 
 10131 ;;		 -> STR_77(11), STR_75(5), STR_73(5), STR_71(7), 
 10132 ;;		 -> STR_69(9), STR_67(7), STR_60(2), STR_54(6), 
 10133 ;;		 -> STR_52(6), STR_50(5), STR_46(2), STR_41(2), 
 10134 ;;		 -> STR_37(2), STR_28(2), STR_25(2), STR_15(2), 
 10135 ;;		 -> STR_11(2), STR_6(2), STR_2(2), STR_1(2), 
 10136 ;;  n               2    5[COMRAM] unsigned int 
 10137 ;; Auto vars:     Size  Location     Type
 10138 ;;  r               2   10[COMRAM] PTR const unsigned char 
 10139 ;;		 -> STR_133(10), STR_131(10), STR_129(6), STR_127(6), 
 10140 ;;		 -> STR_125(7), STR_123(5), STR_121(7), STR_119(7), 
 10141 ;;		 -> STR_117(6), STR_115(9), STR_113(8), STR_111(8), 
 10142 ;;		 -> STR_109(7), STR_107(6), STR_105(3), STR_103(9), 
 10143 ;;		 -> STR_101(7), STR_99(7), STR_97(10), STR_95(10), 
 10144 ;;		 -> STR_93(15), STR_91(13), STR_89(9), STR_87(7), 
 10145 ;;		 -> STR_85(7), STR_83(10), STR_81(7), STR_79(8), 
 10146 ;;		 -> STR_77(11), STR_75(5), STR_73(5), STR_71(7), 
 10147 ;;		 -> STR_69(9), STR_67(7), STR_60(2), STR_54(6), 
 10148 ;;		 -> STR_52(6), STR_50(5), STR_46(2), STR_41(2), 
 10149 ;;		 -> STR_37(2), STR_28(2), STR_25(2), STR_15(2), 
 10150 ;;		 -> STR_11(2), STR_6(2), STR_2(2), STR_1(2), 
 10151 ;;  l               2    8[COMRAM] PTR const unsigned char 
 10152 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
 10153 ;; Return value:  Size  Location     Type
 10154 ;;                  2    1[COMRAM] int 
 10155 ;; Registers used:
 10156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 10157 ;; Tracked objects:
 10158 ;;		On entry : 0/0
 10159 ;;		On exit  : 0/0
 10160 ;;		Unchanged: 0/0
 10161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10162 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10163 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10164 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10165 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10166 ;;Total ram usage:       11 bytes
 10167 ;; Hardware stack levels used:    1
 10168 ;; Hardware stack levels required when called:    7
 10169 ;; This function calls:
 10170 ;;		Nothing
 10171 ;; This function is called by:
 10172 ;;		_strstr
 10173 ;; This function uses a non-reentrant model
 10174 ;;
 10175                           
 10176                           	psect	text51
 10177  0050BC                     __ptext51:
 10178                           	opt callstack 0
 10179  0050BC                     _strncmp:
 10180                           	opt callstack 20
 10181                           
 10182                           ;incstack = 0
 10183  0050BC  0060  F008  F009   	movff	strncmp@_l,strncmp@l
 10184  0050C2  0060  F00C  F00A   	movff	strncmp@_l+1,strncmp@l+1
 10185  0050C8  0060  F010  F00B   	movff	strncmp@_r,strncmp@r
 10186  0050CE  0060  F014  F00C   	movff	strncmp@_r+1,strncmp@r+1
 10187  0050D4  0606               	decf	strncmp@n^0,f,c
 10188  0050D6  A0D8               	btfss	status,0,c
 10189  0050D8  0607               	decf	(strncmp@n+1)^0,f,c
 10190  0050DA  2806               	incf	strncmp@n^0,w,c
 10191  0050DC  E10F               	bnz	l15676
 10192  0050DE  2807               	incf	(strncmp@n+1)^0,w,c
 10193  0050E0  A4D8               	btfss	status,2,c
 10194  0050E2  D00C               	goto	l15676
 10195  0050E4  0E00               	movlw	0
 10196  0050E6  6E03               	movwf	(?_strncmp+1)^0,c
 10197  0050E8  0E00               	movlw	0
 10198  0050EA  6E02               	movwf	?_strncmp^0,c
 10199  0050EC  0012               	return	
 10200  0050EE                     l15674:
 10201  0050EE  4A09               	infsnz	strncmp@l^0,f,c
 10202  0050F0  2A0A               	incf	(strncmp@l+1)^0,f,c
 10203  0050F2  4A0B               	infsnz	strncmp@r^0,f,c
 10204  0050F4  2A0C               	incf	(strncmp@r+1)^0,f,c
 10205  0050F6  0606               	decf	strncmp@n^0,f,c
 10206  0050F8  A0D8               	btfss	status,0,c
 10207  0050FA  0607               	decf	(strncmp@n+1)^0,f,c
 10208  0050FC                     l15676:
 10209  0050FC  0060  F027  FFF6   	movff	strncmp@l,tblptrl
 10210  005102  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
 10211  005108  0E00               	movlw	low (__mediumconst shr (0+16))
 10212  00510A  6EF8               	movwf	tblptru,c
 10213  00510C  0E0F               	movlw	(high __ramtop+-1)
 10214  00510E  64F7               	cpfsgt	tblptrh,c
 10215  005110  D003               	bra	u15477
 10216  005112  0008               	tblrd		*
 10217  005114  50F5               	movf	tablat,w,c
 10218  005116  D007               	bra	u15470
 10219  005118                     u15477:
 10220  005118  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10221  00511E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10222  005124  50EF               	movf	indf0,w,c
 10223  005126                     u15470:
 10224  005126  0900               	iorlw	0
 10225  005128  B4D8               	btfsc	status,2,c
 10226  00512A  D033               	goto	u15510
 10227  00512C  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
 10228  005132  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
 10229  005138                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10230  005138  6AF8               	clrf	tblptru,c
 10231  00513A                     	endif
 10232  00513A                     	if	0	;tblptru may be non-zero
 10233  00513A                     	endif
 10234  00513A  0008               	tblrd		*
 10235  00513C  50F5               	movf	tablat,w,c
 10236  00513E  0900               	iorlw	0
 10237  005140  B4D8               	btfsc	status,2,c
 10238  005142  D027               	goto	u15510
 10239  005144  5006               	movf	strncmp@n^0,w,c
 10240  005146  1007               	iorwf	(strncmp@n+1)^0,w,c
 10241  005148  B4D8               	btfsc	status,2,c
 10242  00514A  D023               	goto	u15510
 10243  00514C  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
 10244  005152  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
 10245  005158                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10246  005158  6AF8               	clrf	tblptru,c
 10247  00515A                     	endif
 10248  00515A                     	if	0	;tblptru may be non-zero
 10249  00515A                     	endif
 10250  00515A  0008               	tblrd		*
 10251  00515C  006F FFD4  F008    	movff	tablat,??_strncmp
 10252  005162  0060  F027  FFF6   	movff	strncmp@l,tblptrl
 10253  005168  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
 10254  00516E  0E00               	movlw	low (__mediumconst shr (0+16))
 10255  005170  6EF8               	movwf	tblptru,c
 10256  005172  0E0F               	movlw	(high __ramtop+-1)
 10257  005174  64F7               	cpfsgt	tblptrh,c
 10258  005176  D003               	bra	u15517
 10259  005178  0008               	tblrd		*
 10260  00517A  50F5               	movf	tablat,w,c
 10261  00517C  D007               	bra	u15515
 10262  00517E                     u15517:
 10263  00517E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10264  005184  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10265  00518A  50EF               	movf	indf0,w,c
 10266  00518C                     u15515:
 10267  00518C  1808               	xorwf	??_strncmp^0,w,c
 10268  00518E  B4D8               	btfsc	status,2,c
 10269  005190  D7AE               	goto	l15674
 10270  005192                     u15510:
 10271  005192  0060  F027  FFF6   	movff	strncmp@l,tblptrl
 10272  005198  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
 10273  00519E  0E00               	movlw	low (__mediumconst shr (0+16))
 10274  0051A0  6EF8               	movwf	tblptru,c
 10275  0051A2  0E0F               	movlw	(high __ramtop+-1)
 10276  0051A4  64F7               	cpfsgt	tblptrh,c
 10277  0051A6  D003               	bra	u15527
 10278  0051A8  0008               	tblrd		*
 10279  0051AA  50F5               	movf	tablat,w,c
 10280  0051AC  D007               	bra	u15520
 10281  0051AE                     u15527:
 10282  0051AE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10283  0051B4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10284  0051BA  50EF               	movf	indf0,w,c
 10285  0051BC                     u15520:
 10286  0051BC  6E08               	movwf	??_strncmp^0,c
 10287  0051BE  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
 10288  0051C4  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
 10289  0051CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10290  0051CA  6AF8               	clrf	tblptru,c
 10291  0051CC                     	endif
 10292  0051CC                     	if	0	;tblptru may be non-zero
 10293  0051CC                     	endif
 10294  0051CC  0008               	tblrd		*
 10295  0051CE  50F5               	movf	tablat,w,c
 10296  0051D0  5C08               	subwf	??_strncmp^0,w,c
 10297  0051D2  6E02               	movwf	?_strncmp^0,c
 10298  0051D4  6A03               	clrf	(?_strncmp+1)^0,c
 10299  0051D6  A0D8               	btfss	status,0,c
 10300  0051D8  0603               	decf	(?_strncmp+1)^0,f,c
 10301  0051DA  0012               	return		;funcret
 10302  0051DC                     __end_of_strncmp:
 10303                           	opt callstack 0
 10304                           
 10305 ;; *************** function _strchr *****************
 10306 ;; Defined at:
 10307 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strchr.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;  s               2    1[COMRAM] PTR const unsigned char 
 10310 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
 10311 ;;  c               2    3[COMRAM] int 
 10312 ;; Auto vars:     Size  Location     Type
 10313 ;;		None
 10314 ;; Return value:  Size  Location     Type
 10315 ;;                  2    1[COMRAM] PTR unsigned char 
 10316 ;; Registers used:
 10317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 10318 ;; Tracked objects:
 10319 ;;		On entry : 0/0
 10320 ;;		On exit  : 0/0
 10321 ;;		Unchanged: 0/0
 10322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10323 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10325 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10326 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10327 ;;Total ram usage:        6 bytes
 10328 ;; Hardware stack levels used:    1
 10329 ;; Hardware stack levels required when called:    7
 10330 ;; This function calls:
 10331 ;;		Nothing
 10332 ;; This function is called by:
 10333 ;;		_strstr
 10334 ;;		_strcspn
 10335 ;;		_strspn
 10336 ;; This function uses a non-reentrant model
 10337 ;;
 10338                           
 10339                           	psect	text52
 10340  007BA8                     __ptext52:
 10341                           	opt callstack 0
 10342  007BA8                     _strchr:
 10343                           	opt callstack 20
 10344                           
 10345                           ;incstack = 0
 10346  007BA8  0060  F00B  FFF6   	movff	strchr@s,tblptrl
 10347  007BAE  0060  F00F  FFF7   	movff	strchr@s+1,tblptrh
 10348  007BB4  0E00               	movlw	low (__mediumconst shr (0+16))
 10349  007BB6  6EF8               	movwf	tblptru,c
 10350  007BB8  0E0F               	movlw	(high __ramtop+-1)
 10351  007BBA  64F7               	cpfsgt	tblptrh,c
 10352  007BBC  D003               	bra	u14977
 10353  007BBE  0008               	tblrd		*
 10354  007BC0  50F5               	movf	tablat,w,c
 10355  007BC2  D007               	bra	u14970
 10356  007BC4                     u14977:
 10357  007BC4  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10358  007BCA  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10359  007BD0  50EF               	movf	indf0,w,c
 10360  007BD2                     u14970:
 10361  007BD2  1804               	xorwf	strchr@c^0,w,c
 10362  007BD4  A4D8               	btfss	status,2,c
 10363  007BD6  D007               	goto	l15282
 10364  007BD8  0060  F008  F002   	movff	strchr@s,?_strchr
 10365  007BDE  0060  F00C  F003   	movff	strchr@s+1,?_strchr+1
 10366  007BE4  0012               	return	
 10367  007BE6                     l15282:
 10368  007BE6  5002               	movf	strchr@s^0,w,c
 10369  007BE8  6E06               	movwf	??_strchr^0,c
 10370  007BEA  5003               	movf	(strchr@s+1)^0,w,c
 10371  007BEC  6E07               	movwf	(??_strchr+1)^0,c
 10372  007BEE  4A02               	infsnz	strchr@s^0,f,c
 10373  007BF0  2A03               	incf	(strchr@s+1)^0,f,c
 10374  007BF2  0060  F01B  FFF6   	movff	??_strchr,tblptrl
 10375  007BF8  0060  F01F  FFF7   	movff	??_strchr+1,tblptrh
 10376  007BFE  0E00               	movlw	low (__mediumconst shr (0+16))
 10377  007C00  6EF8               	movwf	tblptru,c
 10378  007C02  0E0F               	movlw	(high __ramtop+-1)
 10379  007C04  64F7               	cpfsgt	tblptrh,c
 10380  007C06  D003               	bra	u14997
 10381  007C08  0008               	tblrd		*
 10382  007C0A  50F5               	movf	tablat,w,c
 10383  007C0C  D007               	bra	u14990
 10384  007C0E                     u14997:
 10385  007C0E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10386  007C14  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10387  007C1A  50EF               	movf	indf0,w,c
 10388  007C1C                     u14990:
 10389  007C1C  0900               	iorlw	0
 10390  007C1E  A4D8               	btfss	status,2,c
 10391  007C20  D7C3               	goto	_strchr
 10392  007C22  0E00               	movlw	0
 10393  007C24  6E02               	movwf	?_strchr^0,c
 10394  007C26  0E00               	movlw	0
 10395  007C28  6E03               	movwf	(?_strchr+1)^0,c
 10396  007C2A  0012               	return		;funcret
 10397  007C2C                     __end_of_strchr:
 10398                           	opt callstack 0
 10399                           
 10400 ;; *************** function _get_free_tx_buffer *****************
 10401 ;; Defined at:
 10402 ;;		line 61 in file "../app/app_src/application.c"
 10403 ;; Parameters:    Size  Location     Type
 10404 ;;  buf_id          1    1[COMRAM] PTR unsigned char 
 10405 ;;		 -> cmdBcast@buf_id(1), cmdSend@buf_id(1), 
 10406 ;; Auto vars:     Size  Location     Type
 10407 ;;		None
 10408 ;; Return value:  Size  Location     Type
 10409 ;;                  1    wreg      _Bool 
 10410 ;; Registers used:
 10411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10412 ;; Tracked objects:
 10413 ;;		On entry : 0/0
 10414 ;;		On exit  : 0/0
 10415 ;;		Unchanged: 0/0
 10416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10417 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10419 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10420 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10421 ;;Total ram usage:        2 bytes
 10422 ;; Hardware stack levels used:    1
 10423 ;; Hardware stack levels required when called:    7
 10424 ;; This function calls:
 10425 ;;		Nothing
 10426 ;; This function is called by:
 10427 ;;		_cmdSend
 10428 ;;		_cmdBcast
 10429 ;; This function uses a non-reentrant model
 10430 ;;
 10431                           
 10432                           	psect	text53
 10433  0081B6                     __ptext53:
 10434                           	opt callstack 0
 10435  0081B6                     _get_free_tx_buffer:
 10436                           	opt callstack 20
 10437                           
 10438                           ;../app/app_src/application.c: 62:     *buf_id = 0;
 10439                           
 10440                           ;incstack = 0
 10441  0081B6  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10442  0081B8  6ED9               	movwf	fsr2l,c
 10443  0081BA  6ADA               	clrf	fsr2h,c
 10444  0081BC  0E00               	movlw	0
 10445  0081BE  6EDF               	movwf	indf2,c
 10446                           
 10447                           ;../app/app_src/application.c: 63:     while(*buf_id < 4){
 10448  0081C0  D023               	goto	l224
 10449  0081C2                     l15830:
 10450                           
 10451                           ;../app/app_src/application.c: 64:         if(tx_buffer[*buf_id].free){
 10452  0081C2  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10453  0081C4  6ED9               	movwf	fsr2l,c
 10454  0081C6  6ADA               	clrf	fsr2h,c
 10455  0081C8  50DF               	movf	indf2,w,c
 10456  0081CA  6E03               	movwf	??_get_free_tx_buffer^0,c
 10457  0081CC  5003               	movf	??_get_free_tx_buffer^0,w,c
 10458  0081CE  0D83               	mullw	131
 10459  0081D0  0E6A               	movlw	low _tx_buffer
 10460  0081D2  24F3               	addwf	243,w,c
 10461  0081D4  6ED9               	movwf	fsr2l,c
 10462  0081D6  0E08               	movlw	high _tx_buffer
 10463  0081D8  20F4               	addwfc	prodh,w,c
 10464  0081DA  6EDA               	movwf	fsr2h,c
 10465  0081DC  A4DF               	btfss	indf2,2,c
 10466  0081DE  D010               	goto	l15838
 10467                           
 10468                           ;../app/app_src/application.c: 65:             tx_buffer[*buf_id].free = 0;
 10469  0081E0  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10470  0081E2  6ED9               	movwf	fsr2l,c
 10471  0081E4  6ADA               	clrf	fsr2h,c
 10472  0081E6  50DF               	movf	indf2,w,c
 10473  0081E8  6E03               	movwf	??_get_free_tx_buffer^0,c
 10474  0081EA  5003               	movf	??_get_free_tx_buffer^0,w,c
 10475  0081EC  0D83               	mullw	131
 10476  0081EE  0E6A               	movlw	low _tx_buffer
 10477  0081F0  24F3               	addwf	243,w,c
 10478  0081F2  6ED9               	movwf	fsr2l,c
 10479  0081F4  0E08               	movlw	high _tx_buffer
 10480  0081F6  20F4               	addwfc	prodh,w,c
 10481  0081F8  6EDA               	movwf	fsr2h,c
 10482  0081FA  94DF               	bcf	indf2,2,c
 10483                           
 10484                           ;../app/app_src/application.c: 66:             return 1;
 10485  0081FC  0E01               	movlw	1
 10486  0081FE  0012               	return	
 10487  008200                     l15838:
 10488                           
 10489                           ;../app/app_src/application.c: 68:         (*buf_id)++;
 10490  008200  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10491  008202  6ED9               	movwf	fsr2l,c
 10492  008204  6ADA               	clrf	fsr2h,c
 10493  008206  2ADF               	incf	indf2,f,c
 10494  008208                     l224:
 10495                           
 10496                           ;../app/app_src/application.c: 63:     while(*buf_id < 4){
 10497  008208  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10498  00820A  6ED9               	movwf	fsr2l,c
 10499  00820C  6ADA               	clrf	fsr2h,c
 10500  00820E  0E03               	movlw	3
 10501  008210  64DF               	cpfsgt	indf2,c
 10502  008212  D7D7               	goto	l15830
 10503                           
 10504                           ;../app/app_src/application.c: 70:     return 0;
 10505  008214  0E00               	movlw	0
 10506  008216  0012               	return		;funcret
 10507  008218                     __end_of_get_free_tx_buffer:
 10508                           	opt callstack 0
 10509                           
 10510 ;; *************** function _NWK_DataReq *****************
 10511 ;; Defined at:
 10512 ;;		line 87 in file "../nwk/nwk_src/nwkDataReq.c"
 10513 ;; Parameters:    Size  Location     Type
 10514 ;;  req             2    1[COMRAM] PTR struct NWK_DataReq_t
 10515 ;;		 -> tx_buffer.nwkDataReq(22), tx_buffer(524), 
 10516 ;; Auto vars:     Size  Location     Type
 10517 ;;		None
 10518 ;; Return value:  Size  Location     Type
 10519 ;;                  1    wreg      void 
 10520 ;; Registers used:
 10521 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10522 ;; Tracked objects:
 10523 ;;		On entry : 3F/0
 10524 ;;		On exit  : 3F/0
 10525 ;;		Unchanged: 0/0
 10526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10530 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10531 ;;Total ram usage:        2 bytes
 10532 ;; Hardware stack levels used:    1
 10533 ;; Hardware stack levels required when called:    7
 10534 ;; This function calls:
 10535 ;;		Nothing
 10536 ;; This function is called by:
 10537 ;;		_cmdSend
 10538 ;;		_cmdBcast
 10539 ;; This function uses a non-reentrant model
 10540 ;;
 10541                           
 10542                           	psect	text54
 10543  007D32                     __ptext54:
 10544                           	opt callstack 0
 10545  007D32                     _NWK_DataReq:
 10546                           	opt callstack 20
 10547                           
 10548                           ; BSR set to: 0
 10549                           ;../nwk/nwk_src/nwkDataReq.c: 87: void NWK_DataReq(NWK_DataReq_t *req);../nwk/nwk_src/nw
      +                          kDataReq.c: 88: {;../nwk/nwk_src/nwkDataReq.c: 89:   req->state = NWK_DATA_REQ_STATE_INI
      +                          TIAL;
 10550                           
 10551                           ;incstack = 0
 10552  007D32  EE20 F004          	lfsr	2,4
 10553  007D36  5002               	movf	NWK_DataReq@req^0,w,c
 10554  007D38  26D9               	addwf	fsr2l,f,c
 10555  007D3A  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10556  007D3C  22DA               	addwfc	fsr2h,f,c
 10557  007D3E  0E00               	movlw	0
 10558  007D40  6EDF               	movwf	indf2,c
 10559                           
 10560                           ;../nwk/nwk_src/nwkDataReq.c: 90:   req->status = NWK_SUCCESS_STATUS;
 10561  007D42  EE20 F011          	lfsr	2,17
 10562  007D46  5002               	movf	NWK_DataReq@req^0,w,c
 10563  007D48  26D9               	addwf	fsr2l,f,c
 10564  007D4A  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10565  007D4C  22DA               	addwfc	fsr2h,f,c
 10566  007D4E  0E00               	movlw	0
 10567  007D50  6EDF               	movwf	indf2,c
 10568                           
 10569                           ;../nwk/nwk_src/nwkDataReq.c: 91:   req->frame = ((void*)0);
 10570  007D52  EE20 F002          	lfsr	2,2
 10571  007D56  5002               	movf	NWK_DataReq@req^0,w,c
 10572  007D58  26D9               	addwf	fsr2l,f,c
 10573  007D5A  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10574  007D5C  22DA               	addwfc	fsr2h,f,c
 10575  007D5E  0E00               	movlw	0
 10576  007D60  6EDE               	movwf	postinc2,c
 10577  007D62  0E00               	movlw	0
 10578  007D64  6EDD               	movwf	postdec2,c
 10579                           
 10580                           ; BSR set to: 0
 10581                           ;../nwk/nwk_src/nwkDataReq.c: 93:   nwkIb.lock++;
 10582  007D66  0101               	movlb	1	; () banked
 10583  007D68  4B67               	infsnz	(_nwkIb+54)& (0+255),f,b
 10584  007D6A  2B68               	incf	(_nwkIb+55)& (0+255),f,b
 10585                           
 10586                           ; BSR set to: 1
 10587                           ;../nwk/nwk_src/nwkDataReq.c: 95:   if (((void*)0) == nwkDataReqQueue)
 10588  007D6C  0100               	movlb	0	; () banked
 10589  007D6E  51C1               	movf	_nwkDataReqQueue& (0+255),w,b
 10590  007D70  11C2               	iorwf	(_nwkDataReqQueue+1)& (0+255),w,b
 10591  007D72  A4D8               	btfss	status,2,c
 10592  007D74  D011               	goto	l15908
 10593                           
 10594                           ; BSR set to: 0
 10595                           ;../nwk/nwk_src/nwkDataReq.c: 96:   {;../nwk/nwk_src/nwkDataReq.c: 97:     req->next = (
      +                          (void*)0);
 10596  007D76  0060  F00B  FFD9   	movff	NWK_DataReq@req,fsr2l
 10597  007D7C  0060  F00F  FFDA   	movff	NWK_DataReq@req+1,fsr2h
 10598  007D82  0E00               	movlw	0
 10599  007D84  6EDE               	movwf	postinc2,c
 10600  007D86  0E00               	movlw	0
 10601  007D88  6EDD               	movwf	postdec2,c
 10602  007D8A                     l15906:
 10603                           
 10604                           ; BSR set to: 0
 10605                           ;../nwk/nwk_src/nwkDataReq.c: 98:     nwkDataReqQueue = req;
 10606  007D8A  0060  F008  F0C1   	movff	NWK_DataReq@req,_nwkDataReqQueue
 10607  007D90  0060  F00C  F0C2   	movff	NWK_DataReq@req+1,_nwkDataReqQueue+1
 10608                           
 10609                           ;../nwk/nwk_src/nwkDataReq.c: 99:   }
 10610  007D96  0012               	return	
 10611  007D98                     l15908:
 10612                           
 10613                           ; BSR set to: 0
 10614                           ;../nwk/nwk_src/nwkDataReq.c: 101:   {;../nwk/nwk_src/nwkDataReq.c: 102:     req->next =
      +                           nwkDataReqQueue;
 10615  007D98  0060  F00B  FFD9   	movff	NWK_DataReq@req,fsr2l
 10616  007D9E  0060  F00F  FFDA   	movff	NWK_DataReq@req+1,fsr2h
 10617  007DA4  0060  F307  FFDE   	movff	_nwkDataReqQueue,postinc2
 10618  007DAA  0060  F30B  FFDD   	movff	_nwkDataReqQueue+1,postdec2
 10619  007DB0  D7EC               	goto	l15906
 10620  007DB2                     __end_of_NWK_DataReq:
 10621                           	opt callstack 0
 10622                           
 10623 ;; *************** function _cmdAddr *****************
 10624 ;; Defined at:
 10625 ;;		line 313 in file "../app/app_src/application.c"
 10626 ;; Parameters:    Size  Location     Type
 10627 ;;		None
 10628 ;; Auto vars:     Size  Location     Type
 10629 ;;		None
 10630 ;; Return value:  Size  Location     Type
 10631 ;;                  1    wreg      void 
 10632 ;; Registers used:
 10633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10634 ;; Tracked objects:
 10635 ;;		On entry : 0/0
 10636 ;;		On exit  : 3F/0
 10637 ;;		Unchanged: 0/0
 10638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10643 ;;Total ram usage:        0 bytes
 10644 ;; Hardware stack levels used:    1
 10645 ;; Hardware stack levels required when called:   16
 10646 ;; This function calls:
 10647 ;;		_printf
 10648 ;; This function is called by:
 10649 ;;		_executeATCommand
 10650 ;; This function uses a non-reentrant model
 10651 ;;
 10652                           
 10653                           	psect	text55
 10654  0095D2                     __ptext55:
 10655                           	opt callstack 0
 10656  0095D2                     _cmdAddr:
 10657                           	opt callstack 12
 10658                           
 10659                           ;../app/app_src/application.c: 314:  printf("ADDR=%02X%02X\r\n",currentAddr0,currentAddr
      +                          1);
 10660                           
 10661                           ; BSR set to: 0
 10662                           ;incstack = 0
 10663  0095D2  0E4A               	movlw	low STR_10
 10664  0095D4  0100               	movlb	0	; () banked
 10665  0095D6  6F75               	movwf	printf@fmt& (0+255),b
 10666  0095D8  0EFE               	movlw	high STR_10
 10667  0095DA  6F76               	movwf	(printf@fmt+1)& (0+255),b
 10668  0095DC  0060  F3E8  F077   	movff	_currentAddr0,?_printf+2
 10669  0095E2  6B78               	clrf	(?_printf+3)& (0+255),b
 10670  0095E4  0060  F3E4  F079   	movff	_currentAddr1,?_printf+4
 10671  0095EA  6B7A               	clrf	(?_printf+5)& (0+255),b
 10672  0095EC  EC60  F04A         	call	_printf	;wreg free
 10673                           
 10674                           ; BSR set to: 0
 10675  0095F0  0012               	return		;funcret
 10676  0095F2                     __end_of_cmdAddr:
 10677                           	opt callstack 0
 10678                           
 10679 ;; *************** function _printf *****************
 10680 ;; Defined at:
 10681 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 10682 ;; Parameters:    Size  Location     Type
 10683 ;;  fmt             2   21[BANK0 ] PTR const unsigned char 
 10684 ;;		 -> STR_139(5), STR_138(8), STR_137(28), STR_136(26), 
 10685 ;;		 -> STR_135(12), STR_134(12), STR_65(5), STR_64(34), 
 10686 ;;		 -> STR_63(14), STR_62(5), STR_61(12), STR_59(8), 
 10687 ;;		 -> STR_56(5), STR_55(12), STR_48(5), STR_47(12), 
 10688 ;;		 -> STR_45(13), STR_44(5), STR_43(12), STR_42(12), 
 10689 ;;		 -> STR_40(14), STR_39(5), STR_38(12), STR_36(13), 
 10690 ;;		 -> STR_35(18), STR_34(18), STR_33(5), STR_32(21), 
 10691 ;;		 -> STR_31(5), STR_30(12), STR_29(12), STR_27(12), 
 10692 ;;		 -> STR_26(12), STR_24(5), STR_23(3), STR_22(5), 
 10693 ;;		 -> STR_21(5), STR_20(12), STR_19(12), STR_18(3), 
 10694 ;;		 -> STR_17(6), STR_16(5), STR_14(13), STR_13(12), 
 10695 ;;		 -> STR_12(5), STR_10(16), STR_9(8), STR_8(12), 
 10696 ;;		 -> STR_7(12), STR_5(8), STR_4(12), STR_3(12), 
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;  ret             2    0        int 
 10699 ;;  ap              1   86[COMRAM] PTR void [1]
 10700 ;;		 -> ?_printf(2), 
 10701 ;; Return value:  Size  Location     Type
 10702 ;;                  2   21[BANK0 ] int 
 10703 ;; Registers used:
 10704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10705 ;; Tracked objects:
 10706 ;;		On entry : 3F/0
 10707 ;;		On exit  : 3F/0
 10708 ;;		Unchanged: 0/0
 10709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10710 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10711 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10713 ;;      Totals:         3      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10714 ;;Total ram usage:       13 bytes
 10715 ;; Hardware stack levels used:    1
 10716 ;; Hardware stack levels required when called:   15
 10717 ;; This function calls:
 10718 ;;		_vfprintf
 10719 ;; This function is called by:
 10720 ;;		_cmdSend
 10721 ;;		_cmdBcast
 10722 ;;		_cmdAddr
 10723 ;;		_cmdSetAddr
 10724 ;;		_cmdNaddr
 10725 ;;		_cmdSetNaddr
 10726 ;;		_cmdRecv
 10727 ;;		_cmdMac
 10728 ;;		_cmdSetSink
 10729 ;;		_cmdSetAES
 10730 ;;		_cmdGetCAD
 10731 ;;		_cmdRstCAD
 10732 ;;		_cmdGetMode
 10733 ;;		_cmdGetRFCH
 10734 ;;		_cmdSetRFCH
 10735 ;;		_cmdGetTX
 10736 ;;		_cmdSetTX
 10737 ;;		_cmdGetCADRSSI
 10738 ;;		_cmdSetCADRSSI
 10739 ;;		_cmdSetParity
 10740 ;;		_cmdBootLoad
 10741 ;;		_cmdGetSF
 10742 ;;		_cmdSetSF
 10743 ;;		_cmdGetRxCnt
 10744 ;;		_print_hop_table
 10745 ;;		_set_hop_table_ttl
 10746 ;;		_executeATCommand
 10747 ;;		_sendInfo
 10748 ;; This function uses a non-reentrant model
 10749 ;;
 10750                           
 10751                           	psect	text56
 10752  0094C0                     __ptext56:
 10753                           	opt callstack 0
 10754  0094C0                     _printf:
 10755                           	opt callstack 12
 10756                           
 10757                           ; BSR set to: 0
 10758                           
 10759                           ; BSR set to: 0
 10760                           ;incstack = 0
 10761  0094C0  0E77               	movlw	low (?_printf+2)
 10762  0094C2  6E57               	movwf	printf@ap^0,c
 10763                           
 10764                           ; BSR set to: 0
 10765  0094C4  0E00               	movlw	0
 10766  0094C6  6E4E               	movwf	vfprintf@fp^0,c
 10767  0094C8  0E00               	movlw	0
 10768  0094CA  6E4F               	movwf	(vfprintf@fp+1)^0,c
 10769  0094CC  0060  F1D4  F050   	movff	printf@fmt,vfprintf@fmt
 10770  0094D2  0060  F1D8  F051   	movff	printf@fmt+1,vfprintf@fmt+1
 10771  0094D8  0E57               	movlw	low printf@ap
 10772  0094DA  6E52               	movwf	vfprintf@ap^0,c
 10773  0094DC  ECCD  F041         	call	_vfprintf	;wreg free
 10774                           
 10775                           ; BSR set to: 0
 10776  0094E0  0012               	return		;funcret
 10777  0094E2                     __end_of_printf:
 10778                           	opt callstack 0
 10779                           
 10780 ;; *************** function _vfprintf *****************
 10781 ;; Defined at:
 10782 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10783 ;; Parameters:    Size  Location     Type
 10784 ;;  fp              2   77[COMRAM] PTR struct _IO_FILE
 10785 ;;		 -> NULL(0), 
 10786 ;;  fmt             2   79[COMRAM] PTR const unsigned char 
 10787 ;;		 -> STR_139(5), STR_138(8), STR_137(28), STR_136(26), 
 10788 ;;		 -> STR_135(12), STR_134(12), STR_65(5), STR_64(34), 
 10789 ;;		 -> STR_63(14), STR_62(5), STR_61(12), STR_59(8), 
 10790 ;;		 -> STR_56(5), STR_55(12), STR_48(5), STR_47(12), 
 10791 ;;		 -> STR_45(13), STR_44(5), STR_43(12), STR_42(12), 
 10792 ;;		 -> STR_40(14), STR_39(5), STR_38(12), STR_36(13), 
 10793 ;;		 -> STR_35(18), STR_34(18), STR_33(5), STR_32(21), 
 10794 ;;		 -> STR_31(5), STR_30(12), STR_29(12), STR_27(12), 
 10795 ;;		 -> STR_26(12), STR_24(5), STR_23(3), STR_22(5), 
 10796 ;;		 -> STR_21(5), STR_20(12), STR_19(12), STR_18(3), 
 10797 ;;		 -> STR_17(6), STR_16(5), STR_14(13), STR_13(12), 
 10798 ;;		 -> STR_12(5), STR_10(16), STR_9(8), STR_8(12), 
 10799 ;;		 -> STR_7(12), STR_5(8), STR_4(12), STR_3(12), 
 10800 ;;  ap              1   81[COMRAM] PTR PTR void 
 10801 ;;		 -> printf@ap(1), 
 10802 ;; Auto vars:     Size  Location     Type
 10803 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
 10804 ;;		 -> STR_139(5), STR_138(8), STR_137(28), STR_136(26), 
 10805 ;;		 -> STR_135(12), STR_134(12), STR_65(5), STR_64(34), 
 10806 ;;		 -> STR_63(14), STR_62(5), STR_61(12), STR_59(8), 
 10807 ;;		 -> STR_56(5), STR_55(12), STR_48(5), STR_47(12), 
 10808 ;;		 -> STR_45(13), STR_44(5), STR_43(12), STR_42(12), 
 10809 ;;		 -> STR_40(14), STR_39(5), STR_38(12), STR_36(13), 
 10810 ;;		 -> STR_35(18), STR_34(18), STR_33(5), STR_32(21), 
 10811 ;;		 -> STR_31(5), STR_30(12), STR_29(12), STR_27(12), 
 10812 ;;		 -> STR_26(12), STR_24(5), STR_23(3), STR_22(5), 
 10813 ;;		 -> STR_21(5), STR_20(12), STR_19(12), STR_18(3), 
 10814 ;;		 -> STR_17(6), STR_16(5), STR_14(13), STR_13(12), 
 10815 ;;		 -> STR_12(5), STR_10(16), STR_9(8), STR_8(12), 
 10816 ;;		 -> STR_7(12), STR_5(8), STR_4(12), STR_3(12), 
 10817 ;; Return value:  Size  Location     Type
 10818 ;;                  2   77[COMRAM] int 
 10819 ;; Registers used:
 10820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10821 ;; Tracked objects:
 10822 ;;		On entry : 3F/0
 10823 ;;		On exit  : 3F/0
 10824 ;;		Unchanged: 0/0
 10825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10826 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10827 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10829 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10830 ;;Total ram usage:        7 bytes
 10831 ;; Hardware stack levels used:    1
 10832 ;; Hardware stack levels required when called:   14
 10833 ;; This function calls:
 10834 ;;		_vfpfcnvrt
 10835 ;; This function is called by:
 10836 ;;		_printf
 10837 ;; This function uses a non-reentrant model
 10838 ;;
 10839                           
 10840                           	psect	text57
 10841  00839A                     __ptext57:
 10842                           	opt callstack 0
 10843  00839A                     _vfprintf:
 10844                           	opt callstack 12
 10845                           
 10846                           ; BSR set to: 0
 10847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 10848                           
 10849                           ; BSR set to: 0
 10850                           ;incstack = 0
 10851  00839A  0060  F140  F053   	movff	vfprintf@fmt,vfprintf@cfmt
 10852  0083A0  0060  F144  F054   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 10853                           
 10854                           ; BSR set to: 0
 10855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 10856  0083A6  0E00               	movlw	0
 10857  0083A8  6FB4               	movwf	(_nout+1)& (0+255),b
 10858  0083AA  0E00               	movlw	0
 10859  0083AC  6FB3               	movwf	_nout& (0+255),b
 10860                           
 10861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 10862  0083AE  D012               	goto	l15158
 10863  0083B0                     l15156:
 10864                           
 10865                           ; BSR set to: 0
 10866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 10867  0083B0  0060  F138  F046   	movff	vfprintf@fp,vfpfcnvrt@fp
 10868  0083B6  0060  F13C  F047   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 10869  0083BC  0E53               	movlw	low vfprintf@cfmt
 10870  0083BE  6E48               	movwf	vfpfcnvrt@fmt^0,c
 10871  0083C0  0060  F148  F049   	movff	vfprintf@ap,vfpfcnvrt@ap
 10872  0083C6  EC17  F003         	call	_vfpfcnvrt	;wreg free
 10873  0083CA  5046               	movf	?_vfpfcnvrt^0,w,c
 10874  0083CC  0100               	movlb	0	; () banked
 10875  0083CE  27B3               	addwf	_nout& (0+255),f,b
 10876  0083D0  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
 10877  0083D2  23B4               	addwfc	(_nout+1)& (0+255),f,b
 10878  0083D4                     l15158:
 10879                           
 10880                           ; BSR set to: 0
 10881                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 10882  0083D4  0060  F14F  FFF6   	movff	vfprintf@cfmt,tblptrl
 10883  0083DA  0060  F153  FFF7   	movff	vfprintf@cfmt+1,tblptrh
 10884  0083E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10885  0083E0  6AF8               	clrf	tblptru,c
 10886  0083E2                     	endif
 10887  0083E2                     	if	0	;tblptru may be non-zero
 10888  0083E2                     	endif
 10889  0083E2  0008               	tblrd		*
 10890  0083E4  50F5               	movf	tablat,w,c
 10891  0083E6  0900               	iorlw	0
 10892  0083E8  A4D8               	btfss	status,2,c
 10893  0083EA  D7E2               	goto	l15156
 10894                           
 10895                           ; BSR set to: 0
 10896                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 10897  0083EC  0060  F2CC  F04E   	movff	_nout,?_vfprintf
 10898  0083F2  0060  F2D0  F04F   	movff	_nout+1,?_vfprintf+1
 10899                           
 10900                           ; BSR set to: 0
 10901  0083F8  0012               	return		;funcret
 10902  0083FA                     __end_of_vfprintf:
 10903                           	opt callstack 0
 10904                           
 10905 ;; *************** function _vfpfcnvrt *****************
 10906 ;; Defined at:
 10907 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10908 ;; Parameters:    Size  Location     Type
 10909 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
 10910 ;;		 -> NULL(0), 
 10911 ;;  fmt             1   71[COMRAM] PTR PTR unsigned char 
 10912 ;;		 -> vfprintf@cfmt(2), 
 10913 ;;  ap              1   72[COMRAM] PTR PTR void 
 10914 ;;		 -> printf@ap(1), 
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;  llu             8   13[BANK0 ] unsigned long long 
 10917 ;;  ll              8    0[BANK0 ] long long 
 10918 ;;  f               4    0        long long 
 10919 ;;  vp              3    0        PTR void 
 10920 ;;  ct              3    0        unsigned char [3]
 10921 ;;  cp              3    0        PTR unsigned char 
 10922 ;;  done            2    9[BANK0 ] int 
 10923 ;;  i               2    0        int 
 10924 ;;  c               1    8[BANK0 ] unsigned char 
 10925 ;; Return value:  Size  Location     Type
 10926 ;;                  2   69[COMRAM] int 
 10927 ;; Registers used:
 10928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10929 ;; Tracked objects:
 10930 ;;		On entry : 3F/0
 10931 ;;		On exit  : 0/0
 10932 ;;		Unchanged: 0/0
 10933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10934 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10935 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10936 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10937 ;;      Totals:         8      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10938 ;;Total ram usage:       29 bytes
 10939 ;; Hardware stack levels used:    1
 10940 ;; Hardware stack levels required when called:   13
 10941 ;; This function calls:
 10942 ;;		_atoi
 10943 ;;		_dtoa
 10944 ;;		_fputc
 10945 ;;		_isdigit
 10946 ;;		_utoa
 10947 ;;		_xtoa
 10948 ;; This function is called by:
 10949 ;;		_vfprintf
 10950 ;; This function uses a non-reentrant model
 10951 ;;
 10952                           
 10953                           	psect	text58
 10954  00062E                     __ptext58:
 10955                           	opt callstack 0
 10956  00062E                     _vfpfcnvrt:
 10957                           	opt callstack 12
 10958                           
 10959                           ; BSR set to: 0
 10960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 10961                           
 10962                           ; BSR set to: 0
 10963                           ;incstack = 0
 10964  00062E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 10965  000630  6ED9               	movwf	fsr2l,c
 10966  000632  6ADA               	clrf	fsr2h,c
 10967  000634  006F FF7B FFF6     	movff	postinc2,tblptrl
 10968  00063A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10969  000640                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10970  000640  6AF8               	clrf	tblptru,c
 10971  000642                     	endif
 10972  000642                     	if	0	;tblptru may be non-zero
 10973  000642                     	endif
 10974  000642  0008               	tblrd		*
 10975  000644  50F5               	movf	tablat,w,c
 10976  000646  0A25               	xorlw	37
 10977  000648  A4D8               	btfss	status,2,c
 10978  00064A  D21A               	goto	l15028
 10979                           
 10980                           ; BSR set to: 0
 10981                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 10982  00064C  5048               	movf	vfpfcnvrt@fmt^0,w,c
 10983  00064E  6ED9               	movwf	fsr2l,c
 10984  000650  6ADA               	clrf	fsr2h,c
 10985  000652  2ADE               	incf	postinc2,f,c
 10986  000654  0E00               	movlw	0
 10987  000656  22DD               	addwfc	postdec2,f,c
 10988                           
 10989                           ; BSR set to: 0
 10990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 10991  000658  0E00               	movlw	0
 10992  00065A  6FB6               	movwf	(_width+1)& (0+255),b
 10993  00065C  0E00               	movlw	0
 10994  00065E  6FB5               	movwf	_width& (0+255),b
 10995  000660  C0B5  F0B9         	movff	_width,_flags
 10996  000664  C0B6  F0BA         	movff	_width+1,_flags+1
 10997                           
 10998                           ; BSR set to: 0
 10999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 11000  000668  69B7               	setf	_prec& (0+255),b
 11001  00066A  69B8               	setf	(_prec+1)& (0+255),b
 11002                           
 11003                           ; BSR set to: 0
 11004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 11005  00066C  0E00               	movlw	0
 11006  00066E  6F6A               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 11007  000670  0E00               	movlw	0
 11008  000672  D013               	goto	L3
 11009  000674                     l14926:
 11010                           
 11011                           ; BSR set to: 0
 11012                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 11013  000674  81B9               	bsf	_flags& (0+255),0,b
 11014  000676                     l14928:
 11015                           
 11016                           ; BSR set to: 0
 11017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 11018  000676  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11019  000678  6ED9               	movwf	fsr2l,c
 11020  00067A  6ADA               	clrf	fsr2h,c
 11021  00067C  2ADE               	incf	postinc2,f,c
 11022  00067E  0E00               	movlw	0
 11023  000680  22DD               	addwfc	postdec2,f,c
 11024                           
 11025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 11026  000682  D030               	goto	l14952
 11027  000684                     l14930:
 11028                           
 11029                           ; BSR set to: 0
 11030                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 11031  000684  83B9               	bsf	_flags& (0+255),1,b
 11032  000686  D7F7               	goto	l14928
 11033  000688                     l14934:
 11034                           
 11035                           ; BSR set to: 0
 11036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 11037  000688  85B9               	bsf	_flags& (0+255),2,b
 11038  00068A  D7F5               	goto	l14928
 11039  00068C                     l14938:
 11040                           
 11041                           ; BSR set to: 0
 11042                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 11043  00068C  87B9               	bsf	_flags& (0+255),3,b
 11044  00068E  D7F3               	goto	l14928
 11045  000690                     l14942:
 11046                           
 11047                           ; BSR set to: 0
 11048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 11049  000690  89B9               	bsf	_flags& (0+255),4,b
 11050  000692  D7F1               	goto	l14928
 11051  000694                     l14946:
 11052                           
 11053                           ; BSR set to: 0
 11054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 11055  000694  0E00               	movlw	0
 11056  000696  6F6A               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 11057  000698  0E01               	movlw	1
 11058  00069A                     L3:
 11059  00069A  6F69               	movwf	vfpfcnvrt@done& (0+255),b
 11060                           
 11061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 11062  00069C  D023               	goto	l14952
 11063  00069E                     l14950:
 11064                           
 11065                           ; BSR set to: 0
 11066  00069E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11067  0006A0  6ED9               	movwf	fsr2l,c
 11068  0006A2  6ADA               	clrf	fsr2h,c
 11069  0006A4  006F FF7B FFF6     	movff	postinc2,tblptrl
 11070  0006AA  006F FF77 FFF7     	movff	postdec2,tblptrh
 11071  0006B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11072  0006B0  6AF8               	clrf	tblptru,c
 11073  0006B2                     	endif
 11074  0006B2                     	if	0	;tblptru may be non-zero
 11075  0006B2                     	endif
 11076  0006B2  0008               	tblrd		*
 11077  0006B4  50F5               	movf	tablat,w,c
 11078  0006B6  6E4A               	movwf	??_vfpfcnvrt^0,c
 11079  0006B8  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
 11080                           
 11081                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11082                           ; Switch size 1, requested type "simple"
 11083                           ; Number of cases is 1, Range of values is 0 to 0
 11084                           ; switch strategies available:
 11085                           ; Name         Instructions Cycles
 11086                           ; simple_byte            4     3 (average)
 11087                           ;	Chosen strategy is simple_byte
 11088  0006BA  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
 11089  0006BC  0A00               	xorlw	0	; case 0
 11090  0006BE  A4D8               	btfss	status,2,c
 11091  0006C0  D7E9               	goto	l14946
 11092                           
 11093                           ; BSR set to: 0
 11094                           ; Switch size 1, requested type "simple"
 11095                           ; Number of cases is 5, Range of values is 32 to 48
 11096                           ; switch strategies available:
 11097                           ; Name         Instructions Cycles
 11098                           ; simple_byte           16     9 (average)
 11099                           ;	Chosen strategy is simple_byte
 11100  0006C2  504A               	movf	??_vfpfcnvrt^0,w,c
 11101  0006C4  0A20               	xorlw	32	; case 32
 11102  0006C6  B4D8               	btfsc	status,2,c
 11103  0006C8  D7E1               	goto	l14938
 11104  0006CA  0A03               	xorlw	3	; case 35
 11105  0006CC  B4D8               	btfsc	status,2,c
 11106  0006CE  D7E0               	goto	l14942
 11107  0006D0  0A08               	xorlw	8	; case 43
 11108  0006D2  B4D8               	btfsc	status,2,c
 11109  0006D4  D7D9               	goto	l14934
 11110  0006D6  0A06               	xorlw	6	; case 45
 11111  0006D8  B4D8               	btfsc	status,2,c
 11112  0006DA  D7CC               	goto	l14926
 11113  0006DC  0A1D               	xorlw	29	; case 48
 11114  0006DE  B4D8               	btfsc	status,2,c
 11115  0006E0  D7D1               	goto	l14930
 11116  0006E2  D7D8               	goto	l14946
 11117  0006E4                     l14952:
 11118                           
 11119                           ; BSR set to: 0
 11120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 11121  0006E4  5169               	movf	vfpfcnvrt@done& (0+255),w,b
 11122  0006E6  116A               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 11123  0006E8  B4D8               	btfsc	status,2,c
 11124  0006EA  D7D9               	goto	l14950
 11125                           
 11126                           ; BSR set to: 0
 11127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 11128  0006EC  B1B9               	btfsc	_flags& (0+255),0,b
 11129                           
 11130                           ; BSR set to: 0
 11131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 11132  0006EE  93B9               	bcf	_flags& (0+255),1,b
 11133                           
 11134                           ; BSR set to: 0
 11135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 11136  0006F0  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11137  0006F2  6ED9               	movwf	fsr2l,c
 11138  0006F4  6ADA               	clrf	fsr2h,c
 11139  0006F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 11140  0006FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 11141  000702                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11142  000702  6AF8               	clrf	tblptru,c
 11143  000704                     	endif
 11144  000704                     	if	0	;tblptru may be non-zero
 11145  000704                     	endif
 11146  000704  0008               	tblrd		*
 11147  000706  50F5               	movf	tablat,w,c
 11148  000708  0A2A               	xorlw	42
 11149  00070A  A4D8               	btfss	status,2,c
 11150  00070C  D01C               	goto	l14966
 11151                           
 11152                           ; BSR set to: 0
 11153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 11154  00070E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11155  000710  6ED9               	movwf	fsr2l,c
 11156  000712  6ADA               	clrf	fsr2h,c
 11157  000714  2ADE               	incf	postinc2,f,c
 11158  000716  0E00               	movlw	0
 11159  000718  22DD               	addwfc	postdec2,f,c
 11160                           
 11161                           ; BSR set to: 0
 11162                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 11163  00071A  5049               	movf	vfpfcnvrt@ap^0,w,c
 11164  00071C  6ED9               	movwf	fsr2l,c
 11165  00071E  6ADA               	clrf	fsr2h,c
 11166  000720  0E02               	movlw	2
 11167  000722  26DF               	addwf	indf2,f,c
 11168  000724  5CDF               	subwf	indf2,w,c
 11169  000726  6ED9               	movwf	fsr2l,c
 11170  000728  6ADA               	clrf	fsr2h,c
 11171  00072A  006F FF78  F0B5    	movff	postinc2,_width
 11172  000730  006F FF78  F0B6    	movff	postinc2,_width+1
 11173                           
 11174                           ; BSR set to: 0
 11175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 11176  000736  AFB6               	btfss	(_width+1)& (0+255),7,b
 11177  000738  D044               	goto	u14620
 11178                           
 11179                           ; BSR set to: 0
 11180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 11181  00073A  81B9               	bsf	_flags& (0+255),0,b
 11182                           
 11183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 11184  00073C  6DB5               	negf	_width& (0+255),b
 11185  00073E  1FB6               	comf	(_width+1)& (0+255),f,b
 11186  000740  B0D8               	btfsc	status,0,c
 11187  000742  2BB6               	incf	(_width+1)& (0+255),f,b
 11188  000744  D03E               	goto	u14620
 11189  000746                     l14966:
 11190                           
 11191                           ; BSR set to: 0
 11192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 11193  000746  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11194  000748  6ED9               	movwf	fsr2l,c
 11195  00074A  6ADA               	clrf	fsr2h,c
 11196  00074C  006F FF78  F009    	movff	postinc2,atoi@s
 11197  000752  006F FF74  F00A    	movff	postdec2,atoi@s+1
 11198  000758  ECF7  F021         	call	_atoi	;wreg free
 11199  00075C  0060  F024  F0B5   	movff	?_atoi,_width
 11200  000762  0060  F028  F0B6   	movff	?_atoi+1,_width+1
 11201                           
 11202                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11203  000768  D006               	goto	l14970
 11204  00076A                     l14968:
 11205                           
 11206                           ; BSR set to: 0
 11207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 11208  00076A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11209  00076C  6ED9               	movwf	fsr2l,c
 11210  00076E  6ADA               	clrf	fsr2h,c
 11211  000770  2ADE               	incf	postinc2,f,c
 11212  000772  0E00               	movlw	0
 11213  000774  22DD               	addwfc	postdec2,f,c
 11214  000776                     l14970:
 11215  000776  0ED0               	movlw	208
 11216  000778  6E4A               	movwf	??_vfpfcnvrt^0,c
 11217  00077A  0EFF               	movlw	255
 11218  00077C  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
 11219  00077E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11220  000780  6ED9               	movwf	fsr2l,c
 11221  000782  6ADA               	clrf	fsr2h,c
 11222  000784  006F FF7B FFF6     	movff	postinc2,tblptrl
 11223  00078A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11224  000790                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11225  000790  6AF8               	clrf	tblptru,c
 11226  000792                     	endif
 11227  000792                     	if	0	;tblptru may be non-zero
 11228  000792                     	endif
 11229  000792  0008               	tblrd		*
 11230  000794  50F5               	movf	tablat,w,c
 11231  000796  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
 11232  000798  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
 11233  00079A  504A               	movf	??_vfpfcnvrt^0,w,c
 11234  00079C  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
 11235  00079E  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
 11236  0007A0  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 11237  0007A2  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
 11238  0007A4  E106               	bnz	u14600
 11239  0007A6  0E0A               	movlw	10
 11240  0007A8  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
 11241  0007AA  B0D8               	btfsc	status,0,c
 11242  0007AC  D002               	goto	u14600
 11243  0007AE  0E01               	movlw	1
 11244  0007B0  D001               	goto	u14610
 11245  0007B2                     u14600:
 11246  0007B2  0E00               	movlw	0
 11247  0007B4                     u14610:
 11248  0007B4  0100               	movlb	0	; () banked
 11249  0007B6  6F6B               	movwf	_vfpfcnvrt$7039& (0+255),b
 11250  0007B8  6B6C               	clrf	(_vfpfcnvrt$7039+1)& (0+255),b
 11251                           
 11252                           ; BSR set to: 0
 11253  0007BA  516B               	movf	_vfpfcnvrt$7039& (0+255),w,b
 11254  0007BC  116C               	iorwf	(_vfpfcnvrt$7039+1)& (0+255),w,b
 11255  0007BE  A4D8               	btfss	status,2,c
 11256  0007C0  D7D4               	goto	l14968
 11257  0007C2                     u14620:
 11258                           
 11259                           ; BSR set to: 0
 11260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 11261  0007C2  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11262  0007C4  6ED9               	movwf	fsr2l,c
 11263  0007C6  6ADA               	clrf	fsr2h,c
 11264  0007C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11265  0007CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11266  0007D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11267  0007D4  6AF8               	clrf	tblptru,c
 11268  0007D6                     	endif
 11269  0007D6                     	if	0	;tblptru may be non-zero
 11270  0007D6                     	endif
 11271  0007D6  0008               	tblrd		*
 11272  0007D8  50F5               	movf	tablat,w,c
 11273  0007DA  0A64               	xorlw	100
 11274  0007DC  B4D8               	btfsc	status,2,c
 11275  0007DE  D00F               	goto	u14640
 11276                           
 11277                           ; BSR set to: 0
 11278  0007E0  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11279  0007E2  6ED9               	movwf	fsr2l,c
 11280  0007E4  6ADA               	clrf	fsr2h,c
 11281  0007E6  006F FF7B FFF6     	movff	postinc2,tblptrl
 11282  0007EC  006F FF77 FFF7     	movff	postdec2,tblptrh
 11283  0007F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11284  0007F2  6AF8               	clrf	tblptru,c
 11285  0007F4                     	endif
 11286  0007F4                     	if	0	;tblptru may be non-zero
 11287  0007F4                     	endif
 11288  0007F4  0008               	tblrd		*
 11289  0007F6  50F5               	movf	tablat,w,c
 11290  0007F8  0A69               	xorlw	105
 11291  0007FA  A4D8               	btfss	status,2,c
 11292  0007FC  D044               	goto	l14988
 11293  0007FE                     u14640:
 11294                           
 11295                           ; BSR set to: 0
 11296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 11297  0007FE  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11298  000800  6ED9               	movwf	fsr2l,c
 11299  000802  6ADA               	clrf	fsr2h,c
 11300  000804  2ADE               	incf	postinc2,f,c
 11301  000806  0E00               	movlw	0
 11302  000808  22DD               	addwfc	postdec2,f,c
 11303                           
 11304                           ; BSR set to: 0
 11305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 11306  00080A  5049               	movf	vfpfcnvrt@ap^0,w,c
 11307  00080C  6ED9               	movwf	fsr2l,c
 11308  00080E  6ADA               	clrf	fsr2h,c
 11309  000810  50DF               	movf	indf2,w,c
 11310  000812  2ADF               	incf	indf2,f,c
 11311  000814  2ADF               	incf	indf2,f,c
 11312  000816  6ED9               	movwf	fsr2l,c
 11313  000818  6ADA               	clrf	fsr2h,c
 11314  00081A  006F FF78  F060    	movff	postinc2,vfpfcnvrt@ll
 11315  000820  006F FF74  F061    	movff	postdec2,vfpfcnvrt@ll+1
 11316  000826  0E00               	movlw	0
 11317  000828  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 11318  00082A  0EFF               	movlw	-1
 11319  00082C  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 11320  00082E  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 11321  000830  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 11322  000832  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 11323  000834  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 11324  000836  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 11325                           
 11326                           ; BSR set to: 0
 11327                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 11328  000838  0060  F118  F01F   	movff	vfpfcnvrt@fp,dtoa@fp
 11329  00083E  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 11330  000844  0060  F180  F021   	movff	vfpfcnvrt@ll,dtoa@d
 11331  00084A  0060  F184  F022   	movff	vfpfcnvrt@ll+1,dtoa@d+1
 11332  000850  0060  F188  F023   	movff	vfpfcnvrt@ll+2,dtoa@d+2
 11333  000856  0060  F18C  F024   	movff	vfpfcnvrt@ll+3,dtoa@d+3
 11334  00085C  0060  F190  F025   	movff	vfpfcnvrt@ll+4,dtoa@d+4
 11335  000862  0060  F194  F026   	movff	vfpfcnvrt@ll+5,dtoa@d+5
 11336  000868  0060  F198  F027   	movff	vfpfcnvrt@ll+6,dtoa@d+6
 11337  00086E  0060  F19C  F028   	movff	vfpfcnvrt@ll+7,dtoa@d+7
 11338  000874  EC23  F013         	call	_dtoa	;wreg free
 11339  000878  0060  F07C  F046   	movff	?_dtoa,?_vfpfcnvrt
 11340  00087E  0060  F080  F047   	movff	?_dtoa+1,?_vfpfcnvrt+1
 11341  000884  0012               	return	
 11342  000886                     l14988:
 11343                           
 11344                           ; BSR set to: 0
 11345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 11346  000886  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11347  000888  6ED9               	movwf	fsr2l,c
 11348  00088A  6ADA               	clrf	fsr2h,c
 11349  00088C  006F FF7B FFF6     	movff	postinc2,tblptrl
 11350  000892  006F FF77 FFF7     	movff	postdec2,tblptrh
 11351  000898                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11352  000898  6AF8               	clrf	tblptru,c
 11353  00089A                     	endif
 11354  00089A                     	if	0	;tblptru may be non-zero
 11355  00089A                     	endif
 11356  00089A  0008               	tblrd		*
 11357  00089C  50F5               	movf	tablat,w,c
 11358  00089E  0A75               	xorlw	117
 11359  0008A0  A4D8               	btfss	status,2,c
 11360  0008A2  D047               	goto	l14998
 11361                           
 11362                           ; BSR set to: 0
 11363                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 11364  0008A4  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11365  0008A6  6ED9               	movwf	fsr2l,c
 11366  0008A8  6ADA               	clrf	fsr2h,c
 11367  0008AA  2ADE               	incf	postinc2,f,c
 11368  0008AC  0E00               	movlw	0
 11369  0008AE  22DD               	addwfc	postdec2,f,c
 11370                           
 11371                           ; BSR set to: 0
 11372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 11373  0008B0  5049               	movf	vfpfcnvrt@ap^0,w,c
 11374  0008B2  6ED9               	movwf	fsr2l,c
 11375  0008B4  6ADA               	clrf	fsr2h,c
 11376  0008B6  50DF               	movf	indf2,w,c
 11377  0008B8  2ADF               	incf	indf2,f,c
 11378  0008BA  2ADF               	incf	indf2,f,c
 11379  0008BC  6ED9               	movwf	fsr2l,c
 11380  0008BE  6ADA               	clrf	fsr2h,c
 11381  0008C0  006F FF78  F04A    	movff	postinc2,??_vfpfcnvrt
 11382  0008C6  006F FF74  F04B    	movff	postdec2,??_vfpfcnvrt+1
 11383  0008CC  0060  F128  F06D   	movff	??_vfpfcnvrt,vfpfcnvrt@llu
 11384  0008D2  0060  F12C  F06E   	movff	??_vfpfcnvrt+1,vfpfcnvrt@llu+1
 11385  0008D8  6B6F               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 11386  0008DA  6B70               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 11387  0008DC  6B71               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 11388  0008DE  6B72               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 11389  0008E0  6B73               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 11390  0008E2  6B74               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 11391                           
 11392                           ; BSR set to: 0
 11393                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 11394  0008E4  0060  F118  F01F   	movff	vfpfcnvrt@fp,utoa@fp
 11395  0008EA  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,utoa@fp+1
 11396  0008F0  0060  F1B4  F021   	movff	vfpfcnvrt@llu,utoa@d
 11397  0008F6  0060  F1B8  F022   	movff	vfpfcnvrt@llu+1,utoa@d+1
 11398  0008FC  0060  F1BC  F023   	movff	vfpfcnvrt@llu+2,utoa@d+2
 11399  000902  0060  F1C0  F024   	movff	vfpfcnvrt@llu+3,utoa@d+3
 11400  000908  0060  F1C4  F025   	movff	vfpfcnvrt@llu+4,utoa@d+4
 11401  00090E  0060  F1C8  F026   	movff	vfpfcnvrt@llu+5,utoa@d+5
 11402  000914  0060  F1CC  F027   	movff	vfpfcnvrt@llu+6,utoa@d+6
 11403  00091A  0060  F1D0  F028   	movff	vfpfcnvrt@llu+7,utoa@d+7
 11404  000920  EC05  F018         	call	_utoa	;wreg free
 11405  000924  0060  F07C  F046   	movff	?_utoa,?_vfpfcnvrt
 11406  00092A  0060  F080  F047   	movff	?_utoa+1,?_vfpfcnvrt+1
 11407  000930  0012               	return	
 11408  000932                     l14998:
 11409                           
 11410                           ; BSR set to: 0
 11411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 11412  000932  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11413  000934  6ED9               	movwf	fsr2l,c
 11414  000936  6ADA               	clrf	fsr2h,c
 11415  000938  006F FF7B FFF6     	movff	postinc2,tblptrl
 11416  00093E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11417  000944                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11418  000944  6AF8               	clrf	tblptru,c
 11419  000946                     	endif
 11420  000946                     	if	0	;tblptru may be non-zero
 11421  000946                     	endif
 11422  000946  0008               	tblrd		*
 11423  000948  50F5               	movf	tablat,w,c
 11424  00094A  0A78               	xorlw	120
 11425  00094C  B4D8               	btfsc	status,2,c
 11426  00094E  D00F               	goto	u14670
 11427                           
 11428                           ; BSR set to: 0
 11429  000950  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11430  000952  6ED9               	movwf	fsr2l,c
 11431  000954  6ADA               	clrf	fsr2h,c
 11432  000956  006F FF7B FFF6     	movff	postinc2,tblptrl
 11433  00095C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11434  000962                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11435  000962  6AF8               	clrf	tblptru,c
 11436  000964                     	endif
 11437  000964                     	if	0	;tblptru may be non-zero
 11438  000964                     	endif
 11439  000964  0008               	tblrd		*
 11440  000966  50F5               	movf	tablat,w,c
 11441  000968  0A58               	xorlw	88
 11442  00096A  A4D8               	btfss	status,2,c
 11443  00096C  D058               	goto	l15012
 11444  00096E                     u14670:
 11445                           
 11446                           ; BSR set to: 0
 11447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 11448  00096E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11449  000970  6ED9               	movwf	fsr2l,c
 11450  000972  6ADA               	clrf	fsr2h,c
 11451  000974  006F FF7B FFF6     	movff	postinc2,tblptrl
 11452  00097A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11453  000980                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11454  000980  6AF8               	clrf	tblptru,c
 11455  000982                     	endif
 11456  000982                     	if	0	;tblptru may be non-zero
 11457  000982                     	endif
 11458  000982  0008               	tblrd		*
 11459  000984  006F FFD4  F068    	movff	tablat,vfpfcnvrt@c
 11460                           
 11461                           ; BSR set to: 0
 11462                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 11463  00098A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11464  00098C  6ED9               	movwf	fsr2l,c
 11465  00098E  6ADA               	clrf	fsr2h,c
 11466  000990  2ADE               	incf	postinc2,f,c
 11467  000992  0E00               	movlw	0
 11468  000994  22DD               	addwfc	postdec2,f,c
 11469                           
 11470                           ; BSR set to: 0
 11471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 11472  000996  5049               	movf	vfpfcnvrt@ap^0,w,c
 11473  000998  6ED9               	movwf	fsr2l,c
 11474  00099A  6ADA               	clrf	fsr2h,c
 11475  00099C  50DF               	movf	indf2,w,c
 11476  00099E  2ADF               	incf	indf2,f,c
 11477  0009A0  2ADF               	incf	indf2,f,c
 11478  0009A2  6ED9               	movwf	fsr2l,c
 11479  0009A4  6ADA               	clrf	fsr2h,c
 11480  0009A6  006F FF78  F04A    	movff	postinc2,??_vfpfcnvrt
 11481  0009AC  006F FF74  F04B    	movff	postdec2,??_vfpfcnvrt+1
 11482  0009B2  0060  F128  F06D   	movff	??_vfpfcnvrt,vfpfcnvrt@llu
 11483  0009B8  0060  F12C  F06E   	movff	??_vfpfcnvrt+1,vfpfcnvrt@llu+1
 11484  0009BE  6B6F               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 11485  0009C0  6B70               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 11486  0009C2  6B71               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 11487  0009C4  6B72               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 11488  0009C6  6B73               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 11489  0009C8  6B74               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 11490                           
 11491                           ; BSR set to: 0
 11492                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 11493  0009CA  0060  F118  F01F   	movff	vfpfcnvrt@fp,xtoa@fp
 11494  0009D0  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 11495  0009D6  0060  F1B4  F021   	movff	vfpfcnvrt@llu,xtoa@d
 11496  0009DC  0060  F1B8  F022   	movff	vfpfcnvrt@llu+1,xtoa@d+1
 11497  0009E2  0060  F1BC  F023   	movff	vfpfcnvrt@llu+2,xtoa@d+2
 11498  0009E8  0060  F1C0  F024   	movff	vfpfcnvrt@llu+3,xtoa@d+3
 11499  0009EE  0060  F1C4  F025   	movff	vfpfcnvrt@llu+4,xtoa@d+4
 11500  0009F4  0060  F1C8  F026   	movff	vfpfcnvrt@llu+5,xtoa@d+5
 11501  0009FA  0060  F1CC  F027   	movff	vfpfcnvrt@llu+6,xtoa@d+6
 11502  000A00  0060  F1D0  F028   	movff	vfpfcnvrt@llu+7,xtoa@d+7
 11503  000A06  0060  F1A0  F029   	movff	vfpfcnvrt@c,xtoa@x
 11504  000A0C  EC7B  F014         	call	_xtoa	;wreg free
 11505  000A10  0060  F07C  F046   	movff	?_xtoa,?_vfpfcnvrt
 11506  000A16  0060  F080  F047   	movff	?_xtoa+1,?_vfpfcnvrt+1
 11507  000A1C  0012               	return	
 11508  000A1E                     l15012:
 11509                           
 11510                           ; BSR set to: 0
 11511                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 11512  000A1E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11513  000A20  6ED9               	movwf	fsr2l,c
 11514  000A22  6ADA               	clrf	fsr2h,c
 11515  000A24  006F FF7B FFF6     	movff	postinc2,tblptrl
 11516  000A2A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11517  000A30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11518  000A30  6AF8               	clrf	tblptru,c
 11519  000A32                     	endif
 11520  000A32                     	if	0	;tblptru may be non-zero
 11521  000A32                     	endif
 11522  000A32  0008               	tblrd		*
 11523  000A34  50F5               	movf	tablat,w,c
 11524  000A36  0A25               	xorlw	37
 11525  000A38  A4D8               	btfss	status,2,c
 11526  000A3A  D017               	goto	l15022
 11527                           
 11528                           ; BSR set to: 0
 11529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 11530  000A3C  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11531  000A3E  6ED9               	movwf	fsr2l,c
 11532  000A40  6ADA               	clrf	fsr2h,c
 11533  000A42  2ADE               	incf	postinc2,f,c
 11534  000A44  0E00               	movlw	0
 11535  000A46  22DD               	addwfc	postdec2,f,c
 11536                           
 11537                           ; BSR set to: 0
 11538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 11539  000A48  0E00               	movlw	0
 11540  000A4A  6E05               	movwf	(fputc@c+1)^0,c
 11541  000A4C  0E25               	movlw	37
 11542  000A4E  6E04               	movwf	fputc@c^0,c
 11543  000A50  0060  F118  F006   	movff	vfpfcnvrt@fp,fputc@fp
 11544  000A56  0060  F11C  F007   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11545  000A5C  EC3B  F040         	call	_fputc	;wreg free
 11546  000A60                     l15018:
 11547                           
 11548                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 11549  000A60  0E00               	movlw	0
 11550  000A62  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
 11551  000A64  0E01               	movlw	1
 11552  000A66  6E46               	movwf	?_vfpfcnvrt^0,c
 11553  000A68  0012               	return	
 11554  000A6A                     l15022:
 11555                           
 11556                           ; BSR set to: 0
 11557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 11558  000A6A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11559  000A6C  6ED9               	movwf	fsr2l,c
 11560  000A6E  6ADA               	clrf	fsr2h,c
 11561  000A70  2ADE               	incf	postinc2,f,c
 11562  000A72  0E00               	movlw	0
 11563  000A74  22DD               	addwfc	postdec2,f,c
 11564                           
 11565                           ; BSR set to: 0
 11566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 11567  000A76  0E00               	movlw	0
 11568  000A78  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
 11569  000A7A  0E00               	movlw	0
 11570  000A7C  6E46               	movwf	?_vfpfcnvrt^0,c
 11571  000A7E  0012               	return	
 11572  000A80                     l15028:
 11573                           
 11574                           ; BSR set to: 0
 11575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 11576  000A80  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11577  000A82  6ED9               	movwf	fsr2l,c
 11578  000A84  6ADA               	clrf	fsr2h,c
 11579  000A86  006F FF7B FFF6     	movff	postinc2,tblptrl
 11580  000A8C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11581  000A92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11582  000A92  6AF8               	clrf	tblptru,c
 11583  000A94                     	endif
 11584  000A94                     	if	0	;tblptru may be non-zero
 11585  000A94                     	endif
 11586  000A94  0008               	tblrd		*
 11587  000A96  50F5               	movf	tablat,w,c
 11588  000A98  6E04               	movwf	fputc@c^0,c
 11589  000A9A  6A05               	clrf	(fputc@c+1)^0,c
 11590  000A9C  0060  F118  F006   	movff	vfpfcnvrt@fp,fputc@fp
 11591  000AA2  0060  F11C  F007   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11592  000AA8  EC3B  F040         	call	_fputc	;wreg free
 11593                           
 11594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 11595  000AAC  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11596  000AAE  6ED9               	movwf	fsr2l,c
 11597  000AB0  6ADA               	clrf	fsr2h,c
 11598  000AB2  2ADE               	incf	postinc2,f,c
 11599  000AB4  0E00               	movlw	0
 11600  000AB6  22DD               	addwfc	postdec2,f,c
 11601  000AB8  D7D3               	goto	l15018
 11602  000ABA                     __end_of_vfpfcnvrt:
 11603                           	opt callstack 0
 11604                           
 11605 ;; *************** function _xtoa *****************
 11606 ;; Defined at:
 11607 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11608 ;; Parameters:    Size  Location     Type
 11609 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 11610 ;;		 -> NULL(0), 
 11611 ;;  d               8   32[COMRAM] unsigned long long 
 11612 ;;  x               1   40[COMRAM] unsigned char 
 11613 ;; Auto vars:     Size  Location     Type
 11614 ;;  n               8   57[COMRAM] unsigned long long 
 11615 ;;  c               2   67[COMRAM] int 
 11616 ;;  i               2   65[COMRAM] int 
 11617 ;;  w               2   55[COMRAM] int 
 11618 ;;  p               2   53[COMRAM] int 
 11619 ;; Return value:  Size  Location     Type
 11620 ;;                  2   30[COMRAM] int 
 11621 ;; Registers used:
 11622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11623 ;; Tracked objects:
 11624 ;;		On entry : 3F/0
 11625 ;;		On exit  : 0/0
 11626 ;;		Unchanged: 0/0
 11627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11628 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11629 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11630 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11631 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11632 ;;Total ram usage:       39 bytes
 11633 ;; Hardware stack levels used:    1
 11634 ;; Hardware stack levels required when called:   12
 11635 ;; This function calls:
 11636 ;;		_isalpha
 11637 ;;		_isupper
 11638 ;;		_pad
 11639 ;;		_toupper
 11640 ;; This function is called by:
 11641 ;;		_vfpfcnvrt
 11642 ;; This function uses a non-reentrant model
 11643 ;;
 11644                           
 11645                           	psect	text59
 11646  0028F6                     __ptext59:
 11647                           	opt callstack 0
 11648  0028F6                     _xtoa:
 11649                           	opt callstack 12
 11650                           
 11651                           ; BSR set to: 0
 11652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 11653                           
 11654                           ;incstack = 0
 11655  0028F6  AFB8               	btfss	(_prec+1)& (0+255),7,b
 11656                           
 11657                           ; BSR set to: 0
 11658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 11659  0028F8  93B9               	bcf	_flags& (0+255),1,b
 11660                           
 11661                           ; BSR set to: 0
 11662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 11663  0028FA  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 11664  0028FC  D005               	goto	u14260
 11665  0028FE  51B8               	movf	(_prec+1)& (0+255),w,b
 11666  002900  E108               	bnz	l3243
 11667  002902  05B7               	decf	_prec& (0+255),w,b
 11668  002904  B0D8               	btfsc	status,0,c
 11669  002906  D005               	goto	l3243
 11670  002908                     u14260:
 11671                           
 11672                           ; BSR set to: 0
 11673  002908  0E00               	movlw	0
 11674  00290A  6E37               	movwf	(xtoa@p+1)^0,c
 11675  00290C  0E01               	movlw	1
 11676  00290E  6E36               	movwf	xtoa@p^0,c
 11677  002910  D006               	goto	l3245
 11678  002912                     l3243:
 11679                           
 11680                           ; BSR set to: 0
 11681  002912  0060  F2DC  F036   	movff	_prec,xtoa@p
 11682  002918  0060  F2E0  F037   	movff	_prec+1,xtoa@p+1
 11683  00291E                     l3245:
 11684                           
 11685                           ; BSR set to: 0
 11686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 11687  00291E  0060  F2D4  F038   	movff	_width,xtoa@w
 11688  002924  0060  F2D8  F039   	movff	_width+1,xtoa@w+1
 11689                           
 11690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 11691  00292A  A9B9               	btfss	_flags& (0+255),4,b
 11692  00292C  D004               	goto	l14766
 11693                           
 11694                           ; BSR set to: 0
 11695                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 11696  00292E  0EFE               	movlw	254
 11697  002930  2638               	addwf	xtoa@w^0,f,c
 11698  002932  0EFF               	movlw	255
 11699  002934  2239               	addwfc	(xtoa@w+1)^0,f,c
 11700  002936                     l14766:
 11701                           
 11702                           ; BSR set to: 0
 11703                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 11704  002936  0060  F084  F03A   	movff	xtoa@d,xtoa@n
 11705  00293C  0060  F088  F03B   	movff	xtoa@d+1,xtoa@n+1
 11706  002942  0060  F08C  F03C   	movff	xtoa@d+2,xtoa@n+2
 11707  002948  0060  F090  F03D   	movff	xtoa@d+3,xtoa@n+3
 11708  00294E  0060  F094  F03E   	movff	xtoa@d+4,xtoa@n+4
 11709  002954  0060  F098  F03F   	movff	xtoa@d+5,xtoa@n+5
 11710  00295A  0060  F09C  F040   	movff	xtoa@d+6,xtoa@n+6
 11711  002960  0060  F0A0  F041   	movff	xtoa@d+7,xtoa@n+7
 11712                           
 11713                           ; BSR set to: 0
 11714                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 11715  002966  0E00               	movlw	0
 11716  002968  6E43               	movwf	(xtoa@i+1)^0,c
 11717  00296A  0E1F               	movlw	31
 11718  00296C  6E42               	movwf	xtoa@i^0,c
 11719                           
 11720                           ; BSR set to: 0
 11721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 11722  00296E  0E00               	movlw	0
 11723  002970  0102               	movlb	2	; () banked
 11724  002972  6FD9               	movwf	(_dbuf+31)& (0+255),b
 11725                           
 11726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11727  002974  D0A8               	goto	l14802
 11728  002976                     l14772:
 11729                           
 11730                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 11731  002976  0642               	decf	xtoa@i^0,f,c
 11732  002978  A0D8               	btfss	status,0,c
 11733  00297A  0643               	decf	(xtoa@i+1)^0,f,c
 11734                           
 11735                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 11736  00297C  0E0F               	movlw	15
 11737  00297E  143A               	andwf	xtoa@n^0,w,c
 11738  002980  6E44               	movwf	xtoa@c^0,c
 11739  002982  6A45               	clrf	(xtoa@c+1)^0,c
 11740                           
 11741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 11742  002984  BE45               	btfsc	(xtoa@c+1)^0,7,c
 11743  002986  D008               	goto	l14780
 11744  002988  5045               	movf	(xtoa@c+1)^0,w,c
 11745  00298A  E104               	bnz	u14280
 11746  00298C  0E0A               	movlw	10
 11747  00298E  5C44               	subwf	xtoa@c^0,w,c
 11748  002990  A0D8               	btfss	status,0,c
 11749  002992  D002               	goto	l14780
 11750  002994                     u14280:
 11751  002994  0E57               	movlw	87
 11752  002996  D001               	goto	L4
 11753  002998                     l14780:
 11754  002998  0E30               	movlw	48
 11755  00299A                     L4:
 11756  00299A  2444               	addwf	xtoa@c^0,w,c
 11757  00299C  6E44               	movwf	xtoa@c^0,c
 11758  00299E  0E00               	movlw	0
 11759  0029A0  2045               	addwfc	(xtoa@c+1)^0,w,c
 11760  0029A2  6E45               	movwf	(xtoa@c+1)^0,c
 11761                           
 11762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
 11763  0029A4  0EBF               	movlw	191
 11764  0029A6  6E2A               	movwf	??_xtoa^0,c
 11765  0029A8  0EFF               	movlw	255
 11766  0029AA  6E2B               	movwf	(??_xtoa+1)^0,c
 11767  0029AC  5029               	movf	xtoa@x^0,w,c
 11768  0029AE  6E2C               	movwf	(??_xtoa+2)^0,c
 11769  0029B0  6A2D               	clrf	(??_xtoa+3)^0,c
 11770  0029B2  502A               	movf	??_xtoa^0,w,c
 11771  0029B4  262C               	addwf	(??_xtoa+2)^0,f,c
 11772  0029B6  502B               	movf	(??_xtoa+1)^0,w,c
 11773  0029B8  222D               	addwfc	(??_xtoa+3)^0,f,c
 11774  0029BA  502D               	movf	(??_xtoa+3)^0,w,c
 11775  0029BC  E106               	bnz	u14290
 11776  0029BE  0E1A               	movlw	26
 11777  0029C0  5C2C               	subwf	(??_xtoa+2)^0,w,c
 11778  0029C2  B0D8               	btfsc	status,0,c
 11779  0029C4  D002               	goto	u14290
 11780  0029C6  0E01               	movlw	1
 11781  0029C8  D001               	goto	u14300
 11782  0029CA                     u14290:
 11783  0029CA  0E00               	movlw	0
 11784  0029CC                     u14300:
 11785  0029CC  6E32               	movwf	_xtoa$7024^0,c
 11786  0029CE  6A33               	clrf	(_xtoa$7024+1)^0,c
 11787  0029D0  5032               	movf	_xtoa$7024^0,w,c
 11788  0029D2  1033               	iorwf	(_xtoa$7024+1)^0,w,c
 11789  0029D4  B4D8               	btfsc	status,2,c
 11790  0029D6  D02B               	goto	l14794
 11791  0029D8  0E9F               	movlw	159
 11792  0029DA  6E2A               	movwf	??_xtoa^0,c
 11793  0029DC  0EFF               	movlw	255
 11794  0029DE  6E2B               	movwf	(??_xtoa+1)^0,c
 11795  0029E0  0E20               	movlw	32
 11796  0029E2  1044               	iorwf	xtoa@c^0,w,c
 11797  0029E4  6E2C               	movwf	(??_xtoa+2)^0,c
 11798  0029E6  0E00               	movlw	0
 11799  0029E8  1045               	iorwf	(xtoa@c+1)^0,w,c
 11800  0029EA  6E2D               	movwf	(??_xtoa+3)^0,c
 11801  0029EC  502A               	movf	??_xtoa^0,w,c
 11802  0029EE  262C               	addwf	(??_xtoa+2)^0,f,c
 11803  0029F0  502B               	movf	(??_xtoa+1)^0,w,c
 11804  0029F2  222D               	addwfc	(??_xtoa+3)^0,f,c
 11805  0029F4  502D               	movf	(??_xtoa+3)^0,w,c
 11806  0029F6  E106               	bnz	u14320
 11807  0029F8  0E1A               	movlw	26
 11808  0029FA  5C2C               	subwf	(??_xtoa+2)^0,w,c
 11809  0029FC  B0D8               	btfsc	status,0,c
 11810  0029FE  D002               	goto	u14320
 11811  002A00  0E01               	movlw	1
 11812  002A02  D001               	goto	u14330
 11813  002A04                     u14320:
 11814  002A04  0E00               	movlw	0
 11815  002A06                     u14330:
 11816  002A06  6E34               	movwf	_xtoa$7025^0,c
 11817  002A08  6A35               	clrf	(_xtoa$7025+1)^0,c
 11818  002A0A  5034               	movf	_xtoa$7025^0,w,c
 11819  002A0C  1035               	iorwf	(_xtoa$7025+1)^0,w,c
 11820  002A0E  B4D8               	btfsc	status,2,c
 11821  002A10  D00E               	goto	l14794
 11822                           
 11823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 11824  002A12  0060  F110  F008   	movff	xtoa@c,toupper@c
 11825  002A18  0060  F114  F009   	movff	xtoa@c+1,toupper@c+1
 11826  002A1E  ECBF  F043         	call	_toupper	;wreg free
 11827  002A22  0060  F020  F044   	movff	?_toupper,xtoa@c
 11828  002A28  0060  F024  F045   	movff	?_toupper+1,xtoa@c+1
 11829  002A2E                     l14794:
 11830                           
 11831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 11832  002A2E  0EBA               	movlw	low _dbuf
 11833  002A30  2442               	addwf	xtoa@i^0,w,c
 11834  002A32  6ED9               	movwf	fsr2l,c
 11835  002A34  0E02               	movlw	high _dbuf
 11836  002A36  2043               	addwfc	(xtoa@i+1)^0,w,c
 11837  002A38  6EDA               	movwf	fsr2h,c
 11838  002A3A  0060  F113  FFDF   	movff	xtoa@c,indf2
 11839                           
 11840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 11841  002A40  0636               	decf	xtoa@p^0,f,c
 11842  002A42  A0D8               	btfss	status,0,c
 11843  002A44  0637               	decf	(xtoa@p+1)^0,f,c
 11844                           
 11845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 11846  002A46  0638               	decf	xtoa@w^0,f,c
 11847  002A48  A0D8               	btfss	status,0,c
 11848  002A4A  0639               	decf	(xtoa@w+1)^0,f,c
 11849                           
 11850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 11851  002A4C  0060  F0E8  F02A   	movff	xtoa@n,??_xtoa
 11852  002A52  0060  F0EC  F02B   	movff	xtoa@n+1,??_xtoa+1
 11853  002A58  0060  F0F0  F02C   	movff	xtoa@n+2,??_xtoa+2
 11854  002A5E  0060  F0F4  F02D   	movff	xtoa@n+3,??_xtoa+3
 11855  002A64  0060  F0F8  F02E   	movff	xtoa@n+4,??_xtoa+4
 11856  002A6A  0060  F0FC  F02F   	movff	xtoa@n+5,??_xtoa+5
 11857  002A70  0060  F100  F030   	movff	xtoa@n+6,??_xtoa+6
 11858  002A76  0060  F104  F031   	movff	xtoa@n+7,??_xtoa+7
 11859  002A7C  0E05               	movlw	5
 11860  002A7E  D009               	goto	u14350
 11861  002A80                     u14355:
 11862  002A80  90D8               	bcf	status,0,c
 11863  002A82  3231               	rrcf	(??_xtoa+7)^0,f,c
 11864  002A84  3230               	rrcf	(??_xtoa+6)^0,f,c
 11865  002A86  322F               	rrcf	(??_xtoa+5)^0,f,c
 11866  002A88  322E               	rrcf	(??_xtoa+4)^0,f,c
 11867  002A8A  322D               	rrcf	(??_xtoa+3)^0,f,c
 11868  002A8C  322C               	rrcf	(??_xtoa+2)^0,f,c
 11869  002A8E  322B               	rrcf	(??_xtoa+1)^0,f,c
 11870  002A90  322A               	rrcf	??_xtoa^0,f,c
 11871  002A92                     u14350:
 11872  002A92  2EE8               	decfsz	wreg,f,c
 11873  002A94  D7F5               	goto	u14355
 11874  002A96  0060  F0A8  F03A   	movff	??_xtoa,xtoa@n
 11875  002A9C  0060  F0AC  F03B   	movff	??_xtoa+1,xtoa@n+1
 11876  002AA2  0060  F0B0  F03C   	movff	??_xtoa+2,xtoa@n+2
 11877  002AA8  0060  F0B4  F03D   	movff	??_xtoa+3,xtoa@n+3
 11878  002AAE  0060  F0B8  F03E   	movff	??_xtoa+4,xtoa@n+4
 11879  002AB4  0060  F0BC  F03F   	movff	??_xtoa+5,xtoa@n+5
 11880  002ABA  0060  F0C0  F040   	movff	??_xtoa+6,xtoa@n+6
 11881  002AC0  0060  F0C4  F041   	movff	??_xtoa+7,xtoa@n+7
 11882  002AC6                     l14802:
 11883                           
 11884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11885  002AC6  BE43               	btfsc	(xtoa@i+1)^0,7,c
 11886  002AC8  D021               	goto	u14400
 11887  002ACA  5043               	movf	(xtoa@i+1)^0,w,c
 11888  002ACC  E104               	bnz	u14360
 11889  002ACE  0E02               	movlw	2
 11890  002AD0  5C42               	subwf	xtoa@i^0,w,c
 11891  002AD2  A0D8               	btfss	status,0,c
 11892  002AD4  D01B               	goto	u14400
 11893  002AD6                     u14360:
 11894  002AD6  503A               	movf	xtoa@n^0,w,c
 11895  002AD8  103B               	iorwf	(xtoa@n+1)^0,w,c
 11896  002ADA  103C               	iorwf	(xtoa@n+2)^0,w,c
 11897  002ADC  103D               	iorwf	(xtoa@n+3)^0,w,c
 11898  002ADE  103E               	iorwf	(xtoa@n+4)^0,w,c
 11899  002AE0  103F               	iorwf	(xtoa@n+5)^0,w,c
 11900  002AE2  1040               	iorwf	(xtoa@n+6)^0,w,c
 11901  002AE4  1041               	iorwf	(xtoa@n+7)^0,w,c
 11902  002AE6  A4D8               	btfss	status,2,c
 11903  002AE8  D746               	goto	l14772
 11904  002AEA  BE37               	btfsc	(xtoa@p+1)^0,7,c
 11905  002AEC  D005               	goto	u14380
 11906  002AEE  5037               	movf	(xtoa@p+1)^0,w,c
 11907  002AF0  E102               	bnz	u14381
 11908  002AF2  0436               	decf	xtoa@p^0,w,c
 11909  002AF4  B0D8               	btfsc	status,0,c
 11910  002AF6                     u14381:
 11911  002AF6  D73F               	goto	l14772
 11912  002AF8                     u14380:
 11913  002AF8  BE39               	btfsc	(xtoa@w+1)^0,7,c
 11914  002AFA  D008               	goto	u14400
 11915  002AFC  5039               	movf	(xtoa@w+1)^0,w,c
 11916  002AFE  E103               	bnz	u14390
 11917  002B00  0438               	decf	xtoa@w^0,w,c
 11918  002B02  A0D8               	btfss	status,0,c
 11919  002B04  D003               	goto	u14400
 11920  002B06                     u14390:
 11921  002B06  0100               	movlb	0	; () banked
 11922  002B08  B3B9               	btfsc	_flags& (0+255),1,b
 11923  002B0A  D735               	goto	l14772
 11924  002B0C                     u14400:
 11925                           
 11926                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 11927  002B0C  0100               	movlb	0	; () banked
 11928  002B0E  A9B9               	btfss	_flags& (0+255),4,b
 11929  002B10  D017               	goto	l14818
 11930                           
 11931                           ; BSR set to: 0
 11932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 11933  002B12  0642               	decf	xtoa@i^0,f,c
 11934  002B14  A0D8               	btfss	status,0,c
 11935  002B16  0643               	decf	(xtoa@i+1)^0,f,c
 11936                           
 11937                           ; BSR set to: 0
 11938                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 11939  002B18  0EBA               	movlw	low _dbuf
 11940  002B1A  2442               	addwf	xtoa@i^0,w,c
 11941  002B1C  6ED9               	movwf	fsr2l,c
 11942  002B1E  0E02               	movlw	high _dbuf
 11943  002B20  2043               	addwfc	(xtoa@i+1)^0,w,c
 11944  002B22  6EDA               	movwf	fsr2h,c
 11945  002B24  0060  F0A7  FFDF   	movff	xtoa@x,indf2
 11946                           
 11947                           ; BSR set to: 0
 11948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 11949  002B2A  0642               	decf	xtoa@i^0,f,c
 11950  002B2C  A0D8               	btfss	status,0,c
 11951  002B2E  0643               	decf	(xtoa@i+1)^0,f,c
 11952                           
 11953                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 11954  002B30  0EBA               	movlw	low _dbuf
 11955  002B32  2442               	addwf	xtoa@i^0,w,c
 11956  002B34  6ED9               	movwf	fsr2l,c
 11957  002B36  0E02               	movlw	high _dbuf
 11958  002B38  2043               	addwfc	(xtoa@i+1)^0,w,c
 11959  002B3A  6EDA               	movwf	fsr2h,c
 11960  002B3C  0E30               	movlw	48
 11961  002B3E  6EDF               	movwf	indf2,c
 11962  002B40                     l14818:
 11963                           
 11964                           ; BSR set to: 0
 11965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 11966  002B40  0060  F07C  F014   	movff	xtoa@fp,pad@fp
 11967  002B46  0060  F080  F015   	movff	xtoa@fp+1,pad@fp+1
 11968  002B4C  0EBA               	movlw	low _dbuf
 11969  002B4E  2442               	addwf	xtoa@i^0,w,c
 11970  002B50  6E16               	movwf	pad@buf^0,c
 11971  002B52  0E02               	movlw	high _dbuf
 11972  002B54  2043               	addwfc	(xtoa@i+1)^0,w,c
 11973  002B56  6E17               	movwf	(pad@buf+1)^0,c
 11974  002B58  0060  F0E0  F018   	movff	xtoa@w,pad@p
 11975  002B5E  0060  F0E4  F019   	movff	xtoa@w+1,pad@p+1
 11976  002B64  EC4C  F037         	call	_pad	;wreg free
 11977  002B68  0060  F050  F01F   	movff	?_pad,?_xtoa
 11978  002B6E  0060  F054  F020   	movff	?_pad+1,?_xtoa+1
 11979  002B74  0012               	return		;funcret
 11980  002B76                     __end_of_xtoa:
 11981                           	opt callstack 0
 11982                           
 11983 ;; *************** function _toupper *****************
 11984 ;; Defined at:
 11985 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 11986 ;; Parameters:    Size  Location     Type
 11987 ;;  c               2    7[COMRAM] int 
 11988 ;; Auto vars:     Size  Location     Type
 11989 ;;		None
 11990 ;; Return value:  Size  Location     Type
 11991 ;;                  2    7[COMRAM] int 
 11992 ;; Registers used:
 11993 ;;		wreg, status,2, status,0
 11994 ;; Tracked objects:
 11995 ;;		On entry : 0/0
 11996 ;;		On exit  : 0/0
 11997 ;;		Unchanged: 0/0
 11998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12000 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12001 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12002 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12003 ;;Total ram usage:        8 bytes
 12004 ;; Hardware stack levels used:    1
 12005 ;; Hardware stack levels required when called:    8
 12006 ;; This function calls:
 12007 ;;		_islower
 12008 ;; This function is called by:
 12009 ;;		_xtoa
 12010 ;;		___strtoxl
 12011 ;; This function uses a non-reentrant model
 12012 ;;
 12013                           
 12014                           	psect	text60
 12015  00877E                     __ptext60:
 12016                           	opt callstack 0
 12017  00877E                     _toupper:
 12018                           	opt callstack 15
 12019                           
 12020                           ;incstack = 0
 12021  00877E  0E9F               	movlw	159
 12022  008780  6E0A               	movwf	??_toupper^0,c
 12023  008782  0EFF               	movlw	255
 12024  008784  6E0B               	movwf	(??_toupper+1)^0,c
 12025  008786  0060  F020  F00C   	movff	toupper@c,??_toupper+2
 12026  00878C  0060  F024  F00D   	movff	toupper@c+1,??_toupper+3
 12027  008792  500A               	movf	??_toupper^0,w,c
 12028  008794  260C               	addwf	(??_toupper+2)^0,f,c
 12029  008796  500B               	movf	(??_toupper+1)^0,w,c
 12030  008798  220D               	addwfc	(??_toupper+3)^0,f,c
 12031  00879A  500D               	movf	(??_toupper+3)^0,w,c
 12032  00879C  E106               	bnz	u13740
 12033  00879E  0E1A               	movlw	26
 12034  0087A0  5C0C               	subwf	(??_toupper+2)^0,w,c
 12035  0087A2  B0D8               	btfsc	status,0,c
 12036  0087A4  D002               	goto	u13740
 12037  0087A6  0E01               	movlw	1
 12038  0087A8  D001               	goto	u13750
 12039  0087AA                     u13740:
 12040  0087AA  0E00               	movlw	0
 12041  0087AC                     u13750:
 12042  0087AC  6E0E               	movwf	_toupper$7663^0,c
 12043  0087AE  6A0F               	clrf	(_toupper$7663+1)^0,c
 12044  0087B0  500E               	movf	_toupper$7663^0,w,c
 12045  0087B2  100F               	iorwf	(_toupper$7663+1)^0,w,c
 12046  0087B4  B4D8               	btfsc	status,2,c
 12047  0087B6  D005               	goto	l4147
 12048  0087B8  0E5F               	movlw	95
 12049  0087BA  1408               	andwf	toupper@c^0,w,c
 12050  0087BC  6E08               	movwf	?_toupper^0,c
 12051  0087BE  6A09               	clrf	(?_toupper+1)^0,c
 12052  0087C0  0012               	return	
 12053  0087C2                     l4147:
 12054  0087C2  0060  F020  F008   	movff	toupper@c,?_toupper
 12055  0087C8  0060  F024  F009   	movff	toupper@c+1,?_toupper+1
 12056  0087CE  0012               	return		;funcret
 12057  0087D0                     __end_of_toupper:
 12058                           	opt callstack 0
 12059                           
 12060 ;; *************** function _islower *****************
 12061 ;; Defined at:
 12062 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 12063 ;; Parameters:    Size  Location     Type
 12064 ;;  c               2    1[COMRAM] int 
 12065 ;; Auto vars:     Size  Location     Type
 12066 ;;		None
 12067 ;; Return value:  Size  Location     Type
 12068 ;;                  2    1[COMRAM] int 
 12069 ;; Registers used:
 12070 ;;		wreg, status,2, status,0
 12071 ;; Tracked objects:
 12072 ;;		On entry : 0/0
 12073 ;;		On exit  : 0/0
 12074 ;;		Unchanged: 0/0
 12075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12076 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12078 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12079 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12080 ;;Total ram usage:        6 bytes
 12081 ;; Hardware stack levels used:    1
 12082 ;; Hardware stack levels required when called:    7
 12083 ;; This function calls:
 12084 ;;		Nothing
 12085 ;; This function is called by:
 12086 ;;		_toupper
 12087 ;; This function uses a non-reentrant model
 12088 ;;
 12089                           
 12090                           	psect	text61
 12091  00915E                     __ptext61:
 12092                           	opt callstack 0
 12093  00915E                     _islower:
 12094                           	opt callstack 15
 12095                           
 12096                           ;incstack = 0
 12097  00915E  0E9F               	movlw	159
 12098  009160  6E04               	movwf	??_islower^0,c
 12099  009162  0EFF               	movlw	255
 12100  009164  6E05               	movwf	(??_islower+1)^0,c
 12101  009166  0060  F008  F006   	movff	islower@c,??_islower+2
 12102  00916C  0060  F00C  F007   	movff	islower@c+1,??_islower+3
 12103  009172  5004               	movf	??_islower^0,w,c
 12104  009174  2606               	addwf	(??_islower+2)^0,f,c
 12105  009176  5005               	movf	(??_islower+1)^0,w,c
 12106  009178  2207               	addwfc	(??_islower+3)^0,f,c
 12107  00917A  5007               	movf	(??_islower+3)^0,w,c
 12108  00917C  E106               	bnz	u13610
 12109  00917E  0E1A               	movlw	26
 12110  009180  5C06               	subwf	(??_islower+2)^0,w,c
 12111  009182  B0D8               	btfsc	status,0,c
 12112  009184  D002               	goto	u13610
 12113  009186  0E01               	movlw	1
 12114  009188  D001               	goto	u13620
 12115  00918A                     u13610:
 12116  00918A  0E00               	movlw	0
 12117  00918C                     u13620:
 12118  00918C  6E02               	movwf	?_islower^0,c
 12119  00918E  6A03               	clrf	(?_islower+1)^0,c
 12120  009190  0012               	return		;funcret
 12121  009192                     __end_of_islower:
 12122                           	opt callstack 0
 12123                           
 12124 ;; *************** function _isupper *****************
 12125 ;; Defined at:
 12126 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 12127 ;; Parameters:    Size  Location     Type
 12128 ;;  c               2    1[COMRAM] int 
 12129 ;; Auto vars:     Size  Location     Type
 12130 ;;		None
 12131 ;; Return value:  Size  Location     Type
 12132 ;;                  2    1[COMRAM] int 
 12133 ;; Registers used:
 12134 ;;		wreg, status,2, status,0
 12135 ;; Tracked objects:
 12136 ;;		On entry : 0/0
 12137 ;;		On exit  : 0/0
 12138 ;;		Unchanged: 0/0
 12139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12140 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12142 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12143 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12144 ;;Total ram usage:        6 bytes
 12145 ;; Hardware stack levels used:    1
 12146 ;; Hardware stack levels required when called:    7
 12147 ;; This function calls:
 12148 ;;		Nothing
 12149 ;; This function is called by:
 12150 ;;		_xtoa
 12151 ;; This function uses a non-reentrant model
 12152 ;;
 12153                           
 12154                           	psect	text62
 12155  009192                     __ptext62:
 12156                           	opt callstack 0
 12157  009192                     _isupper:
 12158                           	opt callstack 16
 12159                           
 12160                           ;incstack = 0
 12161  009192  0EBF               	movlw	191
 12162  009194  6E04               	movwf	??_isupper^0,c
 12163  009196  0EFF               	movlw	255
 12164  009198  6E05               	movwf	(??_isupper+1)^0,c
 12165  00919A  0060  F008  F006   	movff	isupper@c,??_isupper+2
 12166  0091A0  0060  F00C  F007   	movff	isupper@c+1,??_isupper+3
 12167  0091A6  5004               	movf	??_isupper^0,w,c
 12168  0091A8  2606               	addwf	(??_isupper+2)^0,f,c
 12169  0091AA  5005               	movf	(??_isupper+1)^0,w,c
 12170  0091AC  2207               	addwfc	(??_isupper+3)^0,f,c
 12171  0091AE  5007               	movf	(??_isupper+3)^0,w,c
 12172  0091B0  E106               	bnz	u13700
 12173  0091B2  0E1A               	movlw	26
 12174  0091B4  5C06               	subwf	(??_isupper+2)^0,w,c
 12175  0091B6  B0D8               	btfsc	status,0,c
 12176  0091B8  D002               	goto	u13700
 12177  0091BA  0E01               	movlw	1
 12178  0091BC  D001               	goto	u13710
 12179  0091BE                     u13700:
 12180  0091BE  0E00               	movlw	0
 12181  0091C0                     u13710:
 12182  0091C0  6E02               	movwf	?_isupper^0,c
 12183  0091C2  6A03               	clrf	(?_isupper+1)^0,c
 12184  0091C4  0012               	return		;funcret
 12185  0091C6                     __end_of_isupper:
 12186                           	opt callstack 0
 12187                           
 12188 ;; *************** function _isalpha *****************
 12189 ;; Defined at:
 12190 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 12191 ;; Parameters:    Size  Location     Type
 12192 ;;  c               2    1[COMRAM] int 
 12193 ;; Auto vars:     Size  Location     Type
 12194 ;;		None
 12195 ;; Return value:  Size  Location     Type
 12196 ;;                  2    1[COMRAM] int 
 12197 ;; Registers used:
 12198 ;;		wreg, status,2, status,0
 12199 ;; Tracked objects:
 12200 ;;		On entry : 0/0
 12201 ;;		On exit  : 0/0
 12202 ;;		Unchanged: 0/0
 12203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12206 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12207 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12208 ;;Total ram usage:        6 bytes
 12209 ;; Hardware stack levels used:    1
 12210 ;; Hardware stack levels required when called:    7
 12211 ;; This function calls:
 12212 ;;		Nothing
 12213 ;; This function is called by:
 12214 ;;		_xtoa
 12215 ;;		___strtoxl
 12216 ;; This function uses a non-reentrant model
 12217 ;;
 12218                           
 12219                           	psect	text63
 12220  0091C6                     __ptext63:
 12221                           	opt callstack 0
 12222  0091C6                     _isalpha:
 12223                           	opt callstack 16
 12224                           
 12225                           ;incstack = 0
 12226  0091C6  0E9F               	movlw	159
 12227  0091C8  6E04               	movwf	??_isalpha^0,c
 12228  0091CA  0EFF               	movlw	255
 12229  0091CC  6E05               	movwf	(??_isalpha+1)^0,c
 12230  0091CE  0E20               	movlw	32
 12231  0091D0  1002               	iorwf	isalpha@c^0,w,c
 12232  0091D2  6E06               	movwf	(??_isalpha+2)^0,c
 12233  0091D4  0E00               	movlw	0
 12234  0091D6  1003               	iorwf	(isalpha@c+1)^0,w,c
 12235  0091D8  6E07               	movwf	(??_isalpha+3)^0,c
 12236  0091DA  5004               	movf	??_isalpha^0,w,c
 12237  0091DC  2606               	addwf	(??_isalpha+2)^0,f,c
 12238  0091DE  5005               	movf	(??_isalpha+1)^0,w,c
 12239  0091E0  2207               	addwfc	(??_isalpha+3)^0,f,c
 12240  0091E2  5007               	movf	(??_isalpha+3)^0,w,c
 12241  0091E4  E106               	bnz	u13720
 12242  0091E6  0E1A               	movlw	26
 12243  0091E8  5C06               	subwf	(??_isalpha+2)^0,w,c
 12244  0091EA  B0D8               	btfsc	status,0,c
 12245  0091EC  D002               	goto	u13720
 12246  0091EE  0E01               	movlw	1
 12247  0091F0  D001               	goto	u13730
 12248  0091F2                     u13720:
 12249  0091F2  0E00               	movlw	0
 12250  0091F4                     u13730:
 12251  0091F4  6E02               	movwf	?_isalpha^0,c
 12252  0091F6  6A03               	clrf	(?_isalpha+1)^0,c
 12253  0091F8  0012               	return		;funcret
 12254  0091FA                     __end_of_isalpha:
 12255                           	opt callstack 0
 12256                           
 12257 ;; *************** function _utoa *****************
 12258 ;; Defined at:
 12259 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12260 ;; Parameters:    Size  Location     Type
 12261 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 12262 ;;		 -> NULL(0), 
 12263 ;;  d               8   32[COMRAM] unsigned long long 
 12264 ;; Auto vars:     Size  Location     Type
 12265 ;;  n               8   52[COMRAM] unsigned long long 
 12266 ;;  i               2   60[COMRAM] int 
 12267 ;;  w               2   50[COMRAM] int 
 12268 ;;  p               2   48[COMRAM] int 
 12269 ;; Return value:  Size  Location     Type
 12270 ;;                  2   30[COMRAM] int 
 12271 ;; Registers used:
 12272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12273 ;; Tracked objects:
 12274 ;;		On entry : 3F/0
 12275 ;;		On exit  : 0/0
 12276 ;;		Unchanged: 0/0
 12277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12278 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12279 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12280 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12281 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12282 ;;Total ram usage:       32 bytes
 12283 ;; Hardware stack levels used:    1
 12284 ;; Hardware stack levels required when called:   12
 12285 ;; This function calls:
 12286 ;;		___lodiv
 12287 ;;		___lomod
 12288 ;;		_pad
 12289 ;; This function is called by:
 12290 ;;		_vfpfcnvrt
 12291 ;; This function uses a non-reentrant model
 12292 ;;
 12293                           
 12294                           	psect	text64
 12295  00300A                     __ptext64:
 12296                           	opt callstack 0
 12297  00300A                     _utoa:
 12298                           	opt callstack 12
 12299                           
 12300                           ; BSR set to: 0
 12301                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 12302                           
 12303                           ;incstack = 0
 12304  00300A  AFB8               	btfss	(_prec+1)& (0+255),7,b
 12305                           
 12306                           ; BSR set to: 0
 12307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 12308  00300C  93B9               	bcf	_flags& (0+255),1,b
 12309                           
 12310                           ; BSR set to: 0
 12311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 12312  00300E  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 12313  003010  D005               	goto	u14190
 12314  003012  51B8               	movf	(_prec+1)& (0+255),w,b
 12315  003014  E108               	bnz	l3228
 12316  003016  05B7               	decf	_prec& (0+255),w,b
 12317  003018  B0D8               	btfsc	status,0,c
 12318  00301A  D005               	goto	l3228
 12319  00301C                     u14190:
 12320                           
 12321                           ; BSR set to: 0
 12322  00301C  0E00               	movlw	0
 12323  00301E  6E32               	movwf	(utoa@p+1)^0,c
 12324  003020  0E01               	movlw	1
 12325  003022  6E31               	movwf	utoa@p^0,c
 12326  003024  D006               	goto	l3230
 12327  003026                     l3228:
 12328                           
 12329                           ; BSR set to: 0
 12330  003026  0060  F2DC  F031   	movff	_prec,utoa@p
 12331  00302C  0060  F2E0  F032   	movff	_prec+1,utoa@p+1
 12332  003032                     l3230:
 12333                           
 12334                           ; BSR set to: 0
 12335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 12336  003032  0060  F2D4  F033   	movff	_width,utoa@w
 12337  003038  0060  F2D8  F034   	movff	_width+1,utoa@w+1
 12338                           
 12339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 12340  00303E  0060  F084  F035   	movff	utoa@d,utoa@n
 12341  003044  0060  F088  F036   	movff	utoa@d+1,utoa@n+1
 12342  00304A  0060  F08C  F037   	movff	utoa@d+2,utoa@n+2
 12343  003050  0060  F090  F038   	movff	utoa@d+3,utoa@n+3
 12344  003056  0060  F094  F039   	movff	utoa@d+4,utoa@n+4
 12345  00305C  0060  F098  F03A   	movff	utoa@d+5,utoa@n+5
 12346  003062  0060  F09C  F03B   	movff	utoa@d+6,utoa@n+6
 12347  003068  0060  F0A0  F03C   	movff	utoa@d+7,utoa@n+7
 12348                           
 12349                           ; BSR set to: 0
 12350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 12351  00306E  0E00               	movlw	0
 12352  003070  6E3E               	movwf	(utoa@i+1)^0,c
 12353  003072  0E1F               	movlw	31
 12354  003074  6E3D               	movwf	utoa@i^0,c
 12355                           
 12356                           ; BSR set to: 0
 12357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 12358  003076  0E00               	movlw	0
 12359  003078  0102               	movlb	2	; () banked
 12360  00307A  6FD9               	movwf	(_dbuf+31)& (0+255),b
 12361                           
 12362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12363  00307C  D096               	goto	l14742
 12364  00307E                     l14732:
 12365                           
 12366                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 12367  00307E  063D               	decf	utoa@i^0,f,c
 12368  003080  A0D8               	btfss	status,0,c
 12369  003082  063E               	decf	(utoa@i+1)^0,f,c
 12370                           
 12371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 12372  003084  0EBA               	movlw	low _dbuf
 12373  003086  243D               	addwf	utoa@i^0,w,c
 12374  003088  6ED9               	movwf	fsr2l,c
 12375  00308A  0E02               	movlw	high _dbuf
 12376  00308C  203E               	addwfc	(utoa@i+1)^0,w,c
 12377  00308E  6EDA               	movwf	fsr2h,c
 12378  003090  0060  F0D4  F002   	movff	utoa@n,___lomod@dividend
 12379  003096  0060  F0D8  F003   	movff	utoa@n+1,___lomod@dividend+1
 12380  00309C  0060  F0DC  F004   	movff	utoa@n+2,___lomod@dividend+2
 12381  0030A2  0060  F0E0  F005   	movff	utoa@n+3,___lomod@dividend+3
 12382  0030A8  0060  F0E4  F006   	movff	utoa@n+4,___lomod@dividend+4
 12383  0030AE  0060  F0E8  F007   	movff	utoa@n+5,___lomod@dividend+5
 12384  0030B4  0060  F0EC  F008   	movff	utoa@n+6,___lomod@dividend+6
 12385  0030BA  0060  F0F0  F009   	movff	utoa@n+7,___lomod@dividend+7
 12386  0030C0  0E0A               	movlw	10
 12387  0030C2  6E0A               	movwf	___lomod@divisor^0,c
 12388  0030C4  0E00               	movlw	0
 12389  0030C6  6E0B               	movwf	(___lomod@divisor+1)^0,c
 12390  0030C8  0E00               	movlw	0
 12391  0030CA  6E0C               	movwf	(___lomod@divisor+2)^0,c
 12392  0030CC  0E00               	movlw	0
 12393  0030CE  6E0D               	movwf	(___lomod@divisor+3)^0,c
 12394  0030D0  0E00               	movlw	0
 12395  0030D2  6E0E               	movwf	(___lomod@divisor+4)^0,c
 12396  0030D4  0E00               	movlw	0
 12397  0030D6  6E0F               	movwf	(___lomod@divisor+5)^0,c
 12398  0030D8  0E00               	movlw	0
 12399  0030DA  6E10               	movwf	(___lomod@divisor+6)^0,c
 12400  0030DC  0E00               	movlw	0
 12401  0030DE  6E11               	movwf	(___lomod@divisor+7)^0,c
 12402  0030E0  EC90  F036         	call	___lomod	;wreg free
 12403  0030E4  0060  F008  F029   	movff	?___lomod,??_utoa
 12404  0030EA  0060  F00C  F02A   	movff	?___lomod+1,??_utoa+1
 12405  0030F0  0060  F010  F02B   	movff	?___lomod+2,??_utoa+2
 12406  0030F6  0060  F014  F02C   	movff	?___lomod+3,??_utoa+3
 12407  0030FC  0060  F018  F02D   	movff	?___lomod+4,??_utoa+4
 12408  003102  0060  F01C  F02E   	movff	?___lomod+5,??_utoa+5
 12409  003108  0060  F020  F02F   	movff	?___lomod+6,??_utoa+6
 12410  00310E  0060  F024  F030   	movff	?___lomod+7,??_utoa+7
 12411  003114  5029               	movf	??_utoa^0,w,c
 12412  003116  0F30               	addlw	48
 12413  003118  6EDF               	movwf	indf2,c
 12414                           
 12415                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 12416  00311A  0631               	decf	utoa@p^0,f,c
 12417  00311C  A0D8               	btfss	status,0,c
 12418  00311E  0632               	decf	(utoa@p+1)^0,f,c
 12419                           
 12420                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 12421  003120  0633               	decf	utoa@w^0,f,c
 12422  003122  A0D8               	btfss	status,0,c
 12423  003124  0634               	decf	(utoa@w+1)^0,f,c
 12424                           
 12425                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 12426  003126  0060  F0D4  F002   	movff	utoa@n,___lodiv@dividend
 12427  00312C  0060  F0D8  F003   	movff	utoa@n+1,___lodiv@dividend+1
 12428  003132  0060  F0DC  F004   	movff	utoa@n+2,___lodiv@dividend+2
 12429  003138  0060  F0E0  F005   	movff	utoa@n+3,___lodiv@dividend+3
 12430  00313E  0060  F0E4  F006   	movff	utoa@n+4,___lodiv@dividend+4
 12431  003144  0060  F0E8  F007   	movff	utoa@n+5,___lodiv@dividend+5
 12432  00314A  0060  F0EC  F008   	movff	utoa@n+6,___lodiv@dividend+6
 12433  003150  0060  F0F0  F009   	movff	utoa@n+7,___lodiv@dividend+7
 12434  003156  0E0A               	movlw	10
 12435  003158  6E0A               	movwf	___lodiv@divisor^0,c
 12436  00315A  0E00               	movlw	0
 12437  00315C  6E0B               	movwf	(___lodiv@divisor+1)^0,c
 12438  00315E  0E00               	movlw	0
 12439  003160  6E0C               	movwf	(___lodiv@divisor+2)^0,c
 12440  003162  0E00               	movlw	0
 12441  003164  6E0D               	movwf	(___lodiv@divisor+3)^0,c
 12442  003166  0E00               	movlw	0
 12443  003168  6E0E               	movwf	(___lodiv@divisor+4)^0,c
 12444  00316A  0E00               	movlw	0
 12445  00316C  6E0F               	movwf	(___lodiv@divisor+5)^0,c
 12446  00316E  0E00               	movlw	0
 12447  003170  6E10               	movwf	(___lodiv@divisor+6)^0,c
 12448  003172  0E00               	movlw	0
 12449  003174  6E11               	movwf	(___lodiv@divisor+7)^0,c
 12450  003176  ECB6  F031         	call	___lodiv	;wreg free
 12451  00317A  0060  F008  F035   	movff	?___lodiv,utoa@n
 12452  003180  0060  F00C  F036   	movff	?___lodiv+1,utoa@n+1
 12453  003186  0060  F010  F037   	movff	?___lodiv+2,utoa@n+2
 12454  00318C  0060  F014  F038   	movff	?___lodiv+3,utoa@n+3
 12455  003192  0060  F018  F039   	movff	?___lodiv+4,utoa@n+4
 12456  003198  0060  F01C  F03A   	movff	?___lodiv+5,utoa@n+5
 12457  00319E  0060  F020  F03B   	movff	?___lodiv+6,utoa@n+6
 12458  0031A4  0060  F024  F03C   	movff	?___lodiv+7,utoa@n+7
 12459  0031AA                     l14742:
 12460                           
 12461                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12462  0031AA  503D               	movf	utoa@i^0,w,c
 12463  0031AC  103E               	iorwf	(utoa@i+1)^0,w,c
 12464  0031AE  B4D8               	btfsc	status,2,c
 12465  0031B0  D01B               	goto	u14240
 12466  0031B2  5035               	movf	utoa@n^0,w,c
 12467  0031B4  1036               	iorwf	(utoa@n+1)^0,w,c
 12468  0031B6  1037               	iorwf	(utoa@n+2)^0,w,c
 12469  0031B8  1038               	iorwf	(utoa@n+3)^0,w,c
 12470  0031BA  1039               	iorwf	(utoa@n+4)^0,w,c
 12471  0031BC  103A               	iorwf	(utoa@n+5)^0,w,c
 12472  0031BE  103B               	iorwf	(utoa@n+6)^0,w,c
 12473  0031C0  103C               	iorwf	(utoa@n+7)^0,w,c
 12474  0031C2  A4D8               	btfss	status,2,c
 12475  0031C4  D75C               	goto	l14732
 12476  0031C6  BE32               	btfsc	(utoa@p+1)^0,7,c
 12477  0031C8  D005               	goto	u14220
 12478  0031CA  5032               	movf	(utoa@p+1)^0,w,c
 12479  0031CC  E102               	bnz	u14221
 12480  0031CE  0431               	decf	utoa@p^0,w,c
 12481  0031D0  B0D8               	btfsc	status,0,c
 12482  0031D2                     u14221:
 12483  0031D2  D755               	goto	l14732
 12484  0031D4                     u14220:
 12485  0031D4  BE34               	btfsc	(utoa@w+1)^0,7,c
 12486  0031D6  D008               	goto	u14240
 12487  0031D8  5034               	movf	(utoa@w+1)^0,w,c
 12488  0031DA  E103               	bnz	u14230
 12489  0031DC  0433               	decf	utoa@w^0,w,c
 12490  0031DE  A0D8               	btfss	status,0,c
 12491  0031E0  D003               	goto	u14240
 12492  0031E2                     u14230:
 12493  0031E2  0100               	movlb	0	; () banked
 12494  0031E4  B3B9               	btfsc	_flags& (0+255),1,b
 12495  0031E6  D74B               	goto	l14732
 12496  0031E8                     u14240:
 12497                           
 12498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 12499  0031E8  0060  F07C  F014   	movff	utoa@fp,pad@fp
 12500  0031EE  0060  F080  F015   	movff	utoa@fp+1,pad@fp+1
 12501  0031F4  0EBA               	movlw	low _dbuf
 12502  0031F6  243D               	addwf	utoa@i^0,w,c
 12503  0031F8  6E16               	movwf	pad@buf^0,c
 12504  0031FA  0E02               	movlw	high _dbuf
 12505  0031FC  203E               	addwfc	(utoa@i+1)^0,w,c
 12506  0031FE  6E17               	movwf	(pad@buf+1)^0,c
 12507  003200  0060  F0CC  F018   	movff	utoa@w,pad@p
 12508  003206  0060  F0D0  F019   	movff	utoa@w+1,pad@p+1
 12509  00320C  EC4C  F037         	call	_pad	;wreg free
 12510  003210  0060  F050  F01F   	movff	?_pad,?_utoa
 12511  003216  0060  F054  F020   	movff	?_pad+1,?_utoa+1
 12512  00321C  0012               	return		;funcret
 12513  00321E                     __end_of_utoa:
 12514                           	opt callstack 0
 12515                           
 12516 ;; *************** function ___lomod *****************
 12517 ;; Defined at:
 12518 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 12519 ;; Parameters:    Size  Location     Type
 12520 ;;  dividend        8    1[COMRAM] unsigned long long 
 12521 ;;  divisor         8    9[COMRAM] unsigned long long 
 12522 ;; Auto vars:     Size  Location     Type
 12523 ;;  counter         1   17[COMRAM] unsigned char 
 12524 ;; Return value:  Size  Location     Type
 12525 ;;                  8    1[COMRAM] unsigned long long 
 12526 ;; Registers used:
 12527 ;;		wreg, status,2, status,0
 12528 ;; Tracked objects:
 12529 ;;		On entry : 0/2
 12530 ;;		On exit  : 0/0
 12531 ;;		Unchanged: 0/0
 12532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12533 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12536 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12537 ;;Total ram usage:       17 bytes
 12538 ;; Hardware stack levels used:    1
 12539 ;; Hardware stack levels required when called:    7
 12540 ;; This function calls:
 12541 ;;		Nothing
 12542 ;; This function is called by:
 12543 ;;		_utoa
 12544 ;; This function uses a non-reentrant model
 12545 ;;
 12546                           
 12547                           	psect	text65
 12548  006D20                     __ptext65:
 12549                           	opt callstack 0
 12550  006D20                     ___lomod:
 12551                           	opt callstack 16
 12552                           
 12553                           ;incstack = 0
 12554  006D20  500A               	movf	___lomod@divisor^0,w,c
 12555  006D22  100B               	iorwf	(___lomod@divisor+1)^0,w,c
 12556  006D24  100C               	iorwf	(___lomod@divisor+2)^0,w,c
 12557  006D26  100D               	iorwf	(___lomod@divisor+3)^0,w,c
 12558  006D28  100E               	iorwf	(___lomod@divisor+4)^0,w,c
 12559  006D2A  100F               	iorwf	(___lomod@divisor+5)^0,w,c
 12560  006D2C  1010               	iorwf	(___lomod@divisor+6)^0,w,c
 12561  006D2E  1011               	iorwf	(___lomod@divisor+7)^0,w,c
 12562  006D30  B4D8               	btfsc	status,2,c
 12563  006D32  D03C               	goto	l3759
 12564  006D34  0E01               	movlw	1
 12565  006D36  6E12               	movwf	___lomod@counter^0,c
 12566  006D38  D00A               	goto	l14612
 12567  006D3A                     l14610:
 12568  006D3A  90D8               	bcf	status,0,c
 12569  006D3C  360A               	rlcf	___lomod@divisor^0,f,c
 12570  006D3E  360B               	rlcf	(___lomod@divisor+1)^0,f,c
 12571  006D40  360C               	rlcf	(___lomod@divisor+2)^0,f,c
 12572  006D42  360D               	rlcf	(___lomod@divisor+3)^0,f,c
 12573  006D44  360E               	rlcf	(___lomod@divisor+4)^0,f,c
 12574  006D46  360F               	rlcf	(___lomod@divisor+5)^0,f,c
 12575  006D48  3610               	rlcf	(___lomod@divisor+6)^0,f,c
 12576  006D4A  3611               	rlcf	(___lomod@divisor+7)^0,f,c
 12577  006D4C  2A12               	incf	___lomod@counter^0,f,c
 12578  006D4E                     l14612:
 12579  006D4E  AE11               	btfss	(___lomod@divisor+7)^0,7,c
 12580  006D50  D7F4               	goto	l14610
 12581  006D52                     u13970:
 12582  006D52  500A               	movf	___lomod@divisor^0,w,c
 12583  006D54  5C02               	subwf	___lomod@dividend^0,w,c
 12584  006D56  500B               	movf	(___lomod@divisor+1)^0,w,c
 12585  006D58  5803               	subwfb	(___lomod@dividend+1)^0,w,c
 12586  006D5A  500C               	movf	(___lomod@divisor+2)^0,w,c
 12587  006D5C  5804               	subwfb	(___lomod@dividend+2)^0,w,c
 12588  006D5E  500D               	movf	(___lomod@divisor+3)^0,w,c
 12589  006D60  5805               	subwfb	(___lomod@dividend+3)^0,w,c
 12590  006D62  500E               	movf	(___lomod@divisor+4)^0,w,c
 12591  006D64  5806               	subwfb	(___lomod@dividend+4)^0,w,c
 12592  006D66  500F               	movf	(___lomod@divisor+5)^0,w,c
 12593  006D68  5807               	subwfb	(___lomod@dividend+5)^0,w,c
 12594  006D6A  5010               	movf	(___lomod@divisor+6)^0,w,c
 12595  006D6C  5808               	subwfb	(___lomod@dividend+6)^0,w,c
 12596  006D6E  5011               	movf	(___lomod@divisor+7)^0,w,c
 12597  006D70  5809               	subwfb	(___lomod@dividend+7)^0,w,c
 12598  006D72  A0D8               	btfss	status,0,c
 12599  006D74  D010               	goto	l14618
 12600  006D76  500A               	movf	___lomod@divisor^0,w,c
 12601  006D78  5E02               	subwf	___lomod@dividend^0,f,c
 12602  006D7A  500B               	movf	(___lomod@divisor+1)^0,w,c
 12603  006D7C  5A03               	subwfb	(___lomod@dividend+1)^0,f,c
 12604  006D7E  500C               	movf	(___lomod@divisor+2)^0,w,c
 12605  006D80  5A04               	subwfb	(___lomod@dividend+2)^0,f,c
 12606  006D82  500D               	movf	(___lomod@divisor+3)^0,w,c
 12607  006D84  5A05               	subwfb	(___lomod@dividend+3)^0,f,c
 12608  006D86  500E               	movf	(___lomod@divisor+4)^0,w,c
 12609  006D88  5A06               	subwfb	(___lomod@dividend+4)^0,f,c
 12610  006D8A  500F               	movf	(___lomod@divisor+5)^0,w,c
 12611  006D8C  5A07               	subwfb	(___lomod@dividend+5)^0,f,c
 12612  006D8E  5010               	movf	(___lomod@divisor+6)^0,w,c
 12613  006D90  5A08               	subwfb	(___lomod@dividend+6)^0,f,c
 12614  006D92  5011               	movf	(___lomod@divisor+7)^0,w,c
 12615  006D94  5A09               	subwfb	(___lomod@dividend+7)^0,f,c
 12616  006D96                     l14618:
 12617  006D96  90D8               	bcf	status,0,c
 12618  006D98  3211               	rrcf	(___lomod@divisor+7)^0,f,c
 12619  006D9A  3210               	rrcf	(___lomod@divisor+6)^0,f,c
 12620  006D9C  320F               	rrcf	(___lomod@divisor+5)^0,f,c
 12621  006D9E  320E               	rrcf	(___lomod@divisor+4)^0,f,c
 12622  006DA0  320D               	rrcf	(___lomod@divisor+3)^0,f,c
 12623  006DA2  320C               	rrcf	(___lomod@divisor+2)^0,f,c
 12624  006DA4  320B               	rrcf	(___lomod@divisor+1)^0,f,c
 12625  006DA6  320A               	rrcf	___lomod@divisor^0,f,c
 12626  006DA8  2E12               	decfsz	___lomod@counter^0,f,c
 12627  006DAA  D7D3               	goto	u13970
 12628  006DAC                     l3759:
 12629  006DAC  0060  F008  F002   	movff	___lomod@dividend,?___lomod
 12630  006DB2  0060  F00C  F003   	movff	___lomod@dividend+1,?___lomod+1
 12631  006DB8  0060  F010  F004   	movff	___lomod@dividend+2,?___lomod+2
 12632  006DBE  0060  F014  F005   	movff	___lomod@dividend+3,?___lomod+3
 12633  006DC4  0060  F018  F006   	movff	___lomod@dividend+4,?___lomod+4
 12634  006DCA  0060  F01C  F007   	movff	___lomod@dividend+5,?___lomod+5
 12635  006DD0  0060  F020  F008   	movff	___lomod@dividend+6,?___lomod+6
 12636  006DD6  0060  F024  F009   	movff	___lomod@dividend+7,?___lomod+7
 12637  006DDC  0012               	return		;funcret
 12638  006DDE                     __end_of___lomod:
 12639                           	opt callstack 0
 12640                           
 12641 ;; *************** function ___lodiv *****************
 12642 ;; Defined at:
 12643 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 12644 ;; Parameters:    Size  Location     Type
 12645 ;;  dividend        8    1[COMRAM] unsigned long long 
 12646 ;;  divisor         8    9[COMRAM] unsigned long long 
 12647 ;; Auto vars:     Size  Location     Type
 12648 ;;  quotient        8   17[COMRAM] unsigned long long 
 12649 ;;  counter         1   25[COMRAM] unsigned char 
 12650 ;; Return value:  Size  Location     Type
 12651 ;;                  8    1[COMRAM] unsigned long long 
 12652 ;; Registers used:
 12653 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12654 ;; Tracked objects:
 12655 ;;		On entry : 0/2
 12656 ;;		On exit  : 0/0
 12657 ;;		Unchanged: 0/0
 12658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12659 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12660 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12662 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12663 ;;Total ram usage:       25 bytes
 12664 ;; Hardware stack levels used:    1
 12665 ;; Hardware stack levels required when called:    7
 12666 ;; This function calls:
 12667 ;;		Nothing
 12668 ;; This function is called by:
 12669 ;;		_utoa
 12670 ;; This function uses a non-reentrant model
 12671 ;;
 12672                           
 12673                           	psect	text66
 12674  00636C                     __ptext66:
 12675                           	opt callstack 0
 12676  00636C                     ___lodiv:
 12677                           	opt callstack 16
 12678                           
 12679                           ;incstack = 0
 12680  00636C  EE20  F012         	lfsr	2,___lodiv@quotient
 12681  006370  0E07               	movlw	7
 12682  006372                     u13921:
 12683  006372  6ADE               	clrf	postinc2,c
 12684  006374  06E8               	decf	wreg,f,c
 12685  006376  E2FD               	bc	u13921
 12686  006378  500A               	movf	___lodiv@divisor^0,w,c
 12687  00637A  100B               	iorwf	(___lodiv@divisor+1)^0,w,c
 12688  00637C  100C               	iorwf	(___lodiv@divisor+2)^0,w,c
 12689  00637E  100D               	iorwf	(___lodiv@divisor+3)^0,w,c
 12690  006380  100E               	iorwf	(___lodiv@divisor+4)^0,w,c
 12691  006382  100F               	iorwf	(___lodiv@divisor+5)^0,w,c
 12692  006384  1010               	iorwf	(___lodiv@divisor+6)^0,w,c
 12693  006386  1011               	iorwf	(___lodiv@divisor+7)^0,w,c
 12694  006388  B4D8               	btfsc	status,2,c
 12695  00638A  D046               	goto	l3749
 12696  00638C  0E01               	movlw	1
 12697  00638E  6E1A               	movwf	___lodiv@counter^0,c
 12698  006390  D00A               	goto	l14592
 12699  006392                     l14590:
 12700  006392  90D8               	bcf	status,0,c
 12701  006394  360A               	rlcf	___lodiv@divisor^0,f,c
 12702  006396  360B               	rlcf	(___lodiv@divisor+1)^0,f,c
 12703  006398  360C               	rlcf	(___lodiv@divisor+2)^0,f,c
 12704  00639A  360D               	rlcf	(___lodiv@divisor+3)^0,f,c
 12705  00639C  360E               	rlcf	(___lodiv@divisor+4)^0,f,c
 12706  00639E  360F               	rlcf	(___lodiv@divisor+5)^0,f,c
 12707  0063A0  3610               	rlcf	(___lodiv@divisor+6)^0,f,c
 12708  0063A2  3611               	rlcf	(___lodiv@divisor+7)^0,f,c
 12709  0063A4  2A1A               	incf	___lodiv@counter^0,f,c
 12710  0063A6                     l14592:
 12711  0063A6  AE11               	btfss	(___lodiv@divisor+7)^0,7,c
 12712  0063A8  D7F4               	goto	l14590
 12713  0063AA                     u13940:
 12714  0063AA  90D8               	bcf	status,0,c
 12715  0063AC  3612               	rlcf	___lodiv@quotient^0,f,c
 12716  0063AE  3613               	rlcf	(___lodiv@quotient+1)^0,f,c
 12717  0063B0  3614               	rlcf	(___lodiv@quotient+2)^0,f,c
 12718  0063B2  3615               	rlcf	(___lodiv@quotient+3)^0,f,c
 12719  0063B4  3616               	rlcf	(___lodiv@quotient+4)^0,f,c
 12720  0063B6  3617               	rlcf	(___lodiv@quotient+5)^0,f,c
 12721  0063B8  3618               	rlcf	(___lodiv@quotient+6)^0,f,c
 12722  0063BA  3619               	rlcf	(___lodiv@quotient+7)^0,f,c
 12723  0063BC  500A               	movf	___lodiv@divisor^0,w,c
 12724  0063BE  5C02               	subwf	___lodiv@dividend^0,w,c
 12725  0063C0  500B               	movf	(___lodiv@divisor+1)^0,w,c
 12726  0063C2  5803               	subwfb	(___lodiv@dividend+1)^0,w,c
 12727  0063C4  500C               	movf	(___lodiv@divisor+2)^0,w,c
 12728  0063C6  5804               	subwfb	(___lodiv@dividend+2)^0,w,c
 12729  0063C8  500D               	movf	(___lodiv@divisor+3)^0,w,c
 12730  0063CA  5805               	subwfb	(___lodiv@dividend+3)^0,w,c
 12731  0063CC  500E               	movf	(___lodiv@divisor+4)^0,w,c
 12732  0063CE  5806               	subwfb	(___lodiv@dividend+4)^0,w,c
 12733  0063D0  500F               	movf	(___lodiv@divisor+5)^0,w,c
 12734  0063D2  5807               	subwfb	(___lodiv@dividend+5)^0,w,c
 12735  0063D4  5010               	movf	(___lodiv@divisor+6)^0,w,c
 12736  0063D6  5808               	subwfb	(___lodiv@dividend+6)^0,w,c
 12737  0063D8  5011               	movf	(___lodiv@divisor+7)^0,w,c
 12738  0063DA  5809               	subwfb	(___lodiv@dividend+7)^0,w,c
 12739  0063DC  A0D8               	btfss	status,0,c
 12740  0063DE  D011               	goto	l14602
 12741  0063E0  500A               	movf	___lodiv@divisor^0,w,c
 12742  0063E2  5E02               	subwf	___lodiv@dividend^0,f,c
 12743  0063E4  500B               	movf	(___lodiv@divisor+1)^0,w,c
 12744  0063E6  5A03               	subwfb	(___lodiv@dividend+1)^0,f,c
 12745  0063E8  500C               	movf	(___lodiv@divisor+2)^0,w,c
 12746  0063EA  5A04               	subwfb	(___lodiv@dividend+2)^0,f,c
 12747  0063EC  500D               	movf	(___lodiv@divisor+3)^0,w,c
 12748  0063EE  5A05               	subwfb	(___lodiv@dividend+3)^0,f,c
 12749  0063F0  500E               	movf	(___lodiv@divisor+4)^0,w,c
 12750  0063F2  5A06               	subwfb	(___lodiv@dividend+4)^0,f,c
 12751  0063F4  500F               	movf	(___lodiv@divisor+5)^0,w,c
 12752  0063F6  5A07               	subwfb	(___lodiv@dividend+5)^0,f,c
 12753  0063F8  5010               	movf	(___lodiv@divisor+6)^0,w,c
 12754  0063FA  5A08               	subwfb	(___lodiv@dividend+6)^0,f,c
 12755  0063FC  5011               	movf	(___lodiv@divisor+7)^0,w,c
 12756  0063FE  5A09               	subwfb	(___lodiv@dividend+7)^0,f,c
 12757  006400  8012               	bsf	___lodiv@quotient^0,0,c
 12758  006402                     l14602:
 12759  006402  90D8               	bcf	status,0,c
 12760  006404  3211               	rrcf	(___lodiv@divisor+7)^0,f,c
 12761  006406  3210               	rrcf	(___lodiv@divisor+6)^0,f,c
 12762  006408  320F               	rrcf	(___lodiv@divisor+5)^0,f,c
 12763  00640A  320E               	rrcf	(___lodiv@divisor+4)^0,f,c
 12764  00640C  320D               	rrcf	(___lodiv@divisor+3)^0,f,c
 12765  00640E  320C               	rrcf	(___lodiv@divisor+2)^0,f,c
 12766  006410  320B               	rrcf	(___lodiv@divisor+1)^0,f,c
 12767  006412  320A               	rrcf	___lodiv@divisor^0,f,c
 12768  006414  2E1A               	decfsz	___lodiv@counter^0,f,c
 12769  006416  D7C9               	goto	u13940
 12770  006418                     l3749:
 12771  006418  0060  F048  F002   	movff	___lodiv@quotient,?___lodiv
 12772  00641E  0060  F04C  F003   	movff	___lodiv@quotient+1,?___lodiv+1
 12773  006424  0060  F050  F004   	movff	___lodiv@quotient+2,?___lodiv+2
 12774  00642A  0060  F054  F005   	movff	___lodiv@quotient+3,?___lodiv+3
 12775  006430  0060  F058  F006   	movff	___lodiv@quotient+4,?___lodiv+4
 12776  006436  0060  F05C  F007   	movff	___lodiv@quotient+5,?___lodiv+5
 12777  00643C  0060  F060  F008   	movff	___lodiv@quotient+6,?___lodiv+6
 12778  006442  0060  F064  F009   	movff	___lodiv@quotient+7,?___lodiv+7
 12779  006448  0012               	return		;funcret
 12780  00644A                     __end_of___lodiv:
 12781                           	opt callstack 0
 12782                           
 12783 ;; *************** function _dtoa *****************
 12784 ;; Defined at:
 12785 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12786 ;; Parameters:    Size  Location     Type
 12787 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 12788 ;;		 -> NULL(0), 
 12789 ;;  d               8   32[COMRAM] long long 
 12790 ;; Auto vars:     Size  Location     Type
 12791 ;;  n               8   56[COMRAM] long long 
 12792 ;;  i               2   64[COMRAM] int 
 12793 ;;  s               2   54[COMRAM] int 
 12794 ;;  w               2   52[COMRAM] int 
 12795 ;;  p               2   50[COMRAM] int 
 12796 ;; Return value:  Size  Location     Type
 12797 ;;                  2   30[COMRAM] int 
 12798 ;; Registers used:
 12799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12800 ;; Tracked objects:
 12801 ;;		On entry : 3F/0
 12802 ;;		On exit  : 0/0
 12803 ;;		Unchanged: 0/0
 12804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12805 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12806 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12807 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12808 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12809 ;;Total ram usage:       36 bytes
 12810 ;; Hardware stack levels used:    1
 12811 ;; Hardware stack levels required when called:   12
 12812 ;; This function calls:
 12813 ;;		___aodiv
 12814 ;;		___aomod
 12815 ;;		_abs
 12816 ;;		_pad
 12817 ;; This function is called by:
 12818 ;;		_vfpfcnvrt
 12819 ;; This function uses a non-reentrant model
 12820 ;;
 12821                           
 12822                           	psect	text67
 12823  002646                     __ptext67:
 12824                           	opt callstack 0
 12825  002646                     _dtoa:
 12826                           	opt callstack 12
 12827                           
 12828                           ; BSR set to: 0
 12829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 12830                           
 12831                           ;incstack = 0
 12832  002646  0060  F084  F039   	movff	dtoa@d,dtoa@n
 12833  00264C  0060  F088  F03A   	movff	dtoa@d+1,dtoa@n+1
 12834  002652  0060  F08C  F03B   	movff	dtoa@d+2,dtoa@n+2
 12835  002658  0060  F090  F03C   	movff	dtoa@d+3,dtoa@n+3
 12836  00265E  0060  F094  F03D   	movff	dtoa@d+4,dtoa@n+4
 12837  002664  0060  F098  F03E   	movff	dtoa@d+5,dtoa@n+5
 12838  00266A  0060  F09C  F03F   	movff	dtoa@d+6,dtoa@n+6
 12839  002670  0060  F0A0  F040   	movff	dtoa@d+7,dtoa@n+7
 12840                           
 12841                           ; BSR set to: 0
 12842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 12843  002676  AE40               	btfss	(dtoa@n+7)^0,7,c
 12844  002678  D002               	goto	u14030
 12845  00267A  0E01               	movlw	1
 12846  00267C  D001               	goto	u14040
 12847  00267E                     u14030:
 12848  00267E  0E00               	movlw	0
 12849  002680                     u14040:
 12850  002680  6E37               	movwf	dtoa@s^0,c
 12851  002682  6A38               	clrf	(dtoa@s+1)^0,c
 12852                           
 12853                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 12854  002684  5037               	movf	dtoa@s^0,w,c
 12855  002686  1038               	iorwf	(dtoa@s+1)^0,w,c
 12856  002688  B4D8               	btfsc	status,2,c
 12857  00268A  D010               	goto	l14664
 12858                           
 12859                           ; BSR set to: 0
 12860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 12861  00268C  1E40               	comf	(dtoa@n+7)^0,f,c
 12862  00268E  1E3F               	comf	(dtoa@n+6)^0,f,c
 12863  002690  1E3E               	comf	(dtoa@n+5)^0,f,c
 12864  002692  1E3D               	comf	(dtoa@n+4)^0,f,c
 12865  002694  1E3C               	comf	(dtoa@n+3)^0,f,c
 12866  002696  1E3B               	comf	(dtoa@n+2)^0,f,c
 12867  002698  1E3A               	comf	(dtoa@n+1)^0,f,c
 12868  00269A  6C39               	negf	dtoa@n^0,c
 12869  00269C  0E00               	movlw	0
 12870  00269E  223A               	addwfc	(dtoa@n+1)^0,f,c
 12871  0026A0  223B               	addwfc	(dtoa@n+2)^0,f,c
 12872  0026A2  223C               	addwfc	(dtoa@n+3)^0,f,c
 12873  0026A4  223D               	addwfc	(dtoa@n+4)^0,f,c
 12874  0026A6  223E               	addwfc	(dtoa@n+5)^0,f,c
 12875  0026A8  223F               	addwfc	(dtoa@n+6)^0,f,c
 12876  0026AA  2240               	addwfc	(dtoa@n+7)^0,f,c
 12877  0026AC                     l14664:
 12878                           
 12879                           ; BSR set to: 0
 12880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 12881  0026AC  AFB8               	btfss	(_prec+1)& (0+255),7,b
 12882                           
 12883                           ; BSR set to: 0
 12884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 12885  0026AE  93B9               	bcf	_flags& (0+255),1,b
 12886                           
 12887                           ; BSR set to: 0
 12888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 12889  0026B0  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 12890  0026B2  D005               	goto	u14070
 12891  0026B4  51B8               	movf	(_prec+1)& (0+255),w,b
 12892  0026B6  E108               	bnz	l3203
 12893  0026B8  05B7               	decf	_prec& (0+255),w,b
 12894  0026BA  B0D8               	btfsc	status,0,c
 12895  0026BC  D005               	goto	l3203
 12896  0026BE                     u14070:
 12897                           
 12898                           ; BSR set to: 0
 12899  0026BE  0E00               	movlw	0
 12900  0026C0  6E34               	movwf	(dtoa@p+1)^0,c
 12901  0026C2  0E01               	movlw	1
 12902  0026C4  6E33               	movwf	dtoa@p^0,c
 12903  0026C6  D006               	goto	l3205
 12904  0026C8                     l3203:
 12905                           
 12906                           ; BSR set to: 0
 12907  0026C8  0060  F2DC  F033   	movff	_prec,dtoa@p
 12908  0026CE  0060  F2E0  F034   	movff	_prec+1,dtoa@p+1
 12909  0026D4                     l3205:
 12910                           
 12911                           ; BSR set to: 0
 12912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 12913  0026D4  0060  F2D4  F035   	movff	_width,dtoa@w
 12914  0026DA  0060  F2D8  F036   	movff	_width+1,dtoa@w+1
 12915                           
 12916                           ; BSR set to: 0
 12917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 12918  0026E0  5037               	movf	dtoa@s^0,w,c
 12919  0026E2  1038               	iorwf	(dtoa@s+1)^0,w,c
 12920  0026E4  A4D8               	btfss	status,2,c
 12921  0026E6  D002               	goto	u14090
 12922                           
 12923                           ; BSR set to: 0
 12924  0026E8  A5B9               	btfss	_flags& (0+255),2,b
 12925  0026EA  D003               	goto	l14678
 12926  0026EC                     u14090:
 12927                           
 12928                           ; BSR set to: 0
 12929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 12930  0026EC  0635               	decf	dtoa@w^0,f,c
 12931  0026EE  A0D8               	btfss	status,0,c
 12932  0026F0  0636               	decf	(dtoa@w+1)^0,f,c
 12933  0026F2                     l14678:
 12934                           
 12935                           ; BSR set to: 0
 12936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 12937  0026F2  0E00               	movlw	0
 12938  0026F4  6E42               	movwf	(dtoa@i+1)^0,c
 12939  0026F6  0E1F               	movlw	31
 12940  0026F8  6E41               	movwf	dtoa@i^0,c
 12941                           
 12942                           ; BSR set to: 0
 12943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 12944  0026FA  0E00               	movlw	0
 12945  0026FC  0102               	movlb	2	; () banked
 12946  0026FE  6FD9               	movwf	(_dbuf+31)& (0+255),b
 12947                           
 12948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12949  002700  D09E               	goto	l14692
 12950  002702                     l14682:
 12951                           
 12952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 12953  002702  0641               	decf	dtoa@i^0,f,c
 12954  002704  A0D8               	btfss	status,0,c
 12955  002706  0642               	decf	(dtoa@i+1)^0,f,c
 12956                           
 12957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 12958  002708  0EBA               	movlw	low _dbuf
 12959  00270A  2441               	addwf	dtoa@i^0,w,c
 12960  00270C  6ED9               	movwf	fsr2l,c
 12961  00270E  0E02               	movlw	high _dbuf
 12962  002710  2042               	addwfc	(dtoa@i+1)^0,w,c
 12963  002712  6EDA               	movwf	fsr2h,c
 12964  002714  0060  F0E4  F002   	movff	dtoa@n,___aomod@dividend
 12965  00271A  0060  F0E8  F003   	movff	dtoa@n+1,___aomod@dividend+1
 12966  002720  0060  F0EC  F004   	movff	dtoa@n+2,___aomod@dividend+2
 12967  002726  0060  F0F0  F005   	movff	dtoa@n+3,___aomod@dividend+3
 12968  00272C  0060  F0F4  F006   	movff	dtoa@n+4,___aomod@dividend+4
 12969  002732  0060  F0F8  F007   	movff	dtoa@n+5,___aomod@dividend+5
 12970  002738  0060  F0FC  F008   	movff	dtoa@n+6,___aomod@dividend+6
 12971  00273E  0060  F100  F009   	movff	dtoa@n+7,___aomod@dividend+7
 12972  002744  0E0A               	movlw	10
 12973  002746  6E0A               	movwf	___aomod@divisor^0,c
 12974  002748  0E00               	movlw	0
 12975  00274A  6E0B               	movwf	(___aomod@divisor+1)^0,c
 12976  00274C  0E00               	movlw	0
 12977  00274E  6E0C               	movwf	(___aomod@divisor+2)^0,c
 12978  002750  0E00               	movlw	0
 12979  002752  6E0D               	movwf	(___aomod@divisor+3)^0,c
 12980  002754  0E00               	movlw	0
 12981  002756  6E0E               	movwf	(___aomod@divisor+4)^0,c
 12982  002758  0E00               	movlw	0
 12983  00275A  6E0F               	movwf	(___aomod@divisor+5)^0,c
 12984  00275C  0E00               	movlw	0
 12985  00275E  6E10               	movwf	(___aomod@divisor+6)^0,c
 12986  002760  0E00               	movlw	0
 12987  002762  6E11               	movwf	(___aomod@divisor+7)^0,c
 12988  002764  EC08  F026         	call	___aomod	;wreg free
 12989  002768  0060  F008  F029   	movff	?___aomod,??_dtoa
 12990  00276E  0060  F00C  F02A   	movff	?___aomod+1,??_dtoa+1
 12991  002774  0060  F010  F02B   	movff	?___aomod+2,??_dtoa+2
 12992  00277A  0060  F014  F02C   	movff	?___aomod+3,??_dtoa+3
 12993  002780  0060  F018  F02D   	movff	?___aomod+4,??_dtoa+4
 12994  002786  0060  F01C  F02E   	movff	?___aomod+5,??_dtoa+5
 12995  00278C  0060  F020  F02F   	movff	?___aomod+6,??_dtoa+6
 12996  002792  0060  F024  F030   	movff	?___aomod+7,??_dtoa+7
 12997  002798  0060  F0A4  F014   	movff	??_dtoa,abs@a
 12998  00279E  0060  F0AC  F015   	movff	??_dtoa+2,abs@a+1
 12999  0027A4  ECA7  F046         	call	_abs	;wreg free
 13000  0027A8  5014               	movf	?_abs^0,w,c
 13001  0027AA  0F30               	addlw	48
 13002  0027AC  6EDF               	movwf	indf2,c
 13003                           
 13004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13005  0027AE  0633               	decf	dtoa@p^0,f,c
 13006  0027B0  A0D8               	btfss	status,0,c
 13007  0027B2  0634               	decf	(dtoa@p+1)^0,f,c
 13008                           
 13009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13010  0027B4  0635               	decf	dtoa@w^0,f,c
 13011  0027B6  A0D8               	btfss	status,0,c
 13012  0027B8  0636               	decf	(dtoa@w+1)^0,f,c
 13013                           
 13014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13015  0027BA  0060  F0E4  F002   	movff	dtoa@n,___aodiv@dividend
 13016  0027C0  0060  F0E8  F003   	movff	dtoa@n+1,___aodiv@dividend+1
 13017  0027C6  0060  F0EC  F004   	movff	dtoa@n+2,___aodiv@dividend+2
 13018  0027CC  0060  F0F0  F005   	movff	dtoa@n+3,___aodiv@dividend+3
 13019  0027D2  0060  F0F4  F006   	movff	dtoa@n+4,___aodiv@dividend+4
 13020  0027D8  0060  F0F8  F007   	movff	dtoa@n+5,___aodiv@dividend+5
 13021  0027DE  0060  F0FC  F008   	movff	dtoa@n+6,___aodiv@dividend+6
 13022  0027E4  0060  F100  F009   	movff	dtoa@n+7,___aodiv@dividend+7
 13023  0027EA  0E0A               	movlw	10
 13024  0027EC  6E0A               	movwf	___aodiv@divisor^0,c
 13025  0027EE  0E00               	movlw	0
 13026  0027F0  6E0B               	movwf	(___aodiv@divisor+1)^0,c
 13027  0027F2  0E00               	movlw	0
 13028  0027F4  6E0C               	movwf	(___aodiv@divisor+2)^0,c
 13029  0027F6  0E00               	movlw	0
 13030  0027F8  6E0D               	movwf	(___aodiv@divisor+3)^0,c
 13031  0027FA  0E00               	movlw	0
 13032  0027FC  6E0E               	movwf	(___aodiv@divisor+4)^0,c
 13033  0027FE  0E00               	movlw	0
 13034  002800  6E0F               	movwf	(___aodiv@divisor+5)^0,c
 13035  002802  0E00               	movlw	0
 13036  002804  6E10               	movwf	(___aodiv@divisor+6)^0,c
 13037  002806  0E00               	movlw	0
 13038  002808  6E11               	movwf	(___aodiv@divisor+7)^0,c
 13039  00280A  EC10  F024         	call	___aodiv	;wreg free
 13040  00280E  0060  F008  F039   	movff	?___aodiv,dtoa@n
 13041  002814  0060  F00C  F03A   	movff	?___aodiv+1,dtoa@n+1
 13042  00281A  0060  F010  F03B   	movff	?___aodiv+2,dtoa@n+2
 13043  002820  0060  F014  F03C   	movff	?___aodiv+3,dtoa@n+3
 13044  002826  0060  F018  F03D   	movff	?___aodiv+4,dtoa@n+4
 13045  00282C  0060  F01C  F03E   	movff	?___aodiv+5,dtoa@n+5
 13046  002832  0060  F020  F03F   	movff	?___aodiv+6,dtoa@n+6
 13047  002838  0060  F024  F040   	movff	?___aodiv+7,dtoa@n+7
 13048  00283E                     l14692:
 13049                           
 13050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13051  00283E  BE42               	btfsc	(dtoa@i+1)^0,7,c
 13052  002840  D020               	goto	u14140
 13053  002842  5042               	movf	(dtoa@i+1)^0,w,c
 13054  002844  E103               	bnz	u14100
 13055  002846  0441               	decf	dtoa@i^0,w,c
 13056  002848  A0D8               	btfss	status,0,c
 13057  00284A  D01B               	goto	u14140
 13058  00284C                     u14100:
 13059  00284C  5039               	movf	dtoa@n^0,w,c
 13060  00284E  103A               	iorwf	(dtoa@n+1)^0,w,c
 13061  002850  103B               	iorwf	(dtoa@n+2)^0,w,c
 13062  002852  103C               	iorwf	(dtoa@n+3)^0,w,c
 13063  002854  103D               	iorwf	(dtoa@n+4)^0,w,c
 13064  002856  103E               	iorwf	(dtoa@n+5)^0,w,c
 13065  002858  103F               	iorwf	(dtoa@n+6)^0,w,c
 13066  00285A  1040               	iorwf	(dtoa@n+7)^0,w,c
 13067  00285C  A4D8               	btfss	status,2,c
 13068  00285E  D751               	goto	l14682
 13069  002860  BE34               	btfsc	(dtoa@p+1)^0,7,c
 13070  002862  D005               	goto	u14120
 13071  002864  5034               	movf	(dtoa@p+1)^0,w,c
 13072  002866  E102               	bnz	u14121
 13073  002868  0433               	decf	dtoa@p^0,w,c
 13074  00286A  B0D8               	btfsc	status,0,c
 13075  00286C                     u14121:
 13076  00286C  D74A               	goto	l14682
 13077  00286E                     u14120:
 13078  00286E  BE36               	btfsc	(dtoa@w+1)^0,7,c
 13079  002870  D008               	goto	u14140
 13080  002872  5036               	movf	(dtoa@w+1)^0,w,c
 13081  002874  E103               	bnz	u14130
 13082  002876  0435               	decf	dtoa@w^0,w,c
 13083  002878  A0D8               	btfss	status,0,c
 13084  00287A  D003               	goto	u14140
 13085  00287C                     u14130:
 13086  00287C  0100               	movlb	0	; () banked
 13087  00287E  B3B9               	btfsc	_flags& (0+255),1,b
 13088  002880  D740               	goto	l14682
 13089  002882                     u14140:
 13090                           
 13091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13092  002882  5037               	movf	dtoa@s^0,w,c
 13093  002884  1038               	iorwf	(dtoa@s+1)^0,w,c
 13094  002886  A4D8               	btfss	status,2,c
 13095  002888  D003               	goto	u14160
 13096  00288A  0100               	movlb	0	; () banked
 13097  00288C  A5B9               	btfss	_flags& (0+255),2,b
 13098  00288E  D018               	goto	l14716
 13099  002890                     u14160:
 13100                           
 13101                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13102  002890  0641               	decf	dtoa@i^0,f,c
 13103  002892  A0D8               	btfss	status,0,c
 13104  002894  0642               	decf	(dtoa@i+1)^0,f,c
 13105                           
 13106                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13107  002896  5037               	movf	dtoa@s^0,w,c
 13108  002898  1038               	iorwf	(dtoa@s+1)^0,w,c
 13109  00289A  A4D8               	btfss	status,2,c
 13110  00289C  D004               	goto	l14712
 13111  00289E  0E00               	movlw	0
 13112  0028A0  6E32               	movwf	(_dtoa$7006+1)^0,c
 13113  0028A2  0E2B               	movlw	43
 13114  0028A4  D003               	goto	L5
 13115  0028A6                     l14712:
 13116  0028A6  0E00               	movlw	0
 13117  0028A8  6E32               	movwf	(_dtoa$7006+1)^0,c
 13118  0028AA  0E2D               	movlw	45
 13119  0028AC                     L5:
 13120  0028AC  6E31               	movwf	_dtoa$7006^0,c
 13121  0028AE  0EBA               	movlw	low _dbuf
 13122  0028B0  2441               	addwf	dtoa@i^0,w,c
 13123  0028B2  6ED9               	movwf	fsr2l,c
 13124  0028B4  0E02               	movlw	high _dbuf
 13125  0028B6  2042               	addwfc	(dtoa@i+1)^0,w,c
 13126  0028B8  6EDA               	movwf	fsr2h,c
 13127  0028BA  0060  F0C7  FFDF   	movff	_dtoa$7006,indf2
 13128  0028C0                     l14716:
 13129                           
 13130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13131  0028C0  0060  F07C  F014   	movff	dtoa@fp,pad@fp
 13132  0028C6  0060  F080  F015   	movff	dtoa@fp+1,pad@fp+1
 13133  0028CC  0EBA               	movlw	low _dbuf
 13134  0028CE  2441               	addwf	dtoa@i^0,w,c
 13135  0028D0  6E16               	movwf	pad@buf^0,c
 13136  0028D2  0E02               	movlw	high _dbuf
 13137  0028D4  2042               	addwfc	(dtoa@i+1)^0,w,c
 13138  0028D6  6E17               	movwf	(pad@buf+1)^0,c
 13139  0028D8  0060  F0D4  F018   	movff	dtoa@w,pad@p
 13140  0028DE  0060  F0D8  F019   	movff	dtoa@w+1,pad@p+1
 13141  0028E4  EC4C  F037         	call	_pad	;wreg free
 13142  0028E8  0060  F050  F01F   	movff	?_pad,?_dtoa
 13143  0028EE  0060  F054  F020   	movff	?_pad+1,?_dtoa+1
 13144  0028F4  0012               	return		;funcret
 13145  0028F6                     __end_of_dtoa:
 13146                           	opt callstack 0
 13147                           
 13148 ;; *************** function _pad *****************
 13149 ;; Defined at:
 13150 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13151 ;; Parameters:    Size  Location     Type
 13152 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 13153 ;;		 -> NULL(0), 
 13154 ;;  buf             2   21[COMRAM] PTR unsigned char 
 13155 ;;		 -> dbuf(32), 
 13156 ;;  p               2   23[COMRAM] int 
 13157 ;; Auto vars:     Size  Location     Type
 13158 ;;  w               2   28[COMRAM] int 
 13159 ;;  i               2   26[COMRAM] int 
 13160 ;; Return value:  Size  Location     Type
 13161 ;;                  2   19[COMRAM] int 
 13162 ;; Registers used:
 13163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13164 ;; Tracked objects:
 13165 ;;		On entry : 0/0
 13166 ;;		On exit  : 0/0
 13167 ;;		Unchanged: 0/0
 13168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13169 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13170 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13171 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13172 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13173 ;;Total ram usage:       11 bytes
 13174 ;; Hardware stack levels used:    1
 13175 ;; Hardware stack levels required when called:   11
 13176 ;; This function calls:
 13177 ;;		_fputc
 13178 ;;		_fputs
 13179 ;;		_strlen
 13180 ;; This function is called by:
 13181 ;;		_dtoa
 13182 ;;		_utoa
 13183 ;;		_xtoa
 13184 ;; This function uses a non-reentrant model
 13185 ;;
 13186                           
 13187                           	psect	text68
 13188  006E98                     __ptext68:
 13189                           	opt callstack 0
 13190  006E98                     _pad:
 13191                           	opt callstack 12
 13192                           
 13193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 13194                           
 13195                           ;incstack = 0
 13196  006E98  0100               	movlb	0	; () banked
 13197  006E9A  A1B9               	btfss	_flags& (0+255),0,b
 13198  006E9C  D00E               	goto	l14454
 13199                           
 13200                           ; BSR set to: 0
 13201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 13202  006E9E  0060  F058  F00D   	movff	pad@buf,fputs@s
 13203  006EA4  0060  F05C  F00E   	movff	pad@buf+1,fputs@s+1
 13204  006EAA  0060  F050  F00F   	movff	pad@fp,fputs@fp
 13205  006EB0  0060  F054  F010   	movff	pad@fp+1,fputs@fp+1
 13206  006EB6  EC88  F046         	call	_fputs	;wreg free
 13207  006EBA                     l14454:
 13208                           
 13209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 13210  006EBA  BE19               	btfsc	(pad@p+1)^0,7,c
 13211  006EBC  D007               	goto	l14458
 13212  006EBE  0060  F060  F01D   	movff	pad@p,pad@w
 13213  006EC4  0060  F064  F01E   	movff	pad@p+1,pad@w+1
 13214  006ECA  D004               	goto	l3192
 13215  006ECC                     l14458:
 13216  006ECC  0E00               	movlw	0
 13217  006ECE  6E1E               	movwf	(pad@w+1)^0,c
 13218  006ED0  0E00               	movlw	0
 13219  006ED2  6E1D               	movwf	pad@w^0,c
 13220  006ED4                     l3192:
 13221                           
 13222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 13223  006ED4  0E00               	movlw	0
 13224  006ED6  6E1C               	movwf	(pad@i+1)^0,c
 13225  006ED8  0E00               	movlw	0
 13226  006EDA  6E1B               	movwf	pad@i^0,c
 13227                           
 13228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13229  006EDC  D00E               	goto	l14464
 13230  006EDE                     l14460:
 13231                           
 13232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 13233  006EDE  0E00               	movlw	0
 13234  006EE0  6E05               	movwf	(fputc@c+1)^0,c
 13235  006EE2  0E20               	movlw	32
 13236  006EE4  6E04               	movwf	fputc@c^0,c
 13237  006EE6  0060  F050  F006   	movff	pad@fp,fputc@fp
 13238  006EEC  0060  F054  F007   	movff	pad@fp+1,fputc@fp+1
 13239  006EF2  EC3B  F040         	call	_fputc	;wreg free
 13240                           
 13241                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 13242  006EF6  4A1B               	infsnz	pad@i^0,f,c
 13243  006EF8  2A1C               	incf	(pad@i+1)^0,f,c
 13244  006EFA                     l14464:
 13245                           
 13246                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13247  006EFA  501D               	movf	pad@w^0,w,c
 13248  006EFC  5C1B               	subwf	pad@i^0,w,c
 13249  006EFE  501C               	movf	(pad@i+1)^0,w,c
 13250  006F00  0A80               	xorlw	128
 13251  006F02  6E1A               	movwf	??_pad^0,c
 13252  006F04  501E               	movf	(pad@w+1)^0,w,c
 13253  006F06  0A80               	xorlw	128
 13254  006F08  581A               	subwfb	??_pad^0,w,c
 13255  006F0A  A0D8               	btfss	status,0,c
 13256  006F0C  D7E8               	goto	l14460
 13257                           
 13258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 13259  006F0E  0100               	movlb	0	; () banked
 13260  006F10  B1B9               	btfsc	_flags& (0+255),0,b
 13261  006F12  D00E               	goto	l14468
 13262                           
 13263                           ; BSR set to: 0
 13264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 13265  006F14  0060  F058  F00D   	movff	pad@buf,fputs@s
 13266  006F1A  0060  F05C  F00E   	movff	pad@buf+1,fputs@s+1
 13267  006F20  0060  F050  F00F   	movff	pad@fp,fputs@fp
 13268  006F26  0060  F054  F010   	movff	pad@fp+1,fputs@fp+1
 13269  006F2C  EC88  F046         	call	_fputs	;wreg free
 13270  006F30                     l14468:
 13271                           
 13272                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 13273  006F30  0060  F058  F002   	movff	pad@buf,strlen@s
 13274  006F36  0060  F05C  F003   	movff	pad@buf+1,strlen@s+1
 13275  006F3C  ECE8  F043         	call	_strlen	;wreg free
 13276  006F40  501D               	movf	pad@w^0,w,c
 13277  006F42  2402               	addwf	?_strlen^0,w,c
 13278  006F44  6E14               	movwf	?_pad^0,c
 13279  006F46  501E               	movf	(pad@w+1)^0,w,c
 13280  006F48  2003               	addwfc	(?_strlen+1)^0,w,c
 13281  006F4A  6E15               	movwf	(?_pad+1)^0,c
 13282  006F4C  0012               	return		;funcret
 13283  006F4E                     __end_of_pad:
 13284                           	opt callstack 0
 13285                           
 13286 ;; *************** function _strlen *****************
 13287 ;; Defined at:
 13288 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 13289 ;; Parameters:    Size  Location     Type
 13290 ;;  s               2    1[COMRAM] PTR const unsigned char 
 13291 ;;		 -> dbuf(32), STR_133(10), STR_131(10), STR_129(6), 
 13292 ;;		 -> STR_127(6), STR_125(7), STR_123(5), STR_121(7), 
 13293 ;;		 -> STR_119(7), STR_117(6), STR_115(9), STR_113(8), 
 13294 ;;		 -> STR_111(8), STR_109(7), STR_107(6), STR_105(3), 
 13295 ;;		 -> STR_103(9), STR_101(7), STR_99(7), STR_97(10), 
 13296 ;;		 -> STR_95(10), STR_93(15), STR_91(13), STR_89(9), 
 13297 ;;		 -> STR_87(7), STR_85(7), STR_83(10), STR_81(7), 
 13298 ;;		 -> STR_79(8), STR_77(11), STR_75(5), STR_73(5), 
 13299 ;;		 -> STR_71(7), STR_69(9), STR_67(7), STR_60(2), 
 13300 ;;		 -> STR_58(2), STR_57(2), STR_54(6), STR_52(6), 
 13301 ;;		 -> STR_50(5), STR_46(2), STR_41(2), STR_37(2), 
 13302 ;;		 -> STR_28(2), STR_25(2), STR_15(2), STR_11(2), 
 13303 ;;		 -> atCommand(80), NULL(0), STR_6(2), STR_2(2), 
 13304 ;;		 -> STR_1(2), 
 13305 ;; Auto vars:     Size  Location     Type
 13306 ;;  a               2    3[COMRAM] PTR const unsigned char 
 13307 ;;		 -> dbuf(32), STR_133(10), STR_131(10), STR_129(6), 
 13308 ;;		 -> STR_127(6), STR_125(7), STR_123(5), STR_121(7), 
 13309 ;;		 -> STR_119(7), STR_117(6), STR_115(9), STR_113(8), 
 13310 ;;		 -> STR_111(8), STR_109(7), STR_107(6), STR_105(3), 
 13311 ;;		 -> STR_103(9), STR_101(7), STR_99(7), STR_97(10), 
 13312 ;;		 -> STR_95(10), STR_93(15), STR_91(13), STR_89(9), 
 13313 ;;		 -> STR_87(7), STR_85(7), STR_83(10), STR_81(7), 
 13314 ;;		 -> STR_79(8), STR_77(11), STR_75(5), STR_73(5), 
 13315 ;;		 -> STR_71(7), STR_69(9), STR_67(7), STR_60(2), 
 13316 ;;		 -> STR_58(2), STR_57(2), STR_54(6), STR_52(6), 
 13317 ;;		 -> STR_50(5), STR_46(2), STR_41(2), STR_37(2), 
 13318 ;;		 -> STR_28(2), STR_25(2), STR_15(2), STR_11(2), 
 13319 ;;		 -> atCommand(80), NULL(0), STR_6(2), STR_2(2), 
 13320 ;;		 -> STR_1(2), 
 13321 ;; Return value:  Size  Location     Type
 13322 ;;                  2    1[COMRAM] unsigned int 
 13323 ;; Registers used:
 13324 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 13325 ;; Tracked objects:
 13326 ;;		On entry : 0/0
 13327 ;;		On exit  : 0/0
 13328 ;;		Unchanged: 0/0
 13329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13330 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13331 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13333 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13334 ;;Total ram usage:        4 bytes
 13335 ;; Hardware stack levels used:    1
 13336 ;; Hardware stack levels required when called:    7
 13337 ;; This function calls:
 13338 ;;		Nothing
 13339 ;; This function is called by:
 13340 ;;		_cmdSend
 13341 ;;		_cmdBcast
 13342 ;;		_cmdSetAES
 13343 ;;		_pad
 13344 ;;		_strstr
 13345 ;; This function uses a non-reentrant model
 13346 ;;
 13347                           
 13348                           	psect	text69
 13349  0087D0                     __ptext69:
 13350                           	opt callstack 0
 13351  0087D0                     _strlen:
 13352                           	opt callstack 20
 13353                           
 13354                           ;incstack = 0
 13355  0087D0  0060  F008  F004   	movff	strlen@s,strlen@a
 13356  0087D6  0060  F00C  F005   	movff	strlen@s+1,strlen@a+1
 13357  0087DC  D002               	goto	l14412
 13358  0087DE                     l14410:
 13359  0087DE  4A02               	infsnz	strlen@s^0,f,c
 13360  0087E0  2A03               	incf	(strlen@s+1)^0,f,c
 13361  0087E2                     l14412:
 13362  0087E2  0060  F00B  FFF6   	movff	strlen@s,tblptrl
 13363  0087E8  0060  F00F  FFF7   	movff	strlen@s+1,tblptrh
 13364  0087EE  0E00               	movlw	low (__mediumconst shr (0+16))
 13365  0087F0  6EF8               	movwf	tblptru,c
 13366  0087F2  0E0F               	movlw	(high __ramtop+-1)
 13367  0087F4  64F7               	cpfsgt	tblptrh,c
 13368  0087F6  D003               	bra	u13577
 13369  0087F8  0008               	tblrd		*
 13370  0087FA  50F5               	movf	tablat,w,c
 13371  0087FC  D007               	bra	u13570
 13372  0087FE                     u13577:
 13373  0087FE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13374  008804  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13375  00880A  50EF               	movf	indf0,w,c
 13376  00880C                     u13570:
 13377  00880C  0900               	iorlw	0
 13378  00880E  A4D8               	btfss	status,2,c
 13379  008810  D7E6               	goto	l14410
 13380  008812  5004               	movf	strlen@a^0,w,c
 13381  008814  5C02               	subwf	strlen@s^0,w,c
 13382  008816  6E02               	movwf	?_strlen^0,c
 13383  008818  5005               	movf	(strlen@a+1)^0,w,c
 13384  00881A  5803               	subwfb	(strlen@s+1)^0,w,c
 13385  00881C  6E03               	movwf	(?_strlen+1)^0,c
 13386  00881E  0012               	return		;funcret
 13387  008820                     __end_of_strlen:
 13388                           	opt callstack 0
 13389                           
 13390 ;; *************** function _fputs *****************
 13391 ;; Defined at:
 13392 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 13393 ;; Parameters:    Size  Location     Type
 13394 ;;  s               2   12[COMRAM] PTR const unsigned char 
 13395 ;;		 -> dbuf(32), 
 13396 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 13397 ;;		 -> NULL(0), 
 13398 ;; Auto vars:     Size  Location     Type
 13399 ;;  i               2   17[COMRAM] int 
 13400 ;;  c               1   16[COMRAM] unsigned char 
 13401 ;; Return value:  Size  Location     Type
 13402 ;;                  2   12[COMRAM] int 
 13403 ;; Registers used:
 13404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13405 ;; Tracked objects:
 13406 ;;		On entry : 3F/0
 13407 ;;		On exit  : 0/0
 13408 ;;		Unchanged: 0/0
 13409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13411 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13413 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13414 ;;Total ram usage:        7 bytes
 13415 ;; Hardware stack levels used:    1
 13416 ;; Hardware stack levels required when called:   10
 13417 ;; This function calls:
 13418 ;;		_fputc
 13419 ;; This function is called by:
 13420 ;;		_pad
 13421 ;; This function uses a non-reentrant model
 13422 ;;
 13423                           
 13424                           	psect	text70
 13425  008D10                     __ptext70:
 13426                           	opt callstack 0
 13427  008D10                     _fputs:
 13428                           	opt callstack 12
 13429                           
 13430                           ; BSR set to: 0
 13431                           
 13432                           ;incstack = 0
 13433  008D10  0E00               	movlw	0
 13434  008D12  6E13               	movwf	(fputs@i+1)^0,c
 13435  008D14  0E00               	movlw	0
 13436  008D16  6E12               	movwf	fputs@i^0,c
 13437  008D18  D00E               	goto	l14428
 13438  008D1A                     l14424:
 13439  008D1A  0060  F044  F004   	movff	fputs@c,fputc@c
 13440  008D20  6A05               	clrf	(fputc@c+1)^0,c
 13441  008D22  0060  F03C  F006   	movff	fputs@fp,fputc@fp
 13442  008D28  0060  F040  F007   	movff	fputs@fp+1,fputc@fp+1
 13443  008D2E  EC3B  F040         	call	_fputc	;wreg free
 13444  008D32  4A12               	infsnz	fputs@i^0,f,c
 13445  008D34  2A13               	incf	(fputs@i+1)^0,f,c
 13446  008D36                     l14428:
 13447  008D36  5012               	movf	fputs@i^0,w,c
 13448  008D38  240D               	addwf	fputs@s^0,w,c
 13449  008D3A  6ED9               	movwf	fsr2l,c
 13450  008D3C  5013               	movf	(fputs@i+1)^0,w,c
 13451  008D3E  200E               	addwfc	(fputs@s+1)^0,w,c
 13452  008D40  6EDA               	movwf	fsr2h,c
 13453  008D42  50DF               	movf	indf2,w,c
 13454  008D44  6E11               	movwf	fputs@c^0,c
 13455  008D46  5011               	movf	fputs@c^0,w,c
 13456  008D48  B4D8               	btfsc	status,2,c
 13457  008D4A  0012               	return	
 13458  008D4C  D7E6               	goto	l14424
 13459  008D4E                     __end_of_fputs:
 13460                           	opt callstack 0
 13461                           
 13462 ;; *************** function _fputc *****************
 13463 ;; Defined at:
 13464 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 13465 ;; Parameters:    Size  Location     Type
 13466 ;;  c               2    3[COMRAM] int 
 13467 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 13468 ;;		 -> NULL(0), 
 13469 ;; Auto vars:     Size  Location     Type
 13470 ;;		None
 13471 ;; Return value:  Size  Location     Type
 13472 ;;                  2    3[COMRAM] int 
 13473 ;; Registers used:
 13474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13475 ;; Tracked objects:
 13476 ;;		On entry : 0/0
 13477 ;;		On exit  : 0/0
 13478 ;;		Unchanged: 0/0
 13479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13480 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13482 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13483 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13484 ;;Total ram usage:        9 bytes
 13485 ;; Hardware stack levels used:    1
 13486 ;; Hardware stack levels required when called:    9
 13487 ;; This function calls:
 13488 ;;		_putch
 13489 ;; This function is called by:
 13490 ;;		_pad
 13491 ;;		_vfpfcnvrt
 13492 ;;		_fputs
 13493 ;; This function uses a non-reentrant model
 13494 ;;
 13495                           
 13496                           	psect	text71
 13497  008076                     __ptext71:
 13498                           	opt callstack 0
 13499  008076                     _fputc:
 13500                           	opt callstack 12
 13501                           
 13502                           ;incstack = 0
 13503  008076  5006               	movf	fputc@fp^0,w,c
 13504  008078  1007               	iorwf	(fputc@fp+1)^0,w,c
 13505  00807A  B4D8               	btfsc	status,2,c
 13506  00807C  D004               	goto	u13540
 13507  00807E  5006               	movf	fputc@fp^0,w,c
 13508  008080  1007               	iorwf	(fputc@fp+1)^0,w,c
 13509  008082  A4D8               	btfss	status,2,c
 13510  008084  D004               	goto	l14400
 13511  008086                     u13540:
 13512  008086  5004               	movf	fputc@c^0,w,c
 13513  008088  ECF4  F04C         	call	_putch
 13514  00808C  0012               	return	
 13515  00808E                     l14400:
 13516  00808E  EE20 F004          	lfsr	2,4
 13517  008092  5006               	movf	fputc@fp^0,w,c
 13518  008094  26D9               	addwf	fsr2l,f,c
 13519  008096  5007               	movf	(fputc@fp+1)^0,w,c
 13520  008098  22DA               	addwfc	fsr2h,f,c
 13521  00809A  50DE               	movf	postinc2,w,c
 13522  00809C  10DE               	iorwf	postinc2,w,c
 13523  00809E  B4D8               	btfsc	status,2,c
 13524  0080A0  D016               	goto	u13560
 13525  0080A2  EE20 F004          	lfsr	2,4
 13526  0080A6  5006               	movf	fputc@fp^0,w,c
 13527  0080A8  26D9               	addwf	fsr2l,f,c
 13528  0080AA  5007               	movf	(fputc@fp+1)^0,w,c
 13529  0080AC  22DA               	addwfc	fsr2h,f,c
 13530  0080AE  EE10 F002          	lfsr	1,2
 13531  0080B2  5006               	movf	fputc@fp^0,w,c
 13532  0080B4  26E1               	addwf	fsr1l,f,c
 13533  0080B6  5007               	movf	(fputc@fp+1)^0,w,c
 13534  0080B8  22E2               	addwfc	fsr1h,f,c
 13535  0080BA  50DE               	movf	postinc2,w,c
 13536  0080BC  5CE6               	subwf	postinc1,w,c
 13537  0080BE  50E6               	movf	postinc1,w,c
 13538  0080C0  0A80               	xorlw	128
 13539  0080C2  6E0C               	movwf	(??_fputc+4)^0,c
 13540  0080C4  50DE               	movf	postinc2,w,c
 13541  0080C6  0A80               	xorlw	128
 13542  0080C8  580C               	subwfb	(??_fputc+4)^0,w,c
 13543  0080CA  B0D8               	btfsc	status,0,c
 13544  0080CC  0012               	return	
 13545  0080CE                     u13560:
 13546  0080CE  EE20 F002          	lfsr	2,2
 13547  0080D2  5006               	movf	fputc@fp^0,w,c
 13548  0080D4  26D9               	addwf	fsr2l,f,c
 13549  0080D6  5007               	movf	(fputc@fp+1)^0,w,c
 13550  0080D8  22DA               	addwfc	fsr2h,f,c
 13551  0080DA  2ADE               	incf	postinc2,f,c
 13552  0080DC  0E00               	movlw	0
 13553  0080DE  22DD               	addwfc	postdec2,f,c
 13554  0080E0  0012               	return		;funcret
 13555  0080E2                     __end_of_fputc:
 13556                           	opt callstack 0
 13557                           
 13558 ;; *************** function _putch *****************
 13559 ;; Defined at:
 13560 ;;		line 242 in file "mcc_generated_files/uart1.c"
 13561 ;; Parameters:    Size  Location     Type
 13562 ;;  txData          1    wreg     unsigned char 
 13563 ;; Auto vars:     Size  Location     Type
 13564 ;;  txData          1    2[COMRAM] unsigned char 
 13565 ;; Return value:  Size  Location     Type
 13566 ;;                  1    wreg      void 
 13567 ;; Registers used:
 13568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13569 ;; Tracked objects:
 13570 ;;		On entry : 0/0
 13571 ;;		On exit  : 3F/39
 13572 ;;		Unchanged: 0/0
 13573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13575 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13577 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13578 ;;Total ram usage:        1 bytes
 13579 ;; Hardware stack levels used:    1
 13580 ;; Hardware stack levels required when called:    8
 13581 ;; This function calls:
 13582 ;;		_UART1_Write
 13583 ;; This function is called by:
 13584 ;;		_cmdRecv
 13585 ;;		_fputc
 13586 ;; This function uses a non-reentrant model
 13587 ;;
 13588                           
 13589                           	psect	text72
 13590  0099E8                     __ptext72:
 13591                           	opt callstack 0
 13592  0099E8                     _putch:
 13593                           	opt callstack 12
 13594                           
 13595                           ;incstack = 0
 13596                           ;putch@txData stored from wreg
 13597  0099E8  6E03               	movwf	putch@txData^0,c
 13598                           
 13599                           ;mcc_generated_files/uart1.c: 242: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          243: {;mcc_generated_files/uart1.c: 244:     UART1_Write(txData);
 13600  0099EA  5003               	movf	putch@txData^0,w,c
 13601  0099EC  ECC6  F045         	call	_UART1_Write
 13602                           
 13603                           ; BSR set to: 57
 13604  0099F0  0012               	return		;funcret
 13605  0099F2                     __end_of_putch:
 13606                           	opt callstack 0
 13607                           
 13608 ;; *************** function _UART1_Write *****************
 13609 ;; Defined at:
 13610 ;;		line 210 in file "mcc_generated_files/uart1.c"
 13611 ;; Parameters:    Size  Location     Type
 13612 ;;  txData          1    wreg     unsigned char 
 13613 ;; Auto vars:     Size  Location     Type
 13614 ;;  txData          1    1[COMRAM] unsigned char 
 13615 ;; Return value:  Size  Location     Type
 13616 ;;                  1    wreg      void 
 13617 ;; Registers used:
 13618 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13619 ;; Tracked objects:
 13620 ;;		On entry : 0/0
 13621 ;;		On exit  : 3F/39
 13622 ;;		Unchanged: 0/0
 13623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13628 ;;Total ram usage:        1 bytes
 13629 ;; Hardware stack levels used:    1
 13630 ;; Hardware stack levels required when called:    7
 13631 ;; This function calls:
 13632 ;;		Nothing
 13633 ;; This function is called by:
 13634 ;;		_putch
 13635 ;; This function uses a non-reentrant model
 13636 ;;
 13637                           
 13638                           	psect	text73
 13639  008B8C                     __ptext73:
 13640                           	opt callstack 0
 13641  008B8C                     _UART1_Write:
 13642                           	opt callstack 12
 13643                           
 13644                           ; BSR set to: 57
 13645                           ;incstack = 0
 13646                           ;UART1_Write@txData stored from wreg
 13647  008B8C  6E02               	movwf	UART1_Write@txData^0,c
 13648  008B8E                     
 13649                           ;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 13650                           
 13651                           ;mcc_generated_files/uart1.c: 210: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 211: {;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 13652  008B8E  0100               	movlb	0	; () banked
 13653  008B90  51FF               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 13654  008B92  B4D8               	btfsc	status,2,c
 13655  008B94  D7FC               	goto	l14374
 13656                           
 13657                           ; BSR set to: 0
 13658                           ;mcc_generated_files/uart1.c: 216:     if(0 == PIE3bits.U1TXIE)
 13659  008B96  0139               	movlb	57	; () banked
 13660  008B98  B993               	btfsc	147,4,b	;volatile
 13661  008B9A  D004               	goto	l1441
 13662                           
 13663                           ; BSR set to: 57
 13664                           ;mcc_generated_files/uart1.c: 217:     {;mcc_generated_files/uart1.c: 222:         U1TXB
      +                           = txData;
 13665  008B9C  0060  F00B  FDEA   	movff	UART1_Write@txData,15850	;volatile
 13666                           
 13667                           ;mcc_generated_files/uart1.c: 223:     }
 13668  008BA2  D012               	goto	l14390
 13669  008BA4                     l1441:
 13670                           
 13671                           ; BSR set to: 57
 13672                           ;mcc_generated_files/uart1.c: 225:     {;mcc_generated_files/uart1.c: 226:         PIE3b
      +                          its.U1TXIE = 0;
 13673  008BA4  9993               	bcf	147,4,b	;volatile
 13674                           
 13675                           ; BSR set to: 57
 13676                           ;mcc_generated_files/uart1.c: 227:         uart1TxBuffer[uart1TxHead++] = txData;
 13677  008BA6  0E00               	movlw	low _uart1TxBuffer
 13678  008BA8  0100               	movlb	0	; () banked
 13679  008BAA  25D0               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 13680  008BAC  6ED9               	movwf	fsr2l,c
 13681  008BAE  6ADA               	clrf	fsr2h,c
 13682  008BB0  0E03               	movlw	high _uart1TxBuffer
 13683  008BB2  22DA               	addwfc	fsr2h,f,c
 13684  008BB4  0060  F00B  FFDF   	movff	UART1_Write@txData,indf2
 13685                           
 13686                           ; BSR set to: 0
 13687  008BBA  2BD0               	incf	_uart1TxHead& (0+255),f,b	;volatile
 13688                           
 13689                           ; BSR set to: 0
 13690                           ;mcc_generated_files/uart1.c: 228:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 13691  008BBC  0E3F               	movlw	63
 13692  008BBE  65D0               	cpfsgt	_uart1TxHead& (0+255),b
 13693  008BC0  D002               	goto	l14388
 13694                           
 13695                           ; BSR set to: 0
 13696                           ;mcc_generated_files/uart1.c: 229:         {;mcc_generated_files/uart1.c: 230:          
      +                             uart1TxHead = 0;
 13697  008BC2  0E00               	movlw	0
 13698  008BC4  6FD0               	movwf	_uart1TxHead& (0+255),b	;volatile
 13699  008BC6                     l14388:
 13700                           
 13701                           ; BSR set to: 0
 13702                           ;mcc_generated_files/uart1.c: 232:         uart1TxBufferRemaining--;
 13703  008BC6  07FF               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 13704  008BC8                     l14390:
 13705                           
 13706                           ;mcc_generated_files/uart1.c: 234:     PIE3bits.U1TXIE = 1;
 13707  008BC8  0139               	movlb	57	; () banked
 13708  008BCA  8993               	bsf	147,4,b	;volatile
 13709                           
 13710                           ; BSR set to: 57
 13711  008BCC  0012               	return		;funcret
 13712  008BCE                     __end_of_UART1_Write:
 13713                           	opt callstack 0
 13714                           
 13715 ;; *************** function _abs *****************
 13716 ;; Defined at:
 13717 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 13718 ;; Parameters:    Size  Location     Type
 13719 ;;  a               2   19[COMRAM] int 
 13720 ;; Auto vars:     Size  Location     Type
 13721 ;;		None
 13722 ;; Return value:  Size  Location     Type
 13723 ;;                  2   19[COMRAM] int 
 13724 ;; Registers used:
 13725 ;;		wreg, status,2, status,0
 13726 ;; Tracked objects:
 13727 ;;		On entry : 0/2
 13728 ;;		On exit  : 0/0
 13729 ;;		Unchanged: 0/0
 13730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13731 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13733 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13734 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13735 ;;Total ram usage:        4 bytes
 13736 ;; Hardware stack levels used:    1
 13737 ;; Hardware stack levels required when called:    7
 13738 ;; This function calls:
 13739 ;;		Nothing
 13740 ;; This function is called by:
 13741 ;;		_dtoa
 13742 ;; This function uses a non-reentrant model
 13743 ;;
 13744                           
 13745                           	psect	text74
 13746  008D4E                     __ptext74:
 13747                           	opt callstack 0
 13748  008D4E                     _abs:
 13749                           	opt callstack 16
 13750                           
 13751                           ; BSR set to: 57
 13752                           ;incstack = 0
 13753  008D4E  BE15               	btfsc	(abs@a+1)^0,7,c
 13754  008D50  D005               	goto	u13690
 13755  008D52  5015               	movf	(abs@a+1)^0,w,c
 13756  008D54  E114               	bnz	l3986
 13757  008D56  0414               	decf	abs@a^0,w,c
 13758  008D58  B0D8               	btfsc	status,0,c
 13759  008D5A  D011               	goto	l3986
 13760  008D5C                     u13690:
 13761  008D5C  0060  F050  F016   	movff	abs@a,??_abs
 13762  008D62  0060  F054  F017   	movff	abs@a+1,??_abs+1
 13763  008D68  1E16               	comf	??_abs^0,f,c
 13764  008D6A  1E17               	comf	(??_abs+1)^0,f,c
 13765  008D6C  4A16               	infsnz	??_abs^0,f,c
 13766  008D6E  2A17               	incf	(??_abs+1)^0,f,c
 13767  008D70  0060  F058  F014   	movff	??_abs,?_abs
 13768  008D76  0060  F05C  F015   	movff	??_abs+1,?_abs+1
 13769  008D7C  0012               	return	
 13770  008D7E                     l3986:
 13771  008D7E  0060  F050  F014   	movff	abs@a,?_abs
 13772  008D84  0060  F054  F015   	movff	abs@a+1,?_abs+1
 13773  008D8A  0012               	return		;funcret
 13774  008D8C                     __end_of_abs:
 13775                           	opt callstack 0
 13776                           
 13777 ;; *************** function ___aomod *****************
 13778 ;; Defined at:
 13779 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 13780 ;; Parameters:    Size  Location     Type
 13781 ;;  dividend        8    1[COMRAM] long long 
 13782 ;;  divisor         8    9[COMRAM] long long 
 13783 ;; Auto vars:     Size  Location     Type
 13784 ;;  sign            1   18[COMRAM] unsigned char 
 13785 ;;  counter         1   17[COMRAM] unsigned char 
 13786 ;; Return value:  Size  Location     Type
 13787 ;;                  8    1[COMRAM] long long 
 13788 ;; Registers used:
 13789 ;;		wreg, status,2, status,0
 13790 ;; Tracked objects:
 13791 ;;		On entry : 0/2
 13792 ;;		On exit  : 0/0
 13793 ;;		Unchanged: 0/0
 13794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13795 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13796 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13798 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13799 ;;Total ram usage:       18 bytes
 13800 ;; Hardware stack levels used:    1
 13801 ;; Hardware stack levels required when called:    7
 13802 ;; This function calls:
 13803 ;;		Nothing
 13804 ;; This function is called by:
 13805 ;;		_dtoa
 13806 ;; This function uses a non-reentrant model
 13807 ;;
 13808                           
 13809                           	psect	text75
 13810  004C10                     __ptext75:
 13811                           	opt callstack 0
 13812  004C10                     ___aomod:
 13813                           	opt callstack 16
 13814                           
 13815                           ;incstack = 0
 13816  004C10  0E00               	movlw	0
 13817  004C12  6E13               	movwf	___aomod@sign^0,c
 13818  004C14  AE09               	btfss	(___aomod@dividend+7)^0,7,c
 13819  004C16  D012               	goto	l14556
 13820  004C18  1E09               	comf	(___aomod@dividend+7)^0,f,c
 13821  004C1A  1E08               	comf	(___aomod@dividend+6)^0,f,c
 13822  004C1C  1E07               	comf	(___aomod@dividend+5)^0,f,c
 13823  004C1E  1E06               	comf	(___aomod@dividend+4)^0,f,c
 13824  004C20  1E05               	comf	(___aomod@dividend+3)^0,f,c
 13825  004C22  1E04               	comf	(___aomod@dividend+2)^0,f,c
 13826  004C24  1E03               	comf	(___aomod@dividend+1)^0,f,c
 13827  004C26  6C02               	negf	___aomod@dividend^0,c
 13828  004C28  0E00               	movlw	0
 13829  004C2A  2203               	addwfc	(___aomod@dividend+1)^0,f,c
 13830  004C2C  2204               	addwfc	(___aomod@dividend+2)^0,f,c
 13831  004C2E  2205               	addwfc	(___aomod@dividend+3)^0,f,c
 13832  004C30  2206               	addwfc	(___aomod@dividend+4)^0,f,c
 13833  004C32  2207               	addwfc	(___aomod@dividend+5)^0,f,c
 13834  004C34  2208               	addwfc	(___aomod@dividend+6)^0,f,c
 13835  004C36  2209               	addwfc	(___aomod@dividend+7)^0,f,c
 13836  004C38  0E01               	movlw	1
 13837  004C3A  6E13               	movwf	___aomod@sign^0,c
 13838  004C3C                     l14556:
 13839  004C3C  AE11               	btfss	(___aomod@divisor+7)^0,7,c
 13840  004C3E  D010               	goto	l14560
 13841  004C40  1E11               	comf	(___aomod@divisor+7)^0,f,c
 13842  004C42  1E10               	comf	(___aomod@divisor+6)^0,f,c
 13843  004C44  1E0F               	comf	(___aomod@divisor+5)^0,f,c
 13844  004C46  1E0E               	comf	(___aomod@divisor+4)^0,f,c
 13845  004C48  1E0D               	comf	(___aomod@divisor+3)^0,f,c
 13846  004C4A  1E0C               	comf	(___aomod@divisor+2)^0,f,c
 13847  004C4C  1E0B               	comf	(___aomod@divisor+1)^0,f,c
 13848  004C4E  6C0A               	negf	___aomod@divisor^0,c
 13849  004C50  0E00               	movlw	0
 13850  004C52  220B               	addwfc	(___aomod@divisor+1)^0,f,c
 13851  004C54  220C               	addwfc	(___aomod@divisor+2)^0,f,c
 13852  004C56  220D               	addwfc	(___aomod@divisor+3)^0,f,c
 13853  004C58  220E               	addwfc	(___aomod@divisor+4)^0,f,c
 13854  004C5A  220F               	addwfc	(___aomod@divisor+5)^0,f,c
 13855  004C5C  2210               	addwfc	(___aomod@divisor+6)^0,f,c
 13856  004C5E  2211               	addwfc	(___aomod@divisor+7)^0,f,c
 13857  004C60                     l14560:
 13858  004C60  500A               	movf	___aomod@divisor^0,w,c
 13859  004C62  100B               	iorwf	(___aomod@divisor+1)^0,w,c
 13860  004C64  100C               	iorwf	(___aomod@divisor+2)^0,w,c
 13861  004C66  100D               	iorwf	(___aomod@divisor+3)^0,w,c
 13862  004C68  100E               	iorwf	(___aomod@divisor+4)^0,w,c
 13863  004C6A  100F               	iorwf	(___aomod@divisor+5)^0,w,c
 13864  004C6C  1010               	iorwf	(___aomod@divisor+6)^0,w,c
 13865  004C6E  1011               	iorwf	(___aomod@divisor+7)^0,w,c
 13866  004C70  B4D8               	btfsc	status,2,c
 13867  004C72  D03C               	goto	l14576
 13868  004C74  0E01               	movlw	1
 13869  004C76  6E12               	movwf	___aomod@counter^0,c
 13870  004C78  D00A               	goto	l14566
 13871  004C7A                     l14564:
 13872  004C7A  90D8               	bcf	status,0,c
 13873  004C7C  360A               	rlcf	___aomod@divisor^0,f,c
 13874  004C7E  360B               	rlcf	(___aomod@divisor+1)^0,f,c
 13875  004C80  360C               	rlcf	(___aomod@divisor+2)^0,f,c
 13876  004C82  360D               	rlcf	(___aomod@divisor+3)^0,f,c
 13877  004C84  360E               	rlcf	(___aomod@divisor+4)^0,f,c
 13878  004C86  360F               	rlcf	(___aomod@divisor+5)^0,f,c
 13879  004C88  3610               	rlcf	(___aomod@divisor+6)^0,f,c
 13880  004C8A  3611               	rlcf	(___aomod@divisor+7)^0,f,c
 13881  004C8C  2A12               	incf	___aomod@counter^0,f,c
 13882  004C8E                     l14566:
 13883  004C8E  AE11               	btfss	(___aomod@divisor+7)^0,7,c
 13884  004C90  D7F4               	goto	l14564
 13885  004C92                     u13890:
 13886  004C92  500A               	movf	___aomod@divisor^0,w,c
 13887  004C94  5C02               	subwf	___aomod@dividend^0,w,c
 13888  004C96  500B               	movf	(___aomod@divisor+1)^0,w,c
 13889  004C98  5803               	subwfb	(___aomod@dividend+1)^0,w,c
 13890  004C9A  500C               	movf	(___aomod@divisor+2)^0,w,c
 13891  004C9C  5804               	subwfb	(___aomod@dividend+2)^0,w,c
 13892  004C9E  500D               	movf	(___aomod@divisor+3)^0,w,c
 13893  004CA0  5805               	subwfb	(___aomod@dividend+3)^0,w,c
 13894  004CA2  500E               	movf	(___aomod@divisor+4)^0,w,c
 13895  004CA4  5806               	subwfb	(___aomod@dividend+4)^0,w,c
 13896  004CA6  500F               	movf	(___aomod@divisor+5)^0,w,c
 13897  004CA8  5807               	subwfb	(___aomod@dividend+5)^0,w,c
 13898  004CAA  5010               	movf	(___aomod@divisor+6)^0,w,c
 13899  004CAC  5808               	subwfb	(___aomod@dividend+6)^0,w,c
 13900  004CAE  5011               	movf	(___aomod@divisor+7)^0,w,c
 13901  004CB0  5809               	subwfb	(___aomod@dividend+7)^0,w,c
 13902  004CB2  A0D8               	btfss	status,0,c
 13903  004CB4  D010               	goto	l14572
 13904  004CB6  500A               	movf	___aomod@divisor^0,w,c
 13905  004CB8  5E02               	subwf	___aomod@dividend^0,f,c
 13906  004CBA  500B               	movf	(___aomod@divisor+1)^0,w,c
 13907  004CBC  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
 13908  004CBE  500C               	movf	(___aomod@divisor+2)^0,w,c
 13909  004CC0  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
 13910  004CC2  500D               	movf	(___aomod@divisor+3)^0,w,c
 13911  004CC4  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
 13912  004CC6  500E               	movf	(___aomod@divisor+4)^0,w,c
 13913  004CC8  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
 13914  004CCA  500F               	movf	(___aomod@divisor+5)^0,w,c
 13915  004CCC  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
 13916  004CCE  5010               	movf	(___aomod@divisor+6)^0,w,c
 13917  004CD0  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
 13918  004CD2  5011               	movf	(___aomod@divisor+7)^0,w,c
 13919  004CD4  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
 13920  004CD6                     l14572:
 13921  004CD6  90D8               	bcf	status,0,c
 13922  004CD8  3211               	rrcf	(___aomod@divisor+7)^0,f,c
 13923  004CDA  3210               	rrcf	(___aomod@divisor+6)^0,f,c
 13924  004CDC  320F               	rrcf	(___aomod@divisor+5)^0,f,c
 13925  004CDE  320E               	rrcf	(___aomod@divisor+4)^0,f,c
 13926  004CE0  320D               	rrcf	(___aomod@divisor+3)^0,f,c
 13927  004CE2  320C               	rrcf	(___aomod@divisor+2)^0,f,c
 13928  004CE4  320B               	rrcf	(___aomod@divisor+1)^0,f,c
 13929  004CE6  320A               	rrcf	___aomod@divisor^0,f,c
 13930  004CE8  2E12               	decfsz	___aomod@counter^0,f,c
 13931  004CEA  D7D3               	goto	u13890
 13932  004CEC                     l14576:
 13933  004CEC  5013               	movf	___aomod@sign^0,w,c
 13934  004CEE  B4D8               	btfsc	status,2,c
 13935  004CF0  D010               	goto	l14580
 13936  004CF2  1E09               	comf	(___aomod@dividend+7)^0,f,c
 13937  004CF4  1E08               	comf	(___aomod@dividend+6)^0,f,c
 13938  004CF6  1E07               	comf	(___aomod@dividend+5)^0,f,c
 13939  004CF8  1E06               	comf	(___aomod@dividend+4)^0,f,c
 13940  004CFA  1E05               	comf	(___aomod@dividend+3)^0,f,c
 13941  004CFC  1E04               	comf	(___aomod@dividend+2)^0,f,c
 13942  004CFE  1E03               	comf	(___aomod@dividend+1)^0,f,c
 13943  004D00  6C02               	negf	___aomod@dividend^0,c
 13944  004D02  0E00               	movlw	0
 13945  004D04  2203               	addwfc	(___aomod@dividend+1)^0,f,c
 13946  004D06  2204               	addwfc	(___aomod@dividend+2)^0,f,c
 13947  004D08  2205               	addwfc	(___aomod@dividend+3)^0,f,c
 13948  004D0A  2206               	addwfc	(___aomod@dividend+4)^0,f,c
 13949  004D0C  2207               	addwfc	(___aomod@dividend+5)^0,f,c
 13950  004D0E  2208               	addwfc	(___aomod@dividend+6)^0,f,c
 13951  004D10  2209               	addwfc	(___aomod@dividend+7)^0,f,c
 13952  004D12                     l14580:
 13953  004D12  0060  F008  F002   	movff	___aomod@dividend,?___aomod
 13954  004D18  0060  F00C  F003   	movff	___aomod@dividend+1,?___aomod+1
 13955  004D1E  0060  F010  F004   	movff	___aomod@dividend+2,?___aomod+2
 13956  004D24  0060  F014  F005   	movff	___aomod@dividend+3,?___aomod+3
 13957  004D2A  0060  F018  F006   	movff	___aomod@dividend+4,?___aomod+4
 13958  004D30  0060  F01C  F007   	movff	___aomod@dividend+5,?___aomod+5
 13959  004D36  0060  F020  F008   	movff	___aomod@dividend+6,?___aomod+6
 13960  004D3C  0060  F024  F009   	movff	___aomod@dividend+7,?___aomod+7
 13961  004D42  0012               	return		;funcret
 13962  004D44                     __end_of___aomod:
 13963                           	opt callstack 0
 13964                           
 13965 ;; *************** function ___aodiv *****************
 13966 ;; Defined at:
 13967 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 13968 ;; Parameters:    Size  Location     Type
 13969 ;;  dividend        8    1[COMRAM] long long 
 13970 ;;  divisor         8    9[COMRAM] long long 
 13971 ;; Auto vars:     Size  Location     Type
 13972 ;;  quotient        8   19[COMRAM] long long 
 13973 ;;  sign            1   18[COMRAM] unsigned char 
 13974 ;;  counter         1   17[COMRAM] unsigned char 
 13975 ;; Return value:  Size  Location     Type
 13976 ;;                  8    1[COMRAM] long long 
 13977 ;; Registers used:
 13978 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13979 ;; Tracked objects:
 13980 ;;		On entry : 0/2
 13981 ;;		On exit  : 0/0
 13982 ;;		Unchanged: 0/0
 13983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13984 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13985 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13987 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13988 ;;Total ram usage:       26 bytes
 13989 ;; Hardware stack levels used:    1
 13990 ;; Hardware stack levels required when called:    7
 13991 ;; This function calls:
 13992 ;;		Nothing
 13993 ;; This function is called by:
 13994 ;;		_dtoa
 13995 ;; This function uses a non-reentrant model
 13996 ;;
 13997                           
 13998                           	psect	text76
 13999  004820                     __ptext76:
 14000                           	opt callstack 0
 14001  004820                     ___aodiv:
 14002                           	opt callstack 16
 14003                           
 14004                           ;incstack = 0
 14005  004820  0E00               	movlw	0
 14006  004822  6E13               	movwf	___aodiv@sign^0,c
 14007  004824  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
 14008  004826  D012               	goto	l14512
 14009  004828  1E11               	comf	(___aodiv@divisor+7)^0,f,c
 14010  00482A  1E10               	comf	(___aodiv@divisor+6)^0,f,c
 14011  00482C  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
 14012  00482E  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
 14013  004830  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
 14014  004832  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
 14015  004834  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
 14016  004836  6C0A               	negf	___aodiv@divisor^0,c
 14017  004838  0E00               	movlw	0
 14018  00483A  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
 14019  00483C  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
 14020  00483E  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
 14021  004840  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
 14022  004842  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
 14023  004844  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
 14024  004846  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
 14025  004848  0E01               	movlw	1
 14026  00484A  6E13               	movwf	___aodiv@sign^0,c
 14027  00484C                     l14512:
 14028  00484C  AE09               	btfss	(___aodiv@dividend+7)^0,7,c
 14029  00484E  D012               	goto	l14518
 14030  004850  1E09               	comf	(___aodiv@dividend+7)^0,f,c
 14031  004852  1E08               	comf	(___aodiv@dividend+6)^0,f,c
 14032  004854  1E07               	comf	(___aodiv@dividend+5)^0,f,c
 14033  004856  1E06               	comf	(___aodiv@dividend+4)^0,f,c
 14034  004858  1E05               	comf	(___aodiv@dividend+3)^0,f,c
 14035  00485A  1E04               	comf	(___aodiv@dividend+2)^0,f,c
 14036  00485C  1E03               	comf	(___aodiv@dividend+1)^0,f,c
 14037  00485E  6C02               	negf	___aodiv@dividend^0,c
 14038  004860  0E00               	movlw	0
 14039  004862  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
 14040  004864  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
 14041  004866  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
 14042  004868  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
 14043  00486A  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
 14044  00486C  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
 14045  00486E  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
 14046  004870  0E01               	movlw	1
 14047  004872  1A13               	xorwf	___aodiv@sign^0,f,c
 14048  004874                     l14518:
 14049  004874  EE20  F014         	lfsr	2,___aodiv@quotient
 14050  004878  0E07               	movlw	7
 14051  00487A                     u13811:
 14052  00487A  6ADE               	clrf	postinc2,c
 14053  00487C  06E8               	decf	wreg,f,c
 14054  00487E  E2FD               	bc	u13811
 14055  004880  500A               	movf	___aodiv@divisor^0,w,c
 14056  004882  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
 14057  004884  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
 14058  004886  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
 14059  004888  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
 14060  00488A  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
 14061  00488C  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
 14062  00488E  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
 14063  004890  B4D8               	btfsc	status,2,c
 14064  004892  D046               	goto	l14540
 14065  004894  0E01               	movlw	1
 14066  004896  6E12               	movwf	___aodiv@counter^0,c
 14067  004898  D00A               	goto	l14526
 14068  00489A                     l14524:
 14069  00489A  90D8               	bcf	status,0,c
 14070  00489C  360A               	rlcf	___aodiv@divisor^0,f,c
 14071  00489E  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
 14072  0048A0  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
 14073  0048A2  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
 14074  0048A4  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
 14075  0048A6  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
 14076  0048A8  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
 14077  0048AA  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
 14078  0048AC  2A12               	incf	___aodiv@counter^0,f,c
 14079  0048AE                     l14526:
 14080  0048AE  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
 14081  0048B0  D7F4               	goto	l14524
 14082  0048B2                     u13830:
 14083  0048B2  90D8               	bcf	status,0,c
 14084  0048B4  3614               	rlcf	___aodiv@quotient^0,f,c
 14085  0048B6  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
 14086  0048B8  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
 14087  0048BA  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
 14088  0048BC  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
 14089  0048BE  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
 14090  0048C0  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
 14091  0048C2  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
 14092  0048C4  500A               	movf	___aodiv@divisor^0,w,c
 14093  0048C6  5C02               	subwf	___aodiv@dividend^0,w,c
 14094  0048C8  500B               	movf	(___aodiv@divisor+1)^0,w,c
 14095  0048CA  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
 14096  0048CC  500C               	movf	(___aodiv@divisor+2)^0,w,c
 14097  0048CE  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
 14098  0048D0  500D               	movf	(___aodiv@divisor+3)^0,w,c
 14099  0048D2  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
 14100  0048D4  500E               	movf	(___aodiv@divisor+4)^0,w,c
 14101  0048D6  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
 14102  0048D8  500F               	movf	(___aodiv@divisor+5)^0,w,c
 14103  0048DA  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
 14104  0048DC  5010               	movf	(___aodiv@divisor+6)^0,w,c
 14105  0048DE  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
 14106  0048E0  5011               	movf	(___aodiv@divisor+7)^0,w,c
 14107  0048E2  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
 14108  0048E4  A0D8               	btfss	status,0,c
 14109  0048E6  D011               	goto	l14536
 14110  0048E8  500A               	movf	___aodiv@divisor^0,w,c
 14111  0048EA  5E02               	subwf	___aodiv@dividend^0,f,c
 14112  0048EC  500B               	movf	(___aodiv@divisor+1)^0,w,c
 14113  0048EE  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
 14114  0048F0  500C               	movf	(___aodiv@divisor+2)^0,w,c
 14115  0048F2  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
 14116  0048F4  500D               	movf	(___aodiv@divisor+3)^0,w,c
 14117  0048F6  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
 14118  0048F8  500E               	movf	(___aodiv@divisor+4)^0,w,c
 14119  0048FA  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
 14120  0048FC  500F               	movf	(___aodiv@divisor+5)^0,w,c
 14121  0048FE  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
 14122  004900  5010               	movf	(___aodiv@divisor+6)^0,w,c
 14123  004902  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
 14124  004904  5011               	movf	(___aodiv@divisor+7)^0,w,c
 14125  004906  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
 14126  004908  8014               	bsf	___aodiv@quotient^0,0,c
 14127  00490A                     l14536:
 14128  00490A  90D8               	bcf	status,0,c
 14129  00490C  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
 14130  00490E  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
 14131  004910  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
 14132  004912  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
 14133  004914  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
 14134  004916  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
 14135  004918  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
 14136  00491A  320A               	rrcf	___aodiv@divisor^0,f,c
 14137  00491C  2E12               	decfsz	___aodiv@counter^0,f,c
 14138  00491E  D7C9               	goto	u13830
 14139  004920                     l14540:
 14140  004920  5013               	movf	___aodiv@sign^0,w,c
 14141  004922  B4D8               	btfsc	status,2,c
 14142  004924  D010               	goto	l14544
 14143  004926  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
 14144  004928  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
 14145  00492A  1E19               	comf	(___aodiv@quotient+5)^0,f,c
 14146  00492C  1E18               	comf	(___aodiv@quotient+4)^0,f,c
 14147  00492E  1E17               	comf	(___aodiv@quotient+3)^0,f,c
 14148  004930  1E16               	comf	(___aodiv@quotient+2)^0,f,c
 14149  004932  1E15               	comf	(___aodiv@quotient+1)^0,f,c
 14150  004934  6C14               	negf	___aodiv@quotient^0,c
 14151  004936  0E00               	movlw	0
 14152  004938  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
 14153  00493A  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
 14154  00493C  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
 14155  00493E  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
 14156  004940  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
 14157  004942  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
 14158  004944  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
 14159  004946                     l14544:
 14160  004946  0060  F050  F002   	movff	___aodiv@quotient,?___aodiv
 14161  00494C  0060  F054  F003   	movff	___aodiv@quotient+1,?___aodiv+1
 14162  004952  0060  F058  F004   	movff	___aodiv@quotient+2,?___aodiv+2
 14163  004958  0060  F05C  F005   	movff	___aodiv@quotient+3,?___aodiv+3
 14164  00495E  0060  F060  F006   	movff	___aodiv@quotient+4,?___aodiv+4
 14165  004964  0060  F064  F007   	movff	___aodiv@quotient+5,?___aodiv+5
 14166  00496A  0060  F068  F008   	movff	___aodiv@quotient+6,?___aodiv+6
 14167  004970  0060  F06C  F009   	movff	___aodiv@quotient+7,?___aodiv+7
 14168  004976  0012               	return		;funcret
 14169  004978                     __end_of___aodiv:
 14170                           	opt callstack 0
 14171                           
 14172 ;; *************** function _atoi *****************
 14173 ;; Defined at:
 14174 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 14175 ;; Parameters:    Size  Location     Type
 14176 ;;  s               2    8[COMRAM] PTR const unsigned char 
 14177 ;;		 -> STR_139(5), STR_138(8), STR_137(28), STR_136(26), 
 14178 ;;		 -> STR_135(12), STR_134(12), STR_65(5), STR_64(34), 
 14179 ;;		 -> STR_63(14), STR_62(5), STR_61(12), STR_59(8), 
 14180 ;;		 -> STR_56(5), STR_55(12), STR_48(5), STR_47(12), 
 14181 ;;		 -> STR_45(13), STR_44(5), STR_43(12), STR_42(12), 
 14182 ;;		 -> STR_40(14), STR_39(5), STR_38(12), STR_36(13), 
 14183 ;;		 -> STR_35(18), STR_34(18), STR_33(5), STR_32(21), 
 14184 ;;		 -> STR_31(5), STR_30(12), STR_29(12), STR_27(12), 
 14185 ;;		 -> STR_26(12), STR_24(5), STR_23(3), STR_22(5), 
 14186 ;;		 -> STR_21(5), STR_20(12), STR_19(12), STR_18(3), 
 14187 ;;		 -> STR_17(6), STR_16(5), STR_14(13), STR_13(12), 
 14188 ;;		 -> STR_12(5), STR_10(16), STR_9(8), STR_8(12), 
 14189 ;;		 -> STR_7(12), STR_5(8), STR_4(12), STR_3(12), 
 14190 ;; Auto vars:     Size  Location     Type
 14191 ;;  n               2   21[COMRAM] int 
 14192 ;;  neg             2   14[COMRAM] int 
 14193 ;; Return value:  Size  Location     Type
 14194 ;;                  2    8[COMRAM] int 
 14195 ;; Registers used:
 14196 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14197 ;; Tracked objects:
 14198 ;;		On entry : 3F/0
 14199 ;;		On exit  : 0/0
 14200 ;;		Unchanged: 0/0
 14201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14203 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14204 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14205 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14206 ;;Total ram usage:       15 bytes
 14207 ;; Hardware stack levels used:    1
 14208 ;; Hardware stack levels required when called:    8
 14209 ;; This function calls:
 14210 ;;		___wmul
 14211 ;;		_isdigit
 14212 ;;		_isspace
 14213 ;; This function is called by:
 14214 ;;		_vfpfcnvrt
 14215 ;; This function uses a non-reentrant model
 14216 ;;
 14217                           
 14218                           	psect	text77
 14219  0043EE                     __ptext77:
 14220                           	opt callstack 0
 14221  0043EE                     _atoi:
 14222                           	opt callstack 16
 14223                           
 14224                           ; BSR set to: 0
 14225                           
 14226                           ;incstack = 0
 14227  0043EE  0E00               	movlw	0
 14228  0043F0  6E17               	movwf	(atoi@n+1)^0,c
 14229  0043F2  0E00               	movlw	0
 14230  0043F4  6E16               	movwf	atoi@n^0,c
 14231  0043F6  0E00               	movlw	0
 14232  0043F8  6E10               	movwf	(atoi@neg+1)^0,c
 14233  0043FA  0E00               	movlw	0
 14234  0043FC  6E0F               	movwf	atoi@neg^0,c
 14235  0043FE  D002               	goto	l14826
 14236  004400                     l14824:
 14237                           
 14238                           ; BSR set to: 0
 14239  004400  4A09               	infsnz	atoi@s^0,f,c
 14240  004402  2A0A               	incf	(atoi@s+1)^0,f,c
 14241  004404                     l14826:
 14242                           
 14243                           ; BSR set to: 0
 14244  004404  0E01               	movlw	1
 14245  004406  6E15               	movwf	_atoi$7499^0,c
 14246                           
 14247                           ; BSR set to: 0
 14248  004408  0060  F027  FFF6   	movff	atoi@s,tblptrl
 14249  00440E  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 14250  004414                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14251  004414  6AF8               	clrf	tblptru,c
 14252  004416                     	endif
 14253  004416                     	if	0	;tblptru may be non-zero
 14254  004416                     	endif
 14255  004416  0008               	tblrd		*
 14256  004418  50F5               	movf	tablat,w,c
 14257  00441A  0A20               	xorlw	32
 14258  00441C  B4D8               	btfsc	status,2,c
 14259  00441E  D01B               	goto	l14834
 14260                           
 14261                           ; BSR set to: 0
 14262  004420  0EF7               	movlw	247
 14263  004422  6E0B               	movwf	??_atoi^0,c
 14264  004424  0EFF               	movlw	255
 14265  004426  6E0C               	movwf	(??_atoi+1)^0,c
 14266  004428  0060  F027  FFF6   	movff	atoi@s,tblptrl
 14267  00442E  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 14268  004434                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14269  004434  6AF8               	clrf	tblptru,c
 14270  004436                     	endif
 14271  004436                     	if	0	;tblptru may be non-zero
 14272  004436                     	endif
 14273  004436  0008               	tblrd		*
 14274  004438  50F5               	movf	tablat,w,c
 14275  00443A  6E0D               	movwf	(??_atoi+2)^0,c
 14276  00443C  6A0E               	clrf	(??_atoi+3)^0,c
 14277  00443E  500B               	movf	??_atoi^0,w,c
 14278  004440  260D               	addwf	(??_atoi+2)^0,f,c
 14279  004442  500C               	movf	(??_atoi+1)^0,w,c
 14280  004444  220E               	addwfc	(??_atoi+3)^0,f,c
 14281  004446  500E               	movf	(??_atoi+3)^0,w,c
 14282  004448  E104               	bnz	u14430
 14283  00444A  0E05               	movlw	5
 14284  00444C  5C0D               	subwf	(??_atoi+2)^0,w,c
 14285  00444E  A0D8               	btfss	status,0,c
 14286  004450  D002               	goto	l14834
 14287  004452                     u14430:
 14288                           
 14289                           ; BSR set to: 0
 14290  004452  0E00               	movlw	0
 14291  004454  6E15               	movwf	_atoi$7499^0,c
 14292  004456                     l14834:
 14293                           
 14294                           ; BSR set to: 0
 14295  004456  0060  F054  F011   	movff	_atoi$7499,_atoi$7498
 14296  00445C  6A12               	clrf	(_atoi$7498+1)^0,c
 14297                           
 14298                           ; BSR set to: 0
 14299  00445E  5011               	movf	_atoi$7498^0,w,c
 14300  004460  1012               	iorwf	(_atoi$7498+1)^0,w,c
 14301  004462  B4D8               	btfsc	status,2,c
 14302  004464  D008               	goto	l14844
 14303  004466  D7CC               	goto	l14824
 14304  004468                     l14840:
 14305                           
 14306                           ; BSR set to: 0
 14307  004468  0E00               	movlw	0
 14308  00446A  6E10               	movwf	(atoi@neg+1)^0,c
 14309  00446C  0E01               	movlw	1
 14310  00446E  6E0F               	movwf	atoi@neg^0,c
 14311  004470                     l14842:
 14312  004470  4A09               	infsnz	atoi@s^0,f,c
 14313  004472  2A0A               	incf	(atoi@s+1)^0,f,c
 14314  004474  D036               	goto	l14850
 14315  004476                     l14844:
 14316                           
 14317                           ; BSR set to: 0
 14318  004476  0060  F027  FFF6   	movff	atoi@s,tblptrl
 14319  00447C  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 14320  004482                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14321  004482  6AF8               	clrf	tblptru,c
 14322  004484                     	endif
 14323  004484                     	if	0	;tblptru may be non-zero
 14324  004484                     	endif
 14325  004484  0008               	tblrd		*
 14326  004486  50F5               	movf	tablat,w,c
 14327  004488  6E0B               	movwf	??_atoi^0,c
 14328  00448A  6A0C               	clrf	(??_atoi+1)^0,c
 14329                           
 14330                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14331                           ; Switch size 1, requested type "simple"
 14332                           ; Number of cases is 1, Range of values is 0 to 0
 14333                           ; switch strategies available:
 14334                           ; Name         Instructions Cycles
 14335                           ; simple_byte            4     3 (average)
 14336                           ;	Chosen strategy is simple_byte
 14337  00448C  500C               	movf	(??_atoi+1)^0,w,c
 14338  00448E  0A00               	xorlw	0	; case 0
 14339  004490  A4D8               	btfss	status,2,c
 14340  004492  D027               	goto	l14850
 14341                           
 14342                           ; BSR set to: 0
 14343                           ; Switch size 1, requested type "simple"
 14344                           ; Number of cases is 2, Range of values is 43 to 45
 14345                           ; switch strategies available:
 14346                           ; Name         Instructions Cycles
 14347                           ; simple_byte            7     4 (average)
 14348                           ;	Chosen strategy is simple_byte
 14349  004494  500B               	movf	??_atoi^0,w,c
 14350  004496  0A2B               	xorlw	43	; case 43
 14351  004498  B4D8               	btfsc	status,2,c
 14352  00449A  D7EA               	goto	l14842
 14353  00449C  0A06               	xorlw	6	; case 45
 14354  00449E  B4D8               	btfsc	status,2,c
 14355  0044A0  D7E3               	goto	l14840
 14356  0044A2  D01F               	goto	l14850
 14357  0044A4                     l14846:
 14358  0044A4  0060  F058  F002   	movff	atoi@n,___wmul@multiplier
 14359  0044AA  0060  F05C  F003   	movff	atoi@n+1,___wmul@multiplier+1
 14360  0044B0  0E00               	movlw	0
 14361  0044B2  6E05               	movwf	(___wmul@multiplicand+1)^0,c
 14362  0044B4  0E0A               	movlw	10
 14363  0044B6  6E04               	movwf	___wmul@multiplicand^0,c
 14364  0044B8  EC47  F049         	call	___wmul	;wreg free
 14365  0044BC  0060  F027  FFF6   	movff	atoi@s,tblptrl
 14366  0044C2  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 14367  0044C8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14368  0044C8  6AF8               	clrf	tblptru,c
 14369  0044CA                     	endif
 14370  0044CA                     	if	0	;tblptru may be non-zero
 14371  0044CA                     	endif
 14372  0044CA  0008               	tblrd		*
 14373  0044CC  50F5               	movf	tablat,w,c
 14374  0044CE  5E02               	subwf	?___wmul^0,f,c
 14375  0044D0  0E00               	movlw	0
 14376  0044D2  5A03               	subwfb	(?___wmul+1)^0,f,c
 14377  0044D4  0E30               	movlw	48
 14378  0044D6  2402               	addwf	?___wmul^0,w,c
 14379  0044D8  6E16               	movwf	atoi@n^0,c
 14380  0044DA  0E00               	movlw	0
 14381  0044DC  2003               	addwfc	(?___wmul+1)^0,w,c
 14382  0044DE  6E17               	movwf	(atoi@n+1)^0,c
 14383  0044E0  D7C7               	goto	l14842
 14384  0044E2                     l14850:
 14385  0044E2  0ED0               	movlw	208
 14386  0044E4  6E0B               	movwf	??_atoi^0,c
 14387  0044E6  0EFF               	movlw	255
 14388  0044E8  6E0C               	movwf	(??_atoi+1)^0,c
 14389  0044EA  0060  F027  FFF6   	movff	atoi@s,tblptrl
 14390  0044F0  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 14391  0044F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14392  0044F6  6AF8               	clrf	tblptru,c
 14393  0044F8                     	endif
 14394  0044F8                     	if	0	;tblptru may be non-zero
 14395  0044F8                     	endif
 14396  0044F8  0008               	tblrd		*
 14397  0044FA  50F5               	movf	tablat,w,c
 14398  0044FC  6E0D               	movwf	(??_atoi+2)^0,c
 14399  0044FE  6A0E               	clrf	(??_atoi+3)^0,c
 14400  004500  500B               	movf	??_atoi^0,w,c
 14401  004502  260D               	addwf	(??_atoi+2)^0,f,c
 14402  004504  500C               	movf	(??_atoi+1)^0,w,c
 14403  004506  220E               	addwfc	(??_atoi+3)^0,f,c
 14404  004508  500E               	movf	(??_atoi+3)^0,w,c
 14405  00450A  E106               	bnz	u14450
 14406  00450C  0E0A               	movlw	10
 14407  00450E  5C0D               	subwf	(??_atoi+2)^0,w,c
 14408  004510  B0D8               	btfsc	status,0,c
 14409  004512  D002               	goto	u14450
 14410  004514  0E01               	movlw	1
 14411  004516  D001               	goto	u14460
 14412  004518                     u14450:
 14413  004518  0E00               	movlw	0
 14414  00451A                     u14460:
 14415  00451A  6E13               	movwf	_atoi$7500^0,c
 14416  00451C  6A14               	clrf	(_atoi$7500+1)^0,c
 14417  00451E  5013               	movf	_atoi$7500^0,w,c
 14418  004520  1014               	iorwf	(_atoi$7500+1)^0,w,c
 14419  004522  A4D8               	btfss	status,2,c
 14420  004524  D7BF               	goto	l14846
 14421  004526  500F               	movf	atoi@neg^0,w,c
 14422  004528  1010               	iorwf	(atoi@neg+1)^0,w,c
 14423  00452A  A4D8               	btfss	status,2,c
 14424  00452C  D011               	goto	l4017
 14425  00452E  0060  F058  F00B   	movff	atoi@n,??_atoi
 14426  004534  0060  F05C  F00C   	movff	atoi@n+1,??_atoi+1
 14427  00453A  1E0B               	comf	??_atoi^0,f,c
 14428  00453C  1E0C               	comf	(??_atoi+1)^0,f,c
 14429  00453E  4A0B               	infsnz	??_atoi^0,f,c
 14430  004540  2A0C               	incf	(??_atoi+1)^0,f,c
 14431  004542  0060  F02C  F009   	movff	??_atoi,?_atoi
 14432  004548  0060  F030  F00A   	movff	??_atoi+1,?_atoi+1
 14433  00454E  0012               	return	
 14434  004550                     l4017:
 14435  004550  0060  F058  F009   	movff	atoi@n,?_atoi
 14436  004556  0060  F05C  F00A   	movff	atoi@n+1,?_atoi+1
 14437  00455C  0012               	return		;funcret
 14438  00455E                     __end_of_atoi:
 14439                           	opt callstack 0
 14440                           
 14441 ;; *************** function _isspace *****************
 14442 ;; Defined at:
 14443 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 14444 ;; Parameters:    Size  Location     Type
 14445 ;;  c               2    1[COMRAM] int 
 14446 ;; Auto vars:     Size  Location     Type
 14447 ;;		None
 14448 ;; Return value:  Size  Location     Type
 14449 ;;                  2    1[COMRAM] int 
 14450 ;; Registers used:
 14451 ;;		wreg, status,2, status,0
 14452 ;; Tracked objects:
 14453 ;;		On entry : 0/0
 14454 ;;		On exit  : 0/0
 14455 ;;		Unchanged: 0/0
 14456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14458 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14459 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14460 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14461 ;;Total ram usage:        7 bytes
 14462 ;; Hardware stack levels used:    1
 14463 ;; Hardware stack levels required when called:    7
 14464 ;; This function calls:
 14465 ;;		Nothing
 14466 ;; This function is called by:
 14467 ;;		_atoi
 14468 ;;		___strtoxl
 14469 ;; This function uses a non-reentrant model
 14470 ;;
 14471                           
 14472                           	psect	text78
 14473  008AC0                     __ptext78:
 14474                           	opt callstack 0
 14475  008AC0                     _isspace:
 14476                           	opt callstack 16
 14477                           
 14478                           ;incstack = 0
 14479  008AC0  0E01               	movlw	1
 14480  008AC2  6E08               	movwf	_isspace$7525^0,c
 14481  008AC4  0E20               	movlw	32
 14482  008AC6  1802               	xorwf	isspace@c^0,w,c
 14483  008AC8  1003               	iorwf	(isspace@c+1)^0,w,c
 14484  008ACA  B4D8               	btfsc	status,2,c
 14485  008ACC  D016               	goto	l14630
 14486  008ACE  0EF7               	movlw	247
 14487  008AD0  6E04               	movwf	??_isspace^0,c
 14488  008AD2  0EFF               	movlw	255
 14489  008AD4  6E05               	movwf	(??_isspace+1)^0,c
 14490  008AD6  0060  F008  F006   	movff	isspace@c,??_isspace+2
 14491  008ADC  0060  F00C  F007   	movff	isspace@c+1,??_isspace+3
 14492  008AE2  5004               	movf	??_isspace^0,w,c
 14493  008AE4  2606               	addwf	(??_isspace+2)^0,f,c
 14494  008AE6  5005               	movf	(??_isspace+1)^0,w,c
 14495  008AE8  2207               	addwfc	(??_isspace+3)^0,f,c
 14496  008AEA  5007               	movf	(??_isspace+3)^0,w,c
 14497  008AEC  E104               	bnz	u14000
 14498  008AEE  0E05               	movlw	5
 14499  008AF0  5C06               	subwf	(??_isspace+2)^0,w,c
 14500  008AF2  A0D8               	btfss	status,0,c
 14501  008AF4  D002               	goto	l14630
 14502  008AF6                     u14000:
 14503  008AF6  0E00               	movlw	0
 14504  008AF8  6E08               	movwf	_isspace$7525^0,c
 14505  008AFA                     l14630:
 14506  008AFA  0060  F020  F002   	movff	_isspace$7525,?_isspace
 14507  008B00  6A03               	clrf	(?_isspace+1)^0,c
 14508  008B02  0012               	return		;funcret
 14509  008B04                     __end_of_isspace:
 14510                           	opt callstack 0
 14511                           
 14512 ;; *************** function _isdigit *****************
 14513 ;; Defined at:
 14514 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 14515 ;; Parameters:    Size  Location     Type
 14516 ;;  c               2    1[COMRAM] int 
 14517 ;; Auto vars:     Size  Location     Type
 14518 ;;		None
 14519 ;; Return value:  Size  Location     Type
 14520 ;;                  2    1[COMRAM] int 
 14521 ;; Registers used:
 14522 ;;		wreg, status,2, status,0
 14523 ;; Tracked objects:
 14524 ;;		On entry : 0/0
 14525 ;;		On exit  : 0/0
 14526 ;;		Unchanged: 0/0
 14527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14530 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14531 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14532 ;;Total ram usage:        6 bytes
 14533 ;; Hardware stack levels used:    1
 14534 ;; Hardware stack levels required when called:    7
 14535 ;; This function calls:
 14536 ;;		Nothing
 14537 ;; This function is called by:
 14538 ;;		_vfpfcnvrt
 14539 ;;		_atoi
 14540 ;;		___strtoxl
 14541 ;; This function uses a non-reentrant model
 14542 ;;
 14543                           
 14544                           	psect	text79
 14545  0091FA                     __ptext79:
 14546                           	opt callstack 0
 14547  0091FA                     _isdigit:
 14548                           	opt callstack 17
 14549                           
 14550                           ;incstack = 0
 14551  0091FA  0ED0               	movlw	208
 14552  0091FC  6E04               	movwf	??_isdigit^0,c
 14553  0091FE  0EFF               	movlw	255
 14554  009200  6E05               	movwf	(??_isdigit+1)^0,c
 14555  009202  0060  F008  F006   	movff	isdigit@c,??_isdigit+2
 14556  009208  0060  F00C  F007   	movff	isdigit@c+1,??_isdigit+3
 14557  00920E  5004               	movf	??_isdigit^0,w,c
 14558  009210  2606               	addwf	(??_isdigit+2)^0,f,c
 14559  009212  5005               	movf	(??_isdigit+1)^0,w,c
 14560  009214  2207               	addwfc	(??_isdigit+3)^0,f,c
 14561  009216  5007               	movf	(??_isdigit+3)^0,w,c
 14562  009218  E106               	bnz	u13770
 14563  00921A  0E0A               	movlw	10
 14564  00921C  5C06               	subwf	(??_isdigit+2)^0,w,c
 14565  00921E  B0D8               	btfsc	status,0,c
 14566  009220  D002               	goto	u13770
 14567  009222  0E01               	movlw	1
 14568  009224  D001               	goto	u13780
 14569  009226                     u13770:
 14570  009226  0E00               	movlw	0
 14571  009228                     u13780:
 14572  009228  6E02               	movwf	?_isdigit^0,c
 14573  00922A  6A03               	clrf	(?_isdigit+1)^0,c
 14574  00922C  0012               	return		;funcret
 14575  00922E                     __end_of_isdigit:
 14576                           	opt callstack 0
 14577                           
 14578 ;; *************** function _UART1_is_rx_ready *****************
 14579 ;; Defined at:
 14580 ;;		line 169 in file "mcc_generated_files/uart1.c"
 14581 ;; Parameters:    Size  Location     Type
 14582 ;;		None
 14583 ;; Auto vars:     Size  Location     Type
 14584 ;;		None
 14585 ;; Return value:  Size  Location     Type
 14586 ;;                  1    wreg      _Bool 
 14587 ;; Registers used:
 14588 ;;		wreg, status,2
 14589 ;; Tracked objects:
 14590 ;;		On entry : 3F/0
 14591 ;;		On exit  : 3F/0
 14592 ;;		Unchanged: 0/0
 14593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14598 ;;Total ram usage:        0 bytes
 14599 ;; Hardware stack levels used:    1
 14600 ;; Hardware stack levels required when called:    7
 14601 ;; This function calls:
 14602 ;;		Nothing
 14603 ;; This function is called by:
 14604 ;;		_processATCommand
 14605 ;; This function uses a non-reentrant model
 14606 ;;
 14607                           
 14608                           	psect	text80
 14609  00993C                     __ptext80:
 14610                           	opt callstack 0
 14611  00993C                     _UART1_is_rx_ready:
 14612                           	opt callstack 22
 14613                           
 14614                           ; BSR set to: 0
 14615                           ;mcc_generated_files/uart1.c: 171:     return (uart1RxCount ? 1 : 0);
 14616                           
 14617                           ;incstack = 0
 14618  00993C  51CD               	movf	_uart1RxCount& (0+255),w,b	;volatile
 14619  00993E  B4D8               	btfsc	status,2,c
 14620  009940  D002               	goto	u12460
 14621  009942  0E01               	movlw	1
 14622  009944  0012               	return	
 14623  009946                     u12460:
 14624  009946  0E00               	movlw	0
 14625                           
 14626                           ; BSR set to: 0
 14627  009948  0012               	return		;funcret
 14628  00994A                     __end_of_UART1_is_rx_ready:
 14629                           	opt callstack 0
 14630                           
 14631 ;; *************** function _UART1_Read *****************
 14632 ;; Defined at:
 14633 ;;		line 188 in file "mcc_generated_files/uart1.c"
 14634 ;; Parameters:    Size  Location     Type
 14635 ;;		None
 14636 ;; Auto vars:     Size  Location     Type
 14637 ;;  readValue       1    1[COMRAM] unsigned char 
 14638 ;; Return value:  Size  Location     Type
 14639 ;;                  1    wreg      unsigned char 
 14640 ;; Registers used:
 14641 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14642 ;; Tracked objects:
 14643 ;;		On entry : 3F/0
 14644 ;;		On exit  : 3F/39
 14645 ;;		Unchanged: 0/0
 14646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14650 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14651 ;;Total ram usage:        1 bytes
 14652 ;; Hardware stack levels used:    1
 14653 ;; Hardware stack levels required when called:    7
 14654 ;; This function calls:
 14655 ;;		Nothing
 14656 ;; This function is called by:
 14657 ;;		_processATCommand
 14658 ;; This function uses a non-reentrant model
 14659 ;;
 14660                           
 14661                           	psect	text81
 14662  008BCE                     __ptext81:
 14663                           	opt callstack 0
 14664  008BCE                     _UART1_Read:
 14665                           	opt callstack 22
 14666                           
 14667                           ; BSR set to: 0
 14668                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 14669                           
 14670                           ; BSR set to: 0
 14671                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 14672                           
 14673                           ; BSR set to: 0
 14674                           ;incstack = 0
 14675  008BCE  51CD               	movf	_uart1RxCount& (0+255),w,b	;volatile
 14676  008BD0  B4D8               	btfsc	status,2,c
 14677  008BD2  D7FD               	goto	_UART1_Read
 14678                           
 14679                           ; BSR set to: 0
 14680                           ;mcc_generated_files/uart1.c: 196:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 14681  008BD4  0E00               	movlw	low _uart1RxStatusBuffer
 14682  008BD6  25CE               	addwf	_uart1RxTail& (0+255),w,b	;volatile
 14683  008BD8  6ED9               	movwf	fsr2l,c
 14684  008BDA  6ADA               	clrf	fsr2h,c
 14685  008BDC  0E01               	movlw	high _uart1RxStatusBuffer
 14686  008BDE  22DA               	addwfc	fsr2h,f,c
 14687  008BE0  50DF               	movf	indf2,w,c
 14688  008BE2  6FCC               	movwf	_uart1RxLastError& (0+255),b	;volatile
 14689                           
 14690                           ;mcc_generated_files/uart1.c: 198:     readValue = uart1RxBuffer[uart1RxTail++];
 14691  008BE4  0E10               	movlw	low _uart1RxBuffer
 14692  008BE6  25CE               	addwf	_uart1RxTail& (0+255),w,b	;volatile
 14693  008BE8  6ED9               	movwf	fsr2l,c
 14694  008BEA  6ADA               	clrf	fsr2h,c
 14695  008BEC  0E01               	movlw	high _uart1RxBuffer
 14696  008BEE  22DA               	addwfc	fsr2h,f,c
 14697  008BF0  50DF               	movf	indf2,w,c
 14698  008BF2  6E02               	movwf	UART1_Read@readValue^0,c
 14699                           
 14700                           ; BSR set to: 0
 14701  008BF4  2BCE               	incf	_uart1RxTail& (0+255),f,b	;volatile
 14702                           
 14703                           ; BSR set to: 0
 14704                           ;mcc_generated_files/uart1.c: 199:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 14705  008BF6  0E0F               	movlw	15
 14706  008BF8  65CE               	cpfsgt	_uart1RxTail& (0+255),b
 14707  008BFA  D002               	goto	l13212
 14708                           
 14709                           ; BSR set to: 0
 14710                           ;mcc_generated_files/uart1.c: 200:     {;mcc_generated_files/uart1.c: 201:         uart1
      +                          RxTail = 0;
 14711  008BFC  0E00               	movlw	0
 14712  008BFE  6FCE               	movwf	_uart1RxTail& (0+255),b	;volatile
 14713  008C00                     l13212:
 14714                           
 14715                           ; BSR set to: 0
 14716                           ;mcc_generated_files/uart1.c: 203:     PIE3bits.U1RXIE = 0;
 14717  008C00  0139               	movlb	57	; () banked
 14718  008C02  9793               	bcf	147,3,b	;volatile
 14719                           
 14720                           ; BSR set to: 57
 14721                           ;mcc_generated_files/uart1.c: 204:     uart1RxCount--;
 14722  008C04  0100               	movlb	0	; () banked
 14723  008C06  07CD               	decf	_uart1RxCount& (0+255),f,b	;volatile
 14724                           
 14725                           ; BSR set to: 0
 14726                           ;mcc_generated_files/uart1.c: 205:     PIE3bits.U1RXIE = 1;
 14727  008C08  0139               	movlb	57	; () banked
 14728  008C0A  8793               	bsf	147,3,b	;volatile
 14729                           
 14730                           ; BSR set to: 57
 14731                           ;mcc_generated_files/uart1.c: 207:     return readValue;
 14732  008C0C  5002               	movf	UART1_Read@readValue^0,w,c
 14733                           
 14734                           ; BSR set to: 57
 14735  008C0E  0012               	return		;funcret
 14736  008C10                     __end_of_UART1_Read:
 14737                           	opt callstack 0
 14738                           
 14739 ;; *************** function _bootLoadApplication *****************
 14740 ;; Defined at:
 14741 ;;		line 1305 in file "../app/app_src/application.c"
 14742 ;; Parameters:    Size  Location     Type
 14743 ;;		None
 14744 ;; Auto vars:     Size  Location     Type
 14745 ;;  buf_id          1   50[COMRAM] unsigned char 
 14746 ;;  buf_id          1   49[COMRAM] unsigned char 
 14747 ;;  temp            2   51[COMRAM] unsigned short 
 14748 ;;  i               1   53[COMRAM] unsigned char 
 14749 ;; Return value:  Size  Location     Type
 14750 ;;                  1    wreg      void 
 14751 ;; Registers used:
 14752 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14753 ;; Tracked objects:
 14754 ;;		On entry : 3F/0
 14755 ;;		On exit  : 3F/3D
 14756 ;;		Unchanged: 0/0
 14757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14759 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14760 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14761 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14762 ;;Total ram usage:        7 bytes
 14763 ;; Hardware stack levels used:    1
 14764 ;; Hardware stack levels required when called:   14
 14765 ;; This function calls:
 14766 ;;		_CircularBufferInit
 14767 ;;		_DATAEE_ReadByte_Platform
 14768 ;;		_DATAEE_WriteByte_Platform
 14769 ;;		_NWK_OpenEndpoint
 14770 ;;		_NWK_SetAddr
 14771 ;;		_NWK_SetPanId
 14772 ;;		_NWK_SetSecurityKey
 14773 ;;		_PHY_SetChannel
 14774 ;;		_PHY_SetRxState
 14775 ;;		_crc16_app
 14776 ;;		_loadMACAddr
 14777 ;;		_set_parity
 14778 ;;		_set_uart_baud
 14779 ;; This function is called by:
 14780 ;;		_main
 14781 ;; This function uses a non-reentrant model
 14782 ;;
 14783                           
 14784                           	psect	text82
 14785  002380                     __ptext82:
 14786                           	opt callstack 0
 14787  002380                     _bootLoadApplication:
 14788                           	opt callstack 16
 14789                           
 14790                           ; BSR set to: 0
 14791                           ;../app/app_src/application.c: 1307:     uint16_t temp;;../app/app_src/application.c: 13
      +                          08:     uint8_t i;;../app/app_src/application.c: 1313:     loadMACAddr();
 14792                           
 14793                           ; BSR set to: 57
 14794                           ;incstack = 0
 14795  002380  EC23  F047         	call	_loadMACAddr	;wreg free
 14796                           
 14797                           ;../app/app_src/application.c: 1315:     temp = crc16_app(&EUIDbyte[0], sizeof(EUIDbyte)
      +                          , 0);
 14798  002384  0EB0               	movlw	low _EUIDbyte
 14799  002386  6E13               	movwf	crc16_app@dptr^0,c
 14800  002388  0E01               	movlw	high _EUIDbyte
 14801  00238A  6E14               	movwf	(crc16_app@dptr+1)^0,c
 14802  00238C  0E00               	movlw	0
 14803  00238E  6E16               	movwf	(crc16_app@len+1)^0,c
 14804  002390  0E0C               	movlw	12
 14805  002392  6E15               	movwf	crc16_app@len^0,c
 14806  002394  0E00               	movlw	0
 14807  002396  6E18               	movwf	(crc16_app@seed+1)^0,c
 14808  002398  0E00               	movlw	0
 14809  00239A  6E17               	movwf	crc16_app@seed^0,c
 14810  00239C  EC16  F03E         	call	_crc16_app	;wreg free
 14811  0023A0  0060  F04C  F034   	movff	?_crc16_app,bootLoadApplication@temp
 14812  0023A6  0060  F050  F035   	movff	?_crc16_app+1,bootLoadApplication@temp+1
 14813                           
 14814                           ; BSR set to: 57
 14815                           ;../app/app_src/application.c: 1316:     currentAddr0 = (temp >> 8) & 0xFF;
 14816  0023AC  0060  F0D4  F0FA   	movff	bootLoadApplication@temp+1,_currentAddr0
 14817                           
 14818                           ; BSR set to: 57
 14819                           ;../app/app_src/application.c: 1317:     currentAddr1 = (temp) & 0xFF;
 14820  0023B2  0060  F0D0  F0F9   	movff	bootLoadApplication@temp,_currentAddr1
 14821                           
 14822                           ; BSR set to: 57
 14823                           ;../app/app_src/application.c: 1320:     currentNetID = DATAEE_ReadByte_Platform(0 + 0 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1);
 14824  0023B8  0E00               	movlw	0
 14825  0023BA  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14826  0023BC  0E19               	movlw	25
 14827  0023BE  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14828  0023C0  EC8C  F02E         	call	_DATAEE_ReadByte_Platform	;wreg free
 14829  0023C4  0100               	movlb	0	; () banked
 14830  0023C6  6FF8               	movwf	_currentNetID& (0+255),b
 14831                           
 14832                           ; BSR set to: 0
 14833                           ;../app/app_src/application.c: 1323:     for(i = 0; i < 16; i++){
 14834  0023C8  0E00               	movlw	0
 14835  0023CA  6E36               	movwf	bootLoadApplication@i^0,c
 14836  0023CC                     l17300:
 14837                           
 14838                           ;../app/app_src/application.c: 1324:         aes_key[i] = DATAEE_ReadByte_Platform(0 + 0
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i);
 14839  0023CC  0E14               	movlw	low _aes_key
 14840  0023CE  2436               	addwf	bootLoadApplication@i^0,w,c
 14841  0023D0  6ED9               	movwf	fsr2l,c
 14842  0023D2  6ADA               	clrf	fsr2h,c
 14843  0023D4  0E02               	movlw	high _aes_key
 14844  0023D6  22DA               	addwfc	fsr2h,f,c
 14845  0023D8  0E09               	movlw	9
 14846  0023DA  2436               	addwf	bootLoadApplication@i^0,w,c
 14847  0023DC  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14848  0023DE  6A07               	clrf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14849  0023E0  0E00               	movlw	0
 14850  0023E2  2207               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,f,c
 14851  0023E4  EC8C  F02E         	call	_DATAEE_ReadByte_Platform	;wreg free
 14852  0023E8  6EDF               	movwf	indf2,c
 14853                           
 14854                           ;../app/app_src/application.c: 1325:     }
 14855  0023EA  2A36               	incf	bootLoadApplication@i^0,f,c
 14856  0023EC  0E0F               	movlw	15
 14857  0023EE  6436               	cpfsgt	bootLoadApplication@i^0,c
 14858  0023F0  D7ED               	goto	l17300
 14859                           
 14860                           ;../app/app_src/application.c: 1326:     for(i = 0; i < 16; i++){
 14861  0023F2  0E00               	movlw	0
 14862  0023F4  6E36               	movwf	bootLoadApplication@i^0,c
 14863  0023F6                     l17312:
 14864                           
 14865                           ;../app/app_src/application.c: 1327:         net_key[i] = DATAEE_ReadByte_Platform(0 + 0
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i);
 14866  0023F6  0E79               	movlw	low _net_key
 14867  0023F8  2436               	addwf	bootLoadApplication@i^0,w,c
 14868  0023FA  6ED9               	movwf	fsr2l,c
 14869  0023FC  6ADA               	clrf	fsr2h,c
 14870  0023FE  0E01               	movlw	high _net_key
 14871  002400  22DA               	addwfc	fsr2h,f,c
 14872  002402  0E23               	movlw	35
 14873  002404  2436               	addwf	bootLoadApplication@i^0,w,c
 14874  002406  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14875  002408  6A07               	clrf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14876  00240A  0E00               	movlw	0
 14877  00240C  2207               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,f,c
 14878  00240E  EC8C  F02E         	call	_DATAEE_ReadByte_Platform	;wreg free
 14879  002412  6EDF               	movwf	indf2,c
 14880                           
 14881                           ;../app/app_src/application.c: 1328:     }
 14882  002414  2A36               	incf	bootLoadApplication@i^0,f,c
 14883  002416  0E0F               	movlw	15
 14884  002418  6436               	cpfsgt	bootLoadApplication@i^0,c
 14885  00241A  D7ED               	goto	l17312
 14886                           
 14887                           ;../app/app_src/application.c: 1335:     sinkAddr0 = DATAEE_ReadByte_Platform(0 + 0 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1);
 14888  00241C  0E00               	movlw	0
 14889  00241E  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14890  002420  0E1A               	movlw	26
 14891  002422  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14892  002424  EC8C  F02E         	call	_DATAEE_ReadByte_Platform	;wreg free
 14893  002428  0100               	movlb	0	; () banked
 14894  00242A  6FE6               	movwf	_sinkAddr0& (0+255),b
 14895                           
 14896                           ;../app/app_src/application.c: 1336:     sinkAddr1 = DATAEE_ReadByte_Platform(0 + 0 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1);
 14897  00242C  0E00               	movlw	0
 14898  00242E  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14899  002430  0E1B               	movlw	27
 14900  002432  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14901  002434  EC8C  F02E         	call	_DATAEE_ReadByte_Platform	;wreg free
 14902  002438  0100               	movlb	0	; () banked
 14903  00243A  6FE5               	movwf	_sinkAddr1& (0+255),b
 14904                           
 14905                           ;../app/app_src/application.c: 1339:     channel = DATAEE_ReadByte_Platform(0 + 0 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1);
 14906  00243C  0E00               	movlw	0
 14907  00243E  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14908  002440  0E1C               	movlw	28
 14909  002442  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14910  002444  EC8C  F02E         	call	_DATAEE_ReadByte_Platform	;wreg free
 14911  002448  0100               	movlb	0	; () banked
 14912  00244A  6FD6               	movwf	_channel& (0+255),b
 14913                           
 14914                           ; BSR set to: 0
 14915                           ;../app/app_src/application.c: 1340:     if(channel > sizeof(fhssList)){
 14916  00244C  0EFC               	movlw	252
 14917  00244E  65D6               	cpfsgt	_channel& (0+255),b
 14918  002450  D00B               	goto	l17326
 14919                           
 14920                           ; BSR set to: 0
 14921                           ;../app/app_src/application.c: 1341:         channel = 0;
 14922  002452  0E00               	movlw	0
 14923  002454  6FD6               	movwf	_channel& (0+255),b
 14924                           
 14925                           ; BSR set to: 0
 14926                           ;../app/app_src/application.c: 1342:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1,channel);
 14927  002456  0E00               	movlw	0
 14928  002458  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 14929  00245A  0E1C               	movlw	28
 14930  00245C  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 14931  00245E  0060  F358  F008   	movff	_channel,DATAEE_WriteByte_Platform@data
 14932  002464  EC82  F045         	call	_DATAEE_WriteByte_Platform	;wreg free
 14933  002468                     l17326:
 14934                           
 14935                           ;../app/app_src/application.c: 1346:     TXPower = DATAEE_ReadByte_Platform(0 + 0 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1);
 14936  002468  0E00               	movlw	0
 14937  00246A  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14938  00246C  0E1D               	movlw	29
 14939  00246E  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14940  002470  EC8C  F02E         	call	_DATAEE_ReadByte_Platform	;wreg free
 14941  002474  0100               	movlb	0	; () banked
 14942  002476  6FD4               	movwf	_TXPower& (0+255),b
 14943                           
 14944                           ; BSR set to: 0
 14945                           ;../app/app_src/application.c: 1347:     if((TXPower < 2) || (TXPower > 13)){
 14946  002478  0E01               	movlw	1
 14947  00247A  65D4               	cpfsgt	_TXPower& (0+255),b
 14948  00247C  D003               	goto	u17920
 14949                           
 14950                           ; BSR set to: 0
 14951  00247E  0E0D               	movlw	13
 14952  002480  65D4               	cpfsgt	_TXPower& (0+255),b
 14953  002482  D00B               	goto	l17336
 14954  002484                     u17920:
 14955                           
 14956                           ; BSR set to: 0
 14957                           ;../app/app_src/application.c: 1348:         TXPower = 13;
 14958  002484  0E0D               	movlw	13
 14959  002486  6FD4               	movwf	_TXPower& (0+255),b
 14960                           
 14961                           ; BSR set to: 0
 14962                           ;../app/app_src/application.c: 1349:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1,TXPower);
 14963  002488  0E00               	movlw	0
 14964  00248A  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 14965  00248C  0E1D               	movlw	29
 14966  00248E  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 14967  002490  0060  F350  F008   	movff	_TXPower,DATAEE_WriteByte_Platform@data
 14968  002496  EC82  F045         	call	_DATAEE_WriteByte_Platform	;wreg free
 14969  00249A                     l17336:
 14970                           
 14971                           ;../app/app_src/application.c: 1353:     current_sf = DATAEE_ReadByte_Platform(0 + 0 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 14972  00249A  0E00               	movlw	0
 14973  00249C  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14974  00249E  0E21               	movlw	33
 14975  0024A0  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14976  0024A2  EC8C  F02E         	call	_DATAEE_ReadByte_Platform	;wreg free
 14977  0024A6  0100               	movlb	0	; () banked
 14978  0024A8  6FD7               	movwf	_current_sf& (0+255),b
 14979                           
 14980                           ; BSR set to: 0
 14981                           ;../app/app_src/application.c: 1354:     if((current_sf < 7) || (current_sf > 12)){
 14982  0024AA  0E06               	movlw	6
 14983  0024AC  65D7               	cpfsgt	_current_sf& (0+255),b
 14984  0024AE  D003               	goto	u17940
 14985                           
 14986                           ; BSR set to: 0
 14987  0024B0  0E0C               	movlw	12
 14988  0024B2  65D7               	cpfsgt	_current_sf& (0+255),b
 14989  0024B4  D00B               	goto	l17346
 14990  0024B6                     u17940:
 14991                           
 14992                           ; BSR set to: 0
 14993                           ;../app/app_src/application.c: 1355:         current_sf = 7;
 14994  0024B6  0E07               	movlw	7
 14995  0024B8  6FD7               	movwf	_current_sf& (0+255),b
 14996                           
 14997                           ; BSR set to: 0
 14998                           ;../app/app_src/application.c: 1356:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, current_sf);
 14999  0024BA  0E00               	movlw	0
 15000  0024BC  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 15001  0024BE  0E21               	movlw	33
 15002  0024C0  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 15003  0024C2  0060  F35C  F008   	movff	_current_sf,DATAEE_WriteByte_Platform@data
 15004  0024C8  EC82  F045         	call	_DATAEE_WriteByte_Platform	;wreg free
 15005  0024CC                     l17346:
 15006                           
 15007                           ;../app/app_src/application.c: 1360:     RSSITarget = DATAEE_ReadByte_Platform(0 + 0 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 15008  0024CC  0E00               	movlw	0
 15009  0024CE  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 15010  0024D0  0E1E               	movlw	30
 15011  0024D2  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 15012  0024D4  EC8C  F02E         	call	_DATAEE_ReadByte_Platform	;wreg free
 15013  0024D8  0100               	movlb	0	; () banked
 15014  0024DA  6FF7               	movwf	_RSSITarget& (0+255),b
 15015                           
 15016                           ; BSR set to: 0
 15017                           ;../app/app_src/application.c: 1361:     if((RSSITarget >= -30) || (RSSITarget < -120)){
 15018  0024DC  51F7               	movf	_RSSITarget& (0+255),w,b
 15019  0024DE  0A80               	xorlw	128
 15020  0024E0  0F9E               	addlw	158
 15021  0024E2  B0D8               	btfsc	status,0,c
 15022  0024E4  D005               	goto	u17960
 15023                           
 15024                           ; BSR set to: 0
 15025  0024E6  51F7               	movf	_RSSITarget& (0+255),w,b
 15026  0024E8  0A80               	xorlw	128
 15027  0024EA  0FF8               	addlw	248
 15028  0024EC  B0D8               	btfsc	status,0,c
 15029  0024EE  D00B               	goto	l17356
 15030  0024F0                     u17960:
 15031                           
 15032                           ; BSR set to: 0
 15033                           ;../app/app_src/application.c: 1362:         RSSITarget = -80;
 15034  0024F0  0EB0               	movlw	176
 15035  0024F2  6FF7               	movwf	_RSSITarget& (0+255),b
 15036                           
 15037                           ; BSR set to: 0
 15038                           ;../app/app_src/application.c: 1363:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1,RSSITarget);
 15039  0024F4  0E00               	movlw	0
 15040  0024F6  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 15041  0024F8  0E1E               	movlw	30
 15042  0024FA  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 15043  0024FC  0060  F3DC  F008   	movff	_RSSITarget,DATAEE_WriteByte_Platform@data
 15044  002502  EC82  F045         	call	_DATAEE_WriteByte_Platform	;wreg free
 15045  002506                     l17356:
 15046                           
 15047                           ;../app/app_src/application.c: 1367:     i = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1);
 15048  002506  0E00               	movlw	0
 15049  002508  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 15050  00250A  0E1F               	movlw	31
 15051  00250C  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 15052  00250E  EC8C  F02E         	call	_DATAEE_ReadByte_Platform	;wreg free
 15053  002512  6E36               	movwf	bootLoadApplication@i^0,c
 15054                           
 15055                           ;../app/app_src/application.c: 1368:     if((i > UART_9BIT_EVEN_PARITY) | (UART_7BIT_MOD
      +                          E == i)){
 15056  002514  0E04               	movlw	4
 15057  002516  6036               	cpfslt	bootLoadApplication@i^0,c
 15058  002518  D003               	goto	u17980
 15059  00251A  0436               	decf	bootLoadApplication@i^0,w,c
 15060  00251C  A4D8               	btfss	status,2,c
 15061  00251E  D00A               	goto	l17366
 15062  002520                     u17980:
 15063                           
 15064                           ;../app/app_src/application.c: 1369:         i = UART_9BIT_EVEN_PARITY;
 15065  002520  0E03               	movlw	3
 15066  002522  6E36               	movwf	bootLoadApplication@i^0,c
 15067                           
 15068                           ;../app/app_src/application.c: 1370:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1,UART_9BIT_EVEN_PARITY);
 15069  002524  0E00               	movlw	0
 15070  002526  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 15071  002528  0E1F               	movlw	31
 15072  00252A  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 15073  00252C  0E03               	movlw	3
 15074  00252E  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
 15075  002530  EC82  F045         	call	_DATAEE_WriteByte_Platform	;wreg free
 15076  002534                     l17366:
 15077                           
 15078                           ;../app/app_src/application.c: 1373:     set_parity(i);
 15079  002534  5036               	movf	bootLoadApplication@i^0,w,c
 15080  002536  ECFD  F041         	call	_set_parity
 15081                           
 15082                           ;../app/app_src/application.c: 1376:     i = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 15083  00253A  0E00               	movlw	0
 15084  00253C  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 15085  00253E  0E20               	movlw	32
 15086  002540  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 15087  002542  EC8C  F02E         	call	_DATAEE_ReadByte_Platform	;wreg free
 15088  002546  6E36               	movwf	bootLoadApplication@i^0,c
 15089                           
 15090                           ;../app/app_src/application.c: 1377:     if(i > UART_BAUD_19200){
 15091  002548  0E01               	movlw	1
 15092  00254A  6436               	cpfsgt	bootLoadApplication@i^0,c
 15093  00254C  D00A               	goto	l17376
 15094                           
 15095                           ;../app/app_src/application.c: 1378:         i = UART_BAUD_19200;
 15096  00254E  0E01               	movlw	1
 15097  002550  6E36               	movwf	bootLoadApplication@i^0,c
 15098                           
 15099                           ;../app/app_src/application.c: 1379:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1,UART_BAUD_19200);
 15100  002552  0E00               	movlw	0
 15101  002554  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 15102  002556  0E20               	movlw	32
 15103  002558  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 15104  00255A  0E01               	movlw	1
 15105  00255C  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
 15106  00255E  EC82  F045         	call	_DATAEE_WriteByte_Platform	;wreg free
 15107  002562                     l17376:
 15108                           
 15109                           ;../app/app_src/application.c: 1381:     set_uart_baud(i);
 15110  002562  5036               	movf	bootLoadApplication@i^0,w,c
 15111  002564  EC3A  F034         	call	_set_uart_baud
 15112                           
 15113                           ;../app/app_src/application.c: 1420:     for(uint8_t buf_id = 0; buf_id < 4; buf_id++){
 15114  002568  0E00               	movlw	0
 15115  00256A  6E32               	movwf	bootLoadApplication@buf_id^0,c
 15116  00256C                     l17382:
 15117                           
 15118                           ;../app/app_src/application.c: 1421:         tx_buffer[buf_id].free = 1;
 15119  00256C  5032               	movf	bootLoadApplication@buf_id^0,w,c
 15120  00256E  0D83               	mullw	131
 15121  002570  0E6A               	movlw	low _tx_buffer
 15122  002572  24F3               	addwf	243,w,c
 15123  002574  6ED9               	movwf	fsr2l,c
 15124  002576  0E08               	movlw	high _tx_buffer
 15125  002578  20F4               	addwfc	prodh,w,c
 15126  00257A  6EDA               	movwf	fsr2h,c
 15127  00257C  84DF               	bsf	indf2,2,c
 15128                           
 15129                           ;../app/app_src/application.c: 1422:     }
 15130  00257E  2A32               	incf	bootLoadApplication@buf_id^0,f,c
 15131  002580  0E03               	movlw	3
 15132  002582  6432               	cpfsgt	bootLoadApplication@buf_id^0,c
 15133  002584  D7F3               	goto	l17382
 15134                           
 15135                           ;../app/app_src/application.c: 1423:     for(uint8_t buf_id = 0; buf_id < 4; buf_id++){
 15136  002586  0E00               	movlw	0
 15137  002588  6E33               	movwf	bootLoadApplication@buf_id_879^0,c
 15138  00258A                     l17394:
 15139                           
 15140                           ;../app/app_src/application.c: 1424:         rx_buffer[buf_id].free = 1;
 15141  00258A  5033               	movf	bootLoadApplication@buf_id_879^0,w,c
 15142  00258C  0D7A               	mullw	122
 15143  00258E  0E76               	movlw	low _rx_buffer
 15144  002590  24F3               	addwf	243,w,c
 15145  002592  6ED9               	movwf	fsr2l,c
 15146  002594  0E0A               	movlw	high _rx_buffer
 15147  002596  20F4               	addwfc	prodh,w,c
 15148  002598  6EDA               	movwf	fsr2h,c
 15149  00259A  80DF               	bsf	indf2,0,c
 15150                           
 15151                           ;../app/app_src/application.c: 1425:     }
 15152  00259C  2A33               	incf	bootLoadApplication@buf_id_879^0,f,c
 15153  00259E  0E03               	movlw	3
 15154  0025A0  6433               	cpfsgt	bootLoadApplication@buf_id_879^0,c
 15155  0025A2  D7F3               	goto	l17394
 15156                           
 15157                           ;../app/app_src/application.c: 1426:     CircularBufferInit(&rx_buffer_queue_context,&rx
      +                          _buffer_queue,
 15158  0025A4  0EC6               	movlw	low _rx_buffer_queue_context
 15159  0025A6  6E09               	movwf	CircularBufferInit@ctx^0,c
 15160  0025A8  0E01               	movlw	high _rx_buffer_queue_context
 15161  0025AA  6E0A               	movwf	(CircularBufferInit@ctx+1)^0,c
 15162  0025AC  0ED8               	movlw	low _rx_buffer_queue
 15163  0025AE  6E0B               	movwf	CircularBufferInit@buf^0,c
 15164  0025B0  0E01               	movlw	high _rx_buffer_queue
 15165  0025B2  6E0C               	movwf	(CircularBufferInit@buf+1)^0,c
 15166  0025B4  0E00               	movlw	0
 15167  0025B6  6E0E               	movwf	(CircularBufferInit@buf_size+1)^0,c
 15168  0025B8  0E04               	movlw	4
 15169  0025BA  6E0D               	movwf	CircularBufferInit@buf_size^0,c
 15170  0025BC  0E00               	movlw	0
 15171  0025BE  6E10               	movwf	(CircularBufferInit@element_size+1)^0,c
 15172  0025C0  0E01               	movlw	1
 15173  0025C2  6E0F               	movwf	CircularBufferInit@element_size^0,c
 15174  0025C4  ECA7  F037         	call	_CircularBufferInit	;wreg free
 15175                           
 15176                           ;../app/app_src/application.c: 1428:     temp = (currentAddr0 << 8) | currentAddr1;
 15177  0025C8  0100               	movlb	0	; () banked
 15178  0025CA  51F9               	movf	_currentAddr1& (0+255),w,b
 15179  0025CC  0060  F3E8  F030   	movff	_currentAddr0,??_bootLoadApplication
 15180  0025D2  6A31               	clrf	(??_bootLoadApplication+1)^0,c
 15181  0025D4  0060  F0C0  F031   	movff	??_bootLoadApplication,??_bootLoadApplication+1
 15182  0025DA  6A30               	clrf	??_bootLoadApplication^0,c
 15183  0025DC  1030               	iorwf	??_bootLoadApplication^0,w,c
 15184  0025DE  6E34               	movwf	bootLoadApplication@temp^0,c
 15185  0025E0  5031               	movf	(??_bootLoadApplication+1)^0,w,c
 15186  0025E2  6E35               	movwf	(bootLoadApplication@temp+1)^0,c
 15187                           
 15188                           ; BSR set to: 0
 15189                           ;../app/app_src/application.c: 1429:     if(temp > 0x8000){
 15190  0025E4  0434               	decf	bootLoadApplication@temp^0,w,c
 15191  0025E6  0E80               	movlw	128
 15192  0025E8  5835               	subwfb	(bootLoadApplication@temp+1)^0,w,c
 15193  0025EA  A0D8               	btfss	status,0,c
 15194  0025EC  D00A               	goto	l17412
 15195                           
 15196                           ; BSR set to: 0
 15197                           ;../app/app_src/application.c: 1430:         temp -= 0x8000;
 15198  0025EE  0E00               	movlw	0
 15199  0025F0  5E34               	subwf	bootLoadApplication@temp^0,f,c
 15200  0025F2  0E80               	movlw	128
 15201  0025F4  5A35               	subwfb	(bootLoadApplication@temp+1)^0,f,c
 15202                           
 15203                           ; BSR set to: 0
 15204                           ;../app/app_src/application.c: 1431:         currentAddr0 = (temp >> 8) & 0xFF;
 15205  0025F6  0060  F0D4  F0FA   	movff	bootLoadApplication@temp+1,_currentAddr0
 15206                           
 15207                           ; BSR set to: 0
 15208                           ;../app/app_src/application.c: 1432:         currentAddr1 = temp & 0xFF;
 15209  0025FC  0060  F0D0  F0F9   	movff	bootLoadApplication@temp,_currentAddr1
 15210  002602                     l17412:
 15211                           
 15212                           ; BSR set to: 0
 15213                           ;../app/app_src/application.c: 1434:     NWK_SetAddr(temp);
 15214  002602  0060  F0D0  F004   	movff	bootLoadApplication@temp,NWK_SetAddr@addr
 15215  002608  0060  F0D4  F005   	movff	bootLoadApplication@temp+1,NWK_SetAddr@addr+1
 15216  00260E  EC49  F04B         	call	_NWK_SetAddr	;wreg free
 15217                           
 15218                           ; BSR set to: 0
 15219                           ;../app/app_src/application.c: 1435:     NWK_SetPanId(0x1234);
 15220  002612  0E12               	movlw	18
 15221  002614  6E05               	movwf	(NWK_SetPanId@panId+1)^0,c
 15222  002616  0E34               	movlw	52
 15223  002618  6E04               	movwf	NWK_SetPanId@panId^0,c
 15224  00261A  EC3A  F04B         	call	_NWK_SetPanId	;wreg free
 15225                           
 15226                           ; BSR set to: 0
 15227                           ;../app/app_src/application.c: 1436:     NWK_SetSecurityKey(net_key);
 15228  00261E  0E79               	movlw	low _net_key
 15229  002620  6E13               	movwf	NWK_SetSecurityKey@key^0,c
 15230  002622  0E01               	movlw	high _net_key
 15231  002624  6E14               	movwf	(NWK_SetSecurityKey@key+1)^0,c
 15232  002626  EC82  F04A         	call	_NWK_SetSecurityKey	;wreg free
 15233                           
 15234                           ;../app/app_src/application.c: 1437:     NWK_OpenEndpoint(ASCII_EP, appDataInd);
 15235  00262A  0E6C               	movlw	low _appDataInd
 15236  00262C  6E02               	movwf	NWK_OpenEndpoint@handler^0,c
 15237  00262E  0E71               	movlw	high _appDataInd
 15238  002630  6E03               	movwf	(NWK_OpenEndpoint@handler+1)^0,c
 15239  002632  0E01               	movlw	1
 15240  002634  ECF9  F04A         	call	_NWK_OpenEndpoint
 15241                           
 15242                           ;../app/app_src/application.c: 1438:     PHY_SetChannel(0x00);
 15243  002638  0E00               	movlw	0
 15244  00263A  ECC6  F046         	call	_PHY_SetChannel
 15245                           
 15246                           ; BSR set to: 61
 15247                           ;../app/app_src/application.c: 1439:     PHY_SetRxState(1);
 15248  00263E  0E01               	movlw	1
 15249  002640  ECF9  F04C         	call	_PHY_SetRxState
 15250                           
 15251                           ; BSR set to: 61
 15252  002644  0012               	return		;funcret
 15253  002646                     __end_of_bootLoadApplication:
 15254                           	opt callstack 0
 15255                           
 15256 ;; *************** function _set_uart_baud *****************
 15257 ;; Defined at:
 15258 ;;		line 163 in file "../app/app_src/application.c"
 15259 ;; Parameters:    Size  Location     Type
 15260 ;;  i               1    wreg     unsigned char 
 15261 ;; Auto vars:     Size  Location     Type
 15262 ;;  i               1    3[COMRAM] unsigned char 
 15263 ;; Return value:  Size  Location     Type
 15264 ;;                  1    wreg      unsigned char 
 15265 ;; Registers used:
 15266 ;;		wreg, status,2, status,0
 15267 ;; Tracked objects:
 15268 ;;		On entry : 0/0
 15269 ;;		On exit  : 3F/3D
 15270 ;;		Unchanged: 0/0
 15271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15273 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15274 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15275 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15276 ;;Total ram usage:        3 bytes
 15277 ;; Hardware stack levels used:    1
 15278 ;; Hardware stack levels required when called:    7
 15279 ;; This function calls:
 15280 ;;		Nothing
 15281 ;; This function is called by:
 15282 ;;		_bootLoadApplication
 15283 ;; This function uses a non-reentrant model
 15284 ;;
 15285                           
 15286                           	psect	text83
 15287  006874                     __ptext83:
 15288                           	opt callstack 0
 15289  006874                     _set_uart_baud:
 15290                           	opt callstack 22
 15291                           
 15292                           ; BSR set to: 61
 15293                           ;incstack = 0
 15294                           ;set_uart_baud@i stored from wreg
 15295  006874  6E04               	movwf	set_uart_baud@i^0,c
 15296                           
 15297                           ;../app/app_src/application.c: 163: static uint8_t set_uart_baud(uint8_t i);../app/app_s
      +                          rc/application.c: 164: {;../app/app_src/application.c: 165:     U1CON1 &= ~(1<<7);
 15298  006876  013D               	movlb	61	; () banked
 15299  006878  9FF3               	bcf	243,7,b	;volatile
 15300                           
 15301                           ;../app/app_src/application.c: 166:     switch(i)
 15302  00687A  D048               	goto	l13280
 15303  00687C                     l13228:
 15304                           
 15305                           ; BSR set to: 61
 15306                           ;../app/app_src/application.c: 170:             U1CON0 &=~ (1<<7);
 15307  00687C  9FF2               	bcf	242,7,b	;volatile
 15308                           
 15309                           ; BSR set to: 61
 15310                           ;../app/app_src/application.c: 171:             U1BRGL = 0xA0;
 15311  00687E  0EA0               	movlw	160
 15312  006880  6FF5               	movwf	245,b	;volatile
 15313                           
 15314                           ; BSR set to: 61
 15315                           ;../app/app_src/application.c: 172:             U1BRGH = 0x01;
 15316  006882  0E01               	movlw	1
 15317  006884  6FF6               	movwf	246,b	;volatile
 15318                           
 15319                           ; BSR set to: 61
 15320                           ;../app/app_src/application.c: 173:             current_baud_rate = 9600;
 15321  006886  0E80               	movlw	128
 15322  006888  0101               	movlb	1	; () banked
 15323  00688A  6F2A               	movwf	_current_baud_rate& (0+255),b
 15324  00688C  0E25               	movlw	37
 15325  00688E  6F2B               	movwf	(_current_baud_rate+1)& (0+255),b
 15326  006890  0E00               	movlw	0
 15327  006892  6F2C               	movwf	(_current_baud_rate+2)& (0+255),b
 15328                           
 15329                           ; BSR set to: 1
 15330                           ;../app/app_src/application.c: 174:             uart_baud_rate = UART_BAUD_9600;
 15331  006894  0E00               	movlw	0
 15332  006896  D037               	goto	L9
 15333  006898                     l13238:
 15334                           
 15335                           ; BSR set to: 61
 15336                           ;../app/app_src/application.c: 178:             U1CON0 &=~ (1<<7);
 15337  006898  9FF2               	bcf	242,7,b	;volatile
 15338                           
 15339                           ; BSR set to: 61
 15340                           ;../app/app_src/application.c: 179:             U1BRGL = 0xCF;
 15341  00689A  0ECF               	movlw	207
 15342  00689C  6FF5               	movwf	245,b	;volatile
 15343                           
 15344                           ; BSR set to: 61
 15345                           ;../app/app_src/application.c: 180:             U1BRGH = 0x00;
 15346  00689E  0E00               	movlw	0
 15347  0068A0  6FF6               	movwf	246,b	;volatile
 15348                           
 15349                           ; BSR set to: 61
 15350                           ;../app/app_src/application.c: 181:             current_baud_rate = 19200;
 15351  0068A2  0E00               	movlw	0
 15352  0068A4  0101               	movlb	1	; () banked
 15353  0068A6  6F2A               	movwf	_current_baud_rate& (0+255),b
 15354  0068A8  0E4B               	movlw	75
 15355  0068AA  6F2B               	movwf	(_current_baud_rate+1)& (0+255),b
 15356  0068AC  0E00               	movlw	0
 15357  0068AE  6F2C               	movwf	(_current_baud_rate+2)& (0+255),b
 15358                           
 15359                           ; BSR set to: 1
 15360                           ;../app/app_src/application.c: 182:             uart_baud_rate = UART_BAUD_19200;
 15361  0068B0  0E01               	movlw	1
 15362  0068B2  D029               	goto	L9
 15363  0068B4                     l13248:
 15364                           
 15365                           ; BSR set to: 61
 15366                           ;../app/app_src/application.c: 186:             U1CON0 &=~ (1<<7);
 15367  0068B4  9FF2               	bcf	242,7,b	;volatile
 15368                           
 15369                           ; BSR set to: 61
 15370                           ;../app/app_src/application.c: 187:             U1BRGL = 0x67;
 15371  0068B6  0E67               	movlw	103
 15372  0068B8  6FF5               	movwf	245,b	;volatile
 15373                           
 15374                           ; BSR set to: 61
 15375                           ;../app/app_src/application.c: 188:             U1BRGH = 0x00;
 15376  0068BA  0E00               	movlw	0
 15377  0068BC  6FF6               	movwf	246,b	;volatile
 15378                           
 15379                           ; BSR set to: 61
 15380                           ;../app/app_src/application.c: 189:             current_baud_rate = 38400;
 15381  0068BE  0E00               	movlw	0
 15382  0068C0  0101               	movlb	1	; () banked
 15383  0068C2  6F2A               	movwf	_current_baud_rate& (0+255),b
 15384  0068C4  0E96               	movlw	150
 15385  0068C6  6F2B               	movwf	(_current_baud_rate+1)& (0+255),b
 15386  0068C8  0E00               	movlw	0
 15387  0068CA  6F2C               	movwf	(_current_baud_rate+2)& (0+255),b
 15388                           
 15389                           ; BSR set to: 1
 15390                           ;../app/app_src/application.c: 190:             uart_baud_rate = UART_BAUD_38400;
 15391  0068CC  0E02               	movlw	2
 15392  0068CE  D01B               	goto	L9
 15393  0068D0                     l13258:
 15394                           
 15395                           ; BSR set to: 61
 15396                           ;../app/app_src/application.c: 194:             U1CON0 |= (1<<7);
 15397  0068D0  8FF2               	bsf	242,7,b	;volatile
 15398                           
 15399                           ; BSR set to: 61
 15400                           ;../app/app_src/application.c: 195:             U1BRGL = 0x14;
 15401  0068D2  0E14               	movlw	20
 15402  0068D4  6FF5               	movwf	245,b	;volatile
 15403                           
 15404                           ; BSR set to: 61
 15405                           ;../app/app_src/application.c: 196:             U1BRGH = 0x01;
 15406  0068D6  0E01               	movlw	1
 15407  0068D8  6FF6               	movwf	246,b	;volatile
 15408                           
 15409                           ; BSR set to: 61
 15410                           ;../app/app_src/application.c: 197:             current_baud_rate = 57600;
 15411  0068DA  0E00               	movlw	0
 15412  0068DC  0101               	movlb	1	; () banked
 15413  0068DE  6F2A               	movwf	_current_baud_rate& (0+255),b
 15414  0068E0  0EE1               	movlw	225
 15415  0068E2  6F2B               	movwf	(_current_baud_rate+1)& (0+255),b
 15416  0068E4  0E00               	movlw	0
 15417  0068E6  6F2C               	movwf	(_current_baud_rate+2)& (0+255),b
 15418                           
 15419                           ; BSR set to: 1
 15420                           ;../app/app_src/application.c: 198:             uart_baud_rate = UART_BAUD_57600;
 15421  0068E8  0E03               	movlw	3
 15422  0068EA  D00D               	goto	L9
 15423  0068EC                     l13268:
 15424                           
 15425                           ; BSR set to: 61
 15426                           ;../app/app_src/application.c: 202:             U1CON0 |= (1<<7);
 15427  0068EC  8FF2               	bsf	242,7,b	;volatile
 15428                           
 15429                           ; BSR set to: 61
 15430                           ;../app/app_src/application.c: 203:             U1BRGL = 0x89;
 15431  0068EE  0E89               	movlw	137
 15432  0068F0  6FF5               	movwf	245,b	;volatile
 15433                           
 15434                           ; BSR set to: 61
 15435                           ;../app/app_src/application.c: 204:             U1BRGH = 0x00;
 15436  0068F2  0E00               	movlw	0
 15437  0068F4  6FF6               	movwf	246,b	;volatile
 15438                           
 15439                           ; BSR set to: 61
 15440                           ;../app/app_src/application.c: 205:             current_baud_rate = 115200;
 15441  0068F6  0E00               	movlw	0
 15442  0068F8  0101               	movlb	1	; () banked
 15443  0068FA  6F2A               	movwf	_current_baud_rate& (0+255),b
 15444  0068FC  0EC2               	movlw	194
 15445  0068FE  6F2B               	movwf	(_current_baud_rate+1)& (0+255),b
 15446  006900  0E01               	movlw	1
 15447  006902  6F2C               	movwf	(_current_baud_rate+2)& (0+255),b
 15448                           
 15449                           ; BSR set to: 1
 15450                           ;../app/app_src/application.c: 206:             uart_baud_rate = UART_BAUD_115200;
 15451  006904  0E04               	movlw	4
 15452  006906                     L9:
 15453  006906  0100               	movlb	0	; () banked
 15454  006908  6FEA               	movwf	_uart_baud_rate& (0+255),b
 15455                           
 15456                           ;../app/app_src/application.c: 207:             break;
 15457  00690A  D018               	goto	l13282
 15458  00690C                     l13280:
 15459                           
 15460                           ; BSR set to: 61
 15461  00690C  5004               	movf	set_uart_baud@i^0,w,c
 15462  00690E  6E02               	movwf	??_set_uart_baud^0,c
 15463  006910  6A03               	clrf	(??_set_uart_baud+1)^0,c
 15464                           
 15465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15466                           ; Switch size 1, requested type "simple"
 15467                           ; Number of cases is 1, Range of values is 0 to 0
 15468                           ; switch strategies available:
 15469                           ; Name         Instructions Cycles
 15470                           ; simple_byte            4     3 (average)
 15471                           ;	Chosen strategy is simple_byte
 15472  006912  5003               	movf	(??_set_uart_baud+1)^0,w,c
 15473  006914  0A00               	xorlw	0	; case 0
 15474  006916  A4D8               	btfss	status,2,c
 15475  006918  0012               	return	
 15476                           
 15477                           ; BSR set to: 61
 15478                           ; Switch size 1, requested type "simple"
 15479                           ; Number of cases is 5, Range of values is 0 to 4
 15480                           ; switch strategies available:
 15481                           ; Name         Instructions Cycles
 15482                           ; simple_byte           16     9 (average)
 15483                           ;	Chosen strategy is simple_byte
 15484  00691A  5002               	movf	??_set_uart_baud^0,w,c
 15485  00691C  0A00               	xorlw	0	; case 0
 15486  00691E  B4D8               	btfsc	status,2,c
 15487  006920  D7AD               	goto	l13228
 15488  006922  0A01               	xorlw	1	; case 1
 15489  006924  B4D8               	btfsc	status,2,c
 15490  006926  D7B8               	goto	l13238
 15491  006928  0A03               	xorlw	3	; case 2
 15492  00692A  B4D8               	btfsc	status,2,c
 15493  00692C  D7C3               	goto	l13248
 15494  00692E  0A01               	xorlw	1	; case 3
 15495  006930  B4D8               	btfsc	status,2,c
 15496  006932  D7CE               	goto	l13258
 15497  006934  0A07               	xorlw	7	; case 4
 15498  006936  A4D8               	btfss	status,2,c
 15499  006938  0012               	return	
 15500  00693A  D7D8               	goto	l13268
 15501  00693C                     l13282:
 15502                           
 15503                           ; BSR set to: 0
 15504                           ;../app/app_src/application.c: 211:     U1CON1 |= (1<<7);
 15505  00693C  013D               	movlb	61	; () banked
 15506  00693E  8FF3               	bsf	243,7,b	;volatile
 15507                           
 15508                           ; BSR set to: 61
 15509  006940  0012               	return		;funcret
 15510  006942                     __end_of_set_uart_baud:
 15511                           	opt callstack 0
 15512                           
 15513 ;; *************** function _set_parity *****************
 15514 ;; Defined at:
 15515 ;;		line 119 in file "../app/app_src/application.c"
 15516 ;; Parameters:    Size  Location     Type
 15517 ;;  parity          1    wreg     unsigned char 
 15518 ;; Auto vars:     Size  Location     Type
 15519 ;;  parity          1    3[COMRAM] unsigned char 
 15520 ;; Return value:  Size  Location     Type
 15521 ;;                  1    wreg      unsigned char 
 15522 ;; Registers used:
 15523 ;;		wreg, status,2, status,0
 15524 ;; Tracked objects:
 15525 ;;		On entry : 0/0
 15526 ;;		On exit  : 0/0
 15527 ;;		Unchanged: 0/0
 15528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15531 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15532 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15533 ;;Total ram usage:        3 bytes
 15534 ;; Hardware stack levels used:    1
 15535 ;; Hardware stack levels required when called:    7
 15536 ;; This function calls:
 15537 ;;		Nothing
 15538 ;; This function is called by:
 15539 ;;		_cmdSetParity
 15540 ;;		_bootLoadApplication
 15541 ;; This function uses a non-reentrant model
 15542 ;;
 15543                           
 15544                           	psect	text84
 15545  0083FA                     __ptext84:
 15546                           	opt callstack 0
 15547  0083FA                     _set_parity:
 15548                           	opt callstack 20
 15549                           
 15550                           ; BSR set to: 61
 15551                           ;incstack = 0
 15552                           ;set_parity@parity stored from wreg
 15553  0083FA  6E04               	movwf	set_parity@parity^0,c
 15554                           
 15555                           ;../app/app_src/application.c: 119: static uint8_t set_parity(uint8_t parity);../app/app
      +                          _src/application.c: 120: {;../app/app_src/application.c: 121:     if((parity >= UART_PAR
      +                          ITY_SENTINAL) || (UART_7BIT_MODE == parity)){
 15556  0083FC  0E04               	movlw	4
 15557  0083FE  6004               	cpfslt	set_parity@parity^0,c
 15558  008400  0012               	return	
 15559  008402  0404               	decf	set_parity@parity^0,w,c
 15560  008404  B4D8               	btfsc	status,2,c
 15561  008406  0012               	return	
 15562                           
 15563                           ;../app/app_src/application.c: 124:     U1CON1 &= 0b01111111;
 15564  008408  013D               	movlb	61	; () banked
 15565  00840A  9FF3               	bcf	243,7,b	;volatile
 15566                           
 15567                           ; BSR set to: 61
 15568                           ;../app/app_src/application.c: 125:     U1CON0 &= 0b11110000;
 15569  00840C  0EF0               	movlw	240
 15570  00840E  17F2               	andwf	242,f,b	;volatile
 15571                           
 15572                           ; BSR set to: 61
 15573                           ;../app/app_src/application.c: 126:     U1CON0 |= (parity & 0b00001111);
 15574  008410  5004               	movf	set_parity@parity^0,w,c
 15575  008412  0B0F               	andlw	15
 15576  008414  13F2               	iorwf	242,f,b	;volatile
 15577                           
 15578                           ; BSR set to: 61
 15579                           ;../app/app_src/application.c: 127:     U1CON2 &=~ (0b00110000);
 15580  008416  0ECF               	movlw	207
 15581  008418  17F4               	andwf	244,f,b	;volatile
 15582                           
 15583                           ; BSR set to: 61
 15584                           ;../app/app_src/application.c: 128:     U1CON1 |= 0b10000000;
 15585  00841A  8FF3               	bsf	243,7,b	;volatile
 15586                           
 15587                           ;../app/app_src/application.c: 129:     switch(parity){
 15588  00841C  D00C               	goto	l15866
 15589  00841E                     l15858:
 15590                           
 15591                           ; BSR set to: 61
 15592                           ;../app/app_src/application.c: 131:             uart_parity = UART_8BIT_NO_PARITY;
 15593  00841E  0E00               	movlw	0
 15594  008420  0100               	movlb	0	; () banked
 15595  008422  6FE9               	movwf	_uart_parity& (0+255),b
 15596                           
 15597                           ;../app/app_src/application.c: 135:             break;
 15598  008424  0012               	return	
 15599  008426                     l15860:
 15600                           
 15601                           ; BSR set to: 61
 15602                           ;../app/app_src/application.c: 137:             uart_parity = UART_9BIT_ODD_PARITY;
 15603  008426  0E02               	movlw	2
 15604  008428  0100               	movlb	0	; () banked
 15605  00842A  6FE9               	movwf	_uart_parity& (0+255),b
 15606                           
 15607                           ;../app/app_src/application.c: 141:             break;
 15608  00842C  0012               	return	
 15609  00842E                     l15862:
 15610                           
 15611                           ; BSR set to: 61
 15612                           ;../app/app_src/application.c: 143:             uart_parity = UART_9BIT_EVEN_PARITY;
 15613  00842E  0E03               	movlw	3
 15614  008430  0100               	movlb	0	; () banked
 15615  008432  6FE9               	movwf	_uart_parity& (0+255),b
 15616                           
 15617                           ;../app/app_src/application.c: 147:             break;
 15618  008434  0012               	return	
 15619  008436                     l15866:
 15620                           
 15621                           ; BSR set to: 61
 15622  008436  5004               	movf	set_parity@parity^0,w,c
 15623  008438  6E02               	movwf	??_set_parity^0,c
 15624  00843A  6A03               	clrf	(??_set_parity+1)^0,c
 15625                           
 15626                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15627                           ; Switch size 1, requested type "simple"
 15628                           ; Number of cases is 1, Range of values is 0 to 0
 15629                           ; switch strategies available:
 15630                           ; Name         Instructions Cycles
 15631                           ; simple_byte            4     3 (average)
 15632                           ;	Chosen strategy is simple_byte
 15633  00843C  5003               	movf	(??_set_parity+1)^0,w,c
 15634  00843E  0A00               	xorlw	0	; case 0
 15635  008440  A4D8               	btfss	status,2,c
 15636  008442  D7ED               	goto	l15858
 15637                           
 15638                           ; BSR set to: 61
 15639                           ; Switch size 1, requested type "simple"
 15640                           ; Number of cases is 3, Range of values is 0 to 3
 15641                           ; switch strategies available:
 15642                           ; Name         Instructions Cycles
 15643                           ; simple_byte           10     6 (average)
 15644                           ;	Chosen strategy is simple_byte
 15645  008444  5002               	movf	??_set_parity^0,w,c
 15646  008446  0A00               	xorlw	0	; case 0
 15647  008448  B4D8               	btfsc	status,2,c
 15648  00844A  D7E9               	goto	l15858
 15649  00844C  0A02               	xorlw	2	; case 2
 15650  00844E  B4D8               	btfsc	status,2,c
 15651  008450  D7EA               	goto	l15860
 15652  008452  0A01               	xorlw	1	; case 3
 15653  008454  B4D8               	btfsc	status,2,c
 15654  008456  D7EB               	goto	l15862
 15655  008458  D7E2               	goto	l15858
 15656  00845A                     __end_of_set_parity:
 15657                           	opt callstack 0
 15658                           
 15659 ;; *************** function _loadMACAddr *****************
 15660 ;; Defined at:
 15661 ;;		line 1286 in file "../app/app_src/application.c"
 15662 ;; Parameters:    Size  Location     Type
 15663 ;;		None
 15664 ;; Auto vars:     Size  Location     Type
 15665 ;;  i               1    5[COMRAM] unsigned char 
 15666 ;; Return value:  Size  Location     Type
 15667 ;;                  1    wreg      void 
 15668 ;; Registers used:
 15669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15670 ;; Tracked objects:
 15671 ;;		On entry : 3F/0
 15672 ;;		On exit  : 0/0
 15673 ;;		Unchanged: 0/0
 15674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15678 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15679 ;;Total ram usage:        1 bytes
 15680 ;; Hardware stack levels used:    1
 15681 ;; Hardware stack levels required when called:    8
 15682 ;; This function calls:
 15683 ;;		_DIA_ReadByte
 15684 ;; This function is called by:
 15685 ;;		_bootLoadApplication
 15686 ;; This function uses a non-reentrant model
 15687 ;;
 15688                           
 15689                           	psect	text85
 15690  008E46                     __ptext85:
 15691                           	opt callstack 0
 15692  008E46                     _loadMACAddr:
 15693                           	opt callstack 21
 15694                           
 15695                           ; BSR set to: 0
 15696                           ;../app/app_src/application.c: 1289:     for(uint8_t i = 0; i < sizeof(EUIDbyte);i++){
 15697                           
 15698                           ;incstack = 0
 15699  008E46  0E00               	movlw	0
 15700  008E48  6E06               	movwf	loadMACAddr@i^0,c
 15701  008E4A                     l13460:
 15702                           
 15703                           ;../app/app_src/application.c: 1290:         EUIDbyte[sizeof(EUIDbyte) - 1 - i] = (uint8
      +                          _t)DIA_ReadByte(0x3F0000 + i);
 15704  008E4A  5006               	movf	loadMACAddr@i^0,w,c
 15705  008E4C  08BB               	sublw	low (_EUIDbyte+11)
 15706  008E4E  6ED9               	movwf	fsr2l,c
 15707  008E50  0E00               	movlw	0
 15708  008E52  A0D8               	btfss	status,0,c
 15709  008E54  2AE8               	incf	wreg,f,c
 15710  008E56  0801               	sublw	high (_EUIDbyte+11)
 15711  008E58  6EDA               	movwf	fsr2h,c
 15712  008E5A  0E00               	movlw	0
 15713  008E5C  2406               	addwf	loadMACAddr@i^0,w,c
 15714  008E5E  6E02               	movwf	DIA_ReadByte@flashAddr^0,c
 15715  008E60  6A03               	clrf	(DIA_ReadByte@flashAddr+1)^0,c
 15716  008E62  0E00               	movlw	0
 15717  008E64  2203               	addwfc	(DIA_ReadByte@flashAddr+1)^0,f,c
 15718  008E66  6A04               	clrf	(DIA_ReadByte@flashAddr+2)^0,c
 15719  008E68  0E3F               	movlw	63
 15720  008E6A  2204               	addwfc	(DIA_ReadByte@flashAddr+2)^0,f,c
 15721  008E6C  6A05               	clrf	(DIA_ReadByte@flashAddr+3)^0,c
 15722  008E6E  0E00               	movlw	0
 15723  008E70  2205               	addwfc	(DIA_ReadByte@flashAddr+3)^0,f,c
 15724  008E72  EC71  F04A         	call	_DIA_ReadByte	;wreg free
 15725  008E76  6EDF               	movwf	indf2,c
 15726                           
 15727                           ;../app/app_src/application.c: 1291:     }
 15728  008E78  2A06               	incf	loadMACAddr@i^0,f,c
 15729  008E7A  0E0B               	movlw	11
 15730  008E7C  6406               	cpfsgt	loadMACAddr@i^0,c
 15731  008E7E  D7E5               	goto	l13460
 15732  008E80  0012               	return	
 15733  008E82                     __end_of_loadMACAddr:
 15734                           	opt callstack 0
 15735                           
 15736 ;; *************** function _DIA_ReadByte *****************
 15737 ;; Defined at:
 15738 ;;		line 212 in file "mcc_generated_files/memory.c"
 15739 ;; Parameters:    Size  Location     Type
 15740 ;;  flashAddr       4    1[COMRAM] unsigned long 
 15741 ;; Auto vars:     Size  Location     Type
 15742 ;;		None
 15743 ;; Return value:  Size  Location     Type
 15744 ;;                  1    wreg      unsigned char 
 15745 ;; Registers used:
 15746 ;;		wreg, status,2
 15747 ;; Tracked objects:
 15748 ;;		On entry : 0/0
 15749 ;;		On exit  : 0/0
 15750 ;;		Unchanged: 0/0
 15751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15752 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15755 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15756 ;;Total ram usage:        4 bytes
 15757 ;; Hardware stack levels used:    1
 15758 ;; Hardware stack levels required when called:    7
 15759 ;; This function calls:
 15760 ;;		Nothing
 15761 ;; This function is called by:
 15762 ;;		_loadMACAddr
 15763 ;; This function uses a non-reentrant model
 15764 ;;
 15765                           
 15766                           	psect	text86
 15767  0094E2                     __ptext86:
 15768                           	opt callstack 0
 15769  0094E2                     _DIA_ReadByte:
 15770                           	opt callstack 21
 15771                           
 15772                           ;mcc_generated_files/memory.c: 212: uint8_t DIA_ReadByte(uint32_t flashAddr);mcc_generat
      +                          ed_files/memory.c: 213: {;mcc_generated_files/memory.c: 214:  NVMCON1bits.NVMREG = 1;
 15773                           
 15774                           ;incstack = 0
 15775  0094E2  0139               	movlb	57	; () banked
 15776  0094E4  51E5               	movf	229,w,b	;volsfr
 15777  0094E6  0B3F               	andlw	-193
 15778  0094E8  0940               	iorlw	64
 15779  0094EA  6FE5               	movwf	229,b	;volsfr
 15780                           
 15781                           ; BSR set to: 57
 15782                           ;mcc_generated_files/memory.c: 215:     TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 
      +                          16);
 15783  0094EC  0060  F013  FFF8   	movff	DIA_ReadByte@flashAddr+2,tblptru	;volatile
 15784                           
 15785                           ; BSR set to: 57
 15786                           ;mcc_generated_files/memory.c: 216:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8
      +                          );
 15787  0094F2  0060  F00F  FFF7   	movff	DIA_ReadByte@flashAddr+1,tblptrh	;volatile
 15788                           
 15789                           ; BSR set to: 57
 15790                           ;mcc_generated_files/memory.c: 217:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 15791  0094F8  0060  F00B  FFF6   	movff	DIA_ReadByte@flashAddr,tblptrl	;volatile
 15792  0094FE  0008               	tblrd		*	;# 
 15793                           
 15794                           ;mcc_generated_files/memory.c: 221:     return (TABLAT);
 15795  009500  50F5               	movf	245,w,c	;volatile
 15796  009502  0012               	return		;funcret
 15797  009504                     __end_of_DIA_ReadByte:
 15798                           	opt callstack 0
 15799                           
 15800 ;; *************** function _crc16_app *****************
 15801 ;; Defined at:
 15802 ;;		line 4 in file "../app/app_src/crc.c"
 15803 ;; Parameters:    Size  Location     Type
 15804 ;;  dptr            2   18[COMRAM] PTR void 
 15805 ;;		 -> EUIDbyte(12), 
 15806 ;;  len             2   20[COMRAM] unsigned short 
 15807 ;;  seed            2   22[COMRAM] unsigned short 
 15808 ;; Auto vars:     Size  Location     Type
 15809 ;;  i               2   28[COMRAM] unsigned short 
 15810 ;;  ptr             2   26[COMRAM] PTR unsigned char 
 15811 ;;		 -> EUIDbyte(12), 
 15812 ;;  result          2   24[COMRAM] unsigned short 
 15813 ;; Return value:  Size  Location     Type
 15814 ;;                  2   18[COMRAM] unsigned short 
 15815 ;; Registers used:
 15816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15817 ;; Tracked objects:
 15818 ;;		On entry : 0/0
 15819 ;;		On exit  : 3F/39
 15820 ;;		Unchanged: 0/0
 15821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15822 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15823 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15825 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15826 ;;Total ram usage:       12 bytes
 15827 ;; Hardware stack levels used:    1
 15828 ;; Hardware stack levels required when called:    9
 15829 ;; This function calls:
 15830 ;;		_CRC_8BitDataWrite
 15831 ;;		_CRC_CalculatedResultGet
 15832 ;; This function is called by:
 15833 ;;		_bootLoadApplication
 15834 ;; This function uses a non-reentrant model
 15835 ;;
 15836                           
 15837                           	psect	text87
 15838  007C2C                     __ptext87:
 15839                           	opt callstack 0
 15840  007C2C                     _crc16_app:
 15841                           	opt callstack 20
 15842                           
 15843                           ;../app/app_src/crc.c: 5:     uint8_t* ptr = (uint8_t*)dptr;
 15844                           
 15845                           ;incstack = 0
 15846  007C2C  0060  F04C  F01B   	movff	crc16_app@dptr,crc16_app@ptr
 15847  007C32  0060  F050  F01C   	movff	crc16_app@dptr+1,crc16_app@ptr+1
 15848                           
 15849                           ;../app/app_src/crc.c: 6:     uint16_t result;;../app/app_src/crc.c: 8:     CRCACCL = se
      +                          ed;
 15850  007C38  0060  F05F  F962   	movff	crc16_app@seed,14690	;volatile
 15851                           
 15852                           ;../app/app_src/crc.c: 9:     CRCACCH = seed >> 8;
 15853  007C3E  0060  F063  F963   	movff	crc16_app@seed+1,14691	;volatile
 15854                           
 15855                           ;../app/app_src/crc.c: 12:     CRCCON0bits.EN = 1;
 15856  007C44  0139               	movlb	57	; () banked
 15857  007C46  8F68               	bsf	104,7,b	;volatile
 15858                           
 15859                           ; BSR set to: 57
 15860                           ;../app/app_src/crc.c: 13:     CRCCON0bits.CRCGO = 1;
 15861  007C48  8D68               	bsf	104,6,b	;volatile
 15862                           
 15863                           ; BSR set to: 57
 15864                           ;../app/app_src/crc.c: 14:     for(uint16_t i = 0; i < len; i++ )
 15865  007C4A  0E00               	movlw	0
 15866  007C4C  6E1E               	movwf	(crc16_app@i+1)^0,c
 15867  007C4E  0E00               	movlw	0
 15868  007C50  6E1D               	movwf	crc16_app@i^0,c
 15869  007C52  D00F               	goto	l13484
 15870  007C54                     l646:
 15871                           
 15872                           ; BSR set to: 57
 15873  007C54  B168               	btfsc	104,0,b	;volatile
 15874  007C56  D7FE               	goto	l646
 15875                           
 15876                           ; BSR set to: 57
 15877                           ;../app/app_src/crc.c: 17:         CRC_8BitDataWrite(*ptr);
 15878  007C58  0060  F06F  FFD9   	movff	crc16_app@ptr,fsr2l
 15879  007C5E  0060  F073  FFDA   	movff	crc16_app@ptr+1,fsr2h
 15880  007C64  50DF               	movf	indf2,w,c
 15881  007C66  EC86  F04C         	call	_CRC_8BitDataWrite
 15882                           
 15883                           ; BSR set to: 57
 15884                           ;../app/app_src/crc.c: 18:         ptr++;
 15885  007C6A  4A1B               	infsnz	crc16_app@ptr^0,f,c
 15886  007C6C  2A1C               	incf	(crc16_app@ptr+1)^0,f,c
 15887                           
 15888                           ; BSR set to: 57
 15889                           ;../app/app_src/crc.c: 19:     }
 15890  007C6E  4A1D               	infsnz	crc16_app@i^0,f,c
 15891  007C70  2A1E               	incf	(crc16_app@i+1)^0,f,c
 15892  007C72                     l13484:
 15893                           
 15894                           ; BSR set to: 57
 15895  007C72  5015               	movf	crc16_app@len^0,w,c
 15896  007C74  5C1D               	subwf	crc16_app@i^0,w,c
 15897  007C76  5016               	movf	(crc16_app@len+1)^0,w,c
 15898  007C78  581E               	subwfb	(crc16_app@i+1)^0,w,c
 15899  007C7A  A0D8               	btfss	status,0,c
 15900  007C7C  D7EB               	goto	l646
 15901  007C7E                     u12850:
 15902                           
 15903                           ; BSR set to: 57
 15904  007C7E  BB68               	btfsc	104,5,b	;volatile
 15905  007C80  D7FE               	goto	u12850
 15906                           
 15907                           ; BSR set to: 57
 15908                           ;../app/app_src/crc.c: 22:     result = CRC_CalculatedResultGet(0,0);
 15909  007C82  0E00               	movlw	0
 15910  007C84  6E0A               	movwf	(CRC_CalculatedResultGet@xorValue+1)^0,c
 15911  007C86  0E00               	movlw	0
 15912  007C88  6E09               	movwf	CRC_CalculatedResultGet@xorValue^0,c
 15913  007C8A  0E00               	movlw	0
 15914  007C8C  EC6A  F033         	call	_CRC_CalculatedResultGet
 15915  007C90  0060  F024  F019   	movff	?_CRC_CalculatedResultGet,crc16_app@result
 15916  007C96  0060  F028  F01A   	movff	?_CRC_CalculatedResultGet+1,crc16_app@result+1
 15917                           
 15918                           ;../app/app_src/crc.c: 23:     CRCCON0bits.CRCGO = 0;
 15919  007C9C  0139               	movlb	57	; () banked
 15920  007C9E  9D68               	bcf	104,6,b	;volatile
 15921                           
 15922                           ; BSR set to: 57
 15923                           ;../app/app_src/crc.c: 24:     CRCCON0bits.EN = 0;
 15924  007CA0  9F68               	bcf	104,7,b	;volatile
 15925                           
 15926                           ; BSR set to: 57
 15927                           ;../app/app_src/crc.c: 25:     return(result);
 15928  007CA2  0060  F064  F013   	movff	crc16_app@result,?_crc16_app
 15929  007CA8  0060  F068  F014   	movff	crc16_app@result+1,?_crc16_app+1
 15930                           
 15931                           ; BSR set to: 57
 15932  007CAE  0012               	return		;funcret
 15933  007CB0                     __end_of_crc16_app:
 15934                           	opt callstack 0
 15935                           
 15936 ;; *************** function _CRC_CalculatedResultGet *****************
 15937 ;; Defined at:
 15938 ;;		line 159 in file "mcc_generated_files/crc.c"
 15939 ;; Parameters:    Size  Location     Type
 15940 ;;  reverse         1    wreg     _Bool 
 15941 ;;  xorValue        2    8[COMRAM] unsigned short 
 15942 ;; Auto vars:     Size  Location     Type
 15943 ;;  reverse         1   15[COMRAM] _Bool 
 15944 ;;  result          2   16[COMRAM] unsigned short 
 15945 ;;  mask            2   13[COMRAM] unsigned short 
 15946 ;; Return value:  Size  Location     Type
 15947 ;;                  2    8[COMRAM] unsigned short 
 15948 ;; Registers used:
 15949 ;;		wreg, status,2, status,0, cstack
 15950 ;; Tracked objects:
 15951 ;;		On entry : 3F/39
 15952 ;;		On exit  : 0/0
 15953 ;;		Unchanged: 0/0
 15954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15955 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15956 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15957 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15958 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15959 ;;Total ram usage:       10 bytes
 15960 ;; Hardware stack levels used:    1
 15961 ;; Hardware stack levels required when called:    8
 15962 ;; This function calls:
 15963 ;;		_CRC_ReverseValue
 15964 ;; This function is called by:
 15965 ;;		_crc16_app
 15966 ;; This function uses a non-reentrant model
 15967 ;;
 15968                           
 15969                           	psect	text88
 15970  0066D4                     __ptext88:
 15971                           	opt callstack 0
 15972  0066D4                     _CRC_CalculatedResultGet:
 15973                           	opt callstack 20
 15974                           
 15975                           ; BSR set to: 57
 15976                           ;incstack = 0
 15977                           ;CRC_CalculatedResultGet@reverse stored from wreg
 15978  0066D4  6E10               	movwf	CRC_CalculatedResultGet@reverse^0,c
 15979                           
 15980                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 15981  0066D6  0139               	movlb	57	; () banked
 15982  0066D8  9D68               	bcf	104,6,b	;volatile
 15983                           
 15984                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 15985  0066DA  9DA0               	bcf	160,6,b	;volatile
 15986                           
 15987                           ; BSR set to: 57
 15988                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 15989  0066DC  5169               	movf	105,w,b	;volatile
 15990  0066DE  0B0F               	andlw	15
 15991  0066E0  6E0B               	movwf	??_CRC_CalculatedResultGet^0,c
 15992  0066E2  3A0B               	swapf	??_CRC_CalculatedResultGet^0,f,c
 15993  0066E4  5169               	movf	105,w,b	;volatile
 15994  0066E6  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 15995  0066E8  0B0F               	andlw	-241
 15996  0066EA  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 15997  0066EC  6F69               	movwf	105,b	;volatile
 15998                           
 15999                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 16000  0066EE  0E08               	movlw	8
 16001  0066F0  0100               	movlb	0	; () banked
 16002  0066F2  65ED               	cpfsgt	(_crcObj+1)& (0+255),b
 16003  0066F4  D005               	goto	l12774
 16004                           
 16005                           ; BSR set to: 0
 16006                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 16007  0066F6  0E00               	movlw	0
 16008  0066F8  0139               	movlb	57	; () banked
 16009  0066FA  6F61               	movwf	97,b	;volatile
 16010                           
 16011                           ;mcc_generated_files/crc.c: 171:          CRCDATL = 0;
 16012  0066FC  0E00               	movlw	0
 16013  0066FE  D002               	goto	L10
 16014  006700                     l12774:
 16015                           
 16016                           ; BSR set to: 0
 16017                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 16018  006700  0E00               	movlw	0
 16019  006702  0139               	movlb	57	; () banked
 16020  006704                     L10:
 16021  006704  6F60               	movwf	96,b	;volatile
 16022                           
 16023                           ; BSR set to: 57
 16024                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 16025  006706  8D68               	bsf	104,6,b	;volatile
 16026  006708                     l1646:
 16027                           
 16028                           ; BSR set to: 57
 16029  006708  ADA0               	btfss	160,6,b	;volatile
 16030  00670A  D7FE               	goto	l1646
 16031                           
 16032                           ; BSR set to: 57
 16033                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 16034  00670C  9DA0               	bcf	160,6,b	;volatile
 16035                           
 16036                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 16037  00670E  9D68               	bcf	104,6,b	;volatile
 16038                           
 16039                           ; BSR set to: 57
 16040                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 16041  006710  0060  F3B0  F00B   	movff	_crcObj,??_CRC_CalculatedResultGet
 16042  006716  0EFF               	movlw	255
 16043  006718  260B               	addwf	??_CRC_CalculatedResultGet^0,f,c
 16044  00671A  3A0B               	swapf	??_CRC_CalculatedResultGet^0,f,c
 16045  00671C  5169               	movf	105,w,b	;volatile
 16046  00671E  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 16047  006720  0B0F               	andlw	-241
 16048  006722  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 16049  006724  6F69               	movwf	105,b	;volatile
 16050                           
 16051                           ; BSR set to: 57
 16052                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 16053  006726  5163               	movf	99,w,b	;volatile
 16054  006728  6E0B               	movwf	??_CRC_CalculatedResultGet^0,c
 16055  00672A  5162               	movf	98,w,b	;volatile
 16056  00672C  6E11               	movwf	CRC_CalculatedResultGet@result^0,c
 16057  00672E  0060  F02C  F012   	movff	??_CRC_CalculatedResultGet,CRC_CalculatedResultGet@result+1
 16058                           
 16059                           ; BSR set to: 57
 16060                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 16061  006734  0E10               	movlw	16
 16062  006736  0100               	movlb	0	; () banked
 16063  006738  61ED               	cpfslt	(_crcObj+1)& (0+255),b
 16064  00673A  D018               	goto	l12786
 16065                           
 16066                           ; BSR set to: 0
 16067                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 16068  00673C  0060  F3B4  F00B   	movff	_crcObj+1,??_CRC_CalculatedResultGet
 16069  006742  0E01               	movlw	1
 16070  006744  6E0C               	movwf	(??_CRC_CalculatedResultGet+1)^0,c
 16071  006746  0E00               	movlw	0
 16072  006748  6E0D               	movwf	(??_CRC_CalculatedResultGet+2)^0,c
 16073  00674A  2A0B               	incf	??_CRC_CalculatedResultGet^0,f,c
 16074  00674C  D003               	goto	u11964
 16075  00674E                     u11965:
 16076  00674E  90D8               	bcf	status,0,c
 16077  006750  360C               	rlcf	(??_CRC_CalculatedResultGet+1)^0,f,c
 16078  006752  360D               	rlcf	(??_CRC_CalculatedResultGet+2)^0,f,c
 16079  006754                     u11964:
 16080  006754  2E0B               	decfsz	??_CRC_CalculatedResultGet^0,f,c
 16081  006756  D7FB               	goto	u11965
 16082  006758  0EFF               	movlw	255
 16083  00675A  240C               	addwf	(??_CRC_CalculatedResultGet+1)^0,w,c
 16084  00675C  6E0E               	movwf	CRC_CalculatedResultGet@mask^0,c
 16085  00675E  0EFF               	movlw	255
 16086  006760  200D               	addwfc	(??_CRC_CalculatedResultGet+2)^0,w,c
 16087  006762  6E0F               	movwf	(CRC_CalculatedResultGet@mask+1)^0,c
 16088                           
 16089                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 16090  006764  500E               	movf	CRC_CalculatedResultGet@mask^0,w,c
 16091  006766  1611               	andwf	CRC_CalculatedResultGet@result^0,f,c
 16092  006768  500F               	movf	(CRC_CalculatedResultGet@mask+1)^0,w,c
 16093  00676A  1612               	andwf	(CRC_CalculatedResultGet@result+1)^0,f,c
 16094  00676C                     l12786:
 16095                           
 16096                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 16097  00676C  5010               	movf	CRC_CalculatedResultGet@reverse^0,w,c
 16098  00676E  B4D8               	btfsc	status,2,c
 16099  006770  D00E               	goto	l12790
 16100                           
 16101                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 16102  006772  0060  F044  F002   	movff	CRC_CalculatedResultGet@result,CRC_ReverseValue@crc
 16103  006778  0060  F048  F003   	movff	CRC_CalculatedResultGet@result+1,CRC_ReverseValue@crc+1
 16104  00677E  EC14  F043         	call	_CRC_ReverseValue	;wreg free
 16105  006782  0060  F008  F011   	movff	?_CRC_ReverseValue,CRC_CalculatedResultGet@result
 16106  006788  0060  F00C  F012   	movff	?_CRC_ReverseValue+1,CRC_CalculatedResultGet@result+1
 16107  00678E                     l12790:
 16108                           
 16109                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 16110  00678E  5009               	movf	CRC_CalculatedResultGet@xorValue^0,w,c
 16111  006790  1A11               	xorwf	CRC_CalculatedResultGet@result^0,f,c
 16112  006792  500A               	movf	(CRC_CalculatedResultGet@xorValue+1)^0,w,c
 16113  006794  1A12               	xorwf	(CRC_CalculatedResultGet@result+1)^0,f,c
 16114                           
 16115                           ;mcc_generated_files/crc.c: 198:     return result;
 16116  006796  0060  F044  F009   	movff	CRC_CalculatedResultGet@result,?_CRC_CalculatedResultGet
 16117  00679C  0060  F048  F00A   	movff	CRC_CalculatedResultGet@result+1,?_CRC_CalculatedResultGet+1
 16118  0067A2  0012               	return		;funcret
 16119  0067A4                     __end_of_CRC_CalculatedResultGet:
 16120                           	opt callstack 0
 16121                           
 16122 ;; *************** function _CRC_ReverseValue *****************
 16123 ;; Defined at:
 16124 ;;		line 138 in file "mcc_generated_files/crc.c"
 16125 ;; Parameters:    Size  Location     Type
 16126 ;;  crc             2    1[COMRAM] unsigned short 
 16127 ;; Auto vars:     Size  Location     Type
 16128 ;;  mask            2    6[COMRAM] unsigned short 
 16129 ;;  reverse         2    4[COMRAM] unsigned short 
 16130 ;; Return value:  Size  Location     Type
 16131 ;;                  2    1[COMRAM] unsigned short 
 16132 ;; Registers used:
 16133 ;;		wreg, status,2, status,0
 16134 ;; Tracked objects:
 16135 ;;		On entry : 0/0
 16136 ;;		On exit  : 0/0
 16137 ;;		Unchanged: 0/0
 16138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16140 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16141 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16142 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16143 ;;Total ram usage:        7 bytes
 16144 ;; Hardware stack levels used:    1
 16145 ;; Hardware stack levels required when called:    7
 16146 ;; This function calls:
 16147 ;;		Nothing
 16148 ;; This function is called by:
 16149 ;;		_CRC_CalculatedResultGet
 16150 ;; This function uses a non-reentrant model
 16151 ;;
 16152                           
 16153                           	psect	text89
 16154  008628                     __ptext89:
 16155                           	opt callstack 0
 16156  008628                     _CRC_ReverseValue:
 16157                           	opt callstack 20
 16158                           
 16159                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 16160                           
 16161                           ;incstack = 0
 16162  008628  0E00               	movlw	0
 16163  00862A  6E08               	movwf	(CRC_ReverseValue@mask+1)^0,c
 16164  00862C  0E01               	movlw	1
 16165  00862E  6E07               	movwf	CRC_ReverseValue@mask^0,c
 16166                           
 16167                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 16168  008630  0060  F3B4  F004   	movff	_crcObj+1,??_CRC_ReverseValue
 16169  008636  0EFF               	movlw	255
 16170  008638  2604               	addwf	??_CRC_ReverseValue^0,f,c
 16171  00863A  2804               	incf	??_CRC_ReverseValue^0,w,c
 16172  00863C  D003               	goto	u10810
 16173  00863E                     u10815:
 16174  00863E  90D8               	bcf	status,0,c
 16175  008640  3607               	rlcf	CRC_ReverseValue@mask^0,f,c
 16176  008642  3608               	rlcf	(CRC_ReverseValue@mask+1)^0,f,c
 16177  008644                     u10810:
 16178  008644  2EE8               	decfsz	wreg,f,c
 16179  008646  D7FB               	goto	u10815
 16180                           
 16181                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 16182  008648  0E00               	movlw	0
 16183  00864A  6E06               	movwf	(CRC_ReverseValue@reverse+1)^0,c
 16184  00864C  0E00               	movlw	0
 16185  00864E  6E05               	movwf	CRC_ReverseValue@reverse^0,c
 16186                           
 16187                           ;mcc_generated_files/crc.c: 147:     while(crc)
 16188  008650  D00C               	goto	l1637
 16189  008652                     l1638:
 16190                           
 16191                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 16192  008652  A002               	btfss	CRC_ReverseValue@crc^0,0,c
 16193  008654  D004               	goto	l11934
 16194                           
 16195                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 16196  008656  5007               	movf	CRC_ReverseValue@mask^0,w,c
 16197  008658  1205               	iorwf	CRC_ReverseValue@reverse^0,f,c
 16198  00865A  5008               	movf	(CRC_ReverseValue@mask+1)^0,w,c
 16199  00865C  1206               	iorwf	(CRC_ReverseValue@reverse+1)^0,f,c
 16200  00865E                     l11934:
 16201                           
 16202                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 16203  00865E  90D8               	bcf	status,0,c
 16204  008660  3208               	rrcf	(CRC_ReverseValue@mask+1)^0,f,c
 16205  008662  3207               	rrcf	CRC_ReverseValue@mask^0,f,c
 16206                           
 16207                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 16208  008664  90D8               	bcf	status,0,c
 16209  008666  3203               	rrcf	(CRC_ReverseValue@crc+1)^0,f,c
 16210  008668  3202               	rrcf	CRC_ReverseValue@crc^0,f,c
 16211  00866A                     l1637:
 16212                           
 16213                           ;mcc_generated_files/crc.c: 147:     while(crc)
 16214  00866A  5002               	movf	CRC_ReverseValue@crc^0,w,c
 16215  00866C  1003               	iorwf	(CRC_ReverseValue@crc+1)^0,w,c
 16216  00866E  A4D8               	btfss	status,2,c
 16217  008670  D7F0               	goto	l1638
 16218                           
 16219                           ;mcc_generated_files/crc.c: 156:     return reverse;
 16220  008672  0060  F014  F002   	movff	CRC_ReverseValue@reverse,?_CRC_ReverseValue
 16221  008678  0060  F018  F003   	movff	CRC_ReverseValue@reverse+1,?_CRC_ReverseValue+1
 16222  00867E  0012               	return		;funcret
 16223  008680                     __end_of_CRC_ReverseValue:
 16224                           	opt callstack 0
 16225                           
 16226 ;; *************** function _CRC_8BitDataWrite *****************
 16227 ;; Defined at:
 16228 ;;		line 125 in file "mcc_generated_files/crc.c"
 16229 ;; Parameters:    Size  Location     Type
 16230 ;;  data            1    wreg     unsigned char 
 16231 ;; Auto vars:     Size  Location     Type
 16232 ;;  data            1    1[COMRAM] unsigned char 
 16233 ;; Return value:  Size  Location     Type
 16234 ;;                  1    wreg      _Bool 
 16235 ;; Registers used:
 16236 ;;		wreg
 16237 ;; Tracked objects:
 16238 ;;		On entry : 3F/39
 16239 ;;		On exit  : 3F/39
 16240 ;;		Unchanged: 0/0
 16241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16246 ;;Total ram usage:        1 bytes
 16247 ;; Hardware stack levels used:    1
 16248 ;; Hardware stack levels required when called:    7
 16249 ;; This function calls:
 16250 ;;		Nothing
 16251 ;; This function is called by:
 16252 ;;		_crc16_app
 16253 ;; This function uses a non-reentrant model
 16254 ;;
 16255                           
 16256                           	psect	text90
 16257  00990C                     __ptext90:
 16258                           	opt callstack 0
 16259  00990C                     _CRC_8BitDataWrite:
 16260                           	opt callstack 21
 16261                           
 16262                           ;incstack = 0
 16263                           ;CRC_8BitDataWrite@data stored from wreg
 16264  00990C  6E02               	movwf	CRC_8BitDataWrite@data^0,c
 16265                           
 16266                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 16267  00990E  0139               	movlb	57	; () banked
 16268  009910  B168               	btfsc	104,0,b	;volatile
 16269  009912  0012               	return	
 16270                           
 16271                           ; BSR set to: 57
 16272                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 16273  009914  0060  F00B  F960   	movff	CRC_8BitDataWrite@data,14688	;volatile
 16274                           
 16275                           ; BSR set to: 57
 16276  00991A  0012               	return		;funcret
 16277  00991C                     __end_of_CRC_8BitDataWrite:
 16278                           	opt callstack 0
 16279                           
 16280 ;; *************** function _PHY_SetRxState *****************
 16281 ;; Defined at:
 16282 ;;		line 814 in file "../phy/sx1216/phy_src/phy.c"
 16283 ;; Parameters:    Size  Location     Type
 16284 ;;  rx              1    wreg     _Bool 
 16285 ;; Auto vars:     Size  Location     Type
 16286 ;;  rx              1    0[COMRAM] _Bool 
 16287 ;; Return value:  Size  Location     Type
 16288 ;;                  1    wreg      void 
 16289 ;; Registers used:
 16290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16291 ;; Tracked objects:
 16292 ;;		On entry : 3F/3D
 16293 ;;		On exit  : 3F/3D
 16294 ;;		Unchanged: 0/0
 16295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16300 ;;Total ram usage:        0 bytes
 16301 ;; Hardware stack levels used:    1
 16302 ;; Hardware stack levels required when called:   13
 16303 ;; This function calls:
 16304 ;;		_receive
 16305 ;; This function is called by:
 16306 ;;		_bootLoadApplication
 16307 ;; This function uses a non-reentrant model
 16308 ;;
 16309                           
 16310                           	psect	text91
 16311  0099F2                     __ptext91:
 16312                           	opt callstack 0
 16313  0099F2                     _PHY_SetRxState:
 16314                           	opt callstack 16
 16315                           
 16316                           ; BSR set to: 61
 16317                           ;../phy/sx1216/phy_src/phy.c: 815:     receive(0);
 16318                           
 16319                           ; BSR set to: 57
 16320                           ;incstack = 0
 16321  0099F2  0E00               	movlw	0
 16322  0099F4  ECE5  F046         	call	_receive
 16323                           
 16324                           ; BSR set to: 61
 16325  0099F8  0012               	return		;funcret
 16326  0099FA                     __end_of_PHY_SetRxState:
 16327                           	opt callstack 0
 16328                           
 16329 ;; *************** function _PHY_SetChannel *****************
 16330 ;; Defined at:
 16331 ;;		line 818 in file "../phy/sx1216/phy_src/phy.c"
 16332 ;; Parameters:    Size  Location     Type
 16333 ;;  channel         1    wreg     unsigned char 
 16334 ;; Auto vars:     Size  Location     Type
 16335 ;;  channel         1   46[COMRAM] unsigned char 
 16336 ;; Return value:  Size  Location     Type
 16337 ;;                  1    wreg      void 
 16338 ;; Registers used:
 16339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16340 ;; Tracked objects:
 16341 ;;		On entry : 0/0
 16342 ;;		On exit  : 3F/3D
 16343 ;;		Unchanged: 0/0
 16344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16349 ;;Total ram usage:        1 bytes
 16350 ;; Hardware stack levels used:    1
 16351 ;; Hardware stack levels required when called:   12
 16352 ;; This function calls:
 16353 ;;		_setFrequency
 16354 ;; This function is called by:
 16355 ;;		_bootLoadApplication
 16356 ;; This function uses a non-reentrant model
 16357 ;;
 16358                           
 16359                           	psect	text92
 16360  008D8C                     __ptext92:
 16361                           	opt callstack 0
 16362  008D8C                     _PHY_SetChannel:
 16363                           	opt callstack 17
 16364                           
 16365                           ; BSR set to: 61
 16366                           ;incstack = 0
 16367                           ;PHY_SetChannel@channel stored from wreg
 16368  008D8C  6E2F               	movwf	PHY_SetChannel@channel^0,c
 16369                           
 16370                           ;../phy/sx1216/phy_src/phy.c: 819:     setFrequency(fhssList[channel]);
 16371  008D8E  502F               	movf	PHY_SetChannel@channel^0,w,c
 16372  008D90  0D04               	mullw	4
 16373  008D92  0EAB               	movlw	low _fhssList
 16374  008D94  24F3               	addwf	243,w,c
 16375  008D96  6EF6               	movwf	tblptrl,c
 16376  008D98  0EFC               	movlw	high _fhssList
 16377  008D9A  20F4               	addwfc	244,w,c
 16378  008D9C  6EF7               	movwf	tblptrh,c
 16379  008D9E                     	if	1	;There are 3 active tblptr bytes
 16380  008D9E  6AF8               	clrf	tblptru,c
 16381  008DA0  0E00               	movlw	low (__mediumconst shr (0+16))
 16382  008DA2  22F8               	addwfc	tblptru,f,c
 16383  008DA4                     	endif
 16384  008DA4  0009               	tblrd		*+
 16385  008DA6  006F FFD4  F023    	movff	tablat,setFrequency@frequency
 16386  008DAC  0009               	tblrd		*+
 16387  008DAE  006F FFD4  F024    	movff	tablat,setFrequency@frequency+1
 16388  008DB4  0009               	tblrd		*+
 16389  008DB6  006F FFD4  F025    	movff	tablat,setFrequency@frequency+2
 16390  008DBC  000A               	tblrd		*-
 16391  008DBE  006F FFD4  F026    	movff	tablat,setFrequency@frequency+3
 16392  008DC4  EC38  F027         	call	_setFrequency	;wreg free
 16393                           
 16394                           ; BSR set to: 61
 16395  008DC8  0012               	return		;funcret
 16396  008DCA                     __end_of_PHY_SetChannel:
 16397                           	opt callstack 0
 16398                           
 16399 ;; *************** function _NWK_SetSecurityKey *****************
 16400 ;; Defined at:
 16401 ;;		line 92 in file "../nwk/nwk_src/nwkSecurity.c"
 16402 ;; Parameters:    Size  Location     Type
 16403 ;;  key             2   18[COMRAM] PTR unsigned char 
 16404 ;;		 -> net_key(16), 
 16405 ;; Auto vars:     Size  Location     Type
 16406 ;;		None
 16407 ;; Return value:  Size  Location     Type
 16408 ;;                  1    wreg      void 
 16409 ;; Registers used:
 16410 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16411 ;; Tracked objects:
 16412 ;;		On entry : 3F/0
 16413 ;;		On exit  : 0/0
 16414 ;;		Unchanged: 0/0
 16415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16419 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16420 ;;Total ram usage:        2 bytes
 16421 ;; Hardware stack levels used:    1
 16422 ;; Hardware stack levels required when called:    8
 16423 ;; This function calls:
 16424 ;;		_memcpy
 16425 ;; This function is called by:
 16426 ;;		_cmdSetAES
 16427 ;;		_bootLoadApplication
 16428 ;; This function uses a non-reentrant model
 16429 ;;
 16430                           
 16431                           	psect	text93
 16432  009504                     __ptext93:
 16433                           	opt callstack 0
 16434  009504                     _NWK_SetSecurityKey:
 16435                           	opt callstack 19
 16436                           
 16437                           ; BSR set to: 0
 16438                           ;../nwk/nwk_src/nwkSecurity.c: 92: void NWK_SetSecurityKey(uint8_t *key);../nwk/nwk_src/
      +                          nwkSecurity.c: 93: {;../nwk/nwk_src/nwkSecurity.c: 94:   memcpy((uint8_t *)nwkIb.key, ke
      +                          y, 16);
 16439                           
 16440                           ; BSR set to: 61
 16441                           ;incstack = 0
 16442  009504  0E57               	movlw	low (_nwkIb+38)
 16443  009506  6E08               	movwf	memcpy@d1^0,c
 16444  009508  0E01               	movlw	high (_nwkIb+38)
 16445  00950A  6E09               	movwf	(memcpy@d1+1)^0,c
 16446  00950C  0060  F04C  F00A   	movff	NWK_SetSecurityKey@key,memcpy@s1
 16447  009512  0060  F050  F00B   	movff	NWK_SetSecurityKey@key+1,memcpy@s1+1
 16448  009518  0E00               	movlw	0
 16449  00951A  6E0D               	movwf	(memcpy@n+1)^0,c
 16450  00951C  0E10               	movlw	16
 16451  00951E  6E0C               	movwf	memcpy@n^0,c
 16452  009520  EC95  F03F         	call	_memcpy	;wreg free
 16453  009524  0012               	return		;funcret
 16454  009526                     __end_of_NWK_SetSecurityKey:
 16455                           	opt callstack 0
 16456                           
 16457 ;; *************** function _NWK_SetPanId *****************
 16458 ;; Defined at:
 16459 ;;		line 116 in file "../nwk/nwk_src/nwk.c"
 16460 ;; Parameters:    Size  Location     Type
 16461 ;;  panId           2    3[COMRAM] unsigned short 
 16462 ;; Auto vars:     Size  Location     Type
 16463 ;;		None
 16464 ;; Return value:  Size  Location     Type
 16465 ;;                  1    wreg      void 
 16466 ;; Registers used:
 16467 ;;		cstack
 16468 ;; Tracked objects:
 16469 ;;		On entry : 3F/0
 16470 ;;		On exit  : 3F/0
 16471 ;;		Unchanged: 3F/0
 16472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16473 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16476 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16477 ;;Total ram usage:        2 bytes
 16478 ;; Hardware stack levels used:    1
 16479 ;; Hardware stack levels required when called:    8
 16480 ;; This function calls:
 16481 ;;		_PHY_SetPanId
 16482 ;; This function is called by:
 16483 ;;		_bootLoadApplication
 16484 ;; This function uses a non-reentrant model
 16485 ;;
 16486                           
 16487                           	psect	text94
 16488  009674                     __ptext94:
 16489                           	opt callstack 0
 16490  009674                     _NWK_SetPanId:
 16491                           	opt callstack 21
 16492                           
 16493                           ; BSR set to: 0
 16494                           ;../nwk/nwk_src/nwk.c: 116: void NWK_SetPanId(uint16_t panId);../nwk/nwk_src/nwk.c: 117:
      +                           {;../nwk/nwk_src/nwk.c: 118:   nwkIb.panId = panId;
 16495                           
 16496                           ;incstack = 0
 16497  009674  0060  F010  F133   	movff	NWK_SetPanId@panId,_nwkIb+2
 16498  00967A  0060  F014  F134   	movff	NWK_SetPanId@panId+1,_nwkIb+3
 16499                           
 16500                           ; BSR set to: 0
 16501                           ;../nwk/nwk_src/nwk.c: 119:   PHY_SetPanId(panId);
 16502  009680  0060  F010  F002   	movff	NWK_SetPanId@panId,PHY_SetPanId@panId
 16503  009686  0060  F014  F003   	movff	NWK_SetPanId@panId+1,PHY_SetPanId@panId+1
 16504  00968C  EC11  F04D         	call	_PHY_SetPanId	;wreg free
 16505                           
 16506                           ; BSR set to: 0
 16507  009690  0012               	return		;funcret
 16508  009692                     __end_of_NWK_SetPanId:
 16509                           	opt callstack 0
 16510                           
 16511 ;; *************** function _PHY_SetPanId *****************
 16512 ;; Defined at:
 16513 ;;		line 822 in file "../phy/sx1216/phy_src/phy.c"
 16514 ;; Parameters:    Size  Location     Type
 16515 ;;  panId           2    1[COMRAM] unsigned short 
 16516 ;; Auto vars:     Size  Location     Type
 16517 ;;		None
 16518 ;; Return value:  Size  Location     Type
 16519 ;;                  1    wreg      void 
 16520 ;; Registers used:
 16521 ;;		None
 16522 ;; Tracked objects:
 16523 ;;		On entry : 3F/0
 16524 ;;		On exit  : 3F/0
 16525 ;;		Unchanged: 3F/0
 16526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16530 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16531 ;;Total ram usage:        2 bytes
 16532 ;; Hardware stack levels used:    1
 16533 ;; Hardware stack levels required when called:    7
 16534 ;; This function calls:
 16535 ;;		Nothing
 16536 ;; This function is called by:
 16537 ;;		_NWK_SetPanId
 16538 ;; This function uses a non-reentrant model
 16539 ;;
 16540                           
 16541                           	psect	text95
 16542  009A22                     __ptext95:
 16543                           	opt callstack 0
 16544  009A22                     _PHY_SetPanId:
 16545                           	opt callstack 21
 16546                           
 16547                           ; BSR set to: 0
 16548                           
 16549                           ; BSR set to: 0
 16550                           ;incstack = 0
 16551  009A22  0012               	return		;funcret
 16552  009A24                     __end_of_PHY_SetPanId:
 16553                           	opt callstack 0
 16554                           
 16555 ;; *************** function _NWK_SetAddr *****************
 16556 ;; Defined at:
 16557 ;;		line 106 in file "../nwk/nwk_src/nwk.c"
 16558 ;; Parameters:    Size  Location     Type
 16559 ;;  addr            2    3[COMRAM] unsigned short 
 16560 ;; Auto vars:     Size  Location     Type
 16561 ;;		None
 16562 ;; Return value:  Size  Location     Type
 16563 ;;                  1    wreg      void 
 16564 ;; Registers used:
 16565 ;;		cstack
 16566 ;; Tracked objects:
 16567 ;;		On entry : 3F/0
 16568 ;;		On exit  : 3F/0
 16569 ;;		Unchanged: 3F/0
 16570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16574 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16575 ;;Total ram usage:        2 bytes
 16576 ;; Hardware stack levels used:    1
 16577 ;; Hardware stack levels required when called:    8
 16578 ;; This function calls:
 16579 ;;		_PHY_SetShortAddr
 16580 ;; This function is called by:
 16581 ;;		_bootLoadApplication
 16582 ;; This function uses a non-reentrant model
 16583 ;;
 16584                           
 16585                           	psect	text96
 16586  009692                     __ptext96:
 16587                           	opt callstack 0
 16588  009692                     _NWK_SetAddr:
 16589                           	opt callstack 21
 16590                           
 16591                           ; BSR set to: 0
 16592                           ;../nwk/nwk_src/nwk.c: 106: void NWK_SetAddr(uint16_t addr);../nwk/nwk_src/nwk.c: 107: {
      +                          ;../nwk/nwk_src/nwk.c: 108:   nwkIb.addr = addr;
 16593                           
 16594                           ; BSR set to: 0
 16595                           ;incstack = 0
 16596  009692  0060  F010  F131   	movff	NWK_SetAddr@addr,_nwkIb
 16597  009698  0060  F014  F132   	movff	NWK_SetAddr@addr+1,_nwkIb+1
 16598                           
 16599                           ; BSR set to: 0
 16600                           ;../nwk/nwk_src/nwk.c: 109:   PHY_SetShortAddr(addr);
 16601  00969E  0060  F010  F002   	movff	NWK_SetAddr@addr,PHY_SetShortAddr@addr
 16602  0096A4  0060  F014  F003   	movff	NWK_SetAddr@addr+1,PHY_SetShortAddr@addr+1
 16603  0096AA  EC12  F04D         	call	_PHY_SetShortAddr	;wreg free
 16604                           
 16605                           ; BSR set to: 0
 16606  0096AE  0012               	return		;funcret
 16607  0096B0                     __end_of_NWK_SetAddr:
 16608                           	opt callstack 0
 16609                           
 16610 ;; *************** function _PHY_SetShortAddr *****************
 16611 ;; Defined at:
 16612 ;;		line 826 in file "../phy/sx1216/phy_src/phy.c"
 16613 ;; Parameters:    Size  Location     Type
 16614 ;;  addr            2    1[COMRAM] unsigned short 
 16615 ;; Auto vars:     Size  Location     Type
 16616 ;;		None
 16617 ;; Return value:  Size  Location     Type
 16618 ;;                  1    wreg      void 
 16619 ;; Registers used:
 16620 ;;		None
 16621 ;; Tracked objects:
 16622 ;;		On entry : 3F/0
 16623 ;;		On exit  : 3F/0
 16624 ;;		Unchanged: 3F/0
 16625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16629 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16630 ;;Total ram usage:        2 bytes
 16631 ;; Hardware stack levels used:    1
 16632 ;; Hardware stack levels required when called:    7
 16633 ;; This function calls:
 16634 ;;		Nothing
 16635 ;; This function is called by:
 16636 ;;		_NWK_SetAddr
 16637 ;; This function uses a non-reentrant model
 16638 ;;
 16639                           
 16640                           	psect	text97
 16641  009A24                     __ptext97:
 16642                           	opt callstack 0
 16643  009A24                     _PHY_SetShortAddr:
 16644                           	opt callstack 21
 16645                           
 16646                           ; BSR set to: 0
 16647                           
 16648                           ; BSR set to: 0
 16649                           ;incstack = 0
 16650  009A24  0012               	return		;funcret
 16651  009A26                     __end_of_PHY_SetShortAddr:
 16652                           	opt callstack 0
 16653                           
 16654 ;; *************** function _DATAEE_WriteByte_Platform *****************
 16655 ;; Defined at:
 16656 ;;		line 40 in file "../app/app_src/EEPROM.c"
 16657 ;; Parameters:    Size  Location     Type
 16658 ;;  addr            2    5[COMRAM] unsigned short 
 16659 ;;  data            1    7[COMRAM] unsigned char 
 16660 ;; Auto vars:     Size  Location     Type
 16661 ;;		None
 16662 ;; Return value:  Size  Location     Type
 16663 ;;                  1    wreg      void 
 16664 ;; Registers used:
 16665 ;;		wreg, status,2, status,0, cstack
 16666 ;; Tracked objects:
 16667 ;;		On entry : 0/0
 16668 ;;		On exit  : 0/0
 16669 ;;		Unchanged: 0/0
 16670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16671 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16674 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16675 ;;Total ram usage:        3 bytes
 16676 ;; Hardware stack levels used:    1
 16677 ;; Hardware stack levels required when called:    8
 16678 ;; This function calls:
 16679 ;;		_DATAEE_WriteByte
 16680 ;; This function is called by:
 16681 ;;		_cmdSetNaddr
 16682 ;;		_cmdSetAES
 16683 ;;		_cmdSetRFCH
 16684 ;;		_cmdSetTX
 16685 ;;		_cmdSetCADRSSI
 16686 ;;		_cmdBootLoad
 16687 ;;		_cmdSetSF
 16688 ;;		_bootLoadApplication
 16689 ;; This function uses a non-reentrant model
 16690 ;;
 16691                           
 16692                           	psect	text98
 16693  008B04                     __ptext98:
 16694                           	opt callstack 0
 16695  008B04                     _DATAEE_WriteByte_Platform:
 16696                           	opt callstack 19
 16697                           
 16698                           ;../app/app_src/EEPROM.c: 42:     DATAEE_WriteByte(addr, data);
 16699                           
 16700                           ; BSR set to: 0
 16701                           ;incstack = 0
 16702  008B04  0060  F018  F002   	movff	DATAEE_WriteByte_Platform@addr,DATAEE_WriteByte@bAdd
 16703  008B0A  0060  F01C  F003   	movff	DATAEE_WriteByte_Platform@addr+1,DATAEE_WriteByte@bAdd+1
 16704  008B10  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 16705  008B16  EC29  F046         	call	_DATAEE_WriteByte	;wreg free
 16706                           
 16707                           ;../app/app_src/EEPROM.c: 43:     DATAEE_WriteByte(addr + 256, data);
 16708  008B1A  0E00               	movlw	0
 16709  008B1C  2406               	addwf	DATAEE_WriteByte_Platform@addr^0,w,c
 16710  008B1E  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 16711  008B20  0E01               	movlw	1
 16712  008B22  2007               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,w,c
 16713  008B24  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 16714  008B26  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 16715  008B2C  EC29  F046         	call	_DATAEE_WriteByte	;wreg free
 16716                           
 16717                           ;../app/app_src/EEPROM.c: 44:     DATAEE_WriteByte(addr + 512, data);
 16718  008B30  0E00               	movlw	0
 16719  008B32  2406               	addwf	DATAEE_WriteByte_Platform@addr^0,w,c
 16720  008B34  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 16721  008B36  0E02               	movlw	2
 16722  008B38  2007               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,w,c
 16723  008B3A  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 16724  008B3C  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 16725  008B42  EC29  F046         	call	_DATAEE_WriteByte	;wreg free
 16726  008B46  0012               	return		;funcret
 16727  008B48                     __end_of_DATAEE_WriteByte_Platform:
 16728                           	opt callstack 0
 16729                           
 16730 ;; *************** function _DATAEE_ReadByte_Platform *****************
 16731 ;; Defined at:
 16732 ;;		line 6 in file "../app/app_src/EEPROM.c"
 16733 ;; Parameters:    Size  Location     Type
 16734 ;;  addr            2    5[COMRAM] unsigned short 
 16735 ;; Auto vars:     Size  Location     Type
 16736 ;;  copy1           1    9[COMRAM] unsigned char 
 16737 ;;  copy2           1    8[COMRAM] unsigned char 
 16738 ;;  copy3           1    7[COMRAM] unsigned char 
 16739 ;; Return value:  Size  Location     Type
 16740 ;;                  1    wreg      unsigned char 
 16741 ;; Registers used:
 16742 ;;		wreg, status,2, status,0, cstack
 16743 ;; Tracked objects:
 16744 ;;		On entry : 0/39
 16745 ;;		On exit  : 0/0
 16746 ;;		Unchanged: 0/0
 16747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16749 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16751 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16752 ;;Total ram usage:        5 bytes
 16753 ;; Hardware stack levels used:    1
 16754 ;; Hardware stack levels required when called:    8
 16755 ;; This function calls:
 16756 ;;		_DATAEE_ReadByte
 16757 ;;		_DATAEE_WriteByte
 16758 ;; This function is called by:
 16759 ;;		_bootLoadApplication
 16760 ;; This function uses a non-reentrant model
 16761 ;;
 16762                           
 16763                           	psect	text99
 16764  005D18                     __ptext99:
 16765                           	opt callstack 0
 16766  005D18                     _DATAEE_ReadByte_Platform:
 16767                           	opt callstack 21
 16768                           
 16769                           ;../app/app_src/EEPROM.c: 7:     uint8_t copy1, copy2, copy3;;../app/app_src/EEPROM.c: 8
      +                          :     copy1 = DATAEE_ReadByte(addr);
 16770                           
 16771                           ;incstack = 0
 16772  005D18  0060  F018  F002   	movff	DATAEE_ReadByte_Platform@addr,DATAEE_ReadByte@bAdd
 16773  005D1E  0060  F01C  F003   	movff	DATAEE_ReadByte_Platform@addr+1,DATAEE_ReadByte@bAdd+1
 16774  005D24  EC58  F04B         	call	_DATAEE_ReadByte	;wreg free
 16775  005D28  6E0A               	movwf	DATAEE_ReadByte_Platform@copy1^0,c
 16776                           
 16777                           ;../app/app_src/EEPROM.c: 9:     copy2 = DATAEE_ReadByte(addr + 256);
 16778  005D2A  0E00               	movlw	0
 16779  005D2C  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 16780  005D2E  6E02               	movwf	DATAEE_ReadByte@bAdd^0,c
 16781  005D30  0E01               	movlw	1
 16782  005D32  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 16783  005D34  6E03               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
 16784  005D36  EC58  F04B         	call	_DATAEE_ReadByte	;wreg free
 16785  005D3A  6E09               	movwf	DATAEE_ReadByte_Platform@copy2^0,c
 16786                           
 16787                           ;../app/app_src/EEPROM.c: 10:     copy3 = DATAEE_ReadByte(addr + 512);
 16788  005D3C  0E00               	movlw	0
 16789  005D3E  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 16790  005D40  6E02               	movwf	DATAEE_ReadByte@bAdd^0,c
 16791  005D42  0E02               	movlw	2
 16792  005D44  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 16793  005D46  6E03               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
 16794  005D48  EC58  F04B         	call	_DATAEE_ReadByte	;wreg free
 16795  005D4C  6E08               	movwf	DATAEE_ReadByte_Platform@copy3^0,c
 16796                           
 16797                           ; BSR set to: 57
 16798                           ;../app/app_src/EEPROM.c: 13:     if((copy1 == copy2) && (copy2 == copy3)){
 16799  005D4E  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16800  005D50  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 16801  005D52  A4D8               	btfss	status,2,c
 16802  005D54  D006               	goto	l17134
 16803                           
 16804                           ; BSR set to: 57
 16805  005D56  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 16806  005D58  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16807  005D5A  A4D8               	btfss	status,2,c
 16808  005D5C  D002               	goto	l17134
 16809  005D5E                     u17670:
 16810                           
 16811                           ;../app/app_src/EEPROM.c: 14:         return copy1;
 16812  005D5E  500A               	movf	DATAEE_ReadByte_Platform@copy1^0,w,c
 16813  005D60  0012               	return	
 16814  005D62                     l17134:
 16815                           
 16816                           ; BSR set to: 57
 16817  005D62  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16818  005D64  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 16819  005D66  A4D8               	btfss	status,2,c
 16820  005D68  D010               	goto	l17146
 16821                           
 16822                           ; BSR set to: 57
 16823  005D6A  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 16824  005D6C  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16825  005D6E  B4D8               	btfsc	status,2,c
 16826  005D70  D00C               	goto	l17146
 16827                           
 16828                           ; BSR set to: 57
 16829                           ;../app/app_src/EEPROM.c: 18:         DATAEE_WriteByte(addr + 512, copy1);
 16830  005D72  0E00               	movlw	0
 16831  005D74  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 16832  005D76  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 16833  005D78  0E02               	movlw	2
 16834  005D7A  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 16835  005D7C  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 16836  005D7E  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 16837  005D84  EC29  F046         	call	_DATAEE_WriteByte	;wreg free
 16838  005D88  D7EA               	goto	u17670
 16839  005D8A                     l17146:
 16840                           
 16841                           ; BSR set to: 57
 16842  005D8A  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16843  005D8C  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 16844  005D8E  B4D8               	btfsc	status,2,c
 16845  005D90  D011               	goto	l17158
 16846                           
 16847                           ; BSR set to: 57
 16848  005D92  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 16849  005D94  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16850  005D96  A4D8               	btfss	status,2,c
 16851  005D98  D00D               	goto	l17158
 16852                           
 16853                           ; BSR set to: 57
 16854                           ;../app/app_src/EEPROM.c: 23:         DATAEE_WriteByte(addr , copy2);
 16855  005D9A  0060  F018  F002   	movff	DATAEE_ReadByte_Platform@addr,DATAEE_WriteByte@bAdd
 16856  005DA0  0060  F01C  F003   	movff	DATAEE_ReadByte_Platform@addr+1,DATAEE_WriteByte@bAdd+1
 16857  005DA6  0060  F024  F004   	movff	DATAEE_ReadByte_Platform@copy2,DATAEE_WriteByte@bData
 16858  005DAC  EC29  F046         	call	_DATAEE_WriteByte	;wreg free
 16859                           
 16860                           ;../app/app_src/EEPROM.c: 24:         return copy2;
 16861  005DB0  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16862  005DB2  0012               	return	
 16863  005DB4                     l17158:
 16864                           
 16865                           ; BSR set to: 57
 16866  005DB4  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 16867  005DB6  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 16868  005DB8  A4D8               	btfss	status,2,c
 16869  005DBA  D010               	goto	l17170
 16870                           
 16871                           ; BSR set to: 57
 16872  005DBC  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 16873  005DBE  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16874  005DC0  B4D8               	btfsc	status,2,c
 16875  005DC2  D00C               	goto	l17170
 16876                           
 16877                           ; BSR set to: 57
 16878                           ;../app/app_src/EEPROM.c: 28:         DATAEE_WriteByte(addr + 256, copy1);
 16879  005DC4  0E00               	movlw	0
 16880  005DC6  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 16881  005DC8  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 16882  005DCA  0E01               	movlw	1
 16883  005DCC  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 16884  005DCE  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 16885  005DD0  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 16886  005DD6  EC29  F046         	call	_DATAEE_WriteByte	;wreg free
 16887  005DDA  D7C1               	goto	u17670
 16888  005DDC                     l17170:
 16889                           
 16890                           ; BSR set to: 57
 16891                           ;../app/app_src/EEPROM.c: 34:         DATAEE_WriteByte(addr + 256, copy1);
 16892  005DDC  0E00               	movlw	0
 16893  005DDE  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 16894  005DE0  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 16895  005DE2  0E01               	movlw	1
 16896  005DE4  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 16897  005DE6  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 16898  005DE8  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 16899  005DEE  EC29  F046         	call	_DATAEE_WriteByte	;wreg free
 16900                           
 16901                           ;../app/app_src/EEPROM.c: 35:         DATAEE_WriteByte(addr + 512, copy1);
 16902  005DF2  0E00               	movlw	0
 16903  005DF4  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 16904  005DF6  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 16905  005DF8  0E02               	movlw	2
 16906  005DFA  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 16907  005DFC  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 16908  005DFE  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 16909  005E04  EC29  F046         	call	_DATAEE_WriteByte	;wreg free
 16910  005E08  D7AA               	goto	u17670
 16911  005E0A                     __end_of_DATAEE_ReadByte_Platform:
 16912                           	opt callstack 0
 16913                           
 16914 ;; *************** function _DATAEE_WriteByte *****************
 16915 ;; Defined at:
 16916 ;;		line 172 in file "mcc_generated_files/memory.c"
 16917 ;; Parameters:    Size  Location     Type
 16918 ;;  bAdd            2    1[COMRAM] unsigned short 
 16919 ;;  bData           1    3[COMRAM] unsigned char 
 16920 ;; Auto vars:     Size  Location     Type
 16921 ;;  GIEBitValue     1    4[COMRAM] unsigned char 
 16922 ;; Return value:  Size  Location     Type
 16923 ;;                  1    wreg      void 
 16924 ;; Registers used:
 16925 ;;		wreg, status,2, status,0
 16926 ;; Tracked objects:
 16927 ;;		On entry : 0/0
 16928 ;;		On exit  : 0/0
 16929 ;;		Unchanged: 0/0
 16930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16931 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16932 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16934 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16935 ;;Total ram usage:        4 bytes
 16936 ;; Hardware stack levels used:    1
 16937 ;; Hardware stack levels required when called:    7
 16938 ;; This function calls:
 16939 ;;		Nothing
 16940 ;; This function is called by:
 16941 ;;		_DATAEE_ReadByte_Platform
 16942 ;;		_DATAEE_WriteByte_Platform
 16943 ;; This function uses a non-reentrant model
 16944 ;;
 16945                           
 16946                           	psect	text100
 16947  008C52                     __ptext100:
 16948                           	opt callstack 0
 16949  008C52                     _DATAEE_WriteByte:
 16950                           	opt callstack 19
 16951                           
 16952                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 16953                           
 16954                           ;incstack = 0
 16955  008C52  0E00               	movlw	0
 16956  008C54  BED2               	btfsc	210,7,c	;volatile
 16957  008C56  0E01               	movlw	1
 16958  008C58  6E05               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
 16959                           
 16960                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 16961  008C5A  5003               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
 16962  008C5C  0B03               	andlw	3
 16963  008C5E  0139               	movlb	57	; () banked
 16964  008C60  6FE1               	movwf	225,b	;volatile
 16965                           
 16966                           ; BSR set to: 57
 16967                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 16968  008C62  0060  F00B  F9E0   	movff	DATAEE_WriteByte@bAdd,14816	;volatile
 16969                           
 16970                           ; BSR set to: 57
 16971                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 16972  008C68  0060  F013  F9E3   	movff	DATAEE_WriteByte@bData,14819	;volatile
 16973                           
 16974                           ; BSR set to: 57
 16975                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 16976  008C6E  0E3F               	movlw	-193
 16977  008C70  17E5               	andwf	229,f,b	;volsfr
 16978                           
 16979                           ; BSR set to: 57
 16980                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 16981  008C72  85E5               	bsf	229,2,b	;volsfr
 16982                           
 16983                           ; BSR set to: 57
 16984                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 16985  008C74  9ED2               	bcf	210,7,c	;volatile
 16986                           
 16987                           ; BSR set to: 57
 16988                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 16989  008C76  0E55               	movlw	85
 16990  008C78  6FE6               	movwf	230,b	;volsfr
 16991                           
 16992                           ; BSR set to: 57
 16993                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 16994  008C7A  0EAA               	movlw	170
 16995  008C7C  6FE6               	movwf	230,b	;volsfr
 16996                           
 16997                           ; BSR set to: 57
 16998                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 16999  008C7E  83E5               	bsf	229,1,b	;volsfr
 17000  008C80                     l1226:
 17001                           
 17002                           ; BSR set to: 57
 17003                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 17004  008C80  B3E5               	btfsc	229,1,b	;volsfr
 17005  008C82  D7FE               	goto	l1226
 17006                           
 17007                           ; BSR set to: 57
 17008                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 17009  008C84  95E5               	bcf	229,2,b	;volsfr
 17010                           
 17011                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 17012  008C86  B005               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
 17013  008C88  D002               	bra	u15025
 17014  008C8A  9ED2               	bcf	210,7,c	;volatile
 17015  008C8C  D001               	bra	u15026
 17016  008C8E                     u15025:
 17017  008C8E  8ED2               	bsf	210,7,c	;volatile
 17018  008C90                     u15026:
 17019  008C90  0012               	return		;funcret
 17020  008C92                     __end_of_DATAEE_WriteByte:
 17021                           	opt callstack 0
 17022                           
 17023 ;; *************** function _DATAEE_ReadByte *****************
 17024 ;; Defined at:
 17025 ;;		line 194 in file "mcc_generated_files/memory.c"
 17026 ;; Parameters:    Size  Location     Type
 17027 ;;  bAdd            2    1[COMRAM] unsigned short 
 17028 ;; Auto vars:     Size  Location     Type
 17029 ;;		None
 17030 ;; Return value:  Size  Location     Type
 17031 ;;                  1    wreg      unsigned char 
 17032 ;; Registers used:
 17033 ;;		wreg, status,2, status,0
 17034 ;; Tracked objects:
 17035 ;;		On entry : 0/39
 17036 ;;		On exit  : 3F/39
 17037 ;;		Unchanged: 0/0
 17038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17039 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17042 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17043 ;;Total ram usage:        2 bytes
 17044 ;; Hardware stack levels used:    1
 17045 ;; Hardware stack levels required when called:    7
 17046 ;; This function calls:
 17047 ;;		Nothing
 17048 ;; This function is called by:
 17049 ;;		_DATAEE_ReadByte_Platform
 17050 ;; This function uses a non-reentrant model
 17051 ;;
 17052                           
 17053                           	psect	text101
 17054  0096B0                     __ptext101:
 17055                           	opt callstack 0
 17056  0096B0                     _DATAEE_ReadByte:
 17057                           	opt callstack 21
 17058                           
 17059                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
 17060                           
 17061                           ;incstack = 0
 17062  0096B0  5003               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
 17063  0096B2  0B03               	andlw	3
 17064  0096B4  0139               	movlb	57	; () banked
 17065  0096B6  6FE1               	movwf	225,b	;volatile
 17066                           
 17067                           ; BSR set to: 57
 17068                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 17069  0096B8  0060  F00B  F9E0   	movff	DATAEE_ReadByte@bAdd,14816	;volatile
 17070                           
 17071                           ; BSR set to: 57
 17072                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
 17073  0096BE  0E3F               	movlw	-193
 17074  0096C0  17E5               	andwf	229,f,b	;volsfr
 17075                           
 17076                           ; BSR set to: 57
 17077                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
 17078  0096C2  81E5               	bsf	229,0,b	;volsfr
 17079                           
 17080                           ; BSR set to: 57
 17081                           ;mcc_generated_files/memory.c: 200:     __nop();
 17082  0096C4  F000               	nop	
 17083                           
 17084                           ;mcc_generated_files/memory.c: 201:     __nop();
 17085  0096C6  F000               	nop	
 17086                           
 17087                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
 17088  0096C8  0139               	movlb	57	; () banked
 17089  0096CA  51E3               	movf	227,w,b	;volatile
 17090                           
 17091                           ; BSR set to: 57
 17092  0096CC  0012               	return		;funcret
 17093  0096CE                     __end_of_DATAEE_ReadByte:
 17094                           	opt callstack 0
 17095                           
 17096 ;; *************** function _CircularBufferInit *****************
 17097 ;; Defined at:
 17098 ;;		line 56 in file "../app/app_src/circular buffer.c"
 17099 ;; Parameters:    Size  Location     Type
 17100 ;;  ctx             2    8[COMRAM] PTR struct .
 17101 ;;		 -> ledtasksbuf(10), rx_buffer_queue_context(10), 
 17102 ;;  buf             2   10[COMRAM] PTR void 
 17103 ;;		 -> ledqueue(96), rx_buffer_queue(4), 
 17104 ;;  buf_size        2   12[COMRAM] unsigned int 
 17105 ;;  element_size    2   14[COMRAM] unsigned int 
 17106 ;; Auto vars:     Size  Location     Type
 17107 ;;  size            2   20[COMRAM] unsigned int 
 17108 ;; Return value:  Size  Location     Type
 17109 ;;                  1    wreg      void 
 17110 ;; Registers used:
 17111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17112 ;; Tracked objects:
 17113 ;;		On entry : 2/3D
 17114 ;;		On exit  : 2/0
 17115 ;;		Unchanged: 2/0
 17116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17117 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17118 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17119 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17120 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17121 ;;Total ram usage:       14 bytes
 17122 ;; Hardware stack levels used:    1
 17123 ;; Hardware stack levels required when called:    8
 17124 ;; This function calls:
 17125 ;;		___lwdiv
 17126 ;; This function is called by:
 17127 ;;		_bootLoadApplication
 17128 ;; This function uses a non-reentrant model
 17129 ;;
 17130                           
 17131                           	psect	text102
 17132  006F4E                     __ptext102:
 17133                           	opt callstack 0
 17134  006F4E                     _CircularBufferInit:
 17135                           	opt callstack 21
 17136                           
 17137                           ;../app/app_src/circular buffer.c: 56: void CircularBufferInit(CircularBufferContext *ct
      +                          x, void *buf, size_t buf_size,;../app/app_src/circular buffer.c: 57:                    
      +                               size_t element_size) {;../app/app_src/circular buffer.c: 58:     size_t size = buf_
      +                          size / element_size;
 17138                           
 17139                           ; BSR set to: 57
 17140                           ;incstack = 0
 17141  006F4E  0060  F034  F002   	movff	CircularBufferInit@buf_size,___lwdiv@dividend
 17142  006F54  0060  F038  F003   	movff	CircularBufferInit@buf_size+1,___lwdiv@dividend+1
 17143  006F5A  0060  F03C  F004   	movff	CircularBufferInit@element_size,___lwdiv@divisor
 17144  006F60  0060  F040  F005   	movff	CircularBufferInit@element_size+1,___lwdiv@divisor+1
 17145  006F66  EC40  F043         	call	___lwdiv	;wreg free
 17146  006F6A  0060  F008  F015   	movff	?___lwdiv,CircularBufferInit@size
 17147  006F70  0060  F00C  F016   	movff	?___lwdiv+1,CircularBufferInit@size+1
 17148                           
 17149                           ;../app/app_src/circular buffer.c: 59:     ctx->buf = buf;
 17150  006F76  0060  F027  FFD9   	movff	CircularBufferInit@ctx,fsr2l
 17151  006F7C  0060  F02B  FFDA   	movff	CircularBufferInit@ctx+1,fsr2h
 17152  006F82  0060  F02F  FFDE   	movff	CircularBufferInit@buf,postinc2
 17153  006F88  0060  F033  FFDD   	movff	CircularBufferInit@buf+1,postdec2
 17154                           
 17155                           ;../app/app_src/circular buffer.c: 60:     ctx->write_pos = 0u;
 17156  006F8E  EE20 F002          	lfsr	2,2
 17157  006F92  5009               	movf	CircularBufferInit@ctx^0,w,c
 17158  006F94  26D9               	addwf	fsr2l,f,c
 17159  006F96  500A               	movf	(CircularBufferInit@ctx+1)^0,w,c
 17160  006F98  22DA               	addwfc	fsr2h,f,c
 17161  006F9A  0E00               	movlw	0
 17162  006F9C  6EDE               	movwf	postinc2,c
 17163  006F9E  0E00               	movlw	0
 17164  006FA0  6EDD               	movwf	postdec2,c
 17165                           
 17166                           ;../app/app_src/circular buffer.c: 61:     ctx->read_pos = 0u;
 17167  006FA2  EE20 F004          	lfsr	2,4
 17168  006FA6  5009               	movf	CircularBufferInit@ctx^0,w,c
 17169  006FA8  26D9               	addwf	fsr2l,f,c
 17170  006FAA  500A               	movf	(CircularBufferInit@ctx+1)^0,w,c
 17171  006FAC  22DA               	addwfc	fsr2h,f,c
 17172  006FAE  0E00               	movlw	0
 17173  006FB0  6EDE               	movwf	postinc2,c
 17174  006FB2  0E00               	movlw	0
 17175  006FB4  6EDD               	movwf	postdec2,c
 17176                           
 17177                           ;../app/app_src/circular buffer.c: 62:     ctx->element_size = element_size;
 17178  006FB6  EE20 F006          	lfsr	2,6
 17179  006FBA  5009               	movf	CircularBufferInit@ctx^0,w,c
 17180  006FBC  26D9               	addwf	fsr2l,f,c
 17181  006FBE  500A               	movf	(CircularBufferInit@ctx+1)^0,w,c
 17182  006FC0  22DA               	addwfc	fsr2h,f,c
 17183  006FC2  0060  F03F  FFDE   	movff	CircularBufferInit@element_size,postinc2
 17184  006FC8  0060  F043  FFDD   	movff	CircularBufferInit@element_size+1,postdec2
 17185                           
 17186                           ;../app/app_src/circular buffer.c: 63:     ctx->max_size = size - 1;
 17187  006FCE  0EFF               	movlw	255
 17188  006FD0  6E11               	movwf	??_CircularBufferInit^0,c
 17189  006FD2  0EFF               	movlw	255
 17190  006FD4  6E12               	movwf	(??_CircularBufferInit+1)^0,c
 17191  006FD6  0060  F054  F013   	movff	CircularBufferInit@size,??_CircularBufferInit+2
 17192  006FDC  0060  F058  F014   	movff	CircularBufferInit@size+1,??_CircularBufferInit+3
 17193  006FE2  5011               	movf	??_CircularBufferInit^0,w,c
 17194  006FE4  2613               	addwf	(??_CircularBufferInit+2)^0,f,c
 17195  006FE6  5012               	movf	(??_CircularBufferInit+1)^0,w,c
 17196  006FE8  2214               	addwfc	(??_CircularBufferInit+3)^0,f,c
 17197  006FEA  EE20 F008          	lfsr	2,8
 17198  006FEE  5009               	movf	CircularBufferInit@ctx^0,w,c
 17199  006FF0  26D9               	addwf	fsr2l,f,c
 17200  006FF2  500A               	movf	(CircularBufferInit@ctx+1)^0,w,c
 17201  006FF4  22DA               	addwfc	fsr2h,f,c
 17202  006FF6  0060  F04F  FFDE   	movff	??_CircularBufferInit+2,postinc2
 17203  006FFC  0060  F053  FFDD   	movff	??_CircularBufferInit+3,postdec2
 17204  007002  0012               	return		;funcret
 17205  007004                     __end_of_CircularBufferInit:
 17206                           	opt callstack 0
 17207                           
 17208 ;; *************** function ___lwdiv *****************
 17209 ;; Defined at:
 17210 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
 17211 ;; Parameters:    Size  Location     Type
 17212 ;;  dividend        2    1[COMRAM] unsigned int 
 17213 ;;  divisor         2    3[COMRAM] unsigned int 
 17214 ;; Auto vars:     Size  Location     Type
 17215 ;;  quotient        2    5[COMRAM] unsigned int 
 17216 ;;  counter         1    7[COMRAM] unsigned char 
 17217 ;; Return value:  Size  Location     Type
 17218 ;;                  2    1[COMRAM] unsigned int 
 17219 ;; Registers used:
 17220 ;;		wreg, status,2, status,0
 17221 ;; Tracked objects:
 17222 ;;		On entry : 2/3D
 17223 ;;		On exit  : 2/0
 17224 ;;		Unchanged: 2/0
 17225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17226 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17227 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17229 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17230 ;;Total ram usage:        7 bytes
 17231 ;; Hardware stack levels used:    1
 17232 ;; Hardware stack levels required when called:    7
 17233 ;; This function calls:
 17234 ;;		Nothing
 17235 ;; This function is called by:
 17236 ;;		_CircularBufferInit
 17237 ;; This function uses a non-reentrant model
 17238 ;;
 17239                           
 17240                           	psect	text103
 17241  008680                     __ptext103:
 17242                           	opt callstack 0
 17243  008680                     ___lwdiv:
 17244                           	opt callstack 21
 17245                           
 17246                           ;incstack = 0
 17247  008680  0E00               	movlw	0
 17248  008682  6E07               	movwf	(___lwdiv@quotient+1)^0,c
 17249  008684  0E00               	movlw	0
 17250  008686  6E06               	movwf	___lwdiv@quotient^0,c
 17251  008688  5004               	movf	___lwdiv@divisor^0,w,c
 17252  00868A  1005               	iorwf	(___lwdiv@divisor+1)^0,w,c
 17253  00868C  B4D8               	btfsc	status,2,c
 17254  00868E  D01C               	goto	l3802
 17255  008690  0E01               	movlw	1
 17256  008692  6E08               	movwf	___lwdiv@counter^0,c
 17257  008694  D004               	goto	l13186
 17258  008696                     l13184:
 17259  008696  90D8               	bcf	status,0,c
 17260  008698  3604               	rlcf	___lwdiv@divisor^0,f,c
 17261  00869A  3605               	rlcf	(___lwdiv@divisor+1)^0,f,c
 17262  00869C  2A08               	incf	___lwdiv@counter^0,f,c
 17263  00869E                     l13186:
 17264  00869E  AE05               	btfss	(___lwdiv@divisor+1)^0,7,c
 17265  0086A0  D7FA               	goto	l13184
 17266  0086A2                     u12420:
 17267  0086A2  90D8               	bcf	status,0,c
 17268  0086A4  3606               	rlcf	___lwdiv@quotient^0,f,c
 17269  0086A6  3607               	rlcf	(___lwdiv@quotient+1)^0,f,c
 17270  0086A8  5004               	movf	___lwdiv@divisor^0,w,c
 17271  0086AA  5C02               	subwf	___lwdiv@dividend^0,w,c
 17272  0086AC  5005               	movf	(___lwdiv@divisor+1)^0,w,c
 17273  0086AE  5803               	subwfb	(___lwdiv@dividend+1)^0,w,c
 17274  0086B0  A0D8               	btfss	status,0,c
 17275  0086B2  D005               	goto	l13196
 17276  0086B4  5004               	movf	___lwdiv@divisor^0,w,c
 17277  0086B6  5E02               	subwf	___lwdiv@dividend^0,f,c
 17278  0086B8  5005               	movf	(___lwdiv@divisor+1)^0,w,c
 17279  0086BA  5A03               	subwfb	(___lwdiv@dividend+1)^0,f,c
 17280  0086BC  8006               	bsf	___lwdiv@quotient^0,0,c
 17281  0086BE                     l13196:
 17282  0086BE  90D8               	bcf	status,0,c
 17283  0086C0  3205               	rrcf	(___lwdiv@divisor+1)^0,f,c
 17284  0086C2  3204               	rrcf	___lwdiv@divisor^0,f,c
 17285  0086C4  2E08               	decfsz	___lwdiv@counter^0,f,c
 17286  0086C6  D7ED               	goto	u12420
 17287  0086C8                     l3802:
 17288  0086C8  0060  F018  F002   	movff	___lwdiv@quotient,?___lwdiv
 17289  0086CE  0060  F01C  F003   	movff	___lwdiv@quotient+1,?___lwdiv+1
 17290  0086D4  0012               	return		;funcret
 17291  0086D6                     __end_of___lwdiv:
 17292                           	opt callstack 0
 17293                           
 17294 ;; *************** function _SYS_TaskHandler *****************
 17295 ;; Defined at:
 17296 ;;		line 67 in file "../sys/sys_src/sys.c"
 17297 ;; Parameters:    Size  Location     Type
 17298 ;;		None
 17299 ;; Auto vars:     Size  Location     Type
 17300 ;;		None
 17301 ;; Return value:  Size  Location     Type
 17302 ;;                  1    wreg      void 
 17303 ;; Registers used:
 17304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 17305 ;; Tracked objects:
 17306 ;;		On entry : 0/3D
 17307 ;;		On exit  : 3F/0
 17308 ;;		Unchanged: 0/0
 17309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17314 ;;Total ram usage:        0 bytes
 17315 ;; Hardware stack levels used:    1
 17316 ;; Hardware stack levels required when called:   16
 17317 ;; This function calls:
 17318 ;;		_NWK_TaskHandler
 17319 ;;		_PHY_TaskHandler
 17320 ;;		_SYS_TimerTaskHandler
 17321 ;; This function is called by:
 17322 ;;		_main
 17323 ;; This function uses a non-reentrant model
 17324 ;;
 17325                           
 17326                           	psect	text104
 17327  00994A                     __ptext104:
 17328                           	opt callstack 0
 17329  00994A                     _SYS_TaskHandler:
 17330                           	opt callstack 14
 17331                           
 17332                           ;../sys/sys_src/sys.c: 69:   PHY_TaskHandler();
 17333                           
 17334                           ;incstack = 0
 17335  00994A  EC03  F04D         	call	_PHY_TaskHandler	;wreg free
 17336                           
 17337                           ;../sys/sys_src/sys.c: 70:   NWK_TaskHandler();
 17338  00994E  EC39  F04C         	call	_NWK_TaskHandler	;wreg free
 17339                           
 17340                           ;../sys/sys_src/sys.c: 71:   SYS_TimerTaskHandler();
 17341  009952  EC7C  F029         	call	_SYS_TimerTaskHandler	;wreg free
 17342                           
 17343                           ; BSR set to: 0
 17344  009956  0012               	return		;funcret
 17345  009958                     __end_of_SYS_TaskHandler:
 17346                           	opt callstack 0
 17347                           
 17348 ;; *************** function _SYS_TimerTaskHandler *****************
 17349 ;; Defined at:
 17350 ;;		line 112 in file "../sys/sys_src/sysTimer.c"
 17351 ;; Parameters:    Size  Location     Type
 17352 ;;		None
 17353 ;; Auto vars:     Size  Location     Type
 17354 ;;  timer           2   33[COMRAM] PTR struct SYS_Timer_t
 17355 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17356 ;;  elapsed         4   29[COMRAM] unsigned long 
 17357 ;;  cnt             1   28[COMRAM] unsigned char 
 17358 ;; Return value:  Size  Location     Type
 17359 ;;                  1    wreg      void 
 17360 ;; Registers used:
 17361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 17362 ;; Tracked objects:
 17363 ;;		On entry : 0/3D
 17364 ;;		On exit  : 3F/0
 17365 ;;		Unchanged: 0/0
 17366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17368 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17369 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17370 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17371 ;;Total ram usage:       11 bytes
 17372 ;; Hardware stack levels used:    1
 17373 ;; Hardware stack levels required when called:   10
 17374 ;; This function calls:
 17375 ;;		_nwkRxDuplicateRejectionTimerHandler
 17376 ;;		_nwkTxAckWaitTimerHandler
 17377 ;;		_nwkTxDelayTimerHandler
 17378 ;;		_placeTimer
 17379 ;; This function is called by:
 17380 ;;		_SYS_TaskHandler
 17381 ;; This function uses a non-reentrant model
 17382 ;;
 17383                           
 17384                           	psect	text105
 17385  0052F8                     __ptext105:
 17386                           	opt callstack 0
 17387  0052F8                     _SYS_TimerTaskHandler:
 17388                           	opt callstack 19
 17389                           
 17390                           ;../sys/sys_src/sysTimer.c: 114:     uint32_t elapsed;;../sys/sys_src/sysTimer.c: 115:  
      +                             uint8_t cnt;;../sys/sys_src/sysTimer.c: 117:     if (0 == halTimerIrqCount){
 17391                           
 17392                           ; BSR set to: 0
 17393                           ;incstack = 0
 17394  0052F8  0100               	movlb	0	; () banked
 17395  0052FA  51C3               	movf	_halTimerIrqCount& (0+255),w,b	;volatile
 17396  0052FC  11C4               	iorwf	(_halTimerIrqCount+1)& (0+255),w,b	;volatile
 17397  0052FE  B4D8               	btfsc	status,2,c
 17398  005300  0012               	return	
 17399                           
 17400                           ; BSR set to: 0
 17401                           ;../sys/sys_src/sysTimer.c: 121:     PIE3bits.TMR0IE = 0;
 17402                           
 17403                           ;../sys/sys_src/sysTimer.c: 119:     }
 17404  005302  0139               	movlb	57	; () banked
 17405  005304  9F93               	bcf	147,7,b	;volatile
 17406                           
 17407                           ;../sys/sys_src/sysTimer.c: 122:     cnt = halTimerIrqCount;
 17408  005306  0060  F30C  F01D   	movff	_halTimerIrqCount,SYS_TimerTaskHandler@cnt	;volatile
 17409                           
 17410                           ; BSR set to: 57
 17411                           ;../sys/sys_src/sysTimer.c: 123:     halTimerIrqCount = 0;
 17412  00530C  0E00               	movlw	0
 17413  00530E  0100               	movlb	0	; () banked
 17414  005310  6FC4               	movwf	(_halTimerIrqCount+1)& (0+255),b	;volatile
 17415  005312  0E00               	movlw	0
 17416  005314  6FC3               	movwf	_halTimerIrqCount& (0+255),b	;volatile
 17417                           
 17418                           ; BSR set to: 0
 17419                           ;../sys/sys_src/sysTimer.c: 124:     PIE3bits.TMR0IE = 1;
 17420  005316  0139               	movlb	57	; () banked
 17421  005318  8F93               	bsf	147,7,b	;volatile
 17422                           
 17423                           ;../sys/sys_src/sysTimer.c: 126:     elapsed = cnt * 1ul;
 17424  00531A  501D               	movf	SYS_TimerTaskHandler@cnt^0,w,c
 17425  00531C  6E1E               	movwf	SYS_TimerTaskHandler@elapsed^0,c
 17426  00531E  6A1F               	clrf	(SYS_TimerTaskHandler@elapsed+1)^0,c
 17427  005320  6A20               	clrf	(SYS_TimerTaskHandler@elapsed+2)^0,c
 17428  005322  6A21               	clrf	(SYS_TimerTaskHandler@elapsed+3)^0,c
 17429                           
 17430                           ;../sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
 17431  005324  D04E               	goto	u13039
 17432  005326                     l13714:
 17433                           
 17434                           ; BSR set to: 0
 17435                           ;../sys/sys_src/sysTimer.c: 129:     {;../sys/sys_src/sysTimer.c: 130:         SYS_Timer
      +                          _t *timer = timers;
 17436  005326  0060  F2EC  F022   	movff	_timers,SYS_TimerTaskHandler@timer
 17437  00532C  0060  F2F0  F023   	movff	_timers+1,SYS_TimerTaskHandler@timer+1
 17438                           
 17439                           ; BSR set to: 0
 17440                           ;../sys/sys_src/sysTimer.c: 132:         elapsed -= timers->timeout;
 17441  005332  EE20 F002          	lfsr	2,2
 17442  005336  51BB               	movf	_timers& (0+255),w,b
 17443  005338  26D9               	addwf	fsr2l,f,c
 17444  00533A  51BC               	movf	(_timers+1)& (0+255),w,b
 17445  00533C  22DA               	addwfc	fsr2h,f,c
 17446  00533E  50DE               	movf	postinc2,w,c
 17447  005340  5E1E               	subwf	SYS_TimerTaskHandler@elapsed^0,f,c
 17448  005342  50DE               	movf	postinc2,w,c
 17449  005344  5A1F               	subwfb	(SYS_TimerTaskHandler@elapsed+1)^0,f,c
 17450  005346  50DE               	movf	postinc2,w,c
 17451  005348  5A20               	subwfb	(SYS_TimerTaskHandler@elapsed+2)^0,f,c
 17452  00534A  50DD               	movf	postdec2,w,c
 17453  00534C  5A21               	subwfb	(SYS_TimerTaskHandler@elapsed+3)^0,f,c
 17454                           
 17455                           ;../sys/sys_src/sysTimer.c: 133:         timers = timers->next;
 17456  00534E  0060  F2EF  FFD9   	movff	_timers,fsr2l
 17457  005354  0060  F2F3  FFDA   	movff	_timers+1,fsr2h
 17458  00535A  006F FF78  F0BB    	movff	postinc2,_timers
 17459  005360  006F FF74  F0BC    	movff	postdec2,_timers+1
 17460                           
 17461                           ; BSR set to: 0
 17462                           ;../sys/sys_src/sysTimer.c: 134:         if (SYS_TIMER_PERIODIC_MODE == timer->mode)
 17463  005366  EE20 F00A          	lfsr	2,10
 17464  00536A  5022               	movf	SYS_TimerTaskHandler@timer^0,w,c
 17465  00536C  26D9               	addwf	fsr2l,f,c
 17466  00536E  5023               	movf	(SYS_TimerTaskHandler@timer+1)^0,w,c
 17467  005370  22DA               	addwfc	fsr2h,f,c
 17468  005372  04DE               	decf	postinc2,w,c
 17469  005374  A4D8               	btfss	status,2,c
 17470  005376  D008               	goto	l13722
 17471                           
 17472                           ; BSR set to: 0
 17473                           ;../sys/sys_src/sysTimer.c: 135:           placeTimer(timer);
 17474  005378  0060  F088  F002   	movff	SYS_TimerTaskHandler@timer,placeTimer@timer
 17475  00537E  0060  F08C  F003   	movff	SYS_TimerTaskHandler@timer+1,placeTimer@timer+1
 17476  005384  EC09  F01E         	call	_placeTimer	;wreg free
 17477  005388                     l13722:
 17478                           
 17479                           ;../sys/sys_src/sysTimer.c: 136:         timer->handler(timer);
 17480  005388  0060  F088  F012   	movff	SYS_TimerTaskHandler@timer,nwkTxDelayTimerHandler@timer
 17481  00538E  0060  F08C  F013   	movff	SYS_TimerTaskHandler@timer+1,nwkTxDelayTimerHandler@timer+1
 17482  005394  EE20 F00B          	lfsr	2,11
 17483  005398  5022               	movf	SYS_TimerTaskHandler@timer^0,w,c
 17484  00539A  26D9               	addwf	fsr2l,f,c
 17485  00539C  5023               	movf	(SYS_TimerTaskHandler@timer+1)^0,w,c
 17486  00539E  22DA               	addwfc	fsr2h,f,c
 17487  0053A0  006F FF78  F019    	movff	postinc2,??_SYS_TimerTaskHandler
 17488  0053A6  006F FF74  F01A    	movff	postdec2,??_SYS_TimerTaskHandler+1
 17489  0053AC  D801               	call	u13038
 17490  0053AE  D009               	goto	u13039
 17491  0053B0                     u13038:
 17492  0053B0  0005               	push	
 17493  0053B2  6EFA               	movwf	pclath,c
 17494  0053B4  5019               	movf	??_SYS_TimerTaskHandler^0,w,c
 17495  0053B6  6EFD               	movwf	tosl,c
 17496  0053B8  501A               	movf	(??_SYS_TimerTaskHandler+1)^0,w,c
 17497  0053BA  6EFE               	movwf	tosh,c
 17498  0053BC  6AFF               	clrf	tosu,c
 17499  0053BE  50FA               	movf	pclath,w,c
 17500  0053C0  0012               	return		;indir
 17501  0053C2                     u13039:
 17502                           
 17503                           ;../sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
 17504  0053C2  0100               	movlb	0	; () banked
 17505  0053C4  51BB               	movf	_timers& (0+255),w,b
 17506  0053C6  11BC               	iorwf	(_timers+1)& (0+255),w,b
 17507  0053C8  B4D8               	btfsc	status,2,c
 17508  0053CA  D010               	goto	u13050
 17509                           
 17510                           ; BSR set to: 0
 17511  0053CC  EE20 F002          	lfsr	2,2
 17512  0053D0  51BB               	movf	_timers& (0+255),w,b
 17513  0053D2  26D9               	addwf	fsr2l,f,c
 17514  0053D4  51BC               	movf	(_timers+1)& (0+255),w,b
 17515  0053D6  22DA               	addwfc	fsr2h,f,c
 17516  0053D8  50DE               	movf	postinc2,w,c
 17517  0053DA  5C1E               	subwf	SYS_TimerTaskHandler@elapsed^0,w,c
 17518  0053DC  50DE               	movf	postinc2,w,c
 17519  0053DE  581F               	subwfb	(SYS_TimerTaskHandler@elapsed+1)^0,w,c
 17520  0053E0  50DE               	movf	postinc2,w,c
 17521  0053E2  5820               	subwfb	(SYS_TimerTaskHandler@elapsed+2)^0,w,c
 17522  0053E4  50DE               	movf	postinc2,w,c
 17523  0053E6  5821               	subwfb	(SYS_TimerTaskHandler@elapsed+3)^0,w,c
 17524  0053E8  B0D8               	btfsc	status,0,c
 17525  0053EA  D79D               	goto	l13714
 17526  0053EC                     u13050:
 17527                           
 17528                           ; BSR set to: 0
 17529                           ;../sys/sys_src/sysTimer.c: 139:     if (timers){
 17530  0053EC  51BB               	movf	_timers& (0+255),w,b
 17531  0053EE  11BC               	iorwf	(_timers+1)& (0+255),w,b
 17532  0053F0  B4D8               	btfsc	status,2,c
 17533  0053F2  0012               	return	
 17534                           
 17535                           ; BSR set to: 0
 17536                           ;../sys/sys_src/sysTimer.c: 140:         timers->timeout -= elapsed;
 17537  0053F4  EE20 F002          	lfsr	2,2
 17538  0053F8  51BB               	movf	_timers& (0+255),w,b
 17539  0053FA  26D9               	addwf	fsr2l,f,c
 17540  0053FC  51BC               	movf	(_timers+1)& (0+255),w,b
 17541  0053FE  22DA               	addwfc	fsr2h,f,c
 17542  005400  501E               	movf	SYS_TimerTaskHandler@elapsed^0,w,c
 17543  005402  5EDE               	subwf	postinc2,f,c
 17544  005404  501F               	movf	(SYS_TimerTaskHandler@elapsed+1)^0,w,c
 17545  005406  5ADE               	subwfb	postinc2,f,c
 17546  005408  5020               	movf	(SYS_TimerTaskHandler@elapsed+2)^0,w,c
 17547  00540A  5ADE               	subwfb	postinc2,f,c
 17548  00540C  5021               	movf	(SYS_TimerTaskHandler@elapsed+3)^0,w,c
 17549  00540E  5ADE               	subwfb	postinc2,f,c
 17550                           
 17551                           ; BSR set to: 0
 17552  005410  0012               	return		;funcret
 17553  005412                     __end_of_SYS_TimerTaskHandler:
 17554                           	opt callstack 0
 17555                           
 17556 ;; *************** function _nwkTxAckWaitTimerHandler *****************
 17557 ;; Defined at:
 17558 ;;		line 205 in file "../nwk/nwk_src/nwkTx.c"
 17559 ;; Parameters:    Size  Location     Type
 17560 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 17561 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17562 ;; Auto vars:     Size  Location     Type
 17563 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 17564 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17565 ;;  restart         1   21[COMRAM] _Bool 
 17566 ;; Return value:  Size  Location     Type
 17567 ;;                  1    wreg      void 
 17568 ;; Registers used:
 17569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17570 ;; Tracked objects:
 17571 ;;		On entry : 0/0
 17572 ;;		On exit  : 0/0
 17573 ;;		Unchanged: 0/0
 17574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17576 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17577 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17578 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17579 ;;Total ram usage:        7 bytes
 17580 ;; Hardware stack levels used:    1
 17581 ;; Hardware stack levels required when called:    9
 17582 ;; This function calls:
 17583 ;;		_SYS_TimerStart
 17584 ;;		_nwkFrameNext
 17585 ;;		_nwkTxConfirm
 17586 ;; This function is called by:
 17587 ;;		_nwkTxInit
 17588 ;;		_SYS_TimerTaskHandler
 17589 ;; This function uses a non-reentrant model
 17590 ;;
 17591                           
 17592                           	psect	text106
 17593  007864                     __ptext106:
 17594                           	opt callstack 0
 17595  007864                     _nwkTxAckWaitTimerHandler:
 17596                           	opt callstack 19
 17597                           
 17598                           ;../nwk/nwk_src/nwkTx.c: 205: static void nwkTxAckWaitTimerHandler(SYS_Timer_t *timer);.
      +                          ./nwk/nwk_src/nwkTx.c: 206: {;../nwk/nwk_src/nwkTx.c: 207:   NwkFrame_t *frame = ((void*
      +                          )0);
 17599                           
 17600                           ; BSR set to: 0
 17601                           ;incstack = 0
 17602  007864  0E00               	movlw	0
 17603  007866  6E17               	movwf	nwkTxAckWaitTimerHandler@frame^0,c
 17604  007868  0E00               	movlw	0
 17605  00786A  6E18               	movwf	(nwkTxAckWaitTimerHandler@frame+1)^0,c
 17606                           
 17607                           ;../nwk/nwk_src/nwkTx.c: 208:   _Bool restart = 0;
 17608  00786C  0E00               	movlw	0
 17609  00786E  6E16               	movwf	nwkTxAckWaitTimerHandler@restart^0,c
 17610                           
 17611                           ;../nwk/nwk_src/nwkTx.c: 210:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 17612  007870  D023               	goto	l2438
 17613  007872                     l13084:
 17614                           
 17615                           ;../nwk/nwk_src/nwkTx.c: 211:   {;../nwk/nwk_src/nwkTx.c: 212:     if (NWK_TX_STATE_WAIT
      +                          _ACK == frame->state)
 17616  007872  0060  F05F  FFD9   	movff	nwkTxAckWaitTimerHandler@frame,fsr2l
 17617  007878  0060  F063  FFDA   	movff	nwkTxAckWaitTimerHandler@frame+1,fsr2h
 17618  00787E  0E16               	movlw	22
 17619  007880  18DE               	xorwf	postinc2,w,c
 17620  007882  A4D8               	btfss	status,2,c
 17621  007884  D019               	goto	l2438
 17622                           
 17623                           ;../nwk/nwk_src/nwkTx.c: 213:     {;../nwk/nwk_src/nwkTx.c: 214:       restart = 1;
 17624  007886  0E01               	movlw	1
 17625  007888  6E16               	movwf	nwkTxAckWaitTimerHandler@restart^0,c
 17626                           
 17627                           ;../nwk/nwk_src/nwkTx.c: 216:       if (0 == --frame->tx.timeout)
 17628  00788A  EE20 F084          	lfsr	2,132
 17629  00788E  5017               	movf	nwkTxAckWaitTimerHandler@frame^0,w,c
 17630  007890  26D9               	addwf	fsr2l,f,c
 17631  007892  5018               	movf	(nwkTxAckWaitTimerHandler@frame+1)^0,w,c
 17632  007894  22DA               	addwfc	fsr2h,f,c
 17633  007896  06DE               	decf	postinc2,f,c
 17634  007898  0E00               	movlw	0
 17635  00789A  5ADD               	subwfb	postdec2,f,c
 17636  00789C  50DE               	movf	postinc2,w,c
 17637  00789E  10DE               	iorwf	postinc2,w,c
 17638  0078A0  A4D8               	btfss	status,2,c
 17639  0078A2  D00A               	goto	l2438
 17640                           
 17641                           ;../nwk/nwk_src/nwkTx.c: 217:         nwkTxConfirm(frame, NWK_NO_ACK_STATUS);
 17642  0078A4  0060  F05C  F002   	movff	nwkTxAckWaitTimerHandler@frame,nwkTxConfirm@frame
 17643  0078AA  0060  F060  F003   	movff	nwkTxAckWaitTimerHandler@frame+1,nwkTxConfirm@frame+1
 17644  0078B0  0E10               	movlw	16
 17645  0078B2  6E04               	movwf	nwkTxConfirm@status^0,c
 17646  0078B4  EC2A  F04A         	call	_nwkTxConfirm	;wreg free
 17647  0078B8                     l2438:
 17648                           
 17649                           ;../nwk/nwk_src/nwkTx.c: 210:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 17650  0078B8  0060  F05C  F002   	movff	nwkTxAckWaitTimerHandler@frame,nwkFrameNext@frame
 17651  0078BE  0060  F060  F003   	movff	nwkTxAckWaitTimerHandler@frame+1,nwkFrameNext@frame+1
 17652  0078C4  EC06  F03D         	call	_nwkFrameNext	;wreg free
 17653  0078C8  0060  F008  F017   	movff	?_nwkFrameNext,nwkTxAckWaitTimerHandler@frame
 17654  0078CE  0060  F00C  F018   	movff	?_nwkFrameNext+1,nwkTxAckWaitTimerHandler@frame+1
 17655  0078D4  5017               	movf	nwkTxAckWaitTimerHandler@frame^0,w,c
 17656  0078D6  1018               	iorwf	(nwkTxAckWaitTimerHandler@frame+1)^0,w,c
 17657  0078D8  A4D8               	btfss	status,2,c
 17658  0078DA  D7CB               	goto	l13084
 17659                           
 17660                           ;../nwk/nwk_src/nwkTx.c: 221:   if (restart)
 17661  0078DC  5016               	movf	nwkTxAckWaitTimerHandler@restart^0,w,c
 17662  0078DE  B4D8               	btfsc	status,2,c
 17663  0078E0  0012               	return	
 17664                           
 17665                           ;../nwk/nwk_src/nwkTx.c: 222:     SYS_TimerStart(timer);
 17666  0078E2  0060  F048  F010   	movff	nwkTxAckWaitTimerHandler@timer,SYS_TimerStart@timer
 17667  0078E8  0060  F04C  F011   	movff	nwkTxAckWaitTimerHandler@timer+1,SYS_TimerStart@timer+1
 17668  0078EE  ECDC  F049         	call	_SYS_TimerStart	;wreg free
 17669  0078F2  0012               	return		;funcret
 17670  0078F4                     __end_of_nwkTxAckWaitTimerHandler:
 17671                           	opt callstack 0
 17672                           
 17673 ;; *************** function _nwkRxDuplicateRejectionTimerHandler *****************
 17674 ;; Defined at:
 17675 ;;		line 181 in file "../nwk/nwk_src/nwkRx.c"
 17676 ;; Parameters:    Size  Location     Type
 17677 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 17678 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17679 ;; Auto vars:     Size  Location     Type
 17680 ;;  i               1   20[COMRAM] unsigned char 
 17681 ;;  restart         1   19[COMRAM] _Bool 
 17682 ;; Return value:  Size  Location     Type
 17683 ;;                  1    wreg      void 
 17684 ;; Registers used:
 17685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17686 ;; Tracked objects:
 17687 ;;		On entry : 0/0
 17688 ;;		On exit  : 0/0
 17689 ;;		Unchanged: 0/0
 17690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17692 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17694 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17695 ;;Total ram usage:        4 bytes
 17696 ;; Hardware stack levels used:    1
 17697 ;; Hardware stack levels required when called:    9
 17698 ;; This function calls:
 17699 ;;		_SYS_TimerStart
 17700 ;; This function is called by:
 17701 ;;		_nwkRxInit
 17702 ;;		_SYS_TimerTaskHandler
 17703 ;; This function uses a non-reentrant model
 17704 ;;
 17705                           
 17706                           	psect	text107
 17707  00872A                     __ptext107:
 17708                           	opt callstack 0
 17709  00872A                     _nwkRxDuplicateRejectionTimerHandler:
 17710                           	opt callstack 19
 17711                           
 17712                           ;../nwk/nwk_src/nwkRx.c: 181: static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_
      +                          t *timer);../nwk/nwk_src/nwkRx.c: 182: {;../nwk/nwk_src/nwkRx.c: 183:   _Bool restart = 
      +                          0;
 17713                           
 17714                           ;incstack = 0
 17715  00872A  0E00               	movlw	0
 17716  00872C  6E14               	movwf	nwkRxDuplicateRejectionTimerHandler@restart^0,c
 17717                           
 17718                           ;../nwk/nwk_src/nwkRx.c: 185:   for (uint8_t i = 0; i < 10; i++)
 17719  00872E  0E00               	movlw	0
 17720  008730  6E15               	movwf	nwkRxDuplicateRejectionTimerHandler@i^0,c
 17721  008732                     l13066:
 17722                           
 17723                           ;../nwk/nwk_src/nwkRx.c: 186:   {;../nwk/nwk_src/nwkRx.c: 187:     if (nwkRxDuplicateRej
      +                          ectionTable[i].ttl)
 17724  008732  5015               	movf	nwkRxDuplicateRejectionTimerHandler@i^0,w,c
 17725  008734  0D05               	mullw	5
 17726  008736  0EC4               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 17727  008738  24F3               	addwf	243,w,c
 17728  00873A  6ED9               	movwf	fsr2l,c
 17729  00873C  0E03               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 17730  00873E  20F4               	addwfc	prodh,w,c
 17731  008740  6EDA               	movwf	fsr2h,c
 17732  008742  50DF               	movf	indf2,w,c
 17733  008744  B4D8               	btfsc	status,2,c
 17734  008746  D00B               	goto	l13072
 17735                           
 17736                           ;../nwk/nwk_src/nwkRx.c: 188:     {;../nwk/nwk_src/nwkRx.c: 189:       nwkRxDuplicateRej
      +                          ectionTable[i].ttl--;
 17737  008748  5015               	movf	nwkRxDuplicateRejectionTimerHandler@i^0,w,c
 17738  00874A  0D05               	mullw	5
 17739  00874C  0EC4               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 17740  00874E  24F3               	addwf	243,w,c
 17741  008750  6ED9               	movwf	fsr2l,c
 17742  008752  0E03               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 17743  008754  20F4               	addwfc	prodh,w,c
 17744  008756  6EDA               	movwf	fsr2h,c
 17745  008758  06DF               	decf	indf2,f,c
 17746                           
 17747                           ;../nwk/nwk_src/nwkRx.c: 190:       restart = 1;
 17748  00875A  0E01               	movlw	1
 17749  00875C  6E14               	movwf	nwkRxDuplicateRejectionTimerHandler@restart^0,c
 17750  00875E                     l13072:
 17751                           
 17752                           ;../nwk/nwk_src/nwkRx.c: 192:   }
 17753  00875E  2A15               	incf	nwkRxDuplicateRejectionTimerHandler@i^0,f,c
 17754  008760  0E09               	movlw	9
 17755  008762  6415               	cpfsgt	nwkRxDuplicateRejectionTimerHandler@i^0,c
 17756  008764  D7E6               	goto	l13066
 17757                           
 17758                           ;../nwk/nwk_src/nwkRx.c: 194:   if (restart)
 17759  008766  5014               	movf	nwkRxDuplicateRejectionTimerHandler@restart^0,w,c
 17760  008768  B4D8               	btfsc	status,2,c
 17761  00876A  0012               	return	
 17762                           
 17763                           ;../nwk/nwk_src/nwkRx.c: 195:     SYS_TimerStart(timer);
 17764  00876C  0060  F048  F010   	movff	nwkRxDuplicateRejectionTimerHandler@timer,SYS_TimerStart@timer
 17765  008772  0060  F04C  F011   	movff	nwkRxDuplicateRejectionTimerHandler@timer+1,SYS_TimerStart@timer+1
 17766  008778  ECDC  F049         	call	_SYS_TimerStart	;wreg free
 17767  00877C  0012               	return		;funcret
 17768  00877E                     __end_of_nwkRxDuplicateRejectionTimerHandler:
 17769                           	opt callstack 0
 17770                           
 17771 ;; *************** function _nwkTxDelayTimerHandler *****************
 17772 ;; Defined at:
 17773 ;;		line 244 in file "../nwk/nwk_src/nwkTx.c"
 17774 ;; Parameters:    Size  Location     Type
 17775 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 17776 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17777 ;; Auto vars:     Size  Location     Type
 17778 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 17779 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17780 ;;  restart         1   21[COMRAM] _Bool 
 17781 ;; Return value:  Size  Location     Type
 17782 ;;                  1    wreg      void 
 17783 ;; Registers used:
 17784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17785 ;; Tracked objects:
 17786 ;;		On entry : 0/0
 17787 ;;		On exit  : 0/0
 17788 ;;		Unchanged: 0/0
 17789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17790 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17791 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17792 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17793 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17794 ;;Total ram usage:        7 bytes
 17795 ;; Hardware stack levels used:    1
 17796 ;; Hardware stack levels required when called:    9
 17797 ;; This function calls:
 17798 ;;		_SYS_TimerStart
 17799 ;;		_nwkFrameNext
 17800 ;; This function is called by:
 17801 ;;		_nwkTxInit
 17802 ;;		_SYS_TimerTaskHandler
 17803 ;; This function uses a non-reentrant model
 17804 ;;
 17805                           
 17806                           	psect	text108
 17807  007980                     __ptext108:
 17808                           	opt callstack 0
 17809  007980                     _nwkTxDelayTimerHandler:
 17810                           	opt callstack 19
 17811                           
 17812                           ;../nwk/nwk_src/nwkTx.c: 244: static void nwkTxDelayTimerHandler(SYS_Timer_t *timer);../
      +                          nwk/nwk_src/nwkTx.c: 245: {;../nwk/nwk_src/nwkTx.c: 246:   NwkFrame_t *frame = ((void*)0
      +                          );
 17813                           
 17814                           ;incstack = 0
 17815  007980  0E00               	movlw	0
 17816  007982  6E17               	movwf	nwkTxDelayTimerHandler@frame^0,c
 17817  007984  0E00               	movlw	0
 17818  007986  6E18               	movwf	(nwkTxDelayTimerHandler@frame+1)^0,c
 17819                           
 17820                           ;../nwk/nwk_src/nwkTx.c: 247:   _Bool restart = 0;
 17821  007988  0E00               	movlw	0
 17822  00798A  6E16               	movwf	nwkTxDelayTimerHandler@restart^0,c
 17823                           
 17824                           ;../nwk/nwk_src/nwkTx.c: 249:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 17825  00798C  D021               	goto	l13108
 17826  00798E                     l13100:
 17827                           
 17828                           ;../nwk/nwk_src/nwkTx.c: 250:   {;../nwk/nwk_src/nwkTx.c: 251:     if (NWK_TX_STATE_WAIT
      +                          _DELAY == frame->state)
 17829  00798E  0060  F05F  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
 17830  007994  0060  F063  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
 17831  00799A  0E11               	movlw	17
 17832  00799C  18DE               	xorwf	postinc2,w,c
 17833  00799E  A4D8               	btfss	status,2,c
 17834  0079A0  D017               	goto	l13108
 17835                           
 17836                           ;../nwk/nwk_src/nwkTx.c: 252:     {;../nwk/nwk_src/nwkTx.c: 253:       restart = 1;
 17837  0079A2  0E01               	movlw	1
 17838  0079A4  6E16               	movwf	nwkTxDelayTimerHandler@restart^0,c
 17839                           
 17840                           ;../nwk/nwk_src/nwkTx.c: 255:       if (0 == --frame->tx.timeout)
 17841  0079A6  EE20 F084          	lfsr	2,132
 17842  0079AA  5017               	movf	nwkTxDelayTimerHandler@frame^0,w,c
 17843  0079AC  26D9               	addwf	fsr2l,f,c
 17844  0079AE  5018               	movf	(nwkTxDelayTimerHandler@frame+1)^0,w,c
 17845  0079B0  22DA               	addwfc	fsr2h,f,c
 17846  0079B2  06DE               	decf	postinc2,f,c
 17847  0079B4  0E00               	movlw	0
 17848  0079B6  5ADD               	subwfb	postdec2,f,c
 17849  0079B8  50DE               	movf	postinc2,w,c
 17850  0079BA  10DE               	iorwf	postinc2,w,c
 17851  0079BC  A4D8               	btfss	status,2,c
 17852  0079BE  D008               	goto	l13108
 17853                           
 17854                           ;../nwk/nwk_src/nwkTx.c: 256:         frame->state = NWK_TX_STATE_SEND;
 17855  0079C0  0060  F05F  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
 17856  0079C6  0060  F063  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
 17857  0079CC  0E13               	movlw	19
 17858  0079CE  6EDF               	movwf	indf2,c
 17859  0079D0                     l13108:
 17860                           
 17861                           ;../nwk/nwk_src/nwkTx.c: 249:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 17862  0079D0  0060  F05C  F002   	movff	nwkTxDelayTimerHandler@frame,nwkFrameNext@frame
 17863  0079D6  0060  F060  F003   	movff	nwkTxDelayTimerHandler@frame+1,nwkFrameNext@frame+1
 17864  0079DC  EC06  F03D         	call	_nwkFrameNext	;wreg free
 17865  0079E0  0060  F008  F017   	movff	?_nwkFrameNext,nwkTxDelayTimerHandler@frame
 17866  0079E6  0060  F00C  F018   	movff	?_nwkFrameNext+1,nwkTxDelayTimerHandler@frame+1
 17867  0079EC  5017               	movf	nwkTxDelayTimerHandler@frame^0,w,c
 17868  0079EE  1018               	iorwf	(nwkTxDelayTimerHandler@frame+1)^0,w,c
 17869  0079F0  A4D8               	btfss	status,2,c
 17870  0079F2  D7CD               	goto	l13100
 17871                           
 17872                           ;../nwk/nwk_src/nwkTx.c: 260:   if (restart)
 17873  0079F4  5016               	movf	nwkTxDelayTimerHandler@restart^0,w,c
 17874  0079F6  B4D8               	btfsc	status,2,c
 17875  0079F8  0012               	return	
 17876                           
 17877                           ;../nwk/nwk_src/nwkTx.c: 261:     SYS_TimerStart(timer);
 17878  0079FA  0060  F048  F010   	movff	nwkTxDelayTimerHandler@timer,SYS_TimerStart@timer
 17879  007A00  0060  F04C  F011   	movff	nwkTxDelayTimerHandler@timer+1,SYS_TimerStart@timer+1
 17880  007A06  ECDC  F049         	call	_SYS_TimerStart	;wreg free
 17881  007A0A  0012               	return		;funcret
 17882  007A0C                     __end_of_nwkTxDelayTimerHandler:
 17883                           	opt callstack 0
 17884                           
 17885 ;; *************** function _nwkTxConfirm *****************
 17886 ;; Defined at:
 17887 ;;		line 227 in file "../nwk/nwk_src/nwkTx.c"
 17888 ;; Parameters:    Size  Location     Type
 17889 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 17890 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17891 ;;  status          1    3[COMRAM] unsigned char 
 17892 ;; Auto vars:     Size  Location     Type
 17893 ;;		None
 17894 ;; Return value:  Size  Location     Type
 17895 ;;                  1    wreg      void 
 17896 ;; Registers used:
 17897 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17898 ;; Tracked objects:
 17899 ;;		On entry : 0/0
 17900 ;;		On exit  : 0/0
 17901 ;;		Unchanged: 0/0
 17902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17903 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17906 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17907 ;;Total ram usage:        3 bytes
 17908 ;; Hardware stack levels used:    1
 17909 ;; Hardware stack levels required when called:    7
 17910 ;; This function calls:
 17911 ;;		Nothing
 17912 ;; This function is called by:
 17913 ;;		_nwkTxAckWaitTimerHandler
 17914 ;; This function uses a non-reentrant model
 17915 ;;
 17916                           
 17917                           	psect	text109
 17918  009454                     __ptext109:
 17919                           	opt callstack 0
 17920  009454                     _nwkTxConfirm:
 17921                           	opt callstack 20
 17922                           
 17923                           ;../nwk/nwk_src/nwkTx.c: 227: void nwkTxConfirm(NwkFrame_t *frame, uint8_t status);../nw
      +                          k/nwk_src/nwkTx.c: 228: {;../nwk/nwk_src/nwkTx.c: 229:   frame->state = NWK_TX_STATE_CON
      +                          FIRM;
 17924                           
 17925                           ;incstack = 0
 17926  009454  0060  F00B  FFD9   	movff	nwkTxConfirm@frame,fsr2l
 17927  00945A  0060  F00F  FFDA   	movff	nwkTxConfirm@frame+1,fsr2h
 17928  009460  0E17               	movlw	23
 17929  009462  6EDF               	movwf	indf2,c
 17930                           
 17931                           ;../nwk/nwk_src/nwkTx.c: 230:   frame->tx.status = status;
 17932  009464  EE20 F083          	lfsr	2,131
 17933  009468  5002               	movf	nwkTxConfirm@frame^0,w,c
 17934  00946A  26D9               	addwf	fsr2l,f,c
 17935  00946C  5003               	movf	(nwkTxConfirm@frame+1)^0,w,c
 17936  00946E  22DA               	addwfc	fsr2h,f,c
 17937  009470  0060  F013  FFDF   	movff	nwkTxConfirm@status,indf2
 17938  009476  0012               	return		;funcret
 17939  009478                     __end_of_nwkTxConfirm:
 17940                           	opt callstack 0
 17941                           
 17942 ;; *************** function _PHY_TaskHandler *****************
 17943 ;; Defined at:
 17944 ;;		line 859 in file "../phy/sx1216/phy_src/phy.c"
 17945 ;; Parameters:    Size  Location     Type
 17946 ;;		None
 17947 ;; Auto vars:     Size  Location     Type
 17948 ;;		None
 17949 ;; Return value:  Size  Location     Type
 17950 ;;                  1    wreg      void 
 17951 ;; Registers used:
 17952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17953 ;; Tracked objects:
 17954 ;;		On entry : 0/3D
 17955 ;;		On exit  : 2/0
 17956 ;;		Unchanged: 0/0
 17957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17962 ;;Total ram usage:        0 bytes
 17963 ;; Hardware stack levels used:    1
 17964 ;; Hardware stack levels required when called:   15
 17965 ;; This function calls:
 17966 ;;		_radio_engine
 17967 ;; This function is called by:
 17968 ;;		_SYS_TaskHandler
 17969 ;; This function uses a non-reentrant model
 17970 ;;
 17971                           
 17972                           	psect	text110
 17973  009A06                     __ptext110:
 17974                           	opt callstack 0
 17975  009A06                     _PHY_TaskHandler:
 17976                           	opt callstack 14
 17977                           
 17978                           ;../phy/sx1216/phy_src/phy.c: 860:     radio_engine();
 17979                           
 17980                           ;incstack = 0
 17981  009A06  ECEE  F028         	call	_radio_engine	;wreg free
 17982  009A0A  0012               	return		;funcret
 17983  009A0C                     __end_of_PHY_TaskHandler:
 17984                           	opt callstack 0
 17985                           
 17986 ;; *************** function _radio_engine *****************
 17987 ;; Defined at:
 17988 ;;		line 742 in file "../phy/sx1216/phy_src/phy.c"
 17989 ;; Parameters:    Size  Location     Type
 17990 ;;		None
 17991 ;; Auto vars:     Size  Location     Type
 17992 ;;		None
 17993 ;; Return value:  Size  Location     Type
 17994 ;;                  1    wreg      void 
 17995 ;; Registers used:
 17996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17997 ;; Tracked objects:
 17998 ;;		On entry : 0/3D
 17999 ;;		On exit  : 2/0
 18000 ;;		Unchanged: 0/0
 18001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18004 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18005 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18006 ;;Total ram usage:        2 bytes
 18007 ;; Hardware stack levels used:    1
 18008 ;; Hardware stack levels required when called:   14
 18009 ;; This function calls:
 18010 ;;		_DIO0_Receive_ISR
 18011 ;;		_PHY_DataConf
 18012 ;;		_SX1276Read
 18013 ;;		_cad
 18014 ;;		_get_timer0base
 18015 ;;		_initRadio
 18016 ;;		_receive
 18017 ;;		_set_timer0base
 18018 ;; This function is called by:
 18019 ;;		_PHY_TaskHandler
 18020 ;; This function uses a non-reentrant model
 18021 ;;
 18022                           
 18023                           	psect	text111
 18024  0051DC                     __ptext111:
 18025                           	opt callstack 0
 18026  0051DC                     _radio_engine:
 18027                           	opt callstack 14
 18028                           
 18029                           ;../phy/sx1216/phy_src/phy.c: 743:     switch(radio_state_var){
 18030                           
 18031                           ;incstack = 0
 18032  0051DC  D06E               	goto	l16950
 18033  0051DE                     l16896:
 18034                           
 18035                           ; BSR set to: 0
 18036                           ;../phy/sx1216/phy_src/phy.c: 745:             initRadio();
 18037  0051DE  EC61  F023         	call	_initRadio	;wreg free
 18038                           
 18039                           ; BSR set to: 1
 18040                           ;../phy/sx1216/phy_src/phy.c: 746:             radio_state_var = START_RX;
 18041  0051E2  0E01               	movlw	1
 18042  0051E4  0100               	movlb	0	; () banked
 18043  0051E6  6FD2               	movwf	_radio_state_var& (0+255),b
 18044                           
 18045                           ; BSR set to: 0
 18046                           ;../phy/sx1216/phy_src/phy.c: 747:             need_radio_reset = 0;
 18047  0051E8  0E00               	movlw	0
 18048  0051EA  6FDB               	movwf	_need_radio_reset& (0+255),b
 18049                           
 18050                           ;../phy/sx1216/phy_src/phy.c: 748:             break;
 18051  0051EC  0012               	return	
 18052  0051EE                     l16902:
 18053                           
 18054                           ; BSR set to: 0
 18055                           ;../phy/sx1216/phy_src/phy.c: 750:             if(need_radio_reset){
 18056  0051EE  51DB               	movf	_need_radio_reset& (0+255),w,b
 18057  0051F0  B4D8               	btfsc	status,2,c
 18058  0051F2  D003               	goto	l16906
 18059  0051F4                     u17230:
 18060                           
 18061                           ; BSR set to: 0
 18062                           ;../phy/sx1216/phy_src/phy.c: 751:                 radio_state_var = INIT_RADIO;
 18063  0051F4  0E00               	movlw	0
 18064  0051F6  6FD2               	movwf	_radio_state_var& (0+255),b
 18065                           
 18066                           ;../phy/sx1216/phy_src/phy.c: 752:                 break;
 18067  0051F8  0012               	return	
 18068  0051FA                     l16906:
 18069                           
 18070                           ; BSR set to: 0
 18071                           ;../phy/sx1216/phy_src/phy.c: 754:             receive(0);
 18072  0051FA  0E00               	movlw	0
 18073  0051FC  ECE5  F046         	call	_receive
 18074                           
 18075                           ; BSR set to: 61
 18076                           ;../phy/sx1216/phy_src/phy.c: 755:             radio_state_var = WAIT_FOR_RX;
 18077  005200  0E02               	movlw	2
 18078  005202  0100               	movlb	0	; () banked
 18079  005204  6FD2               	movwf	_radio_state_var& (0+255),b
 18080                           
 18081                           ;../phy/sx1216/phy_src/phy.c: 756:             break;
 18082  005206  0012               	return	
 18083  005208                     l2770:
 18084                           
 18085                           ; BSR set to: 0
 18086                           ;../phy/sx1216/phy_src/phy.c: 758:             if(PORTBbits.RB4){
 18087  005208  A8CB               	btfss	203,4,c	;volatile
 18088  00520A  0012               	return	
 18089                           
 18090                           ; BSR set to: 0
 18091                           ;../phy/sx1216/phy_src/phy.c: 759:                 radio_state_var = RX_MESSAGE;
 18092  00520C  0E03               	movlw	3
 18093  00520E  6FD2               	movwf	_radio_state_var& (0+255),b
 18094  005210  0012               	return	
 18095  005212                     l16912:
 18096                           
 18097                           ; BSR set to: 0
 18098                           ;../phy/sx1216/phy_src/phy.c: 763:             DIO0_Receive_ISR();
 18099  005212  EC9E  F03B         	call	_DIO0_Receive_ISR	;wreg free
 18100  005216                     l16914:
 18101                           
 18102                           ;../phy/sx1216/phy_src/phy.c: 764:             radio_state_var = START_RX;
 18103  005216  0E01               	movlw	1
 18104  005218  0100               	movlb	0	; () banked
 18105  00521A  6FD2               	movwf	_radio_state_var& (0+255),b
 18106                           
 18107                           ;../phy/sx1216/phy_src/phy.c: 765:             break;
 18108  00521C  0012               	return	
 18109  00521E                     l16916:
 18110                           
 18111                           ; BSR set to: 0
 18112                           ;../phy/sx1216/phy_src/phy.c: 767:             if(!get_timer0base(&_cadBackoffTimer)){
 18113  00521E  0EF5               	movlw	low __cadBackoffTimer
 18114  005220  6E02               	movwf	get_timer0base@timer^0,c
 18115  005222  EC04  F04A         	call	_get_timer0base	;wreg free
 18116  005226  5002               	movf	?_get_timer0base^0,w,c
 18117  005228  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 18118  00522A  A4D8               	btfss	status,2,c
 18119  00522C  D7F4               	goto	l16914
 18120                           
 18121                           ; BSR set to: 57
 18122                           ;../phy/sx1216/phy_src/phy.c: 768:                 if(cad()){
 18123  00522E  ECEF  F036         	call	_cad	;wreg free
 18124  005232  0900               	iorlw	0
 18125  005234  B4D8               	btfsc	status,2,c
 18126  005236  D010               	goto	l16928
 18127                           
 18128                           ;../phy/sx1216/phy_src/phy.c: 770:                     set_timer0base(&_cadBackoffTimer,
      +                           2000);
 18129  005238  0EF5               	movlw	low __cadBackoffTimer
 18130  00523A  6E02               	movwf	set_timer0base@timer^0,c
 18131  00523C  0E07               	movlw	7
 18132  00523E  6E04               	movwf	(set_timer0base@tval+1)^0,c
 18133  005240  0ED0               	movlw	208
 18134  005242  6E03               	movwf	set_timer0base@tval^0,c
 18135  005244  EC82  F04B         	call	_set_timer0base	;wreg free
 18136                           
 18137                           ; BSR set to: 57
 18138                           ;../phy/sx1216/phy_src/phy.c: 772:                     radio_state_var = START_RX;
 18139  005248  0E01               	movlw	1
 18140  00524A  0100               	movlb	0	; () banked
 18141  00524C  6FD2               	movwf	_radio_state_var& (0+255),b
 18142                           
 18143                           ; BSR set to: 0
 18144                           ;../phy/sx1216/phy_src/phy.c: 773:                     if(cadCounter < 10)
 18145  00524E  0E0A               	movlw	10
 18146  005250  61DC               	cpfslt	_cadCounter& (0+255),b
 18147  005252  0012               	return	
 18148                           
 18149                           ; BSR set to: 0
 18150                           ;../phy/sx1216/phy_src/phy.c: 774:                     {;../phy/sx1216/phy_src/phy.c: 77
      +                          5:                         cadCounter++;
 18151  005254  2BDC               	incf	_cadCounter& (0+255),f,b
 18152  005256  0012               	return	
 18153  005258                     l16928:
 18154                           
 18155                           ;../phy/sx1216/phy_src/phy.c: 780:                 radio_state_var = START_TX;
 18156  005258  0E06               	movlw	6
 18157  00525A  0100               	movlb	0	; () banked
 18158  00525C  6FD2               	movwf	_radio_state_var& (0+255),b
 18159  00525E  0012               	return	
 18160  005260                     l16932:
 18161                           
 18162                           ; BSR set to: 0
 18163                           ;../phy/sx1216/phy_src/phy.c: 789:             set_timer0base(&txTimeOut, 1000);
 18164  005260  0EF1               	movlw	low _txTimeOut
 18165  005262  6E02               	movwf	set_timer0base@timer^0,c
 18166  005264  0E03               	movlw	3
 18167  005266  6E04               	movwf	(set_timer0base@tval+1)^0,c
 18168  005268  0EE8               	movlw	232
 18169  00526A  6E03               	movwf	set_timer0base@tval^0,c
 18170  00526C  EC82  F04B         	call	_set_timer0base	;wreg free
 18171                           
 18172                           ; BSR set to: 57
 18173                           ;../phy/sx1216/phy_src/phy.c: 790:             radio_state_var = WAIT_FOR_TX;
 18174  005270  0E07               	movlw	7
 18175  005272  0100               	movlb	0	; () banked
 18176  005274  6FD2               	movwf	_radio_state_var& (0+255),b
 18177                           
 18178                           ;../phy/sx1216/phy_src/phy.c: 791:             break;
 18179  005276  0012               	return	
 18180  005278                     l16936:
 18181                           
 18182                           ; BSR set to: 0
 18183                           ;../phy/sx1216/phy_src/phy.c: 793:             if((!get_timer0base(&txTimeOut)) || ((SX1
      +                          276Read(0x12) & 0x08))){
 18184  005278  0EF1               	movlw	low _txTimeOut
 18185  00527A  6E02               	movwf	get_timer0base@timer^0,c
 18186  00527C  EC04  F04A         	call	_get_timer0base	;wreg free
 18187  005280  5002               	movf	?_get_timer0base^0,w,c
 18188  005282  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 18189  005284  B4D8               	btfsc	status,2,c
 18190  005286  D006               	goto	u17290
 18191                           
 18192                           ; BSR set to: 57
 18193  005288  0E12               	movlw	18
 18194  00528A  EC24  F04C         	call	_SX1276Read
 18195  00528E  6E4B               	movwf	??_radio_engine^0,c
 18196  005290  A64B               	btfss	??_radio_engine^0,3,c
 18197  005292  0012               	return	
 18198  005294                     u17290:
 18199                           
 18200                           ;../phy/sx1216/phy_src/phy.c: 794:                 radio_state_var = START_RX;
 18201  005294  0E01               	movlw	1
 18202  005296  0100               	movlb	0	; () banked
 18203  005298  6FD2               	movwf	_radio_state_var& (0+255),b
 18204                           
 18205                           ; BSR set to: 0
 18206                           ;../phy/sx1216/phy_src/phy.c: 795:                 if(get_timer0base(&txTimeOut)){
 18207  00529A  0EF1               	movlw	low _txTimeOut
 18208  00529C  6E02               	movwf	get_timer0base@timer^0,c
 18209  00529E  EC04  F04A         	call	_get_timer0base	;wreg free
 18210  0052A2  5002               	movf	?_get_timer0base^0,w,c
 18211  0052A4  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 18212  0052A6  B4D8               	btfsc	status,2,c
 18213  0052A8  D004               	goto	l16946
 18214                           
 18215                           ; BSR set to: 57
 18216                           ;../phy/sx1216/phy_src/phy.c: 796:                     PHY_DataConf(PHY_STATUS_SUCCESS);
 18217  0052AA  0E00               	movlw	0
 18218  0052AC  EC41  F047         	call	_PHY_DataConf
 18219                           
 18220                           ;../phy/sx1216/phy_src/phy.c: 797:                 }
 18221  0052B0  0012               	return	
 18222  0052B2                     l16946:
 18223                           
 18224                           ; BSR set to: 57
 18225                           ;../phy/sx1216/phy_src/phy.c: 799:                     PHY_DataConf(PHY_STATUS_NO_ACK);
 18226  0052B2  0E02               	movlw	2
 18227  0052B4  EC41  F047         	call	_PHY_DataConf
 18228  0052B8  0012               	return	
 18229  0052BA                     l16950:
 18230  0052BA  0100               	movlb	0	; () banked
 18231  0052BC  51D2               	movf	_radio_state_var& (0+255),w,b
 18232  0052BE  6E4B               	movwf	??_radio_engine^0,c
 18233  0052C0  6A4C               	clrf	(??_radio_engine+1)^0,c
 18234                           
 18235                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18236                           ; Switch size 1, requested type "simple"
 18237                           ; Number of cases is 1, Range of values is 0 to 0
 18238                           ; switch strategies available:
 18239                           ; Name         Instructions Cycles
 18240                           ; simple_byte            4     3 (average)
 18241                           ;	Chosen strategy is simple_byte
 18242  0052C2  504C               	movf	(??_radio_engine+1)^0,w,c
 18243  0052C4  0A00               	xorlw	0	; case 0
 18244  0052C6  A4D8               	btfss	status,2,c
 18245  0052C8  D795               	goto	u17230
 18246                           
 18247                           ; BSR set to: 0
 18248                           ; Switch size 1, requested type "simple"
 18249                           ; Number of cases is 7, Range of values is 0 to 7
 18250                           ; switch strategies available:
 18251                           ; Name         Instructions Cycles
 18252                           ; simple_byte           22    12 (average)
 18253                           ;	Chosen strategy is simple_byte
 18254  0052CA  504B               	movf	??_radio_engine^0,w,c
 18255  0052CC  0A00               	xorlw	0	; case 0
 18256  0052CE  B4D8               	btfsc	status,2,c
 18257  0052D0  D786               	goto	l16896
 18258  0052D2  0A01               	xorlw	1	; case 1
 18259  0052D4  B4D8               	btfsc	status,2,c
 18260  0052D6  D78B               	goto	l16902
 18261  0052D8  0A03               	xorlw	3	; case 2
 18262  0052DA  B4D8               	btfsc	status,2,c
 18263  0052DC  D795               	goto	l2770
 18264  0052DE  0A01               	xorlw	1	; case 3
 18265  0052E0  B4D8               	btfsc	status,2,c
 18266  0052E2  D797               	goto	l16912
 18267  0052E4  0A07               	xorlw	7	; case 4
 18268  0052E6  B4D8               	btfsc	status,2,c
 18269  0052E8  D79A               	goto	l16916
 18270  0052EA  0A02               	xorlw	2	; case 6
 18271  0052EC  B4D8               	btfsc	status,2,c
 18272  0052EE  D7B8               	goto	l16932
 18273  0052F0  0A01               	xorlw	1	; case 7
 18274  0052F2  B4D8               	btfsc	status,2,c
 18275  0052F4  D7C1               	goto	l16936
 18276  0052F6  D77E               	goto	u17230
 18277  0052F8                     __end_of_radio_engine:
 18278                           	opt callstack 0
 18279                           
 18280 ;; *************** function _cad *****************
 18281 ;; Defined at:
 18282 ;;		line 509 in file "../phy/sx1216/phy_src/phy.c"
 18283 ;; Parameters:    Size  Location     Type
 18284 ;;		None
 18285 ;; Auto vars:     Size  Location     Type
 18286 ;;  RSSI            2   17[COMRAM] short 
 18287 ;;  temp            1   19[COMRAM] unsigned char 
 18288 ;; Return value:  Size  Location     Type
 18289 ;;                  1    wreg      unsigned char 
 18290 ;; Registers used:
 18291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18292 ;; Tracked objects:
 18293 ;;		On entry : 3F/39
 18294 ;;		On exit  : 2/0
 18295 ;;		Unchanged: 0/0
 18296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18298 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18299 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18300 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18301 ;;Total ram usage:        4 bytes
 18302 ;; Hardware stack levels used:    1
 18303 ;; Hardware stack levels required when called:   13
 18304 ;; This function calls:
 18305 ;;		_SX1276Read
 18306 ;;		_SX1276Write
 18307 ;;		_get_timer0base
 18308 ;;		_set_timer0base
 18309 ;;		_start_radio_cad
 18310 ;; This function is called by:
 18311 ;;		_radio_engine
 18312 ;; This function uses a non-reentrant model
 18313 ;;
 18314                           
 18315                           	psect	text112
 18316  006DDE                     __ptext112:
 18317                           	opt callstack 0
 18318  006DDE                     _cad:
 18319                           	opt callstack 14
 18320                           
 18321                           ; BSR set to: 57
 18322                           ;../phy/sx1216/phy_src/phy.c: 511:     uint8_t temp;;../phy/sx1216/phy_src/phy.c: 513:  
      +                             temp = SX1276Read(0x18);
 18323                           
 18324                           ;incstack = 0
 18325  006DDE  0E18               	movlw	24
 18326  006DE0  EC24  F04C         	call	_SX1276Read
 18327  006DE4  6E14               	movwf	cad@temp^0,c
 18328                           
 18329                           ; BSR set to: 61
 18330                           ;../phy/sx1216/phy_src/phy.c: 514:     if((temp & 0x01) | (temp & 0x02))
 18331  006DE6  0060  F050  F011   	movff	cad@temp,??_cad
 18332  006DEC  0E02               	movlw	2
 18333  006DEE  1611               	andwf	??_cad^0,f,c
 18334  006DF0  5014               	movf	cad@temp^0,w,c
 18335  006DF2  0B01               	andlw	1
 18336  006DF4  1011               	iorwf	??_cad^0,w,c
 18337  006DF6  0900               	iorlw	0
 18338  006DF8  B4D8               	btfsc	status,2,c
 18339  006DFA  D002               	goto	l16248
 18340  006DFC                     u16630:
 18341                           
 18342                           ;../phy/sx1216/phy_src/phy.c: 515:     {;../phy/sx1216/phy_src/phy.c: 516:         retur
      +                          n 1;
 18343  006DFC  0E01               	movlw	1
 18344  006DFE  0012               	return	
 18345  006E00                     l16248:
 18346                           
 18347                           ; BSR set to: 61
 18348                           ;../phy/sx1216/phy_src/phy.c: 518:     start_radio_cad();
 18349  006E00  EC8E  F04C         	call	_start_radio_cad	;wreg free
 18350                           
 18351                           ; BSR set to: 61
 18352                           ;../phy/sx1216/phy_src/phy.c: 519:     cadDone = 0;
 18353  006E04  0E00               	movlw	0
 18354  006E06  0100               	movlb	0	; () banked
 18355  006E08  6FDD               	movwf	_cadDone& (0+255),b
 18356                           
 18357                           ; BSR set to: 0
 18358                           ;../phy/sx1216/phy_src/phy.c: 520:     set_timer0base(&cadTimeOut, 2000);
 18359  006E0A  0EF3               	movlw	low _cadTimeOut
 18360  006E0C  6E02               	movwf	set_timer0base@timer^0,c
 18361  006E0E  0E07               	movlw	7
 18362  006E10  6E04               	movwf	(set_timer0base@tval+1)^0,c
 18363  006E12  0ED0               	movlw	208
 18364  006E14  6E03               	movwf	set_timer0base@tval^0,c
 18365  006E16  EC82  F04B         	call	_set_timer0base	;wreg free
 18366                           
 18367                           ;../phy/sx1216/phy_src/phy.c: 522:     while((cadDone == 0) && (get_timer0base(&cadTimeO
      +                          ut)))
 18368  006E1A  D029               	goto	l16282
 18369  006E1C                     l16254:
 18370                           
 18371                           ; BSR set to: 57
 18372                           ;../phy/sx1216/phy_src/phy.c: 523:     {;../phy/sx1216/phy_src/phy.c: 524:         temp 
      +                          = SX1276Read(0x12);
 18373  006E1C  0E12               	movlw	18
 18374  006E1E  EC24  F04C         	call	_SX1276Read
 18375  006E22  6E14               	movwf	cad@temp^0,c
 18376                           
 18377                           ;../phy/sx1216/phy_src/phy.c: 525:         SX1276Write(0x12,temp);
 18378  006E24  0060  F050  F00F   	movff	cad@temp,SX1276Write@data
 18379  006E2A  0E12               	movlw	18
 18380  006E2C  EC54  F04C         	call	_SX1276Write
 18381                           
 18382                           ; BSR set to: 61
 18383                           ;../phy/sx1216/phy_src/phy.c: 526:         if(temp & 0x04)
 18384  006E30  A414               	btfss	cad@temp^0,2,c
 18385  006E32  D01D               	goto	l16282
 18386                           
 18387                           ; BSR set to: 61
 18388                           ;../phy/sx1216/phy_src/phy.c: 527:         {;../phy/sx1216/phy_src/phy.c: 528:          
      +                             cadDone = 1;
 18389  006E34  0E01               	movlw	1
 18390  006E36  0100               	movlb	0	; () banked
 18391  006E38  6FDD               	movwf	_cadDone& (0+255),b
 18392                           
 18393                           ; BSR set to: 0
 18394                           ;../phy/sx1216/phy_src/phy.c: 529:             if(temp & 0x01)
 18395  006E3A  B014               	btfsc	cad@temp^0,0,c
 18396  006E3C  D7DF               	goto	u16630
 18397                           
 18398                           ; BSR set to: 0
 18399                           ;../phy/sx1216/phy_src/phy.c: 534:             {;../phy/sx1216/phy_src/phy.c: 535:      
      +                                     int16_t RSSI;;../phy/sx1216/phy_src/phy.c: 536:                 RSSI = -157 +
      +                           SX1276Read(0x1B);
 18400  006E3E  0E1B               	movlw	27
 18401  006E40  EC24  F04C         	call	_SX1276Read
 18402  006E44  6E11               	movwf	??_cad^0,c
 18403  006E46  0E63               	movlw	99
 18404  006E48  2411               	addwf	??_cad^0,w,c
 18405  006E4A  6E12               	movwf	cad@RSSI^0,c
 18406  006E4C  6A13               	clrf	(cad@RSSI+1)^0,c
 18407  006E4E  0EFF               	movlw	255
 18408  006E50  2213               	addwfc	(cad@RSSI+1)^0,f,c
 18409                           
 18410                           ; BSR set to: 61
 18411                           ;../phy/sx1216/phy_src/phy.c: 538:                 if(RSSI < RSSITarget)
 18412  006E52  5013               	movf	(cad@RSSI+1)^0,w,c
 18413  006E54  0A80               	xorlw	128
 18414  006E56  6E11               	movwf	??_cad^0,c
 18415  006E58  0100               	movlb	0	; () banked
 18416  006E5A  51F7               	movf	_RSSITarget& (0+255),w,b
 18417  006E5C  5C12               	subwf	cad@RSSI^0,w,c
 18418  006E5E  0E80               	movlw	128
 18419  006E60  BFF7               	btfsc	_RSSITarget& (0+255),7,b
 18420  006E62  0E7F               	movlw	127
 18421  006E64  5811               	subwfb	??_cad^0,w,c
 18422  006E66  B0D8               	btfsc	status,0,c
 18423  006E68  D7C9               	goto	u16630
 18424                           
 18425                           ; BSR set to: 0
 18426                           ;../phy/sx1216/phy_src/phy.c: 539:                 {;../phy/sx1216/phy_src/phy.c: 540:  
      +                                             return 0;
 18427  006E6A  0E00               	movlw	0
 18428  006E6C  0012               	return	
 18429  006E6E                     l16282:
 18430                           
 18431                           ;../phy/sx1216/phy_src/phy.c: 522:     while((cadDone == 0) && (get_timer0base(&cadTimeO
      +                          ut)))
 18432  006E6E  0100               	movlb	0	; () banked
 18433  006E70  51DD               	movf	_cadDone& (0+255),w,b
 18434  006E72  A4D8               	btfss	status,2,c
 18435  006E74  D008               	goto	u16680
 18436                           
 18437                           ; BSR set to: 0
 18438  006E76  0EF3               	movlw	low _cadTimeOut
 18439  006E78  6E02               	movwf	get_timer0base@timer^0,c
 18440  006E7A  EC04  F04A         	call	_get_timer0base	;wreg free
 18441  006E7E  5002               	movf	?_get_timer0base^0,w,c
 18442  006E80  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 18443  006E82  A4D8               	btfss	status,2,c
 18444  006E84  D7CB               	goto	l16254
 18445  006E86                     u16680:
 18446                           
 18447                           ;../phy/sx1216/phy_src/phy.c: 549:     if(!get_timer0base(&cadTimeOut))
 18448  006E86  0EF3               	movlw	low _cadTimeOut
 18449  006E88  6E02               	movwf	get_timer0base@timer^0,c
 18450  006E8A  EC04  F04A         	call	_get_timer0base	;wreg free
 18451  006E8E  5002               	movf	?_get_timer0base^0,w,c
 18452  006E90  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 18453  006E92  A4D8               	btfss	status,2,c
 18454  006E94  0012               	return	
 18455  006E96  D7B2               	goto	u16630
 18456  006E98                     __end_of_cad:
 18457                           	opt callstack 0
 18458                           
 18459 ;; *************** function _start_radio_cad *****************
 18460 ;; Defined at:
 18461 ;;		line 562 in file "../phy/sx1216/phy_src/phy.c"
 18462 ;; Parameters:    Size  Location     Type
 18463 ;;		None
 18464 ;; Auto vars:     Size  Location     Type
 18465 ;;		None
 18466 ;; Return value:  Size  Location     Type
 18467 ;;                  1    wreg      void 
 18468 ;; Registers used:
 18469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18470 ;; Tracked objects:
 18471 ;;		On entry : 3F/3D
 18472 ;;		On exit  : 3F/3D
 18473 ;;		Unchanged: 0/0
 18474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18479 ;;Total ram usage:        0 bytes
 18480 ;; Hardware stack levels used:    1
 18481 ;; Hardware stack levels required when called:   12
 18482 ;; This function calls:
 18483 ;;		_SX1276Write
 18484 ;;		_idle
 18485 ;; This function is called by:
 18486 ;;		_cad
 18487 ;; This function uses a non-reentrant model
 18488 ;;
 18489                           
 18490                           	psect	text113
 18491  00991C                     __ptext113:
 18492                           	opt callstack 0
 18493  00991C                     _start_radio_cad:
 18494                           	opt callstack 14
 18495                           
 18496                           ; BSR set to: 61
 18497                           ;../phy/sx1216/phy_src/phy.c: 564:     idle();
 18498                           
 18499                           ;incstack = 0
 18500  00991C  ECDD  F04C         	call	_idle	;wreg free
 18501                           
 18502                           ;../phy/sx1216/phy_src/phy.c: 565:     SX1276Write(0x01,0x80 | 0x07);
 18503  009920  0E87               	movlw	135
 18504  009922  6E0F               	movwf	SX1276Write@data^0,c
 18505  009924  0E01               	movlw	1
 18506  009926  EC54  F04C         	call	_SX1276Write
 18507                           
 18508                           ; BSR set to: 61
 18509  00992A  0012               	return		;funcret
 18510  00992C                     __end_of_start_radio_cad:
 18511                           	opt callstack 0
 18512                           
 18513 ;; *************** function _set_timer0base *****************
 18514 ;; Defined at:
 18515 ;;		line 35 in file "../hal/hal_src/Timers.c"
 18516 ;; Parameters:    Size  Location     Type
 18517 ;;  timer           1    1[COMRAM] PTR unsigned short 
 18518 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), ledtimer(2), 
 18519 ;;		 -> ATTimeoutTimer(2), 
 18520 ;;  tval            2    2[COMRAM] unsigned short 
 18521 ;; Auto vars:     Size  Location     Type
 18522 ;;		None
 18523 ;; Return value:  Size  Location     Type
 18524 ;;                  1    wreg      void 
 18525 ;; Registers used:
 18526 ;;		wreg, fsr2l, fsr2h, status,2
 18527 ;; Tracked objects:
 18528 ;;		On entry : 0/0
 18529 ;;		On exit  : 3F/39
 18530 ;;		Unchanged: 0/0
 18531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18532 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18535 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18536 ;;Total ram usage:        3 bytes
 18537 ;; Hardware stack levels used:    1
 18538 ;; Hardware stack levels required when called:    7
 18539 ;; This function calls:
 18540 ;;		Nothing
 18541 ;; This function is called by:
 18542 ;;		_processATCommand
 18543 ;;		_cad
 18544 ;;		_radio_engine
 18545 ;; This function uses a non-reentrant model
 18546 ;;
 18547                           
 18548                           	psect	text114
 18549  009704                     __ptext114:
 18550                           	opt callstack 0
 18551  009704                     _set_timer0base:
 18552                           	opt callstack 22
 18553                           
 18554                           ;../hal/hal_src/Timers.c: 36:     PIE3bits.TMR0IE = 0;;
 18555                           
 18556                           ; BSR set to: 61
 18557                           ;incstack = 0
 18558  009704  0139               	movlb	57	; () banked
 18559  009706  9F93               	bcf	147,7,b	;volatile
 18560                           
 18561                           ; BSR set to: 57
 18562                           ;../hal/hal_src/Timers.c: 37:     *timer = tval;
 18563  009708  5002               	movf	set_timer0base@timer^0,w,c
 18564  00970A  6ED9               	movwf	fsr2l,c
 18565  00970C  6ADA               	clrf	fsr2h,c
 18566  00970E  0060  F00F  FFDE   	movff	set_timer0base@tval,postinc2
 18567  009714  0060  F013  FFDD   	movff	set_timer0base@tval+1,postdec2
 18568                           
 18569                           ; BSR set to: 57
 18570                           ;../hal/hal_src/Timers.c: 38:     PIE3bits.TMR0IE = 1;;
 18571  00971A  8F93               	bsf	147,7,b	;volatile
 18572                           
 18573                           ; BSR set to: 57
 18574  00971C  0012               	return		;funcret
 18575  00971E                     __end_of_set_timer0base:
 18576                           	opt callstack 0
 18577                           
 18578 ;; *************** function _get_timer0base *****************
 18579 ;; Defined at:
 18580 ;;		line 27 in file "../hal/hal_src/Timers.c"
 18581 ;; Parameters:    Size  Location     Type
 18582 ;;  timer           1    1[COMRAM] PTR unsigned short 
 18583 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), ledtimer(2), 
 18584 ;;		 -> ATTimeoutTimer(2), 
 18585 ;; Auto vars:     Size  Location     Type
 18586 ;;  tval            2    3[COMRAM] unsigned short 
 18587 ;; Return value:  Size  Location     Type
 18588 ;;                  2    1[COMRAM] unsigned short 
 18589 ;; Registers used:
 18590 ;;		wreg, fsr2l, fsr2h, status,2
 18591 ;; Tracked objects:
 18592 ;;		On entry : 2/0
 18593 ;;		On exit  : 3F/39
 18594 ;;		Unchanged: 0/0
 18595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18597 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18599 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18600 ;;Total ram usage:        4 bytes
 18601 ;; Hardware stack levels used:    1
 18602 ;; Hardware stack levels required when called:    7
 18603 ;; This function calls:
 18604 ;;		Nothing
 18605 ;; This function is called by:
 18606 ;;		_processATCommand
 18607 ;;		_cad
 18608 ;;		_radio_engine
 18609 ;; This function uses a non-reentrant model
 18610 ;;
 18611                           
 18612                           	psect	text115
 18613  009408                     __ptext115:
 18614                           	opt callstack 0
 18615  009408                     _get_timer0base:
 18616                           	opt callstack 22
 18617                           
 18618                           ;../hal/hal_src/Timers.c: 28:     uint16_t tval;;../hal/hal_src/Timers.c: 29:     PIE3bi
      +                          ts.TMR0IE = 0;;
 18619                           
 18620                           ; BSR set to: 57
 18621                           ;incstack = 0
 18622  009408  0139               	movlb	57	; () banked
 18623  00940A  9F93               	bcf	147,7,b	;volatile
 18624                           
 18625                           ; BSR set to: 57
 18626                           ;../hal/hal_src/Timers.c: 30:     tval = *timer;
 18627  00940C  5002               	movf	get_timer0base@timer^0,w,c
 18628  00940E  6ED9               	movwf	fsr2l,c
 18629  009410  6ADA               	clrf	fsr2h,c
 18630  009412  006F FF78  F004    	movff	postinc2,get_timer0base@tval
 18631  009418  006F FF74  F005    	movff	postdec2,get_timer0base@tval+1
 18632                           
 18633                           ; BSR set to: 57
 18634                           ;../hal/hal_src/Timers.c: 31:     PIE3bits.TMR0IE = 1;;
 18635  00941E  8F93               	bsf	147,7,b	;volatile
 18636                           
 18637                           ; BSR set to: 57
 18638                           ;../hal/hal_src/Timers.c: 32:     return tval;
 18639  009420  0060  F010  F002   	movff	get_timer0base@tval,?_get_timer0base
 18640  009426  0060  F014  F003   	movff	get_timer0base@tval+1,?_get_timer0base+1
 18641                           
 18642                           ; BSR set to: 57
 18643  00942C  0012               	return		;funcret
 18644  00942E                     __end_of_get_timer0base:
 18645                           	opt callstack 0
 18646                           
 18647 ;; *************** function _PHY_DataConf *****************
 18648 ;; Defined at:
 18649 ;;		line 286 in file "../nwk/nwk_src/nwkTx.c"
 18650 ;; Parameters:    Size  Location     Type
 18651 ;;  status          1    wreg     unsigned char 
 18652 ;; Auto vars:     Size  Location     Type
 18653 ;;  status          1    4[COMRAM] unsigned char 
 18654 ;; Return value:  Size  Location     Type
 18655 ;;                  1    wreg      void 
 18656 ;; Registers used:
 18657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18658 ;; Tracked objects:
 18659 ;;		On entry : 3F/39
 18660 ;;		On exit  : 3F/1
 18661 ;;		Unchanged: 0/0
 18662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18666 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18667 ;;Total ram usage:        1 bytes
 18668 ;; Hardware stack levels used:    1
 18669 ;; Hardware stack levels required when called:    8
 18670 ;; This function calls:
 18671 ;;		_nwkTxConvertPhyStatus
 18672 ;; This function is called by:
 18673 ;;		_radio_engine
 18674 ;; This function uses a non-reentrant model
 18675 ;;
 18676                           
 18677                           	psect	text116
 18678  008E82                     __ptext116:
 18679                           	opt callstack 0
 18680  008E82                     _PHY_DataConf:
 18681                           	opt callstack 19
 18682                           
 18683                           ; BSR set to: 57
 18684                           ;incstack = 0
 18685                           ;PHY_DataConf@status stored from wreg
 18686  008E82  6E05               	movwf	PHY_DataConf@status^0,c
 18687                           
 18688                           ;../nwk/nwk_src/nwkTx.c: 286: void PHY_DataConf(uint8_t status);../nwk/nwk_src/nwkTx.c: 
      +                          287: {;../nwk/nwk_src/nwkTx.c: 288:   nwkTxPhyActiveFrame->tx.status = nwkTxConvertPhySt
      +                          atus(status);
 18689  008E84  0100               	movlb	0	; () banked
 18690  008E86  EE20 F083          	lfsr	2,131
 18691  008E8A  51BD               	movf	_nwkTxPhyActiveFrame& (0+255),w,b
 18692  008E8C  26D9               	addwf	fsr2l,f,c
 18693  008E8E  51BE               	movf	(_nwkTxPhyActiveFrame+1)& (0+255),w,b
 18694  008E90  22DA               	addwfc	fsr2h,f,c
 18695  008E92  5005               	movf	PHY_DataConf@status^0,w,c
 18696  008E94  ECD4  F047         	call	_nwkTxConvertPhyStatus
 18697  008E98  6EDF               	movwf	indf2,c
 18698                           
 18699                           ;../nwk/nwk_src/nwkTx.c: 289:   nwkTxPhyActiveFrame->state = NWK_TX_STATE_SENT;
 18700  008E9A  0060  F2F7  FFD9   	movff	_nwkTxPhyActiveFrame,fsr2l
 18701  008EA0  0060  F2FB  FFDA   	movff	_nwkTxPhyActiveFrame+1,fsr2h
 18702  008EA6  0E15               	movlw	21
 18703  008EA8  6EDF               	movwf	indf2,c
 18704                           
 18705                           ;../nwk/nwk_src/nwkTx.c: 290:   nwkTxPhyActiveFrame = ((void*)0);
 18706  008EAA  0E00               	movlw	0
 18707  008EAC  0100               	movlb	0	; () banked
 18708  008EAE  6FBD               	movwf	_nwkTxPhyActiveFrame& (0+255),b
 18709  008EB0  0E00               	movlw	0
 18710  008EB2  6FBE               	movwf	(_nwkTxPhyActiveFrame+1)& (0+255),b
 18711                           
 18712                           ; BSR set to: 0
 18713                           ;../nwk/nwk_src/nwkTx.c: 291:   nwkIb.lock--;
 18714  008EB4  0101               	movlb	1	; () banked
 18715  008EB6  0767               	decf	(_nwkIb+54)& (0+255),f,b
 18716  008EB8  A0D8               	btfss	status,0,c
 18717  008EBA  0768               	decf	(_nwkIb+55)& (0+255),f,b
 18718                           
 18719                           ; BSR set to: 1
 18720  008EBC  0012               	return		;funcret
 18721  008EBE                     __end_of_PHY_DataConf:
 18722                           	opt callstack 0
 18723                           
 18724 ;; *************** function _nwkTxConvertPhyStatus *****************
 18725 ;; Defined at:
 18726 ;;		line 266 in file "../nwk/nwk_src/nwkTx.c"
 18727 ;; Parameters:    Size  Location     Type
 18728 ;;  status          1    wreg     unsigned char 
 18729 ;; Auto vars:     Size  Location     Type
 18730 ;;  status          1    3[COMRAM] unsigned char 
 18731 ;; Return value:  Size  Location     Type
 18732 ;;                  1    wreg      unsigned char 
 18733 ;; Registers used:
 18734 ;;		wreg, status,2, status,0
 18735 ;; Tracked objects:
 18736 ;;		On entry : 3F/0
 18737 ;;		On exit  : 0/0
 18738 ;;		Unchanged: 0/0
 18739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18742 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18743 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18744 ;;Total ram usage:        3 bytes
 18745 ;; Hardware stack levels used:    1
 18746 ;; Hardware stack levels required when called:    7
 18747 ;; This function calls:
 18748 ;;		Nothing
 18749 ;; This function is called by:
 18750 ;;		_PHY_DataConf
 18751 ;; This function uses a non-reentrant model
 18752 ;;
 18753                           
 18754                           	psect	text117
 18755  008FA8                     __ptext117:
 18756                           	opt callstack 0
 18757  008FA8                     _nwkTxConvertPhyStatus:
 18758                           	opt callstack 19
 18759                           
 18760                           ; BSR set to: 1
 18761                           ;incstack = 0
 18762                           ;nwkTxConvertPhyStatus@status stored from wreg
 18763  008FA8  6E04               	movwf	nwkTxConvertPhyStatus@status^0,c
 18764                           
 18765                           ;../nwk/nwk_src/nwkTx.c: 266: static uint8_t nwkTxConvertPhyStatus(uint8_t status);../nw
      +                          k/nwk_src/nwkTx.c: 267: {;../nwk/nwk_src/nwkTx.c: 268:   switch (status)
 18766  008FAA  D008               	goto	l11370
 18767  008FAC                     l11352:
 18768                           
 18769                           ;../nwk/nwk_src/nwkTx.c: 271:       return NWK_SUCCESS_STATUS;
 18770  008FAC  0E00               	movlw	0
 18771  008FAE  0012               	return	
 18772  008FB0                     l11356:
 18773                           
 18774                           ;../nwk/nwk_src/nwkTx.c: 274:       return NWK_PHY_CHANNEL_ACCESS_FAILURE_STATUS;
 18775  008FB0  0E20               	movlw	32
 18776  008FB2  0012               	return	
 18777  008FB4                     l11360:
 18778                           
 18779                           ;../nwk/nwk_src/nwkTx.c: 277:       return NWK_PHY_NO_ACK_STATUS;
 18780  008FB4  0E21               	movlw	33
 18781  008FB6  0012               	return	
 18782  008FB8                     l11364:
 18783                           
 18784                           ;../nwk/nwk_src/nwkTx.c: 280:       return NWK_ERROR_STATUS;
 18785  008FB8  0E01               	movlw	1
 18786  008FBA  0012               	return	
 18787  008FBC                     l11370:
 18788  008FBC  5004               	movf	nwkTxConvertPhyStatus@status^0,w,c
 18789  008FBE  6E02               	movwf	??_nwkTxConvertPhyStatus^0,c
 18790  008FC0  6A03               	clrf	(??_nwkTxConvertPhyStatus+1)^0,c
 18791                           
 18792                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18793                           ; Switch size 1, requested type "simple"
 18794                           ; Number of cases is 1, Range of values is 0 to 0
 18795                           ; switch strategies available:
 18796                           ; Name         Instructions Cycles
 18797                           ; simple_byte            4     3 (average)
 18798                           ;	Chosen strategy is simple_byte
 18799  008FC2  5003               	movf	(??_nwkTxConvertPhyStatus+1)^0,w,c
 18800  008FC4  0A00               	xorlw	0	; case 0
 18801  008FC6  A4D8               	btfss	status,2,c
 18802  008FC8  D7F7               	goto	l11364
 18803                           
 18804                           ; Switch size 1, requested type "simple"
 18805                           ; Number of cases is 3, Range of values is 0 to 2
 18806                           ; switch strategies available:
 18807                           ; Name         Instructions Cycles
 18808                           ; simple_byte           10     6 (average)
 18809                           ;	Chosen strategy is simple_byte
 18810  008FCA  5002               	movf	??_nwkTxConvertPhyStatus^0,w,c
 18811  008FCC  0A00               	xorlw	0	; case 0
 18812  008FCE  B4D8               	btfsc	status,2,c
 18813  008FD0  D7ED               	goto	l11352
 18814  008FD2  0A01               	xorlw	1	; case 1
 18815  008FD4  B4D8               	btfsc	status,2,c
 18816  008FD6  D7EC               	goto	l11356
 18817  008FD8  0A03               	xorlw	3	; case 2
 18818  008FDA  B4D8               	btfsc	status,2,c
 18819  008FDC  D7EB               	goto	l11360
 18820  008FDE  D7EC               	goto	l11364
 18821  008FE0                     __end_of_nwkTxConvertPhyStatus:
 18822                           	opt callstack 0
 18823                           
 18824 ;; *************** function _DIO0_Receive_ISR *****************
 18825 ;; Defined at:
 18826 ;;		line 642 in file "../phy/sx1216/phy_src/phy.c"
 18827 ;; Parameters:    Size  Location     Type
 18828 ;;		None
 18829 ;; Auto vars:     Size  Location     Type
 18830 ;;  ind             5   69[COMRAM] struct PHY_DataInd_t
 18831 ;;  packetLength    1   67[COMRAM] unsigned char 
 18832 ;;  irqFlags        1   68[COMRAM] unsigned char 
 18833 ;; Return value:  Size  Location     Type
 18834 ;;                  1    wreg      void 
 18835 ;; Registers used:
 18836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18837 ;; Tracked objects:
 18838 ;;		On entry : 2/0
 18839 ;;		On exit  : 3F/3D
 18840 ;;		Unchanged: 0/0
 18841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18843 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18845 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18846 ;;Total ram usage:        7 bytes
 18847 ;; Hardware stack levels used:    1
 18848 ;; Hardware stack levels required when called:   13
 18849 ;; This function calls:
 18850 ;;		_PHY_DataInd
 18851 ;;		_SX1276Read
 18852 ;;		_SX1276ReadBuffer
 18853 ;;		_SX1276Write
 18854 ;;		_get_lqi
 18855 ;;		_get_rssi
 18856 ;;		_receive
 18857 ;; This function is called by:
 18858 ;;		_radio_engine
 18859 ;; This function uses a non-reentrant model
 18860 ;;
 18861                           
 18862                           	psect	text118
 18863  00773C                     __ptext118:
 18864                           	opt callstack 0
 18865  00773C                     _DIO0_Receive_ISR:
 18866                           	opt callstack 14
 18867                           
 18868                           ;../phy/sx1216/phy_src/phy.c: 644:     uint8_t irqFlags = SX1276Read(0x12);
 18869                           
 18870                           ;incstack = 0
 18871  00773C  0E12               	movlw	18
 18872  00773E  EC24  F04C         	call	_SX1276Read
 18873  007742  6E45               	movwf	DIO0_Receive_ISR@irqFlags^0,c
 18874                           
 18875                           ;../phy/sx1216/phy_src/phy.c: 647:     SX1276Write(0x12, irqFlags);
 18876  007744  0060  F114  F00F   	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
 18877  00774A  0E12               	movlw	18
 18878  00774C  EC54  F04C         	call	_SX1276Write
 18879                           
 18880                           ;../phy/sx1216/phy_src/phy.c: 648:     SX1276Write(0x12, irqFlags);
 18881  007750  0060  F114  F00F   	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
 18882  007756  0E12               	movlw	18
 18883  007758  EC54  F04C         	call	_SX1276Write
 18884                           
 18885                           ; BSR set to: 61
 18886                           ;../phy/sx1216/phy_src/phy.c: 650:     if (((irqFlags & 0x20) == 0) && (irqFlags & 0x40)
      +                           && ((irqFlags & 0x80) == 0))
 18887  00775C  AA45               	btfss	DIO0_Receive_ISR@irqFlags^0,5,c
 18888                           
 18889                           ; BSR set to: 61
 18890  00775E  AC45               	btfss	DIO0_Receive_ISR@irqFlags^0,6,c
 18891  007760  D034               	goto	l16312
 18892                           
 18893                           ; BSR set to: 61
 18894  007762  BE45               	btfsc	DIO0_Receive_ISR@irqFlags^0,7,c
 18895  007764  D032               	goto	l16312
 18896                           
 18897                           ; BSR set to: 61
 18898                           ;../phy/sx1216/phy_src/phy.c: 651:     {;../phy/sx1216/phy_src/phy.c: 652:         PHY_D
      +                          ataInd_t ind;;../phy/sx1216/phy_src/phy.c: 653:         uint8_t packetLength;;../phy/sx1
      +                          216/phy_src/phy.c: 656:         packetLength = SX1276Read(0x13);
 18899  007766  0E13               	movlw	19
 18900  007768  EC24  F04C         	call	_SX1276Read
 18901  00776C  6E44               	movwf	DIO0_Receive_ISR@packetLength^0,c
 18902                           
 18903                           ;../phy/sx1216/phy_src/phy.c: 659:         SX1276Write(0x0D, SX1276Read(0x10));
 18904  00776E  0E10               	movlw	16
 18905  007770  EC24  F04C         	call	_SX1276Read
 18906  007774  6E0F               	movwf	SX1276Write@data^0,c
 18907  007776  0E0D               	movlw	13
 18908  007778  EC54  F04C         	call	_SX1276Write
 18909                           
 18910                           ;../phy/sx1216/phy_src/phy.c: 660:         SX1276ReadBuffer(0x00, &phyRxBuffer, packetLe
      +                          ngth);
 18911  00777C  0E40               	movlw	low _phyRxBuffer
 18912  00777E  6E09               	movwf	SX1276ReadBuffer@buffer^0,c
 18913  007780  0E03               	movlw	high _phyRxBuffer
 18914  007782  6E0A               	movwf	(SX1276ReadBuffer@buffer+1)^0,c
 18915  007784  0060  F110  F00B   	movff	DIO0_Receive_ISR@packetLength,SX1276ReadBuffer@size
 18916  00778A  0E00               	movlw	0
 18917  00778C  ECF0  F049         	call	_SX1276ReadBuffer
 18918                           
 18919                           ;../phy/sx1216/phy_src/phy.c: 662:         SNR = SX1276Read(0x19);
 18920  007790  0E19               	movlw	25
 18921  007792  EC24  F04C         	call	_SX1276Read
 18922  007796  0100               	movlb	0	; () banked
 18923  007798  6FD8               	movwf	_SNR& (0+255),b
 18924                           
 18925                           ;../phy/sx1216/phy_src/phy.c: 663:         packetRSSI = SX1276Read(0x1A);
 18926  00779A  0E1A               	movlw	26
 18927  00779C  EC24  F04C         	call	_SX1276Read
 18928  0077A0  0100               	movlb	0	; () banked
 18929  0077A2  6FD9               	movwf	_packetRSSI& (0+255),b
 18930                           
 18931                           ; BSR set to: 0
 18932                           ;../phy/sx1216/phy_src/phy.c: 664:         ind.data = phyRxBuffer;
 18933  0077A4  0E40               	movlw	low _phyRxBuffer
 18934  0077A6  6E46               	movwf	DIO0_Receive_ISR@ind^0,c
 18935  0077A8  0E03               	movlw	high _phyRxBuffer
 18936  0077AA  6E47               	movwf	(DIO0_Receive_ISR@ind+1)^0,c
 18937                           
 18938                           ; BSR set to: 0
 18939                           ;../phy/sx1216/phy_src/phy.c: 665:         ind.size = packetLength;
 18940  0077AC  0060  F110  F048   	movff	DIO0_Receive_ISR@packetLength,DIO0_Receive_ISR@ind+2
 18941                           
 18942                           ; BSR set to: 0
 18943                           ;../phy/sx1216/phy_src/phy.c: 666:         ind.rssi = get_rssi(packetRSSI);
 18944  0077B2  51D9               	movf	_packetRSSI& (0+255),w,b
 18945  0077B4  EC74  F049         	call	_get_rssi
 18946  0077B8  6E4A               	movwf	(DIO0_Receive_ISR@ind+4)^0,c
 18947                           
 18948                           ;../phy/sx1216/phy_src/phy.c: 667:         ind.lqi = get_lqi(ind.rssi);
 18949  0077BA  504A               	movf	(DIO0_Receive_ISR@ind+4)^0,w,c
 18950  0077BC  ECB6  F03A         	call	_get_lqi
 18951  0077C0  6E49               	movwf	(DIO0_Receive_ISR@ind+3)^0,c
 18952                           
 18953                           ;../phy/sx1216/phy_src/phy.c: 668:         PHY_DataInd(&ind);
 18954  0077C2  0E46               	movlw	low DIO0_Receive_ISR@ind
 18955  0077C4  6E13               	movwf	PHY_DataInd@ind^0,c
 18956  0077C6  ECA2  F026         	call	_PHY_DataInd	;wreg free
 18957  0077CA                     l16312:
 18958                           
 18959                           ;../phy/sx1216/phy_src/phy.c: 671:     receive(0);
 18960  0077CA  0E00               	movlw	0
 18961  0077CC  ECE5  F046         	call	_receive
 18962                           
 18963                           ; BSR set to: 61
 18964  0077D0  0012               	return		;funcret
 18965  0077D2                     __end_of_DIO0_Receive_ISR:
 18966                           	opt callstack 0
 18967                           
 18968 ;; *************** function _get_rssi *****************
 18969 ;; Defined at:
 18970 ;;		line 615 in file "../phy/sx1216/phy_src/phy.c"
 18971 ;; Parameters:    Size  Location     Type
 18972 ;;  rssi_reg        1    wreg     unsigned char 
 18973 ;; Auto vars:     Size  Location     Type
 18974 ;;  rssi_reg        1    1[COMRAM] unsigned char 
 18975 ;;  temp_rssi       2    2[COMRAM] short 
 18976 ;; Return value:  Size  Location     Type
 18977 ;;                  1    wreg      char 
 18978 ;; Registers used:
 18979 ;;		wreg, status,2, status,0
 18980 ;; Tracked objects:
 18981 ;;		On entry : 3F/0
 18982 ;;		On exit  : 0/0
 18983 ;;		Unchanged: 0/0
 18984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18986 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18988 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18989 ;;Total ram usage:        3 bytes
 18990 ;; Hardware stack levels used:    1
 18991 ;; Hardware stack levels required when called:    7
 18992 ;; This function calls:
 18993 ;;		Nothing
 18994 ;; This function is called by:
 18995 ;;		_DIO0_Receive_ISR
 18996 ;; This function uses a non-reentrant model
 18997 ;;
 18998                           
 18999                           	psect	text119
 19000  0092E8                     __ptext119:
 19001                           	opt callstack 0
 19002  0092E8                     _get_rssi:
 19003                           	opt callstack 19
 19004                           
 19005                           ; BSR set to: 61
 19006                           ;incstack = 0
 19007                           ;get_rssi@rssi_reg stored from wreg
 19008  0092E8  6E02               	movwf	get_rssi@rssi_reg^0,c
 19009                           
 19010                           ;../phy/sx1216/phy_src/phy.c: 616:     int16_t temp_rssi = -157 + rssi_reg;
 19011  0092EA  0E63               	movlw	99
 19012  0092EC  2402               	addwf	get_rssi@rssi_reg^0,w,c
 19013  0092EE  6E03               	movwf	get_rssi@temp_rssi^0,c
 19014  0092F0  6A04               	clrf	(get_rssi@temp_rssi+1)^0,c
 19015  0092F2  0EFF               	movlw	255
 19016  0092F4  2204               	addwfc	(get_rssi@temp_rssi+1)^0,f,c
 19017                           
 19018                           ;../phy/sx1216/phy_src/phy.c: 617:     if(temp_rssi < -127){
 19019  0092F6  AE04               	btfss	(get_rssi@temp_rssi+1)^0,7,c
 19020  0092F8  D00A               	goto	l2744
 19021  0092FA  0E81               	movlw	129
 19022  0092FC  5C03               	subwf	get_rssi@temp_rssi^0,w,c
 19023  0092FE  0EFF               	movlw	255
 19024  009300  5804               	subwfb	(get_rssi@temp_rssi+1)^0,w,c
 19025  009302  B0D8               	btfsc	status,0,c
 19026  009304  D004               	goto	l2744
 19027                           
 19028                           ;../phy/sx1216/phy_src/phy.c: 618:         temp_rssi = -127;
 19029  009306  0EFF               	movlw	255
 19030  009308  6E04               	movwf	(get_rssi@temp_rssi+1)^0,c
 19031  00930A  0E81               	movlw	129
 19032  00930C  6E03               	movwf	get_rssi@temp_rssi^0,c
 19033  00930E                     l2744:
 19034                           
 19035                           ;../phy/sx1216/phy_src/phy.c: 620:     return (temp_rssi);
 19036  00930E  5003               	movf	get_rssi@temp_rssi^0,w,c
 19037  009310  0012               	return		;funcret
 19038  009312                     __end_of_get_rssi:
 19039                           	opt callstack 0
 19040                           
 19041 ;; *************** function _get_lqi *****************
 19042 ;; Defined at:
 19043 ;;		line 629 in file "../phy/sx1216/phy_src/phy.c"
 19044 ;; Parameters:    Size  Location     Type
 19045 ;;  rssi            1    wreg     char 
 19046 ;; Auto vars:     Size  Location     Type
 19047 ;;  rssi            1   66[COMRAM] char 
 19048 ;; Return value:  Size  Location     Type
 19049 ;;                  1    wreg      unsigned char 
 19050 ;; Registers used:
 19051 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19052 ;; Tracked objects:
 19053 ;;		On entry : 0/0
 19054 ;;		On exit  : 0/0
 19055 ;;		Unchanged: 0/0
 19056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19060 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19061 ;;Total ram usage:        1 bytes
 19062 ;; Hardware stack levels used:    1
 19063 ;; Hardware stack levels required when called:    8
 19064 ;; This function calls:
 19065 ;;		___fladd
 19066 ;;		___flmul
 19067 ;;		___fltol
 19068 ;;		___xxtofl
 19069 ;; This function is called by:
 19070 ;;		_DIO0_Receive_ISR
 19071 ;; This function uses a non-reentrant model
 19072 ;;
 19073                           
 19074                           	psect	text120
 19075  00756C                     __ptext120:
 19076                           	opt callstack 0
 19077  00756C                     _get_lqi:
 19078                           	opt callstack 18
 19079                           
 19080                           ;incstack = 0
 19081                           ;get_lqi@rssi stored from wreg
 19082  00756C  6E43               	movwf	get_lqi@rssi^0,c
 19083                           
 19084                           ;../phy/sx1216/phy_src/phy.c: 630:     if(rssi > -10){
 19085  00756E  5043               	movf	get_lqi@rssi^0,w,c
 19086  007570  0A80               	xorlw	128
 19087  007572  0F89               	addlw	137
 19088  007574  A0D8               	btfss	status,0,c
 19089  007576  D002               	goto	l15636
 19090                           
 19091                           ;../phy/sx1216/phy_src/phy.c: 631:         return 255;
 19092  007578  0EFF               	movlw	255
 19093  00757A  0012               	return	
 19094  00757C                     l15636:
 19095                           
 19096                           ;../phy/sx1216/phy_src/phy.c: 633:     return ((2.18*(int16_t)rssi) + 10795);
 19097  00757C  0E00               	movlw	0
 19098  00757E  6E2D               	movwf	___fladd@a^0,c
 19099  007580  0EAC               	movlw	172
 19100  007582  6E2E               	movwf	(___fladd@a+1)^0,c
 19101  007584  0E28               	movlw	40
 19102  007586  6E2F               	movwf	(___fladd@a+2)^0,c
 19103  007588  0E46               	movlw	70
 19104  00758A  6E30               	movwf	(___fladd@a+3)^0,c
 19105  00758C  0E1F               	movlw	31
 19106  00758E  6E14               	movwf	___flmul@a^0,c
 19107  007590  0E85               	movlw	133
 19108  007592  6E15               	movwf	(___flmul@a+1)^0,c
 19109  007594  0E0B               	movlw	11
 19110  007596  6E16               	movwf	(___flmul@a+2)^0,c
 19111  007598  0E40               	movlw	64
 19112  00759A  6E17               	movwf	(___flmul@a+3)^0,c
 19113  00759C  5043               	movf	get_lqi@rssi^0,w,c
 19114  00759E  6E02               	movwf	___xxtofl@val^0,c
 19115  0075A0  0E00               	movlw	0
 19116  0075A2  BE02               	btfsc	___xxtofl@val^0,7,c
 19117  0075A4  0EFF               	movlw	-1
 19118  0075A6  6E03               	movwf	(___xxtofl@val+1)^0,c
 19119  0075A8  6E04               	movwf	(___xxtofl@val+2)^0,c
 19120  0075AA  6E05               	movwf	(___xxtofl@val+3)^0,c
 19121  0075AC  0E01               	movlw	1
 19122  0075AE  ECAF  F022         	call	___xxtofl
 19123  0075B2  0060  F008  F010   	movff	?___xxtofl,___flmul@b
 19124  0075B8  0060  F00C  F011   	movff	?___xxtofl+1,___flmul@b+1
 19125  0075BE  0060  F010  F012   	movff	?___xxtofl+2,___flmul@b+2
 19126  0075C4  0060  F014  F013   	movff	?___xxtofl+3,___flmul@b+3
 19127  0075CA  EC39  F00B         	call	___flmul	;wreg free
 19128  0075CE  0060  F040  F029   	movff	?___flmul,___fladd@b
 19129  0075D4  0060  F044  F02A   	movff	?___flmul+1,___fladd@b+1
 19130  0075DA  0060  F048  F02B   	movff	?___flmul+2,___fladd@b+2
 19131  0075E0  0060  F04C  F02C   	movff	?___flmul+3,___fladd@b+3
 19132  0075E6  ECAC  F00E         	call	___fladd	;wreg free
 19133  0075EA  0060  F0A4  F039   	movff	?___fladd,___fltol@f1
 19134  0075F0  0060  F0A8  F03A   	movff	?___fladd+1,___fltol@f1+1
 19135  0075F6  0060  F0AC  F03B   	movff	?___fladd+2,___fltol@f1+2
 19136  0075FC  0060  F0B0  F03C   	movff	?___fladd+3,___fltol@f1+3
 19137  007602  ECA1  F034         	call	___fltol	;wreg free
 19138  007606  5039               	movf	?___fltol^0,w,c
 19139  007608  0012               	return		;funcret
 19140  00760A                     __end_of_get_lqi:
 19141                           	opt callstack 0
 19142                           
 19143 ;; *************** function ___fltol *****************
 19144 ;; Defined at:
 19145 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 19146 ;; Parameters:    Size  Location     Type
 19147 ;;  f1              4   56[COMRAM] unsigned char 
 19148 ;; Auto vars:     Size  Location     Type
 19149 ;;  exp1            1   65[COMRAM] unsigned char 
 19150 ;;  sign1           1   64[COMRAM] unsigned char 
 19151 ;; Return value:  Size  Location     Type
 19152 ;;                  4   56[COMRAM] long 
 19153 ;; Registers used:
 19154 ;;		wreg, status,2, status,0
 19155 ;; Tracked objects:
 19156 ;;		On entry : 0/0
 19157 ;;		On exit  : 0/0
 19158 ;;		Unchanged: 0/0
 19159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19160 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19162 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19163 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19164 ;;Total ram usage:       10 bytes
 19165 ;; Hardware stack levels used:    1
 19166 ;; Hardware stack levels required when called:    7
 19167 ;; This function calls:
 19168 ;;		Nothing
 19169 ;; This function is called by:
 19170 ;;		_get_lqi
 19171 ;; This function uses a non-reentrant model
 19172 ;;
 19173                           
 19174                           	psect	text121
 19175  006942                     __ptext121:
 19176                           	opt callstack 0
 19177  006942                     ___fltol:
 19178                           	opt callstack 18
 19179                           
 19180                           ;incstack = 0
 19181  006942  343B               	rlcf	(___fltol@f1+2)^0,w,c
 19182  006944  343C               	rlcf	(___fltol@f1+3)^0,w,c
 19183  006946  6E42               	movwf	___fltol@exp1^0,c
 19184  006948  5042               	movf	___fltol@exp1^0,w,c
 19185  00694A  A4D8               	btfss	status,2,c
 19186  00694C  D009               	goto	l10858
 19187  00694E                     u9170:
 19188  00694E  0E00               	movlw	0
 19189  006950  6E39               	movwf	?___fltol^0,c
 19190  006952  0E00               	movlw	0
 19191  006954  6E3A               	movwf	(?___fltol+1)^0,c
 19192  006956  0E00               	movlw	0
 19193  006958  6E3B               	movwf	(?___fltol+2)^0,c
 19194  00695A  0E00               	movlw	0
 19195  00695C  6E3C               	movwf	(?___fltol+3)^0,c
 19196  00695E  0012               	return	
 19197  006960                     l10858:
 19198  006960  0060  F0E4  F03D   	movff	___fltol@f1,??___fltol
 19199  006966  0060  F0E8  F03E   	movff	___fltol@f1+1,??___fltol+1
 19200  00696C  0060  F0EC  F03F   	movff	___fltol@f1+2,??___fltol+2
 19201  006972  0060  F0F0  F040   	movff	___fltol@f1+3,??___fltol+3
 19202  006978  0E20               	movlw	32
 19203  00697A  D005               	goto	u9180
 19204  00697C                     u9185:
 19205  00697C  90D8               	bcf	status,0,c
 19206  00697E  3240               	rrcf	(??___fltol+3)^0,f,c
 19207  006980  323F               	rrcf	(??___fltol+2)^0,f,c
 19208  006982  323E               	rrcf	(??___fltol+1)^0,f,c
 19209  006984  323D               	rrcf	??___fltol^0,f,c
 19210  006986                     u9180:
 19211  006986  2EE8               	decfsz	wreg,f,c
 19212  006988  D7F9               	goto	u9185
 19213  00698A  503D               	movf	??___fltol^0,w,c
 19214  00698C  6E41               	movwf	___fltol@sign1^0,c
 19215  00698E  8E3B               	bsf	(___fltol@f1+2)^0,7,c
 19216  006990  0EFF               	movlw	255
 19217  006992  1639               	andwf	___fltol@f1^0,f,c
 19218  006994  0EFF               	movlw	255
 19219  006996  163A               	andwf	(___fltol@f1+1)^0,f,c
 19220  006998  0EFF               	movlw	255
 19221  00699A  163B               	andwf	(___fltol@f1+2)^0,f,c
 19222  00699C  0E00               	movlw	0
 19223  00699E  163C               	andwf	(___fltol@f1+3)^0,f,c
 19224  0069A0  0E96               	movlw	150
 19225  0069A2  5E42               	subwf	___fltol@exp1^0,f,c
 19226  0069A4  AE42               	btfss	___fltol@exp1^0,7,c
 19227  0069A6  D00D               	goto	l10878
 19228  0069A8  5042               	movf	___fltol@exp1^0,w,c
 19229  0069AA  0A80               	xorlw	128
 19230  0069AC  0F97               	addlw	151
 19231  0069AE  A0D8               	btfss	status,0,c
 19232  0069B0  D7CE               	goto	u9170
 19233  0069B2                     l10874:
 19234  0069B2  90D8               	bcf	status,0,c
 19235  0069B4  323C               	rrcf	(___fltol@f1+3)^0,f,c
 19236  0069B6  323B               	rrcf	(___fltol@f1+2)^0,f,c
 19237  0069B8  323A               	rrcf	(___fltol@f1+1)^0,f,c
 19238  0069BA  3239               	rrcf	___fltol@f1^0,f,c
 19239  0069BC  3E42               	incfsz	___fltol@exp1^0,f,c
 19240  0069BE  D7F9               	goto	l10874
 19241  0069C0  D00D               	goto	u9220
 19242  0069C2                     l10878:
 19243  0069C2  0E1F               	movlw	31
 19244  0069C4  6442               	cpfsgt	___fltol@exp1^0,c
 19245  0069C6  D007               	goto	l10886
 19246  0069C8  D7C2               	goto	u9170
 19247  0069CA                     l10884:
 19248  0069CA  90D8               	bcf	status,0,c
 19249  0069CC  3639               	rlcf	___fltol@f1^0,f,c
 19250  0069CE  363A               	rlcf	(___fltol@f1+1)^0,f,c
 19251  0069D0  363B               	rlcf	(___fltol@f1+2)^0,f,c
 19252  0069D2  363C               	rlcf	(___fltol@f1+3)^0,f,c
 19253  0069D4  0642               	decf	___fltol@exp1^0,f,c
 19254  0069D6                     l10886:
 19255  0069D6  5042               	movf	___fltol@exp1^0,w,c
 19256  0069D8  A4D8               	btfss	status,2,c
 19257  0069DA  D7F7               	goto	l10884
 19258  0069DC                     u9220:
 19259  0069DC  5041               	movf	___fltol@sign1^0,w,c
 19260  0069DE  B4D8               	btfsc	status,2,c
 19261  0069E0  D008               	goto	l10892
 19262  0069E2  1E3C               	comf	(___fltol@f1+3)^0,f,c
 19263  0069E4  1E3B               	comf	(___fltol@f1+2)^0,f,c
 19264  0069E6  1E3A               	comf	(___fltol@f1+1)^0,f,c
 19265  0069E8  6C39               	negf	___fltol@f1^0,c
 19266  0069EA  0E00               	movlw	0
 19267  0069EC  223A               	addwfc	(___fltol@f1+1)^0,f,c
 19268  0069EE  223B               	addwfc	(___fltol@f1+2)^0,f,c
 19269  0069F0  223C               	addwfc	(___fltol@f1+3)^0,f,c
 19270  0069F2                     l10892:
 19271  0069F2  0060  F0E4  F039   	movff	___fltol@f1,?___fltol
 19272  0069F8  0060  F0E8  F03A   	movff	___fltol@f1+1,?___fltol+1
 19273  0069FE  0060  F0EC  F03B   	movff	___fltol@f1+2,?___fltol+2
 19274  006A04  0060  F0F0  F03C   	movff	___fltol@f1+3,?___fltol+3
 19275  006A0A  0012               	return		;funcret
 19276  006A0C                     __end_of___fltol:
 19277                           	opt callstack 0
 19278                           
 19279 ;; *************** function ___flmul *****************
 19280 ;; Defined at:
 19281 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 19282 ;; Parameters:    Size  Location     Type
 19283 ;;  b               4   15[COMRAM] long 
 19284 ;;  a               4   19[COMRAM] long 
 19285 ;; Auto vars:     Size  Location     Type
 19286 ;;  prod            4   34[COMRAM] struct .
 19287 ;;  grs             4   29[COMRAM] unsigned long 
 19288 ;;  temp            2   38[COMRAM] struct .
 19289 ;;  bexp            1   33[COMRAM] unsigned char 
 19290 ;;  aexp            1   28[COMRAM] unsigned char 
 19291 ;;  sign            1   27[COMRAM] unsigned char 
 19292 ;; Return value:  Size  Location     Type
 19293 ;;                  4   15[COMRAM] unsigned char 
 19294 ;; Registers used:
 19295 ;;		wreg, status,2, status,0, prodl, prodh
 19296 ;; Tracked objects:
 19297 ;;		On entry : 0/0
 19298 ;;		On exit  : 0/0
 19299 ;;		Unchanged: 0/0
 19300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19301 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19302 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19303 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19304 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19305 ;;Total ram usage:       25 bytes
 19306 ;; Hardware stack levels used:    1
 19307 ;; Hardware stack levels required when called:    7
 19308 ;; This function calls:
 19309 ;;		Nothing
 19310 ;; This function is called by:
 19311 ;;		_get_lqi
 19312 ;; This function uses a non-reentrant model
 19313 ;;
 19314                           
 19315                           	psect	text122
 19316  001672                     __ptext122:
 19317                           	opt callstack 0
 19318  001672                     ___flmul:
 19319                           	opt callstack 18
 19320                           
 19321                           ;incstack = 0
 19322  001672  5013               	movf	(___flmul@b+3)^0,w,c
 19323  001674  0B80               	andlw	128
 19324  001676  6E1C               	movwf	___flmul@sign^0,c
 19325  001678  5013               	movf	(___flmul@b+3)^0,w,c
 19326  00167A  2413               	addwf	(___flmul@b+3)^0,w,c
 19327  00167C  6E22               	movwf	___flmul@bexp^0,c
 19328  00167E  BE12               	btfsc	(___flmul@b+2)^0,7,c
 19329  001680  8022               	bsf	___flmul@bexp^0,0,c
 19330  001682  5022               	movf	___flmul@bexp^0,w,c
 19331  001684  B4D8               	btfsc	status,2,c
 19332  001686  D00D               	goto	l10714
 19333  001688  2822               	incf	___flmul@bexp^0,w,c
 19334  00168A  A4D8               	btfss	status,2,c
 19335  00168C  D008               	goto	l10712
 19336  00168E  0E00               	movlw	0
 19337  001690  6E10               	movwf	___flmul@b^0,c
 19338  001692  0E00               	movlw	0
 19339  001694  6E11               	movwf	(___flmul@b+1)^0,c
 19340  001696  0E00               	movlw	0
 19341  001698  6E12               	movwf	(___flmul@b+2)^0,c
 19342  00169A  0E00               	movlw	0
 19343  00169C  6E13               	movwf	(___flmul@b+3)^0,c
 19344  00169E                     l10712:
 19345  00169E  8E12               	bsf	(___flmul@b+2)^0,7,c
 19346  0016A0  D008               	goto	l10716
 19347  0016A2                     l10714:
 19348  0016A2  0E00               	movlw	0
 19349  0016A4  6E10               	movwf	___flmul@b^0,c
 19350  0016A6  0E00               	movlw	0
 19351  0016A8  6E11               	movwf	(___flmul@b+1)^0,c
 19352  0016AA  0E00               	movlw	0
 19353  0016AC  6E12               	movwf	(___flmul@b+2)^0,c
 19354  0016AE  0E00               	movlw	0
 19355  0016B0  6E13               	movwf	(___flmul@b+3)^0,c
 19356  0016B2                     l10716:
 19357  0016B2  5017               	movf	(___flmul@a+3)^0,w,c
 19358  0016B4  0B80               	andlw	128
 19359  0016B6  1A1C               	xorwf	___flmul@sign^0,f,c
 19360  0016B8  5017               	movf	(___flmul@a+3)^0,w,c
 19361  0016BA  2417               	addwf	(___flmul@a+3)^0,w,c
 19362  0016BC  6E1D               	movwf	___flmul@aexp^0,c
 19363  0016BE  BE16               	btfsc	(___flmul@a+2)^0,7,c
 19364  0016C0  801D               	bsf	___flmul@aexp^0,0,c
 19365  0016C2  501D               	movf	___flmul@aexp^0,w,c
 19366  0016C4  B4D8               	btfsc	status,2,c
 19367  0016C6  D00D               	goto	l10732
 19368  0016C8  281D               	incf	___flmul@aexp^0,w,c
 19369  0016CA  A4D8               	btfss	status,2,c
 19370  0016CC  D008               	goto	l10730
 19371  0016CE  0E00               	movlw	0
 19372  0016D0  6E14               	movwf	___flmul@a^0,c
 19373  0016D2  0E00               	movlw	0
 19374  0016D4  6E15               	movwf	(___flmul@a+1)^0,c
 19375  0016D6  0E00               	movlw	0
 19376  0016D8  6E16               	movwf	(___flmul@a+2)^0,c
 19377  0016DA  0E00               	movlw	0
 19378  0016DC  6E17               	movwf	(___flmul@a+3)^0,c
 19379  0016DE                     l10730:
 19380  0016DE  8E16               	bsf	(___flmul@a+2)^0,7,c
 19381  0016E0  D008               	goto	l3925
 19382  0016E2                     l10732:
 19383  0016E2  0E00               	movlw	0
 19384  0016E4  6E14               	movwf	___flmul@a^0,c
 19385  0016E6  0E00               	movlw	0
 19386  0016E8  6E15               	movwf	(___flmul@a+1)^0,c
 19387  0016EA  0E00               	movlw	0
 19388  0016EC  6E16               	movwf	(___flmul@a+2)^0,c
 19389  0016EE  0E00               	movlw	0
 19390  0016F0  6E17               	movwf	(___flmul@a+3)^0,c
 19391  0016F2                     l3925:
 19392  0016F2  501D               	movf	___flmul@aexp^0,w,c
 19393  0016F4  B4D8               	btfsc	status,2,c
 19394  0016F6  D003               	goto	u9010
 19395  0016F8  5022               	movf	___flmul@bexp^0,w,c
 19396  0016FA  A4D8               	btfss	status,2,c
 19397  0016FC  D009               	goto	l10740
 19398  0016FE                     u9010:
 19399  0016FE  0E00               	movlw	0
 19400  001700  6E10               	movwf	?___flmul^0,c
 19401  001702  0E00               	movlw	0
 19402  001704  6E11               	movwf	(?___flmul+1)^0,c
 19403  001706  0E00               	movlw	0
 19404  001708  6E12               	movwf	(?___flmul+2)^0,c
 19405  00170A  0E00               	movlw	0
 19406  00170C  6E13               	movwf	(?___flmul+3)^0,c
 19407  00170E  0012               	return	
 19408  001710                     l10740:
 19409  001710  5016               	movf	(___flmul@a+2)^0,w,c
 19410  001712  0210               	mulwf	___flmul@b^0,c
 19411  001714  006F FFCC  F027    	movff	prodl,___flmul@temp
 19412  00171A  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19413  001720  5027               	movf	___flmul@temp^0,w,c
 19414  001722  6E1E               	movwf	___flmul@grs^0,c
 19415  001724  6A1F               	clrf	(___flmul@grs+1)^0,c
 19416  001726  6A20               	clrf	(___flmul@grs+2)^0,c
 19417  001728  6A21               	clrf	(___flmul@grs+3)^0,c
 19418  00172A  5028               	movf	(___flmul@temp+1)^0,w,c
 19419  00172C  6E23               	movwf	___flmul@prod^0,c
 19420  00172E  6A24               	clrf	(___flmul@prod+1)^0,c
 19421  001730  6A25               	clrf	(___flmul@prod+2)^0,c
 19422  001732  6A26               	clrf	(___flmul@prod+3)^0,c
 19423  001734  5015               	movf	(___flmul@a+1)^0,w,c
 19424  001736  0211               	mulwf	(___flmul@b+1)^0,c
 19425  001738  006F FFCC  F027    	movff	prodl,___flmul@temp
 19426  00173E  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19427  001744  5027               	movf	___flmul@temp^0,w,c
 19428  001746  261E               	addwf	___flmul@grs^0,f,c
 19429  001748  0E00               	movlw	0
 19430  00174A  221F               	addwfc	(___flmul@grs+1)^0,f,c
 19431  00174C  2220               	addwfc	(___flmul@grs+2)^0,f,c
 19432  00174E  2221               	addwfc	(___flmul@grs+3)^0,f,c
 19433  001750  5028               	movf	(___flmul@temp+1)^0,w,c
 19434  001752  2623               	addwf	___flmul@prod^0,f,c
 19435  001754  0E00               	movlw	0
 19436  001756  2224               	addwfc	(___flmul@prod+1)^0,f,c
 19437  001758  2225               	addwfc	(___flmul@prod+2)^0,f,c
 19438  00175A  2226               	addwfc	(___flmul@prod+3)^0,f,c
 19439  00175C  5014               	movf	___flmul@a^0,w,c
 19440  00175E  0212               	mulwf	(___flmul@b+2)^0,c
 19441  001760  006F FFCC  F027    	movff	prodl,___flmul@temp
 19442  001766  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19443  00176C  5027               	movf	___flmul@temp^0,w,c
 19444  00176E  261E               	addwf	___flmul@grs^0,f,c
 19445  001770  0E00               	movlw	0
 19446  001772  221F               	addwfc	(___flmul@grs+1)^0,f,c
 19447  001774  2220               	addwfc	(___flmul@grs+2)^0,f,c
 19448  001776  2221               	addwfc	(___flmul@grs+3)^0,f,c
 19449  001778  5028               	movf	(___flmul@temp+1)^0,w,c
 19450  00177A  2623               	addwf	___flmul@prod^0,f,c
 19451  00177C  0E00               	movlw	0
 19452  00177E  2224               	addwfc	(___flmul@prod+1)^0,f,c
 19453  001780  2225               	addwfc	(___flmul@prod+2)^0,f,c
 19454  001782  2226               	addwfc	(___flmul@prod+3)^0,f,c
 19455  001784  0060  F080  F021   	movff	___flmul@grs+2,___flmul@grs+3
 19456  00178A  0060  F07C  F020   	movff	___flmul@grs+1,___flmul@grs+2
 19457  001790  0060  F078  F01F   	movff	___flmul@grs,___flmul@grs+1
 19458  001796  6A1E               	clrf	___flmul@grs^0,c
 19459  001798  5014               	movf	___flmul@a^0,w,c
 19460  00179A  0211               	mulwf	(___flmul@b+1)^0,c
 19461  00179C  006F FFCC  F027    	movff	prodl,___flmul@temp
 19462  0017A2  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19463  0017A8  5027               	movf	___flmul@temp^0,w,c
 19464  0017AA  261E               	addwf	___flmul@grs^0,f,c
 19465  0017AC  5028               	movf	(___flmul@temp+1)^0,w,c
 19466  0017AE  221F               	addwfc	(___flmul@grs+1)^0,f,c
 19467  0017B0  0E00               	movlw	0
 19468  0017B2  2220               	addwfc	(___flmul@grs+2)^0,f,c
 19469  0017B4  0E00               	movlw	0
 19470  0017B6  2221               	addwfc	(___flmul@grs+3)^0,f,c
 19471  0017B8  5015               	movf	(___flmul@a+1)^0,w,c
 19472  0017BA  0210               	mulwf	___flmul@b^0,c
 19473  0017BC  006F FFCC  F027    	movff	prodl,___flmul@temp
 19474  0017C2  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19475  0017C8  5027               	movf	___flmul@temp^0,w,c
 19476  0017CA  261E               	addwf	___flmul@grs^0,f,c
 19477  0017CC  5028               	movf	(___flmul@temp+1)^0,w,c
 19478  0017CE  221F               	addwfc	(___flmul@grs+1)^0,f,c
 19479  0017D0  0E00               	movlw	0
 19480  0017D2  2220               	addwfc	(___flmul@grs+2)^0,f,c
 19481  0017D4  0E00               	movlw	0
 19482  0017D6  2221               	addwfc	(___flmul@grs+3)^0,f,c
 19483  0017D8  0060  F080  F021   	movff	___flmul@grs+2,___flmul@grs+3
 19484  0017DE  0060  F07C  F020   	movff	___flmul@grs+1,___flmul@grs+2
 19485  0017E4  0060  F078  F01F   	movff	___flmul@grs,___flmul@grs+1
 19486  0017EA  6A1E               	clrf	___flmul@grs^0,c
 19487  0017EC  5014               	movf	___flmul@a^0,w,c
 19488  0017EE  0210               	mulwf	___flmul@b^0,c
 19489  0017F0  006F FFCC  F027    	movff	prodl,___flmul@temp
 19490  0017F6  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19491  0017FC  5027               	movf	___flmul@temp^0,w,c
 19492  0017FE  261E               	addwf	___flmul@grs^0,f,c
 19493  001800  5028               	movf	(___flmul@temp+1)^0,w,c
 19494  001802  221F               	addwfc	(___flmul@grs+1)^0,f,c
 19495  001804  0E00               	movlw	0
 19496  001806  2220               	addwfc	(___flmul@grs+2)^0,f,c
 19497  001808  0E00               	movlw	0
 19498  00180A  2221               	addwfc	(___flmul@grs+3)^0,f,c
 19499  00180C  5016               	movf	(___flmul@a+2)^0,w,c
 19500  00180E  0211               	mulwf	(___flmul@b+1)^0,c
 19501  001810  006F FFCC  F027    	movff	prodl,___flmul@temp
 19502  001816  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19503  00181C  5027               	movf	___flmul@temp^0,w,c
 19504  00181E  2623               	addwf	___flmul@prod^0,f,c
 19505  001820  5028               	movf	(___flmul@temp+1)^0,w,c
 19506  001822  2224               	addwfc	(___flmul@prod+1)^0,f,c
 19507  001824  0E00               	movlw	0
 19508  001826  2225               	addwfc	(___flmul@prod+2)^0,f,c
 19509  001828  0E00               	movlw	0
 19510  00182A  2226               	addwfc	(___flmul@prod+3)^0,f,c
 19511  00182C  5015               	movf	(___flmul@a+1)^0,w,c
 19512  00182E  0212               	mulwf	(___flmul@b+2)^0,c
 19513  001830  006F FFCC  F027    	movff	prodl,___flmul@temp
 19514  001836  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19515  00183C  5027               	movf	___flmul@temp^0,w,c
 19516  00183E  2623               	addwf	___flmul@prod^0,f,c
 19517  001840  5028               	movf	(___flmul@temp+1)^0,w,c
 19518  001842  2224               	addwfc	(___flmul@prod+1)^0,f,c
 19519  001844  0E00               	movlw	0
 19520  001846  2225               	addwfc	(___flmul@prod+2)^0,f,c
 19521  001848  0E00               	movlw	0
 19522  00184A  2226               	addwfc	(___flmul@prod+3)^0,f,c
 19523  00184C  5016               	movf	(___flmul@a+2)^0,w,c
 19524  00184E  0212               	mulwf	(___flmul@b+2)^0,c
 19525  001850  006F FFCC  F027    	movff	prodl,___flmul@temp
 19526  001856  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19527  00185C  5027               	movf	___flmul@temp^0,w,c
 19528  00185E  6E18               	movwf	??___flmul^0,c
 19529  001860  5028               	movf	(___flmul@temp+1)^0,w,c
 19530  001862  6E19               	movwf	(??___flmul+1)^0,c
 19531  001864  6A1A               	clrf	(??___flmul+2)^0,c
 19532  001866  6A1B               	clrf	(??___flmul+3)^0,c
 19533  001868  0060  F068  F01B   	movff	??___flmul+2,??___flmul+3
 19534  00186E  0060  F064  F01A   	movff	??___flmul+1,??___flmul+2
 19535  001874  0060  F060  F019   	movff	??___flmul,??___flmul+1
 19536  00187A  6A18               	clrf	??___flmul^0,c
 19537  00187C  5018               	movf	??___flmul^0,w,c
 19538  00187E  2623               	addwf	___flmul@prod^0,f,c
 19539  001880  5019               	movf	(??___flmul+1)^0,w,c
 19540  001882  2224               	addwfc	(___flmul@prod+1)^0,f,c
 19541  001884  501A               	movf	(??___flmul+2)^0,w,c
 19542  001886  2225               	addwfc	(___flmul@prod+2)^0,f,c
 19543  001888  501B               	movf	(??___flmul+3)^0,w,c
 19544  00188A  2226               	addwfc	(___flmul@prod+3)^0,f,c
 19545  00188C  5021               	movf	(___flmul@grs+3)^0,w,c
 19546  00188E  2623               	addwf	___flmul@prod^0,f,c
 19547  001890  0E00               	movlw	0
 19548  001892  2224               	addwfc	(___flmul@prod+1)^0,f,c
 19549  001894  2225               	addwfc	(___flmul@prod+2)^0,f,c
 19550  001896  2226               	addwfc	(___flmul@prod+3)^0,f,c
 19551  001898  0060  F080  F021   	movff	___flmul@grs+2,___flmul@grs+3
 19552  00189E  0060  F07C  F020   	movff	___flmul@grs+1,___flmul@grs+2
 19553  0018A4  0060  F078  F01F   	movff	___flmul@grs,___flmul@grs+1
 19554  0018AA  6A1E               	clrf	___flmul@grs^0,c
 19555  0018AC  501D               	movf	___flmul@aexp^0,w,c
 19556  0018AE  0060  F088  F018   	movff	___flmul@bexp,??___flmul
 19557  0018B4  6A19               	clrf	(??___flmul+1)^0,c
 19558  0018B6  2618               	addwf	??___flmul^0,f,c
 19559  0018B8  0E00               	movlw	0
 19560  0018BA  2219               	addwfc	(??___flmul+1)^0,f,c
 19561  0018BC  0E82               	movlw	130
 19562  0018BE  2418               	addwf	??___flmul^0,w,c
 19563  0018C0  6E27               	movwf	___flmul@temp^0,c
 19564  0018C2  0EFF               	movlw	255
 19565  0018C4  2019               	addwfc	(??___flmul+1)^0,w,c
 19566  0018C6  6E28               	movwf	(___flmul@temp+1)^0,c
 19567  0018C8  D00F               	goto	l10788
 19568  0018CA                     l10782:
 19569  0018CA  90D8               	bcf	status,0,c
 19570  0018CC  3623               	rlcf	___flmul@prod^0,f,c
 19571  0018CE  3624               	rlcf	(___flmul@prod+1)^0,f,c
 19572  0018D0  3625               	rlcf	(___flmul@prod+2)^0,f,c
 19573  0018D2  3626               	rlcf	(___flmul@prod+3)^0,f,c
 19574  0018D4  BE21               	btfsc	(___flmul@grs+3)^0,7,c
 19575  0018D6  8023               	bsf	___flmul@prod^0,0,c
 19576  0018D8  90D8               	bcf	status,0,c
 19577  0018DA  361E               	rlcf	___flmul@grs^0,f,c
 19578  0018DC  361F               	rlcf	(___flmul@grs+1)^0,f,c
 19579  0018DE  3620               	rlcf	(___flmul@grs+2)^0,f,c
 19580  0018E0  3621               	rlcf	(___flmul@grs+3)^0,f,c
 19581  0018E2  0627               	decf	___flmul@temp^0,f,c
 19582  0018E4  A0D8               	btfss	status,0,c
 19583  0018E6  0628               	decf	(___flmul@temp+1)^0,f,c
 19584  0018E8                     l10788:
 19585  0018E8  AE25               	btfss	(___flmul@prod+2)^0,7,c
 19586  0018EA  D7EF               	goto	l10782
 19587  0018EC  0E00               	movlw	0
 19588  0018EE  6E1D               	movwf	___flmul@aexp^0,c
 19589  0018F0  AE21               	btfss	(___flmul@grs+3)^0,7,c
 19590  0018F2  D017               	goto	l3934
 19591  0018F4  0EFF               	movlw	255
 19592  0018F6  141E               	andwf	___flmul@grs^0,w,c
 19593  0018F8  6E18               	movwf	??___flmul^0,c
 19594  0018FA  0EFF               	movlw	255
 19595  0018FC  141F               	andwf	(___flmul@grs+1)^0,w,c
 19596  0018FE  6E19               	movwf	(??___flmul+1)^0,c
 19597  001900  0EFF               	movlw	255
 19598  001902  1420               	andwf	(___flmul@grs+2)^0,w,c
 19599  001904  6E1A               	movwf	(??___flmul+2)^0,c
 19600  001906  0E7F               	movlw	127
 19601  001908  1421               	andwf	(___flmul@grs+3)^0,w,c
 19602  00190A  6E1B               	movwf	(??___flmul+3)^0,c
 19603  00190C  5018               	movf	??___flmul^0,w,c
 19604  00190E  1019               	iorwf	(??___flmul+1)^0,w,c
 19605  001910  101A               	iorwf	(??___flmul+2)^0,w,c
 19606  001912  101B               	iorwf	(??___flmul+3)^0,w,c
 19607  001914  B4D8               	btfsc	status,2,c
 19608  001916  D003               	goto	l3935
 19609  001918                     u9050:
 19610  001918  0E01               	movlw	1
 19611  00191A  6E1D               	movwf	___flmul@aexp^0,c
 19612  00191C  D002               	goto	l3934
 19613  00191E                     l3935:
 19614  00191E  B023               	btfsc	___flmul@prod^0,0,c
 19615  001920  D7FB               	goto	u9050
 19616  001922                     l3934:
 19617  001922  501D               	movf	___flmul@aexp^0,w,c
 19618  001924  B4D8               	btfsc	status,2,c
 19619  001926  D027               	goto	l10808
 19620  001928  0E01               	movlw	1
 19621  00192A  2623               	addwf	___flmul@prod^0,f,c
 19622  00192C  0E00               	movlw	0
 19623  00192E  2224               	addwfc	(___flmul@prod+1)^0,f,c
 19624  001930  2225               	addwfc	(___flmul@prod+2)^0,f,c
 19625  001932  2226               	addwfc	(___flmul@prod+3)^0,f,c
 19626  001934  A026               	btfss	(___flmul@prod+3)^0,0,c
 19627  001936  D01F               	goto	l10808
 19628  001938  0060  F08C  F018   	movff	___flmul@prod,??___flmul
 19629  00193E  0060  F090  F019   	movff	___flmul@prod+1,??___flmul+1
 19630  001944  0060  F094  F01A   	movff	___flmul@prod+2,??___flmul+2
 19631  00194A  0060  F098  F01B   	movff	___flmul@prod+3,??___flmul+3
 19632  001950  341B               	rlcf	(??___flmul+3)^0,w,c
 19633  001952  321B               	rrcf	(??___flmul+3)^0,f,c
 19634  001954  321A               	rrcf	(??___flmul+2)^0,f,c
 19635  001956  3219               	rrcf	(??___flmul+1)^0,f,c
 19636  001958  3218               	rrcf	??___flmul^0,f,c
 19637  00195A  0060  F060  F023   	movff	??___flmul,___flmul@prod
 19638  001960  0060  F064  F024   	movff	??___flmul+1,___flmul@prod+1
 19639  001966  0060  F068  F025   	movff	??___flmul+2,___flmul@prod+2
 19640  00196C  0060  F06C  F026   	movff	??___flmul+3,___flmul@prod+3
 19641  001972  4A27               	infsnz	___flmul@temp^0,f,c
 19642  001974  2A28               	incf	(___flmul@temp+1)^0,f,c
 19643  001976                     l10808:
 19644  001976  BE28               	btfsc	(___flmul@temp+1)^0,7,c
 19645  001978  D00D               	goto	l10812
 19646  00197A  5028               	movf	(___flmul@temp+1)^0,w,c
 19647  00197C  E103               	bnz	u9090
 19648  00197E  2827               	incf	___flmul@temp^0,w,c
 19649  001980  A0D8               	btfss	status,0,c
 19650  001982  D008               	goto	l10812
 19651  001984                     u9090:
 19652  001984  0E00               	movlw	0
 19653  001986  6E23               	movwf	___flmul@prod^0,c
 19654  001988  0E00               	movlw	0
 19655  00198A  6E24               	movwf	(___flmul@prod+1)^0,c
 19656  00198C  0E80               	movlw	128
 19657  00198E  6E25               	movwf	(___flmul@prod+2)^0,c
 19658  001990  0E7F               	movlw	127
 19659  001992  D021               	goto	L11
 19660  001994                     l10812:
 19661  001994  BE28               	btfsc	(___flmul@temp+1)^0,7,c
 19662  001996  D005               	goto	u9100
 19663  001998  5028               	movf	(___flmul@temp+1)^0,w,c
 19664  00199A  E10E               	bnz	l3942
 19665  00199C  0427               	decf	___flmul@temp^0,w,c
 19666  00199E  B0D8               	btfsc	status,0,c
 19667  0019A0  D00B               	goto	l3942
 19668  0019A2                     u9100:
 19669  0019A2  0E00               	movlw	0
 19670  0019A4  6E23               	movwf	___flmul@prod^0,c
 19671  0019A6  0E00               	movlw	0
 19672  0019A8  6E24               	movwf	(___flmul@prod+1)^0,c
 19673  0019AA  0E00               	movlw	0
 19674  0019AC  6E25               	movwf	(___flmul@prod+2)^0,c
 19675  0019AE  0E00               	movlw	0
 19676  0019B0  6E26               	movwf	(___flmul@prod+3)^0,c
 19677  0019B2  0E00               	movlw	0
 19678  0019B4  6E1C               	movwf	___flmul@sign^0,c
 19679  0019B6  D010               	goto	l10824
 19680  0019B8                     l3942:
 19681  0019B8  0060  F09C  F022   	movff	___flmul@temp,___flmul@bexp
 19682  0019BE  0EFF               	movlw	255
 19683  0019C0  1623               	andwf	___flmul@prod^0,f,c
 19684  0019C2  0EFF               	movlw	255
 19685  0019C4  1624               	andwf	(___flmul@prod+1)^0,f,c
 19686  0019C6  0E7F               	movlw	127
 19687  0019C8  1625               	andwf	(___flmul@prod+2)^0,f,c
 19688  0019CA  0E00               	movlw	0
 19689  0019CC  1626               	andwf	(___flmul@prod+3)^0,f,c
 19690  0019CE  B022               	btfsc	___flmul@bexp^0,0,c
 19691  0019D0  8E25               	bsf	(___flmul@prod+2)^0,7,c
 19692  0019D2  90D8               	bcf	status,0,c
 19693  0019D4  3022               	rrcf	___flmul@bexp^0,w,c
 19694  0019D6                     L11:
 19695  0019D6  6E26               	movwf	(___flmul@prod+3)^0,c
 19696  0019D8                     l10824:
 19697  0019D8  501C               	movf	___flmul@sign^0,w,c
 19698  0019DA  1226               	iorwf	(___flmul@prod+3)^0,f,c
 19699  0019DC  0060  F08C  F010   	movff	___flmul@prod,?___flmul
 19700  0019E2  0060  F090  F011   	movff	___flmul@prod+1,?___flmul+1
 19701  0019E8  0060  F094  F012   	movff	___flmul@prod+2,?___flmul+2
 19702  0019EE  0060  F098  F013   	movff	___flmul@prod+3,?___flmul+3
 19703  0019F4  0012               	return		;funcret
 19704  0019F6                     __end_of___flmul:
 19705                           	opt callstack 0
 19706                           
 19707 ;; *************** function ___fladd *****************
 19708 ;; Defined at:
 19709 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 19710 ;; Parameters:    Size  Location     Type
 19711 ;;  b               4   40[COMRAM] unsigned char 
 19712 ;;  a               4   44[COMRAM] unsigned char 
 19713 ;; Auto vars:     Size  Location     Type
 19714 ;;  grs             1   55[COMRAM] unsigned char 
 19715 ;;  bexp            1   54[COMRAM] unsigned char 
 19716 ;;  aexp            1   53[COMRAM] unsigned char 
 19717 ;;  signs           1   52[COMRAM] unsigned char 
 19718 ;; Return value:  Size  Location     Type
 19719 ;;                  4   40[COMRAM] unsigned char 
 19720 ;; Registers used:
 19721 ;;		wreg, status,2, status,0
 19722 ;; Tracked objects:
 19723 ;;		On entry : 0/0
 19724 ;;		On exit  : 0/0
 19725 ;;		Unchanged: 0/0
 19726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19727 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19728 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19729 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19730 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19731 ;;Total ram usage:       16 bytes
 19732 ;; Hardware stack levels used:    1
 19733 ;; Hardware stack levels required when called:    7
 19734 ;; This function calls:
 19735 ;;		Nothing
 19736 ;; This function is called by:
 19737 ;;		_get_lqi
 19738 ;; This function uses a non-reentrant model
 19739 ;;
 19740                           
 19741                           	psect	text123
 19742  001D58                     __ptext123:
 19743                           	opt callstack 0
 19744  001D58                     ___fladd:
 19745                           	opt callstack 18
 19746                           
 19747                           ;incstack = 0
 19748  001D58  502C               	movf	(___fladd@b+3)^0,w,c
 19749  001D5A  0B80               	andlw	128
 19750  001D5C  6E35               	movwf	___fladd@signs^0,c
 19751  001D5E  502C               	movf	(___fladd@b+3)^0,w,c
 19752  001D60  242C               	addwf	(___fladd@b+3)^0,w,c
 19753  001D62  6E37               	movwf	___fladd@bexp^0,c
 19754  001D64  BE2B               	btfsc	(___fladd@b+2)^0,7,c
 19755  001D66  8037               	bsf	___fladd@bexp^0,0,c
 19756  001D68  5037               	movf	___fladd@bexp^0,w,c
 19757  001D6A  B4D8               	btfsc	status,2,c
 19758  001D6C  D00D               	goto	l10514
 19759  001D6E  2837               	incf	___fladd@bexp^0,w,c
 19760  001D70  A4D8               	btfss	status,2,c
 19761  001D72  D008               	goto	l10510
 19762  001D74  0E00               	movlw	0
 19763  001D76  6E29               	movwf	___fladd@b^0,c
 19764  001D78  0E00               	movlw	0
 19765  001D7A  6E2A               	movwf	(___fladd@b+1)^0,c
 19766  001D7C  0E00               	movlw	0
 19767  001D7E  6E2B               	movwf	(___fladd@b+2)^0,c
 19768  001D80  0E00               	movlw	0
 19769  001D82  6E2C               	movwf	(___fladd@b+3)^0,c
 19770  001D84                     l10510:
 19771  001D84  8E2B               	bsf	(___fladd@b+2)^0,7,c
 19772  001D86  D006               	goto	L12
 19773  001D88                     l10514:
 19774  001D88  0E00               	movlw	0
 19775  001D8A  6E29               	movwf	___fladd@b^0,c
 19776  001D8C  0E00               	movlw	0
 19777  001D8E  6E2A               	movwf	(___fladd@b+1)^0,c
 19778  001D90  0E00               	movlw	0
 19779  001D92  6E2B               	movwf	(___fladd@b+2)^0,c
 19780  001D94                     L12:
 19781  001D94  0E00               	movlw	0
 19782  001D96  6E2C               	movwf	(___fladd@b+3)^0,c
 19783  001D98  5030               	movf	(___fladd@a+3)^0,w,c
 19784  001D9A  0B80               	andlw	128
 19785  001D9C  6E36               	movwf	___fladd@aexp^0,c
 19786  001D9E  5035               	movf	___fladd@signs^0,w,c
 19787  001DA0  1836               	xorwf	___fladd@aexp^0,w,c
 19788  001DA2  A4D8               	btfss	status,2,c
 19789  001DA4  8C35               	bsf	___fladd@signs^0,6,c
 19790  001DA6  5030               	movf	(___fladd@a+3)^0,w,c
 19791  001DA8  2430               	addwf	(___fladd@a+3)^0,w,c
 19792  001DAA  6E36               	movwf	___fladd@aexp^0,c
 19793  001DAC  BE2F               	btfsc	(___fladd@a+2)^0,7,c
 19794  001DAE  8036               	bsf	___fladd@aexp^0,0,c
 19795  001DB0  5036               	movf	___fladd@aexp^0,w,c
 19796  001DB2  B4D8               	btfsc	status,2,c
 19797  001DB4  D00D               	goto	l10538
 19798  001DB6  2836               	incf	___fladd@aexp^0,w,c
 19799  001DB8  A4D8               	btfss	status,2,c
 19800  001DBA  D008               	goto	l10534
 19801  001DBC  0E00               	movlw	0
 19802  001DBE  6E2D               	movwf	___fladd@a^0,c
 19803  001DC0  0E00               	movlw	0
 19804  001DC2  6E2E               	movwf	(___fladd@a+1)^0,c
 19805  001DC4  0E00               	movlw	0
 19806  001DC6  6E2F               	movwf	(___fladd@a+2)^0,c
 19807  001DC8  0E00               	movlw	0
 19808  001DCA  6E30               	movwf	(___fladd@a+3)^0,c
 19809  001DCC                     l10534:
 19810  001DCC  8E2F               	bsf	(___fladd@a+2)^0,7,c
 19811  001DCE  D006               	goto	L13
 19812  001DD0                     l10538:
 19813  001DD0  0E00               	movlw	0
 19814  001DD2  6E2D               	movwf	___fladd@a^0,c
 19815  001DD4  0E00               	movlw	0
 19816  001DD6  6E2E               	movwf	(___fladd@a+1)^0,c
 19817  001DD8  0E00               	movlw	0
 19818  001DDA  6E2F               	movwf	(___fladd@a+2)^0,c
 19819  001DDC                     L13:
 19820  001DDC  0E00               	movlw	0
 19821  001DDE  6E30               	movwf	(___fladd@a+3)^0,c
 19822  001DE0  5037               	movf	___fladd@bexp^0,w,c
 19823  001DE2  5C36               	subwf	___fladd@aexp^0,w,c
 19824  001DE4  B0D8               	btfsc	status,0,c
 19825  001DE6  D031               	goto	l10576
 19826  001DE8  AC35               	btfss	___fladd@signs^0,6,c
 19827  001DEA  D002               	goto	l10546
 19828  001DEC  0E80               	movlw	128
 19829  001DEE  1A35               	xorwf	___fladd@signs^0,f,c
 19830  001DF0                     l10546:
 19831  001DF0  0060  F0DC  F038   	movff	___fladd@bexp,___fladd@grs
 19832  001DF6  0060  F0D8  F037   	movff	___fladd@aexp,___fladd@bexp
 19833  001DFC  0060  F0E0  F036   	movff	___fladd@grs,___fladd@aexp
 19834  001E02  0060  F0A4  F038   	movff	___fladd@b,___fladd@grs
 19835  001E08  0060  F0B4  F029   	movff	___fladd@a,___fladd@b
 19836  001E0E  0060  F0E0  F02D   	movff	___fladd@grs,___fladd@a
 19837  001E14  0060  F0A8  F038   	movff	___fladd@b+1,___fladd@grs
 19838  001E1A  0060  F0B8  F02A   	movff	___fladd@a+1,___fladd@b+1
 19839  001E20  0060  F0E0  F02E   	movff	___fladd@grs,___fladd@a+1
 19840  001E26  0060  F0AC  F038   	movff	___fladd@b+2,___fladd@grs
 19841  001E2C  0060  F0BC  F02B   	movff	___fladd@a+2,___fladd@b+2
 19842  001E32  0060  F0E0  F02F   	movff	___fladd@grs,___fladd@a+2
 19843  001E38  0060  F0B0  F038   	movff	___fladd@b+3,___fladd@grs
 19844  001E3E  0060  F0C0  F02C   	movff	___fladd@a+3,___fladd@b+3
 19845  001E44  0060  F0E0  F030   	movff	___fladd@grs,___fladd@a+3
 19846  001E4A                     l10576:
 19847  001E4A  0E00               	movlw	0
 19848  001E4C  6E38               	movwf	___fladd@grs^0,c
 19849  001E4E  5037               	movf	___fladd@bexp^0,w,c
 19850  001E50  0060  F0D8  F031   	movff	___fladd@aexp,??___fladd
 19851  001E56  6A32               	clrf	(??___fladd+1)^0,c
 19852  001E58  5E31               	subwf	??___fladd^0,f,c
 19853  001E5A  0E00               	movlw	0
 19854  001E5C  5A32               	subwfb	(??___fladd+1)^0,f,c
 19855  001E5E  BE32               	btfsc	(??___fladd+1)^0,7,c
 19856  001E60  D02D               	goto	l3840
 19857  001E62  5032               	movf	(??___fladd+1)^0,w,c
 19858  001E64  E104               	bnz	u8640
 19859  001E66  0E1A               	movlw	26
 19860  001E68  5C31               	subwf	??___fladd^0,w,c
 19861  001E6A  A0D8               	btfss	status,0,c
 19862  001E6C  D027               	goto	l3840
 19863  001E6E                     u8640:
 19864  001E6E  5029               	movf	___fladd@b^0,w,c
 19865  001E70  102A               	iorwf	(___fladd@b+1)^0,w,c
 19866  001E72  102B               	iorwf	(___fladd@b+2)^0,w,c
 19867  001E74  102C               	iorwf	(___fladd@b+3)^0,w,c
 19868  001E76  B4D8               	btfsc	status,2,c
 19869  001E78  D002               	goto	u8650
 19870  001E7A  0E01               	movlw	1
 19871  001E7C  D001               	goto	u8660
 19872  001E7E                     u8650:
 19873  001E7E  0E00               	movlw	0
 19874  001E80                     u8660:
 19875  001E80  6E38               	movwf	___fladd@grs^0,c
 19876  001E82  0E00               	movlw	0
 19877  001E84  6E29               	movwf	___fladd@b^0,c
 19878  001E86  0E00               	movlw	0
 19879  001E88  6E2A               	movwf	(___fladd@b+1)^0,c
 19880  001E8A  0E00               	movlw	0
 19881  001E8C  6E2B               	movwf	(___fladd@b+2)^0,c
 19882  001E8E  0E00               	movlw	0
 19883  001E90  6E2C               	movwf	(___fladd@b+3)^0,c
 19884  001E92  0060  F0D8  F037   	movff	___fladd@aexp,___fladd@bexp
 19885  001E98  D015               	goto	u8690
 19886  001E9A                     l3841:
 19887  001E9A  A038               	btfss	___fladd@grs^0,0,c
 19888  001E9C  D005               	goto	l10588
 19889  001E9E  90D8               	bcf	status,0,c
 19890  001EA0  3038               	rrcf	___fladd@grs^0,w,c
 19891  001EA2  0901               	iorlw	1
 19892  001EA4  6E38               	movwf	___fladd@grs^0,c
 19893  001EA6  D002               	goto	l10590
 19894  001EA8                     l10588:
 19895  001EA8  90D8               	bcf	status,0,c
 19896  001EAA  3238               	rrcf	___fladd@grs^0,f,c
 19897  001EAC                     l10590:
 19898  001EAC  B029               	btfsc	___fladd@b^0,0,c
 19899  001EAE  8E38               	bsf	___fladd@grs^0,7,c
 19900  001EB0  342C               	rlcf	(___fladd@b+3)^0,w,c
 19901  001EB2  322C               	rrcf	(___fladd@b+3)^0,f,c
 19902  001EB4  322B               	rrcf	(___fladd@b+2)^0,f,c
 19903  001EB6  322A               	rrcf	(___fladd@b+1)^0,f,c
 19904  001EB8  3229               	rrcf	___fladd@b^0,f,c
 19905  001EBA  2A37               	incf	___fladd@bexp^0,f,c
 19906  001EBC                     l3840:
 19907  001EBC  5036               	movf	___fladd@aexp^0,w,c
 19908  001EBE  5C37               	subwf	___fladd@bexp^0,w,c
 19909  001EC0  A0D8               	btfss	status,0,c
 19910  001EC2  D7EB               	goto	l3841
 19911  001EC4                     u8690:
 19912  001EC4  BC35               	btfsc	___fladd@signs^0,6,c
 19913  001EC6  D028               	goto	l10622
 19914  001EC8  5037               	movf	___fladd@bexp^0,w,c
 19915  001ECA  A4D8               	btfss	status,2,c
 19916  001ECC  D009               	goto	l10604
 19917  001ECE  0E00               	movlw	0
 19918  001ED0  6E29               	movwf	?___fladd^0,c
 19919  001ED2  0E00               	movlw	0
 19920  001ED4  6E2A               	movwf	(?___fladd+1)^0,c
 19921  001ED6  0E00               	movlw	0
 19922  001ED8  6E2B               	movwf	(?___fladd+2)^0,c
 19923  001EDA  0E00               	movlw	0
 19924  001EDC  6E2C               	movwf	(?___fladd+3)^0,c
 19925  001EDE  0012               	return	
 19926  001EE0                     l10604:
 19927  001EE0  502D               	movf	___fladd@a^0,w,c
 19928  001EE2  2629               	addwf	___fladd@b^0,f,c
 19929  001EE4  502E               	movf	(___fladd@a+1)^0,w,c
 19930  001EE6  222A               	addwfc	(___fladd@b+1)^0,f,c
 19931  001EE8  502F               	movf	(___fladd@a+2)^0,w,c
 19932  001EEA  222B               	addwfc	(___fladd@b+2)^0,f,c
 19933  001EEC  5030               	movf	(___fladd@a+3)^0,w,c
 19934  001EEE  222C               	addwfc	(___fladd@b+3)^0,f,c
 19935  001EF0  A02C               	btfss	(___fladd@b+3)^0,0,c
 19936  001EF2  D071               	goto	u8820
 19937  001EF4  A038               	btfss	___fladd@grs^0,0,c
 19938  001EF6  D005               	goto	l10612
 19939  001EF8  90D8               	bcf	status,0,c
 19940  001EFA  3038               	rrcf	___fladd@grs^0,w,c
 19941  001EFC  0901               	iorlw	1
 19942  001EFE  6E38               	movwf	___fladd@grs^0,c
 19943  001F00  D002               	goto	l10614
 19944  001F02                     l10612:
 19945  001F02  90D8               	bcf	status,0,c
 19946  001F04  3238               	rrcf	___fladd@grs^0,f,c
 19947  001F06                     l10614:
 19948  001F06  B029               	btfsc	___fladd@b^0,0,c
 19949  001F08  8E38               	bsf	___fladd@grs^0,7,c
 19950  001F0A  342C               	rlcf	(___fladd@b+3)^0,w,c
 19951  001F0C  322C               	rrcf	(___fladd@b+3)^0,f,c
 19952  001F0E  322B               	rrcf	(___fladd@b+2)^0,f,c
 19953  001F10  322A               	rrcf	(___fladd@b+1)^0,f,c
 19954  001F12  3229               	rrcf	___fladd@b^0,f,c
 19955  001F14  2A37               	incf	___fladd@bexp^0,f,c
 19956  001F16  D05F               	goto	u8820
 19957  001F18                     l10622:
 19958  001F18  502D               	movf	___fladd@a^0,w,c
 19959  001F1A  5C29               	subwf	___fladd@b^0,w,c
 19960  001F1C  502E               	movf	(___fladd@a+1)^0,w,c
 19961  001F1E  582A               	subwfb	(___fladd@b+1)^0,w,c
 19962  001F20  502F               	movf	(___fladd@a+2)^0,w,c
 19963  001F22  582B               	subwfb	(___fladd@b+2)^0,w,c
 19964  001F24  502C               	movf	(___fladd@b+3)^0,w,c
 19965  001F26  0A80               	xorlw	128
 19966  001F28  6E31               	movwf	??___fladd^0,c
 19967  001F2A  5030               	movf	(___fladd@a+3)^0,w,c
 19968  001F2C  0A80               	xorlw	128
 19969  001F2E  5831               	subwfb	??___fladd^0,w,c
 19970  001F30  B0D8               	btfsc	status,0,c
 19971  001F32  D025               	goto	l10632
 19972  001F34  5029               	movf	___fladd@b^0,w,c
 19973  001F36  5C2D               	subwf	___fladd@a^0,w,c
 19974  001F38  6E31               	movwf	??___fladd^0,c
 19975  001F3A  502A               	movf	(___fladd@b+1)^0,w,c
 19976  001F3C  582E               	subwfb	(___fladd@a+1)^0,w,c
 19977  001F3E  6E32               	movwf	(??___fladd+1)^0,c
 19978  001F40  502B               	movf	(___fladd@b+2)^0,w,c
 19979  001F42  582F               	subwfb	(___fladd@a+2)^0,w,c
 19980  001F44  6E33               	movwf	(??___fladd+2)^0,c
 19981  001F46  502C               	movf	(___fladd@b+3)^0,w,c
 19982  001F48  5830               	subwfb	(___fladd@a+3)^0,w,c
 19983  001F4A  6E34               	movwf	(??___fladd+3)^0,c
 19984  001F4C  0EFF               	movlw	255
 19985  001F4E  2431               	addwf	??___fladd^0,w,c
 19986  001F50  6E29               	movwf	___fladd@b^0,c
 19987  001F52  0EFF               	movlw	255
 19988  001F54  2032               	addwfc	(??___fladd+1)^0,w,c
 19989  001F56  6E2A               	movwf	(___fladd@b+1)^0,c
 19990  001F58  0EFF               	movlw	255
 19991  001F5A  2033               	addwfc	(??___fladd+2)^0,w,c
 19992  001F5C  6E2B               	movwf	(___fladd@b+2)^0,c
 19993  001F5E  0EFF               	movlw	255
 19994  001F60  2034               	addwfc	(??___fladd+3)^0,w,c
 19995  001F62  6E2C               	movwf	(___fladd@b+3)^0,c
 19996  001F64  0E80               	movlw	128
 19997  001F66  1A35               	xorwf	___fladd@signs^0,f,c
 19998  001F68  6C38               	negf	___fladd@grs^0,c
 19999  001F6A  5038               	movf	___fladd@grs^0,w,c
 20000  001F6C  A4D8               	btfss	status,2,c
 20001  001F6E  D00F               	goto	l3856
 20002  001F70  0E01               	movlw	1
 20003  001F72  2629               	addwf	___fladd@b^0,f,c
 20004  001F74  0E00               	movlw	0
 20005  001F76  222A               	addwfc	(___fladd@b+1)^0,f,c
 20006  001F78  222B               	addwfc	(___fladd@b+2)^0,f,c
 20007  001F7A  222C               	addwfc	(___fladd@b+3)^0,f,c
 20008  001F7C  D008               	goto	l3856
 20009  001F7E                     l10632:
 20010  001F7E  502D               	movf	___fladd@a^0,w,c
 20011  001F80  5E29               	subwf	___fladd@b^0,f,c
 20012  001F82  502E               	movf	(___fladd@a+1)^0,w,c
 20013  001F84  5A2A               	subwfb	(___fladd@b+1)^0,f,c
 20014  001F86  502F               	movf	(___fladd@a+2)^0,w,c
 20015  001F88  5A2B               	subwfb	(___fladd@b+2)^0,f,c
 20016  001F8A  5030               	movf	(___fladd@a+3)^0,w,c
 20017  001F8C  5A2C               	subwfb	(___fladd@b+3)^0,f,c
 20018  001F8E                     l3856:
 20019  001F8E  5029               	movf	___fladd@b^0,w,c
 20020  001F90  102A               	iorwf	(___fladd@b+1)^0,w,c
 20021  001F92  102B               	iorwf	(___fladd@b+2)^0,w,c
 20022  001F94  102C               	iorwf	(___fladd@b+3)^0,w,c
 20023  001F96  A4D8               	btfss	status,2,c
 20024  001F98  D01C               	goto	l10656
 20025  001F9A  5038               	movf	___fladd@grs^0,w,c
 20026  001F9C  A4D8               	btfss	status,2,c
 20027  001F9E  D019               	goto	l10656
 20028  001FA0  0E00               	movlw	0
 20029  001FA2  6E29               	movwf	?___fladd^0,c
 20030  001FA4  0E00               	movlw	0
 20031  001FA6  6E2A               	movwf	(?___fladd+1)^0,c
 20032  001FA8  0E00               	movlw	0
 20033  001FAA  6E2B               	movwf	(?___fladd+2)^0,c
 20034  001FAC  0E00               	movlw	0
 20035  001FAE  6E2C               	movwf	(?___fladd+3)^0,c
 20036  001FB0  0012               	return	
 20037  001FB2                     l10640:
 20038  001FB2  90D8               	bcf	status,0,c
 20039  001FB4  3629               	rlcf	___fladd@b^0,f,c
 20040  001FB6  362A               	rlcf	(___fladd@b+1)^0,f,c
 20041  001FB8  362B               	rlcf	(___fladd@b+2)^0,f,c
 20042  001FBA  362C               	rlcf	(___fladd@b+3)^0,f,c
 20043  001FBC  BE38               	btfsc	___fladd@grs^0,7,c
 20044  001FBE  8029               	bsf	___fladd@b^0,0,c
 20045  001FC0  A038               	btfss	___fladd@grs^0,0,c
 20046  001FC2  D002               	goto	l10650
 20047  001FC4  80D8               	bsf	status,0,c
 20048  001FC6  D001               	goto	L14
 20049  001FC8                     l10650:
 20050  001FC8  90D8               	bcf	status,0,c
 20051  001FCA                     L14:
 20052  001FCA  3638               	rlcf	___fladd@grs^0,f,c
 20053  001FCC  5037               	movf	___fladd@bexp^0,w,c
 20054  001FCE  A4D8               	btfss	status,2,c
 20055  001FD0  0637               	decf	___fladd@bexp^0,f,c
 20056  001FD2                     l10656:
 20057  001FD2  AE2B               	btfss	(___fladd@b+2)^0,7,c
 20058  001FD4  D7EE               	goto	l10640
 20059  001FD6                     u8820:
 20060  001FD6  0E00               	movlw	0
 20061  001FD8  6E36               	movwf	___fladd@aexp^0,c
 20062  001FDA  AE38               	btfss	___fladd@grs^0,7,c
 20063  001FDC  D00C               	goto	l3865
 20064  001FDE  0060  F0E0  F031   	movff	___fladd@grs,??___fladd
 20065  001FE4  0E7F               	movlw	127
 20066  001FE6  1631               	andwf	??___fladd^0,f,c
 20067  001FE8  B4D8               	btfsc	status,2,c
 20068  001FEA  D003               	goto	l3866
 20069  001FEC                     u8840:
 20070  001FEC  0E01               	movlw	1
 20071  001FEE  6E36               	movwf	___fladd@aexp^0,c
 20072  001FF0  D002               	goto	l3865
 20073  001FF2                     l3866:
 20074  001FF2  B029               	btfsc	___fladd@b^0,0,c
 20075  001FF4  D7FB               	goto	u8840
 20076  001FF6                     l3865:
 20077  001FF6  5036               	movf	___fladd@aexp^0,w,c
 20078  001FF8  B4D8               	btfsc	status,2,c
 20079  001FFA  D028               	goto	l10676
 20080  001FFC  0E01               	movlw	1
 20081  001FFE  2629               	addwf	___fladd@b^0,f,c
 20082  002000  0E00               	movlw	0
 20083  002002  222A               	addwfc	(___fladd@b+1)^0,f,c
 20084  002004  222B               	addwfc	(___fladd@b+2)^0,f,c
 20085  002006  222C               	addwfc	(___fladd@b+3)^0,f,c
 20086  002008  A02C               	btfss	(___fladd@b+3)^0,0,c
 20087  00200A  D020               	goto	l10676
 20088  00200C  0060  F0A4  F031   	movff	___fladd@b,??___fladd
 20089  002012  0060  F0A8  F032   	movff	___fladd@b+1,??___fladd+1
 20090  002018  0060  F0AC  F033   	movff	___fladd@b+2,??___fladd+2
 20091  00201E  0060  F0B0  F034   	movff	___fladd@b+3,??___fladd+3
 20092  002024  3434               	rlcf	(??___fladd+3)^0,w,c
 20093  002026  3234               	rrcf	(??___fladd+3)^0,f,c
 20094  002028  3233               	rrcf	(??___fladd+2)^0,f,c
 20095  00202A  3232               	rrcf	(??___fladd+1)^0,f,c
 20096  00202C  3231               	rrcf	??___fladd^0,f,c
 20097  00202E  0060  F0C4  F029   	movff	??___fladd,___fladd@b
 20098  002034  0060  F0C8  F02A   	movff	??___fladd+1,___fladd@b+1
 20099  00203A  0060  F0CC  F02B   	movff	??___fladd+2,___fladd@b+2
 20100  002040  0060  F0D0  F02C   	movff	??___fladd+3,___fladd@b+3
 20101  002046  2837               	incf	___fladd@bexp^0,w,c
 20102  002048  A4D8               	btfss	status,2,c
 20103  00204A  2A37               	incf	___fladd@bexp^0,f,c
 20104  00204C                     l10676:
 20105  00204C  2837               	incf	___fladd@bexp^0,w,c
 20106  00204E  B4D8               	btfsc	status,2,c
 20107  002050  D003               	goto	u8900
 20108  002052  5037               	movf	___fladd@bexp^0,w,c
 20109  002054  A4D8               	btfss	status,2,c
 20110  002056  D00D               	goto	l10684
 20111  002058                     u8900:
 20112  002058  0E00               	movlw	0
 20113  00205A  6E29               	movwf	___fladd@b^0,c
 20114  00205C  0E00               	movlw	0
 20115  00205E  6E2A               	movwf	(___fladd@b+1)^0,c
 20116  002060  0E00               	movlw	0
 20117  002062  6E2B               	movwf	(___fladd@b+2)^0,c
 20118  002064  0E00               	movlw	0
 20119  002066  6E2C               	movwf	(___fladd@b+3)^0,c
 20120  002068  5037               	movf	___fladd@bexp^0,w,c
 20121  00206A  A4D8               	btfss	status,2,c
 20122  00206C  D002               	goto	l10684
 20123  00206E  0E00               	movlw	0
 20124  002070  6E35               	movwf	___fladd@signs^0,c
 20125  002072                     l10684:
 20126  002072  A037               	btfss	___fladd@bexp^0,0,c
 20127  002074  D002               	goto	l10688
 20128  002076  8E2B               	bsf	(___fladd@b+2)^0,7,c
 20129  002078  D001               	goto	l10690
 20130  00207A                     l10688:
 20131  00207A  9E2B               	bcf	(___fladd@b+2)^0,7,c
 20132  00207C                     l10690:
 20133  00207C  90D8               	bcf	status,0,c
 20134  00207E  3037               	rrcf	___fladd@bexp^0,w,c
 20135  002080  6E2C               	movwf	(___fladd@b+3)^0,c
 20136  002082  BE35               	btfsc	___fladd@signs^0,7,c
 20137  002084  8E2C               	bsf	(___fladd@b+3)^0,7,c
 20138  002086  0060  F0A4  F029   	movff	___fladd@b,?___fladd
 20139  00208C  0060  F0A8  F02A   	movff	___fladd@b+1,?___fladd+1
 20140  002092  0060  F0AC  F02B   	movff	___fladd@b+2,?___fladd+2
 20141  002098  0060  F0B0  F02C   	movff	___fladd@b+3,?___fladd+3
 20142  00209E  0012               	return		;funcret
 20143  0020A0                     __end_of___fladd:
 20144                           	opt callstack 0
 20145                           
 20146 ;; *************** function _PHY_DataInd *****************
 20147 ;; Defined at:
 20148 ;;		line 116 in file "../nwk/nwk_src/nwkRx.c"
 20149 ;; Parameters:    Size  Location     Type
 20150 ;;  ind             1   18[COMRAM] PTR struct PHY_DataInd_t
 20151 ;;		 -> DIO0_Receive_ISR@ind(5), 
 20152 ;; Auto vars:     Size  Location     Type
 20153 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 20154 ;;		 -> nwkFrameFrames(685), NULL(0), 
 20155 ;; Return value:  Size  Location     Type
 20156 ;;                  1    wreg      void 
 20157 ;; Registers used:
 20158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20159 ;; Tracked objects:
 20160 ;;		On entry : 0/0
 20161 ;;		On exit  : 0/0
 20162 ;;		Unchanged: 0/0
 20163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20164 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20165 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20166 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20167 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20168 ;;Total ram usage:        6 bytes
 20169 ;; Hardware stack levels used:    1
 20170 ;; Hardware stack levels required when called:    9
 20171 ;; This function calls:
 20172 ;;		_memcpy
 20173 ;;		_nwkFrameAlloc
 20174 ;; This function is called by:
 20175 ;;		_DIO0_Receive_ISR
 20176 ;; This function uses a non-reentrant model
 20177 ;;
 20178                           
 20179                           	psect	text124
 20180  004D44                     __ptext124:
 20181                           	opt callstack 0
 20182  004D44                     _PHY_DataInd:
 20183                           	opt callstack 17
 20184                           
 20185                           ;../nwk/nwk_src/nwkRx.c: 116: void PHY_DataInd(PHY_DataInd_t *ind);../nwk/nwk_src/nwkRx.
      +                          c: 117: {;../nwk/nwk_src/nwkRx.c: 118:   NwkFrame_t *frame;;../nwk/nwk_src/nwkRx.c: 120:
      +                             if (0x88 != ind->data[1] || (0x61 != ind->data[0] && 0x41 != ind->data[0]) ||
 20186                           
 20187                           ;incstack = 0
 20188  004D44  5013               	movf	PHY_DataInd@ind^0,w,c
 20189  004D46  6ED9               	movwf	fsr2l,c
 20190  004D48  6ADA               	clrf	fsr2h,c
 20191  004D4A  EE10 F001          	lfsr	1,1
 20192  004D4E  50DE               	movf	postinc2,w,c
 20193  004D50  26E1               	addwf	fsr1l,f,c
 20194  004D52  50DD               	movf	postdec2,w,c
 20195  004D54  22E2               	addwfc	fsr1h,f,c
 20196  004D56  0E88               	movlw	136
 20197  004D58  18E6               	xorwf	postinc1,w,c
 20198  004D5A  A4D8               	btfss	status,2,c
 20199  004D5C  0012               	return	
 20200  004D5E  5013               	movf	PHY_DataInd@ind^0,w,c
 20201  004D60  6ED9               	movwf	fsr2l,c
 20202  004D62  6ADA               	clrf	fsr2h,c
 20203  004D64  006F FF78  F014    	movff	postinc2,??_PHY_DataInd
 20204  004D6A  006F FF74  F015    	movff	postdec2,??_PHY_DataInd+1
 20205  004D70  0060  F053  FFD9   	movff	??_PHY_DataInd,fsr2l
 20206  004D76  0060  F057  FFDA   	movff	??_PHY_DataInd+1,fsr2h
 20207  004D7C  0E61               	movlw	97
 20208  004D7E  18DE               	xorwf	postinc2,w,c
 20209  004D80  B4D8               	btfsc	status,2,c
 20210  004D82  D013               	goto	u15060
 20211  004D84  5013               	movf	PHY_DataInd@ind^0,w,c
 20212  004D86  6ED9               	movwf	fsr2l,c
 20213  004D88  6ADA               	clrf	fsr2h,c
 20214  004D8A  006F FF78  F014    	movff	postinc2,??_PHY_DataInd
 20215  004D90  006F FF74  F015    	movff	postdec2,??_PHY_DataInd+1
 20216  004D96  0060  F053  FFD9   	movff	??_PHY_DataInd,fsr2l
 20217  004D9C  0060  F057  FFDA   	movff	??_PHY_DataInd+1,fsr2h
 20218  004DA2  0E41               	movlw	65
 20219  004DA4  18DE               	xorwf	postinc2,w,c
 20220  004DA6  A4D8               	btfss	status,2,c
 20221  004DA8  0012               	return	
 20222  004DAA                     u15060:
 20223  004DAA  5013               	movf	PHY_DataInd@ind^0,w,c
 20224  004DAC  6ED9               	movwf	fsr2l,c
 20225  004DAE  6ADA               	clrf	fsr2h,c
 20226  004DB0  0E02               	movlw	2
 20227  004DB2  26D9               	addwf	fsr2l,f,c
 20228  004DB4  0E10               	movlw	16
 20229  004DB6  60DF               	cpfslt	indf2,c
 20230  004DB8  D001               	goto	l15350
 20231  004DBA  0012               	return	
 20232  004DBC                     l15350:
 20233                           
 20234                           ;../nwk/nwk_src/nwkRx.c: 124:   if (((void*)0) == (frame = nwkFrameAlloc()))
 20235  004DBC  EC5C  F038         	call	_nwkFrameAlloc	;wreg free
 20236  004DC0  0060  F038  F017   	movff	?_nwkFrameAlloc,PHY_DataInd@frame
 20237  004DC6  0060  F03C  F018   	movff	?_nwkFrameAlloc+1,PHY_DataInd@frame+1
 20238  004DCC  5017               	movf	PHY_DataInd@frame^0,w,c
 20239  004DCE  1018               	iorwf	(PHY_DataInd@frame+1)^0,w,c
 20240  004DD0  B4D8               	btfsc	status,2,c
 20241  004DD2  0012               	return	
 20242                           
 20243                           ;../nwk/nwk_src/nwkRx.c: 127:   frame->state = NWK_RX_STATE_RECEIVED;
 20244  004DD4  0060  F05F  FFD9   	movff	PHY_DataInd@frame,fsr2l
 20245  004DDA  0060  F063  FFDA   	movff	PHY_DataInd@frame+1,fsr2h
 20246  004DE0  0E20               	movlw	32
 20247  004DE2  6EDF               	movwf	indf2,c
 20248                           
 20249                           ;../nwk/nwk_src/nwkRx.c: 128:   frame->size = ind->size;
 20250  004DE4  5013               	movf	PHY_DataInd@ind^0,w,c
 20251  004DE6  6ED9               	movwf	fsr2l,c
 20252  004DE8  6ADA               	clrf	fsr2h,c
 20253  004DEA  0E02               	movlw	2
 20254  004DEC  26D9               	addwf	fsr2l,f,c
 20255  004DEE  EE10 F001          	lfsr	1,1
 20256  004DF2  5017               	movf	PHY_DataInd@frame^0,w,c
 20257  004DF4  26E1               	addwf	fsr1l,f,c
 20258  004DF6  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 20259  004DF8  22E2               	addwfc	fsr1h,f,c
 20260  004DFA  006F FF7F FFE7     	movff	indf2,indf1
 20261                           
 20262                           ;../nwk/nwk_src/nwkRx.c: 129:   frame->rx.lqi = ind->lqi;
 20263  004E00  5013               	movf	PHY_DataInd@ind^0,w,c
 20264  004E02  6ED9               	movwf	fsr2l,c
 20265  004E04  6ADA               	clrf	fsr2h,c
 20266  004E06  0E03               	movlw	3
 20267  004E08  26D9               	addwf	fsr2l,f,c
 20268  004E0A  EE10 F083          	lfsr	1,131
 20269  004E0E  5017               	movf	PHY_DataInd@frame^0,w,c
 20270  004E10  26E1               	addwf	fsr1l,f,c
 20271  004E12  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 20272  004E14  22E2               	addwfc	fsr1h,f,c
 20273  004E16  006F FF7F FFE7     	movff	indf2,indf1
 20274                           
 20275                           ;../nwk/nwk_src/nwkRx.c: 130:   frame->rx.rssi = ind->rssi;
 20276  004E1C  5013               	movf	PHY_DataInd@ind^0,w,c
 20277  004E1E  6ED9               	movwf	fsr2l,c
 20278  004E20  6ADA               	clrf	fsr2h,c
 20279  004E22  0E04               	movlw	4
 20280  004E24  26D9               	addwf	fsr2l,f,c
 20281  004E26  EE10 F084          	lfsr	1,132
 20282  004E2A  5017               	movf	PHY_DataInd@frame^0,w,c
 20283  004E2C  26E1               	addwf	fsr1l,f,c
 20284  004E2E  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 20285  004E30  22E2               	addwfc	fsr1h,f,c
 20286  004E32  006F FF7F FFE7     	movff	indf2,indf1
 20287                           
 20288                           ;../nwk/nwk_src/nwkRx.c: 131:   memcpy(frame->data, ind->data, ind->size);
 20289  004E38  0E02               	movlw	2
 20290  004E3A  2417               	addwf	PHY_DataInd@frame^0,w,c
 20291  004E3C  6E08               	movwf	memcpy@d1^0,c
 20292  004E3E  0E00               	movlw	0
 20293  004E40  2018               	addwfc	(PHY_DataInd@frame+1)^0,w,c
 20294  004E42  6E09               	movwf	(memcpy@d1+1)^0,c
 20295  004E44  5013               	movf	PHY_DataInd@ind^0,w,c
 20296  004E46  6ED9               	movwf	fsr2l,c
 20297  004E48  6ADA               	clrf	fsr2h,c
 20298  004E4A  006F FF78  F00A    	movff	postinc2,memcpy@s1
 20299  004E50  006F FF74  F00B    	movff	postdec2,memcpy@s1+1
 20300  004E56  5013               	movf	PHY_DataInd@ind^0,w,c
 20301  004E58  6ED9               	movwf	fsr2l,c
 20302  004E5A  6ADA               	clrf	fsr2h,c
 20303  004E5C  0E02               	movlw	2
 20304  004E5E  26D9               	addwf	fsr2l,f,c
 20305  004E60  50DF               	movf	indf2,w,c
 20306  004E62  6E14               	movwf	??_PHY_DataInd^0,c
 20307  004E64  5014               	movf	??_PHY_DataInd^0,w,c
 20308  004E66  6E0C               	movwf	memcpy@n^0,c
 20309  004E68  6A0D               	clrf	(memcpy@n+1)^0,c
 20310  004E6A  EC95  F03F         	call	_memcpy	;wreg free
 20311  004E6E  0012               	return		;funcret
 20312  004E70                     __end_of_PHY_DataInd:
 20313                           	opt callstack 0
 20314                           
 20315 ;; *************** function _NWK_TaskHandler *****************
 20316 ;; Defined at:
 20317 ;;		line 196 in file "../nwk/nwk_src/nwk.c"
 20318 ;; Parameters:    Size  Location     Type
 20319 ;;		None
 20320 ;; Auto vars:     Size  Location     Type
 20321 ;;		None
 20322 ;; Return value:  Size  Location     Type
 20323 ;;                  1    wreg      void 
 20324 ;; Registers used:
 20325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 20326 ;; Tracked objects:
 20327 ;;		On entry : 2/3D
 20328 ;;		On exit  : 0/0
 20329 ;;		Unchanged: 0/0
 20330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20335 ;;Total ram usage:        0 bytes
 20336 ;; Hardware stack levels used:    1
 20337 ;; Hardware stack levels required when called:   14
 20338 ;; This function calls:
 20339 ;;		_nwkDataReqTaskHandler
 20340 ;;		_nwkRxTaskHandler
 20341 ;;		_nwkSecurityTaskHandler
 20342 ;;		_nwkTxTaskHandler
 20343 ;; This function is called by:
 20344 ;;		_SYS_TaskHandler
 20345 ;; This function uses a non-reentrant model
 20346 ;;
 20347                           
 20348                           	psect	text125
 20349  009872                     __ptext125:
 20350                           	opt callstack 0
 20351  009872                     _NWK_TaskHandler:
 20352                           	opt callstack 15
 20353                           
 20354                           ;../nwk/nwk_src/nwk.c: 198:   nwkRxTaskHandler();
 20355                           
 20356                           ;incstack = 0
 20357  009872  EC06  F035         	call	_nwkRxTaskHandler	;wreg free
 20358                           
 20359                           ;../nwk/nwk_src/nwk.c: 199:   nwkTxTaskHandler();
 20360  009876  EC16  F01A         	call	_nwkTxTaskHandler	;wreg free
 20361                           
 20362                           ;../nwk/nwk_src/nwk.c: 200:   nwkDataReqTaskHandler();
 20363  00987A  EC58  F03E         	call	_nwkDataReqTaskHandler	;wreg free
 20364                           
 20365                           ;../nwk/nwk_src/nwk.c: 202:   nwkSecurityTaskHandler();
 20366  00987E  EC17  F02B         	call	_nwkSecurityTaskHandler	;wreg free
 20367  009882  0012               	return		;funcret
 20368  009884                     __end_of_NWK_TaskHandler:
 20369                           	opt callstack 0
 20370                           
 20371 ;; *************** function _nwkTxTaskHandler *****************
 20372 ;; Defined at:
 20373 ;;		line 297 in file "../nwk/nwk_src/nwkTx.c"
 20374 ;; Parameters:    Size  Location     Type
 20375 ;;		None
 20376 ;; Auto vars:     Size  Location     Type
 20377 ;;  frame           2   21[COMRAM] PTR struct NwkFrame_t
 20378 ;;		 -> nwkFrameFrames(685), NULL(0), 
 20379 ;; Return value:  Size  Location     Type
 20380 ;;                  1    wreg      void 
 20381 ;; Registers used:
 20382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 20383 ;; Tracked objects:
 20384 ;;		On entry : 0/3D
 20385 ;;		On exit  : 0/0
 20386 ;;		Unchanged: 0/0
 20387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20389 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20390 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20391 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20392 ;;Total ram usage:        4 bytes
 20393 ;; Hardware stack levels used:    1
 20394 ;; Hardware stack levels required when called:   13
 20395 ;; This function calls:
 20396 ;;		_PHY_DataReq
 20397 ;;		_SYS_TimerStart
 20398 ;;		_nwkDataReqTxConf
 20399 ;;		_nwkFrameFree
 20400 ;;		_nwkFrameNext
 20401 ;;		_nwkRouteFrameSent
 20402 ;;		_nwkSecurityProcess
 20403 ;; This function is called by:
 20404 ;;		_NWK_TaskHandler
 20405 ;; This function uses a non-reentrant model
 20406 ;;
 20407                           
 20408                           	psect	text126
 20409  00342C                     __ptext126:
 20410                           	opt callstack 0
 20411  00342C                     _nwkTxTaskHandler:
 20412                           	opt callstack 15
 20413                           
 20414                           ;../nwk/nwk_src/nwkTx.c: 299:   NwkFrame_t *frame = ((void*)0);
 20415                           
 20416                           ;incstack = 0
 20417  00342C  0E00               	movlw	0
 20418  00342E  6E16               	movwf	nwkTxTaskHandler@frame^0,c
 20419  003430  0E00               	movlw	0
 20420  003432  6E17               	movwf	(nwkTxTaskHandler@frame+1)^0,c
 20421                           
 20422                           ;../nwk/nwk_src/nwkTx.c: 301:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 20423  003434  D0EF               	goto	l16820
 20424  003436                     l16772:
 20425                           
 20426                           ;../nwk/nwk_src/nwkTx.c: 307:       {;../nwk/nwk_src/nwkTx.c: 308:         nwkSecurityPr
      +                          ocess(frame, 1);
 20427  003436  0060  F058  F002   	movff	nwkTxTaskHandler@frame,nwkSecurityProcess@frame
 20428  00343C  0060  F05C  F003   	movff	nwkTxTaskHandler@frame+1,nwkSecurityProcess@frame+1
 20429  003442  0E01               	movlw	1
 20430  003444  6E04               	movwf	nwkSecurityProcess@encrypt^0,c
 20431  003446  EC5E  F049         	call	_nwkSecurityProcess	;wreg free
 20432                           
 20433                           ;../nwk/nwk_src/nwkTx.c: 309:       } break;
 20434  00344A  D0E4               	goto	l16820
 20435  00344C                     l16774:
 20436                           
 20437                           ;../nwk/nwk_src/nwkTx.c: 313:       {;../nwk/nwk_src/nwkTx.c: 314:         if (frame->tx
      +                          .timeout > 0)
 20438  00344C  EE20 F084          	lfsr	2,132
 20439  003450  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20440  003452  26D9               	addwf	fsr2l,f,c
 20441  003454  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20442  003456  22DA               	addwfc	fsr2h,f,c
 20443  003458  50DE               	movf	postinc2,w,c
 20444  00345A  10DE               	iorwf	postinc2,w,c
 20445  00345C  B4D8               	btfsc	status,2,c
 20446  00345E  D00F               	goto	l16780
 20447                           
 20448                           ;../nwk/nwk_src/nwkTx.c: 315:         {;../nwk/nwk_src/nwkTx.c: 316:           frame->st
      +                          ate = NWK_TX_STATE_WAIT_DELAY;
 20449  003460  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 20450  003466  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 20451  00346C  0E11               	movlw	17
 20452  00346E  6EDF               	movwf	indf2,c
 20453                           
 20454                           ;../nwk/nwk_src/nwkTx.c: 317:           SYS_TimerStart(&nwkTxDelayTimer);
 20455  003470  0E89               	movlw	low _nwkTxDelayTimer
 20456  003472  6E10               	movwf	SYS_TimerStart@timer^0,c
 20457  003474  0E01               	movlw	high _nwkTxDelayTimer
 20458  003476  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 20459  003478  ECDC  F049         	call	_SYS_TimerStart	;wreg free
 20460                           
 20461                           ;../nwk/nwk_src/nwkTx.c: 318:         }
 20462  00347C  D0CB               	goto	l16820
 20463  00347E                     l16780:
 20464                           
 20465                           ;../nwk/nwk_src/nwkTx.c: 320:         {;../nwk/nwk_src/nwkTx.c: 321:           frame->st
      +                          ate = NWK_TX_STATE_SEND;
 20466  00347E  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 20467  003484  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 20468  00348A  0E13               	movlw	19
 20469  00348C  D066               	goto	L16
 20470  00348E                     l16782:
 20471                           
 20472                           ;../nwk/nwk_src/nwkTx.c: 326:       {;../nwk/nwk_src/nwkTx.c: 327:         if (((void*)0
      +                          ) == nwkTxPhyActiveFrame)
 20473  00348E  0100               	movlb	0	; () banked
 20474  003490  51BD               	movf	_nwkTxPhyActiveFrame& (0+255),w,b
 20475  003492  11BE               	iorwf	(_nwkTxPhyActiveFrame+1)& (0+255),w,b
 20476  003494  A4D8               	btfss	status,2,c
 20477  003496  D0BE               	goto	l16820
 20478                           
 20479                           ; BSR set to: 0
 20480                           ;../nwk/nwk_src/nwkTx.c: 328:         {;../nwk/nwk_src/nwkTx.c: 329:           nwkTxPhyA
      +                          ctiveFrame = frame;
 20481  003498  0060  F058  F0BD   	movff	nwkTxTaskHandler@frame,_nwkTxPhyActiveFrame
 20482  00349E  0060  F05C  F0BE   	movff	nwkTxTaskHandler@frame+1,_nwkTxPhyActiveFrame+1
 20483                           
 20484                           ; BSR set to: 0
 20485                           ;../nwk/nwk_src/nwkTx.c: 330:           frame->state = NWK_TX_STATE_WAIT_CONF;
 20486  0034A4  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 20487  0034AA  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 20488  0034B0  0E14               	movlw	20
 20489  0034B2  6EDF               	movwf	indf2,c
 20490                           
 20491                           ; BSR set to: 0
 20492                           ;../nwk/nwk_src/nwkTx.c: 331:           PHY_DataReq(frame->data, frame->size);
 20493  0034B4  0E02               	movlw	2
 20494  0034B6  2416               	addwf	nwkTxTaskHandler@frame^0,w,c
 20495  0034B8  6E11               	movwf	PHY_DataReq@data^0,c
 20496  0034BA  0E00               	movlw	0
 20497  0034BC  2017               	addwfc	(nwkTxTaskHandler@frame+1)^0,w,c
 20498  0034BE  6E12               	movwf	(PHY_DataReq@data+1)^0,c
 20499  0034C0  EE20 F001          	lfsr	2,1
 20500  0034C4  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20501  0034C6  26D9               	addwf	fsr2l,f,c
 20502  0034C8  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20503  0034CA  22DA               	addwfc	fsr2h,f,c
 20504  0034CC  50DF               	movf	indf2,w,c
 20505  0034CE  6E13               	movwf	PHY_DataReq@size^0,c
 20506  0034D0  EC8B  F042         	call	_PHY_DataReq	;wreg free
 20507                           
 20508                           ; BSR set to: 0
 20509                           ;../nwk/nwk_src/nwkTx.c: 332:           nwkIb.lock++;
 20510  0034D4  0101               	movlb	1	; () banked
 20511  0034D6  4B67               	infsnz	(_nwkIb+54)& (0+255),f,b
 20512  0034D8  2B68               	incf	(_nwkIb+55)& (0+255),f,b
 20513  0034DA  D09C               	goto	l16820
 20514  0034DC                     l16792:
 20515                           
 20516                           ;../nwk/nwk_src/nwkTx.c: 340:       {;../nwk/nwk_src/nwkTx.c: 341:         if (NWK_SUCCE
      +                          SS_STATUS == frame->tx.status)
 20517  0034DC  EE20 F083          	lfsr	2,131
 20518  0034E0  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20519  0034E2  26D9               	addwf	fsr2l,f,c
 20520  0034E4  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20521  0034E6  22DA               	addwfc	fsr2h,f,c
 20522  0034E8  50DF               	movf	indf2,w,c
 20523  0034EA  A4D8               	btfss	status,2,c
 20524  0034EC  D02F               	goto	l16804
 20525                           
 20526                           ;../nwk/nwk_src/nwkTx.c: 342:         {;../nwk/nwk_src/nwkTx.c: 343:           if (frame
      +                          ->header.nwkSrcAddr == nwkIb.addr && frame->header.nwkFcf.ackRequest)
 20527  0034EE  EE20 F00D          	lfsr	2,13
 20528  0034F2  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20529  0034F4  26D9               	addwf	fsr2l,f,c
 20530  0034F6  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20531  0034F8  22DA               	addwfc	fsr2h,f,c
 20532  0034FA  0101               	movlb	1	; () banked
 20533  0034FC  5131               	movf	_nwkIb& (0+255),w,b
 20534  0034FE  18DE               	xorwf	postinc2,w,c
 20535  003500  E125               	bnz	l16806
 20536  003502  5132               	movf	(_nwkIb+1)& (0+255),w,b
 20537  003504  18DE               	xorwf	postinc2,w,c
 20538  003506  A4D8               	btfss	status,2,c
 20539  003508  D021               	goto	l16804
 20540                           
 20541                           ; BSR set to: 1
 20542  00350A  EE20 F00B          	lfsr	2,11
 20543  00350E  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20544  003510  26D9               	addwf	fsr2l,f,c
 20545  003512  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20546  003514  22DA               	addwfc	fsr2h,f,c
 20547  003516  A0DF               	btfss	indf2,0,c
 20548  003518  D019               	goto	l16804
 20549                           
 20550                           ; BSR set to: 1
 20551                           ;../nwk/nwk_src/nwkTx.c: 344:           {;../nwk/nwk_src/nwkTx.c: 345:             frame
      +                          ->state = NWK_TX_STATE_WAIT_ACK;
 20552  00351A  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 20553  003520  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 20554  003526  0E16               	movlw	22
 20555  003528  6EDF               	movwf	indf2,c
 20556                           
 20557                           ; BSR set to: 1
 20558                           ;../nwk/nwk_src/nwkTx.c: 346:             frame->tx.timeout = 1000 / 200 + 1;
 20559  00352A  EE20 F084          	lfsr	2,132
 20560  00352E  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20561  003530  26D9               	addwf	fsr2l,f,c
 20562  003532  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20563  003534  22DA               	addwfc	fsr2h,f,c
 20564  003536  0E06               	movlw	6
 20565  003538  6EDE               	movwf	postinc2,c
 20566  00353A  0E00               	movlw	0
 20567  00353C  6EDD               	movwf	postdec2,c
 20568                           
 20569                           ; BSR set to: 1
 20570                           ;../nwk/nwk_src/nwkTx.c: 347:             SYS_TimerStart(&nwkTxAckWaitTimer);
 20571  00353E  0E96               	movlw	low _nwkTxAckWaitTimer
 20572  003540  6E10               	movwf	SYS_TimerStart@timer^0,c
 20573  003542  0E01               	movlw	high _nwkTxAckWaitTimer
 20574  003544  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 20575  003546  ECDC  F049         	call	_SYS_TimerStart	;wreg free
 20576                           
 20577                           ;../nwk/nwk_src/nwkTx.c: 348:           }
 20578  00354A  D064               	goto	l16820
 20579  00354C                     l16804:
 20580  00354C                     l16806:
 20581                           
 20582                           ;../nwk/nwk_src/nwkTx.c: 355:         {;../nwk/nwk_src/nwkTx.c: 356:           frame->st
      +                          ate = NWK_TX_STATE_CONFIRM;
 20583  00354C  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 20584  003552  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 20585  003558  0E17               	movlw	23
 20586  00355A                     L16:
 20587  00355A  6EDF               	movwf	indf2,c
 20588  00355C  D05B               	goto	l16820
 20589  00355E                     l16808:
 20590                           
 20591                           ;../nwk/nwk_src/nwkTx.c: 364:       {;../nwk/nwk_src/nwkTx.c: 366:         nwkRouteFrame
      +                          Sent(frame);
 20592  00355E  0060  F058  F008   	movff	nwkTxTaskHandler@frame,nwkRouteFrameSent@frame
 20593  003564  0060  F05C  F009   	movff	nwkTxTaskHandler@frame+1,nwkRouteFrameSent@frame+1
 20594  00356A  EC05  F02F         	call	_nwkRouteFrameSent	;wreg free
 20595                           
 20596                           ;../nwk/nwk_src/nwkTx.c: 368:         if (((void*)0) == frame->tx.confirm)
 20597  00356E  EE20 F087          	lfsr	2,135
 20598  003572  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20599  003574  26D9               	addwf	fsr2l,f,c
 20600  003576  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20601  003578  22DA               	addwfc	fsr2h,f,c
 20602  00357A  50DE               	movf	postinc2,w,c
 20603  00357C  10DE               	iorwf	postinc2,w,c
 20604  00357E  A4D8               	btfss	status,2,c
 20605  003580  D009               	goto	l16814
 20606                           
 20607                           ;../nwk/nwk_src/nwkTx.c: 369:           nwkFrameFree(frame);
 20608  003582  0060  F058  F002   	movff	nwkTxTaskHandler@frame,nwkFrameFree@frame
 20609  003588  0060  F05C  F003   	movff	nwkTxTaskHandler@frame+1,nwkFrameFree@frame+1
 20610  00358E  EC8F  F04B         	call	_nwkFrameFree	;wreg free
 20611  003592  D040               	goto	l16820
 20612  003594                     l16814:
 20613                           
 20614                           ;../nwk/nwk_src/nwkTx.c: 371:           frame->tx.confirm(frame);
 20615  003594  0060  F058  F004   	movff	nwkTxTaskHandler@frame,nwkDataReqTxConf@frame
 20616  00359A  0060  F05C  F005   	movff	nwkTxTaskHandler@frame+1,nwkDataReqTxConf@frame+1
 20617  0035A0  EE20 F087          	lfsr	2,135
 20618  0035A4  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20619  0035A6  26D9               	addwf	fsr2l,f,c
 20620  0035A8  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20621  0035AA  22DA               	addwfc	fsr2h,f,c
 20622  0035AC  006F FF78  F014    	movff	postinc2,??_nwkTxTaskHandler
 20623  0035B2  006F FF74  F015    	movff	postdec2,??_nwkTxTaskHandler+1
 20624  0035B8  D801               	call	u17128
 20625  0035BA  D02C               	goto	l16820
 20626  0035BC                     u17128:
 20627  0035BC  0005               	push	
 20628  0035BE  6EFA               	movwf	pclath,c
 20629  0035C0  5014               	movf	??_nwkTxTaskHandler^0,w,c
 20630  0035C2  6EFD               	movwf	tosl,c
 20631  0035C4  5015               	movf	(??_nwkTxTaskHandler+1)^0,w,c
 20632  0035C6  6EFE               	movwf	tosh,c
 20633  0035C8  6AFF               	clrf	tosu,c
 20634  0035CA  50FA               	movf	pclath,w,c
 20635  0035CC  0012               	return		;indir
 20636  0035CE                     l16818:
 20637  0035CE  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 20638  0035D4  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 20639  0035DA  50DF               	movf	indf2,w,c
 20640  0035DC  6E14               	movwf	??_nwkTxTaskHandler^0,c
 20641  0035DE  6A15               	clrf	(??_nwkTxTaskHandler+1)^0,c
 20642                           
 20643                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20644                           ; Switch size 1, requested type "simple"
 20645                           ; Number of cases is 1, Range of values is 0 to 0
 20646                           ; switch strategies available:
 20647                           ; Name         Instructions Cycles
 20648                           ; simple_byte            4     3 (average)
 20649                           ;	Chosen strategy is simple_byte
 20650  0035E0  5015               	movf	(??_nwkTxTaskHandler+1)^0,w,c
 20651  0035E2  0A00               	xorlw	0	; case 0
 20652  0035E4  A4D8               	btfss	status,2,c
 20653  0035E6  D016               	goto	l16820
 20654                           
 20655                           ; Switch size 1, requested type "simple"
 20656                           ; Number of cases is 7, Range of values is 16 to 23
 20657                           ; switch strategies available:
 20658                           ; Name         Instructions Cycles
 20659                           ; simple_byte           22    12 (average)
 20660                           ;	Chosen strategy is simple_byte
 20661  0035E8  5014               	movf	??_nwkTxTaskHandler^0,w,c
 20662  0035EA  0A10               	xorlw	16	; case 16
 20663  0035EC  B4D8               	btfsc	status,2,c
 20664  0035EE  D723               	goto	l16772
 20665  0035F0  0A02               	xorlw	2	; case 18
 20666  0035F2  B4D8               	btfsc	status,2,c
 20667  0035F4  D72B               	goto	l16774
 20668  0035F6  0A01               	xorlw	1	; case 19
 20669  0035F8  B4D8               	btfsc	status,2,c
 20670  0035FA  D749               	goto	l16782
 20671  0035FC  0A07               	xorlw	7	; case 20
 20672  0035FE  B4D8               	btfsc	status,2,c
 20673  003600  D009               	goto	l16820
 20674  003602  0A01               	xorlw	1	; case 21
 20675  003604  B4D8               	btfsc	status,2,c
 20676  003606  D76A               	goto	l16792
 20677  003608  0A03               	xorlw	3	; case 22
 20678  00360A  B4D8               	btfsc	status,2,c
 20679  00360C  D003               	goto	l16820
 20680  00360E  0A01               	xorlw	1	; case 23
 20681  003610  B4D8               	btfsc	status,2,c
 20682  003612  D7A5               	goto	l16808
 20683  003614                     l16820:
 20684                           
 20685                           ;../nwk/nwk_src/nwkTx.c: 301:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 20686  003614  0060  F058  F002   	movff	nwkTxTaskHandler@frame,nwkFrameNext@frame
 20687  00361A  0060  F05C  F003   	movff	nwkTxTaskHandler@frame+1,nwkFrameNext@frame+1
 20688  003620  EC06  F03D         	call	_nwkFrameNext	;wreg free
 20689  003624  0060  F008  F016   	movff	?_nwkFrameNext,nwkTxTaskHandler@frame
 20690  00362A  0060  F00C  F017   	movff	?_nwkFrameNext+1,nwkTxTaskHandler@frame+1
 20691  003630  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20692  003632  1017               	iorwf	(nwkTxTaskHandler@frame+1)^0,w,c
 20693  003634  B4D8               	btfsc	status,2,c
 20694  003636  0012               	return	
 20695  003638  D7CA               	goto	l16818
 20696  00363A                     __end_of_nwkTxTaskHandler:
 20697                           	opt callstack 0
 20698                           
 20699 ;; *************** function _nwkRouteFrameSent *****************
 20700 ;; Defined at:
 20701 ;;		line 236 in file "../nwk/nwk_src/nwkRoute.c"
 20702 ;; Parameters:    Size  Location     Type
 20703 ;;  frame           2    7[COMRAM] PTR struct NwkFrame_t
 20704 ;;		 -> nwkFrameFrames(685), NULL(0), 
 20705 ;; Auto vars:     Size  Location     Type
 20706 ;;  entry           2   11[COMRAM] PTR struct NWK_RouteTabl
 20707 ;;		 -> nwkRouteTable(70), NULL(0), 
 20708 ;; Return value:  Size  Location     Type
 20709 ;;                  1    wreg      void 
 20710 ;; Registers used:
 20711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20712 ;; Tracked objects:
 20713 ;;		On entry : 0/3D
 20714 ;;		On exit  : 0/0
 20715 ;;		Unchanged: 0/0
 20716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20719 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20720 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20721 ;;Total ram usage:        6 bytes
 20722 ;; Hardware stack levels used:    1
 20723 ;; Hardware stack levels required when called:    8
 20724 ;; This function calls:
 20725 ;;		_NWK_RouteFindEntry
 20726 ;;		_NWK_RouteFreeEntry
 20727 ;;		_nwkRouteNormalizeRanks
 20728 ;; This function is called by:
 20729 ;;		_nwkTxTaskHandler
 20730 ;; This function uses a non-reentrant model
 20731 ;;
 20732                           
 20733                           	psect	text127
 20734  005E0A                     __ptext127:
 20735                           	opt callstack 0
 20736  005E0A                     _nwkRouteFrameSent:
 20737                           	opt callstack 19
 20738                           
 20739                           ;../nwk/nwk_src/nwkRoute.c: 236: void nwkRouteFrameSent(NwkFrame_t *frame);../nwk/nwk_sr
      +                          c/nwkRoute.c: 237: {;../nwk/nwk_src/nwkRoute.c: 238:   NWK_RouteTableEntry_t *entry;;../
      +                          nwk/nwk_src/nwkRoute.c: 240:   if (0xffff == frame->header.nwkDstAddr)
 20740                           
 20741                           ;incstack = 0
 20742  005E0A  EE20 F00F          	lfsr	2,15
 20743  005E0E  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 20744  005E10  26D9               	addwf	fsr2l,f,c
 20745  005E12  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 20746  005E14  22DA               	addwfc	fsr2h,f,c
 20747  005E16  28DE               	incf	postinc2,w,c
 20748  005E18  E103               	bnz	l12006
 20749  005E1A  28DE               	incf	postinc2,w,c
 20750  005E1C  B4D8               	btfsc	status,2,c
 20751  005E1E  0012               	return	
 20752  005E20                     l12006:
 20753                           
 20754                           ;../nwk/nwk_src/nwkRoute.c: 243:   entry = NWK_RouteFindEntry(frame->header.nwkDstAddr, 
      +                          frame->header.nwkFcf.multicast);
 20755  005E20  EE20 F00F          	lfsr	2,15
 20756  005E24  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 20757  005E26  26D9               	addwf	fsr2l,f,c
 20758  005E28  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 20759  005E2A  22DA               	addwfc	fsr2h,f,c
 20760  005E2C  006F FF78  F002    	movff	postinc2,NWK_RouteFindEntry@dst
 20761  005E32  006F FF74  F003    	movff	postdec2,NWK_RouteFindEntry@dst+1
 20762  005E38  EE20 F00B          	lfsr	2,11
 20763  005E3C  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 20764  005E3E  26D9               	addwf	fsr2l,f,c
 20765  005E40  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 20766  005E42  22DA               	addwfc	fsr2h,f,c
 20767  005E44  0E00               	movlw	0
 20768  005E46  B6DF               	btfsc	indf2,3,c
 20769  005E48  0E01               	movlw	1
 20770  005E4A  6E04               	movwf	NWK_RouteFindEntry@multicast^0,c
 20771  005E4C  ECA7  F040         	call	_NWK_RouteFindEntry	;wreg free
 20772  005E50  0060  F008  F00C   	movff	?_NWK_RouteFindEntry,nwkRouteFrameSent@entry
 20773  005E56  0060  F00C  F00D   	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameSent@entry+1
 20774                           
 20775                           ;../nwk/nwk_src/nwkRoute.c: 245:   if (((void*)0) == entry || entry->fixed)
 20776  005E5C  500C               	movf	nwkRouteFrameSent@entry^0,w,c
 20777  005E5E  100D               	iorwf	(nwkRouteFrameSent@entry+1)^0,w,c
 20778  005E60  B4D8               	btfsc	status,2,c
 20779  005E62  0012               	return	
 20780  005E64  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 20781  005E6A  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 20782  005E70  B0DF               	btfsc	indf2,0,c
 20783  005E72  0012               	return	
 20784                           
 20785                           ;../nwk/nwk_src/nwkRoute.c: 248:   if (NWK_SUCCESS_STATUS == frame->tx.status)
 20786  005E74  EE20 F083          	lfsr	2,131
 20787  005E78  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 20788  005E7A  26D9               	addwf	fsr2l,f,c
 20789  005E7C  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 20790  005E7E  22DA               	addwfc	fsr2h,f,c
 20791  005E80  50DF               	movf	indf2,w,c
 20792  005E82  A4D8               	btfss	status,2,c
 20793  005E84  D017               	goto	l12020
 20794                           
 20795                           ;../nwk/nwk_src/nwkRoute.c: 249:   {;../nwk/nwk_src/nwkRoute.c: 250:     entry->score = 
      +                          3;
 20796  005E86  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 20797  005E8C  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 20798  005E92  50DF               	movf	indf2,w,c
 20799  005E94  0B0F               	andlw	-241
 20800  005E96  0930               	iorlw	48
 20801  005E98  6EDF               	movwf	indf2,c
 20802                           
 20803                           ;../nwk/nwk_src/nwkRoute.c: 252:     if (255 == ++entry->rank)
 20804  005E9A  EE20 F005          	lfsr	2,5
 20805  005E9E  500C               	movf	nwkRouteFrameSent@entry^0,w,c
 20806  005EA0  26D9               	addwf	fsr2l,f,c
 20807  005EA2  500D               	movf	(nwkRouteFrameSent@entry+1)^0,w,c
 20808  005EA4  22DA               	addwfc	fsr2h,f,c
 20809  005EA6  2ADF               	incf	indf2,f,c
 20810  005EA8  28DE               	incf	postinc2,w,c
 20811  005EAA  A4D8               	btfss	status,2,c
 20812  005EAC  0012               	return	
 20813                           
 20814                           ;../nwk/nwk_src/nwkRoute.c: 253:       nwkRouteNormalizeRanks();
 20815  005EAE  ECB7  F047         	call	_nwkRouteNormalizeRanks	;wreg free
 20816  005EB2  0012               	return	
 20817  005EB4                     l12020:
 20818                           
 20819                           ;../nwk/nwk_src/nwkRoute.c: 256:   {;../nwk/nwk_src/nwkRoute.c: 257:     if (0 == --entr
      +                          y->score)
 20820  005EB4  0E01               	movlw	1
 20821  005EB6  6E0A               	movwf	??_nwkRouteFrameSent^0,c
 20822  005EB8  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 20823  005EBE  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 20824  005EC4  38DF               	swapf	indf2,w,c
 20825  005EC6  0B0F               	andlw	15
 20826  005EC8  6E0B               	movwf	(??_nwkRouteFrameSent+1)^0,c
 20827  005ECA  500A               	movf	??_nwkRouteFrameSent^0,w,c
 20828  005ECC  5E0B               	subwf	(??_nwkRouteFrameSent+1)^0,f,c
 20829  005ECE  3A0B               	swapf	(??_nwkRouteFrameSent+1)^0,f,c
 20830  005ED0  50DF               	movf	indf2,w,c
 20831  005ED2  180B               	xorwf	(??_nwkRouteFrameSent+1)^0,w,c
 20832  005ED4  0B0F               	andlw	-241
 20833  005ED6  180B               	xorwf	(??_nwkRouteFrameSent+1)^0,w,c
 20834  005ED8  6EDF               	movwf	indf2,c
 20835  005EDA  38DF               	swapf	indf2,w,c
 20836  005EDC  0B0F               	andlw	15
 20837  005EDE  0900               	iorlw	0
 20838  005EE0  A4D8               	btfss	status,2,c
 20839  005EE2  0012               	return	
 20840                           
 20841                           ;../nwk/nwk_src/nwkRoute.c: 258:       NWK_RouteFreeEntry(entry);
 20842  005EE4  0060  F030  F002   	movff	nwkRouteFrameSent@entry,NWK_RouteFreeEntry@entry
 20843  005EEA  0060  F034  F003   	movff	nwkRouteFrameSent@entry+1,NWK_RouteFreeEntry@entry+1
 20844  005EF0  EC43  F048         	call	_NWK_RouteFreeEntry	;wreg free
 20845  005EF4  0012               	return		;funcret
 20846  005EF6                     __end_of_nwkRouteFrameSent:
 20847                           	opt callstack 0
 20848                           
 20849 ;; *************** function _nwkRouteNormalizeRanks *****************
 20850 ;; Defined at:
 20851 ;;		line 358 in file "../nwk/nwk_src/nwkRoute.c"
 20852 ;; Parameters:    Size  Location     Type
 20853 ;;		None
 20854 ;; Auto vars:     Size  Location     Type
 20855 ;;  i               1    2[COMRAM] unsigned char 
 20856 ;; Return value:  Size  Location     Type
 20857 ;;                  1    wreg      void 
 20858 ;; Registers used:
 20859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20860 ;; Tracked objects:
 20861 ;;		On entry : 0/3D
 20862 ;;		On exit  : 0/0
 20863 ;;		Unchanged: 0/0
 20864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20866 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20867 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20868 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20869 ;;Total ram usage:        2 bytes
 20870 ;; Hardware stack levels used:    1
 20871 ;; Hardware stack levels required when called:    7
 20872 ;; This function calls:
 20873 ;;		Nothing
 20874 ;; This function is called by:
 20875 ;;		_nwkRouteFrameSent
 20876 ;; This function uses a non-reentrant model
 20877 ;;
 20878                           
 20879                           	psect	text128
 20880  008F6E                     __ptext128:
 20881                           	opt callstack 0
 20882  008F6E                     _nwkRouteNormalizeRanks:
 20883                           	opt callstack 19
 20884                           
 20885                           ;../nwk/nwk_src/nwkRoute.c: 360:   for (uint8_t i = 0; i < 10; i++)
 20886                           
 20887                           ;incstack = 0
 20888  008F6E  0E00               	movlw	0
 20889  008F70  6E03               	movwf	nwkRouteNormalizeRanks@i^0,c
 20890  008F72                     l11074:
 20891                           
 20892                           ;../nwk/nwk_src/nwkRoute.c: 361:     nwkRouteTable[i].rank = (nwkRouteTable[i].rank >> 1
      +                          ) + 1;
 20893  008F72  5003               	movf	nwkRouteNormalizeRanks@i^0,w,c
 20894  008F74  0D07               	mullw	7
 20895  008F76  0E79               	movlw	low (_nwkRouteTable+5)
 20896  008F78  24F3               	addwf	243,w,c
 20897  008F7A  6ED9               	movwf	fsr2l,c
 20898  008F7C  0E02               	movlw	high (_nwkRouteTable+5)
 20899  008F7E  20F4               	addwfc	prodh,w,c
 20900  008F80  6EDA               	movwf	fsr2h,c
 20901  008F82  5003               	movf	nwkRouteNormalizeRanks@i^0,w,c
 20902  008F84  0D07               	mullw	7
 20903  008F86  0E79               	movlw	low (_nwkRouteTable+5)
 20904  008F88  24F3               	addwf	243,w,c
 20905  008F8A  6EE1               	movwf	fsr1l,c
 20906  008F8C  0E02               	movlw	high (_nwkRouteTable+5)
 20907  008F8E  20F4               	addwfc	prodh,w,c
 20908  008F90  6EE2               	movwf	fsr1h,c
 20909  008F92  50E7               	movf	indf1,w,c
 20910  008F94  6E02               	movwf	??_nwkRouteNormalizeRanks^0,c
 20911  008F96  90D8               	bcf	status,0,c
 20912  008F98  3202               	rrcf	??_nwkRouteNormalizeRanks^0,f,c
 20913  008F9A  2802               	incf	??_nwkRouteNormalizeRanks^0,w,c
 20914  008F9C  6EDF               	movwf	indf2,c
 20915  008F9E  2A03               	incf	nwkRouteNormalizeRanks@i^0,f,c
 20916  008FA0  0E09               	movlw	9
 20917  008FA2  6403               	cpfsgt	nwkRouteNormalizeRanks@i^0,c
 20918  008FA4  D7E6               	goto	l11074
 20919  008FA6  0012               	return	
 20920  008FA8                     __end_of_nwkRouteNormalizeRanks:
 20921                           	opt callstack 0
 20922                           
 20923 ;; *************** function _nwkDataReqTxConf *****************
 20924 ;; Defined at:
 20925 ;;		line 168 in file "../nwk/nwk_src/nwkDataReq.c"
 20926 ;; Parameters:    Size  Location     Type
 20927 ;;  frame           2    3[COMRAM] PTR struct NwkFrame_t
 20928 ;;		 -> nwkFrameFrames(685), NULL(0), 
 20929 ;; Auto vars:     Size  Location     Type
 20930 ;;  req             2    7[COMRAM] PTR struct NWK_DataReq_t
 20931 ;;		 -> NULL(0), tx_buffer.nwkDataReq(22), tx_buffer(524), 
 20932 ;; Return value:  Size  Location     Type
 20933 ;;                  1    wreg      void 
 20934 ;; Registers used:
 20935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20936 ;; Tracked objects:
 20937 ;;		On entry : 0/3D
 20938 ;;		On exit  : 3F/1
 20939 ;;		Unchanged: 0/0
 20940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20942 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20943 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20944 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20945 ;;Total ram usage:        6 bytes
 20946 ;; Hardware stack levels used:    1
 20947 ;; Hardware stack levels required when called:    8
 20948 ;; This function calls:
 20949 ;;		_nwkFrameFree
 20950 ;; This function is called by:
 20951 ;;		_nwkDataReqSendFrame
 20952 ;;		_nwkTxTaskHandler
 20953 ;; This function uses a non-reentrant model
 20954 ;;
 20955                           
 20956                           	psect	text129
 20957  00737E                     __ptext129:
 20958                           	opt callstack 0
 20959  00737E                     _nwkDataReqTxConf:
 20960                           	opt callstack 19
 20961                           
 20962                           ;../nwk/nwk_src/nwkDataReq.c: 168: static void nwkDataReqTxConf(NwkFrame_t *frame);../nw
      +                          k/nwk_src/nwkDataReq.c: 169: {;../nwk/nwk_src/nwkDataReq.c: 170:   for (NWK_DataReq_t *r
      +                          eq = nwkDataReqQueue; req; req = req->next)
 20963                           
 20964                           ;incstack = 0
 20965  00737E  0060  F304  F008   	movff	_nwkDataReqQueue,nwkDataReqTxConf@req
 20966  007384  0060  F308  F009   	movff	_nwkDataReqQueue+1,nwkDataReqTxConf@req+1
 20967  00738A  D040               	goto	l11982
 20968  00738C                     l11974:
 20969                           
 20970                           ;../nwk/nwk_src/nwkDataReq.c: 171:   {;../nwk/nwk_src/nwkDataReq.c: 172:     if (req->fr
      +                          ame == frame)
 20971  00738C  EE20 F002          	lfsr	2,2
 20972  007390  5008               	movf	nwkDataReqTxConf@req^0,w,c
 20973  007392  26D9               	addwf	fsr2l,f,c
 20974  007394  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 20975  007396  22DA               	addwfc	fsr2h,f,c
 20976  007398  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 20977  00739A  18DE               	xorwf	postinc2,w,c
 20978  00739C  E12B               	bnz	l11980
 20979  00739E  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 20980  0073A0  18DE               	xorwf	postinc2,w,c
 20981  0073A2  A4D8               	btfss	status,2,c
 20982  0073A4  D027               	goto	l11980
 20983                           
 20984                           ;../nwk/nwk_src/nwkDataReq.c: 173:     {;../nwk/nwk_src/nwkDataReq.c: 174:       req->st
      +                          atus = frame->tx.status;
 20985  0073A6  EE20 F083          	lfsr	2,131
 20986  0073AA  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 20987  0073AC  26D9               	addwf	fsr2l,f,c
 20988  0073AE  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 20989  0073B0  22DA               	addwfc	fsr2h,f,c
 20990  0073B2  EE10 F011          	lfsr	1,17
 20991  0073B6  5008               	movf	nwkDataReqTxConf@req^0,w,c
 20992  0073B8  26E1               	addwf	fsr1l,f,c
 20993  0073BA  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 20994  0073BC  22E2               	addwfc	fsr1h,f,c
 20995  0073BE  006F FF7F FFE7     	movff	indf2,indf1
 20996                           
 20997                           ;../nwk/nwk_src/nwkDataReq.c: 175:       req->control = frame->tx.control;
 20998  0073C4  EE20 F086          	lfsr	2,134
 20999  0073C8  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 21000  0073CA  26D9               	addwf	fsr2l,f,c
 21001  0073CC  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 21002  0073CE  22DA               	addwfc	fsr2h,f,c
 21003  0073D0  EE10 F012          	lfsr	1,18
 21004  0073D4  5008               	movf	nwkDataReqTxConf@req^0,w,c
 21005  0073D6  26E1               	addwf	fsr1l,f,c
 21006  0073D8  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 21007  0073DA  22E2               	addwfc	fsr1h,f,c
 21008  0073DC  006F FF7F FFE7     	movff	indf2,indf1
 21009                           
 21010                           ;../nwk/nwk_src/nwkDataReq.c: 176:       req->state = NWK_DATA_REQ_STATE_CONFIRM;
 21011  0073E2  EE20 F004          	lfsr	2,4
 21012  0073E6  5008               	movf	nwkDataReqTxConf@req^0,w,c
 21013  0073E8  26D9               	addwf	fsr2l,f,c
 21014  0073EA  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 21015  0073EC  22DA               	addwfc	fsr2h,f,c
 21016  0073EE  0E02               	movlw	2
 21017  0073F0  6EDF               	movwf	indf2,c
 21018                           
 21019                           ;../nwk/nwk_src/nwkDataReq.c: 177:       break;
 21020  0073F2  D010               	goto	u10970
 21021  0073F4                     l11980:
 21022                           
 21023                           ;../nwk/nwk_src/nwkDataReq.c: 179:   }
 21024  0073F4  0060  F023  FFD9   	movff	nwkDataReqTxConf@req,fsr2l
 21025  0073FA  0060  F027  FFDA   	movff	nwkDataReqTxConf@req+1,fsr2h
 21026  007400  006F FF78  F008    	movff	postinc2,nwkDataReqTxConf@req
 21027  007406  006F FF74  F009    	movff	postdec2,nwkDataReqTxConf@req+1
 21028  00740C                     l11982:
 21029  00740C  5008               	movf	nwkDataReqTxConf@req^0,w,c
 21030  00740E  1009               	iorwf	(nwkDataReqTxConf@req+1)^0,w,c
 21031  007410  A4D8               	btfss	status,2,c
 21032  007412  D7BC               	goto	l11974
 21033  007414                     u10970:
 21034                           
 21035                           ;../nwk/nwk_src/nwkDataReq.c: 181:   nwkFrameFree(frame);
 21036  007414  0060  F010  F002   	movff	nwkDataReqTxConf@frame,nwkFrameFree@frame
 21037  00741A  0060  F014  F003   	movff	nwkDataReqTxConf@frame+1,nwkFrameFree@frame+1
 21038  007420  EC8F  F04B         	call	_nwkFrameFree	;wreg free
 21039                           
 21040                           ; BSR set to: 1
 21041  007424  0012               	return		;funcret
 21042  007426                     __end_of_nwkDataReqTxConf:
 21043                           	opt callstack 0
 21044                           
 21045 ;; *************** function _PHY_DataReq *****************
 21046 ;; Defined at:
 21047 ;;		line 842 in file "../phy/sx1216/phy_src/phy.c"
 21048 ;; Parameters:    Size  Location     Type
 21049 ;;  data            2   16[COMRAM] PTR unsigned char 
 21050 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 21051 ;;  size            1   18[COMRAM] unsigned char 
 21052 ;; Auto vars:     Size  Location     Type
 21053 ;;		None
 21054 ;; Return value:  Size  Location     Type
 21055 ;;                  1    wreg      void 
 21056 ;; Registers used:
 21057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21058 ;; Tracked objects:
 21059 ;;		On entry : 3F/0
 21060 ;;		On exit  : 3F/0
 21061 ;;		Unchanged: 0/0
 21062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21063 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21066 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21067 ;;Total ram usage:        3 bytes
 21068 ;; Hardware stack levels used:    1
 21069 ;; Hardware stack levels required when called:   12
 21070 ;; This function calls:
 21071 ;;		_SPI1_ExchangeByte
 21072 ;;		_SPI1_WriteBlock
 21073 ;;		_SX1276Write
 21074 ;;		_explicitHeaderMode
 21075 ;;		_idle
 21076 ;; This function is called by:
 21077 ;;		_nwkTxTaskHandler
 21078 ;; This function uses a non-reentrant model
 21079 ;;
 21080                           
 21081                           	psect	text130
 21082  008516                     __ptext130:
 21083                           	opt callstack 0
 21084  008516                     _PHY_DataReq:
 21085                           	opt callstack 15
 21086                           
 21087                           ; BSR set to: 0
 21088                           ;../phy/sx1216/phy_src/phy.c: 843:     idle();
 21089                           
 21090                           ; BSR set to: 1
 21091                           ;incstack = 0
 21092  008516  ECDD  F04C         	call	_idle	;wreg free
 21093                           
 21094                           ;../phy/sx1216/phy_src/phy.c: 844:     explicitHeaderMode();
 21095  00851A  EC0C  F04C         	call	_explicitHeaderMode	;wreg free
 21096                           
 21097                           ;../phy/sx1216/phy_src/phy.c: 846:     SX1276Write(0x0E, 0x0);
 21098  00851E  0E00               	movlw	0
 21099  008520  6E0F               	movwf	SX1276Write@data^0,c
 21100  008522  0E0E               	movlw	14
 21101  008524  EC54  F04C         	call	_SX1276Write
 21102                           
 21103                           ;../phy/sx1216/phy_src/phy.c: 847:     SX1276Write(0x0D, 0x00);
 21104  008528  0E00               	movlw	0
 21105  00852A  6E0F               	movwf	SX1276Write@data^0,c
 21106  00852C  0E0D               	movlw	13
 21107  00852E  EC54  F04C         	call	_SX1276Write
 21108                           
 21109                           ;../phy/sx1216/phy_src/phy.c: 848:     SX1276Write(0x22, size);
 21110  008532  0060  F04C  F00F   	movff	PHY_DataReq@size,SX1276Write@data
 21111  008538  0E22               	movlw	34
 21112  00853A  EC54  F04C         	call	_SX1276Write
 21113                           
 21114                           ; BSR set to: 61
 21115  00853E  9CBC               	bcf	188,6,c	;volatile
 21116                           
 21117                           ; BSR set to: 61
 21118                           ;../phy/sx1216/phy_src/phy.c: 851:     SPI1_ExchangeByte(0x00 | 0x80);
 21119  008540  0E80               	movlw	128
 21120  008542  ECB6  F04B         	call	_SPI1_ExchangeByte
 21121                           
 21122                           ; BSR set to: 61
 21123                           ;../phy/sx1216/phy_src/phy.c: 852:     SPI1_WriteBlock(data,size);
 21124  008546  0060  F044  F003   	movff	PHY_DataReq@data,SPI1_WriteBlock@block
 21125  00854C  0060  F048  F004   	movff	PHY_DataReq@data+1,SPI1_WriteBlock@block+1
 21126  008552  0060  F04C  F005   	movff	PHY_DataReq@size,SPI1_WriteBlock@blockSize
 21127  008558  6A06               	clrf	(SPI1_WriteBlock@blockSize+1)^0,c
 21128  00855A  EC79  F048         	call	_SPI1_WriteBlock	;wreg free
 21129                           
 21130                           ; BSR set to: 61
 21131  00855E  8CBC               	bsf	188,6,c	;volatile
 21132                           
 21133                           ; BSR set to: 61
 21134                           ;../phy/sx1216/phy_src/phy.c: 854:     SX1276Write(0x01,
 21135  008560  0E83               	movlw	131
 21136  008562  6E0F               	movwf	SX1276Write@data^0,c
 21137  008564  0E01               	movlw	1
 21138  008566  EC54  F04C         	call	_SX1276Write
 21139                           
 21140                           ; BSR set to: 61
 21141                           ;../phy/sx1216/phy_src/phy.c: 856:     radio_state_var = START_TX;
 21142  00856A  0E06               	movlw	6
 21143  00856C  0100               	movlb	0	; () banked
 21144  00856E  6FD2               	movwf	_radio_state_var& (0+255),b
 21145                           
 21146                           ; BSR set to: 0
 21147  008570  0012               	return		;funcret
 21148  008572                     __end_of_PHY_DataReq:
 21149                           	opt callstack 0
 21150                           
 21151 ;; *************** function _idle *****************
 21152 ;; Defined at:
 21153 ;;		line 116 in file "../phy/sx1216/phy_src/phy.c"
 21154 ;; Parameters:    Size  Location     Type
 21155 ;;		None
 21156 ;; Auto vars:     Size  Location     Type
 21157 ;;		None
 21158 ;; Return value:  Size  Location     Type
 21159 ;;                  1    wreg      void 
 21160 ;; Registers used:
 21161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21162 ;; Tracked objects:
 21163 ;;		On entry : 2/3D
 21164 ;;		On exit  : 3F/3D
 21165 ;;		Unchanged: 0/0
 21166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21171 ;;Total ram usage:        0 bytes
 21172 ;; Hardware stack levels used:    1
 21173 ;; Hardware stack levels required when called:   11
 21174 ;; This function calls:
 21175 ;;		_SX1276Write
 21176 ;; This function is called by:
 21177 ;;		_start_radio_cad
 21178 ;;		_PHY_DataReq
 21179 ;; This function uses a non-reentrant model
 21180 ;;
 21181                           
 21182                           	psect	text131
 21183  0099BA                     __ptext131:
 21184                           	opt callstack 0
 21185  0099BA                     _idle:
 21186                           	opt callstack 14
 21187                           
 21188                           ;../phy/sx1216/phy_src/phy.c: 118:     SX1276Write(0x01,0x80 | 0x01);
 21189                           
 21190                           ; BSR set to: 0
 21191                           ;incstack = 0
 21192  0099BA  0E81               	movlw	129
 21193  0099BC  6E0F               	movwf	SX1276Write@data^0,c
 21194  0099BE  0E01               	movlw	1
 21195  0099C0  EC54  F04C         	call	_SX1276Write
 21196                           
 21197                           ; BSR set to: 61
 21198  0099C4  0012               	return		;funcret
 21199  0099C6                     __end_of_idle:
 21200                           	opt callstack 0
 21201                           
 21202 ;; *************** function _nwkSecurityTaskHandler *****************
 21203 ;; Defined at:
 21204 ;;		line 183 in file "../nwk/nwk_src/nwkSecurity.c"
 21205 ;; Parameters:    Size  Location     Type
 21206 ;;		None
 21207 ;; Auto vars:     Size  Location     Type
 21208 ;;  micStatus       1   59[COMRAM] _Bool 
 21209 ;;  frame           2   60[COMRAM] PTR struct NwkFrame_t
 21210 ;;		 -> nwkFrameFrames(685), NULL(0), 
 21211 ;; Return value:  Size  Location     Type
 21212 ;;                  1    wreg      void 
 21213 ;; Registers used:
 21214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21215 ;; Tracked objects:
 21216 ;;		On entry : 0/3D
 21217 ;;		On exit  : 0/0
 21218 ;;		Unchanged: 0/0
 21219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21221 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21222 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21223 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21224 ;;Total ram usage:        4 bytes
 21225 ;; Hardware stack levels used:    1
 21226 ;; Hardware stack levels required when called:    9
 21227 ;; This function calls:
 21228 ;;		_SYS_EncryptReq
 21229 ;;		_nwkFrameNext
 21230 ;;		_nwkRxDecryptConf
 21231 ;;		_nwkSecurityProcessMic
 21232 ;;		_nwkSecurityStart
 21233 ;;		_nwkTxEncryptConf
 21234 ;; This function is called by:
 21235 ;;		_NWK_TaskHandler
 21236 ;; This function uses a non-reentrant model
 21237 ;;
 21238                           
 21239                           	psect	text132
 21240  00562E                     __ptext132:
 21241                           	opt callstack 0
 21242  00562E                     _nwkSecurityTaskHandler:
 21243                           	opt callstack 19
 21244                           
 21245                           ;../nwk/nwk_src/nwkSecurity.c: 185:   NwkFrame_t *frame = ((void*)0);
 21246                           
 21247                           ; BSR set to: 61
 21248                           ;incstack = 0
 21249  00562E  0E00               	movlw	0
 21250  005630  6E3D               	movwf	nwkSecurityTaskHandler@frame^0,c
 21251  005632  0E00               	movlw	0
 21252  005634  6E3E               	movwf	(nwkSecurityTaskHandler@frame+1)^0,c
 21253                           
 21254                           ;../nwk/nwk_src/nwkSecurity.c: 187:   if (0 == nwkSecurityActiveFrames)
 21255  005636  0100               	movlb	0	; () banked
 21256  005638  51CA               	movf	_nwkSecurityActiveFrames& (0+255),w,b
 21257  00563A  B4D8               	btfsc	status,2,c
 21258  00563C  0012               	return	
 21259                           
 21260                           ; BSR set to: 0
 21261                           ;../nwk/nwk_src/nwkSecurity.c: 190:   if (nwkSecurityActiveFrame)
 21262  00563E  51BF               	movf	_nwkSecurityActiveFrame& (0+255),w,b
 21263  005640  11C0               	iorwf	(_nwkSecurityActiveFrame+1)& (0+255),w,b
 21264  005642  B4D8               	btfsc	status,2,c
 21265  005644  D065               	goto	l16892
 21266                           
 21267                           ; BSR set to: 0
 21268                           ;../nwk/nwk_src/nwkSecurity.c: 191:   {;../nwk/nwk_src/nwkSecurity.c: 192:     if (NWK_S
      +                          ECURITY_STATE_CONFIRM == nwkSecurityActiveFrame->state)
 21269  005646  0060  F2FF  FFD9   	movff	_nwkSecurityActiveFrame,fsr2l
 21270  00564C  0060  F303  FFDA   	movff	_nwkSecurityActiveFrame+1,fsr2h
 21271  005652  0E34               	movlw	52
 21272  005654  18DE               	xorwf	postinc2,w,c
 21273  005656  A4D8               	btfss	status,2,c
 21274  005658  D021               	goto	l16874
 21275                           
 21276                           ; BSR set to: 0
 21277                           ;../nwk/nwk_src/nwkSecurity.c: 193:     {;../nwk/nwk_src/nwkSecurity.c: 194:       _Bool
      +                           micStatus = nwkSecurityProcessMic();
 21278  00565A  EC7B  F02F         	call	_nwkSecurityProcessMic	;wreg free
 21279  00565E  6E3C               	movwf	nwkSecurityTaskHandler@micStatus^0,c
 21280                           
 21281                           ;../nwk/nwk_src/nwkSecurity.c: 196:       if (nwkSecurityEncrypt)
 21282  005660  0100               	movlb	0	; () banked
 21283  005662  51C7               	movf	_nwkSecurityEncrypt& (0+255),w,b
 21284  005664  B4D8               	btfsc	status,2,c
 21285  005666  D009               	goto	l16868
 21286                           
 21287                           ; BSR set to: 0
 21288                           ;../nwk/nwk_src/nwkSecurity.c: 197:         nwkTxEncryptConf(nwkSecurityActiveFrame);
 21289  005668  0060  F2FC  F002   	movff	_nwkSecurityActiveFrame,nwkTxEncryptConf@frame
 21290  00566E  0060  F300  F003   	movff	_nwkSecurityActiveFrame+1,nwkTxEncryptConf@frame+1
 21291  005674  EC42  F04C         	call	_nwkTxEncryptConf	;wreg free
 21292  005678  D00B               	goto	l16870
 21293  00567A                     l16868:
 21294                           
 21295                           ; BSR set to: 0
 21296                           ;../nwk/nwk_src/nwkSecurity.c: 199:         nwkRxDecryptConf(nwkSecurityActiveFrame, mic
      +                          Status);
 21297  00567A  0060  F2FC  F002   	movff	_nwkSecurityActiveFrame,nwkRxDecryptConf@frame
 21298  005680  0060  F300  F003   	movff	_nwkSecurityActiveFrame+1,nwkRxDecryptConf@frame+1
 21299  005686  0060  F0F0  F004   	movff	nwkSecurityTaskHandler@micStatus,nwkRxDecryptConf@status
 21300  00568C  EC89  F049         	call	_nwkRxDecryptConf	;wreg free
 21301  005690                     l16870:
 21302                           
 21303                           ; BSR set to: 0
 21304                           ;../nwk/nwk_src/nwkSecurity.c: 201:       nwkSecurityActiveFrame = ((void*)0);
 21305  005690  0E00               	movlw	0
 21306  005692  6FBF               	movwf	_nwkSecurityActiveFrame& (0+255),b
 21307  005694  0E00               	movlw	0
 21308  005696  6FC0               	movwf	(_nwkSecurityActiveFrame+1)& (0+255),b
 21309                           
 21310                           ; BSR set to: 0
 21311                           ;../nwk/nwk_src/nwkSecurity.c: 202:       --nwkSecurityActiveFrames;
 21312  005698  07CA               	decf	_nwkSecurityActiveFrames& (0+255),f,b
 21313                           
 21314                           ;../nwk/nwk_src/nwkSecurity.c: 203:     }
 21315  00569A  0012               	return	
 21316  00569C                     l16874:
 21317                           
 21318                           ; BSR set to: 0
 21319  00569C  0060  F2FF  FFD9   	movff	_nwkSecurityActiveFrame,fsr2l
 21320  0056A2  0060  F303  FFDA   	movff	_nwkSecurityActiveFrame+1,fsr2h
 21321  0056A8  0E32               	movlw	50
 21322  0056AA  18DE               	xorwf	postinc2,w,c
 21323  0056AC  A4D8               	btfss	status,2,c
 21324  0056AE  0012               	return	
 21325                           
 21326                           ; BSR set to: 0
 21327                           ;../nwk/nwk_src/nwkSecurity.c: 205:     {;../nwk/nwk_src/nwkSecurity.c: 206:       nwkSe
      +                          curityActiveFrame->state = NWK_SECURITY_STATE_WAIT;
 21328  0056B0  0060  F2FF  FFD9   	movff	_nwkSecurityActiveFrame,fsr2l
 21329  0056B6  0060  F303  FFDA   	movff	_nwkSecurityActiveFrame+1,fsr2h
 21330  0056BC  0E33               	movlw	51
 21331  0056BE  6EDF               	movwf	indf2,c
 21332                           
 21333                           ; BSR set to: 0
 21334                           ;../nwk/nwk_src/nwkSecurity.c: 207:       SYS_EncryptReq((uint8_t *)nwkSecurityVector, (
      +                          uint8_t *)nwkIb.key);
 21335  0056C0  0E69               	movlw	low _nwkSecurityVector
 21336  0056C2  6E36               	movwf	SYS_EncryptReq@text^0,c
 21337  0056C4  0E01               	movlw	high _nwkSecurityVector
 21338  0056C6  6E37               	movwf	(SYS_EncryptReq@text+1)^0,c
 21339  0056C8  0E57               	movlw	low (_nwkIb+38)
 21340  0056CA  6E38               	movwf	SYS_EncryptReq@key^0,c
 21341  0056CC  0E01               	movlw	high (_nwkIb+38)
 21342  0056CE  6E39               	movwf	(SYS_EncryptReq@key+1)^0,c
 21343  0056D0  EC18  F03F         	call	_SYS_EncryptReq	;wreg free
 21344  0056D4  0012               	return	
 21345  0056D6                     l16882:
 21346                           
 21347                           ;../nwk/nwk_src/nwkSecurity.c: 214:   {;../nwk/nwk_src/nwkSecurity.c: 215:     if (NWK_S
      +                          ECURITY_STATE_ENCRYPT_PENDING == frame->state ||
 21348  0056D6  0060  F0F7  FFD9   	movff	nwkSecurityTaskHandler@frame,fsr2l
 21349  0056DC  0060  F0FB  FFDA   	movff	nwkSecurityTaskHandler@frame+1,fsr2h
 21350  0056E2  0E30               	movlw	48
 21351  0056E4  18DE               	xorwf	postinc2,w,c
 21352  0056E6  B4D8               	btfsc	status,2,c
 21353  0056E8  D00A               	goto	u17210
 21354  0056EA  0060  F0F7  FFD9   	movff	nwkSecurityTaskHandler@frame,fsr2l
 21355  0056F0  0060  F0FB  FFDA   	movff	nwkSecurityTaskHandler@frame+1,fsr2h
 21356  0056F6  0E31               	movlw	49
 21357  0056F8  18DE               	xorwf	postinc2,w,c
 21358  0056FA  A4D8               	btfss	status,2,c
 21359  0056FC  D009               	goto	l16892
 21360  0056FE                     u17210:
 21361                           
 21362                           ;../nwk/nwk_src/nwkSecurity.c: 217:     {;../nwk/nwk_src/nwkSecurity.c: 218:       nwkSe
      +                          curityActiveFrame = frame;
 21363  0056FE  0060  F0F4  F0BF   	movff	nwkSecurityTaskHandler@frame,_nwkSecurityActiveFrame
 21364  005704  0060  F0F8  F0C0   	movff	nwkSecurityTaskHandler@frame+1,_nwkSecurityActiveFrame+1
 21365                           
 21366                           ;../nwk/nwk_src/nwkSecurity.c: 219:       nwkSecurityStart();
 21367  00570A  ECA9  F01F         	call	_nwkSecurityStart	;wreg free
 21368  00570E  0012               	return	
 21369  005710                     l16892:
 21370                           
 21371                           ;../nwk/nwk_src/nwkSecurity.c: 213:   while (((void*)0) != (frame = nwkFrameNext(frame))
      +                          )
 21372  005710  0060  F0F4  F002   	movff	nwkSecurityTaskHandler@frame,nwkFrameNext@frame
 21373  005716  0060  F0F8  F003   	movff	nwkSecurityTaskHandler@frame+1,nwkFrameNext@frame+1
 21374  00571C  EC06  F03D         	call	_nwkFrameNext	;wreg free
 21375  005720  0060  F008  F03D   	movff	?_nwkFrameNext,nwkSecurityTaskHandler@frame
 21376  005726  0060  F00C  F03E   	movff	?_nwkFrameNext+1,nwkSecurityTaskHandler@frame+1
 21377  00572C  503D               	movf	nwkSecurityTaskHandler@frame^0,w,c
 21378  00572E  103E               	iorwf	(nwkSecurityTaskHandler@frame+1)^0,w,c
 21379  005730  B4D8               	btfsc	status,2,c
 21380  005732  0012               	return	
 21381  005734  D7D0               	goto	l16882
 21382  005736                     __end_of_nwkSecurityTaskHandler:
 21383                           	opt callstack 0
 21384                           
 21385 ;; *************** function _nwkTxEncryptConf *****************
 21386 ;; Defined at:
 21387 ;;		line 236 in file "../nwk/nwk_src/nwkTx.c"
 21388 ;; Parameters:    Size  Location     Type
 21389 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 21390 ;;		 -> nwkFrameFrames(685), NULL(0), 
 21391 ;; Auto vars:     Size  Location     Type
 21392 ;;		None
 21393 ;; Return value:  Size  Location     Type
 21394 ;;                  1    wreg      void 
 21395 ;; Registers used:
 21396 ;;		wreg, fsr2l, fsr2h
 21397 ;; Tracked objects:
 21398 ;;		On entry : 3F/0
 21399 ;;		On exit  : 3F/0
 21400 ;;		Unchanged: 3F/0
 21401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21402 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21405 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21406 ;;Total ram usage:        2 bytes
 21407 ;; Hardware stack levels used:    1
 21408 ;; Hardware stack levels required when called:    7
 21409 ;; This function calls:
 21410 ;;		Nothing
 21411 ;; This function is called by:
 21412 ;;		_nwkSecurityTaskHandler
 21413 ;; This function uses a non-reentrant model
 21414 ;;
 21415                           
 21416                           	psect	text133
 21417  009884                     __ptext133:
 21418                           	opt callstack 0
 21419  009884                     _nwkTxEncryptConf:
 21420                           	opt callstack 20
 21421                           
 21422                           ; BSR set to: 0
 21423                           ;../nwk/nwk_src/nwkTx.c: 236: void nwkTxEncryptConf(NwkFrame_t *frame);../nwk/nwk_src/nw
      +                          kTx.c: 237: {;../nwk/nwk_src/nwkTx.c: 238:   frame->state = NWK_TX_STATE_DELAY;
 21424                           
 21425                           ;incstack = 0
 21426  009884  0060  F00B  FFD9   	movff	nwkTxEncryptConf@frame,fsr2l
 21427  00988A  0060  F00F  FFDA   	movff	nwkTxEncryptConf@frame+1,fsr2h
 21428  009890  0E12               	movlw	18
 21429  009892  6EDF               	movwf	indf2,c
 21430                           
 21431                           ; BSR set to: 0
 21432  009894  0012               	return		;funcret
 21433  009896                     __end_of_nwkTxEncryptConf:
 21434                           	opt callstack 0
 21435                           
 21436 ;; *************** function _nwkSecurityStart *****************
 21437 ;; Defined at:
 21438 ;;		line 110 in file "../nwk/nwk_src/nwkSecurity.c"
 21439 ;; Parameters:    Size  Location     Type
 21440 ;;		None
 21441 ;; Auto vars:     Size  Location     Type
 21442 ;;  header          2   12[COMRAM] PTR __pack struct NwkFra
 21443 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 21444 ;; Return value:  Size  Location     Type
 21445 ;;                  1    wreg      void 
 21446 ;; Registers used:
 21447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21448 ;; Tracked objects:
 21449 ;;		On entry : 0/0
 21450 ;;		On exit  : 3F/0
 21451 ;;		Unchanged: 0/0
 21452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21455 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21456 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21457 ;;Total ram usage:        9 bytes
 21458 ;; Hardware stack levels used:    1
 21459 ;; Hardware stack levels required when called:    8
 21460 ;; This function calls:
 21461 ;;		_nwkFramePayloadSize
 21462 ;; This function is called by:
 21463 ;;		_nwkSecurityTaskHandler
 21464 ;; This function uses a non-reentrant model
 21465 ;;
 21466                           
 21467                           	psect	text134
 21468  003F52                     __ptext134:
 21469                           	opt callstack 0
 21470  003F52                     _nwkSecurityStart:
 21471                           	opt callstack 19
 21472                           
 21473                           ;../nwk/nwk_src/nwkSecurity.c: 112:   NwkFrameHeader_t *header = &nwkSecurityActiveFrame
      +                          ->header;
 21474                           
 21475                           ; BSR set to: 0
 21476                           ;incstack = 0
 21477  003F52  0E02               	movlw	2
 21478  003F54  0100               	movlb	0	; () banked
 21479  003F56  25BF               	addwf	_nwkSecurityActiveFrame& (0+255),w,b
 21480  003F58  6E0D               	movwf	nwkSecurityStart@header^0,c
 21481  003F5A  0E00               	movlw	0
 21482  003F5C  21C0               	addwfc	(_nwkSecurityActiveFrame+1)& (0+255),w,b
 21483  003F5E  6E0E               	movwf	(nwkSecurityStart@header+1)^0,c
 21484                           
 21485                           ; BSR set to: 0
 21486                           ;../nwk/nwk_src/nwkSecurity.c: 114:   nwkSecurityVector[0] = header->nwkSeq;
 21487  003F60  EE20 F00A          	lfsr	2,10
 21488  003F64  500D               	movf	nwkSecurityStart@header^0,w,c
 21489  003F66  26D9               	addwf	fsr2l,f,c
 21490  003F68  500E               	movf	(nwkSecurityStart@header+1)^0,w,c
 21491  003F6A  22DA               	addwfc	fsr2h,f,c
 21492  003F6C  50DF               	movf	indf2,w,c
 21493  003F6E  6E06               	movwf	??_nwkSecurityStart^0,c
 21494  003F70  5006               	movf	??_nwkSecurityStart^0,w,c
 21495  003F72  0101               	movlb	1	; () banked
 21496  003F74  6F69               	movwf	_nwkSecurityVector& (0+255),b
 21497  003F76  6B6A               	clrf	(_nwkSecurityVector+1)& (0+255),b
 21498  003F78  6B6B               	clrf	(_nwkSecurityVector+2)& (0+255),b
 21499  003F7A  6B6C               	clrf	(_nwkSecurityVector+3)& (0+255),b
 21500                           
 21501                           ; BSR set to: 1
 21502                           ;../nwk/nwk_src/nwkSecurity.c: 115:   nwkSecurityVector[1] = ((uint32_t)header->nwkDstAd
      +                          dr << 16) | header->nwkDstEndpoint;
 21503  003F7C  EE20 F00D          	lfsr	2,13
 21504  003F80  500D               	movf	nwkSecurityStart@header^0,w,c
 21505  003F82  26D9               	addwf	fsr2l,f,c
 21506  003F84  500E               	movf	(nwkSecurityStart@header+1)^0,w,c
 21507  003F86  22DA               	addwfc	fsr2h,f,c
 21508  003F88  006F FF78  F006    	movff	postinc2,??_nwkSecurityStart
 21509  003F8E  006F FF74  F007    	movff	postdec2,??_nwkSecurityStart+1
 21510  003F94  5006               	movf	??_nwkSecurityStart^0,w,c
 21511  003F96  6E08               	movwf	(??_nwkSecurityStart+2)^0,c
 21512  003F98  5007               	movf	(??_nwkSecurityStart+1)^0,w,c
 21513  003F9A  6E09               	movwf	(??_nwkSecurityStart+3)^0,c
 21514  003F9C  6A0A               	clrf	(??_nwkSecurityStart+4)^0,c
 21515  003F9E  6A0B               	clrf	(??_nwkSecurityStart+5)^0,c
 21516  003FA0  0060  F024  F00B   	movff	??_nwkSecurityStart+3,??_nwkSecurityStart+5
 21517  003FA6  0060  F020  F00A   	movff	??_nwkSecurityStart+2,??_nwkSecurityStart+4
 21518  003FAC  6A09               	clrf	(??_nwkSecurityStart+3)^0,c
 21519  003FAE  6A08               	clrf	(??_nwkSecurityStart+2)^0,c
 21520  003FB0  EE20 F00F          	lfsr	2,15
 21521  003FB4  500D               	movf	nwkSecurityStart@header^0,w,c
 21522  003FB6  26D9               	addwf	fsr2l,f,c
 21523  003FB8  500E               	movf	(nwkSecurityStart@header+1)^0,w,c
 21524  003FBA  22DA               	addwfc	fsr2h,f,c
 21525  003FBC  38DF               	swapf	indf2,w,c
 21526  003FBE  0B0F               	andlw	15
 21527  003FC0  6E0C               	movwf	(??_nwkSecurityStart+6)^0,c
 21528  003FC2  500C               	movf	(??_nwkSecurityStart+6)^0,w,c
 21529  003FC4  1008               	iorwf	(??_nwkSecurityStart+2)^0,w,c
 21530  003FC6  6F6D               	movwf	(_nwkSecurityVector+4)& (0+255),b
 21531  003FC8  5009               	movf	(??_nwkSecurityStart+3)^0,w,c
 21532  003FCA  6F6E               	movwf	(_nwkSecurityVector+5)& (0+255),b
 21533  003FCC  500A               	movf	(??_nwkSecurityStart+4)^0,w,c
 21534  003FCE  6F6F               	movwf	(_nwkSecurityVector+6)& (0+255),b
 21535  003FD0  500B               	movf	(??_nwkSecurityStart+5)^0,w,c
 21536  003FD2  6F70               	movwf	(_nwkSecurityVector+7)& (0+255),b
 21537                           
 21538                           ; BSR set to: 1
 21539                           ;../nwk/nwk_src/nwkSecurity.c: 116:   nwkSecurityVector[2] = ((uint32_t)header->nwkSrcAd
      +                          dr << 16) | header->nwkSrcEndpoint;
 21540  003FD4  EE20 F00B          	lfsr	2,11
 21541  003FD8  500D               	movf	nwkSecurityStart@header^0,w,c
 21542  003FDA  26D9               	addwf	fsr2l,f,c
 21543  003FDC  500E               	movf	(nwkSecurityStart@header+1)^0,w,c
 21544  003FDE  22DA               	addwfc	fsr2h,f,c
 21545  003FE0  006F FF78  F006    	movff	postinc2,??_nwkSecurityStart
 21546  003FE6  006F FF74  F007    	movff	postdec2,??_nwkSecurityStart+1
 21547  003FEC  5006               	movf	??_nwkSecurityStart^0,w,c
 21548  003FEE  6E08               	movwf	(??_nwkSecurityStart+2)^0,c
 21549  003FF0  5007               	movf	(??_nwkSecurityStart+1)^0,w,c
 21550  003FF2  6E09               	movwf	(??_nwkSecurityStart+3)^0,c
 21551  003FF4  6A0A               	clrf	(??_nwkSecurityStart+4)^0,c
 21552  003FF6  6A0B               	clrf	(??_nwkSecurityStart+5)^0,c
 21553  003FF8  0060  F024  F00B   	movff	??_nwkSecurityStart+3,??_nwkSecurityStart+5
 21554  003FFE  0060  F020  F00A   	movff	??_nwkSecurityStart+2,??_nwkSecurityStart+4
 21555  004004  6A09               	clrf	(??_nwkSecurityStart+3)^0,c
 21556  004006  6A08               	clrf	(??_nwkSecurityStart+2)^0,c
 21557  004008  EE20 F00F          	lfsr	2,15
 21558  00400C  500D               	movf	nwkSecurityStart@header^0,w,c
 21559  00400E  26D9               	addwf	fsr2l,f,c
 21560  004010  500E               	movf	(nwkSecurityStart@header+1)^0,w,c
 21561  004012  22DA               	addwfc	fsr2h,f,c
 21562  004014  50DF               	movf	indf2,w,c
 21563  004016  0B0F               	andlw	15
 21564  004018  6E0C               	movwf	(??_nwkSecurityStart+6)^0,c
 21565  00401A  500C               	movf	(??_nwkSecurityStart+6)^0,w,c
 21566  00401C  1008               	iorwf	(??_nwkSecurityStart+2)^0,w,c
 21567  00401E  6F71               	movwf	(_nwkSecurityVector+8)& (0+255),b
 21568  004020  5009               	movf	(??_nwkSecurityStart+3)^0,w,c
 21569  004022  6F72               	movwf	(_nwkSecurityVector+9)& (0+255),b
 21570  004024  500A               	movf	(??_nwkSecurityStart+4)^0,w,c
 21571  004026  6F73               	movwf	(_nwkSecurityVector+10)& (0+255),b
 21572  004028  500B               	movf	(??_nwkSecurityStart+5)^0,w,c
 21573  00402A  6F74               	movwf	(_nwkSecurityVector+11)& (0+255),b
 21574                           
 21575                           ; BSR set to: 1
 21576                           ;../nwk/nwk_src/nwkSecurity.c: 117:   nwkSecurityVector[3] = ((uint32_t)header->macDstPa
      +                          nId << 16) | *(uint8_t *)&header->nwkFcf;
 21577  00402C  EE20 F003          	lfsr	2,3
 21578  004030  500D               	movf	nwkSecurityStart@header^0,w,c
 21579  004032  26D9               	addwf	fsr2l,f,c
 21580  004034  500E               	movf	(nwkSecurityStart@header+1)^0,w,c
 21581  004036  22DA               	addwfc	fsr2h,f,c
 21582  004038  006F FF78  F006    	movff	postinc2,??_nwkSecurityStart
 21583  00403E  006F FF74  F007    	movff	postdec2,??_nwkSecurityStart+1
 21584  004044  5006               	movf	??_nwkSecurityStart^0,w,c
 21585  004046  6E08               	movwf	(??_nwkSecurityStart+2)^0,c
 21586  004048  5007               	movf	(??_nwkSecurityStart+1)^0,w,c
 21587  00404A  6E09               	movwf	(??_nwkSecurityStart+3)^0,c
 21588  00404C  6A0A               	clrf	(??_nwkSecurityStart+4)^0,c
 21589  00404E  6A0B               	clrf	(??_nwkSecurityStart+5)^0,c
 21590  004050  0060  F024  F00B   	movff	??_nwkSecurityStart+3,??_nwkSecurityStart+5
 21591  004056  0060  F020  F00A   	movff	??_nwkSecurityStart+2,??_nwkSecurityStart+4
 21592  00405C  6A09               	clrf	(??_nwkSecurityStart+3)^0,c
 21593  00405E  6A08               	clrf	(??_nwkSecurityStart+2)^0,c
 21594  004060  0E09               	movlw	9
 21595  004062  240D               	addwf	nwkSecurityStart@header^0,w,c
 21596  004064  6ED9               	movwf	fsr2l,c
 21597  004066  0E00               	movlw	0
 21598  004068  200E               	addwfc	(nwkSecurityStart@header+1)^0,w,c
 21599  00406A  6EDA               	movwf	fsr2h,c
 21600  00406C  50DF               	movf	indf2,w,c
 21601  00406E  6E0C               	movwf	(??_nwkSecurityStart+6)^0,c
 21602  004070  500C               	movf	(??_nwkSecurityStart+6)^0,w,c
 21603  004072  1008               	iorwf	(??_nwkSecurityStart+2)^0,w,c
 21604  004074  6F75               	movwf	(_nwkSecurityVector+12)& (0+255),b
 21605  004076  5009               	movf	(??_nwkSecurityStart+3)^0,w,c
 21606  004078  6F76               	movwf	(_nwkSecurityVector+13)& (0+255),b
 21607  00407A  500A               	movf	(??_nwkSecurityStart+4)^0,w,c
 21608  00407C  6F77               	movwf	(_nwkSecurityVector+14)& (0+255),b
 21609  00407E  500B               	movf	(??_nwkSecurityStart+5)^0,w,c
 21610  004080  6F78               	movwf	(_nwkSecurityVector+15)& (0+255),b
 21611                           
 21612                           ; BSR set to: 1
 21613                           ;../nwk/nwk_src/nwkSecurity.c: 119:   if (NWK_SECURITY_STATE_DECRYPT_PENDING == nwkSecur
      +                          ityActiveFrame->state)
 21614  004082  0060  F2FF  FFD9   	movff	_nwkSecurityActiveFrame,fsr2l
 21615  004088  0060  F303  FFDA   	movff	_nwkSecurityActiveFrame+1,fsr2h
 21616  00408E  0E31               	movlw	49
 21617  004090  18DE               	xorwf	postinc2,w,c
 21618  004092  A4D8               	btfss	status,2,c
 21619  004094  D009               	goto	l12188
 21620                           
 21621                           ; BSR set to: 1
 21622                           ;../nwk/nwk_src/nwkSecurity.c: 120:     nwkSecurityActiveFrame->size -= 4;
 21623  004096  0100               	movlb	0	; () banked
 21624  004098  EE20 F001          	lfsr	2,1
 21625  00409C  51BF               	movf	_nwkSecurityActiveFrame& (0+255),w,b
 21626  00409E  26D9               	addwf	fsr2l,f,c
 21627  0040A0  51C0               	movf	(_nwkSecurityActiveFrame+1)& (0+255),w,b
 21628  0040A2  22DA               	addwfc	fsr2h,f,c
 21629  0040A4  0E04               	movlw	4
 21630  0040A6  5EDF               	subwf	indf2,f,c
 21631  0040A8                     l12188:
 21632                           
 21633                           ;../nwk/nwk_src/nwkSecurity.c: 122:   nwkSecuritySize = nwkFramePayloadSize(nwkSecurityA
      +                          ctiveFrame);
 21634  0040A8  0060  F2FC  F002   	movff	_nwkSecurityActiveFrame,nwkFramePayloadSize@frame
 21635  0040AE  0060  F300  F003   	movff	_nwkSecurityActiveFrame+1,nwkFramePayloadSize@frame+1
 21636  0040B4  EC9E  F049         	call	_nwkFramePayloadSize	;wreg free
 21637  0040B8  0100               	movlb	0	; () banked
 21638  0040BA  6FC9               	movwf	_nwkSecuritySize& (0+255),b
 21639                           
 21640                           ; BSR set to: 0
 21641                           ;../nwk/nwk_src/nwkSecurity.c: 123:   nwkSecurityOffset = 0;
 21642  0040BC  0E00               	movlw	0
 21643  0040BE  6FC8               	movwf	_nwkSecurityOffset& (0+255),b
 21644                           
 21645                           ; BSR set to: 0
 21646                           ;../nwk/nwk_src/nwkSecurity.c: 124:   nwkSecurityEncrypt = (NWK_SECURITY_STATE_ENCRYPT_P
      +                          ENDING == nwkSecurityActiveFrame->state);
 21647  0040C0  0060  F2FF  FFD9   	movff	_nwkSecurityActiveFrame,fsr2l
 21648  0040C6  0060  F303  FFDA   	movff	_nwkSecurityActiveFrame+1,fsr2h
 21649  0040CC  0E30               	movlw	48
 21650  0040CE  18DE               	xorwf	postinc2,w,c
 21651  0040D0  A4D8               	btfss	status,2,c
 21652  0040D2  D002               	goto	u11460
 21653  0040D4  0E01               	movlw	1
 21654  0040D6  D001               	goto	u11470
 21655  0040D8                     u11460:
 21656  0040D8  0E00               	movlw	0
 21657  0040DA                     u11470:
 21658  0040DA  6FC7               	movwf	_nwkSecurityEncrypt& (0+255),b
 21659                           
 21660                           ; BSR set to: 0
 21661                           ;../nwk/nwk_src/nwkSecurity.c: 126:   nwkSecurityActiveFrame->state = NWK_SECURITY_STATE
      +                          _PROCESS;
 21662  0040DC  0060  F2FF  FFD9   	movff	_nwkSecurityActiveFrame,fsr2l
 21663  0040E2  0060  F303  FFDA   	movff	_nwkSecurityActiveFrame+1,fsr2h
 21664  0040E8  0E32               	movlw	50
 21665  0040EA  6EDF               	movwf	indf2,c
 21666                           
 21667                           ; BSR set to: 0
 21668  0040EC  0012               	return		;funcret
 21669  0040EE                     __end_of_nwkSecurityStart:
 21670                           	opt callstack 0
 21671                           
 21672 ;; *************** function _nwkSecurityProcessMic *****************
 21673 ;; Defined at:
 21674 ;;		line 160 in file "../nwk/nwk_src/nwkSecurity.c"
 21675 ;; Parameters:    Size  Location     Type
 21676 ;;		None
 21677 ;; Auto vars:     Size  Location     Type
 21678 ;;  tmic            4   32[COMRAM] unsigned long 
 21679 ;;  vmic            4   28[COMRAM] unsigned long 
 21680 ;;  mic             2   26[COMRAM] PTR unsigned char 
 21681 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 21682 ;; Return value:  Size  Location     Type
 21683 ;;                  1    wreg      _Bool 
 21684 ;; Registers used:
 21685 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21686 ;; Tracked objects:
 21687 ;;		On entry : 3F/0
 21688 ;;		On exit  : 0/0
 21689 ;;		Unchanged: 0/0
 21690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21692 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21693 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21694 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21695 ;;Total ram usage:       18 bytes
 21696 ;; Hardware stack levels used:    1
 21697 ;; Hardware stack levels required when called:    8
 21698 ;; This function calls:
 21699 ;;		_memcpy
 21700 ;; This function is called by:
 21701 ;;		_nwkSecurityTaskHandler
 21702 ;; This function uses a non-reentrant model
 21703 ;;
 21704                           
 21705                           	psect	text135
 21706  005EF6                     __ptext135:
 21707                           	opt callstack 0
 21708  005EF6                     _nwkSecurityProcessMic:
 21709                           	opt callstack 19
 21710                           
 21711                           ; BSR set to: 0
 21712                           ;../nwk/nwk_src/nwkSecurity.c: 162:   uint8_t *mic = &nwkSecurityActiveFrame->payload[nw
      +                          kSecurityOffset];
 21713                           
 21714                           ; BSR set to: 0
 21715                           ;incstack = 0
 21716  005EF6  EE20 F081          	lfsr	2,129
 21717  005EFA  51BF               	movf	_nwkSecurityActiveFrame& (0+255),w,b
 21718  005EFC  26D9               	addwf	fsr2l,f,c
 21719  005EFE  51C0               	movf	(_nwkSecurityActiveFrame+1)& (0+255),w,b
 21720  005F00  22DA               	addwfc	fsr2h,f,c
 21721  005F02  006F FF78  F013    	movff	postinc2,??_nwkSecurityProcessMic
 21722  005F08  006F FF74  F014    	movff	postdec2,??_nwkSecurityProcessMic+1
 21723  005F0E  51C8               	movf	_nwkSecurityOffset& (0+255),w,b
 21724  005F10  2413               	addwf	??_nwkSecurityProcessMic^0,w,c
 21725  005F12  6E1B               	movwf	nwkSecurityProcessMic@mic^0,c
 21726  005F14  0E00               	movlw	0
 21727  005F16  2014               	addwfc	(??_nwkSecurityProcessMic+1)^0,w,c
 21728  005F18  6E1C               	movwf	(nwkSecurityProcessMic@mic+1)^0,c
 21729                           
 21730                           ; BSR set to: 0
 21731                           ;../nwk/nwk_src/nwkSecurity.c: 163:   uint32_t vmic = nwkSecurityVector[0] ^ nwkSecurity
      +                          Vector[1] ^
 21732  005F1A  0101               	movlb	1	; () banked
 21733  005F1C  5171               	movf	(_nwkSecurityVector+8)& (0+255),w,b
 21734  005F1E  196D               	xorwf	(_nwkSecurityVector+4)& (0+255),w,b
 21735  005F20  6E13               	movwf	??_nwkSecurityProcessMic^0,c
 21736  005F22  5172               	movf	(_nwkSecurityVector+9)& (0+255),w,b
 21737  005F24  196E               	xorwf	(_nwkSecurityVector+5)& (0+255),w,b
 21738  005F26  6E14               	movwf	(??_nwkSecurityProcessMic+1)^0,c
 21739  005F28  5173               	movf	(_nwkSecurityVector+10)& (0+255),w,b
 21740  005F2A  196F               	xorwf	(_nwkSecurityVector+6)& (0+255),w,b
 21741  005F2C  6E15               	movwf	(??_nwkSecurityProcessMic+2)^0,c
 21742  005F2E  5174               	movf	(_nwkSecurityVector+11)& (0+255),w,b
 21743  005F30  1970               	xorwf	(_nwkSecurityVector+7)& (0+255),w,b
 21744  005F32  6E16               	movwf	(??_nwkSecurityProcessMic+3)^0,c
 21745  005F34  5175               	movf	(_nwkSecurityVector+12)& (0+255),w,b
 21746  005F36  1813               	xorwf	??_nwkSecurityProcessMic^0,w,c
 21747  005F38  6E17               	movwf	(??_nwkSecurityProcessMic+4)^0,c
 21748  005F3A  5176               	movf	(_nwkSecurityVector+13)& (0+255),w,b
 21749  005F3C  1814               	xorwf	(??_nwkSecurityProcessMic+1)^0,w,c
 21750  005F3E  6E18               	movwf	(??_nwkSecurityProcessMic+5)^0,c
 21751  005F40  5177               	movf	(_nwkSecurityVector+14)& (0+255),w,b
 21752  005F42  1815               	xorwf	(??_nwkSecurityProcessMic+2)^0,w,c
 21753  005F44  6E19               	movwf	(??_nwkSecurityProcessMic+6)^0,c
 21754  005F46  5178               	movf	(_nwkSecurityVector+15)& (0+255),w,b
 21755  005F48  1816               	xorwf	(??_nwkSecurityProcessMic+3)^0,w,c
 21756  005F4A  6E1A               	movwf	(??_nwkSecurityProcessMic+7)^0,c
 21757  005F4C  5169               	movf	_nwkSecurityVector& (0+255),w,b
 21758  005F4E  1817               	xorwf	(??_nwkSecurityProcessMic+4)^0,w,c
 21759  005F50  6E1D               	movwf	nwkSecurityProcessMic@vmic^0,c
 21760  005F52  516A               	movf	(_nwkSecurityVector+1)& (0+255),w,b
 21761  005F54  1818               	xorwf	(??_nwkSecurityProcessMic+5)^0,w,c
 21762  005F56  6E1E               	movwf	(nwkSecurityProcessMic@vmic+1)^0,c
 21763  005F58  516B               	movf	(_nwkSecurityVector+2)& (0+255),w,b
 21764  005F5A  1819               	xorwf	(??_nwkSecurityProcessMic+6)^0,w,c
 21765  005F5C  6E1F               	movwf	(nwkSecurityProcessMic@vmic+2)^0,c
 21766  005F5E  516C               	movf	(_nwkSecurityVector+3)& (0+255),w,b
 21767  005F60  181A               	xorwf	(??_nwkSecurityProcessMic+7)^0,w,c
 21768  005F62  6E20               	movwf	(nwkSecurityProcessMic@vmic+3)^0,c
 21769                           
 21770                           ; BSR set to: 1
 21771                           ;../nwk/nwk_src/nwkSecurity.c: 165:   uint32_t tmic;;../nwk/nwk_src/nwkSecurity.c: 167: 
      +                            if (nwkSecurityEncrypt)
 21772  005F64  0100               	movlb	0	; () banked
 21773  005F66  51C7               	movf	_nwkSecurityEncrypt& (0+255),w,b
 21774  005F68  B4D8               	btfsc	status,2,c
 21775  005F6A  D01A               	goto	l16212
 21776                           
 21777                           ; BSR set to: 0
 21778                           ;../nwk/nwk_src/nwkSecurity.c: 168:   {;../nwk/nwk_src/nwkSecurity.c: 169:     memcpy(mi
      +                          c, (uint8_t *)&vmic, 4);
 21779  005F6C  0060  F06C  F008   	movff	nwkSecurityProcessMic@mic,memcpy@d1
 21780  005F72  0060  F070  F009   	movff	nwkSecurityProcessMic@mic+1,memcpy@d1+1
 21781  005F78  0E1D               	movlw	low nwkSecurityProcessMic@vmic
 21782  005F7A  6E0A               	movwf	memcpy@s1^0,c
 21783  005F7C  6A0B               	clrf	(memcpy@s1+1)^0,c
 21784  005F7E  0E00               	movlw	0
 21785  005F80  6E0D               	movwf	(memcpy@n+1)^0,c
 21786  005F82  0E04               	movlw	4
 21787  005F84  6E0C               	movwf	memcpy@n^0,c
 21788  005F86  EC95  F03F         	call	_memcpy	;wreg free
 21789                           
 21790                           ;../nwk/nwk_src/nwkSecurity.c: 170:     nwkSecurityActiveFrame->size += 4;
 21791  005F8A  0100               	movlb	0	; () banked
 21792  005F8C  EE20 F001          	lfsr	2,1
 21793  005F90  51BF               	movf	_nwkSecurityActiveFrame& (0+255),w,b
 21794  005F92  26D9               	addwf	fsr2l,f,c
 21795  005F94  51C0               	movf	(_nwkSecurityActiveFrame+1)& (0+255),w,b
 21796  005F96  22DA               	addwfc	fsr2h,f,c
 21797  005F98  0E04               	movlw	4
 21798  005F9A  26DF               	addwf	indf2,f,c
 21799                           
 21800                           ; BSR set to: 0
 21801                           ;../nwk/nwk_src/nwkSecurity.c: 171:     return 1;
 21802  005F9C  0E01               	movlw	1
 21803  005F9E  0012               	return	
 21804  005FA0                     l16212:
 21805                           
 21806                           ; BSR set to: 0
 21807                           ;../nwk/nwk_src/nwkSecurity.c: 174:   {;../nwk/nwk_src/nwkSecurity.c: 175:     memcpy((u
      +                          int8_t *)&tmic, mic, 4);
 21808  005FA0  0E21               	movlw	low nwkSecurityProcessMic@tmic
 21809  005FA2  6E08               	movwf	memcpy@d1^0,c
 21810  005FA4  6A09               	clrf	(memcpy@d1+1)^0,c
 21811  005FA6  0060  F06C  F00A   	movff	nwkSecurityProcessMic@mic,memcpy@s1
 21812  005FAC  0060  F070  F00B   	movff	nwkSecurityProcessMic@mic+1,memcpy@s1+1
 21813  005FB2  0E00               	movlw	0
 21814  005FB4  6E0D               	movwf	(memcpy@n+1)^0,c
 21815  005FB6  0E04               	movlw	4
 21816  005FB8  6E0C               	movwf	memcpy@n^0,c
 21817  005FBA  EC95  F03F         	call	_memcpy	;wreg free
 21818                           
 21819                           ;../nwk/nwk_src/nwkSecurity.c: 176:     return vmic == tmic;
 21820  005FBE  5021               	movf	nwkSecurityProcessMic@tmic^0,w,c
 21821  005FC0  181D               	xorwf	nwkSecurityProcessMic@vmic^0,w,c
 21822  005FC2  E10C               	bnz	u16610
 21823  005FC4  5022               	movf	(nwkSecurityProcessMic@tmic+1)^0,w,c
 21824  005FC6  181E               	xorwf	(nwkSecurityProcessMic@vmic+1)^0,w,c
 21825  005FC8  E109               	bnz	u16610
 21826  005FCA  5023               	movf	(nwkSecurityProcessMic@tmic+2)^0,w,c
 21827  005FCC  181F               	xorwf	(nwkSecurityProcessMic@vmic+2)^0,w,c
 21828  005FCE  E106               	bnz	u16610
 21829  005FD0  5024               	movf	(nwkSecurityProcessMic@tmic+3)^0,w,c
 21830  005FD2  1820               	xorwf	(nwkSecurityProcessMic@vmic+3)^0,w,c
 21831  005FD4  A4D8               	btfss	status,2,c
 21832  005FD6  D002               	goto	u16610
 21833  005FD8  0E01               	movlw	1
 21834  005FDA  0012               	return	
 21835  005FDC                     u16610:
 21836  005FDC  0E00               	movlw	0
 21837  005FDE  0012               	return		;funcret
 21838  005FE0                     __end_of_nwkSecurityProcessMic:
 21839                           	opt callstack 0
 21840                           
 21841 ;; *************** function _nwkRxDecryptConf *****************
 21842 ;; Defined at:
 21843 ;;		line 170 in file "../nwk/nwk_src/nwkRx.c"
 21844 ;; Parameters:    Size  Location     Type
 21845 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 21846 ;;		 -> nwkFrameFrames(685), NULL(0), 
 21847 ;;  status          1    3[COMRAM] _Bool 
 21848 ;; Auto vars:     Size  Location     Type
 21849 ;;		None
 21850 ;; Return value:  Size  Location     Type
 21851 ;;                  1    wreg      void 
 21852 ;; Registers used:
 21853 ;;		wreg, fsr2l, fsr2h, status,2
 21854 ;; Tracked objects:
 21855 ;;		On entry : 3F/0
 21856 ;;		On exit  : 3F/0
 21857 ;;		Unchanged: 3F/0
 21858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21859 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21862 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21863 ;;Total ram usage:        3 bytes
 21864 ;; Hardware stack levels used:    1
 21865 ;; Hardware stack levels required when called:    7
 21866 ;; This function calls:
 21867 ;;		Nothing
 21868 ;; This function is called by:
 21869 ;;		_nwkSecurityTaskHandler
 21870 ;; This function uses a non-reentrant model
 21871 ;;
 21872                           
 21873                           	psect	text136
 21874  009312                     __ptext136:
 21875                           	opt callstack 0
 21876  009312                     _nwkRxDecryptConf:
 21877                           	opt callstack 20
 21878                           
 21879                           ; BSR set to: 0
 21880                           ;../nwk/nwk_src/nwkRx.c: 170: void nwkRxDecryptConf(NwkFrame_t *frame, _Bool status);../
      +                          nwk/nwk_src/nwkRx.c: 171: {;../nwk/nwk_src/nwkRx.c: 172:   if (status)
 21881                           
 21882                           ;incstack = 0
 21883  009312  5004               	movf	nwkRxDecryptConf@status^0,w,c
 21884  009314  B4D8               	btfsc	status,2,c
 21885  009316  D009               	goto	l12040
 21886                           
 21887                           ; BSR set to: 0
 21888                           ;../nwk/nwk_src/nwkRx.c: 173:     frame->state = NWK_RX_STATE_INDICATE;
 21889  009318  0060  F00B  FFD9   	movff	nwkRxDecryptConf@frame,fsr2l
 21890  00931E  0060  F00F  FFDA   	movff	nwkRxDecryptConf@frame+1,fsr2h
 21891  009324  0E22               	movlw	34
 21892  009326  6EDF               	movwf	indf2,c
 21893  009328  0012               	return	
 21894  00932A                     l12040:
 21895                           
 21896                           ; BSR set to: 0
 21897                           ;../nwk/nwk_src/nwkRx.c: 175:     frame->state = NWK_RX_STATE_FINISH;
 21898  00932A  0060  F00B  FFD9   	movff	nwkRxDecryptConf@frame,fsr2l
 21899  009330  0060  F00F  FFDA   	movff	nwkRxDecryptConf@frame+1,fsr2h
 21900  009336  0E24               	movlw	36
 21901  009338  6EDF               	movwf	indf2,c
 21902                           
 21903                           ; BSR set to: 0
 21904  00933A  0012               	return		;funcret
 21905  00933C                     __end_of_nwkRxDecryptConf:
 21906                           	opt callstack 0
 21907                           
 21908 ;; *************** function _SYS_EncryptReq *****************
 21909 ;; Defined at:
 21910 ;;		line 81 in file "../sys/sys_src/sysEncrypt.c"
 21911 ;; Parameters:    Size  Location     Type
 21912 ;;  text            2   53[COMRAM] PTR unsigned char 
 21913 ;;		 -> nwkSecurityVector(16), 
 21914 ;;  key             2   55[COMRAM] PTR unsigned char 
 21915 ;;		 -> nwkIb(56), 
 21916 ;; Auto vars:     Size  Location     Type
 21917 ;;		None
 21918 ;; Return value:  Size  Location     Type
 21919 ;;                  1    wreg      void 
 21920 ;; Registers used:
 21921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 21922 ;; Tracked objects:
 21923 ;;		On entry : 3F/0
 21924 ;;		On exit  : 3F/0
 21925 ;;		Unchanged: 0/0
 21926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21927 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21929 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21930 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21931 ;;Total ram usage:        5 bytes
 21932 ;; Hardware stack levels used:    1
 21933 ;; Hardware stack levels required when called:    8
 21934 ;; This function calls:
 21935 ;;		_SYS_EncryptConf
 21936 ;;		_xtea
 21937 ;; This function is called by:
 21938 ;;		_nwkSecurityTaskHandler
 21939 ;; This function uses a non-reentrant model
 21940 ;;
 21941                           
 21942                           	psect	text137
 21943  007E30                     __ptext137:
 21944                           	opt callstack 0
 21945  007E30                     _SYS_EncryptReq:
 21946                           	opt callstack 19
 21947                           
 21948                           ; BSR set to: 0
 21949                           ;../sys/sys_src/sysEncrypt.c: 81: void SYS_EncryptReq(uint8_t *text, uint8_t *key);../sy
      +                          s/sys_src/sysEncrypt.c: 82: {;../sys/sys_src/sysEncrypt.c: 87:   xtea(&text[0], key);
 21950                           
 21951                           ; BSR set to: 0
 21952                           ;incstack = 0
 21953  007E30  0060  F0D8  F002   	movff	SYS_EncryptReq@text,xtea@text
 21954  007E36  0060  F0DC  F003   	movff	SYS_EncryptReq@text+1,xtea@text+1
 21955  007E3C  0060  F0E0  F004   	movff	SYS_EncryptReq@key,xtea@key
 21956  007E42  0060  F0E4  F005   	movff	SYS_EncryptReq@key+1,xtea@key+1
 21957  007E48  EC50  F010         	call	_xtea	;wreg free
 21958                           
 21959                           ;../sys/sys_src/sysEncrypt.c: 88:   text[2] ^= text[0];
 21960  007E4C  0060  F0DB  FFD9   	movff	SYS_EncryptReq@text,fsr2l
 21961  007E52  0060  F0DF  FFDA   	movff	SYS_EncryptReq@text+1,fsr2h
 21962  007E58  50DF               	movf	indf2,w,c
 21963  007E5A  6E3A               	movwf	??_SYS_EncryptReq^0,c
 21964  007E5C  EE20 F002          	lfsr	2,2
 21965  007E60  5036               	movf	SYS_EncryptReq@text^0,w,c
 21966  007E62  26D9               	addwf	fsr2l,f,c
 21967  007E64  5037               	movf	(SYS_EncryptReq@text+1)^0,w,c
 21968  007E66  22DA               	addwfc	fsr2h,f,c
 21969  007E68  503A               	movf	??_SYS_EncryptReq^0,w,c
 21970  007E6A  1ADF               	xorwf	indf2,f,c
 21971                           
 21972                           ;../sys/sys_src/sysEncrypt.c: 89:   text[3] ^= text[1];
 21973  007E6C  EE20 F001          	lfsr	2,1
 21974  007E70  5036               	movf	SYS_EncryptReq@text^0,w,c
 21975  007E72  26D9               	addwf	fsr2l,f,c
 21976  007E74  5037               	movf	(SYS_EncryptReq@text+1)^0,w,c
 21977  007E76  22DA               	addwfc	fsr2h,f,c
 21978  007E78  50DF               	movf	indf2,w,c
 21979  007E7A  6E3A               	movwf	??_SYS_EncryptReq^0,c
 21980  007E7C  EE20 F003          	lfsr	2,3
 21981  007E80  5036               	movf	SYS_EncryptReq@text^0,w,c
 21982  007E82  26D9               	addwf	fsr2l,f,c
 21983  007E84  5037               	movf	(SYS_EncryptReq@text+1)^0,w,c
 21984  007E86  22DA               	addwfc	fsr2h,f,c
 21985  007E88  503A               	movf	??_SYS_EncryptReq^0,w,c
 21986  007E8A  1ADF               	xorwf	indf2,f,c
 21987                           
 21988                           ;../sys/sys_src/sysEncrypt.c: 90:   xtea(&text[2], key);
 21989  007E8C  0E02               	movlw	2
 21990  007E8E  2436               	addwf	SYS_EncryptReq@text^0,w,c
 21991  007E90  6E02               	movwf	xtea@text^0,c
 21992  007E92  0E00               	movlw	0
 21993  007E94  2037               	addwfc	(SYS_EncryptReq@text+1)^0,w,c
 21994  007E96  6E03               	movwf	(xtea@text+1)^0,c
 21995  007E98  0060  F0E0  F004   	movff	SYS_EncryptReq@key,xtea@key
 21996  007E9E  0060  F0E4  F005   	movff	SYS_EncryptReq@key+1,xtea@key+1
 21997  007EA4  EC50  F010         	call	_xtea	;wreg free
 21998                           
 21999                           ;../sys/sys_src/sysEncrypt.c: 94:   SYS_EncryptConf();
 22000  007EA8  EC98  F02D         	call	_SYS_EncryptConf	;wreg free
 22001                           
 22002                           ; BSR set to: 0
 22003  007EAC  0012               	return		;funcret
 22004  007EAE                     __end_of_SYS_EncryptReq:
 22005                           	opt callstack 0
 22006                           
 22007 ;; *************** function _xtea *****************
 22008 ;; Defined at:
 22009 ;;		line 61 in file "../sys/sys_src/sysEncrypt.c"
 22010 ;; Parameters:    Size  Location     Type
 22011 ;;  text            2    1[COMRAM] PTR unsigned long 
 22012 ;;		 -> nwkSecurityVector(16), 
 22013 ;;  key             2    3[COMRAM] PTR const unsigned long 
 22014 ;;		 -> nwkIb(56), 
 22015 ;; Auto vars:     Size  Location     Type
 22016 ;;  i               1   40[COMRAM] unsigned char 
 22017 ;;  sum             4   49[COMRAM] unsigned long 
 22018 ;;  t1              4   45[COMRAM] unsigned long 
 22019 ;;  t0              4   41[COMRAM] unsigned long 
 22020 ;;  delta           4   36[COMRAM] unsigned long 
 22021 ;; Return value:  Size  Location     Type
 22022 ;;                  1    wreg      void 
 22023 ;; Registers used:
 22024 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22025 ;; Tracked objects:
 22026 ;;		On entry : 0/0
 22027 ;;		On exit  : 0/0
 22028 ;;		Unchanged: 0/0
 22029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22030 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22031 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22032 ;;      Temps:         31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22033 ;;      Totals:        52       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22034 ;;Total ram usage:       52 bytes
 22035 ;; Hardware stack levels used:    1
 22036 ;; Hardware stack levels required when called:    7
 22037 ;; This function calls:
 22038 ;;		Nothing
 22039 ;; This function is called by:
 22040 ;;		_SYS_EncryptReq
 22041 ;; This function uses a non-reentrant model
 22042 ;;
 22043                           
 22044                           	psect	text138
 22045  0020A0                     __ptext138:
 22046                           	opt callstack 0
 22047  0020A0                     _xtea:
 22048                           	opt callstack 19
 22049                           
 22050                           ;../sys/sys_src/sysEncrypt.c: 61: static void xtea(uint32_t text[2], uint32_t const key[
      +                          4]);../sys/sys_src/sysEncrypt.c: 62: {;../sys/sys_src/sysEncrypt.c: 63:   uint32_t t0 = 
      +                          text[0];
 22051                           
 22052                           ; BSR set to: 0
 22053                           ;incstack = 0
 22054  0020A0  0060  F00B  FFD9   	movff	xtea@text,fsr2l
 22055  0020A6  0060  F00F  FFDA   	movff	xtea@text+1,fsr2h
 22056  0020AC  006F FF78  F02A    	movff	postinc2,xtea@t0
 22057  0020B2  006F FF78  F02B    	movff	postinc2,xtea@t0+1
 22058  0020B8  006F FF78  F02C    	movff	postinc2,xtea@t0+2
 22059  0020BE  006F FF78  F02D    	movff	postinc2,xtea@t0+3
 22060                           
 22061                           ;../sys/sys_src/sysEncrypt.c: 64:   uint32_t t1 = text[1];
 22062  0020C4  EE20 F004          	lfsr	2,4
 22063  0020C8  5002               	movf	xtea@text^0,w,c
 22064  0020CA  26D9               	addwf	fsr2l,f,c
 22065  0020CC  5003               	movf	(xtea@text+1)^0,w,c
 22066  0020CE  22DA               	addwfc	fsr2h,f,c
 22067  0020D0  006F FF78  F02E    	movff	postinc2,xtea@t1
 22068  0020D6  006F FF78  F02F    	movff	postinc2,xtea@t1+1
 22069  0020DC  006F FF78  F030    	movff	postinc2,xtea@t1+2
 22070  0020E2  006F FF78  F031    	movff	postinc2,xtea@t1+3
 22071                           
 22072                           ;../sys/sys_src/sysEncrypt.c: 65:   uint32_t sum = 0;
 22073  0020E8  0E00               	movlw	0
 22074  0020EA  6E32               	movwf	xtea@sum^0,c
 22075  0020EC  0E00               	movlw	0
 22076  0020EE  6E33               	movwf	(xtea@sum+1)^0,c
 22077  0020F0  0E00               	movlw	0
 22078  0020F2  6E34               	movwf	(xtea@sum+2)^0,c
 22079  0020F4  0E00               	movlw	0
 22080  0020F6  6E35               	movwf	(xtea@sum+3)^0,c
 22081                           
 22082                           ;../sys/sys_src/sysEncrypt.c: 66:   uint32_t delta = 0x9e3779b9;
 22083  0020F8  0EB9               	movlw	185
 22084  0020FA  6E25               	movwf	xtea@delta^0,c
 22085  0020FC  0E79               	movlw	121
 22086  0020FE  6E26               	movwf	(xtea@delta+1)^0,c
 22087  002100  0E37               	movlw	55
 22088  002102  6E27               	movwf	(xtea@delta+2)^0,c
 22089  002104  0E9E               	movlw	158
 22090  002106  6E28               	movwf	(xtea@delta+3)^0,c
 22091                           
 22092                           ;../sys/sys_src/sysEncrypt.c: 68:   for (uint8_t i = 0; i < 32; i++)
 22093  002108  0E00               	movlw	0
 22094  00210A  6E29               	movwf	xtea@i^0,c
 22095  00210C                     l15654:
 22096                           
 22097                           ;../sys/sys_src/sysEncrypt.c: 69:   {;../sys/sys_src/sysEncrypt.c: 70:     t0 += (((t1 <
      +                          < 4) ^ (t1 >> 5)) + t1) ^ (sum + key[sum & 3]);
 22098  00210C  0E03               	movlw	3
 22099  00210E  1432               	andwf	xtea@sum^0,w,c
 22100  002110  6E06               	movwf	??_xtea^0,c
 22101  002112  0E00               	movlw	0
 22102  002114  1433               	andwf	(xtea@sum+1)^0,w,c
 22103  002116  6E07               	movwf	(??_xtea+1)^0,c
 22104  002118  90D8               	bcf	status,0,c
 22105  00211A  3606               	rlcf	??_xtea^0,f,c
 22106  00211C  3607               	rlcf	(??_xtea+1)^0,f,c
 22107  00211E  90D8               	bcf	status,0,c
 22108  002120  3606               	rlcf	??_xtea^0,f,c
 22109  002122  3607               	rlcf	(??_xtea+1)^0,f,c
 22110  002124  5006               	movf	??_xtea^0,w,c
 22111  002126  2404               	addwf	xtea@key^0,w,c
 22112  002128  6ED9               	movwf	fsr2l,c
 22113  00212A  5007               	movf	(??_xtea+1)^0,w,c
 22114  00212C  2005               	addwfc	(xtea@key+1)^0,w,c
 22115  00212E  6EDA               	movwf	fsr2h,c
 22116  002130  006F FF78  F008    	movff	postinc2,??_xtea+2
 22117  002136  006F FF78  F009    	movff	postinc2,??_xtea+3
 22118  00213C  006F FF78  F00A    	movff	postinc2,??_xtea+4
 22119  002142  006F FF78  F00B    	movff	postinc2,??_xtea+5
 22120  002148  5032               	movf	xtea@sum^0,w,c
 22121  00214A  2408               	addwf	(??_xtea+2)^0,w,c
 22122  00214C  6E0C               	movwf	(??_xtea+6)^0,c
 22123  00214E  5033               	movf	(xtea@sum+1)^0,w,c
 22124  002150  2009               	addwfc	(??_xtea+3)^0,w,c
 22125  002152  6E0D               	movwf	(??_xtea+7)^0,c
 22126  002154  5034               	movf	(xtea@sum+2)^0,w,c
 22127  002156  200A               	addwfc	(??_xtea+4)^0,w,c
 22128  002158  6E0E               	movwf	(??_xtea+8)^0,c
 22129  00215A  5035               	movf	(xtea@sum+3)^0,w,c
 22130  00215C  200B               	addwfc	(??_xtea+5)^0,w,c
 22131  00215E  6E0F               	movwf	(??_xtea+9)^0,c
 22132  002160  0060  F0B8  F010   	movff	xtea@t1,??_xtea+10
 22133  002166  0060  F0BC  F011   	movff	xtea@t1+1,??_xtea+11
 22134  00216C  0060  F0C0  F012   	movff	xtea@t1+2,??_xtea+12
 22135  002172  0060  F0C4  F013   	movff	xtea@t1+3,??_xtea+13
 22136  002178  0E06               	movlw	6
 22137  00217A  D005               	goto	u15400
 22138  00217C                     u15405:
 22139  00217C  90D8               	bcf	status,0,c
 22140  00217E  3213               	rrcf	(??_xtea+13)^0,f,c
 22141  002180  3212               	rrcf	(??_xtea+12)^0,f,c
 22142  002182  3211               	rrcf	(??_xtea+11)^0,f,c
 22143  002184  3210               	rrcf	(??_xtea+10)^0,f,c
 22144  002186                     u15400:
 22145  002186  2EE8               	decfsz	wreg,f,c
 22146  002188  D7F9               	goto	u15405
 22147  00218A  0060  F0B8  F014   	movff	xtea@t1,??_xtea+14
 22148  002190  0060  F0BC  F015   	movff	xtea@t1+1,??_xtea+15
 22149  002196  0060  F0C0  F016   	movff	xtea@t1+2,??_xtea+16
 22150  00219C  0060  F0C4  F017   	movff	xtea@t1+3,??_xtea+17
 22151  0021A2  0E04               	movlw	4
 22152  0021A4                     u15415:
 22153  0021A4  90D8               	bcf	status,0,c
 22154  0021A6  3614               	rlcf	(??_xtea+14)^0,f,c
 22155  0021A8  3615               	rlcf	(??_xtea+15)^0,f,c
 22156  0021AA  3616               	rlcf	(??_xtea+16)^0,f,c
 22157  0021AC  3617               	rlcf	(??_xtea+17)^0,f,c
 22158  0021AE  2EE8               	decfsz	wreg,f,c
 22159  0021B0  D7F9               	goto	u15415
 22160  0021B2  5010               	movf	(??_xtea+10)^0,w,c
 22161  0021B4  1814               	xorwf	(??_xtea+14)^0,w,c
 22162  0021B6  6E18               	movwf	(??_xtea+18)^0,c
 22163  0021B8  5011               	movf	(??_xtea+11)^0,w,c
 22164  0021BA  1815               	xorwf	(??_xtea+15)^0,w,c
 22165  0021BC  6E19               	movwf	(??_xtea+19)^0,c
 22166  0021BE  5012               	movf	(??_xtea+12)^0,w,c
 22167  0021C0  1816               	xorwf	(??_xtea+16)^0,w,c
 22168  0021C2  6E1A               	movwf	(??_xtea+20)^0,c
 22169  0021C4  5013               	movf	(??_xtea+13)^0,w,c
 22170  0021C6  1817               	xorwf	(??_xtea+17)^0,w,c
 22171  0021C8  6E1B               	movwf	(??_xtea+21)^0,c
 22172  0021CA  502E               	movf	xtea@t1^0,w,c
 22173  0021CC  2418               	addwf	(??_xtea+18)^0,w,c
 22174  0021CE  6E1C               	movwf	(??_xtea+22)^0,c
 22175  0021D0  502F               	movf	(xtea@t1+1)^0,w,c
 22176  0021D2  2019               	addwfc	(??_xtea+19)^0,w,c
 22177  0021D4  6E1D               	movwf	(??_xtea+23)^0,c
 22178  0021D6  5030               	movf	(xtea@t1+2)^0,w,c
 22179  0021D8  201A               	addwfc	(??_xtea+20)^0,w,c
 22180  0021DA  6E1E               	movwf	(??_xtea+24)^0,c
 22181  0021DC  5031               	movf	(xtea@t1+3)^0,w,c
 22182  0021DE  201B               	addwfc	(??_xtea+21)^0,w,c
 22183  0021E0  6E1F               	movwf	(??_xtea+25)^0,c
 22184  0021E2  500C               	movf	(??_xtea+6)^0,w,c
 22185  0021E4  181C               	xorwf	(??_xtea+22)^0,w,c
 22186  0021E6  6E20               	movwf	(??_xtea+26)^0,c
 22187  0021E8  500D               	movf	(??_xtea+7)^0,w,c
 22188  0021EA  181D               	xorwf	(??_xtea+23)^0,w,c
 22189  0021EC  6E21               	movwf	(??_xtea+27)^0,c
 22190  0021EE  500E               	movf	(??_xtea+8)^0,w,c
 22191  0021F0  181E               	xorwf	(??_xtea+24)^0,w,c
 22192  0021F2  6E22               	movwf	(??_xtea+28)^0,c
 22193  0021F4  500F               	movf	(??_xtea+9)^0,w,c
 22194  0021F6  181F               	xorwf	(??_xtea+25)^0,w,c
 22195  0021F8  6E23               	movwf	(??_xtea+29)^0,c
 22196  0021FA  5020               	movf	(??_xtea+26)^0,w,c
 22197  0021FC  262A               	addwf	xtea@t0^0,f,c
 22198  0021FE  5021               	movf	(??_xtea+27)^0,w,c
 22199  002200  222B               	addwfc	(xtea@t0+1)^0,f,c
 22200  002202  5022               	movf	(??_xtea+28)^0,w,c
 22201  002204  222C               	addwfc	(xtea@t0+2)^0,f,c
 22202  002206  5023               	movf	(??_xtea+29)^0,w,c
 22203  002208  222D               	addwfc	(xtea@t0+3)^0,f,c
 22204                           
 22205                           ;../sys/sys_src/sysEncrypt.c: 71:     sum += delta;
 22206  00220A  5025               	movf	xtea@delta^0,w,c
 22207  00220C  2632               	addwf	xtea@sum^0,f,c
 22208  00220E  5026               	movf	(xtea@delta+1)^0,w,c
 22209  002210  2233               	addwfc	(xtea@sum+1)^0,f,c
 22210  002212  5027               	movf	(xtea@delta+2)^0,w,c
 22211  002214  2234               	addwfc	(xtea@sum+2)^0,f,c
 22212  002216  5028               	movf	(xtea@delta+3)^0,w,c
 22213  002218  2235               	addwfc	(xtea@sum+3)^0,f,c
 22214                           
 22215                           ;../sys/sys_src/sysEncrypt.c: 72:     t1 += (((t0 << 4) ^ (t0 >> 5)) + t0) ^ (sum + key[
      +                          (sum >> 11) & 3]);
 22216  00221A  0060  F0C8  F006   	movff	xtea@sum,??_xtea
 22217  002220  0060  F0CC  F007   	movff	xtea@sum+1,??_xtea+1
 22218  002226  0E0B               	movlw	11
 22219  002228  6E08               	movwf	(??_xtea+2)^0,c
 22220  00222A                     u15425:
 22221  00222A  90D8               	bcf	status,0,c
 22222  00222C  3207               	rrcf	(??_xtea+1)^0,f,c
 22223  00222E  3206               	rrcf	??_xtea^0,f,c
 22224  002230  2E08               	decfsz	(??_xtea+2)^0,f,c
 22225  002232  D7FB               	goto	u15425
 22226  002234  0E03               	movlw	3
 22227  002236  1606               	andwf	??_xtea^0,f,c
 22228  002238  0E00               	movlw	0
 22229  00223A  1607               	andwf	(??_xtea+1)^0,f,c
 22230  00223C  90D8               	bcf	status,0,c
 22231  00223E  3606               	rlcf	??_xtea^0,f,c
 22232  002240  3607               	rlcf	(??_xtea+1)^0,f,c
 22233  002242  90D8               	bcf	status,0,c
 22234  002244  3606               	rlcf	??_xtea^0,f,c
 22235  002246  3607               	rlcf	(??_xtea+1)^0,f,c
 22236  002248  5006               	movf	??_xtea^0,w,c
 22237  00224A  2404               	addwf	xtea@key^0,w,c
 22238  00224C  6ED9               	movwf	fsr2l,c
 22239  00224E  5007               	movf	(??_xtea+1)^0,w,c
 22240  002250  2005               	addwfc	(xtea@key+1)^0,w,c
 22241  002252  6EDA               	movwf	fsr2h,c
 22242  002254  006F FF78  F009    	movff	postinc2,??_xtea+3
 22243  00225A  006F FF78  F00A    	movff	postinc2,??_xtea+4
 22244  002260  006F FF78  F00B    	movff	postinc2,??_xtea+5
 22245  002266  006F FF78  F00C    	movff	postinc2,??_xtea+6
 22246  00226C  5032               	movf	xtea@sum^0,w,c
 22247  00226E  2409               	addwf	(??_xtea+3)^0,w,c
 22248  002270  6E0D               	movwf	(??_xtea+7)^0,c
 22249  002272  5033               	movf	(xtea@sum+1)^0,w,c
 22250  002274  200A               	addwfc	(??_xtea+4)^0,w,c
 22251  002276  6E0E               	movwf	(??_xtea+8)^0,c
 22252  002278  5034               	movf	(xtea@sum+2)^0,w,c
 22253  00227A  200B               	addwfc	(??_xtea+5)^0,w,c
 22254  00227C  6E0F               	movwf	(??_xtea+9)^0,c
 22255  00227E  5035               	movf	(xtea@sum+3)^0,w,c
 22256  002280  200C               	addwfc	(??_xtea+6)^0,w,c
 22257  002282  6E10               	movwf	(??_xtea+10)^0,c
 22258  002284  0060  F0A8  F011   	movff	xtea@t0,??_xtea+11
 22259  00228A  0060  F0AC  F012   	movff	xtea@t0+1,??_xtea+12
 22260  002290  0060  F0B0  F013   	movff	xtea@t0+2,??_xtea+13
 22261  002296  0060  F0B4  F014   	movff	xtea@t0+3,??_xtea+14
 22262  00229C  0E06               	movlw	6
 22263  00229E  D005               	goto	u15430
 22264  0022A0                     u15435:
 22265  0022A0  90D8               	bcf	status,0,c
 22266  0022A2  3214               	rrcf	(??_xtea+14)^0,f,c
 22267  0022A4  3213               	rrcf	(??_xtea+13)^0,f,c
 22268  0022A6  3212               	rrcf	(??_xtea+12)^0,f,c
 22269  0022A8  3211               	rrcf	(??_xtea+11)^0,f,c
 22270  0022AA                     u15430:
 22271  0022AA  2EE8               	decfsz	wreg,f,c
 22272  0022AC  D7F9               	goto	u15435
 22273  0022AE  0060  F0A8  F015   	movff	xtea@t0,??_xtea+15
 22274  0022B4  0060  F0AC  F016   	movff	xtea@t0+1,??_xtea+16
 22275  0022BA  0060  F0B0  F017   	movff	xtea@t0+2,??_xtea+17
 22276  0022C0  0060  F0B4  F018   	movff	xtea@t0+3,??_xtea+18
 22277  0022C6  0E04               	movlw	4
 22278  0022C8                     u15445:
 22279  0022C8  90D8               	bcf	status,0,c
 22280  0022CA  3615               	rlcf	(??_xtea+15)^0,f,c
 22281  0022CC  3616               	rlcf	(??_xtea+16)^0,f,c
 22282  0022CE  3617               	rlcf	(??_xtea+17)^0,f,c
 22283  0022D0  3618               	rlcf	(??_xtea+18)^0,f,c
 22284  0022D2  2EE8               	decfsz	wreg,f,c
 22285  0022D4  D7F9               	goto	u15445
 22286  0022D6  5011               	movf	(??_xtea+11)^0,w,c
 22287  0022D8  1815               	xorwf	(??_xtea+15)^0,w,c
 22288  0022DA  6E19               	movwf	(??_xtea+19)^0,c
 22289  0022DC  5012               	movf	(??_xtea+12)^0,w,c
 22290  0022DE  1816               	xorwf	(??_xtea+16)^0,w,c
 22291  0022E0  6E1A               	movwf	(??_xtea+20)^0,c
 22292  0022E2  5013               	movf	(??_xtea+13)^0,w,c
 22293  0022E4  1817               	xorwf	(??_xtea+17)^0,w,c
 22294  0022E6  6E1B               	movwf	(??_xtea+21)^0,c
 22295  0022E8  5014               	movf	(??_xtea+14)^0,w,c
 22296  0022EA  1818               	xorwf	(??_xtea+18)^0,w,c
 22297  0022EC  6E1C               	movwf	(??_xtea+22)^0,c
 22298  0022EE  502A               	movf	xtea@t0^0,w,c
 22299  0022F0  2419               	addwf	(??_xtea+19)^0,w,c
 22300  0022F2  6E1D               	movwf	(??_xtea+23)^0,c
 22301  0022F4  502B               	movf	(xtea@t0+1)^0,w,c
 22302  0022F6  201A               	addwfc	(??_xtea+20)^0,w,c
 22303  0022F8  6E1E               	movwf	(??_xtea+24)^0,c
 22304  0022FA  502C               	movf	(xtea@t0+2)^0,w,c
 22305  0022FC  201B               	addwfc	(??_xtea+21)^0,w,c
 22306  0022FE  6E1F               	movwf	(??_xtea+25)^0,c
 22307  002300  502D               	movf	(xtea@t0+3)^0,w,c
 22308  002302  201C               	addwfc	(??_xtea+22)^0,w,c
 22309  002304  6E20               	movwf	(??_xtea+26)^0,c
 22310  002306  500D               	movf	(??_xtea+7)^0,w,c
 22311  002308  181D               	xorwf	(??_xtea+23)^0,w,c
 22312  00230A  6E21               	movwf	(??_xtea+27)^0,c
 22313  00230C  500E               	movf	(??_xtea+8)^0,w,c
 22314  00230E  181E               	xorwf	(??_xtea+24)^0,w,c
 22315  002310  6E22               	movwf	(??_xtea+28)^0,c
 22316  002312  500F               	movf	(??_xtea+9)^0,w,c
 22317  002314  181F               	xorwf	(??_xtea+25)^0,w,c
 22318  002316  6E23               	movwf	(??_xtea+29)^0,c
 22319  002318  5010               	movf	(??_xtea+10)^0,w,c
 22320  00231A  1820               	xorwf	(??_xtea+26)^0,w,c
 22321  00231C  6E24               	movwf	(??_xtea+30)^0,c
 22322  00231E  5021               	movf	(??_xtea+27)^0,w,c
 22323  002320  262E               	addwf	xtea@t1^0,f,c
 22324  002322  5022               	movf	(??_xtea+28)^0,w,c
 22325  002324  222F               	addwfc	(xtea@t1+1)^0,f,c
 22326  002326  5023               	movf	(??_xtea+29)^0,w,c
 22327  002328  2230               	addwfc	(xtea@t1+2)^0,f,c
 22328  00232A  5024               	movf	(??_xtea+30)^0,w,c
 22329  00232C  2231               	addwfc	(xtea@t1+3)^0,f,c
 22330                           
 22331                           ;../sys/sys_src/sysEncrypt.c: 73:   }
 22332  00232E  2A29               	incf	xtea@i^0,f,c
 22333  002330  0E1F               	movlw	31
 22334  002332  6429               	cpfsgt	xtea@i^0,c
 22335  002334  D6EB               	goto	l15654
 22336                           
 22337                           ;../sys/sys_src/sysEncrypt.c: 74:   text[0] = t0;
 22338  002336  0060  F00B  FFD9   	movff	xtea@text,fsr2l
 22339  00233C  0060  F00F  FFDA   	movff	xtea@text+1,fsr2h
 22340  002342  0060  F0AB  FFDE   	movff	xtea@t0,postinc2
 22341  002348  0060  F0AF  FFDE   	movff	xtea@t0+1,postinc2
 22342  00234E  0060  F0B3  FFDE   	movff	xtea@t0+2,postinc2
 22343  002354  0060  F0B7  FFDE   	movff	xtea@t0+3,postinc2
 22344                           
 22345                           ;../sys/sys_src/sysEncrypt.c: 75:   text[1] = t1;
 22346  00235A  EE20 F004          	lfsr	2,4
 22347  00235E  5002               	movf	xtea@text^0,w,c
 22348  002360  26D9               	addwf	fsr2l,f,c
 22349  002362  5003               	movf	(xtea@text+1)^0,w,c
 22350  002364  22DA               	addwfc	fsr2h,f,c
 22351  002366  0060  F0BB  FFDE   	movff	xtea@t1,postinc2
 22352  00236C  0060  F0BF  FFDE   	movff	xtea@t1+1,postinc2
 22353  002372  0060  F0C3  FFDE   	movff	xtea@t1+2,postinc2
 22354  002378  0060  F0C7  FFDE   	movff	xtea@t1+3,postinc2
 22355  00237E  0012               	return		;funcret
 22356  002380                     __end_of_xtea:
 22357                           	opt callstack 0
 22358                           
 22359 ;; *************** function _SYS_EncryptConf *****************
 22360 ;; Defined at:
 22361 ;;		line 131 in file "../nwk/nwk_src/nwkSecurity.c"
 22362 ;; Parameters:    Size  Location     Type
 22363 ;;		None
 22364 ;; Auto vars:     Size  Location     Type
 22365 ;;  i               1   10[COMRAM] unsigned char 
 22366 ;;  text            2    7[COMRAM] PTR unsigned char 
 22367 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 22368 ;;  vector          2    5[COMRAM] PTR unsigned char 
 22369 ;;		 -> nwkSecurityVector(16), 
 22370 ;;  block           1    9[COMRAM] unsigned char 
 22371 ;; Return value:  Size  Location     Type
 22372 ;;                  1    wreg      void 
 22373 ;; Registers used:
 22374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 22375 ;; Tracked objects:
 22376 ;;		On entry : 0/0
 22377 ;;		On exit  : 3F/0
 22378 ;;		Unchanged: 0/0
 22379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22381 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22382 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22383 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22384 ;;Total ram usage:       10 bytes
 22385 ;; Hardware stack levels used:    1
 22386 ;; Hardware stack levels required when called:    7
 22387 ;; This function calls:
 22388 ;;		Nothing
 22389 ;; This function is called by:
 22390 ;;		_SYS_EncryptReq
 22391 ;; This function uses a non-reentrant model
 22392 ;;
 22393                           
 22394                           	psect	text139
 22395  005B30                     __ptext139:
 22396                           	opt callstack 0
 22397  005B30                     _SYS_EncryptConf:
 22398                           	opt callstack 19
 22399                           
 22400                           ;../nwk/nwk_src/nwkSecurity.c: 133:   uint8_t *vector = (uint8_t *)nwkSecurityVector;
 22401                           
 22402                           ;incstack = 0
 22403  005B30  0E69               	movlw	low _nwkSecurityVector
 22404  005B32  6E06               	movwf	SYS_EncryptConf@vector^0,c
 22405  005B34  0E01               	movlw	high _nwkSecurityVector
 22406  005B36  6E07               	movwf	(SYS_EncryptConf@vector+1)^0,c
 22407                           
 22408                           ;../nwk/nwk_src/nwkSecurity.c: 134:   uint8_t *text = &nwkSecurityActiveFrame->payload[n
      +                          wkSecurityOffset];
 22409  005B38  0100               	movlb	0	; () banked
 22410  005B3A  EE20 F081          	lfsr	2,129
 22411  005B3E  51BF               	movf	_nwkSecurityActiveFrame& (0+255),w,b
 22412  005B40  26D9               	addwf	fsr2l,f,c
 22413  005B42  51C0               	movf	(_nwkSecurityActiveFrame+1)& (0+255),w,b
 22414  005B44  22DA               	addwfc	fsr2h,f,c
 22415  005B46  006F FF78  F002    	movff	postinc2,??_SYS_EncryptConf
 22416  005B4C  006F FF74  F003    	movff	postdec2,??_SYS_EncryptConf+1
 22417  005B52  51C8               	movf	_nwkSecurityOffset& (0+255),w,b
 22418  005B54  2402               	addwf	??_SYS_EncryptConf^0,w,c
 22419  005B56  6E08               	movwf	SYS_EncryptConf@text^0,c
 22420  005B58  0E00               	movlw	0
 22421  005B5A  2003               	addwfc	(??_SYS_EncryptConf+1)^0,w,c
 22422  005B5C  6E09               	movwf	(SYS_EncryptConf@text+1)^0,c
 22423                           
 22424                           ; BSR set to: 0
 22425                           ;../nwk/nwk_src/nwkSecurity.c: 135:   uint8_t block;;../nwk/nwk_src/nwkSecurity.c: 137: 
      +                            block = (nwkSecuritySize < 16) ? nwkSecuritySize : 16;
 22426  005B5E  0E0F               	movlw	15
 22427  005B60  65C9               	cpfsgt	_nwkSecuritySize& (0+255),b
 22428  005B62  D005               	goto	l2294
 22429                           
 22430                           ; BSR set to: 0
 22431  005B64  0E00               	movlw	0
 22432  005B66  6E05               	movwf	(_SYS_EncryptConf$5182+1)^0,c
 22433  005B68  0E10               	movlw	16
 22434  005B6A  6E04               	movwf	_SYS_EncryptConf$5182^0,c
 22435  005B6C  D004               	goto	l2296
 22436  005B6E                     l2294:
 22437                           
 22438                           ; BSR set to: 0
 22439  005B6E  0060  F324  F004   	movff	_nwkSecuritySize,_SYS_EncryptConf$5182
 22440  005B74  6A05               	clrf	(_SYS_EncryptConf$5182+1)^0,c
 22441  005B76                     l2296:
 22442                           
 22443                           ; BSR set to: 0
 22444  005B76  0060  F010  F00A   	movff	_SYS_EncryptConf$5182,SYS_EncryptConf@block
 22445                           
 22446                           ; BSR set to: 0
 22447                           ;../nwk/nwk_src/nwkSecurity.c: 139:   for (uint8_t i = 0; i < block; i++)
 22448  005B7C  0E00               	movlw	0
 22449  005B7E  6E0B               	movwf	SYS_EncryptConf@i^0,c
 22450  005B80  D034               	goto	l11340
 22451  005B82                     l11330:
 22452                           
 22453                           ; BSR set to: 0
 22454                           ;../nwk/nwk_src/nwkSecurity.c: 140:   {;../nwk/nwk_src/nwkSecurity.c: 141:     text[i] ^
      +                          = vector[i];
 22455  005B82  500B               	movf	SYS_EncryptConf@i^0,w,c
 22456  005B84  2406               	addwf	SYS_EncryptConf@vector^0,w,c
 22457  005B86  6ED9               	movwf	fsr2l,c
 22458  005B88  0E00               	movlw	0
 22459  005B8A  2007               	addwfc	(SYS_EncryptConf@vector+1)^0,w,c
 22460  005B8C  6EDA               	movwf	fsr2h,c
 22461  005B8E  50DF               	movf	indf2,w,c
 22462  005B90  6E02               	movwf	??_SYS_EncryptConf^0,c
 22463  005B92  500B               	movf	SYS_EncryptConf@i^0,w,c
 22464  005B94  2408               	addwf	SYS_EncryptConf@text^0,w,c
 22465  005B96  6ED9               	movwf	fsr2l,c
 22466  005B98  0E00               	movlw	0
 22467  005B9A  2009               	addwfc	(SYS_EncryptConf@text+1)^0,w,c
 22468  005B9C  6EDA               	movwf	fsr2h,c
 22469  005B9E  5002               	movf	??_SYS_EncryptConf^0,w,c
 22470  005BA0  1ADF               	xorwf	indf2,f,c
 22471                           
 22472                           ; BSR set to: 0
 22473                           ;../nwk/nwk_src/nwkSecurity.c: 143:     if (nwkSecurityEncrypt)
 22474  005BA2  51C7               	movf	_nwkSecurityEncrypt& (0+255),w,b
 22475  005BA4  B4D8               	btfsc	status,2,c
 22476  005BA6  D010               	goto	l11336
 22477                           
 22478                           ; BSR set to: 0
 22479                           ;../nwk/nwk_src/nwkSecurity.c: 144:       vector[i] = text[i];
 22480  005BA8  500B               	movf	SYS_EncryptConf@i^0,w,c
 22481  005BAA  2408               	addwf	SYS_EncryptConf@text^0,w,c
 22482  005BAC  6ED9               	movwf	fsr2l,c
 22483  005BAE  0E00               	movlw	0
 22484  005BB0  2009               	addwfc	(SYS_EncryptConf@text+1)^0,w,c
 22485  005BB2  6EDA               	movwf	fsr2h,c
 22486  005BB4  500B               	movf	SYS_EncryptConf@i^0,w,c
 22487  005BB6  2406               	addwf	SYS_EncryptConf@vector^0,w,c
 22488  005BB8  6EE1               	movwf	fsr1l,c
 22489  005BBA  0E00               	movlw	0
 22490  005BBC  2007               	addwfc	(SYS_EncryptConf@vector+1)^0,w,c
 22491  005BBE  6EE2               	movwf	fsr1h,c
 22492  005BC0  006F FF7F FFE7     	movff	indf2,indf1
 22493  005BC6  D010               	goto	l11338
 22494  005BC8                     l11336:
 22495                           
 22496                           ; BSR set to: 0
 22497                           ;../nwk/nwk_src/nwkSecurity.c: 146:       vector[i] ^= text[i];
 22498  005BC8  500B               	movf	SYS_EncryptConf@i^0,w,c
 22499  005BCA  2408               	addwf	SYS_EncryptConf@text^0,w,c
 22500  005BCC  6ED9               	movwf	fsr2l,c
 22501  005BCE  0E00               	movlw	0
 22502  005BD0  2009               	addwfc	(SYS_EncryptConf@text+1)^0,w,c
 22503  005BD2  6EDA               	movwf	fsr2h,c
 22504  005BD4  50DF               	movf	indf2,w,c
 22505  005BD6  6E02               	movwf	??_SYS_EncryptConf^0,c
 22506  005BD8  500B               	movf	SYS_EncryptConf@i^0,w,c
 22507  005BDA  2406               	addwf	SYS_EncryptConf@vector^0,w,c
 22508  005BDC  6ED9               	movwf	fsr2l,c
 22509  005BDE  0E00               	movlw	0
 22510  005BE0  2007               	addwfc	(SYS_EncryptConf@vector+1)^0,w,c
 22511  005BE2  6EDA               	movwf	fsr2h,c
 22512  005BE4  5002               	movf	??_SYS_EncryptConf^0,w,c
 22513  005BE6  1ADF               	xorwf	indf2,f,c
 22514  005BE8                     l11338:
 22515                           
 22516                           ; BSR set to: 0
 22517                           ;../nwk/nwk_src/nwkSecurity.c: 147:   }
 22518  005BE8  2A0B               	incf	SYS_EncryptConf@i^0,f,c
 22519  005BEA                     l11340:
 22520                           
 22521                           ; BSR set to: 0
 22522  005BEA  500A               	movf	SYS_EncryptConf@block^0,w,c
 22523  005BEC  5C0B               	subwf	SYS_EncryptConf@i^0,w,c
 22524  005BEE  A0D8               	btfss	status,0,c
 22525  005BF0  D7C8               	goto	l11330
 22526                           
 22527                           ; BSR set to: 0
 22528                           ;../nwk/nwk_src/nwkSecurity.c: 149:   nwkSecurityOffset += block;
 22529  005BF2  500A               	movf	SYS_EncryptConf@block^0,w,c
 22530  005BF4  27C8               	addwf	_nwkSecurityOffset& (0+255),f,b
 22531                           
 22532                           ;../nwk/nwk_src/nwkSecurity.c: 150:   nwkSecuritySize -= block;
 22533  005BF6  500A               	movf	SYS_EncryptConf@block^0,w,c
 22534  005BF8  5FC9               	subwf	_nwkSecuritySize& (0+255),f,b
 22535                           
 22536                           ; BSR set to: 0
 22537                           ;../nwk/nwk_src/nwkSecurity.c: 152:   if (nwkSecuritySize > 0)
 22538  005BFA  51C9               	movf	_nwkSecuritySize& (0+255),w,b
 22539  005BFC  B4D8               	btfsc	status,2,c
 22540  005BFE  D009               	goto	l11348
 22541                           
 22542                           ; BSR set to: 0
 22543                           ;../nwk/nwk_src/nwkSecurity.c: 153:     nwkSecurityActiveFrame->state = NWK_SECURITY_STA
      +                          TE_PROCESS;
 22544  005C00  0060  F2FF  FFD9   	movff	_nwkSecurityActiveFrame,fsr2l
 22545  005C06  0060  F303  FFDA   	movff	_nwkSecurityActiveFrame+1,fsr2h
 22546  005C0C  0E32               	movlw	50
 22547  005C0E  6EDF               	movwf	indf2,c
 22548  005C10  0012               	return	
 22549  005C12                     l11348:
 22550                           
 22551                           ; BSR set to: 0
 22552                           ;../nwk/nwk_src/nwkSecurity.c: 155:     nwkSecurityActiveFrame->state = NWK_SECURITY_STA
      +                          TE_CONFIRM;
 22553  005C12  0060  F2FF  FFD9   	movff	_nwkSecurityActiveFrame,fsr2l
 22554  005C18  0060  F303  FFDA   	movff	_nwkSecurityActiveFrame+1,fsr2h
 22555  005C1E  0E34               	movlw	52
 22556  005C20  6EDF               	movwf	indf2,c
 22557                           
 22558                           ; BSR set to: 0
 22559  005C22  0012               	return		;funcret
 22560  005C24                     __end_of_SYS_EncryptConf:
 22561                           	opt callstack 0
 22562                           
 22563 ;; *************** function _nwkRxTaskHandler *****************
 22564 ;; Defined at:
 22565 ;;		line 483 in file "../nwk/nwk_src/nwkRx.c"
 22566 ;; Parameters:    Size  Location     Type
 22567 ;;		None
 22568 ;; Auto vars:     Size  Location     Type
 22569 ;;  frame           2   65[COMRAM] PTR struct NwkFrame_t
 22570 ;;		 -> nwkFrameFrames(685), NULL(0), 
 22571 ;; Return value:  Size  Location     Type
 22572 ;;                  1    wreg      void 
 22573 ;; Registers used:
 22574 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 22575 ;; Tracked objects:
 22576 ;;		On entry : 2/3D
 22577 ;;		On exit  : 0/0
 22578 ;;		Unchanged: 0/0
 22579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22581 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22582 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22583 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22584 ;;Total ram usage:        4 bytes
 22585 ;; Hardware stack levels used:    1
 22586 ;; Hardware stack levels required when called:   13
 22587 ;; This function calls:
 22588 ;;		_nwkFrameFree
 22589 ;;		_nwkFrameNext
 22590 ;;		_nwkRouteFrame
 22591 ;;		_nwkRxHandleIndication
 22592 ;;		_nwkRxHandleReceivedFrame
 22593 ;;		_nwkSecurityProcess
 22594 ;; This function is called by:
 22595 ;;		_NWK_TaskHandler
 22596 ;; This function uses a non-reentrant model
 22597 ;;
 22598                           
 22599                           	psect	text140
 22600  006A0C                     __ptext140:
 22601                           	opt callstack 0
 22602  006A0C                     _nwkRxTaskHandler:
 22603                           	opt callstack 15
 22604                           
 22605                           ;../nwk/nwk_src/nwkRx.c: 485:   NwkFrame_t *frame = ((void*)0);
 22606                           
 22607                           ; BSR set to: 0
 22608                           ;incstack = 0
 22609  006A0C  0E00               	movlw	0
 22610  006A0E  6E42               	movwf	nwkRxTaskHandler@frame^0,c
 22611  006A10  0E00               	movlw	0
 22612  006A12  6E43               	movwf	(nwkRxTaskHandler@frame+1)^0,c
 22613                           
 22614                           ;../nwk/nwk_src/nwkRx.c: 487:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 22615  006A14  D04C               	goto	l16762
 22616  006A16                     l16748:
 22617                           
 22618                           ;../nwk/nwk_src/nwkRx.c: 492:       {;../nwk/nwk_src/nwkRx.c: 493:         nwkRxHandleRe
      +                          ceivedFrame(frame);
 22619  006A16  0060  F108  F029   	movff	nwkRxTaskHandler@frame,nwkRxHandleReceivedFrame@frame
 22620  006A1C  0060  F10C  F02A   	movff	nwkRxTaskHandler@frame+1,nwkRxHandleReceivedFrame@frame+1
 22621  006A22  EC57  F009         	call	_nwkRxHandleReceivedFrame	;wreg free
 22622                           
 22623                           ;../nwk/nwk_src/nwkRx.c: 494:       } break;
 22624  006A26  D043               	goto	l16762
 22625  006A28                     l16750:
 22626                           
 22627                           ;../nwk/nwk_src/nwkRx.c: 498:       {;../nwk/nwk_src/nwkRx.c: 499:         nwkSecurityPr
      +                          ocess(frame, 0);
 22628  006A28  0060  F108  F002   	movff	nwkRxTaskHandler@frame,nwkSecurityProcess@frame
 22629  006A2E  0060  F10C  F003   	movff	nwkRxTaskHandler@frame+1,nwkSecurityProcess@frame+1
 22630  006A34  0E00               	movlw	0
 22631  006A36  6E04               	movwf	nwkSecurityProcess@encrypt^0,c
 22632  006A38  EC5E  F049         	call	_nwkSecurityProcess	;wreg free
 22633                           
 22634                           ;../nwk/nwk_src/nwkRx.c: 500:       } break;
 22635  006A3C  D038               	goto	l16762
 22636  006A3E                     l16752:
 22637                           
 22638                           ;../nwk/nwk_src/nwkRx.c: 504:       {;../nwk/nwk_src/nwkRx.c: 505:         nwkRxHandleIn
      +                          dication(frame);
 22639  006A3E  0060  F108  F03B   	movff	nwkRxTaskHandler@frame,nwkRxHandleIndication@frame
 22640  006A44  0060  F10C  F03C   	movff	nwkRxTaskHandler@frame+1,nwkRxHandleIndication@frame+1
 22641  006A4A  ECCE  F035         	call	_nwkRxHandleIndication	;wreg free
 22642                           
 22643                           ;../nwk/nwk_src/nwkRx.c: 506:       } break;
 22644  006A4E  D02F               	goto	l16762
 22645  006A50                     l16754:
 22646                           
 22647                           ;../nwk/nwk_src/nwkRx.c: 510:       {;../nwk/nwk_src/nwkRx.c: 511:         nwkRouteFrame
      +                          (frame);
 22648  006A50  0060  F108  F033   	movff	nwkRxTaskHandler@frame,nwkRouteFrame@frame
 22649  006A56  0060  F10C  F034   	movff	nwkRxTaskHandler@frame+1,nwkRouteFrame@frame+1
 22650  006A5C  ECFF  F032         	call	_nwkRouteFrame	;wreg free
 22651                           
 22652                           ;../nwk/nwk_src/nwkRx.c: 512:       } break;
 22653  006A60  D026               	goto	l16762
 22654  006A62                     l16756:
 22655                           
 22656                           ;../nwk/nwk_src/nwkRx.c: 516:       {;../nwk/nwk_src/nwkRx.c: 517:         nwkFrameFree(
      +                          frame);
 22657  006A62  0060  F108  F002   	movff	nwkRxTaskHandler@frame,nwkFrameFree@frame
 22658  006A68  0060  F10C  F003   	movff	nwkRxTaskHandler@frame+1,nwkFrameFree@frame+1
 22659  006A6E  EC8F  F04B         	call	_nwkFrameFree	;wreg free
 22660                           
 22661                           ;../nwk/nwk_src/nwkRx.c: 518:       } break;
 22662  006A72  D01D               	goto	l16762
 22663  006A74                     l16760:
 22664  006A74  0060  F10B  FFD9   	movff	nwkRxTaskHandler@frame,fsr2l
 22665  006A7A  0060  F10F  FFDA   	movff	nwkRxTaskHandler@frame+1,fsr2h
 22666  006A80  50DF               	movf	indf2,w,c
 22667  006A82  6E40               	movwf	??_nwkRxTaskHandler^0,c
 22668  006A84  6A41               	clrf	(??_nwkRxTaskHandler+1)^0,c
 22669                           
 22670                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22671                           ; Switch size 1, requested type "simple"
 22672                           ; Number of cases is 1, Range of values is 0 to 0
 22673                           ; switch strategies available:
 22674                           ; Name         Instructions Cycles
 22675                           ; simple_byte            4     3 (average)
 22676                           ;	Chosen strategy is simple_byte
 22677  006A86  5041               	movf	(??_nwkRxTaskHandler+1)^0,w,c
 22678  006A88  0A00               	xorlw	0	; case 0
 22679  006A8A  A4D8               	btfss	status,2,c
 22680  006A8C  D010               	goto	l16762
 22681                           
 22682                           ; Switch size 1, requested type "simple"
 22683                           ; Number of cases is 5, Range of values is 32 to 36
 22684                           ; switch strategies available:
 22685                           ; Name         Instructions Cycles
 22686                           ; simple_byte           16     9 (average)
 22687                           ;	Chosen strategy is simple_byte
 22688  006A8E  5040               	movf	??_nwkRxTaskHandler^0,w,c
 22689  006A90  0A20               	xorlw	32	; case 32
 22690  006A92  B4D8               	btfsc	status,2,c
 22691  006A94  D7C0               	goto	l16748
 22692  006A96  0A01               	xorlw	1	; case 33
 22693  006A98  B4D8               	btfsc	status,2,c
 22694  006A9A  D7C6               	goto	l16750
 22695  006A9C  0A03               	xorlw	3	; case 34
 22696  006A9E  B4D8               	btfsc	status,2,c
 22697  006AA0  D7CE               	goto	l16752
 22698  006AA2  0A01               	xorlw	1	; case 35
 22699  006AA4  B4D8               	btfsc	status,2,c
 22700  006AA6  D7D4               	goto	l16754
 22701  006AA8  0A07               	xorlw	7	; case 36
 22702  006AAA  B4D8               	btfsc	status,2,c
 22703  006AAC  D7DA               	goto	l16756
 22704  006AAE                     l16762:
 22705                           
 22706                           ;../nwk/nwk_src/nwkRx.c: 487:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 22707  006AAE  0060  F108  F002   	movff	nwkRxTaskHandler@frame,nwkFrameNext@frame
 22708  006AB4  0060  F10C  F003   	movff	nwkRxTaskHandler@frame+1,nwkFrameNext@frame+1
 22709  006ABA  EC06  F03D         	call	_nwkFrameNext	;wreg free
 22710  006ABE  0060  F008  F042   	movff	?_nwkFrameNext,nwkRxTaskHandler@frame
 22711  006AC4  0060  F00C  F043   	movff	?_nwkFrameNext+1,nwkRxTaskHandler@frame+1
 22712  006ACA  5042               	movf	nwkRxTaskHandler@frame^0,w,c
 22713  006ACC  1043               	iorwf	(nwkRxTaskHandler@frame+1)^0,w,c
 22714  006ACE  B4D8               	btfsc	status,2,c
 22715  006AD0  0012               	return	
 22716  006AD2  D7D0               	goto	l16760
 22717  006AD4                     __end_of_nwkRxTaskHandler:
 22718                           	opt callstack 0
 22719                           
 22720 ;; *************** function _nwkSecurityProcess *****************
 22721 ;; Defined at:
 22722 ;;		line 99 in file "../nwk/nwk_src/nwkSecurity.c"
 22723 ;; Parameters:    Size  Location     Type
 22724 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 22725 ;;		 -> nwkFrameFrames(685), NULL(0), 
 22726 ;;  encrypt         1    3[COMRAM] _Bool 
 22727 ;; Auto vars:     Size  Location     Type
 22728 ;;		None
 22729 ;; Return value:  Size  Location     Type
 22730 ;;                  1    wreg      void 
 22731 ;; Registers used:
 22732 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22733 ;; Tracked objects:
 22734 ;;		On entry : 0/3D
 22735 ;;		On exit  : 3F/0
 22736 ;;		Unchanged: 0/0
 22737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22738 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22741 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22742 ;;Total ram usage:        3 bytes
 22743 ;; Hardware stack levels used:    1
 22744 ;; Hardware stack levels required when called:    7
 22745 ;; This function calls:
 22746 ;;		Nothing
 22747 ;; This function is called by:
 22748 ;;		_nwkRxTaskHandler
 22749 ;;		_nwkTxTaskHandler
 22750 ;; This function uses a non-reentrant model
 22751 ;;
 22752                           
 22753                           	psect	text141
 22754  0092BC                     __ptext141:
 22755                           	opt callstack 0
 22756  0092BC                     _nwkSecurityProcess:
 22757                           	opt callstack 20
 22758                           
 22759                           ;../nwk/nwk_src/nwkSecurity.c: 99: void nwkSecurityProcess(NwkFrame_t *frame, _Bool encr
      +                          ypt);../nwk/nwk_src/nwkSecurity.c: 100: {;../nwk/nwk_src/nwkSecurity.c: 101:   if (encry
      +                          pt)
 22760                           
 22761                           ;incstack = 0
 22762  0092BC  5004               	movf	nwkSecurityProcess@encrypt^0,w,c
 22763  0092BE  B4D8               	btfsc	status,2,c
 22764  0092C0  D008               	goto	l12170
 22765                           
 22766                           ;../nwk/nwk_src/nwkSecurity.c: 102:     frame->state = NWK_SECURITY_STATE_ENCRYPT_PENDIN
      +                          G;
 22767  0092C2  0060  F00B  FFD9   	movff	nwkSecurityProcess@frame,fsr2l
 22768  0092C8  0060  F00F  FFDA   	movff	nwkSecurityProcess@frame+1,fsr2h
 22769  0092CE  0E30               	movlw	48
 22770  0092D0  D007               	goto	L17
 22771  0092D2                     l12170:
 22772                           
 22773                           ;../nwk/nwk_src/nwkSecurity.c: 104:     frame->state = NWK_SECURITY_STATE_DECRYPT_PENDIN
      +                          G;
 22774  0092D2  0060  F00B  FFD9   	movff	nwkSecurityProcess@frame,fsr2l
 22775  0092D8  0060  F00F  FFDA   	movff	nwkSecurityProcess@frame+1,fsr2h
 22776  0092DE  0E31               	movlw	49
 22777  0092E0                     L17:
 22778  0092E0  6EDF               	movwf	indf2,c
 22779                           
 22780                           ;../nwk/nwk_src/nwkSecurity.c: 105:   ++nwkSecurityActiveFrames;
 22781  0092E2  0100               	movlb	0	; () banked
 22782  0092E4  2BCA               	incf	_nwkSecurityActiveFrames& (0+255),f,b
 22783                           
 22784                           ; BSR set to: 0
 22785  0092E6  0012               	return		;funcret
 22786  0092E8                     __end_of_nwkSecurityProcess:
 22787                           	opt callstack 0
 22788                           
 22789 ;; *************** function _nwkRxHandleReceivedFrame *****************
 22790 ;; Defined at:
 22791 ;;		line 292 in file "../nwk/nwk_src/nwkRx.c"
 22792 ;; Parameters:    Size  Location     Type
 22793 ;;  frame           2   40[COMRAM] PTR struct NwkFrame_t
 22794 ;;		 -> nwkFrameFrames(685), NULL(0), 
 22795 ;; Auto vars:     Size  Location     Type
 22796 ;;  mcHeader        2   46[COMRAM] PTR __pack struct NwkFra
 22797 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 22798 ;;  member          1   45[COMRAM] _Bool 
 22799 ;;  broadcast       1   44[COMRAM] _Bool 
 22800 ;;  header          2   48[COMRAM] PTR __pack struct NwkFra
 22801 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 22802 ;; Return value:  Size  Location     Type
 22803 ;;                  1    wreg      void 
 22804 ;; Registers used:
 22805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22806 ;; Tracked objects:
 22807 ;;		On entry : 0/3D
 22808 ;;		On exit  : 0/0
 22809 ;;		Unchanged: 0/0
 22810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22812 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22814 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22815 ;;Total ram usage:       10 bytes
 22816 ;; Hardware stack levels used:    1
 22817 ;; Hardware stack levels required when called:   10
 22818 ;; This function calls:
 22819 ;;		_NWK_GroupIsMember
 22820 ;;		_nwkRouteFrameReceived
 22821 ;;		_nwkRxRejectDuplicate
 22822 ;;		_nwkTxBroadcastFrame
 22823 ;; This function is called by:
 22824 ;;		_nwkRxTaskHandler
 22825 ;; This function uses a non-reentrant model
 22826 ;;
 22827                           
 22828                           	psect	text142
 22829  0012AE                     __ptext142:
 22830                           	opt callstack 0
 22831  0012AE                     _nwkRxHandleReceivedFrame:
 22832                           	opt callstack 17
 22833                           
 22834                           ;../nwk/nwk_src/nwkRx.c: 292: static void nwkRxHandleReceivedFrame(NwkFrame_t *frame);..
      +                          /nwk/nwk_src/nwkRx.c: 293: {;../nwk/nwk_src/nwkRx.c: 294:   NwkFrameHeader_t *header = &
      +                          frame->header;
 22835                           
 22836                           ; BSR set to: 0
 22837                           ;incstack = 0
 22838  0012AE  0E02               	movlw	2
 22839  0012B0  2429               	addwf	nwkRxHandleReceivedFrame@frame^0,w,c
 22840  0012B2  6E31               	movwf	nwkRxHandleReceivedFrame@header^0,c
 22841  0012B4  0E00               	movlw	0
 22842  0012B6  202A               	addwfc	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 22843  0012B8  6E32               	movwf	(nwkRxHandleReceivedFrame@header+1)^0,c
 22844                           
 22845                           ;../nwk/nwk_src/nwkRx.c: 296:   frame->state = NWK_RX_STATE_FINISH;
 22846  0012BA  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 22847  0012C0  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 22848  0012C6  0E24               	movlw	36
 22849  0012C8  6EDF               	movwf	indf2,c
 22850                           
 22851                           ;../nwk/nwk_src/nwkRx.c: 304:   if (header->nwkFcf.multicast && header->nwkFcf.ackReques
      +                          t)
 22852  0012CA  EE20 F009          	lfsr	2,9
 22853  0012CE  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 22854  0012D0  26D9               	addwf	fsr2l,f,c
 22855  0012D2  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 22856  0012D4  22DA               	addwfc	fsr2h,f,c
 22857  0012D6  A6DF               	btfss	indf2,3,c
 22858  0012D8  D008               	goto	l16082
 22859  0012DA  EE20 F009          	lfsr	2,9
 22860  0012DE  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 22861  0012E0  26D9               	addwf	fsr2l,f,c
 22862  0012E2  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 22863  0012E4  22DA               	addwfc	fsr2h,f,c
 22864  0012E6  B0DF               	btfsc	indf2,0,c
 22865  0012E8  0012               	return	
 22866  0012EA                     l16082:
 22867                           
 22868                           ;../nwk/nwk_src/nwkRx.c: 311:   if (0xffff == header->macDstPanId)
 22869  0012EA  EE20 F003          	lfsr	2,3
 22870  0012EE  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 22871  0012F0  26D9               	addwf	fsr2l,f,c
 22872  0012F2  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 22873  0012F4  22DA               	addwfc	fsr2h,f,c
 22874  0012F6  28DE               	incf	postinc2,w,c
 22875  0012F8  E136               	bnz	l16096
 22876  0012FA  28DE               	incf	postinc2,w,c
 22877  0012FC  A4D8               	btfss	status,2,c
 22878  0012FE  D033               	goto	l16096
 22879                           
 22880                           ;../nwk/nwk_src/nwkRx.c: 312:   {;../nwk/nwk_src/nwkRx.c: 313:     if (nwkIb.addr == hea
      +                          der->nwkDstAddr || 0xffff == header->nwkDstAddr)
 22881  001300  EE20 F00D          	lfsr	2,13
 22882  001304  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 22883  001306  26D9               	addwf	fsr2l,f,c
 22884  001308  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 22885  00130A  22DA               	addwfc	fsr2h,f,c
 22886  00130C  0101               	movlb	1	; () banked
 22887  00130E  5131               	movf	_nwkIb& (0+255),w,b
 22888  001310  18DE               	xorwf	postinc2,w,c
 22889  001312  E104               	bnz	u16280
 22890  001314  5132               	movf	(_nwkIb+1)& (0+255),w,b
 22891  001316  18DE               	xorwf	postinc2,w,c
 22892  001318  B4D8               	btfsc	status,2,c
 22893  00131A  D00B               	goto	u16290
 22894  00131C                     u16280:
 22895                           
 22896                           ; BSR set to: 1
 22897  00131C  EE20 F00D          	lfsr	2,13
 22898  001320  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 22899  001322  26D9               	addwf	fsr2l,f,c
 22900  001324  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 22901  001326  22DA               	addwfc	fsr2h,f,c
 22902  001328  28DE               	incf	postinc2,w,c
 22903  00132A  E102               	bnz	u16291
 22904  00132C  28DE               	incf	postinc2,w,c
 22905  00132E  A4D8               	btfss	status,2,c
 22906  001330                     u16291:
 22907  001330  0012               	return	
 22908  001332                     u16290:
 22909                           
 22910                           ; BSR set to: 1
 22911                           ;../nwk/nwk_src/nwkRx.c: 314:     {;../nwk/nwk_src/nwkRx.c: 316:       if (header->nwkFc
      +                          f.security)
 22912  001332  EE20 F009          	lfsr	2,9
 22913  001336  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 22914  001338  26D9               	addwf	fsr2l,f,c
 22915  00133A  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 22916  00133C  22DA               	addwfc	fsr2h,f,c
 22917  00133E  A2DF               	btfss	indf2,1,c
 22918  001340  D009               	goto	l16092
 22919                           
 22920                           ; BSR set to: 1
 22921                           ;../nwk/nwk_src/nwkRx.c: 317:         frame->state = NWK_RX_STATE_DECRYPT;
 22922  001342  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 22923  001348  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 22924  00134E  0E21               	movlw	33
 22925  001350  6EDF               	movwf	indf2,c
 22926  001352  0012               	return	
 22927  001354                     l16092:
 22928                           
 22929                           ; BSR set to: 1
 22930                           ;../nwk/nwk_src/nwkRx.c: 320:         frame->state = NWK_RX_STATE_INDICATE;
 22931  001354  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 22932  00135A  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 22933  001360  0E22               	movlw	34
 22934  001362  6EDF               	movwf	indf2,c
 22935  001364  0012               	return	
 22936  001366                     l16096:
 22937                           
 22938                           ;../nwk/nwk_src/nwkRx.c: 330:   if (0xffff == header->nwkDstAddr && header->nwkFcf.ackRe
      +                          quest)
 22939  001366  EE20 F00D          	lfsr	2,13
 22940  00136A  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 22941  00136C  26D9               	addwf	fsr2l,f,c
 22942  00136E  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 22943  001370  22DA               	addwfc	fsr2h,f,c
 22944  001372  28DE               	incf	postinc2,w,c
 22945  001374  E10B               	bnz	l16102
 22946  001376  28DE               	incf	postinc2,w,c
 22947  001378  A4D8               	btfss	status,2,c
 22948  00137A  D008               	goto	l16102
 22949  00137C  EE20 F009          	lfsr	2,9
 22950  001380  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 22951  001382  26D9               	addwf	fsr2l,f,c
 22952  001384  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 22953  001386  22DA               	addwfc	fsr2h,f,c
 22954  001388  B0DF               	btfsc	indf2,0,c
 22955  00138A  0012               	return	
 22956  00138C                     l16102:
 22957                           
 22958                           ;../nwk/nwk_src/nwkRx.c: 333:   if (nwkIb.addr == header->nwkSrcAddr)
 22959  00138C  EE20 F00B          	lfsr	2,11
 22960  001390  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 22961  001392  26D9               	addwf	fsr2l,f,c
 22962  001394  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 22963  001396  22DA               	addwfc	fsr2h,f,c
 22964  001398  0101               	movlb	1	; () banked
 22965  00139A  5131               	movf	_nwkIb& (0+255),w,b
 22966  00139C  18DE               	xorwf	postinc2,w,c
 22967  00139E  E104               	bnz	l16106
 22968  0013A0  5132               	movf	(_nwkIb+1)& (0+255),w,b
 22969  0013A2  18DE               	xorwf	postinc2,w,c
 22970  0013A4  B4D8               	btfsc	status,2,c
 22971  0013A6  0012               	return	
 22972  0013A8                     l16106:
 22973                           
 22974                           ; BSR set to: 1
 22975                           ;../nwk/nwk_src/nwkRx.c: 337:   nwkRouteFrameReceived(frame);
 22976  0013A8  0060  F0A4  F00B   	movff	nwkRxHandleReceivedFrame@frame,nwkRouteFrameReceived@frame
 22977  0013AE  0060  F0A8  F00C   	movff	nwkRxHandleReceivedFrame@frame+1,nwkRouteFrameReceived@frame+1
 22978  0013B4  EC18  F01D         	call	_nwkRouteFrameReceived	;wreg free
 22979                           
 22980                           ;../nwk/nwk_src/nwkRx.c: 340:   if (nwkRxRejectDuplicate(header))
 22981  0013B8  0060  F0C4  F012   	movff	nwkRxHandleReceivedFrame@header,nwkRxRejectDuplicate@header
 22982  0013BE  0060  F0C8  F013   	movff	nwkRxHandleReceivedFrame@header+1,nwkRxRejectDuplicate@header+1
 22983  0013C4  ECEC  F016         	call	_nwkRxRejectDuplicate	;wreg free
 22984  0013C8  0900               	iorlw	0
 22985  0013CA  A4D8               	btfss	status,2,c
 22986  0013CC  0012               	return	
 22987                           
 22988                           ;../nwk/nwk_src/nwkRx.c: 344:   if (header->nwkFcf.multicast)
 22989  0013CE  EE20 F009          	lfsr	2,9
 22990  0013D2  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 22991  0013D4  26D9               	addwf	fsr2l,f,c
 22992  0013D6  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 22993  0013D8  22DA               	addwfc	fsr2h,f,c
 22994  0013DA  A6DF               	btfss	indf2,3,c
 22995  0013DC  D0D8               	goto	l16146
 22996                           
 22997                           ;../nwk/nwk_src/nwkRx.c: 345:   {;../nwk/nwk_src/nwkRx.c: 346:     NwkFrameMulticastHead
      +                          er_t *mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
 22998  0013DE  EE20 F081          	lfsr	2,129
 22999  0013E2  5029               	movf	nwkRxHandleReceivedFrame@frame^0,w,c
 23000  0013E4  26D9               	addwf	fsr2l,f,c
 23001  0013E6  502A               	movf	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 23002  0013E8  22DA               	addwfc	fsr2h,f,c
 23003  0013EA  006F FF78  F02F    	movff	postinc2,nwkRxHandleReceivedFrame@mcHeader
 23004  0013F0  006F FF74  F030    	movff	postdec2,nwkRxHandleReceivedFrame@mcHeader+1
 23005                           
 23006                           ;../nwk/nwk_src/nwkRx.c: 347:     _Bool member = NWK_GroupIsMember(header->nwkDstAddr);
 23007  0013F6  EE20 F00D          	lfsr	2,13
 23008  0013FA  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 23009  0013FC  26D9               	addwf	fsr2l,f,c
 23010  0013FE  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 23011  001400  22DA               	addwfc	fsr2h,f,c
 23012  001402  006F FF78  F002    	movff	postinc2,NWK_GroupIsMember@group
 23013  001408  006F FF74  F003    	movff	postdec2,NWK_GroupIsMember@group+1
 23014  00140E  EC17  F049         	call	_NWK_GroupIsMember	;wreg free
 23015  001412  6E2E               	movwf	nwkRxHandleReceivedFrame@member^0,c
 23016                           
 23017                           ;../nwk/nwk_src/nwkRx.c: 348:     _Bool broadcast = 0;
 23018  001414  0E00               	movlw	0
 23019  001416  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 23020                           
 23021                           ;../nwk/nwk_src/nwkRx.c: 350:     if (0xffff == header->macDstAddr)
 23022  001418  EE20 F005          	lfsr	2,5
 23023  00141C  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 23024  00141E  26D9               	addwf	fsr2l,f,c
 23025  001420  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 23026  001422  22DA               	addwfc	fsr2h,f,c
 23027  001424  28DE               	incf	postinc2,w,c
 23028  001426  E16C               	bnz	l16126
 23029  001428  28DE               	incf	postinc2,w,c
 23030  00142A  A4D8               	btfss	status,2,c
 23031  00142C  D069               	goto	l16126
 23032                           
 23033                           ;../nwk/nwk_src/nwkRx.c: 351:     {;../nwk/nwk_src/nwkRx.c: 352:       if (member)
 23034  00142E  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 23035  001430  B4D8               	btfsc	status,2,c
 23036  001432  D031               	goto	l16124
 23037                           
 23038                           ;../nwk/nwk_src/nwkRx.c: 353:       {;../nwk/nwk_src/nwkRx.c: 354:         broadcast = m
      +                          cHeader->memberRadius > 0;
 23039  001434  EE20 F001          	lfsr	2,1
 23040  001438  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 23041  00143A  26D9               	addwf	fsr2l,f,c
 23042  00143C  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 23043  00143E  22DA               	addwfc	fsr2h,f,c
 23044  001440  50DF               	movf	indf2,w,c
 23045  001442  0B0F               	andlw	15
 23046  001444  0900               	iorlw	0
 23047  001446  B4D8               	btfsc	status,2,c
 23048  001448  D002               	goto	u16380
 23049  00144A  0E01               	movlw	1
 23050  00144C  D001               	goto	u16390
 23051  00144E                     u16380:
 23052  00144E  0E00               	movlw	0
 23053  001450                     u16390:
 23054  001450  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 23055                           
 23056                           ;../nwk/nwk_src/nwkRx.c: 355:         mcHeader->memberRadius--;
 23057  001452  0E01               	movlw	1
 23058  001454  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 23059  001456  EE20 F001          	lfsr	2,1
 23060  00145A  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 23061  00145C  26D9               	addwf	fsr2l,f,c
 23062  00145E  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 23063  001460  22DA               	addwfc	fsr2h,f,c
 23064  001462  50DF               	movf	indf2,w,c
 23065  001464  0B0F               	andlw	15
 23066  001466  6E2C               	movwf	(??_nwkRxHandleReceivedFrame+1)^0,c
 23067  001468  502B               	movf	??_nwkRxHandleReceivedFrame^0,w,c
 23068  00146A  5E2C               	subwf	(??_nwkRxHandleReceivedFrame+1)^0,f,c
 23069  00146C  50DF               	movf	indf2,w,c
 23070  00146E  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 23071  001470  0BF0               	andlw	-16
 23072  001472  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 23073  001474  6EDF               	movwf	indf2,c
 23074                           
 23075                           ;../nwk/nwk_src/nwkRx.c: 356:         mcHeader->nonMemberRadius = mcHeader->maxNonMember
      +                          Radius;
 23076  001476  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 23077  00147C  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 23078  001482  38DF               	swapf	indf2,w,c
 23079  001484  0B0F               	andlw	15
 23080  001486  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 23081  001488  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 23082  00148E  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 23083  001494  D030               	goto	L19
 23084  001496                     l16124:
 23085                           
 23086                           ;../nwk/nwk_src/nwkRx.c: 359:       {;../nwk/nwk_src/nwkRx.c: 360:         broadcast = m
      +                          cHeader->nonMemberRadius > 0;
 23087  001496  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 23088  00149C  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 23089  0014A2  50DF               	movf	indf2,w,c
 23090  0014A4  0B0F               	andlw	15
 23091  0014A6  0900               	iorlw	0
 23092  0014A8  B4D8               	btfsc	status,2,c
 23093  0014AA  D002               	goto	u16400
 23094  0014AC  0E01               	movlw	1
 23095  0014AE  D001               	goto	u16410
 23096  0014B0                     u16400:
 23097  0014B0  0E00               	movlw	0
 23098  0014B2                     u16410:
 23099  0014B2  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 23100                           
 23101                           ;../nwk/nwk_src/nwkRx.c: 361:         mcHeader->nonMemberRadius--;
 23102  0014B4  0E01               	movlw	1
 23103  0014B6  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 23104  0014B8  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 23105  0014BE  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 23106  0014C4  50DF               	movf	indf2,w,c
 23107  0014C6  0B0F               	andlw	15
 23108  0014C8  6E2C               	movwf	(??_nwkRxHandleReceivedFrame+1)^0,c
 23109  0014CA  502B               	movf	??_nwkRxHandleReceivedFrame^0,w,c
 23110  0014CC  5E2C               	subwf	(??_nwkRxHandleReceivedFrame+1)^0,f,c
 23111  0014CE  50DF               	movf	indf2,w,c
 23112  0014D0  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 23113  0014D2  0BF0               	andlw	-16
 23114  0014D4  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 23115  0014D6  6EDF               	movwf	indf2,c
 23116                           
 23117                           ;../nwk/nwk_src/nwkRx.c: 362:         mcHeader->memberRadius = mcHeader->maxMemberRadius
      +                          ;
 23118  0014D8  EE20 F001          	lfsr	2,1
 23119  0014DC  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 23120  0014DE  26D9               	addwf	fsr2l,f,c
 23121  0014E0  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 23122  0014E2  22DA               	addwfc	fsr2h,f,c
 23123  0014E4  38DF               	swapf	indf2,w,c
 23124  0014E6  0B0F               	andlw	15
 23125  0014E8  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 23126  0014EA  EE20 F001          	lfsr	2,1
 23127  0014EE  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 23128  0014F0  26D9               	addwf	fsr2l,f,c
 23129  0014F2  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 23130  0014F4  22DA               	addwfc	fsr2h,f,c
 23131  0014F6                     L19:
 23132  0014F6  50DF               	movf	indf2,w,c
 23133  0014F8  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
 23134  0014FA  0BF0               	andlw	-16
 23135  0014FC  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
 23136  0014FE  D014               	goto	L18
 23137  001500                     l16126:
 23138                           
 23139                           ;../nwk/nwk_src/nwkRx.c: 366:     {;../nwk/nwk_src/nwkRx.c: 367:       if (member)
 23140  001500  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 23141  001502  B4D8               	btfsc	status,2,c
 23142  001504  D00A               	goto	l16132
 23143                           
 23144                           ;../nwk/nwk_src/nwkRx.c: 368:       {;../nwk/nwk_src/nwkRx.c: 369:         broadcast = 1
      +                          ;
 23145  001506  0E01               	movlw	1
 23146  001508  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 23147                           
 23148                           ;../nwk/nwk_src/nwkRx.c: 370:         header->nwkFcf.linkLocal = 1;
 23149  00150A  EE20 F009          	lfsr	2,9
 23150  00150E  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 23151  001510  26D9               	addwf	fsr2l,f,c
 23152  001512  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 23153  001514  22DA               	addwfc	fsr2h,f,c
 23154  001516  84DF               	bsf	indf2,2,c
 23155                           
 23156                           ;../nwk/nwk_src/nwkRx.c: 371:       }
 23157  001518  D008               	goto	l16134
 23158  00151A                     l16132:
 23159                           
 23160                           ;../nwk/nwk_src/nwkRx.c: 374:       {;../nwk/nwk_src/nwkRx.c: 375:         frame->state 
      +                          = NWK_RX_STATE_ROUTE;
 23161  00151A  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 23162  001520  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 23163  001526  0E23               	movlw	35
 23164  001528                     L18:
 23165  001528  6EDF               	movwf	indf2,c
 23166  00152A                     l16134:
 23167                           
 23168                           ;../nwk/nwk_src/nwkRx.c: 380:     if (broadcast)
 23169  00152A  502D               	movf	nwkRxHandleReceivedFrame@broadcast^0,w,c
 23170  00152C  B4D8               	btfsc	status,2,c
 23171  00152E  D008               	goto	l16138
 23172                           
 23173                           ;../nwk/nwk_src/nwkRx.c: 381:       nwkTxBroadcastFrame(frame);
 23174  001530  0060  F0A4  F024   	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
 23175  001536  0060  F0A8  F025   	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
 23176  00153C  EC66  F025         	call	_nwkTxBroadcastFrame	;wreg free
 23177  001540                     l16138:
 23178                           
 23179                           ;../nwk/nwk_src/nwkRx.c: 383:     if (member)
 23180  001540  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 23181  001542  B4D8               	btfsc	status,2,c
 23182  001544  0012               	return	
 23183                           
 23184                           ;../nwk/nwk_src/nwkRx.c: 384:     {;../nwk/nwk_src/nwkRx.c: 385:       frame->payload +=
      +                           sizeof(NwkFrameMulticastHeader_t);
 23185  001546  EE20 F081          	lfsr	2,129
 23186  00154A  5029               	movf	nwkRxHandleReceivedFrame@frame^0,w,c
 23187  00154C  26D9               	addwf	fsr2l,f,c
 23188  00154E  502A               	movf	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 23189  001550  22DA               	addwfc	fsr2h,f,c
 23190  001552  0E02               	movlw	2
 23191  001554  26DE               	addwf	postinc2,f,c
 23192  001556  0E00               	movlw	0
 23193  001558  22DD               	addwfc	postdec2,f,c
 23194                           
 23195                           ;../nwk/nwk_src/nwkRx.c: 388:       if (header->nwkFcf.security)
 23196  00155A  EE20 F009          	lfsr	2,9
 23197  00155E  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 23198  001560  26D9               	addwf	fsr2l,f,c
 23199  001562  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 23200  001564  22DA               	addwfc	fsr2h,f,c
 23201  001566  A2DF               	btfss	indf2,1,c
 23202  001568  D009               	goto	l16144
 23203                           
 23204                           ;../nwk/nwk_src/nwkRx.c: 389:         frame->state = NWK_RX_STATE_DECRYPT;
 23205  00156A  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 23206  001570  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 23207  001576  0E21               	movlw	33
 23208  001578  6EDF               	movwf	indf2,c
 23209  00157A  0012               	return	
 23210  00157C                     l16144:
 23211                           
 23212                           ;../nwk/nwk_src/nwkRx.c: 392:         frame->state = NWK_RX_STATE_INDICATE;
 23213  00157C  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 23214  001582  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 23215  001588  0E22               	movlw	34
 23216  00158A  6EDF               	movwf	indf2,c
 23217  00158C  0012               	return	
 23218  00158E                     l16146:
 23219                           
 23220                           ;../nwk/nwk_src/nwkRx.c: 397:   {;../nwk/nwk_src/nwkRx.c: 398:     if (0xffff == header-
      +                          >macDstAddr && nwkIb.addr != header->nwkDstAddr &&
 23221  00158E  EE20 F005          	lfsr	2,5
 23222  001592  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 23223  001594  26D9               	addwf	fsr2l,f,c
 23224  001596  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 23225  001598  22DA               	addwfc	fsr2h,f,c
 23226  00159A  28DE               	incf	postinc2,w,c
 23227  00159C  E121               	bnz	l16154
 23228  00159E  28DE               	incf	postinc2,w,c
 23229  0015A0  A4D8               	btfss	status,2,c
 23230  0015A2  D01E               	goto	l16154
 23231  0015A4  EE20 F00D          	lfsr	2,13
 23232  0015A8  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 23233  0015AA  26D9               	addwf	fsr2l,f,c
 23234  0015AC  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 23235  0015AE  22DA               	addwfc	fsr2h,f,c
 23236  0015B0  0101               	movlb	1	; () banked
 23237  0015B2  5131               	movf	_nwkIb& (0+255),w,b
 23238  0015B4  18DE               	xorwf	postinc2,w,c
 23239  0015B6  E104               	bnz	u16470
 23240  0015B8  5132               	movf	(_nwkIb+1)& (0+255),w,b
 23241  0015BA  18DE               	xorwf	postinc2,w,c
 23242  0015BC  B4D8               	btfsc	status,2,c
 23243  0015BE  D010               	goto	l16154
 23244  0015C0                     u16470:
 23245                           
 23246                           ; BSR set to: 1
 23247  0015C0  EE20 F009          	lfsr	2,9
 23248  0015C4  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 23249  0015C6  26D9               	addwf	fsr2l,f,c
 23250  0015C8  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 23251  0015CA  22DA               	addwfc	fsr2h,f,c
 23252  0015CC  B4DF               	btfsc	indf2,2,c
 23253  0015CE  D008               	goto	l16154
 23254                           
 23255                           ; BSR set to: 1
 23256                           ;../nwk/nwk_src/nwkRx.c: 400:       nwkTxBroadcastFrame(frame);
 23257  0015D0  0060  F0A4  F024   	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
 23258  0015D6  0060  F0A8  F025   	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
 23259  0015DC  EC66  F025         	call	_nwkTxBroadcastFrame	;wreg free
 23260  0015E0                     l16154:
 23261                           
 23262                           ;../nwk/nwk_src/nwkRx.c: 402:     if (nwkIb.addr == header->nwkDstAddr || 0xffff == head
      +                          er->nwkDstAddr)
 23263  0015E0  EE20 F00D          	lfsr	2,13
 23264  0015E4  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 23265  0015E6  26D9               	addwf	fsr2l,f,c
 23266  0015E8  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 23267  0015EA  22DA               	addwfc	fsr2h,f,c
 23268  0015EC  0101               	movlb	1	; () banked
 23269  0015EE  5131               	movf	_nwkIb& (0+255),w,b
 23270  0015F0  18DE               	xorwf	postinc2,w,c
 23271  0015F2  E104               	bnz	u16490
 23272  0015F4  5132               	movf	(_nwkIb+1)& (0+255),w,b
 23273  0015F6  18DE               	xorwf	postinc2,w,c
 23274  0015F8  B4D8               	btfsc	status,2,c
 23275  0015FA  D00B               	goto	u16500
 23276  0015FC                     u16490:
 23277                           
 23278                           ; BSR set to: 1
 23279  0015FC  EE20 F00D          	lfsr	2,13
 23280  001600  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 23281  001602  26D9               	addwf	fsr2l,f,c
 23282  001604  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 23283  001606  22DA               	addwfc	fsr2h,f,c
 23284  001608  28DE               	incf	postinc2,w,c
 23285  00160A  E11D               	bnz	l16164
 23286  00160C  28DE               	incf	postinc2,w,c
 23287  00160E  A4D8               	btfss	status,2,c
 23288  001610  D01A               	goto	l16164
 23289  001612                     u16500:
 23290                           
 23291                           ; BSR set to: 1
 23292                           ;../nwk/nwk_src/nwkRx.c: 403:     {;../nwk/nwk_src/nwkRx.c: 405:       if (header->nwkFc
      +                          f.security)
 23293  001612  EE20 F009          	lfsr	2,9
 23294  001616  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 23295  001618  26D9               	addwf	fsr2l,f,c
 23296  00161A  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 23297  00161C  22DA               	addwfc	fsr2h,f,c
 23298  00161E  A2DF               	btfss	indf2,1,c
 23299  001620  D009               	goto	l16162
 23300                           
 23301                           ; BSR set to: 1
 23302                           ;../nwk/nwk_src/nwkRx.c: 406:         frame->state = NWK_RX_STATE_DECRYPT;
 23303  001622  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 23304  001628  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 23305  00162E  0E21               	movlw	33
 23306  001630  6EDF               	movwf	indf2,c
 23307  001632  0012               	return	
 23308  001634                     l16162:
 23309                           
 23310                           ; BSR set to: 1
 23311                           ;../nwk/nwk_src/nwkRx.c: 409:         frame->state = NWK_RX_STATE_INDICATE;
 23312  001634  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 23313  00163A  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 23314  001640  0E22               	movlw	34
 23315  001642  6EDF               	movwf	indf2,c
 23316  001644  0012               	return	
 23317  001646                     l16164:
 23318                           
 23319                           ; BSR set to: 1
 23320  001646  EE20 F005          	lfsr	2,5
 23321  00164A  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 23322  00164C  26D9               	addwf	fsr2l,f,c
 23323  00164E  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 23324  001650  22DA               	addwfc	fsr2h,f,c
 23325  001652  5131               	movf	_nwkIb& (0+255),w,b
 23326  001654  18DE               	xorwf	postinc2,w,c
 23327  001656  E10C               	bnz	l2171
 23328  001658  5132               	movf	(_nwkIb+1)& (0+255),w,b
 23329  00165A  18DE               	xorwf	postinc2,w,c
 23330  00165C  A4D8               	btfss	status,2,c
 23331  00165E  0012               	return	
 23332                           
 23333                           ; BSR set to: 1
 23334                           ;../nwk/nwk_src/nwkRx.c: 414:     {;../nwk/nwk_src/nwkRx.c: 415:       frame->state = NW
      +                          K_RX_STATE_ROUTE;
 23335  001660  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 23336  001666  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 23337  00166C  0E23               	movlw	35
 23338  00166E  6EDF               	movwf	indf2,c
 23339  001670                     l2171:
 23340  001670  0012               	return		;funcret
 23341  001672                     __end_of_nwkRxHandleReceivedFrame:
 23342                           	opt callstack 0
 23343                           
 23344 ;; *************** function _nwkTxBroadcastFrame *****************
 23345 ;; Defined at:
 23346 ;;		line 159 in file "../nwk/nwk_src/nwkTx.c"
 23347 ;; Parameters:    Size  Location     Type
 23348 ;;  frame           2   35[COMRAM] PTR struct NwkFrame_t
 23349 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23350 ;; Auto vars:     Size  Location     Type
 23351 ;;  newFrame        2   38[COMRAM] PTR struct NwkFrame_t
 23352 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23353 ;; Return value:  Size  Location     Type
 23354 ;;                  1    wreg      void 
 23355 ;; Registers used:
 23356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23357 ;; Tracked objects:
 23358 ;;		On entry : 0/1
 23359 ;;		On exit  : 0/0
 23360 ;;		Unchanged: 0/0
 23361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23362 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23363 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23364 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23365 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23366 ;;Total ram usage:        5 bytes
 23367 ;; Hardware stack levels used:    1
 23368 ;; Hardware stack levels required when called:    9
 23369 ;; This function calls:
 23370 ;;		_memcpy
 23371 ;;		_nwkFrameAlloc
 23372 ;;		_rand
 23373 ;; This function is called by:
 23374 ;;		_nwkRxHandleReceivedFrame
 23375 ;; This function uses a non-reentrant model
 23376 ;;
 23377                           
 23378                           	psect	text143
 23379  004ACC                     __ptext143:
 23380                           	opt callstack 0
 23381  004ACC                     _nwkTxBroadcastFrame:
 23382                           	opt callstack 17
 23383                           
 23384                           ;../nwk/nwk_src/nwkTx.c: 159: void nwkTxBroadcastFrame(NwkFrame_t *frame);../nwk/nwk_src
      +                          /nwkTx.c: 160: {;../nwk/nwk_src/nwkTx.c: 161:   NwkFrame_t *newFrame;;../nwk/nwk_src/nwk
      +                          Tx.c: 163:   if (((void*)0) == (newFrame = nwkFrameAlloc()))
 23385                           
 23386                           ;incstack = 0
 23387  004ACC  EC5C  F038         	call	_nwkFrameAlloc	;wreg free
 23388  004AD0  0060  F038  F027   	movff	?_nwkFrameAlloc,nwkTxBroadcastFrame@newFrame
 23389  004AD6  0060  F03C  F028   	movff	?_nwkFrameAlloc+1,nwkTxBroadcastFrame@newFrame+1
 23390  004ADC  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 23391  004ADE  1028               	iorwf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 23392  004AE0  B4D8               	btfsc	status,2,c
 23393  004AE2  0012               	return	
 23394                           
 23395                           ;../nwk/nwk_src/nwkTx.c: 166:   newFrame->state = NWK_TX_STATE_DELAY;
 23396  004AE4  0060  F09F  FFD9   	movff	nwkTxBroadcastFrame@newFrame,fsr2l
 23397  004AEA  0060  F0A3  FFDA   	movff	nwkTxBroadcastFrame@newFrame+1,fsr2h
 23398  004AF0  0E12               	movlw	18
 23399  004AF2  6EDF               	movwf	indf2,c
 23400                           
 23401                           ;../nwk/nwk_src/nwkTx.c: 167:   newFrame->size = frame->size;
 23402  004AF4  EE20 F001          	lfsr	2,1
 23403  004AF8  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 23404  004AFA  26D9               	addwf	fsr2l,f,c
 23405  004AFC  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 23406  004AFE  22DA               	addwfc	fsr2h,f,c
 23407  004B00  EE10 F001          	lfsr	1,1
 23408  004B04  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 23409  004B06  26E1               	addwf	fsr1l,f,c
 23410  004B08  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 23411  004B0A  22E2               	addwfc	fsr1h,f,c
 23412  004B0C  006F FF7F FFE7     	movff	indf2,indf1
 23413                           
 23414                           ;../nwk/nwk_src/nwkTx.c: 168:   newFrame->tx.status = NWK_SUCCESS_STATUS;
 23415  004B12  EE20 F083          	lfsr	2,131
 23416  004B16  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 23417  004B18  26D9               	addwf	fsr2l,f,c
 23418  004B1A  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 23419  004B1C  22DA               	addwfc	fsr2h,f,c
 23420  004B1E  0E00               	movlw	0
 23421  004B20  6EDF               	movwf	indf2,c
 23422                           
 23423                           ;../nwk/nwk_src/nwkTx.c: 169:   newFrame->tx.timeout = (rand() & 0x07) + 1;
 23424  004B22  EC09  F02A         	call	_rand	;wreg free
 23425  004B26  0E07               	movlw	7
 23426  004B28  161A               	andwf	?_rand^0,f,c
 23427  004B2A  0E00               	movlw	0
 23428  004B2C  161B               	andwf	(?_rand+1)^0,f,c
 23429  004B2E  0E01               	movlw	1
 23430  004B30  261A               	addwf	?_rand^0,f,c
 23431  004B32  0E00               	movlw	0
 23432  004B34  221B               	addwfc	(?_rand+1)^0,f,c
 23433  004B36  EE20 F084          	lfsr	2,132
 23434  004B3A  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 23435  004B3C  26D9               	addwf	fsr2l,f,c
 23436  004B3E  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 23437  004B40  22DA               	addwfc	fsr2h,f,c
 23438  004B42  0060  F06B  FFDE   	movff	?_rand,postinc2
 23439  004B48  0060  F06F  FFDD   	movff	?_rand+1,postdec2
 23440                           
 23441                           ; BSR set to: 1
 23442                           ;../nwk/nwk_src/nwkTx.c: 170:   newFrame->tx.confirm = ((void*)0);
 23443  004B4E  EE20 F087          	lfsr	2,135
 23444  004B52  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 23445  004B54  26D9               	addwf	fsr2l,f,c
 23446  004B56  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 23447  004B58  22DA               	addwfc	fsr2h,f,c
 23448  004B5A  0E00               	movlw	0
 23449  004B5C  6EDE               	movwf	postinc2,c
 23450  004B5E  0E00               	movlw	0
 23451  004B60  6EDD               	movwf	postdec2,c
 23452                           
 23453                           ; BSR set to: 1
 23454                           ;../nwk/nwk_src/nwkTx.c: 171:   memcpy(newFrame->data, frame->data, frame->size);
 23455  004B62  0E02               	movlw	2
 23456  004B64  2427               	addwf	nwkTxBroadcastFrame@newFrame^0,w,c
 23457  004B66  6E08               	movwf	memcpy@d1^0,c
 23458  004B68  0E00               	movlw	0
 23459  004B6A  2028               	addwfc	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 23460  004B6C  6E09               	movwf	(memcpy@d1+1)^0,c
 23461  004B6E  0E02               	movlw	2
 23462  004B70  2424               	addwf	nwkTxBroadcastFrame@frame^0,w,c
 23463  004B72  6E0A               	movwf	memcpy@s1^0,c
 23464  004B74  0E00               	movlw	0
 23465  004B76  2025               	addwfc	(nwkTxBroadcastFrame@frame+1)^0,w,c
 23466  004B78  6E0B               	movwf	(memcpy@s1+1)^0,c
 23467  004B7A  EE20 F001          	lfsr	2,1
 23468  004B7E  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 23469  004B80  26D9               	addwf	fsr2l,f,c
 23470  004B82  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 23471  004B84  22DA               	addwfc	fsr2h,f,c
 23472  004B86  50DF               	movf	indf2,w,c
 23473  004B88  6E26               	movwf	??_nwkTxBroadcastFrame^0,c
 23474  004B8A  5026               	movf	??_nwkTxBroadcastFrame^0,w,c
 23475  004B8C  6E0C               	movwf	memcpy@n^0,c
 23476  004B8E  6A0D               	clrf	(memcpy@n+1)^0,c
 23477  004B90  EC95  F03F         	call	_memcpy	;wreg free
 23478                           
 23479                           ;../nwk/nwk_src/nwkTx.c: 173:   newFrame->header.macFcf = 0x8841;
 23480  004B94  EE20 F002          	lfsr	2,2
 23481  004B98  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 23482  004B9A  26D9               	addwf	fsr2l,f,c
 23483  004B9C  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 23484  004B9E  22DA               	addwfc	fsr2h,f,c
 23485  004BA0  0E41               	movlw	65
 23486  004BA2  6EDE               	movwf	postinc2,c
 23487  004BA4  0E88               	movlw	136
 23488  004BA6  6EDD               	movwf	postdec2,c
 23489                           
 23490                           ;../nwk/nwk_src/nwkTx.c: 174:   newFrame->header.macDstAddr = 0xffff;
 23491  004BA8  EE20 F007          	lfsr	2,7
 23492  004BAC  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 23493  004BAE  26D9               	addwf	fsr2l,f,c
 23494  004BB0  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 23495  004BB2  22DA               	addwfc	fsr2h,f,c
 23496  004BB4  0EFF               	movlw	255
 23497  004BB6  6EDE               	movwf	postinc2,c
 23498  004BB8  0EFF               	movlw	255
 23499  004BBA  6EDD               	movwf	postdec2,c
 23500                           
 23501                           ;../nwk/nwk_src/nwkTx.c: 175:   newFrame->header.macDstPanId = frame->header.macDstPanId
      +                          ;
 23502  004BBC  EE20 F005          	lfsr	2,5
 23503  004BC0  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 23504  004BC2  26D9               	addwf	fsr2l,f,c
 23505  004BC4  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 23506  004BC6  22DA               	addwfc	fsr2h,f,c
 23507  004BC8  EE10 F005          	lfsr	1,5
 23508  004BCC  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 23509  004BCE  26E1               	addwf	fsr1l,f,c
 23510  004BD0  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 23511  004BD2  22E2               	addwfc	fsr1h,f,c
 23512  004BD4  006F FF7B FFE6     	movff	postinc2,postinc1
 23513  004BDA  006F FF77 FFE5     	movff	postdec2,postdec1
 23514                           
 23515                           ;../nwk/nwk_src/nwkTx.c: 176:   newFrame->header.macSrcAddr = nwkIb.addr;
 23516  004BE0  EE20 F009          	lfsr	2,9
 23517  004BE4  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 23518  004BE6  26D9               	addwf	fsr2l,f,c
 23519  004BE8  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 23520  004BEA  22DA               	addwfc	fsr2h,f,c
 23521  004BEC  0060  F4C7  FFDE   	movff	_nwkIb,postinc2
 23522  004BF2  0060  F4CB  FFDD   	movff	_nwkIb+1,postdec2
 23523                           
 23524                           ;../nwk/nwk_src/nwkTx.c: 177:   newFrame->header.macSeq = ++nwkIb.macSeqNum;
 23525  004BF8  0101               	movlb	1	; () banked
 23526  004BFA  2B36               	incf	(_nwkIb+5)& (0+255),f,b
 23527  004BFC  EE20 F004          	lfsr	2,4
 23528  004C00  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 23529  004C02  26D9               	addwf	fsr2l,f,c
 23530  004C04  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 23531  004C06  22DA               	addwfc	fsr2h,f,c
 23532  004C08  0060  F4DB  FFDF   	movff	_nwkIb+5,indf2
 23533  004C0E  0012               	return		;funcret
 23534  004C10                     __end_of_nwkTxBroadcastFrame:
 23535                           	opt callstack 0
 23536                           
 23537 ;; *************** function _nwkRxRejectDuplicate *****************
 23538 ;; Defined at:
 23539 ;;		line 200 in file "../nwk/nwk_src/nwkRx.c"
 23540 ;; Parameters:    Size  Location     Type
 23541 ;;  header          2   17[COMRAM] PTR __pack struct NwkFra
 23542 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 23543 ;; Auto vars:     Size  Location     Type
 23544 ;;  shift           1   23[COMRAM] unsigned char 
 23545 ;;  diff            1   25[COMRAM] unsigned char 
 23546 ;;  i               1   24[COMRAM] unsigned char 
 23547 ;;  entry           2   28[COMRAM] PTR struct NwkDuplicateR
 23548 ;;		 -> nwkRxDuplicateRejectionTable(50), 
 23549 ;;  freeEntry       2   26[COMRAM] PTR struct NwkDuplicateR
 23550 ;;		 -> nwkRxDuplicateRejectionTable(50), NULL(0), 
 23551 ;; Return value:  Size  Location     Type
 23552 ;;                  1    wreg      _Bool 
 23553 ;; Registers used:
 23554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23555 ;; Tracked objects:
 23556 ;;		On entry : 0/1
 23557 ;;		On exit  : 0/0
 23558 ;;		Unchanged: 0/0
 23559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23560 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23561 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23562 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23563 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23564 ;;Total ram usage:       13 bytes
 23565 ;; Hardware stack levels used:    1
 23566 ;; Hardware stack levels required when called:    9
 23567 ;; This function calls:
 23568 ;;		_SYS_TimerStart
 23569 ;;		_nwkRouteRemove
 23570 ;; This function is called by:
 23571 ;;		_nwkRxHandleReceivedFrame
 23572 ;; This function uses a non-reentrant model
 23573 ;;
 23574                           
 23575                           	psect	text144
 23576  002DD8                     __ptext144:
 23577                           	opt callstack 0
 23578  002DD8                     _nwkRxRejectDuplicate:
 23579                           	opt callstack 17
 23580                           
 23581                           ;../nwk/nwk_src/nwkRx.c: 200: static _Bool nwkRxRejectDuplicate(NwkFrameHeader_t *header
      +                          );../nwk/nwk_src/nwkRx.c: 201: {;../nwk/nwk_src/nwkRx.c: 202:   NwkDuplicateRejectionEnt
      +                          ry_t *entry;;../nwk/nwk_src/nwkRx.c: 203:   NwkDuplicateRejectionEntry_t *freeEntry = ((
      +                          void*)0);
 23582                           
 23583                           ;incstack = 0
 23584  002DD8  0E00               	movlw	0
 23585  002DDA  6E1B               	movwf	nwkRxRejectDuplicate@freeEntry^0,c
 23586  002DDC  0E00               	movlw	0
 23587  002DDE  6E1C               	movwf	(nwkRxRejectDuplicate@freeEntry+1)^0,c
 23588                           
 23589                           ;../nwk/nwk_src/nwkRx.c: 205:   for (uint8_t i = 0; i < 10; i++)
 23590  002DE0  0E00               	movlw	0
 23591  002DE2  6E19               	movwf	nwkRxRejectDuplicate@i^0,c
 23592  002DE4                     l11158:
 23593                           
 23594                           ;../nwk/nwk_src/nwkRx.c: 206:   {;../nwk/nwk_src/nwkRx.c: 207:     entry = &nwkRxDuplica
      +                          teRejectionTable[i];
 23595  002DE4  5019               	movf	nwkRxRejectDuplicate@i^0,w,c
 23596  002DE6  0D05               	mullw	5
 23597  002DE8  0EC0               	movlw	low _nwkRxDuplicateRejectionTable
 23598  002DEA  24F3               	addwf	243,w,c
 23599  002DEC  6E1D               	movwf	nwkRxRejectDuplicate@entry^0,c
 23600  002DEE  0E03               	movlw	high _nwkRxDuplicateRejectionTable
 23601  002DF0  20F4               	addwfc	prodh,w,c
 23602  002DF2  6E1E               	movwf	(nwkRxRejectDuplicate@entry+1)^0,c
 23603                           
 23604                           ;../nwk/nwk_src/nwkRx.c: 209:     if (entry->ttl && header->nwkSrcAddr == entry->src)
 23605  002DF4  EE20 F004          	lfsr	2,4
 23606  002DF8  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 23607  002DFA  26D9               	addwf	fsr2l,f,c
 23608  002DFC  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 23609  002DFE  22DA               	addwfc	fsr2h,f,c
 23610  002E00  50DF               	movf	indf2,w,c
 23611  002E02  B4D8               	btfsc	status,2,c
 23612  002E04  D0B3               	goto	l11198
 23613  002E06  0060  F077  FFD9   	movff	nwkRxRejectDuplicate@entry,fsr2l
 23614  002E0C  0060  F07B  FFDA   	movff	nwkRxRejectDuplicate@entry+1,fsr2h
 23615  002E12  EE10 F00B          	lfsr	1,11
 23616  002E16  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 23617  002E18  26E1               	addwf	fsr1l,f,c
 23618  002E1A  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 23619  002E1C  22E2               	addwfc	fsr1h,f,c
 23620  002E1E  50DE               	movf	postinc2,w,c
 23621  002E20  18E6               	xorwf	postinc1,w,c
 23622  002E22  E103               	bnz	u9651
 23623  002E24  50DE               	movf	postinc2,w,c
 23624  002E26  18E6               	xorwf	postinc1,w,c
 23625  002E28  A4D8               	btfss	status,2,c
 23626  002E2A                     u9651:
 23627  002E2A  D0A0               	goto	l11198
 23628                           
 23629                           ;../nwk/nwk_src/nwkRx.c: 210:     {;../nwk/nwk_src/nwkRx.c: 211:       uint8_t diff = (i
      +                          nt8_t)entry->seq - header->nwkSeq;
 23630  002E2C  EE20 F00A          	lfsr	2,10
 23631  002E30  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 23632  002E32  26D9               	addwf	fsr2l,f,c
 23633  002E34  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 23634  002E36  22DA               	addwfc	fsr2h,f,c
 23635  002E38  50DF               	movf	indf2,w,c
 23636  002E3A  6E14               	movwf	??_nwkRxRejectDuplicate^0,c
 23637  002E3C  EE20 F002          	lfsr	2,2
 23638  002E40  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 23639  002E42  26D9               	addwf	fsr2l,f,c
 23640  002E44  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 23641  002E46  22DA               	addwfc	fsr2h,f,c
 23642  002E48  50DF               	movf	indf2,w,c
 23643  002E4A  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 23644  002E4C  5014               	movf	??_nwkRxRejectDuplicate^0,w,c
 23645  002E4E  5C15               	subwf	(??_nwkRxRejectDuplicate+1)^0,w,c
 23646  002E50  6E1A               	movwf	nwkRxRejectDuplicate@diff^0,c
 23647                           
 23648                           ;../nwk/nwk_src/nwkRx.c: 213:       if (diff < 8)
 23649  002E52  0E08               	movlw	8
 23650  002E54  601A               	cpfslt	nwkRxRejectDuplicate@diff^0,c
 23651  002E56  D055               	goto	l11186
 23652                           
 23653                           ;../nwk/nwk_src/nwkRx.c: 214:       {;../nwk/nwk_src/nwkRx.c: 215:         if (entry->ma
      +                          sk & (1 << diff))
 23654  002E58  EE20 F003          	lfsr	2,3
 23655  002E5C  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 23656  002E5E  26D9               	addwf	fsr2l,f,c
 23657  002E60  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 23658  002E62  22DA               	addwfc	fsr2h,f,c
 23659  002E64  50DF               	movf	indf2,w,c
 23660  002E66  6E14               	movwf	??_nwkRxRejectDuplicate^0,c
 23661  002E68  0060  F068  F015   	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate+1
 23662  002E6E  0E01               	movlw	1
 23663  002E70  6E16               	movwf	(??_nwkRxRejectDuplicate+2)^0,c
 23664  002E72  2A15               	incf	(??_nwkRxRejectDuplicate+1)^0,f,c
 23665  002E74  D002               	goto	u9674
 23666  002E76                     u9675:
 23667  002E76  90D8               	bcf	status,0,c
 23668  002E78  3616               	rlcf	(??_nwkRxRejectDuplicate+2)^0,f,c
 23669  002E7A                     u9674:
 23670  002E7A  2E15               	decfsz	(??_nwkRxRejectDuplicate+1)^0,f,c
 23671  002E7C  D7FC               	goto	u9675
 23672  002E7E  5016               	movf	(??_nwkRxRejectDuplicate+2)^0,w,c
 23673  002E80  1414               	andwf	??_nwkRxRejectDuplicate^0,w,c
 23674  002E82  0900               	iorlw	0
 23675  002E84  B4D8               	btfsc	status,2,c
 23676  002E86  D028               	goto	l11178
 23677                           
 23678                           ;../nwk/nwk_src/nwkRx.c: 216:         {;../nwk/nwk_src/nwkRx.c: 218:           if (nwkIb
      +                          .addr == header->macDstAddr)
 23679  002E88  EE20 F005          	lfsr	2,5
 23680  002E8C  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 23681  002E8E  26D9               	addwf	fsr2l,f,c
 23682  002E90  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 23683  002E92  22DA               	addwfc	fsr2h,f,c
 23684  002E94  0101               	movlb	1	; () banked
 23685  002E96  5131               	movf	_nwkIb& (0+255),w,b
 23686  002E98  18DE               	xorwf	postinc2,w,c
 23687  002E9A  E11C               	bnz	l11174
 23688  002E9C  5132               	movf	(_nwkIb+1)& (0+255),w,b
 23689  002E9E  18DE               	xorwf	postinc2,w,c
 23690  002EA0  A4D8               	btfss	status,2,c
 23691  002EA2  D018               	goto	l11174
 23692                           
 23693                           ; BSR set to: 1
 23694                           ;../nwk/nwk_src/nwkRx.c: 219:             nwkRouteRemove(header->nwkDstAddr, header->nwk
      +                          Fcf.multicast);
 23695  002EA4  EE20 F00D          	lfsr	2,13
 23696  002EA8  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 23697  002EAA  26D9               	addwf	fsr2l,f,c
 23698  002EAC  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 23699  002EAE  22DA               	addwfc	fsr2h,f,c
 23700  002EB0  006F FF78  F008    	movff	postinc2,nwkRouteRemove@dst
 23701  002EB6  006F FF74  F009    	movff	postdec2,nwkRouteRemove@dst+1
 23702  002EBC  EE20 F009          	lfsr	2,9
 23703  002EC0  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 23704  002EC2  26D9               	addwf	fsr2l,f,c
 23705  002EC4  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 23706  002EC6  22DA               	addwfc	fsr2h,f,c
 23707  002EC8  0E00               	movlw	0
 23708  002ECA  B6DF               	btfsc	indf2,3,c
 23709  002ECC  0E01               	movlw	1
 23710  002ECE  6E0A               	movwf	nwkRouteRemove@multicast^0,c
 23711  002ED0  EC5F  F047         	call	_nwkRouteRemove	;wreg free
 23712  002ED4                     l11174:
 23713                           
 23714                           ;../nwk/nwk_src/nwkRx.c: 221:           return 1;
 23715  002ED4  0E01               	movlw	1
 23716  002ED6  0012               	return	
 23717  002ED8                     l11178:
 23718                           
 23719                           ;../nwk/nwk_src/nwkRx.c: 224:         entry->mask |= (1 << diff);
 23720  002ED8  0060  F068  F014   	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate
 23721  002EDE  0E01               	movlw	1
 23722  002EE0  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 23723  002EE2  2A14               	incf	??_nwkRxRejectDuplicate^0,f,c
 23724  002EE4  D002               	goto	u9704
 23725  002EE6                     u9705:
 23726  002EE6  90D8               	bcf	status,0,c
 23727  002EE8  3615               	rlcf	(??_nwkRxRejectDuplicate+1)^0,f,c
 23728  002EEA                     u9704:
 23729  002EEA  2E14               	decfsz	??_nwkRxRejectDuplicate^0,f,c
 23730  002EEC  D7FC               	goto	u9705
 23731  002EEE  EE20 F003          	lfsr	2,3
 23732  002EF2  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 23733  002EF4  26D9               	addwf	fsr2l,f,c
 23734  002EF6  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 23735  002EF8  22DA               	addwfc	fsr2h,f,c
 23736  002EFA  5015               	movf	(??_nwkRxRejectDuplicate+1)^0,w,c
 23737  002EFC  12DF               	iorwf	indf2,f,c
 23738  002EFE                     l11180:
 23739                           
 23740                           ;../nwk/nwk_src/nwkRx.c: 225:         return 0;
 23741  002EFE  0E00               	movlw	0
 23742  002F00  0012               	return	
 23743  002F02                     l11186:
 23744                           
 23745                           ;../nwk/nwk_src/nwkRx.c: 228:       {;../nwk/nwk_src/nwkRx.c: 229:         uint8_t shift
      +                           = -(int8_t)diff;
 23746  002F02  501A               	movf	nwkRxRejectDuplicate@diff^0,w,c
 23747  002F04  0800               	sublw	0
 23748  002F06  6E18               	movwf	nwkRxRejectDuplicate@shift^0,c
 23749                           
 23750                           ;../nwk/nwk_src/nwkRx.c: 231:         entry->seq = header->nwkSeq;
 23751  002F08  EE20 F00A          	lfsr	2,10
 23752  002F0C  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 23753  002F0E  26D9               	addwf	fsr2l,f,c
 23754  002F10  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 23755  002F12  22DA               	addwfc	fsr2h,f,c
 23756  002F14  EE10 F002          	lfsr	1,2
 23757  002F18  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 23758  002F1A  26E1               	addwf	fsr1l,f,c
 23759  002F1C  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 23760  002F1E  22E2               	addwfc	fsr1h,f,c
 23761  002F20  006F FF7F FFE7     	movff	indf2,indf1
 23762                           
 23763                           ;../nwk/nwk_src/nwkRx.c: 232:         entry->mask = (entry->mask << shift) | 1;
 23764  002F26  EE20 F003          	lfsr	2,3
 23765  002F2A  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 23766  002F2C  26D9               	addwf	fsr2l,f,c
 23767  002F2E  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 23768  002F30  22DA               	addwfc	fsr2h,f,c
 23769  002F32  0060  F060  F014   	movff	nwkRxRejectDuplicate@shift,??_nwkRxRejectDuplicate
 23770  002F38  EE10 F003          	lfsr	1,3
 23771  002F3C  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 23772  002F3E  26E1               	addwf	fsr1l,f,c
 23773  002F40  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 23774  002F42  22E2               	addwfc	fsr1h,f,c
 23775  002F44  50E7               	movf	indf1,w,c
 23776  002F46  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 23777  002F48  2A14               	incf	??_nwkRxRejectDuplicate^0,f,c
 23778  002F4A  D002               	goto	u9714
 23779  002F4C                     u9715:
 23780  002F4C  90D8               	bcf	status,0,c
 23781  002F4E  3615               	rlcf	(??_nwkRxRejectDuplicate+1)^0,f,c
 23782  002F50                     u9714:
 23783  002F50  2E14               	decfsz	??_nwkRxRejectDuplicate^0,f,c
 23784  002F52  D7FC               	goto	u9715
 23785  002F54  5015               	movf	(??_nwkRxRejectDuplicate+1)^0,w,c
 23786  002F56  0901               	iorlw	1
 23787  002F58  6EDF               	movwf	indf2,c
 23788                           
 23789                           ;../nwk/nwk_src/nwkRx.c: 233:         entry->ttl = ((1000 / 5000) + 1);
 23790  002F5A  EE20 F004          	lfsr	2,4
 23791  002F5E  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 23792  002F60  26D9               	addwf	fsr2l,f,c
 23793  002F62  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 23794  002F64  22DA               	addwfc	fsr2h,f,c
 23795  002F66  0E01               	movlw	1
 23796  002F68  6EDF               	movwf	indf2,c
 23797  002F6A  D7C9               	goto	l11180
 23798  002F6C                     l11198:
 23799                           
 23800                           ;../nwk/nwk_src/nwkRx.c: 238:     if (0 == entry->ttl)
 23801  002F6C  EE20 F004          	lfsr	2,4
 23802  002F70  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 23803  002F72  26D9               	addwf	fsr2l,f,c
 23804  002F74  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 23805  002F76  22DA               	addwfc	fsr2h,f,c
 23806  002F78  50DF               	movf	indf2,w,c
 23807  002F7A  A4D8               	btfss	status,2,c
 23808  002F7C  D006               	goto	l11202
 23809                           
 23810                           ;../nwk/nwk_src/nwkRx.c: 239:       freeEntry = entry;
 23811  002F7E  0060  F074  F01B   	movff	nwkRxRejectDuplicate@entry,nwkRxRejectDuplicate@freeEntry
 23812  002F84  0060  F078  F01C   	movff	nwkRxRejectDuplicate@entry+1,nwkRxRejectDuplicate@freeEntry+1
 23813  002F8A                     l11202:
 23814                           
 23815                           ;../nwk/nwk_src/nwkRx.c: 240:   }
 23816  002F8A  2A19               	incf	nwkRxRejectDuplicate@i^0,f,c
 23817  002F8C  0E09               	movlw	9
 23818  002F8E  6419               	cpfsgt	nwkRxRejectDuplicate@i^0,c
 23819  002F90  D729               	goto	l11158
 23820                           
 23821                           ;../nwk/nwk_src/nwkRx.c: 242:   if (((void*)0) == freeEntry)
 23822  002F92  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 23823  002F94  101C               	iorwf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 23824  002F96  B4D8               	btfsc	status,2,c
 23825  002F98  D79D               	goto	l11174
 23826                           
 23827                           ;../nwk/nwk_src/nwkRx.c: 245:   freeEntry->src = header->nwkSrcAddr;
 23828  002F9A  EE20 F00B          	lfsr	2,11
 23829  002F9E  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 23830  002FA0  26D9               	addwf	fsr2l,f,c
 23831  002FA2  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 23832  002FA4  22DA               	addwfc	fsr2h,f,c
 23833  002FA6  0060  F06F  FFE1   	movff	nwkRxRejectDuplicate@freeEntry,fsr1l
 23834  002FAC  0060  F073  FFE2   	movff	nwkRxRejectDuplicate@freeEntry+1,fsr1h
 23835  002FB2  006F FF7B FFE6     	movff	postinc2,postinc1
 23836  002FB8  006F FF77 FFE5     	movff	postdec2,postdec1
 23837                           
 23838                           ;../nwk/nwk_src/nwkRx.c: 246:   freeEntry->seq = header->nwkSeq;
 23839  002FBE  EE20 F00A          	lfsr	2,10
 23840  002FC2  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 23841  002FC4  26D9               	addwf	fsr2l,f,c
 23842  002FC6  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 23843  002FC8  22DA               	addwfc	fsr2h,f,c
 23844  002FCA  EE10 F002          	lfsr	1,2
 23845  002FCE  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 23846  002FD0  26E1               	addwf	fsr1l,f,c
 23847  002FD2  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 23848  002FD4  22E2               	addwfc	fsr1h,f,c
 23849  002FD6  006F FF7F FFE7     	movff	indf2,indf1
 23850                           
 23851                           ;../nwk/nwk_src/nwkRx.c: 247:   freeEntry->mask = 1;
 23852  002FDC  EE20 F003          	lfsr	2,3
 23853  002FE0  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 23854  002FE2  26D9               	addwf	fsr2l,f,c
 23855  002FE4  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 23856  002FE6  22DA               	addwfc	fsr2h,f,c
 23857  002FE8  0E01               	movlw	1
 23858  002FEA  6EDF               	movwf	indf2,c
 23859                           
 23860                           ;../nwk/nwk_src/nwkRx.c: 248:   freeEntry->ttl = ((1000 / 5000) + 1);
 23861  002FEC  EE20 F004          	lfsr	2,4
 23862  002FF0  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 23863  002FF2  26D9               	addwf	fsr2l,f,c
 23864  002FF4  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 23865  002FF6  22DA               	addwfc	fsr2h,f,c
 23866  002FF8  0E01               	movlw	1
 23867  002FFA  6EDF               	movwf	indf2,c
 23868                           
 23869                           ;../nwk/nwk_src/nwkRx.c: 250:   SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 23870  002FFC  0EA3               	movlw	low _nwkRxDuplicateRejectionTimer
 23871  002FFE  6E10               	movwf	SYS_TimerStart@timer^0,c
 23872  003000  0E01               	movlw	high _nwkRxDuplicateRejectionTimer
 23873  003002  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 23874  003004  ECDC  F049         	call	_SYS_TimerStart	;wreg free
 23875  003008  D77A               	goto	l11180
 23876  00300A                     __end_of_nwkRxRejectDuplicate:
 23877                           	opt callstack 0
 23878                           
 23879 ;; *************** function _SYS_TimerStart *****************
 23880 ;; Defined at:
 23881 ;;		line 70 in file "../sys/sys_src/sysTimer.c"
 23882 ;; Parameters:    Size  Location     Type
 23883 ;;  timer           2   15[COMRAM] PTR struct SYS_Timer_t
 23884 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 23885 ;; Auto vars:     Size  Location     Type
 23886 ;;		None
 23887 ;; Return value:  Size  Location     Type
 23888 ;;                  1    wreg      void 
 23889 ;; Registers used:
 23890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23891 ;; Tracked objects:
 23892 ;;		On entry : 0/0
 23893 ;;		On exit  : 0/0
 23894 ;;		Unchanged: 0/0
 23895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23896 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23900 ;;Total ram usage:        2 bytes
 23901 ;; Hardware stack levels used:    1
 23902 ;; Hardware stack levels required when called:    8
 23903 ;; This function calls:
 23904 ;;		_SYS_TimerStarted
 23905 ;;		_placeTimer
 23906 ;; This function is called by:
 23907 ;;		_nwkRxDuplicateRejectionTimerHandler
 23908 ;;		_nwkRxRejectDuplicate
 23909 ;;		_nwkTxAckWaitTimerHandler
 23910 ;;		_nwkTxDelayTimerHandler
 23911 ;;		_nwkTxTaskHandler
 23912 ;; This function uses a non-reentrant model
 23913 ;;
 23914                           
 23915                           	psect	text145
 23916  0093B8                     __ptext145:
 23917                           	opt callstack 0
 23918  0093B8                     _SYS_TimerStart:
 23919                           	opt callstack 19
 23920                           
 23921                           ;../sys/sys_src/sysTimer.c: 70: void SYS_TimerStart(SYS_Timer_t *timer);../sys/sys_src/s
      +                          ysTimer.c: 71: {;../sys/sys_src/sysTimer.c: 72:   if (!SYS_TimerStarted(timer))
 23922                           
 23923                           ;incstack = 0
 23924  0093B8  0060  F040  F002   	movff	SYS_TimerStart@timer,SYS_TimerStarted@timer
 23925  0093BE  0060  F044  F003   	movff	SYS_TimerStart@timer+1,SYS_TimerStarted@timer+1
 23926  0093C4  ECA4  F045         	call	_SYS_TimerStarted	;wreg free
 23927  0093C8  0900               	iorlw	0
 23928  0093CA  A4D8               	btfss	status,2,c
 23929  0093CC  0012               	return	
 23930                           
 23931                           ;../sys/sys_src/sysTimer.c: 73:     placeTimer(timer);
 23932  0093CE  0060  F040  F002   	movff	SYS_TimerStart@timer,placeTimer@timer
 23933  0093D4  0060  F044  F003   	movff	SYS_TimerStart@timer+1,placeTimer@timer+1
 23934  0093DA  EC09  F01E         	call	_placeTimer	;wreg free
 23935  0093DE  0012               	return		;funcret
 23936  0093E0                     __end_of_SYS_TimerStart:
 23937                           	opt callstack 0
 23938                           
 23939 ;; *************** function _placeTimer *****************
 23940 ;; Defined at:
 23941 ;;		line 146 in file "../sys/sys_src/sysTimer.c"
 23942 ;; Parameters:    Size  Location     Type
 23943 ;;  timer           2    1[COMRAM] PTR struct SYS_Timer_t
 23944 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 23945 ;; Auto vars:     Size  Location     Type
 23946 ;;  t               2   13[COMRAM] PTR struct SYS_Timer_t
 23947 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 23948 ;;  timeout         4    7[COMRAM] unsigned long 
 23949 ;;  prev            2   11[COMRAM] PTR struct SYS_Timer_t
 23950 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 23951 ;; Return value:  Size  Location     Type
 23952 ;;                  1    wreg      void 
 23953 ;; Registers used:
 23954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23955 ;; Tracked objects:
 23956 ;;		On entry : 0/0
 23957 ;;		On exit  : 0/0
 23958 ;;		Unchanged: 0/0
 23959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23960 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23961 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23962 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23963 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23964 ;;Total ram usage:       14 bytes
 23965 ;; Hardware stack levels used:    1
 23966 ;; Hardware stack levels required when called:    7
 23967 ;; This function calls:
 23968 ;;		Nothing
 23969 ;; This function is called by:
 23970 ;;		_SYS_TimerStart
 23971 ;;		_SYS_TimerTaskHandler
 23972 ;; This function uses a non-reentrant model
 23973 ;;
 23974                           
 23975                           	psect	text146
 23976  003C12                     __ptext146:
 23977                           	opt callstack 0
 23978  003C12                     _placeTimer:
 23979                           	opt callstack 21
 23980                           
 23981                           ;../sys/sys_src/sysTimer.c: 146: static void placeTimer(SYS_Timer_t *timer);../sys/sys_s
      +                          rc/sysTimer.c: 147: {;../sys/sys_src/sysTimer.c: 148:   if (timers)
 23982                           
 23983                           ;incstack = 0
 23984  003C12  0100               	movlb	0	; () banked
 23985  003C14  51BB               	movf	_timers& (0+255),w,b
 23986  003C16  11BC               	iorwf	(_timers+1)& (0+255),w,b
 23987  003C18  B4D8               	btfsc	status,2,c
 23988  003C1A  D0A8               	goto	l10082
 23989                           
 23990                           ; BSR set to: 0
 23991                           ;../sys/sys_src/sysTimer.c: 149:   {;../sys/sys_src/sysTimer.c: 150:     SYS_Timer_t *pr
      +                          ev = ((void*)0);
 23992  003C1C  0E00               	movlw	0
 23993  003C1E  6E0C               	movwf	placeTimer@prev^0,c
 23994  003C20  0E00               	movlw	0
 23995  003C22  6E0D               	movwf	(placeTimer@prev+1)^0,c
 23996                           
 23997                           ; BSR set to: 0
 23998                           ;../sys/sys_src/sysTimer.c: 151:     uint32_t timeout = timer->interval;
 23999  003C24  EE20 F006          	lfsr	2,6
 24000  003C28  5002               	movf	placeTimer@timer^0,w,c
 24001  003C2A  26D9               	addwf	fsr2l,f,c
 24002  003C2C  5003               	movf	(placeTimer@timer+1)^0,w,c
 24003  003C2E  22DA               	addwfc	fsr2h,f,c
 24004  003C30  006F FF78  F008    	movff	postinc2,placeTimer@timeout
 24005  003C36  006F FF78  F009    	movff	postinc2,placeTimer@timeout+1
 24006  003C3C  006F FF78  F00A    	movff	postinc2,placeTimer@timeout+2
 24007  003C42  006F FF78  F00B    	movff	postinc2,placeTimer@timeout+3
 24008                           
 24009                           ; BSR set to: 0
 24010                           ;../sys/sys_src/sysTimer.c: 153:     for (SYS_Timer_t *t = timers; t; t = t->next)
 24011  003C48  0060  F2EC  F00E   	movff	_timers,placeTimer@t
 24012  003C4E  0060  F2F0  F00F   	movff	_timers+1,placeTimer@t+1
 24013  003C54  D03F               	goto	l10068
 24014  003C56                     l10058:
 24015                           
 24016                           ;../sys/sys_src/sysTimer.c: 154:     {;../sys/sys_src/sysTimer.c: 155:       if (timeout
      +                           < t->timeout)
 24017  003C56  EE20 F002          	lfsr	2,2
 24018  003C5A  500E               	movf	placeTimer@t^0,w,c
 24019  003C5C  26D9               	addwf	fsr2l,f,c
 24020  003C5E  500F               	movf	(placeTimer@t+1)^0,w,c
 24021  003C60  22DA               	addwfc	fsr2h,f,c
 24022  003C62  50DE               	movf	postinc2,w,c
 24023  003C64  5C08               	subwf	placeTimer@timeout^0,w,c
 24024  003C66  50DE               	movf	postinc2,w,c
 24025  003C68  5809               	subwfb	(placeTimer@timeout+1)^0,w,c
 24026  003C6A  50DE               	movf	postinc2,w,c
 24027  003C6C  580A               	subwfb	(placeTimer@timeout+2)^0,w,c
 24028  003C6E  50DE               	movf	postinc2,w,c
 24029  003C70  580B               	subwfb	(placeTimer@timeout+3)^0,w,c
 24030  003C72  B0D8               	btfsc	status,0,c
 24031  003C74  D00F               	goto	l10064
 24032                           
 24033                           ;../sys/sys_src/sysTimer.c: 156:       {;../sys/sys_src/sysTimer.c: 157:          t->tim
      +                          eout -= timeout;
 24034  003C76  EE20 F002          	lfsr	2,2
 24035  003C7A  500E               	movf	placeTimer@t^0,w,c
 24036  003C7C  26D9               	addwf	fsr2l,f,c
 24037  003C7E  500F               	movf	(placeTimer@t+1)^0,w,c
 24038  003C80  22DA               	addwfc	fsr2h,f,c
 24039  003C82  5008               	movf	placeTimer@timeout^0,w,c
 24040  003C84  5EDE               	subwf	postinc2,f,c
 24041  003C86  5009               	movf	(placeTimer@timeout+1)^0,w,c
 24042  003C88  5ADE               	subwfb	postinc2,f,c
 24043  003C8A  500A               	movf	(placeTimer@timeout+2)^0,w,c
 24044  003C8C  5ADE               	subwfb	postinc2,f,c
 24045  003C8E  500B               	movf	(placeTimer@timeout+3)^0,w,c
 24046  003C90  5ADE               	subwfb	postinc2,f,c
 24047                           
 24048                           ;../sys/sys_src/sysTimer.c: 158:          break;
 24049  003C92  D024               	goto	u8130
 24050  003C94                     l10064:
 24051                           
 24052                           ;../sys/sys_src/sysTimer.c: 161:         timeout -= t->timeout;
 24053  003C94  EE20 F002          	lfsr	2,2
 24054  003C98  500E               	movf	placeTimer@t^0,w,c
 24055  003C9A  26D9               	addwf	fsr2l,f,c
 24056  003C9C  500F               	movf	(placeTimer@t+1)^0,w,c
 24057  003C9E  22DA               	addwfc	fsr2h,f,c
 24058  003CA0  50DE               	movf	postinc2,w,c
 24059  003CA2  5E08               	subwf	placeTimer@timeout^0,f,c
 24060  003CA4  50DE               	movf	postinc2,w,c
 24061  003CA6  5A09               	subwfb	(placeTimer@timeout+1)^0,f,c
 24062  003CA8  50DE               	movf	postinc2,w,c
 24063  003CAA  5A0A               	subwfb	(placeTimer@timeout+2)^0,f,c
 24064  003CAC  50DD               	movf	postdec2,w,c
 24065  003CAE  5A0B               	subwfb	(placeTimer@timeout+3)^0,f,c
 24066                           
 24067                           ;../sys/sys_src/sysTimer.c: 163:       prev = t;
 24068  003CB0  0060  F038  F00C   	movff	placeTimer@t,placeTimer@prev
 24069  003CB6  0060  F03C  F00D   	movff	placeTimer@t+1,placeTimer@prev+1
 24070                           
 24071                           ;../sys/sys_src/sysTimer.c: 164:     }
 24072  003CBC  0060  F03B  FFD9   	movff	placeTimer@t,fsr2l
 24073  003CC2  0060  F03F  FFDA   	movff	placeTimer@t+1,fsr2h
 24074  003CC8  006F FF78  F00E    	movff	postinc2,placeTimer@t
 24075  003CCE  006F FF74  F00F    	movff	postdec2,placeTimer@t+1
 24076  003CD4                     l10068:
 24077  003CD4  500E               	movf	placeTimer@t^0,w,c
 24078  003CD6  100F               	iorwf	(placeTimer@t+1)^0,w,c
 24079  003CD8  A4D8               	btfss	status,2,c
 24080  003CDA  D7BD               	goto	l10058
 24081  003CDC                     u8130:
 24082                           
 24083                           ;../sys/sys_src/sysTimer.c: 166:     timer->timeout = timeout;
 24084  003CDC  EE20 F002          	lfsr	2,2
 24085  003CE0  5002               	movf	placeTimer@timer^0,w,c
 24086  003CE2  26D9               	addwf	fsr2l,f,c
 24087  003CE4  5003               	movf	(placeTimer@timer+1)^0,w,c
 24088  003CE6  22DA               	addwfc	fsr2h,f,c
 24089  003CE8  0060  F023  FFDE   	movff	placeTimer@timeout,postinc2
 24090  003CEE  0060  F027  FFDE   	movff	placeTimer@timeout+1,postinc2
 24091  003CF4  0060  F02B  FFDE   	movff	placeTimer@timeout+2,postinc2
 24092  003CFA  0060  F02F  FFDE   	movff	placeTimer@timeout+3,postinc2
 24093                           
 24094                           ;../sys/sys_src/sysTimer.c: 168:     if (prev)
 24095  003D00  500C               	movf	placeTimer@prev^0,w,c
 24096  003D02  100D               	iorwf	(placeTimer@prev+1)^0,w,c
 24097  003D04  B4D8               	btfsc	status,2,c
 24098  003D06  D01F               	goto	l10078
 24099                           
 24100                           ;../sys/sys_src/sysTimer.c: 169:     {;../sys/sys_src/sysTimer.c: 170:       timer->next
      +                           = prev->next;
 24101  003D08  0060  F033  FFD9   	movff	placeTimer@prev,fsr2l
 24102  003D0E  0060  F037  FFDA   	movff	placeTimer@prev+1,fsr2h
 24103  003D14  0060  F00B  FFE1   	movff	placeTimer@timer,fsr1l
 24104  003D1A  0060  F00F  FFE2   	movff	placeTimer@timer+1,fsr1h
 24105  003D20  006F FF7B FFE6     	movff	postinc2,postinc1
 24106  003D26  006F FF77 FFE5     	movff	postdec2,postdec1
 24107                           
 24108                           ;../sys/sys_src/sysTimer.c: 171:       prev->next = timer;
 24109  003D2C  0060  F033  FFD9   	movff	placeTimer@prev,fsr2l
 24110  003D32  0060  F037  FFDA   	movff	placeTimer@prev+1,fsr2h
 24111  003D38  0060  F00B  FFDE   	movff	placeTimer@timer,postinc2
 24112  003D3E  0060  F00F  FFDD   	movff	placeTimer@timer+1,postdec2
 24113                           
 24114                           ;../sys/sys_src/sysTimer.c: 172:     }
 24115  003D44  0012               	return	
 24116  003D46                     l10078:
 24117                           
 24118                           ;../sys/sys_src/sysTimer.c: 174:     {;../sys/sys_src/sysTimer.c: 175:       timer->next
      +                           = timers;
 24119  003D46  0060  F00B  FFD9   	movff	placeTimer@timer,fsr2l
 24120  003D4C  0060  F00F  FFDA   	movff	placeTimer@timer+1,fsr2h
 24121  003D52  0060  F2EF  FFDE   	movff	_timers,postinc2
 24122  003D58  0060  F2F3  FFDD   	movff	_timers+1,postdec2
 24123  003D5E                     l10080:
 24124                           
 24125                           ;../sys/sys_src/sysTimer.c: 176:       timers = timer;
 24126  003D5E  0060  F008  F0BB   	movff	placeTimer@timer,_timers
 24127  003D64  0060  F00C  F0BC   	movff	placeTimer@timer+1,_timers+1
 24128  003D6A  0012               	return	
 24129  003D6C                     l10082:
 24130                           
 24131                           ; BSR set to: 0
 24132                           ;../sys/sys_src/sysTimer.c: 180:   {;../sys/sys_src/sysTimer.c: 181:     timer->next = (
      +                          (void*)0);
 24133  003D6C  0060  F00B  FFD9   	movff	placeTimer@timer,fsr2l
 24134  003D72  0060  F00F  FFDA   	movff	placeTimer@timer+1,fsr2h
 24135  003D78  0E00               	movlw	0
 24136  003D7A  6EDE               	movwf	postinc2,c
 24137  003D7C  0E00               	movlw	0
 24138  003D7E  6EDD               	movwf	postdec2,c
 24139                           
 24140                           ; BSR set to: 0
 24141                           ;../sys/sys_src/sysTimer.c: 182:     timer->timeout = timer->interval;
 24142  003D80  EE20 F006          	lfsr	2,6
 24143  003D84  5002               	movf	placeTimer@timer^0,w,c
 24144  003D86  26D9               	addwf	fsr2l,f,c
 24145  003D88  5003               	movf	(placeTimer@timer+1)^0,w,c
 24146  003D8A  22DA               	addwfc	fsr2h,f,c
 24147  003D8C  EE10 F002          	lfsr	1,2
 24148  003D90  5002               	movf	placeTimer@timer^0,w,c
 24149  003D92  26E1               	addwf	fsr1l,f,c
 24150  003D94  5003               	movf	(placeTimer@timer+1)^0,w,c
 24151  003D96  22E2               	addwfc	fsr1h,f,c
 24152  003D98  006F FF7B FFE6     	movff	postinc2,postinc1
 24153  003D9E  006F FF7B FFE6     	movff	postinc2,postinc1
 24154  003DA4  006F FF7B FFE6     	movff	postinc2,postinc1
 24155  003DAA  006F FF7B FFE6     	movff	postinc2,postinc1
 24156  003DB0  D7D6               	goto	l10080
 24157  003DB2                     __end_of_placeTimer:
 24158                           	opt callstack 0
 24159                           
 24160 ;; *************** function _SYS_TimerStarted *****************
 24161 ;; Defined at:
 24162 ;;		line 102 in file "../sys/sys_src/sysTimer.c"
 24163 ;; Parameters:    Size  Location     Type
 24164 ;;  timer           2    1[COMRAM] PTR struct SYS_Timer_t
 24165 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 24166 ;; Auto vars:     Size  Location     Type
 24167 ;;  t               2    3[COMRAM] PTR struct SYS_Timer_t
 24168 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 24169 ;; Return value:  Size  Location     Type
 24170 ;;                  1    wreg      _Bool 
 24171 ;; Registers used:
 24172 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24173 ;; Tracked objects:
 24174 ;;		On entry : 0/0
 24175 ;;		On exit  : 0/0
 24176 ;;		Unchanged: 0/0
 24177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24179 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24181 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24182 ;;Total ram usage:        4 bytes
 24183 ;; Hardware stack levels used:    1
 24184 ;; Hardware stack levels required when called:    7
 24185 ;; This function calls:
 24186 ;;		Nothing
 24187 ;; This function is called by:
 24188 ;;		_SYS_TimerStart
 24189 ;; This function uses a non-reentrant model
 24190 ;;
 24191                           
 24192                           	psect	text147
 24193  008B48                     __ptext147:
 24194                           	opt callstack 0
 24195  008B48                     _SYS_TimerStarted:
 24196                           	opt callstack 19
 24197                           
 24198                           ;../sys/sys_src/sysTimer.c: 102: _Bool SYS_TimerStarted(SYS_Timer_t *timer);../sys/sys_s
      +                          rc/sysTimer.c: 103: {;../sys/sys_src/sysTimer.c: 104:   for (SYS_Timer_t *t = timers; t;
      +                           t = t->next)
 24199                           
 24200                           ;incstack = 0
 24201  008B48  0060  F2EC  F004   	movff	_timers,SYS_TimerStarted@t
 24202  008B4E  0060  F2F0  F005   	movff	_timers+1,SYS_TimerStarted@t+1
 24203  008B54  D015               	goto	l10044
 24204  008B56                     l10036:
 24205                           
 24206                           ;../sys/sys_src/sysTimer.c: 105:     if (t == timer)
 24207  008B56  5002               	movf	SYS_TimerStarted@timer^0,w,c
 24208  008B58  1804               	xorwf	SYS_TimerStarted@t^0,w,c
 24209  008B5A  E106               	bnz	l10042
 24210  008B5C  5003               	movf	(SYS_TimerStarted@timer+1)^0,w,c
 24211  008B5E  1805               	xorwf	(SYS_TimerStarted@t+1)^0,w,c
 24212  008B60  A4D8               	btfss	status,2,c
 24213  008B62  D002               	goto	l10042
 24214                           
 24215                           ;../sys/sys_src/sysTimer.c: 106:       return 1;
 24216  008B64  0E01               	movlw	1
 24217  008B66  0012               	return	
 24218  008B68                     l10042:
 24219  008B68  0060  F013  FFD9   	movff	SYS_TimerStarted@t,fsr2l
 24220  008B6E  0060  F017  FFDA   	movff	SYS_TimerStarted@t+1,fsr2h
 24221  008B74  006F FF78  F004    	movff	postinc2,SYS_TimerStarted@t
 24222  008B7A  006F FF74  F005    	movff	postdec2,SYS_TimerStarted@t+1
 24223  008B80                     l10044:
 24224  008B80  5004               	movf	SYS_TimerStarted@t^0,w,c
 24225  008B82  1005               	iorwf	(SYS_TimerStarted@t+1)^0,w,c
 24226  008B84  A4D8               	btfss	status,2,c
 24227  008B86  D7E7               	goto	l10036
 24228                           
 24229                           ;../sys/sys_src/sysTimer.c: 107:   return 0;
 24230  008B88  0E00               	movlw	0
 24231  008B8A  0012               	return		;funcret
 24232  008B8C                     __end_of_SYS_TimerStarted:
 24233                           	opt callstack 0
 24234                           
 24235 ;; *************** function _nwkRouteFrameReceived *****************
 24236 ;; Defined at:
 24237 ;;		line 194 in file "../nwk/nwk_src/nwkRoute.c"
 24238 ;; Parameters:    Size  Location     Type
 24239 ;;  frame           2   10[COMRAM] PTR struct NwkFrame_t
 24240 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24241 ;; Auto vars:     Size  Location     Type
 24242 ;;  discovery       1   16[COMRAM] _Bool 
 24243 ;;  header          2   20[COMRAM] PTR __pack struct NwkFra
 24244 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 24245 ;;  entry           2   18[COMRAM] PTR struct NWK_RouteTabl
 24246 ;;		 -> nwkRouteTable(70), NULL(0), 
 24247 ;; Return value:  Size  Location     Type
 24248 ;;                  1    wreg      void 
 24249 ;; Registers used:
 24250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24251 ;; Tracked objects:
 24252 ;;		On entry : 3F/1
 24253 ;;		On exit  : 0/0
 24254 ;;		Unchanged: 0/0
 24255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24256 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24257 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24258 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24259 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24260 ;;Total ram usage:       12 bytes
 24261 ;; Hardware stack levels used:    1
 24262 ;; Hardware stack levels required when called:    8
 24263 ;; This function calls:
 24264 ;;		_NWK_RouteFindEntry
 24265 ;;		_NWK_RouteNewEntry
 24266 ;; This function is called by:
 24267 ;;		_nwkRxHandleReceivedFrame
 24268 ;; This function uses a non-reentrant model
 24269 ;;
 24270                           
 24271                           	psect	text148
 24272  003A30                     __ptext148:
 24273                           	opt callstack 0
 24274  003A30                     _nwkRouteFrameReceived:
 24275                           	opt callstack 18
 24276                           
 24277                           ; BSR set to: 1
 24278                           ;../nwk/nwk_src/nwkRoute.c: 194: void nwkRouteFrameReceived(NwkFrame_t *frame);../nwk/nw
      +                          k_src/nwkRoute.c: 195: {;../nwk/nwk_src/nwkRoute.c: 197:   NwkFrameHeader_t *header = &f
      +                          rame->header;
 24279                           
 24280                           ;incstack = 0
 24281  003A30  0E02               	movlw	2
 24282  003A32  240B               	addwf	nwkRouteFrameReceived@frame^0,w,c
 24283  003A34  6E15               	movwf	nwkRouteFrameReceived@header^0,c
 24284  003A36  0E00               	movlw	0
 24285  003A38  200C               	addwfc	(nwkRouteFrameReceived@frame+1)^0,w,c
 24286  003A3A  6E16               	movwf	(nwkRouteFrameReceived@header+1)^0,c
 24287                           
 24288                           ; BSR set to: 1
 24289                           ;../nwk/nwk_src/nwkRoute.c: 198:   NWK_RouteTableEntry_t *entry;;../nwk/nwk_src/nwkRoute
      +                          .c: 200:   if ((header->macSrcAddr & 0x8000) &&
 24290  003A3C  EE20 F007          	lfsr	2,7
 24291  003A40  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 24292  003A42  26D9               	addwf	fsr2l,f,c
 24293  003A44  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 24294  003A46  22DA               	addwfc	fsr2h,f,c
 24295  003A48  006F FF78  F00D    	movff	postinc2,??_nwkRouteFrameReceived
 24296  003A4E  006F FF74  F00E    	movff	postdec2,??_nwkRouteFrameReceived+1
 24297  003A54  AE0E               	btfss	(??_nwkRouteFrameReceived+1)^0,7,c
 24298  003A56  D015               	goto	l11034
 24299                           
 24300                           ; BSR set to: 1
 24301  003A58  EE20 F00B          	lfsr	2,11
 24302  003A5C  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 24303  003A5E  26D9               	addwf	fsr2l,f,c
 24304  003A60  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 24305  003A62  22DA               	addwfc	fsr2h,f,c
 24306  003A64  EE10 F007          	lfsr	1,7
 24307  003A68  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 24308  003A6A  26E1               	addwf	fsr1l,f,c
 24309  003A6C  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 24310  003A6E  22E2               	addwfc	fsr1h,f,c
 24311  003A70  50DE               	movf	postinc2,w,c
 24312  003A72  18E6               	xorwf	postinc1,w,c
 24313  003A74  E105               	bnz	u9450
 24314  003A76  50DE               	movf	postinc2,w,c
 24315  003A78  18E6               	xorwf	postinc1,w,c
 24316  003A7A  A4D8               	btfss	status,2,c
 24317  003A7C  0012               	return	
 24318  003A7E  D001               	goto	l11034
 24319  003A80                     u9450:
 24320  003A80  0012               	return	
 24321  003A82                     l11034:
 24322                           
 24323                           ; BSR set to: 1
 24324                           ;../nwk/nwk_src/nwkRoute.c: 204:   if (0xffff == header->macDstPanId)
 24325  003A82  EE20 F003          	lfsr	2,3
 24326  003A86  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 24327  003A88  26D9               	addwf	fsr2l,f,c
 24328  003A8A  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 24329  003A8C  22DA               	addwfc	fsr2h,f,c
 24330  003A8E  28DE               	incf	postinc2,w,c
 24331  003A90  E103               	bnz	l11038
 24332  003A92  28DE               	incf	postinc2,w,c
 24333  003A94  B4D8               	btfsc	status,2,c
 24334  003A96  0012               	return	
 24335  003A98                     l11038:
 24336                           
 24337                           ; BSR set to: 1
 24338                           ;../nwk/nwk_src/nwkRoute.c: 207:   entry = NWK_RouteFindEntry(header->nwkSrcAddr, 0);
 24339  003A98  EE20 F00B          	lfsr	2,11
 24340  003A9C  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 24341  003A9E  26D9               	addwf	fsr2l,f,c
 24342  003AA0  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 24343  003AA2  22DA               	addwfc	fsr2h,f,c
 24344  003AA4  006F FF78  F002    	movff	postinc2,NWK_RouteFindEntry@dst
 24345  003AAA  006F FF74  F003    	movff	postdec2,NWK_RouteFindEntry@dst+1
 24346  003AB0  0E00               	movlw	0
 24347  003AB2  6E04               	movwf	NWK_RouteFindEntry@multicast^0,c
 24348  003AB4  ECA7  F040         	call	_NWK_RouteFindEntry	;wreg free
 24349  003AB8  0060  F008  F013   	movff	?_NWK_RouteFindEntry,nwkRouteFrameReceived@entry
 24350  003ABE  0060  F00C  F014   	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameReceived@entry+1
 24351                           
 24352                           ;../nwk/nwk_src/nwkRoute.c: 209:   if (entry)
 24353  003AC4  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 24354  003AC6  1014               	iorwf	(nwkRouteFrameReceived@entry+1)^0,w,c
 24355  003AC8  B4D8               	btfsc	status,2,c
 24356  003ACA  D067               	goto	l11060
 24357                           
 24358                           ;../nwk/nwk_src/nwkRoute.c: 210:   {;../nwk/nwk_src/nwkRoute.c: 211:     _Bool discovery
      +                           = (0xffff == header->macDstAddr &&
 24359  003ACC  0E00               	movlw	0
 24360  003ACE  6E12               	movwf	_nwkRouteFrameReceived$3893^0,c
 24361  003AD0  EE20 F005          	lfsr	2,5
 24362  003AD4  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 24363  003AD6  26D9               	addwf	fsr2l,f,c
 24364  003AD8  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 24365  003ADA  22DA               	addwfc	fsr2h,f,c
 24366  003ADC  28DE               	incf	postinc2,w,c
 24367  003ADE  E113               	bnz	l1974
 24368  003AE0  28DE               	incf	postinc2,w,c
 24369  003AE2  A4D8               	btfss	status,2,c
 24370  003AE4  D010               	goto	l1974
 24371  003AE6  EE20 F00D          	lfsr	2,13
 24372  003AEA  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 24373  003AEC  26D9               	addwf	fsr2l,f,c
 24374  003AEE  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 24375  003AF0  22DA               	addwfc	fsr2h,f,c
 24376  003AF2  0101               	movlb	1	; () banked
 24377  003AF4  5131               	movf	_nwkIb& (0+255),w,b
 24378  003AF6  18DE               	xorwf	postinc2,w,c
 24379  003AF8  E106               	bnz	l1974
 24380  003AFA  5132               	movf	(_nwkIb+1)& (0+255),w,b
 24381  003AFC  18DE               	xorwf	postinc2,w,c
 24382  003AFE  A4D8               	btfss	status,2,c
 24383  003B00  D002               	goto	l1974
 24384                           
 24385                           ; BSR set to: 1
 24386  003B02  0E01               	movlw	1
 24387  003B04  6E12               	movwf	_nwkRouteFrameReceived$3893^0,c
 24388  003B06                     l1974:
 24389  003B06  5012               	movf	_nwkRouteFrameReceived$3893^0,w,c
 24390  003B08  B4D8               	btfsc	status,2,c
 24391  003B0A  D002               	goto	u9500
 24392  003B0C  0E01               	movlw	1
 24393  003B0E  D001               	goto	u9510
 24394  003B10                     u9500:
 24395  003B10  0E00               	movlw	0
 24396  003B12                     u9510:
 24397  003B12  6E11               	movwf	nwkRouteFrameReceived@discovery^0,c
 24398                           
 24399                           ;../nwk/nwk_src/nwkRoute.c: 214:     if ((entry->nextHopAddr != header->macSrcAddr && fr
      +                          ame->rx.lqi > entry->lqi) || discovery)
 24400  003B14  EE20 F007          	lfsr	2,7
 24401  003B18  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 24402  003B1A  26D9               	addwf	fsr2l,f,c
 24403  003B1C  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 24404  003B1E  22DA               	addwfc	fsr2h,f,c
 24405  003B20  EE10 F003          	lfsr	1,3
 24406  003B24  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 24407  003B26  26E1               	addwf	fsr1l,f,c
 24408  003B28  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 24409  003B2A  22E2               	addwfc	fsr1h,f,c
 24410  003B2C  50DE               	movf	postinc2,w,c
 24411  003B2E  18E6               	xorwf	postinc1,w,c
 24412  003B30  E104               	bnz	u9520
 24413  003B32  50DE               	movf	postinc2,w,c
 24414  003B34  18E6               	xorwf	postinc1,w,c
 24415  003B36  B4D8               	btfsc	status,2,c
 24416  003B38  D010               	goto	u9530
 24417  003B3A                     u9520:
 24418  003B3A  EE20 F083          	lfsr	2,131
 24419  003B3E  500B               	movf	nwkRouteFrameReceived@frame^0,w,c
 24420  003B40  26D9               	addwf	fsr2l,f,c
 24421  003B42  500C               	movf	(nwkRouteFrameReceived@frame+1)^0,w,c
 24422  003B44  22DA               	addwfc	fsr2h,f,c
 24423  003B46  EE10 F006          	lfsr	1,6
 24424  003B4A  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 24425  003B4C  26E1               	addwf	fsr1l,f,c
 24426  003B4E  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 24427  003B50  22E2               	addwfc	fsr1h,f,c
 24428  003B52  50DE               	movf	postinc2,w,c
 24429  003B54  5CE6               	subwf	postinc1,w,c
 24430  003B56  A0D8               	btfss	status,0,c
 24431  003B58  D003               	goto	u9540
 24432  003B5A                     u9530:
 24433  003B5A  5011               	movf	nwkRouteFrameReceived@discovery^0,w,c
 24434  003B5C  B4D8               	btfsc	status,2,c
 24435  003B5E  D049               	goto	l11066
 24436  003B60                     u9540:
 24437                           
 24438                           ;../nwk/nwk_src/nwkRoute.c: 215:     {;../nwk/nwk_src/nwkRoute.c: 216:       entry->next
      +                          HopAddr = header->macSrcAddr;
 24439  003B60  EE20 F007          	lfsr	2,7
 24440  003B64  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 24441  003B66  26D9               	addwf	fsr2l,f,c
 24442  003B68  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 24443  003B6A  22DA               	addwfc	fsr2h,f,c
 24444  003B6C  EE10 F003          	lfsr	1,3
 24445  003B70  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 24446  003B72  26E1               	addwf	fsr1l,f,c
 24447  003B74  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 24448  003B76  22E2               	addwfc	fsr1h,f,c
 24449  003B78  006F FF7B FFE6     	movff	postinc2,postinc1
 24450  003B7E  006F FF77 FFE5     	movff	postdec2,postdec1
 24451                           
 24452                           ;../nwk/nwk_src/nwkRoute.c: 217:       entry->score = 3;
 24453  003B84  0060  F04F  FFD9   	movff	nwkRouteFrameReceived@entry,fsr2l
 24454  003B8A  0060  F053  FFDA   	movff	nwkRouteFrameReceived@entry+1,fsr2h
 24455  003B90  50DF               	movf	indf2,w,c
 24456  003B92  0B0F               	andlw	-241
 24457  003B94  0930               	iorlw	48
 24458  003B96  6EDF               	movwf	indf2,c
 24459  003B98  D02C               	goto	l11066
 24460  003B9A                     l11060:
 24461                           
 24462                           ;../nwk/nwk_src/nwkRoute.c: 221:   {;../nwk/nwk_src/nwkRoute.c: 222:     entry = NWK_Rou
      +                          teNewEntry();
 24463  003B9A  EC6A  F035         	call	_NWK_RouteNewEntry	;wreg free
 24464  003B9E  0060  F008  F013   	movff	?_NWK_RouteNewEntry,nwkRouteFrameReceived@entry
 24465  003BA4  0060  F00C  F014   	movff	?_NWK_RouteNewEntry+1,nwkRouteFrameReceived@entry+1
 24466                           
 24467                           ;../nwk/nwk_src/nwkRoute.c: 224:     entry->dstAddr = header->nwkSrcAddr;
 24468  003BAA  EE20 F00B          	lfsr	2,11
 24469  003BAE  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 24470  003BB0  26D9               	addwf	fsr2l,f,c
 24471  003BB2  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 24472  003BB4  22DA               	addwfc	fsr2h,f,c
 24473  003BB6  EE10 F001          	lfsr	1,1
 24474  003BBA  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 24475  003BBC  26E1               	addwf	fsr1l,f,c
 24476  003BBE  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 24477  003BC0  22E2               	addwfc	fsr1h,f,c
 24478  003BC2  006F FF7B FFE6     	movff	postinc2,postinc1
 24479  003BC8  006F FF77 FFE5     	movff	postdec2,postdec1
 24480                           
 24481                           ;../nwk/nwk_src/nwkRoute.c: 225:     entry->nextHopAddr = header->macSrcAddr;
 24482  003BCE  EE20 F007          	lfsr	2,7
 24483  003BD2  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 24484  003BD4  26D9               	addwf	fsr2l,f,c
 24485  003BD6  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 24486  003BD8  22DA               	addwfc	fsr2h,f,c
 24487  003BDA  EE10 F003          	lfsr	1,3
 24488  003BDE  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 24489  003BE0  26E1               	addwf	fsr1l,f,c
 24490  003BE2  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 24491  003BE4  22E2               	addwfc	fsr1h,f,c
 24492  003BE6  006F FF7B FFE6     	movff	postinc2,postinc1
 24493  003BEC  006F FF77 FFE5     	movff	postdec2,postdec1
 24494  003BF2                     l11066:
 24495                           
 24496                           ;../nwk/nwk_src/nwkRoute.c: 228:   entry->lqi = frame->rx.lqi;
 24497  003BF2  EE20 F083          	lfsr	2,131
 24498  003BF6  500B               	movf	nwkRouteFrameReceived@frame^0,w,c
 24499  003BF8  26D9               	addwf	fsr2l,f,c
 24500  003BFA  500C               	movf	(nwkRouteFrameReceived@frame+1)^0,w,c
 24501  003BFC  22DA               	addwfc	fsr2h,f,c
 24502  003BFE  EE10 F006          	lfsr	1,6
 24503  003C02  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 24504  003C04  26E1               	addwf	fsr1l,f,c
 24505  003C06  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 24506  003C08  22E2               	addwfc	fsr1h,f,c
 24507  003C0A  006F FF7F FFE7     	movff	indf2,indf1
 24508  003C10  0012               	return		;funcret
 24509  003C12                     __end_of_nwkRouteFrameReceived:
 24510                           	opt callstack 0
 24511                           
 24512 ;; *************** function _NWK_RouteNewEntry *****************
 24513 ;; Defined at:
 24514 ;;		line 105 in file "../nwk/nwk_src/nwkRoute.c"
 24515 ;; Parameters:    Size  Location     Type
 24516 ;;		None
 24517 ;; Auto vars:     Size  Location     Type
 24518 ;;  i               1    5[COMRAM] unsigned char 
 24519 ;;  entry           2    8[COMRAM] PTR struct NWK_RouteTabl
 24520 ;;		 -> nwkRouteTable(70), NULL(0), 
 24521 ;;  iter            2    6[COMRAM] PTR struct NWK_RouteTabl
 24522 ;;		 -> nwkRouteTable(70), 
 24523 ;; Return value:  Size  Location     Type
 24524 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
 24525 ;; Registers used:
 24526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 24527 ;; Tracked objects:
 24528 ;;		On entry : 0/1
 24529 ;;		On exit  : 0/0
 24530 ;;		Unchanged: 0/0
 24531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24533 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24534 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24535 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24536 ;;Total ram usage:        9 bytes
 24537 ;; Hardware stack levels used:    1
 24538 ;; Hardware stack levels required when called:    7
 24539 ;; This function calls:
 24540 ;;		Nothing
 24541 ;; This function is called by:
 24542 ;;		_nwkRouteFrameReceived
 24543 ;; This function uses a non-reentrant model
 24544 ;;
 24545                           
 24546                           	psect	text149
 24547  006AD4                     __ptext149:
 24548                           	opt callstack 0
 24549  006AD4                     _NWK_RouteNewEntry:
 24550                           	opt callstack 18
 24551                           
 24552                           ;../nwk/nwk_src/nwkRoute.c: 107:   NWK_RouteTableEntry_t *iter = nwkRouteTable;
 24553                           
 24554                           ;incstack = 0
 24555  006AD4  0E74               	movlw	low _nwkRouteTable
 24556  006AD6  6E07               	movwf	NWK_RouteNewEntry@iter^0,c
 24557  006AD8  0E02               	movlw	high _nwkRouteTable
 24558  006ADA  6E08               	movwf	(NWK_RouteNewEntry@iter+1)^0,c
 24559                           
 24560                           ;../nwk/nwk_src/nwkRoute.c: 108:   NWK_RouteTableEntry_t *entry = ((void*)0);
 24561  006ADC  0E00               	movlw	0
 24562  006ADE  6E09               	movwf	NWK_RouteNewEntry@entry^0,c
 24563  006AE0  0E00               	movlw	0
 24564  006AE2  6E0A               	movwf	(NWK_RouteNewEntry@entry+1)^0,c
 24565                           
 24566                           ;../nwk/nwk_src/nwkRoute.c: 110:   for (uint8_t i = 0; i < 10; i++, iter++)
 24567  006AE4  0E00               	movlw	0
 24568  006AE6  6E06               	movwf	NWK_RouteNewEntry@i^0,c
 24569  006AE8                     l10324:
 24570                           
 24571                           ;../nwk/nwk_src/nwkRoute.c: 111:   {;../nwk/nwk_src/nwkRoute.c: 112:     if (iter->fixed
      +                          )
 24572  006AE8  0060  F01F  FFD9   	movff	NWK_RouteNewEntry@iter,fsr2l
 24573  006AEE  0060  F023  FFDA   	movff	NWK_RouteNewEntry@iter+1,fsr2h
 24574  006AF4  B0DF               	btfsc	indf2,0,c
 24575  006AF6  D02A               	goto	l10338
 24576                           
 24577                           ;../nwk/nwk_src/nwkRoute.c: 115:     if (0 == iter->rank)
 24578  006AF8  EE20 F005          	lfsr	2,5
 24579  006AFC  5007               	movf	NWK_RouteNewEntry@iter^0,w,c
 24580  006AFE  26D9               	addwf	fsr2l,f,c
 24581  006B00  5008               	movf	(NWK_RouteNewEntry@iter+1)^0,w,c
 24582  006B02  22DA               	addwfc	fsr2h,f,c
 24583  006B04  50DF               	movf	indf2,w,c
 24584  006B06  A4D8               	btfss	status,2,c
 24585  006B08  D007               	goto	l10332
 24586                           
 24587                           ;../nwk/nwk_src/nwkRoute.c: 116:     {;../nwk/nwk_src/nwkRoute.c: 117:       entry = ite
      +                          r;
 24588  006B0A  0060  F01C  F009   	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
 24589  006B10  0060  F020  F00A   	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
 24590                           
 24591                           ;../nwk/nwk_src/nwkRoute.c: 118:       break;
 24592  006B16  D022               	goto	u8450
 24593  006B18                     l10332:
 24594                           
 24595                           ;../nwk/nwk_src/nwkRoute.c: 121:     if (((void*)0) == entry || iter->rank < entry->rank
      +                          )
 24596  006B18  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 24597  006B1A  100A               	iorwf	(NWK_RouteNewEntry@entry+1)^0,w,c
 24598  006B1C  B4D8               	btfsc	status,2,c
 24599  006B1E  D010               	goto	u8440
 24600  006B20  EE20 F005          	lfsr	2,5
 24601  006B24  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 24602  006B26  26D9               	addwf	fsr2l,f,c
 24603  006B28  500A               	movf	(NWK_RouteNewEntry@entry+1)^0,w,c
 24604  006B2A  22DA               	addwfc	fsr2h,f,c
 24605  006B2C  EE10 F005          	lfsr	1,5
 24606  006B30  5007               	movf	NWK_RouteNewEntry@iter^0,w,c
 24607  006B32  26E1               	addwf	fsr1l,f,c
 24608  006B34  5008               	movf	(NWK_RouteNewEntry@iter+1)^0,w,c
 24609  006B36  22E2               	addwfc	fsr1h,f,c
 24610  006B38  50DE               	movf	postinc2,w,c
 24611  006B3A  5CE6               	subwf	postinc1,w,c
 24612  006B3C  B0D8               	btfsc	status,0,c
 24613  006B3E  D006               	goto	l10338
 24614  006B40                     u8440:
 24615                           
 24616                           ;../nwk/nwk_src/nwkRoute.c: 122:       entry = iter;
 24617  006B40  0060  F01C  F009   	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
 24618  006B46  0060  F020  F00A   	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
 24619  006B4C                     l10338:
 24620  006B4C  2A06               	incf	NWK_RouteNewEntry@i^0,f,c
 24621  006B4E  0E07               	movlw	7
 24622  006B50  2607               	addwf	NWK_RouteNewEntry@iter^0,f,c
 24623  006B52  0E00               	movlw	0
 24624  006B54  2208               	addwfc	(NWK_RouteNewEntry@iter+1)^0,f,c
 24625  006B56  0E09               	movlw	9
 24626  006B58  6406               	cpfsgt	NWK_RouteNewEntry@i^0,c
 24627  006B5A  D7C6               	goto	l10324
 24628  006B5C                     u8450:
 24629                           
 24630                           ;../nwk/nwk_src/nwkRoute.c: 125:   entry->multicast = 0;
 24631  006B5C  0060  F027  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
 24632  006B62  0060  F02B  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
 24633  006B68  92DF               	bcf	indf2,1,c
 24634                           
 24635                           ;../nwk/nwk_src/nwkRoute.c: 126:   entry->score = 3;
 24636  006B6A  0060  F027  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
 24637  006B70  0060  F02B  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
 24638  006B76  50DF               	movf	indf2,w,c
 24639  006B78  0B0F               	andlw	-241
 24640  006B7A  0930               	iorlw	48
 24641  006B7C  6EDF               	movwf	indf2,c
 24642                           
 24643                           ;../nwk/nwk_src/nwkRoute.c: 127:   entry->rank = 128;
 24644  006B7E  EE20 F005          	lfsr	2,5
 24645  006B82  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 24646  006B84  26D9               	addwf	fsr2l,f,c
 24647  006B86  500A               	movf	(NWK_RouteNewEntry@entry+1)^0,w,c
 24648  006B88  22DA               	addwfc	fsr2h,f,c
 24649  006B8A  0E80               	movlw	128
 24650  006B8C  6EDF               	movwf	indf2,c
 24651                           
 24652                           ;../nwk/nwk_src/nwkRoute.c: 129:   return entry;
 24653  006B8E  0060  F024  F002   	movff	NWK_RouteNewEntry@entry,?_NWK_RouteNewEntry
 24654  006B94  0060  F028  F003   	movff	NWK_RouteNewEntry@entry+1,?_NWK_RouteNewEntry+1
 24655  006B9A  0012               	return		;funcret
 24656  006B9C                     __end_of_NWK_RouteNewEntry:
 24657                           	opt callstack 0
 24658                           
 24659 ;; *************** function _nwkRxHandleIndication *****************
 24660 ;; Defined at:
 24661 ;;		line 453 in file "../nwk/nwk_src/nwkRx.c"
 24662 ;; Parameters:    Size  Location     Type
 24663 ;;  frame           2   58[COMRAM] PTR struct NwkFrame_t
 24664 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24665 ;; Auto vars:     Size  Location     Type
 24666 ;;  ack             1   62[COMRAM] _Bool 
 24667 ;; Return value:  Size  Location     Type
 24668 ;;                  1    wreg      void 
 24669 ;; Registers used:
 24670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24671 ;; Tracked objects:
 24672 ;;		On entry : 0/3D
 24673 ;;		On exit  : 0/0
 24674 ;;		Unchanged: 0/0
 24675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24677 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24678 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24679 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24680 ;;Total ram usage:        5 bytes
 24681 ;; Hardware stack levels used:    1
 24682 ;; Hardware stack levels required when called:   12
 24683 ;; This function calls:
 24684 ;;		_nwkRxIndicateFrame
 24685 ;;		_nwkRxSendAck
 24686 ;; This function is called by:
 24687 ;;		_nwkRxTaskHandler
 24688 ;; This function uses a non-reentrant model
 24689 ;;
 24690                           
 24691                           	psect	text150
 24692  006B9C                     __ptext150:
 24693                           	opt callstack 0
 24694  006B9C                     _nwkRxHandleIndication:
 24695                           	opt callstack 15
 24696                           
 24697                           ;../nwk/nwk_src/nwkRx.c: 453: static void nwkRxHandleIndication(NwkFrame_t *frame);../nw
      +                          k/nwk_src/nwkRx.c: 454: {;../nwk/nwk_src/nwkRx.c: 455:   _Bool ack;;../nwk/nwk_src/nwkRx
      +                          .c: 457:   nwkRxAckControl = 0;
 24698                           
 24699                           ;incstack = 0
 24700  006B9C  0E00               	movlw	0
 24701  006B9E  0100               	movlb	0	; () banked
 24702  006BA0  6FCB               	movwf	_nwkRxAckControl& (0+255),b
 24703                           
 24704                           ; BSR set to: 0
 24705                           ;../nwk/nwk_src/nwkRx.c: 458:   ack = nwkRxIndicateFrame(frame);
 24706  006BA2  0060  F0EC  F021   	movff	nwkRxHandleIndication@frame,nwkRxIndicateFrame@frame
 24707  006BA8  0060  F0F0  F022   	movff	nwkRxHandleIndication@frame+1,nwkRxIndicateFrame@frame+1
 24708  006BAE  EC1D  F01B         	call	_nwkRxIndicateFrame	;wreg free
 24709  006BB2  6E3F               	movwf	nwkRxHandleIndication@ack^0,c
 24710                           
 24711                           ;../nwk/nwk_src/nwkRx.c: 460:   if (0 == frame->header.nwkFcf.ackRequest)
 24712  006BB4  EE20 F00B          	lfsr	2,11
 24713  006BB8  503B               	movf	nwkRxHandleIndication@frame^0,w,c
 24714  006BBA  26D9               	addwf	fsr2l,f,c
 24715  006BBC  503C               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
 24716  006BBE  22DA               	addwfc	fsr2h,f,c
 24717  006BC0  B0DF               	btfsc	indf2,0,c
 24718  006BC2  D002               	goto	l16176
 24719                           
 24720                           ;../nwk/nwk_src/nwkRx.c: 461:     ack = 0;
 24721  006BC4  0E00               	movlw	0
 24722  006BC6  6E3F               	movwf	nwkRxHandleIndication@ack^0,c
 24723  006BC8                     l16176:
 24724                           
 24725                           ;../nwk/nwk_src/nwkRx.c: 463:   if (0xffff == frame->header.macDstAddr &&
 24726  006BC8  EE20 F007          	lfsr	2,7
 24727  006BCC  503B               	movf	nwkRxHandleIndication@frame^0,w,c
 24728  006BCE  26D9               	addwf	fsr2l,f,c
 24729  006BD0  503C               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
 24730  006BD2  22DA               	addwfc	fsr2h,f,c
 24731  006BD4  28DE               	incf	postinc2,w,c
 24732  006BD6  E11B               	bnz	l16184
 24733  006BD8  28DE               	incf	postinc2,w,c
 24734  006BDA  A4D8               	btfss	status,2,c
 24735  006BDC  D018               	goto	l16184
 24736  006BDE  EE20 F00F          	lfsr	2,15
 24737  006BE2  503B               	movf	nwkRxHandleIndication@frame^0,w,c
 24738  006BE4  26D9               	addwf	fsr2l,f,c
 24739  006BE6  503C               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
 24740  006BE8  22DA               	addwfc	fsr2h,f,c
 24741  006BEA  0101               	movlb	1	; () banked
 24742  006BEC  5131               	movf	_nwkIb& (0+255),w,b
 24743  006BEE  18DE               	xorwf	postinc2,w,c
 24744  006BF0  E10E               	bnz	l16184
 24745  006BF2  5132               	movf	(_nwkIb+1)& (0+255),w,b
 24746  006BF4  18DE               	xorwf	postinc2,w,c
 24747  006BF6  A4D8               	btfss	status,2,c
 24748  006BF8  D00A               	goto	l16184
 24749                           
 24750                           ; BSR set to: 1
 24751  006BFA  EE20 F00B          	lfsr	2,11
 24752  006BFE  503B               	movf	nwkRxHandleIndication@frame^0,w,c
 24753  006C00  26D9               	addwf	fsr2l,f,c
 24754  006C02  503C               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
 24755  006C04  22DA               	addwfc	fsr2h,f,c
 24756  006C06  B6DF               	btfsc	indf2,3,c
 24757  006C08  D002               	goto	l16184
 24758                           
 24759                           ; BSR set to: 1
 24760                           ;../nwk/nwk_src/nwkRx.c: 466:     ack = 1;
 24761  006C0A  0E01               	movlw	1
 24762  006C0C  6E3F               	movwf	nwkRxHandleIndication@ack^0,c
 24763  006C0E                     l16184:
 24764                           
 24765                           ;../nwk/nwk_src/nwkRx.c: 468:   if (0xffff == frame->header.macDstPanId)
 24766  006C0E  EE20 F005          	lfsr	2,5
 24767  006C12  503B               	movf	nwkRxHandleIndication@frame^0,w,c
 24768  006C14  26D9               	addwf	fsr2l,f,c
 24769  006C16  503C               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
 24770  006C18  22DA               	addwfc	fsr2h,f,c
 24771  006C1A  28DE               	incf	postinc2,w,c
 24772  006C1C  E105               	bnz	l16188
 24773  006C1E  28DE               	incf	postinc2,w,c
 24774  006C20  A4D8               	btfss	status,2,c
 24775  006C22  D002               	goto	l16188
 24776                           
 24777                           ;../nwk/nwk_src/nwkRx.c: 469:     ack = 0;
 24778  006C24  0E00               	movlw	0
 24779  006C26  6E3F               	movwf	nwkRxHandleIndication@ack^0,c
 24780  006C28                     l16188:
 24781                           
 24782                           ;../nwk/nwk_src/nwkRx.c: 471:   if (0xffff == nwkIb.addr)
 24783  006C28  0101               	movlb	1	; () banked
 24784  006C2A  2931               	incf	_nwkIb& (0+255),w,b
 24785  006C2C  E105               	bnz	l2234
 24786  006C2E  2932               	incf	(_nwkIb+1)& (0+255),w,b
 24787  006C30  A4D8               	btfss	status,2,c
 24788  006C32  D002               	goto	l2234
 24789                           
 24790                           ; BSR set to: 1
 24791                           ;../nwk/nwk_src/nwkRx.c: 472:     ack = 0;
 24792  006C34  0E00               	movlw	0
 24793  006C36  6E3F               	movwf	nwkRxHandleIndication@ack^0,c
 24794  006C38                     l2234:
 24795                           
 24796                           ; BSR set to: 1
 24797                           ;../nwk/nwk_src/nwkRx.c: 474:   if (ack)
 24798  006C38  503F               	movf	nwkRxHandleIndication@ack^0,w,c
 24799  006C3A  B4D8               	btfsc	status,2,c
 24800  006C3C  D008               	goto	l16194
 24801                           
 24802                           ; BSR set to: 1
 24803                           ;../nwk/nwk_src/nwkRx.c: 475:     nwkRxSendAck(frame);
 24804  006C3E  0060  F0EC  F02A   	movff	nwkRxHandleIndication@frame,nwkRxSendAck@frame
 24805  006C44  0060  F0F0  F02B   	movff	nwkRxHandleIndication@frame+1,nwkRxSendAck@frame+1
 24806  006C4A  EC1A  F02D         	call	_nwkRxSendAck	;wreg free
 24807  006C4E                     l16194:
 24808                           
 24809                           ;../nwk/nwk_src/nwkRx.c: 477:   frame->state = NWK_RX_STATE_FINISH;
 24810  006C4E  0060  F0EF  FFD9   	movff	nwkRxHandleIndication@frame,fsr2l
 24811  006C54  0060  F0F3  FFDA   	movff	nwkRxHandleIndication@frame+1,fsr2h
 24812  006C5A  0E24               	movlw	36
 24813  006C5C  6EDF               	movwf	indf2,c
 24814  006C5E  0012               	return		;funcret
 24815  006C60                     __end_of_nwkRxHandleIndication:
 24816                           	opt callstack 0
 24817                           
 24818 ;; *************** function _nwkRxSendAck *****************
 24819 ;; Defined at:
 24820 ;;		line 136 in file "../nwk/nwk_src/nwkRx.c"
 24821 ;; Parameters:    Size  Location     Type
 24822 ;;  frame           2   41[COMRAM] PTR struct NwkFrame_t
 24823 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24824 ;; Auto vars:     Size  Location     Type
 24825 ;;  ack             2   45[COMRAM] PTR struct NwkFrame_t
 24826 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24827 ;;  command         2   43[COMRAM] PTR __pack struct NwkCom
 24828 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 24829 ;; Return value:  Size  Location     Type
 24830 ;;                  1    wreg      void 
 24831 ;; Registers used:
 24832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24833 ;; Tracked objects:
 24834 ;;		On entry : 3F/1
 24835 ;;		On exit  : 0/0
 24836 ;;		Unchanged: 0/0
 24837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24838 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24839 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24841 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24842 ;;Total ram usage:        6 bytes
 24843 ;; Hardware stack levels used:    1
 24844 ;; Hardware stack levels required when called:   11
 24845 ;; This function calls:
 24846 ;;		_nwkFrameAlloc
 24847 ;;		_nwkFrameCommandInit
 24848 ;;		_nwkTxFrame
 24849 ;; This function is called by:
 24850 ;;		_nwkRxHandleIndication
 24851 ;; This function uses a non-reentrant model
 24852 ;;
 24853                           
 24854                           	psect	text151
 24855  005A34                     __ptext151:
 24856                           	opt callstack 0
 24857  005A34                     _nwkRxSendAck:
 24858                           	opt callstack 15
 24859                           
 24860                           ; BSR set to: 1
 24861                           ;../nwk/nwk_src/nwkRx.c: 136: static void nwkRxSendAck(NwkFrame_t *frame);../nwk/nwk_src
      +                          /nwkRx.c: 137: {;../nwk/nwk_src/nwkRx.c: 138:   NwkFrame_t *ack;;../nwk/nwk_src/nwkRx.c:
      +                           139:   NwkCommandAck_t *command;;../nwk/nwk_src/nwkRx.c: 141:   if (((void*)0) == (ack 
      +                          = nwkFrameAlloc()))
 24862                           
 24863                           ;incstack = 0
 24864  005A34  EC5C  F038         	call	_nwkFrameAlloc	;wreg free
 24865  005A38  0060  F038  F02E   	movff	?_nwkFrameAlloc,nwkRxSendAck@ack
 24866  005A3E  0060  F03C  F02F   	movff	?_nwkFrameAlloc+1,nwkRxSendAck@ack+1
 24867  005A44  502E               	movf	nwkRxSendAck@ack^0,w,c
 24868  005A46  102F               	iorwf	(nwkRxSendAck@ack+1)^0,w,c
 24869  005A48  B4D8               	btfsc	status,2,c
 24870  005A4A  0012               	return	
 24871                           
 24872                           ;../nwk/nwk_src/nwkRx.c: 144:   nwkFrameCommandInit(ack);
 24873  005A4C  0060  F0B8  F002   	movff	nwkRxSendAck@ack,nwkFrameCommandInit@frame
 24874  005A52  0060  F0BC  F003   	movff	nwkRxSendAck@ack+1,nwkFrameCommandInit@frame+1
 24875  005A58  EC10  F044         	call	_nwkFrameCommandInit	;wreg free
 24876                           
 24877                           ; BSR set to: 1
 24878                           ;../nwk/nwk_src/nwkRx.c: 146:   ack->size += sizeof(NwkCommandAck_t);
 24879  005A5C  EE20 F001          	lfsr	2,1
 24880  005A60  502E               	movf	nwkRxSendAck@ack^0,w,c
 24881  005A62  26D9               	addwf	fsr2l,f,c
 24882  005A64  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 24883  005A66  22DA               	addwfc	fsr2h,f,c
 24884  005A68  0E03               	movlw	3
 24885  005A6A  26DF               	addwf	indf2,f,c
 24886                           
 24887                           ; BSR set to: 1
 24888                           ;../nwk/nwk_src/nwkRx.c: 147:   ack->tx.confirm = ((void*)0);
 24889  005A6C  EE20 F087          	lfsr	2,135
 24890  005A70  502E               	movf	nwkRxSendAck@ack^0,w,c
 24891  005A72  26D9               	addwf	fsr2l,f,c
 24892  005A74  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 24893  005A76  22DA               	addwfc	fsr2h,f,c
 24894  005A78  0E00               	movlw	0
 24895  005A7A  6EDE               	movwf	postinc2,c
 24896  005A7C  0E00               	movlw	0
 24897  005A7E  6EDD               	movwf	postdec2,c
 24898                           
 24899                           ; BSR set to: 1
 24900                           ;../nwk/nwk_src/nwkRx.c: 149:   ack->header.nwkFcf.security = frame->header.nwkFcf.secur
      +                          ity;
 24901  005A80  EE20 F00B          	lfsr	2,11
 24902  005A84  502A               	movf	nwkRxSendAck@frame^0,w,c
 24903  005A86  26D9               	addwf	fsr2l,f,c
 24904  005A88  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 24905  005A8A  22DA               	addwfc	fsr2h,f,c
 24906  005A8C  EE10 F00B          	lfsr	1,11
 24907  005A90  502E               	movf	nwkRxSendAck@ack^0,w,c
 24908  005A92  26E1               	addwf	fsr1l,f,c
 24909  005A94  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 24910  005A96  22E2               	addwfc	fsr1h,f,c
 24911  005A98  B2DF               	btfsc	indf2,1,c
 24912  005A9A  D002               	bra	u15105
 24913  005A9C  92E7               	bcf	indf1,1,c
 24914  005A9E  D001               	bra	u15106
 24915  005AA0                     u15105:
 24916  005AA0  82E7               	bsf	indf1,1,c
 24917  005AA2                     u15106:
 24918                           
 24919                           ;../nwk/nwk_src/nwkRx.c: 150:   ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 24920  005AA2  EE20 F00D          	lfsr	2,13
 24921  005AA6  502A               	movf	nwkRxSendAck@frame^0,w,c
 24922  005AA8  26D9               	addwf	fsr2l,f,c
 24923  005AAA  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 24924  005AAC  22DA               	addwfc	fsr2h,f,c
 24925  005AAE  EE10 F00F          	lfsr	1,15
 24926  005AB2  502E               	movf	nwkRxSendAck@ack^0,w,c
 24927  005AB4  26E1               	addwf	fsr1l,f,c
 24928  005AB6  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 24929  005AB8  22E2               	addwfc	fsr1h,f,c
 24930  005ABA  006F FF7B FFE6     	movff	postinc2,postinc1
 24931  005AC0  006F FF77 FFE5     	movff	postdec2,postdec1
 24932                           
 24933                           ;../nwk/nwk_src/nwkRx.c: 152:   command = (NwkCommandAck_t *)ack->payload;
 24934  005AC6  EE20 F081          	lfsr	2,129
 24935  005ACA  502E               	movf	nwkRxSendAck@ack^0,w,c
 24936  005ACC  26D9               	addwf	fsr2l,f,c
 24937  005ACE  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 24938  005AD0  22DA               	addwfc	fsr2h,f,c
 24939  005AD2  006F FF78  F02C    	movff	postinc2,nwkRxSendAck@command
 24940  005AD8  006F FF74  F02D    	movff	postdec2,nwkRxSendAck@command+1
 24941                           
 24942                           ;../nwk/nwk_src/nwkRx.c: 153:   command->id = NWK_COMMAND_ACK;
 24943  005ADE  0060  F0B3  FFD9   	movff	nwkRxSendAck@command,fsr2l
 24944  005AE4  0060  F0B7  FFDA   	movff	nwkRxSendAck@command+1,fsr2h
 24945  005AEA  0E00               	movlw	0
 24946  005AEC  6EDF               	movwf	indf2,c
 24947                           
 24948                           ;../nwk/nwk_src/nwkRx.c: 154:   command->control = nwkRxAckControl;
 24949  005AEE  EE20 F002          	lfsr	2,2
 24950  005AF2  502C               	movf	nwkRxSendAck@command^0,w,c
 24951  005AF4  26D9               	addwf	fsr2l,f,c
 24952  005AF6  502D               	movf	(nwkRxSendAck@command+1)^0,w,c
 24953  005AF8  22DA               	addwfc	fsr2h,f,c
 24954  005AFA  0060  F32F  FFDF   	movff	_nwkRxAckControl,indf2
 24955                           
 24956                           ;../nwk/nwk_src/nwkRx.c: 155:   command->seq = frame->header.nwkSeq;
 24957  005B00  EE20 F00C          	lfsr	2,12
 24958  005B04  502A               	movf	nwkRxSendAck@frame^0,w,c
 24959  005B06  26D9               	addwf	fsr2l,f,c
 24960  005B08  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 24961  005B0A  22DA               	addwfc	fsr2h,f,c
 24962  005B0C  EE10 F001          	lfsr	1,1
 24963  005B10  502C               	movf	nwkRxSendAck@command^0,w,c
 24964  005B12  26E1               	addwf	fsr1l,f,c
 24965  005B14  502D               	movf	(nwkRxSendAck@command+1)^0,w,c
 24966  005B16  22E2               	addwfc	fsr1h,f,c
 24967  005B18  006F FF7F FFE7     	movff	indf2,indf1
 24968                           
 24969                           ;../nwk/nwk_src/nwkRx.c: 157:   nwkTxFrame(ack);
 24970  005B1E  0060  F0B8  F024   	movff	nwkRxSendAck@ack,nwkTxFrame@frame
 24971  005B24  0060  F0BC  F025   	movff	nwkRxSendAck@ack+1,nwkTxFrame@frame+1
 24972  005B2A  ECD9  F01E         	call	_nwkTxFrame	;wreg free
 24973  005B2E  0012               	return		;funcret
 24974  005B30                     __end_of_nwkRxSendAck:
 24975                           	opt callstack 0
 24976                           
 24977 ;; *************** function _nwkRxIndicateFrame *****************
 24978 ;; Defined at:
 24979 ;;		line 423 in file "../nwk/nwk_src/nwkRx.c"
 24980 ;; Parameters:    Size  Location     Type
 24981 ;;  frame           2   32[COMRAM] PTR struct NwkFrame_t
 24982 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24983 ;; Auto vars:     Size  Location     Type
 24984 ;;  ind            12   46[COMRAM] struct NWK_DataInd_t
 24985 ;;  header          2   44[COMRAM] PTR __pack struct NwkFra
 24986 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 24987 ;; Return value:  Size  Location     Type
 24988 ;;                  1    wreg      _Bool 
 24989 ;; Registers used:
 24990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24991 ;; Tracked objects:
 24992 ;;		On entry : 3F/0
 24993 ;;		On exit  : 0/0
 24994 ;;		Unchanged: 0/0
 24995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24997 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24998 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24999 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25000 ;;Total ram usage:       26 bytes
 25001 ;; Hardware stack levels used:    1
 25002 ;; Hardware stack levels required when called:   11
 25003 ;; This function calls:
 25004 ;;		_appDataInd
 25005 ;;		_nwkFramePayloadSize
 25006 ;;		_nwkRxServiceDataInd
 25007 ;; This function is called by:
 25008 ;;		_nwkRxHandleIndication
 25009 ;; This function uses a non-reentrant model
 25010 ;;
 25011                           
 25012                           	psect	text152
 25013  00363A                     __ptext152:
 25014                           	opt callstack 0
 25015  00363A                     _nwkRxIndicateFrame:
 25016                           	opt callstack 15
 25017                           
 25018                           ; BSR set to: 0
 25019                           ;../nwk/nwk_src/nwkRx.c: 423: static _Bool nwkRxIndicateFrame(NwkFrame_t *frame);../nwk/
      +                          nwk_src/nwkRx.c: 424: {;../nwk/nwk_src/nwkRx.c: 425:   NwkFrameHeader_t *header = &frame
      +                          ->header;
 25020                           
 25021                           ;incstack = 0
 25022  00363A  0E02               	movlw	2
 25023  00363C  2421               	addwf	nwkRxIndicateFrame@frame^0,w,c
 25024  00363E  6E2D               	movwf	nwkRxIndicateFrame@header^0,c
 25025  003640  0E00               	movlw	0
 25026  003642  2022               	addwfc	(nwkRxIndicateFrame@frame+1)^0,w,c
 25027  003644  6E2E               	movwf	(nwkRxIndicateFrame@header+1)^0,c
 25028                           
 25029                           ; BSR set to: 0
 25030                           ;../nwk/nwk_src/nwkRx.c: 426:   NWK_DataInd_t ind;;../nwk/nwk_src/nwkRx.c: 428:   if (((
      +                          void*)0) == nwkIb.endpoint[header->nwkDstEndpoint])
 25031  003646  EE20 F00F          	lfsr	2,15
 25032  00364A  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 25033  00364C  26D9               	addwf	fsr2l,f,c
 25034  00364E  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 25035  003650  22DA               	addwfc	fsr2h,f,c
 25036  003652  38DF               	swapf	indf2,w,c
 25037  003654  0B0F               	andlw	15
 25038  003656  6E23               	movwf	??_nwkRxIndicateFrame^0,c
 25039  003658  5023               	movf	??_nwkRxIndicateFrame^0,w,c
 25040  00365A  0D02               	mullw	2
 25041  00365C  0E37               	movlw	low (_nwkIb+6)
 25042  00365E  24F3               	addwf	243,w,c
 25043  003660  6ED9               	movwf	fsr2l,c
 25044  003662  0E01               	movlw	high (_nwkIb+6)
 25045  003664  20F4               	addwfc	prodh,w,c
 25046  003666  6EDA               	movwf	fsr2h,c
 25047  003668  50DE               	movf	postinc2,w,c
 25048  00366A  10DE               	iorwf	postinc2,w,c
 25049  00366C  A4D8               	btfss	status,2,c
 25050  00366E  D002               	goto	l15422
 25051                           
 25052                           ; BSR set to: 0
 25053                           ;../nwk/nwk_src/nwkRx.c: 429:     return 0;
 25054  003670  0E00               	movlw	0
 25055  003672  0012               	return	
 25056  003674                     l15422:
 25057                           
 25058                           ; BSR set to: 0
 25059                           ;../nwk/nwk_src/nwkRx.c: 431:   ind.srcAddr = header->nwkSrcAddr;
 25060  003674  EE20 F00B          	lfsr	2,11
 25061  003678  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 25062  00367A  26D9               	addwf	fsr2l,f,c
 25063  00367C  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 25064  00367E  22DA               	addwfc	fsr2h,f,c
 25065  003680  006F FF78  F02F    	movff	postinc2,nwkRxIndicateFrame@ind
 25066  003686  006F FF74  F030    	movff	postdec2,nwkRxIndicateFrame@ind+1
 25067                           
 25068                           ;../nwk/nwk_src/nwkRx.c: 432:   ind.dstAddr = header->nwkDstAddr;
 25069  00368C  EE20 F00D          	lfsr	2,13
 25070  003690  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 25071  003692  26D9               	addwf	fsr2l,f,c
 25072  003694  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 25073  003696  22DA               	addwfc	fsr2h,f,c
 25074  003698  006F FF78  F031    	movff	postinc2,nwkRxIndicateFrame@ind+2
 25075  00369E  006F FF74  F032    	movff	postdec2,nwkRxIndicateFrame@ind+3
 25076                           
 25077                           ;../nwk/nwk_src/nwkRx.c: 433:   ind.srcEndpoint = header->nwkSrcEndpoint;
 25078  0036A4  EE20 F00F          	lfsr	2,15
 25079  0036A8  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 25080  0036AA  26D9               	addwf	fsr2l,f,c
 25081  0036AC  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 25082  0036AE  22DA               	addwfc	fsr2h,f,c
 25083  0036B0  50DF               	movf	indf2,w,c
 25084  0036B2  0B0F               	andlw	15
 25085  0036B4  6E33               	movwf	(nwkRxIndicateFrame@ind+4)^0,c
 25086                           
 25087                           ;../nwk/nwk_src/nwkRx.c: 434:   ind.dstEndpoint = header->nwkDstEndpoint;
 25088  0036B6  EE20 F00F          	lfsr	2,15
 25089  0036BA  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 25090  0036BC  26D9               	addwf	fsr2l,f,c
 25091  0036BE  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 25092  0036C0  22DA               	addwfc	fsr2h,f,c
 25093  0036C2  38DF               	swapf	indf2,w,c
 25094  0036C4  0B0F               	andlw	15
 25095  0036C6  6E34               	movwf	(nwkRxIndicateFrame@ind+5)^0,c
 25096                           
 25097                           ;../nwk/nwk_src/nwkRx.c: 435:   ind.data = frame->payload;
 25098  0036C8  EE20 F081          	lfsr	2,129
 25099  0036CC  5021               	movf	nwkRxIndicateFrame@frame^0,w,c
 25100  0036CE  26D9               	addwf	fsr2l,f,c
 25101  0036D0  5022               	movf	(nwkRxIndicateFrame@frame+1)^0,w,c
 25102  0036D2  22DA               	addwfc	fsr2h,f,c
 25103  0036D4  006F FF78  F036    	movff	postinc2,nwkRxIndicateFrame@ind+7
 25104  0036DA  006F FF74  F037    	movff	postdec2,nwkRxIndicateFrame@ind+8
 25105                           
 25106                           ; BSR set to: 0
 25107                           ;../nwk/nwk_src/nwkRx.c: 436:   ind.size = nwkFramePayloadSize(frame);
 25108  0036E0  0060  F084  F002   	movff	nwkRxIndicateFrame@frame,nwkFramePayloadSize@frame
 25109  0036E6  0060  F088  F003   	movff	nwkRxIndicateFrame@frame+1,nwkFramePayloadSize@frame+1
 25110  0036EC  EC9E  F049         	call	_nwkFramePayloadSize	;wreg free
 25111  0036F0  6E38               	movwf	(nwkRxIndicateFrame@ind+9)^0,c
 25112                           
 25113                           ;../nwk/nwk_src/nwkRx.c: 437:   ind.lqi = frame->rx.lqi;
 25114  0036F2  EE20 F083          	lfsr	2,131
 25115  0036F6  5021               	movf	nwkRxIndicateFrame@frame^0,w,c
 25116  0036F8  26D9               	addwf	fsr2l,f,c
 25117  0036FA  5022               	movf	(nwkRxIndicateFrame@frame+1)^0,w,c
 25118  0036FC  22DA               	addwfc	fsr2h,f,c
 25119  0036FE  50DF               	movf	indf2,w,c
 25120  003700  6E39               	movwf	(nwkRxIndicateFrame@ind+10)^0,c
 25121                           
 25122                           ;../nwk/nwk_src/nwkRx.c: 438:   ind.rssi = frame->rx.rssi;
 25123  003702  EE20 F084          	lfsr	2,132
 25124  003706  5021               	movf	nwkRxIndicateFrame@frame^0,w,c
 25125  003708  26D9               	addwf	fsr2l,f,c
 25126  00370A  5022               	movf	(nwkRxIndicateFrame@frame+1)^0,w,c
 25127  00370C  22DA               	addwfc	fsr2h,f,c
 25128  00370E  50DF               	movf	indf2,w,c
 25129  003710  6E3A               	movwf	(nwkRxIndicateFrame@ind+11)^0,c
 25130                           
 25131                           ;../nwk/nwk_src/nwkRx.c: 440:   ind.options = (header->nwkFcf.ackRequest) ? NWK_IND_OPT_
      +                          ACK_REQUESTED : 0;
 25132  003712  EE20 F009          	lfsr	2,9
 25133  003716  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 25134  003718  26D9               	addwf	fsr2l,f,c
 25135  00371A  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 25136  00371C  22DA               	addwfc	fsr2h,f,c
 25137  00371E  0E00               	movlw	0
 25138  003720  B0DF               	btfsc	indf2,0,c
 25139  003722  0E01               	movlw	1
 25140  003724  6E35               	movwf	(nwkRxIndicateFrame@ind+6)^0,c
 25141                           
 25142                           ;../nwk/nwk_src/nwkRx.c: 441:   ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_S
      +                          ECURED : 0;
 25143  003726  EE20 F009          	lfsr	2,9
 25144  00372A  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 25145  00372C  26D9               	addwf	fsr2l,f,c
 25146  00372E  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 25147  003730  22DA               	addwfc	fsr2h,f,c
 25148  003732  B2DF               	btfsc	indf2,1,c
 25149  003734  D002               	goto	l15436
 25150  003736  0E00               	movlw	0
 25151  003738  D001               	goto	L20
 25152  00373A                     l15436:
 25153  00373A  0E02               	movlw	2
 25154  00373C                     L20:
 25155  00373C  6E27               	movwf	_nwkRxIndicateFrame$4855^0,c
 25156  00373E  5027               	movf	_nwkRxIndicateFrame$4855^0,w,c
 25157  003740  1235               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
 25158                           
 25159                           ;../nwk/nwk_src/nwkRx.c: 442:   ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_
      +                          LINK_LOCAL : 0;
 25160  003742  EE20 F009          	lfsr	2,9
 25161  003746  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 25162  003748  26D9               	addwf	fsr2l,f,c
 25163  00374A  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 25164  00374C  22DA               	addwfc	fsr2h,f,c
 25165  00374E  B4DF               	btfsc	indf2,2,c
 25166  003750  D002               	goto	l15444
 25167  003752  0E00               	movlw	0
 25168  003754  D001               	goto	L21
 25169  003756                     l15444:
 25170  003756  0E20               	movlw	32
 25171  003758                     L21:
 25172  003758  6E28               	movwf	_nwkRxIndicateFrame$4856^0,c
 25173  00375A  5028               	movf	_nwkRxIndicateFrame$4856^0,w,c
 25174  00375C  1235               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
 25175                           
 25176                           ;../nwk/nwk_src/nwkRx.c: 443:   ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_
      +                          MULTICAST : 0;
 25177  00375E  EE20 F009          	lfsr	2,9
 25178  003762  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 25179  003764  26D9               	addwf	fsr2l,f,c
 25180  003766  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 25181  003768  22DA               	addwfc	fsr2h,f,c
 25182  00376A  B6DF               	btfsc	indf2,3,c
 25183  00376C  D002               	goto	l15452
 25184  00376E  0E00               	movlw	0
 25185  003770  D001               	goto	L22
 25186  003772                     l15452:
 25187  003772  0E40               	movlw	64
 25188  003774                     L22:
 25189  003774  6E29               	movwf	_nwkRxIndicateFrame$4857^0,c
 25190  003776  5029               	movf	_nwkRxIndicateFrame$4857^0,w,c
 25191  003778  1235               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
 25192                           
 25193                           ;../nwk/nwk_src/nwkRx.c: 444:   ind.options |= (0xffff == header->nwkDstAddr) ? NWK_IND_
      +                          OPT_BROADCAST : 0;
 25194  00377A  EE20 F00D          	lfsr	2,13
 25195  00377E  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 25196  003780  26D9               	addwf	fsr2l,f,c
 25197  003782  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 25198  003784  22DA               	addwfc	fsr2h,f,c
 25199  003786  28DE               	incf	postinc2,w,c
 25200  003788  E103               	bnz	u15160
 25201  00378A  28DE               	incf	postinc2,w,c
 25202  00378C  B4D8               	btfsc	status,2,c
 25203  00378E  D002               	goto	l15460
 25204  003790                     u15160:
 25205  003790  0E00               	movlw	0
 25206  003792  D001               	goto	L23
 25207  003794                     l15460:
 25208  003794  0E04               	movlw	4
 25209  003796                     L23:
 25210  003796  6E2A               	movwf	_nwkRxIndicateFrame$4858^0,c
 25211  003798  502A               	movf	_nwkRxIndicateFrame$4858^0,w,c
 25212  00379A  1235               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
 25213                           
 25214                           ;../nwk/nwk_src/nwkRx.c: 445:   ind.options |= (header->nwkSrcAddr == header->macSrcAddr
      +                          ) ? NWK_IND_OPT_LOCAL : 0;
 25215  00379C  EE20 F007          	lfsr	2,7
 25216  0037A0  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 25217  0037A2  26D9               	addwf	fsr2l,f,c
 25218  0037A4  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 25219  0037A6  22DA               	addwfc	fsr2h,f,c
 25220  0037A8  EE10 F00B          	lfsr	1,11
 25221  0037AC  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 25222  0037AE  26E1               	addwf	fsr1l,f,c
 25223  0037B0  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 25224  0037B2  22E2               	addwfc	fsr1h,f,c
 25225  0037B4  50DE               	movf	postinc2,w,c
 25226  0037B6  18E6               	xorwf	postinc1,w,c
 25227  0037B8  E104               	bnz	u15170
 25228  0037BA  50DE               	movf	postinc2,w,c
 25229  0037BC  18E6               	xorwf	postinc1,w,c
 25230  0037BE  B4D8               	btfsc	status,2,c
 25231  0037C0  D002               	goto	l15468
 25232  0037C2                     u15170:
 25233  0037C2  0E00               	movlw	0
 25234  0037C4  D001               	goto	L24
 25235  0037C6                     l15468:
 25236  0037C6  0E08               	movlw	8
 25237  0037C8                     L24:
 25238  0037C8  6E2B               	movwf	_nwkRxIndicateFrame$4859^0,c
 25239  0037CA  502B               	movf	_nwkRxIndicateFrame$4859^0,w,c
 25240  0037CC  1235               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
 25241                           
 25242                           ;../nwk/nwk_src/nwkRx.c: 446:   ind.options |= (0xffff == header->macDstPanId) ? NWK_IND
      +                          _OPT_BROADCAST_PAN_ID : 0;
 25243  0037CE  EE20 F003          	lfsr	2,3
 25244  0037D2  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 25245  0037D4  26D9               	addwf	fsr2l,f,c
 25246  0037D6  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 25247  0037D8  22DA               	addwfc	fsr2h,f,c
 25248  0037DA  28DE               	incf	postinc2,w,c
 25249  0037DC  E103               	bnz	u15180
 25250  0037DE  28DE               	incf	postinc2,w,c
 25251  0037E0  B4D8               	btfsc	status,2,c
 25252  0037E2  D002               	goto	l15476
 25253  0037E4                     u15180:
 25254  0037E4  0E00               	movlw	0
 25255  0037E6  D001               	goto	L25
 25256  0037E8                     l15476:
 25257  0037E8  0E10               	movlw	16
 25258  0037EA                     L25:
 25259  0037EA  6E2C               	movwf	_nwkRxIndicateFrame$4860^0,c
 25260  0037EC  502C               	movf	_nwkRxIndicateFrame$4860^0,w,c
 25261  0037EE  1235               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
 25262                           
 25263                           ;../nwk/nwk_src/nwkRx.c: 448:   return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 25264  0037F0  0E2F               	movlw	low nwkRxIndicateFrame@ind
 25265  0037F2  6E1C               	movwf	nwkRxServiceDataInd@ind^0,c
 25266  0037F4  EE20 F00F          	lfsr	2,15
 25267  0037F8  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 25268  0037FA  26D9               	addwf	fsr2l,f,c
 25269  0037FC  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 25270  0037FE  22DA               	addwfc	fsr2h,f,c
 25271  003800  38DF               	swapf	indf2,w,c
 25272  003802  0B0F               	andlw	15
 25273  003804  6E23               	movwf	??_nwkRxIndicateFrame^0,c
 25274  003806  5023               	movf	??_nwkRxIndicateFrame^0,w,c
 25275  003808  0D02               	mullw	2
 25276  00380A  0E37               	movlw	low (_nwkIb+6)
 25277  00380C  24F3               	addwf	243,w,c
 25278  00380E  6ED9               	movwf	fsr2l,c
 25279  003810  0E01               	movlw	high (_nwkIb+6)
 25280  003812  20F4               	addwfc	prodh,w,c
 25281  003814  6EDA               	movwf	fsr2h,c
 25282  003816  006F FF78  F024    	movff	postinc2,??_nwkRxIndicateFrame+1
 25283  00381C  006F FF74  F025    	movff	postdec2,??_nwkRxIndicateFrame+2
 25284  003822  D801               	call	u15198
 25285  003824  0012               	return	
 25286  003826                     u15198:
 25287  003826  0005               	push	
 25288  003828  6EFA               	movwf	pclath,c
 25289  00382A  5024               	movf	(??_nwkRxIndicateFrame+1)^0,w,c
 25290  00382C  6EFD               	movwf	tosl,c
 25291  00382E  5025               	movf	(??_nwkRxIndicateFrame+2)^0,w,c
 25292  003830  6EFE               	movwf	tosh,c
 25293  003832  6AFF               	clrf	tosu,c
 25294  003834  50FA               	movf	pclath,w,c
 25295  003836  0012               	return		;indir
 25296  003838                     __end_of_nwkRxIndicateFrame:
 25297                           	opt callstack 0
 25298                           
 25299 ;; *************** function _appDataInd *****************
 25300 ;; Defined at:
 25301 ;;		line 47 in file "../app/app_src/application.c"
 25302 ;; Parameters:    Size  Location     Type
 25303 ;;  ind             1   27[COMRAM] PTR struct NWK_DataInd_t
 25304 ;;		 -> nwkRxIndicateFrame@ind(12), 
 25305 ;; Auto vars:     Size  Location     Type
 25306 ;;  dataptr         2   29[COMRAM] PTR unsigned char 
 25307 ;;		 -> nwkFrameFrames(685), NULL(0), 
 25308 ;;  buf_id          1   31[COMRAM] unsigned char 
 25309 ;; Return value:  Size  Location     Type
 25310 ;;                  1    wreg      _Bool 
 25311 ;; Registers used:
 25312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25313 ;; Tracked objects:
 25314 ;;		On entry : 3E/0
 25315 ;;		On exit  : 0/0
 25316 ;;		Unchanged: 0/0
 25317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25318 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25319 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25320 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25321 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25322 ;;Total ram usage:        5 bytes
 25323 ;; Hardware stack levels used:    1
 25324 ;; Hardware stack levels required when called:    9
 25325 ;; This function calls:
 25326 ;;		_CircularBufferPushBack
 25327 ;;		_get_free_rx_buffer
 25328 ;;		_memcpy
 25329 ;;		_memset
 25330 ;; This function is called by:
 25331 ;;		_bootLoadApplication
 25332 ;;		_nwkRxIndicateFrame
 25333 ;; This function uses a non-reentrant model
 25334 ;;
 25335                           
 25336                           	psect	text153
 25337  00716C                     __ptext153:
 25338                           	opt callstack 0
 25339  00716C                     _appDataInd:
 25340                           	opt callstack 16
 25341                           
 25342                           ;../app/app_src/application.c: 47: static _Bool appDataInd(NWK_DataInd_t *ind);../app/ap
      +                          p_src/application.c: 48: {;../app/app_src/application.c: 50:     uint8_t buf_id;;../app/
      +                          app_src/application.c: 51:     if(get_free_rx_buffer(&buf_id)){
 25343                           
 25344                           ;incstack = 0
 25345  00716C  0E20               	movlw	low appDataInd@buf_id
 25346  00716E  6E02               	movwf	get_free_rx_buffer@buf_id^0,c
 25347  007170  EC0C  F041         	call	_get_free_rx_buffer	;wreg free
 25348  007174  0900               	iorlw	0
 25349  007176  B4D8               	btfsc	status,2,c
 25350  007178  D050               	goto	l15052
 25351                           
 25352                           ;../app/app_src/application.c: 52:        uint8_t* dataptr = ind->data;
 25353  00717A  501C               	movf	appDataInd@ind^0,w,c
 25354  00717C  6ED9               	movwf	fsr2l,c
 25355  00717E  6ADA               	clrf	fsr2h,c
 25356  007180  0E07               	movlw	7
 25357  007182  26D9               	addwf	fsr2l,f,c
 25358  007184  006F FF78  F01E    	movff	postinc2,appDataInd@dataptr
 25359  00718A  006F FF74  F01F    	movff	postdec2,appDataInd@dataptr+1
 25360                           
 25361                           ;../app/app_src/application.c: 53:        memset(rx_buffer[buf_id].payload, 0 , sizeof((
      +                          127 - 16 - 2 )));
 25362  007190  5020               	movf	appDataInd@buf_id^0,w,c
 25363  007192  0D7A               	mullw	122
 25364  007194  0E83               	movlw	low (_rx_buffer+13)
 25365  007196  24F3               	addwf	243,w,c
 25366  007198  6E02               	movwf	memset@dest^0,c
 25367  00719A  0E0A               	movlw	high (_rx_buffer+13)
 25368  00719C  20F4               	addwfc	prodh,w,c
 25369  00719E  6E03               	movwf	(memset@dest+1)^0,c
 25370  0071A0  0E00               	movlw	0
 25371  0071A2  6E05               	movwf	(memset@c+1)^0,c
 25372  0071A4  0E00               	movlw	0
 25373  0071A6  6E04               	movwf	memset@c^0,c
 25374  0071A8  0E00               	movlw	0
 25375  0071AA  6E07               	movwf	(memset@n+1)^0,c
 25376  0071AC  0E02               	movlw	2
 25377  0071AE  6E06               	movwf	memset@n^0,c
 25378  0071B0  ECBC  F024         	call	_memset	;wreg free
 25379                           
 25380                           ;../app/app_src/application.c: 54:        rx_buffer[buf_id].rx_ind = *ind;
 25381  0071B4  501C               	movf	appDataInd@ind^0,w,c
 25382  0071B6  6ED9               	movwf	fsr2l,c
 25383  0071B8  6ADA               	clrf	fsr2h,c
 25384  0071BA  5020               	movf	appDataInd@buf_id^0,w,c
 25385  0071BC  0D7A               	mullw	122
 25386  0071BE  0E77               	movlw	low (_rx_buffer+1)
 25387  0071C0  24F3               	addwf	243,w,c
 25388  0071C2  6EE1               	movwf	fsr1l,c
 25389  0071C4  0E0A               	movlw	high (_rx_buffer+1)
 25390  0071C6  20F4               	addwfc	prodh,w,c
 25391  0071C8  6EE2               	movwf	fsr1h,c
 25392  0071CA  0E0B               	movlw	11
 25393  0071CC                     u14701:
 25394  0071CC  006F FF6F FFE3     	movff	plusw2,plusw1
 25395  0071D2  06E8               	decf	wreg,f,c
 25396  0071D4  E2FB               	bc	u14701
 25397                           
 25398                           ;../app/app_src/application.c: 55:        memcpy(rx_buffer[buf_id].payload,dataptr, ind-
      +                          >size);
 25399  0071D6  5020               	movf	appDataInd@buf_id^0,w,c
 25400  0071D8  0D7A               	mullw	122
 25401  0071DA  0E83               	movlw	low (_rx_buffer+13)
 25402  0071DC  24F3               	addwf	243,w,c
 25403  0071DE  6E08               	movwf	memcpy@d1^0,c
 25404  0071E0  0E0A               	movlw	high (_rx_buffer+13)
 25405  0071E2  20F4               	addwfc	prodh,w,c
 25406  0071E4  6E09               	movwf	(memcpy@d1+1)^0,c
 25407  0071E6  0060  F078  F00A   	movff	appDataInd@dataptr,memcpy@s1
 25408  0071EC  0060  F07C  F00B   	movff	appDataInd@dataptr+1,memcpy@s1+1
 25409  0071F2  501C               	movf	appDataInd@ind^0,w,c
 25410  0071F4  6ED9               	movwf	fsr2l,c
 25411  0071F6  6ADA               	clrf	fsr2h,c
 25412  0071F8  0E09               	movlw	9
 25413  0071FA  26D9               	addwf	fsr2l,f,c
 25414  0071FC  50DF               	movf	indf2,w,c
 25415  0071FE  6E1D               	movwf	??_appDataInd^0,c
 25416  007200  501D               	movf	??_appDataInd^0,w,c
 25417  007202  6E0C               	movwf	memcpy@n^0,c
 25418  007204  6A0D               	clrf	(memcpy@n+1)^0,c
 25419  007206  EC95  F03F         	call	_memcpy	;wreg free
 25420                           
 25421                           ;../app/app_src/application.c: 56:        CircularBufferPushBack(&rx_buffer_queue_contex
      +                          t, &buf_id);
 25422  00720A  0EC6               	movlw	low _rx_buffer_queue_context
 25423  00720C  6E13               	movwf	CircularBufferPushBack@ctx^0,c
 25424  00720E  0E01               	movlw	high _rx_buffer_queue_context
 25425  007210  6E14               	movwf	(CircularBufferPushBack@ctx+1)^0,c
 25426  007212  0E20               	movlw	low appDataInd@buf_id
 25427  007214  6E15               	movwf	CircularBufferPushBack@val^0,c
 25428  007216  EC12  F02E         	call	_CircularBufferPushBack	;wreg free
 25429  00721A                     l15052:
 25430                           
 25431                           ;../app/app_src/application.c: 58:     return 1;
 25432  00721A  0E01               	movlw	1
 25433  00721C  0012               	return		;funcret
 25434  00721E                     __end_of_appDataInd:
 25435                           	opt callstack 0
 25436                           
 25437 ;; *************** function _nwkRxServiceDataInd *****************
 25438 ;; Defined at:
 25439 ;;		line 257 in file "../nwk/nwk_src/nwkRx.c"
 25440 ;; Parameters:    Size  Location     Type
 25441 ;;  ind             1   27[COMRAM] PTR struct NWK_DataInd_t
 25442 ;;		 -> nwkRxIndicateFrame@ind(12), 
 25443 ;; Auto vars:     Size  Location     Type
 25444 ;;		None
 25445 ;; Return value:  Size  Location     Type
 25446 ;;                  1    wreg      _Bool 
 25447 ;; Registers used:
 25448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25449 ;; Tracked objects:
 25450 ;;		On entry : 3E/0
 25451 ;;		On exit  : 0/0
 25452 ;;		Unchanged: 0/0
 25453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25454 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25456 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25457 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25458 ;;Total ram usage:        5 bytes
 25459 ;; Hardware stack levels used:    1
 25460 ;; Hardware stack levels required when called:   10
 25461 ;; This function calls:
 25462 ;;		_nwkRouteErrorReceived
 25463 ;;		_nwkTxAckReceived
 25464 ;; This function is called by:
 25465 ;;		_nwkRxInit
 25466 ;;		_nwkRxIndicateFrame
 25467 ;; This function uses a non-reentrant model
 25468 ;;
 25469                           
 25470                           	psect	text154
 25471  007EAE                     __ptext154:
 25472                           	opt callstack 0
 25473  007EAE                     _nwkRxServiceDataInd:
 25474                           	opt callstack 15
 25475                           
 25476                           ;../nwk/nwk_src/nwkRx.c: 257: static _Bool nwkRxServiceDataInd(NWK_DataInd_t *ind);../nw
      +                          k/nwk_src/nwkRx.c: 258: {;../nwk/nwk_src/nwkRx.c: 260:   if (0 == (ind->options & NWK_IN
      +                          D_OPT_SECURED))
 25477                           
 25478                           ;incstack = 0
 25479  007EAE  501C               	movf	nwkRxServiceDataInd@ind^0,w,c
 25480  007EB0  6ED9               	movwf	fsr2l,c
 25481  007EB2  6ADA               	clrf	fsr2h,c
 25482  007EB4  0E06               	movlw	6
 25483  007EB6  26D9               	addwf	fsr2l,f,c
 25484  007EB8  B2DF               	btfsc	indf2,1,c
 25485  007EBA  D002               	goto	l10364
 25486  007EBC                     u8470:
 25487                           
 25488                           ;../nwk/nwk_src/nwkRx.c: 261:     return 0;
 25489  007EBC  0E00               	movlw	0
 25490  007EBE  0012               	return	
 25491  007EC0                     l10364:
 25492                           
 25493                           ;../nwk/nwk_src/nwkRx.c: 264:   if (ind->size < 1)
 25494  007EC0  501C               	movf	nwkRxServiceDataInd@ind^0,w,c
 25495  007EC2  6ED9               	movwf	fsr2l,c
 25496  007EC4  6ADA               	clrf	fsr2h,c
 25497  007EC6  0E09               	movlw	9
 25498  007EC8  26D9               	addwf	fsr2l,f,c
 25499  007ECA  50DF               	movf	indf2,w,c
 25500  007ECC  B4D8               	btfsc	status,2,c
 25501  007ECE  D7F6               	goto	u8470
 25502  007ED0  D00C               	goto	l10384
 25503  007ED2                     l10370:
 25504                           
 25505                           ;../nwk/nwk_src/nwkRx.c: 270:       return nwkTxAckReceived(ind);
 25506  007ED2  0060  F070  F008   	movff	nwkRxServiceDataInd@ind,nwkTxAckReceived@ind
 25507  007ED8  EC30  F036         	call	_nwkTxAckReceived	;wreg free
 25508  007EDC  0012               	return	
 25509  007EDE                     l10374:
 25510                           
 25511                           ;../nwk/nwk_src/nwkRx.c: 274:       return nwkRouteErrorReceived(ind);
 25512  007EDE  0060  F070  F00D   	movff	nwkRxServiceDataInd@ind,nwkRouteErrorReceived@ind
 25513  007EE4  ECB9  F042         	call	_nwkRouteErrorReceived	;wreg free
 25514  007EE8  0012               	return	
 25515  007EEA                     l10384:
 25516  007EEA  501C               	movf	nwkRxServiceDataInd@ind^0,w,c
 25517  007EEC  6ED9               	movwf	fsr2l,c
 25518  007EEE  6ADA               	clrf	fsr2h,c
 25519  007EF0  0E07               	movlw	7
 25520  007EF2  26D9               	addwf	fsr2l,f,c
 25521  007EF4  006F FF78  F01D    	movff	postinc2,??_nwkRxServiceDataInd
 25522  007EFA  006F FF74  F01E    	movff	postdec2,??_nwkRxServiceDataInd+1
 25523  007F00  0060  F077  FFD9   	movff	??_nwkRxServiceDataInd,fsr2l
 25524  007F06  0060  F07B  FFDA   	movff	??_nwkRxServiceDataInd+1,fsr2h
 25525  007F0C  50DF               	movf	indf2,w,c
 25526  007F0E  6E1F               	movwf	(??_nwkRxServiceDataInd+2)^0,c
 25527  007F10  6A20               	clrf	(??_nwkRxServiceDataInd+3)^0,c
 25528                           
 25529                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25530                           ; Switch size 1, requested type "simple"
 25531                           ; Number of cases is 1, Range of values is 0 to 0
 25532                           ; switch strategies available:
 25533                           ; Name         Instructions Cycles
 25534                           ; simple_byte            4     3 (average)
 25535                           ;	Chosen strategy is simple_byte
 25536  007F12  5020               	movf	(??_nwkRxServiceDataInd+3)^0,w,c
 25537  007F14  0A00               	xorlw	0	; case 0
 25538  007F16  A4D8               	btfss	status,2,c
 25539  007F18  D7D1               	goto	u8470
 25540                           
 25541                           ; Switch size 1, requested type "simple"
 25542                           ; Number of cases is 2, Range of values is 0 to 1
 25543                           ; switch strategies available:
 25544                           ; Name         Instructions Cycles
 25545                           ; simple_byte            7     4 (average)
 25546                           ;	Chosen strategy is simple_byte
 25547  007F1A  501F               	movf	(??_nwkRxServiceDataInd+2)^0,w,c
 25548  007F1C  0A00               	xorlw	0	; case 0
 25549  007F1E  B4D8               	btfsc	status,2,c
 25550  007F20  D7D8               	goto	l10370
 25551  007F22  0A01               	xorlw	1	; case 1
 25552  007F24  B4D8               	btfsc	status,2,c
 25553  007F26  D7DB               	goto	l10374
 25554  007F28  D7C9               	goto	u8470
 25555  007F2A                     __end_of_nwkRxServiceDataInd:
 25556                           	opt callstack 0
 25557                           
 25558 ;; *************** function _nwkTxAckReceived *****************
 25559 ;; Defined at:
 25560 ;;		line 182 in file "../nwk/nwk_src/nwkTx.c"
 25561 ;; Parameters:    Size  Location     Type
 25562 ;;  ind             1    7[COMRAM] PTR struct NWK_DataInd_t
 25563 ;;		 -> nwkRxIndicateFrame@ind(12), 
 25564 ;; Auto vars:     Size  Location     Type
 25565 ;;  frame           2   12[COMRAM] PTR struct NwkFrame_t
 25566 ;;		 -> nwkFrameFrames(685), NULL(0), 
 25567 ;;  command         2   10[COMRAM] PTR __pack struct NwkCom
 25568 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 25569 ;; Return value:  Size  Location     Type
 25570 ;;                  1    wreg      _Bool 
 25571 ;; Registers used:
 25572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 25573 ;; Tracked objects:
 25574 ;;		On entry : 3E/0
 25575 ;;		On exit  : 0/0
 25576 ;;		Unchanged: 0/0
 25577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25578 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25579 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25580 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25581 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25582 ;;Total ram usage:        7 bytes
 25583 ;; Hardware stack levels used:    1
 25584 ;; Hardware stack levels required when called:    8
 25585 ;; This function calls:
 25586 ;;		_nwkFrameNext
 25587 ;; This function is called by:
 25588 ;;		_nwkRxServiceDataInd
 25589 ;; This function uses a non-reentrant model
 25590 ;;
 25591                           
 25592                           	psect	text155
 25593  006C60                     __ptext155:
 25594                           	opt callstack 0
 25595  006C60                     _nwkTxAckReceived:
 25596                           	opt callstack 16
 25597                           
 25598                           ;../nwk/nwk_src/nwkTx.c: 182: _Bool nwkTxAckReceived(NWK_DataInd_t *ind);../nwk/nwk_src/
      +                          nwkTx.c: 183: {;../nwk/nwk_src/nwkTx.c: 184:   NwkCommandAck_t *command = (NwkCommandAck
      +                          _t *)ind->data;
 25599                           
 25600                           ;incstack = 0
 25601  006C60  5008               	movf	nwkTxAckReceived@ind^0,w,c
 25602  006C62  6ED9               	movwf	fsr2l,c
 25603  006C64  6ADA               	clrf	fsr2h,c
 25604  006C66  0E07               	movlw	7
 25605  006C68  26D9               	addwf	fsr2l,f,c
 25606  006C6A  006F FF78  F00B    	movff	postinc2,nwkTxAckReceived@command
 25607  006C70  006F FF74  F00C    	movff	postdec2,nwkTxAckReceived@command+1
 25608                           
 25609                           ;../nwk/nwk_src/nwkTx.c: 185:   NwkFrame_t *frame = ((void*)0);
 25610  006C76  0E00               	movlw	0
 25611  006C78  6E0D               	movwf	nwkTxAckReceived@frame^0,c
 25612  006C7A  0E00               	movlw	0
 25613  006C7C  6E0E               	movwf	(nwkTxAckReceived@frame+1)^0,c
 25614                           
 25615                           ;../nwk/nwk_src/nwkTx.c: 187:   if (sizeof(NwkCommandAck_t) != ind->size)
 25616  006C7E  5008               	movf	nwkTxAckReceived@ind^0,w,c
 25617  006C80  6ED9               	movwf	fsr2l,c
 25618  006C82  6ADA               	clrf	fsr2h,c
 25619  006C84  0E09               	movlw	9
 25620  006C86  26D9               	addwf	fsr2l,f,c
 25621  006C88  0E03               	movlw	3
 25622  006C8A  18DE               	xorwf	postinc2,w,c
 25623  006C8C  B4D8               	btfsc	status,2,c
 25624  006C8E  D035               	goto	l10014
 25625  006C90                     u8040:
 25626                           
 25627                           ;../nwk/nwk_src/nwkTx.c: 188:     return 0;
 25628  006C90  0E00               	movlw	0
 25629  006C92  0012               	return	
 25630  006C94                     l10002:
 25631                           
 25632                           ;../nwk/nwk_src/nwkTx.c: 191:   {;../nwk/nwk_src/nwkTx.c: 192:     if (NWK_TX_STATE_WAIT
      +                          _ACK == frame->state && frame->header.nwkSeq == command->seq)
 25633  006C94  0060  F037  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
 25634  006C9A  0060  F03B  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
 25635  006CA0  0E16               	movlw	22
 25636  006CA2  18DE               	xorwf	postinc2,w,c
 25637  006CA4  A4D8               	btfss	status,2,c
 25638  006CA6  D029               	goto	l10014
 25639  006CA8  EE20 F001          	lfsr	2,1
 25640  006CAC  500B               	movf	nwkTxAckReceived@command^0,w,c
 25641  006CAE  26D9               	addwf	fsr2l,f,c
 25642  006CB0  500C               	movf	(nwkTxAckReceived@command+1)^0,w,c
 25643  006CB2  22DA               	addwfc	fsr2h,f,c
 25644  006CB4  EE10 F00C          	lfsr	1,12
 25645  006CB8  500D               	movf	nwkTxAckReceived@frame^0,w,c
 25646  006CBA  26E1               	addwf	fsr1l,f,c
 25647  006CBC  500E               	movf	(nwkTxAckReceived@frame+1)^0,w,c
 25648  006CBE  22E2               	addwfc	fsr1h,f,c
 25649  006CC0  50DE               	movf	postinc2,w,c
 25650  006CC2  18E6               	xorwf	postinc1,w,c
 25651  006CC4  A4D8               	btfss	status,2,c
 25652  006CC6  D019               	goto	l10014
 25653                           
 25654                           ;../nwk/nwk_src/nwkTx.c: 193:     {;../nwk/nwk_src/nwkTx.c: 194:       frame->state = NW
      +                          K_TX_STATE_CONFIRM;
 25655  006CC8  0060  F037  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
 25656  006CCE  0060  F03B  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
 25657  006CD4  0E17               	movlw	23
 25658  006CD6  6EDF               	movwf	indf2,c
 25659                           
 25660                           ;../nwk/nwk_src/nwkTx.c: 195:       frame->tx.control = command->control;
 25661  006CD8  EE20 F002          	lfsr	2,2
 25662  006CDC  500B               	movf	nwkTxAckReceived@command^0,w,c
 25663  006CDE  26D9               	addwf	fsr2l,f,c
 25664  006CE0  500C               	movf	(nwkTxAckReceived@command+1)^0,w,c
 25665  006CE2  22DA               	addwfc	fsr2h,f,c
 25666  006CE4  EE10 F086          	lfsr	1,134
 25667  006CE8  500D               	movf	nwkTxAckReceived@frame^0,w,c
 25668  006CEA  26E1               	addwf	fsr1l,f,c
 25669  006CEC  500E               	movf	(nwkTxAckReceived@frame+1)^0,w,c
 25670  006CEE  22E2               	addwfc	fsr1h,f,c
 25671  006CF0  006F FF7F FFE7     	movff	indf2,indf1
 25672                           
 25673                           ;../nwk/nwk_src/nwkTx.c: 196:       return 1;
 25674  006CF6  0E01               	movlw	1
 25675  006CF8  0012               	return	
 25676  006CFA                     l10014:
 25677                           
 25678                           ;../nwk/nwk_src/nwkTx.c: 190:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 25679  006CFA  0060  F034  F002   	movff	nwkTxAckReceived@frame,nwkFrameNext@frame
 25680  006D00  0060  F038  F003   	movff	nwkTxAckReceived@frame+1,nwkFrameNext@frame+1
 25681  006D06  EC06  F03D         	call	_nwkFrameNext	;wreg free
 25682  006D0A  0060  F008  F00D   	movff	?_nwkFrameNext,nwkTxAckReceived@frame
 25683  006D10  0060  F00C  F00E   	movff	?_nwkFrameNext+1,nwkTxAckReceived@frame+1
 25684  006D16  500D               	movf	nwkTxAckReceived@frame^0,w,c
 25685  006D18  100E               	iorwf	(nwkTxAckReceived@frame+1)^0,w,c
 25686  006D1A  B4D8               	btfsc	status,2,c
 25687  006D1C  D7B9               	goto	u8040
 25688  006D1E  D7BA               	goto	l10002
 25689  006D20                     __end_of_nwkTxAckReceived:
 25690                           	opt callstack 0
 25691                           
 25692 ;; *************** function _nwkFrameNext *****************
 25693 ;; Defined at:
 25694 ;;		line 111 in file "../nwk/nwk_src/nwkFrame.c"
 25695 ;; Parameters:    Size  Location     Type
 25696 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 25697 ;;		 -> nwkFrameFrames(685), NULL(0), 
 25698 ;; Auto vars:     Size  Location     Type
 25699 ;;		None
 25700 ;; Return value:  Size  Location     Type
 25701 ;;                  2    1[COMRAM] PTR struct NwkFrame_t
 25702 ;; Registers used:
 25703 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25704 ;; Tracked objects:
 25705 ;;		On entry : 0/0
 25706 ;;		On exit  : 0/0
 25707 ;;		Unchanged: 0/0
 25708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25711 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25712 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25713 ;;Total ram usage:        6 bytes
 25714 ;; Hardware stack levels used:    1
 25715 ;; Hardware stack levels required when called:    7
 25716 ;; This function calls:
 25717 ;;		Nothing
 25718 ;; This function is called by:
 25719 ;;		_nwkRxTaskHandler
 25720 ;;		_nwkSecurityTaskHandler
 25721 ;;		_nwkTxAckReceived
 25722 ;;		_nwkTxAckWaitTimerHandler
 25723 ;;		_nwkTxDelayTimerHandler
 25724 ;;		_nwkTxTaskHandler
 25725 ;; This function uses a non-reentrant model
 25726 ;;
 25727                           
 25728                           	psect	text156
 25729  007A0C                     __ptext156:
 25730                           	opt callstack 0
 25731  007A0C                     _nwkFrameNext:
 25732                           	opt callstack 20
 25733                           
 25734                           ;../nwk/nwk_src/nwkFrame.c: 111: NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);../nwk/nwk_
      +                          src/nwkFrame.c: 112: {;../nwk/nwk_src/nwkFrame.c: 113:   if (((void*)0) == frame)
 25735                           
 25736                           ;incstack = 0
 25737  007A0C  5002               	movf	nwkFrameNext@frame^0,w,c
 25738  007A0E  1003               	iorwf	(nwkFrameNext@frame+1)^0,w,c
 25739  007A10  A4D8               	btfss	status,2,c
 25740  007A12  D026               	goto	l9636
 25741                           
 25742                           ;../nwk/nwk_src/nwkFrame.c: 114:     frame = nwkFrameFrames;
 25743  007A14  0EBD               	movlw	low _nwkFrameFrames
 25744  007A16  6E02               	movwf	nwkFrameNext@frame^0,c
 25745  007A18  0E05               	movlw	high _nwkFrameFrames
 25746  007A1A  6E03               	movwf	(nwkFrameNext@frame+1)^0,c
 25747                           
 25748                           ;../nwk/nwk_src/nwkFrame.c: 118:   for (; frame < &nwkFrameFrames[5]; frame++)
 25749                           
 25750                           ;../nwk/nwk_src/nwkFrame.c: 116:     frame++;
 25751  007A1C  0EAD               	movlw	173
 25752  007A1E  6E04               	movwf	??_nwkFrameNext^0,c
 25753  007A20  0E02               	movlw	2
 25754  007A22  6E05               	movwf	(??_nwkFrameNext+1)^0,c
 25755  007A24  0EBD               	movlw	low _nwkFrameFrames
 25756  007A26  6E06               	movwf	(??_nwkFrameNext+2)^0,c
 25757  007A28  0E05               	movlw	high _nwkFrameFrames
 25758  007A2A  6E07               	movwf	(??_nwkFrameNext+3)^0,c
 25759  007A2C  5004               	movf	??_nwkFrameNext^0,w,c
 25760  007A2E  2606               	addwf	(??_nwkFrameNext+2)^0,f,c
 25761  007A30  5005               	movf	(??_nwkFrameNext+1)^0,w,c
 25762  007A32  2207               	addwfc	(??_nwkFrameNext+3)^0,f,c
 25763  007A34  5006               	movf	(??_nwkFrameNext+2)^0,w,c
 25764  007A36  5C02               	subwf	nwkFrameNext@frame^0,w,c
 25765  007A38  5007               	movf	(??_nwkFrameNext+3)^0,w,c
 25766  007A3A  5803               	subwfb	(nwkFrameNext@frame+1)^0,w,c
 25767  007A3C  B0D8               	btfsc	status,0,c
 25768  007A3E  D026               	goto	u7370
 25769  007A40                     l9630:
 25770                           
 25771                           ;../nwk/nwk_src/nwkFrame.c: 119:   {;../nwk/nwk_src/nwkFrame.c: 120:     if (NWK_FRAME_S
      +                          TATE_FREE != frame->state)
 25772  007A40  0060  F00B  FFD9   	movff	nwkFrameNext@frame,fsr2l
 25773  007A46  0060  F00F  FFDA   	movff	nwkFrameNext@frame+1,fsr2h
 25774  007A4C  50DF               	movf	indf2,w,c
 25775  007A4E  B4D8               	btfsc	status,2,c
 25776  007A50  D007               	goto	l9636
 25777                           
 25778                           ;../nwk/nwk_src/nwkFrame.c: 121:       return frame;
 25779  007A52  0060  F008  F002   	movff	nwkFrameNext@frame,?_nwkFrameNext
 25780  007A58  0060  F00C  F003   	movff	nwkFrameNext@frame+1,?_nwkFrameNext+1
 25781  007A5E  0012               	return	
 25782  007A60                     l9636:
 25783                           
 25784                           ;../nwk/nwk_src/nwkFrame.c: 122:   }
 25785  007A60  0E89               	movlw	137
 25786  007A62  2602               	addwf	nwkFrameNext@frame^0,f,c
 25787  007A64  0E00               	movlw	0
 25788  007A66  2203               	addwfc	(nwkFrameNext@frame+1)^0,f,c
 25789  007A68  0EAD               	movlw	173
 25790  007A6A  6E04               	movwf	??_nwkFrameNext^0,c
 25791  007A6C  0E02               	movlw	2
 25792  007A6E  6E05               	movwf	(??_nwkFrameNext+1)^0,c
 25793  007A70  0EBD               	movlw	low _nwkFrameFrames
 25794  007A72  6E06               	movwf	(??_nwkFrameNext+2)^0,c
 25795  007A74  0E05               	movlw	high _nwkFrameFrames
 25796  007A76  6E07               	movwf	(??_nwkFrameNext+3)^0,c
 25797  007A78  5004               	movf	??_nwkFrameNext^0,w,c
 25798  007A7A  2606               	addwf	(??_nwkFrameNext+2)^0,f,c
 25799  007A7C  5005               	movf	(??_nwkFrameNext+1)^0,w,c
 25800  007A7E  2207               	addwfc	(??_nwkFrameNext+3)^0,f,c
 25801  007A80  5006               	movf	(??_nwkFrameNext+2)^0,w,c
 25802  007A82  5C02               	subwf	nwkFrameNext@frame^0,w,c
 25803  007A84  5007               	movf	(??_nwkFrameNext+3)^0,w,c
 25804  007A86  5803               	subwfb	(nwkFrameNext@frame+1)^0,w,c
 25805  007A88  A0D8               	btfss	status,0,c
 25806  007A8A  D7DA               	goto	l9630
 25807  007A8C                     u7370:
 25808                           
 25809                           ;../nwk/nwk_src/nwkFrame.c: 124:   return ((void*)0);
 25810  007A8C  0E00               	movlw	0
 25811  007A8E  6E02               	movwf	?_nwkFrameNext^0,c
 25812  007A90  0E00               	movlw	0
 25813  007A92  6E03               	movwf	(?_nwkFrameNext+1)^0,c
 25814  007A94  0012               	return		;funcret
 25815  007A96                     __end_of_nwkFrameNext:
 25816                           	opt callstack 0
 25817                           
 25818 ;; *************** function _nwkRouteErrorReceived *****************
 25819 ;; Defined at:
 25820 ;;		line 344 in file "../nwk/nwk_src/nwkRoute.c"
 25821 ;; Parameters:    Size  Location     Type
 25822 ;;  ind             1   12[COMRAM] PTR struct NWK_DataInd_t
 25823 ;;		 -> nwkRxIndicateFrame@ind(12), 
 25824 ;; Auto vars:     Size  Location     Type
 25825 ;;  command         2   14[COMRAM] PTR __pack struct NwkCom
 25826 ;;		 -> nwkFrameFrames(685), NULL(0), 
 25827 ;; Return value:  Size  Location     Type
 25828 ;;                  1    wreg      _Bool 
 25829 ;; Registers used:
 25830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25831 ;; Tracked objects:
 25832 ;;		On entry : 3E/0
 25833 ;;		On exit  : 0/0
 25834 ;;		Unchanged: 0/0
 25835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25836 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25837 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25839 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25840 ;;Total ram usage:        4 bytes
 25841 ;; Hardware stack levels used:    1
 25842 ;; Hardware stack levels required when called:    9
 25843 ;; This function calls:
 25844 ;;		_nwkRouteRemove
 25845 ;; This function is called by:
 25846 ;;		_nwkRxServiceDataInd
 25847 ;; This function uses a non-reentrant model
 25848 ;;
 25849                           
 25850                           	psect	text157
 25851  008572                     __ptext157:
 25852                           	opt callstack 0
 25853  008572                     _nwkRouteErrorReceived:
 25854                           	opt callstack 15
 25855                           
 25856                           ;../nwk/nwk_src/nwkRoute.c: 344: _Bool nwkRouteErrorReceived(NWK_DataInd_t *ind);../nwk/
      +                          nwk_src/nwkRoute.c: 345: {;../nwk/nwk_src/nwkRoute.c: 346:   NwkCommandRouteError_t *com
      +                          mand = (NwkCommandRouteError_t *)ind->data;
 25857                           
 25858                           ;incstack = 0
 25859  008572  500D               	movf	nwkRouteErrorReceived@ind^0,w,c
 25860  008574  6ED9               	movwf	fsr2l,c
 25861  008576  6ADA               	clrf	fsr2h,c
 25862  008578  0E07               	movlw	7
 25863  00857A  26D9               	addwf	fsr2l,f,c
 25864  00857C  006F FF78  F00F    	movff	postinc2,nwkRouteErrorReceived@command
 25865  008582  006F FF74  F010    	movff	postdec2,nwkRouteErrorReceived@command+1
 25866                           
 25867                           ;../nwk/nwk_src/nwkRoute.c: 348:   if (sizeof(NwkCommandRouteError_t) != ind->size)
 25868  008588  500D               	movf	nwkRouteErrorReceived@ind^0,w,c
 25869  00858A  6ED9               	movwf	fsr2l,c
 25870  00858C  6ADA               	clrf	fsr2h,c
 25871  00858E  0E09               	movlw	9
 25872  008590  26D9               	addwf	fsr2l,f,c
 25873  008592  0E06               	movlw	6
 25874  008594  18DE               	xorwf	postinc2,w,c
 25875  008596  B4D8               	btfsc	status,2,c
 25876  008598  D002               	goto	l9986
 25877                           
 25878                           ;../nwk/nwk_src/nwkRoute.c: 349:     return 0;
 25879  00859A  0E00               	movlw	0
 25880  00859C  0012               	return	
 25881  00859E                     l9986:
 25882                           
 25883                           ;../nwk/nwk_src/nwkRoute.c: 351:   nwkRouteRemove(command->dstAddr, command->multicast);
 25884  00859E  EE20 F003          	lfsr	2,3
 25885  0085A2  500F               	movf	nwkRouteErrorReceived@command^0,w,c
 25886  0085A4  26D9               	addwf	fsr2l,f,c
 25887  0085A6  5010               	movf	(nwkRouteErrorReceived@command+1)^0,w,c
 25888  0085A8  22DA               	addwfc	fsr2h,f,c
 25889  0085AA  006F FF78  F008    	movff	postinc2,nwkRouteRemove@dst
 25890  0085B0  006F FF74  F009    	movff	postdec2,nwkRouteRemove@dst+1
 25891  0085B6  EE20 F005          	lfsr	2,5
 25892  0085BA  500F               	movf	nwkRouteErrorReceived@command^0,w,c
 25893  0085BC  26D9               	addwf	fsr2l,f,c
 25894  0085BE  5010               	movf	(nwkRouteErrorReceived@command+1)^0,w,c
 25895  0085C0  22DA               	addwfc	fsr2h,f,c
 25896  0085C2  50DF               	movf	indf2,w,c
 25897  0085C4  6E0A               	movwf	nwkRouteRemove@multicast^0,c
 25898  0085C6  EC5F  F047         	call	_nwkRouteRemove	;wreg free
 25899                           
 25900                           ;../nwk/nwk_src/nwkRoute.c: 353:   return 1;
 25901  0085CA  0E01               	movlw	1
 25902  0085CC  0012               	return		;funcret
 25903  0085CE                     __end_of_nwkRouteErrorReceived:
 25904                           	opt callstack 0
 25905                           
 25906 ;; *************** function _nwkRouteRemove *****************
 25907 ;; Defined at:
 25908 ;;		line 183 in file "../nwk/nwk_src/nwkRoute.c"
 25909 ;; Parameters:    Size  Location     Type
 25910 ;;  dst             2    7[COMRAM] unsigned short 
 25911 ;;  multicast       1    9[COMRAM] unsigned char 
 25912 ;; Auto vars:     Size  Location     Type
 25913 ;;  entry           2   10[COMRAM] PTR struct NWK_RouteTabl
 25914 ;;		 -> nwkRouteTable(70), NULL(0), 
 25915 ;; Return value:  Size  Location     Type
 25916 ;;                  1    wreg      void 
 25917 ;; Registers used:
 25918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25919 ;; Tracked objects:
 25920 ;;		On entry : 3E/1
 25921 ;;		On exit  : 0/0
 25922 ;;		Unchanged: 0/0
 25923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25924 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25925 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25927 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25928 ;;Total ram usage:        5 bytes
 25929 ;; Hardware stack levels used:    1
 25930 ;; Hardware stack levels required when called:    8
 25931 ;; This function calls:
 25932 ;;		_NWK_RouteFindEntry
 25933 ;;		_NWK_RouteFreeEntry
 25934 ;; This function is called by:
 25935 ;;		_nwkRouteErrorReceived
 25936 ;;		_nwkRxRejectDuplicate
 25937 ;; This function uses a non-reentrant model
 25938 ;;
 25939                           
 25940                           	psect	text158
 25941  008EBE                     __ptext158:
 25942                           	opt callstack 0
 25943  008EBE                     _nwkRouteRemove:
 25944                           	opt callstack 17
 25945                           
 25946                           ;../nwk/nwk_src/nwkRoute.c: 183: void nwkRouteRemove(uint16_t dst, uint8_t multicast);..
      +                          /nwk/nwk_src/nwkRoute.c: 184: {;../nwk/nwk_src/nwkRoute.c: 185:   NWK_RouteTableEntry_t 
      +                          *entry;;../nwk/nwk_src/nwkRoute.c: 187:   entry = NWK_RouteFindEntry(dst, multicast);
 25947                           
 25948                           ;incstack = 0
 25949  008EBE  0060  F020  F002   	movff	nwkRouteRemove@dst,NWK_RouteFindEntry@dst
 25950  008EC4  0060  F024  F003   	movff	nwkRouteRemove@dst+1,NWK_RouteFindEntry@dst+1
 25951  008ECA  0060  F028  F004   	movff	nwkRouteRemove@multicast,NWK_RouteFindEntry@multicast
 25952  008ED0  ECA7  F040         	call	_NWK_RouteFindEntry	;wreg free
 25953  008ED4  0060  F008  F00B   	movff	?_NWK_RouteFindEntry,nwkRouteRemove@entry
 25954  008EDA  0060  F00C  F00C   	movff	?_NWK_RouteFindEntry+1,nwkRouteRemove@entry+1
 25955                           
 25956                           ;../nwk/nwk_src/nwkRoute.c: 188:   if (entry)
 25957  008EE0  500B               	movf	nwkRouteRemove@entry^0,w,c
 25958  008EE2  100C               	iorwf	(nwkRouteRemove@entry+1)^0,w,c
 25959  008EE4  B4D8               	btfsc	status,2,c
 25960  008EE6  0012               	return	
 25961                           
 25962                           ;../nwk/nwk_src/nwkRoute.c: 189:     NWK_RouteFreeEntry(entry);
 25963  008EE8  0060  F02C  F002   	movff	nwkRouteRemove@entry,NWK_RouteFreeEntry@entry
 25964  008EEE  0060  F030  F003   	movff	nwkRouteRemove@entry+1,NWK_RouteFreeEntry@entry+1
 25965  008EF4  EC43  F048         	call	_NWK_RouteFreeEntry	;wreg free
 25966  008EF8  0012               	return		;funcret
 25967  008EFA                     __end_of_nwkRouteRemove:
 25968                           	opt callstack 0
 25969                           
 25970 ;; *************** function _NWK_RouteFreeEntry *****************
 25971 ;; Defined at:
 25972 ;;		line 134 in file "../nwk/nwk_src/nwkRoute.c"
 25973 ;; Parameters:    Size  Location     Type
 25974 ;;  entry           2    1[COMRAM] PTR struct NWK_RouteTabl
 25975 ;;		 -> nwkRouteTable(70), NULL(0), 
 25976 ;; Auto vars:     Size  Location     Type
 25977 ;;		None
 25978 ;; Return value:  Size  Location     Type
 25979 ;;                  1    wreg      void 
 25980 ;; Registers used:
 25981 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25982 ;; Tracked objects:
 25983 ;;		On entry : 0/3D
 25984 ;;		On exit  : 0/0
 25985 ;;		Unchanged: 0/0
 25986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25990 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25991 ;;Total ram usage:        2 bytes
 25992 ;; Hardware stack levels used:    1
 25993 ;; Hardware stack levels required when called:    7
 25994 ;; This function calls:
 25995 ;;		Nothing
 25996 ;; This function is called by:
 25997 ;;		_nwkRouteRemove
 25998 ;;		_nwkRouteFrameSent
 25999 ;; This function uses a non-reentrant model
 26000 ;;
 26001                           
 26002                           	psect	text159
 26003  009086                     __ptext159:
 26004                           	opt callstack 0
 26005  009086                     _NWK_RouteFreeEntry:
 26006                           	opt callstack 19
 26007                           
 26008                           ;../nwk/nwk_src/nwkRoute.c: 134: void NWK_RouteFreeEntry(NWK_RouteTableEntry_t *entry);.
      +                          ./nwk/nwk_src/nwkRoute.c: 135: {;../nwk/nwk_src/nwkRoute.c: 136:   if (entry->fixed)
 26009                           
 26010                           ;incstack = 0
 26011  009086  0060  F00B  FFD9   	movff	NWK_RouteFreeEntry@entry,fsr2l
 26012  00908C  0060  F00F  FFDA   	movff	NWK_RouteFreeEntry@entry+1,fsr2h
 26013  009092  B0DF               	btfsc	indf2,0,c
 26014  009094  0012               	return	
 26015                           
 26016                           ;../nwk/nwk_src/nwkRoute.c: 138:   entry->dstAddr = 0xffff;
 26017  009096  EE20 F001          	lfsr	2,1
 26018  00909A  5002               	movf	NWK_RouteFreeEntry@entry^0,w,c
 26019  00909C  26D9               	addwf	fsr2l,f,c
 26020  00909E  5003               	movf	(NWK_RouteFreeEntry@entry+1)^0,w,c
 26021  0090A0  22DA               	addwfc	fsr2h,f,c
 26022  0090A2  0EFF               	movlw	255
 26023  0090A4  6EDE               	movwf	postinc2,c
 26024  0090A6  0EFF               	movlw	255
 26025  0090A8  6EDD               	movwf	postdec2,c
 26026                           
 26027                           ;../nwk/nwk_src/nwkRoute.c: 139:   entry->rank = 0;
 26028  0090AA  EE20 F005          	lfsr	2,5
 26029  0090AE  5002               	movf	NWK_RouteFreeEntry@entry^0,w,c
 26030  0090B0  26D9               	addwf	fsr2l,f,c
 26031  0090B2  5003               	movf	(NWK_RouteFreeEntry@entry+1)^0,w,c
 26032  0090B4  22DA               	addwfc	fsr2h,f,c
 26033  0090B6  0E00               	movlw	0
 26034  0090B8  6EDF               	movwf	indf2,c
 26035  0090BA  0012               	return		;funcret
 26036  0090BC                     __end_of_NWK_RouteFreeEntry:
 26037                           	opt callstack 0
 26038                           
 26039 ;; *************** function _nwkFramePayloadSize *****************
 26040 ;; Defined at:
 26041 ;;		line 145 in file "../nwk/nwk_src/nwkFrame.c"
 26042 ;; Parameters:    Size  Location     Type
 26043 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 26044 ;;		 -> nwkFrameFrames(685), NULL(0), 
 26045 ;; Auto vars:     Size  Location     Type
 26046 ;;		None
 26047 ;; Return value:  Size  Location     Type
 26048 ;;                  1    wreg      unsigned char 
 26049 ;; Registers used:
 26050 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26051 ;; Tracked objects:
 26052 ;;		On entry : 3E/1
 26053 ;;		On exit  : 3E/0
 26054 ;;		Unchanged: 3E/0
 26055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26056 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26058 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26059 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26060 ;;Total ram usage:        4 bytes
 26061 ;; Hardware stack levels used:    1
 26062 ;; Hardware stack levels required when called:    7
 26063 ;; This function calls:
 26064 ;;		Nothing
 26065 ;; This function is called by:
 26066 ;;		_nwkRxIndicateFrame
 26067 ;;		_nwkSecurityStart
 26068 ;; This function uses a non-reentrant model
 26069 ;;
 26070                           
 26071                           	psect	text160
 26072  00933C                     __ptext160:
 26073                           	opt callstack 0
 26074  00933C                     _nwkFramePayloadSize:
 26075                           	opt callstack 19
 26076                           
 26077                           ;../nwk/nwk_src/nwkFrame.c: 145: __attribute__((inline)) uint8_t nwkFramePayloadSize(Nwk
      +                          Frame_t *frame);../nwk/nwk_src/nwkFrame.c: 146: {;../nwk/nwk_src/nwkFrame.c: 147:   retu
      +                          rn frame->size - (frame->payload - frame->data);
 26078                           
 26079                           ;incstack = 0
 26080  00933C  EE20 F081          	lfsr	2,129
 26081  009340  5002               	movf	nwkFramePayloadSize@frame^0,w,c
 26082  009342  26D9               	addwf	fsr2l,f,c
 26083  009344  5003               	movf	(nwkFramePayloadSize@frame+1)^0,w,c
 26084  009346  22DA               	addwfc	fsr2h,f,c
 26085  009348  50DF               	movf	indf2,w,c
 26086  00934A  6E04               	movwf	??_nwkFramePayloadSize^0,c
 26087  00934C  EE20 F001          	lfsr	2,1
 26088  009350  5002               	movf	nwkFramePayloadSize@frame^0,w,c
 26089  009352  26D9               	addwf	fsr2l,f,c
 26090  009354  5003               	movf	(nwkFramePayloadSize@frame+1)^0,w,c
 26091  009356  22DA               	addwfc	fsr2h,f,c
 26092  009358  50DF               	movf	indf2,w,c
 26093  00935A  6E05               	movwf	(??_nwkFramePayloadSize+1)^0,c
 26094  00935C  5004               	movf	??_nwkFramePayloadSize^0,w,c
 26095  00935E  5C05               	subwf	(??_nwkFramePayloadSize+1)^0,w,c
 26096  009360  2402               	addwf	nwkFramePayloadSize@frame^0,w,c
 26097  009362  0F02               	addlw	2
 26098  009364  0012               	return		;funcret
 26099  009366                     __end_of_nwkFramePayloadSize:
 26100                           	opt callstack 0
 26101                           
 26102 ;; *************** function _get_free_rx_buffer *****************
 26103 ;; Defined at:
 26104 ;;		line 86 in file "../app/app_src/application.c"
 26105 ;; Parameters:    Size  Location     Type
 26106 ;;  buf_id          1    1[COMRAM] PTR unsigned char 
 26107 ;;		 -> appDataInd@buf_id(1), 
 26108 ;; Auto vars:     Size  Location     Type
 26109 ;;		None
 26110 ;; Return value:  Size  Location     Type
 26111 ;;                  1    wreg      _Bool 
 26112 ;; Registers used:
 26113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26114 ;; Tracked objects:
 26115 ;;		On entry : 3E/0
 26116 ;;		On exit  : 3E/0
 26117 ;;		Unchanged: 3E/0
 26118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26119 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26121 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26123 ;;Total ram usage:        2 bytes
 26124 ;; Hardware stack levels used:    1
 26125 ;; Hardware stack levels required when called:    7
 26126 ;; This function calls:
 26127 ;;		Nothing
 26128 ;; This function is called by:
 26129 ;;		_appDataInd
 26130 ;; This function uses a non-reentrant model
 26131 ;;
 26132                           
 26133                           	psect	text161
 26134  008218                     __ptext161:
 26135                           	opt callstack 0
 26136  008218                     _get_free_rx_buffer:
 26137                           	opt callstack 17
 26138                           
 26139                           ;../app/app_src/application.c: 87:     *buf_id = 0;
 26140                           
 26141                           ;incstack = 0
 26142  008218  5002               	movf	get_free_rx_buffer@buf_id^0,w,c
 26143  00821A  6ED9               	movwf	fsr2l,c
 26144  00821C  6ADA               	clrf	fsr2h,c
 26145  00821E  0E00               	movlw	0
 26146  008220  6EDF               	movwf	indf2,c
 26147                           
 26148                           ;../app/app_src/application.c: 88:     while(*buf_id < 4){
 26149  008222  D023               	goto	l238
 26150  008224                     l9906:
 26151                           
 26152                           ;../app/app_src/application.c: 89:         if(rx_buffer[*buf_id].free){
 26153  008224  5002               	movf	get_free_rx_buffer@buf_id^0,w,c
 26154  008226  6ED9               	movwf	fsr2l,c
 26155  008228  6ADA               	clrf	fsr2h,c
 26156  00822A  50DF               	movf	indf2,w,c
 26157  00822C  6E03               	movwf	??_get_free_rx_buffer^0,c
 26158  00822E  5003               	movf	??_get_free_rx_buffer^0,w,c
 26159  008230  0D7A               	mullw	122
 26160  008232  0E76               	movlw	low _rx_buffer
 26161  008234  24F3               	addwf	243,w,c
 26162  008236  6ED9               	movwf	fsr2l,c
 26163  008238  0E0A               	movlw	high _rx_buffer
 26164  00823A  20F4               	addwfc	prodh,w,c
 26165  00823C  6EDA               	movwf	fsr2h,c
 26166  00823E  A0DF               	btfss	indf2,0,c
 26167  008240  D010               	goto	l9914
 26168                           
 26169                           ;../app/app_src/application.c: 90:             rx_buffer[*buf_id].free = 0;
 26170  008242  5002               	movf	get_free_rx_buffer@buf_id^0,w,c
 26171  008244  6ED9               	movwf	fsr2l,c
 26172  008246  6ADA               	clrf	fsr2h,c
 26173  008248  50DF               	movf	indf2,w,c
 26174  00824A  6E03               	movwf	??_get_free_rx_buffer^0,c
 26175  00824C  5003               	movf	??_get_free_rx_buffer^0,w,c
 26176  00824E  0D7A               	mullw	122
 26177  008250  0E76               	movlw	low _rx_buffer
 26178  008252  24F3               	addwf	243,w,c
 26179  008254  6ED9               	movwf	fsr2l,c
 26180  008256  0E0A               	movlw	high _rx_buffer
 26181  008258  20F4               	addwfc	prodh,w,c
 26182  00825A  6EDA               	movwf	fsr2h,c
 26183  00825C  90DF               	bcf	indf2,0,c
 26184                           
 26185                           ;../app/app_src/application.c: 91:             return 1;
 26186  00825E  0E01               	movlw	1
 26187  008260  0012               	return	
 26188  008262                     l9914:
 26189                           
 26190                           ;../app/app_src/application.c: 93:         (*buf_id)++;
 26191  008262  5002               	movf	get_free_rx_buffer@buf_id^0,w,c
 26192  008264  6ED9               	movwf	fsr2l,c
 26193  008266  6ADA               	clrf	fsr2h,c
 26194  008268  2ADF               	incf	indf2,f,c
 26195  00826A                     l238:
 26196                           
 26197                           ;../app/app_src/application.c: 88:     while(*buf_id < 4){
 26198  00826A  5002               	movf	get_free_rx_buffer@buf_id^0,w,c
 26199  00826C  6ED9               	movwf	fsr2l,c
 26200  00826E  6ADA               	clrf	fsr2h,c
 26201  008270  0E03               	movlw	3
 26202  008272  64DF               	cpfsgt	indf2,c
 26203  008274  D7D7               	goto	l9906
 26204                           
 26205                           ;../app/app_src/application.c: 95:     return 0;
 26206  008276  0E00               	movlw	0
 26207  008278  0012               	return		;funcret
 26208  00827A                     __end_of_get_free_rx_buffer:
 26209                           	opt callstack 0
 26210                           
 26211 ;; *************** function _CircularBufferPushBack *****************
 26212 ;; Defined at:
 26213 ;;		line 71 in file "../app/app_src/circular buffer.c"
 26214 ;; Parameters:    Size  Location     Type
 26215 ;;  ctx             2   18[COMRAM] PTR struct .
 26216 ;;		 -> ledtasksbuf(10), rx_buffer_queue_context(10), 
 26217 ;;  val             1   20[COMRAM] PTR void 
 26218 ;;		 -> queueLedEvent@temp(3), appDataInd@buf_id(1), 
 26219 ;; Auto vars:     Size  Location     Type
 26220 ;;  write_pos       2   25[COMRAM] unsigned int 
 26221 ;; Return value:  Size  Location     Type
 26222 ;;                  1    wreg      char 
 26223 ;; Registers used:
 26224 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26225 ;; Tracked objects:
 26226 ;;		On entry : 0/0
 26227 ;;		On exit  : 0/0
 26228 ;;		Unchanged: 0/0
 26229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26230 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26232 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26233 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26234 ;;Total ram usage:        9 bytes
 26235 ;; Hardware stack levels used:    1
 26236 ;; Hardware stack levels required when called:    8
 26237 ;; This function calls:
 26238 ;;		___wmul
 26239 ;;		_memcpy
 26240 ;; This function is called by:
 26241 ;;		_appDataInd
 26242 ;;		_queueLedEvent
 26243 ;; This function uses a non-reentrant model
 26244 ;;
 26245                           
 26246                           	psect	text162
 26247  005C24                     __ptext162:
 26248                           	opt callstack 0
 26249  005C24                     _CircularBufferPushBack:
 26250                           	opt callstack 19
 26251                           
 26252                           ;../app/app_src/circular buffer.c: 72:     size_t write_pos = (ctx->write_pos + 1) & ctx
      +                          ->max_size;
 26253                           
 26254                           ;incstack = 0
 26255  005C24  EE20 F008          	lfsr	2,8
 26256  005C28  5013               	movf	CircularBufferPushBack@ctx^0,w,c
 26257  005C2A  26D9               	addwf	fsr2l,f,c
 26258  005C2C  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
 26259  005C2E  22DA               	addwfc	fsr2h,f,c
 26260  005C30  006F FF78  F016    	movff	postinc2,??_CircularBufferPushBack
 26261  005C36  006F FF74  F017    	movff	postdec2,??_CircularBufferPushBack+1
 26262  005C3C  EE20 F002          	lfsr	2,2
 26263  005C40  5013               	movf	CircularBufferPushBack@ctx^0,w,c
 26264  005C42  26D9               	addwf	fsr2l,f,c
 26265  005C44  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
 26266  005C46  22DA               	addwfc	fsr2h,f,c
 26267  005C48  006F FF78  F018    	movff	postinc2,??_CircularBufferPushBack+2
 26268  005C4E  006F FF74  F019    	movff	postdec2,??_CircularBufferPushBack+3
 26269  005C54  0E01               	movlw	1
 26270  005C56  2618               	addwf	(??_CircularBufferPushBack+2)^0,f,c
 26271  005C58  0E00               	movlw	0
 26272  005C5A  2219               	addwfc	(??_CircularBufferPushBack+3)^0,f,c
 26273  005C5C  5016               	movf	??_CircularBufferPushBack^0,w,c
 26274  005C5E  1418               	andwf	(??_CircularBufferPushBack+2)^0,w,c
 26275  005C60  6E1A               	movwf	CircularBufferPushBack@write_pos^0,c
 26276  005C62  5017               	movf	(??_CircularBufferPushBack+1)^0,w,c
 26277  005C64  1419               	andwf	(??_CircularBufferPushBack+3)^0,w,c
 26278  005C66  6E1B               	movwf	(CircularBufferPushBack@write_pos+1)^0,c
 26279                           
 26280                           ;../app/app_src/circular buffer.c: 75:     if (write_pos == ctx->read_pos) {
 26281  005C68  EE20 F004          	lfsr	2,4
 26282  005C6C  5013               	movf	CircularBufferPushBack@ctx^0,w,c
 26283  005C6E  26D9               	addwf	fsr2l,f,c
 26284  005C70  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
 26285  005C72  22DA               	addwfc	fsr2h,f,c
 26286  005C74  501A               	movf	CircularBufferPushBack@write_pos^0,w,c
 26287  005C76  18DE               	xorwf	postinc2,w,c
 26288  005C78  E104               	bnz	l14902
 26289  005C7A  501B               	movf	(CircularBufferPushBack@write_pos+1)^0,w,c
 26290  005C7C  18DE               	xorwf	postinc2,w,c
 26291  005C7E  B4D8               	btfsc	status,2,c
 26292  005C80  0012               	return	
 26293  005C82                     l14902:
 26294                           
 26295                           ;../app/app_src/circular buffer.c: 80:     memcpy(&ctx->buf[ctx->write_pos * ctx->elemen
      +                          t_size], val,
 26296  005C82  EE20 F002          	lfsr	2,2
 26297  005C86  5013               	movf	CircularBufferPushBack@ctx^0,w,c
 26298  005C88  26D9               	addwf	fsr2l,f,c
 26299  005C8A  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
 26300  005C8C  22DA               	addwfc	fsr2h,f,c
 26301  005C8E  006F FF78  F002    	movff	postinc2,___wmul@multiplier
 26302  005C94  006F FF74  F003    	movff	postdec2,___wmul@multiplier+1
 26303  005C9A  EE20 F006          	lfsr	2,6
 26304  005C9E  5013               	movf	CircularBufferPushBack@ctx^0,w,c
 26305  005CA0  26D9               	addwf	fsr2l,f,c
 26306  005CA2  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
 26307  005CA4  22DA               	addwfc	fsr2h,f,c
 26308  005CA6  006F FF78  F004    	movff	postinc2,___wmul@multiplicand
 26309  005CAC  006F FF74  F005    	movff	postdec2,___wmul@multiplicand+1
 26310  005CB2  EC47  F049         	call	___wmul	;wreg free
 26311  005CB6  0060  F04F  FFD9   	movff	CircularBufferPushBack@ctx,fsr2l
 26312  005CBC  0060  F053  FFDA   	movff	CircularBufferPushBack@ctx+1,fsr2h
 26313  005CC2  006F FF78  F016    	movff	postinc2,??_CircularBufferPushBack
 26314  005CC8  006F FF74  F017    	movff	postdec2,??_CircularBufferPushBack+1
 26315  005CCE  5002               	movf	?___wmul^0,w,c
 26316  005CD0  2416               	addwf	??_CircularBufferPushBack^0,w,c
 26317  005CD2  6E08               	movwf	memcpy@d1^0,c
 26318  005CD4  5003               	movf	(?___wmul+1)^0,w,c
 26319  005CD6  2017               	addwfc	(??_CircularBufferPushBack+1)^0,w,c
 26320  005CD8  6E09               	movwf	(memcpy@d1+1)^0,c
 26321  005CDA  0060  F054  F00A   	movff	CircularBufferPushBack@val,memcpy@s1
 26322  005CE0  6A0B               	clrf	(memcpy@s1+1)^0,c
 26323  005CE2  EE20 F006          	lfsr	2,6
 26324  005CE6  5013               	movf	CircularBufferPushBack@ctx^0,w,c
 26325  005CE8  26D9               	addwf	fsr2l,f,c
 26326  005CEA  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
 26327  005CEC  22DA               	addwfc	fsr2h,f,c
 26328  005CEE  006F FF78  F00C    	movff	postinc2,memcpy@n
 26329  005CF4  006F FF74  F00D    	movff	postdec2,memcpy@n+1
 26330  005CFA  EC95  F03F         	call	_memcpy	;wreg free
 26331                           
 26332                           ;../app/app_src/circular buffer.c: 82:     ctx->write_pos = write_pos;
 26333  005CFE  EE20 F002          	lfsr	2,2
 26334  005D02  5013               	movf	CircularBufferPushBack@ctx^0,w,c
 26335  005D04  26D9               	addwf	fsr2l,f,c
 26336  005D06  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
 26337  005D08  22DA               	addwfc	fsr2h,f,c
 26338  005D0A  0060  F06B  FFDE   	movff	CircularBufferPushBack@write_pos,postinc2
 26339  005D10  0060  F06F  FFDD   	movff	CircularBufferPushBack@write_pos+1,postdec2
 26340  005D16  0012               	return		;funcret
 26341  005D18                     __end_of_CircularBufferPushBack:
 26342                           	opt callstack 0
 26343                           
 26344 ;; *************** function ___wmul *****************
 26345 ;; Defined at:
 26346 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 26347 ;; Parameters:    Size  Location     Type
 26348 ;;  multiplier      2    1[COMRAM] unsigned int 
 26349 ;;  multiplicand    2    3[COMRAM] unsigned int 
 26350 ;; Auto vars:     Size  Location     Type
 26351 ;;  product         2    5[COMRAM] unsigned int 
 26352 ;; Return value:  Size  Location     Type
 26353 ;;                  2    1[COMRAM] unsigned int 
 26354 ;; Registers used:
 26355 ;;		wreg, status,2, status,0, prodl, prodh
 26356 ;; Tracked objects:
 26357 ;;		On entry : 0/0
 26358 ;;		On exit  : 0/0
 26359 ;;		Unchanged: 0/0
 26360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26361 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26362 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26364 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26365 ;;Total ram usage:        6 bytes
 26366 ;; Hardware stack levels used:    1
 26367 ;; Hardware stack levels required when called:    7
 26368 ;; This function calls:
 26369 ;;		Nothing
 26370 ;; This function is called by:
 26371 ;;		_atoi
 26372 ;;		_CircularBufferPopFront
 26373 ;;		_CircularBufferPushBack
 26374 ;; This function uses a non-reentrant model
 26375 ;;
 26376                           
 26377                           	psect	text163
 26378  00928E                     __ptext163:
 26379                           	opt callstack 0
 26380  00928E                     ___wmul:
 26381                           	opt callstack 19
 26382                           
 26383                           ;incstack = 0
 26384  00928E  5002               	movf	___wmul@multiplier^0,w,c
 26385  009290  0204               	mulwf	___wmul@multiplicand^0,c
 26386  009292  006F FFCC  F006    	movff	prodl,___wmul@product
 26387  009298  006F FFD0  F007    	movff	prodh,___wmul@product+1
 26388  00929E  5002               	movf	___wmul@multiplier^0,w,c
 26389  0092A0  0205               	mulwf	(___wmul@multiplicand+1)^0,c
 26390  0092A2  50F3               	movf	243,w,c
 26391  0092A4  2607               	addwf	(___wmul@product+1)^0,f,c
 26392  0092A6  5003               	movf	(___wmul@multiplier+1)^0,w,c
 26393  0092A8  0204               	mulwf	___wmul@multiplicand^0,c
 26394  0092AA  50F3               	movf	243,w,c
 26395  0092AC  2607               	addwf	(___wmul@product+1)^0,f,c
 26396  0092AE  0060  F018  F002   	movff	___wmul@product,?___wmul
 26397  0092B4  0060  F01C  F003   	movff	___wmul@product+1,?___wmul+1
 26398  0092BA  0012               	return		;funcret
 26399  0092BC                     __end_of___wmul:
 26400                           	opt callstack 0
 26401                           
 26402 ;; *************** function _nwkRouteFrame *****************
 26403 ;; Defined at:
 26404 ;;		line 299 in file "../nwk/nwk_src/nwkRoute.c"
 26405 ;; Parameters:    Size  Location     Type
 26406 ;;  frame           2   50[COMRAM] PTR struct NwkFrame_t
 26407 ;;		 -> nwkFrameFrames(685), NULL(0), 
 26408 ;; Auto vars:     Size  Location     Type
 26409 ;;  header          2   52[COMRAM] PTR __pack struct NwkFra
 26410 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 26411 ;; Return value:  Size  Location     Type
 26412 ;;                  1    wreg      void 
 26413 ;; Registers used:
 26414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26415 ;; Tracked objects:
 26416 ;;		On entry : 0/3D
 26417 ;;		On exit  : 3F/1
 26418 ;;		Unchanged: 0/0
 26419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26420 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26421 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26423 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26424 ;;Total ram usage:        4 bytes
 26425 ;; Hardware stack levels used:    1
 26426 ;; Hardware stack levels required when called:   12
 26427 ;; This function calls:
 26428 ;;		_NWK_RouteNextHop
 26429 ;;		_nwkFrameFree
 26430 ;;		_nwkRouteSendRouteError
 26431 ;;		_nwkTxFrame
 26432 ;; This function is called by:
 26433 ;;		_nwkRxTaskHandler
 26434 ;; This function uses a non-reentrant model
 26435 ;;
 26436                           
 26437                           	psect	text164
 26438  0065FE                     __ptext164:
 26439                           	opt callstack 0
 26440  0065FE                     _nwkRouteFrame:
 26441                           	opt callstack 15
 26442                           
 26443                           ;../nwk/nwk_src/nwkRoute.c: 299: void nwkRouteFrame(NwkFrame_t *frame);../nwk/nwk_src/nw
      +                          kRoute.c: 300: {;../nwk/nwk_src/nwkRoute.c: 301:   NwkFrameHeader_t *header = &frame->he
      +                          ader;
 26444                           
 26445                           ;incstack = 0
 26446  0065FE  0E02               	movlw	2
 26447  006600  2433               	addwf	nwkRouteFrame@frame^0,w,c
 26448  006602  6E35               	movwf	nwkRouteFrame@header^0,c
 26449  006604  0E00               	movlw	0
 26450  006606  2034               	addwfc	(nwkRouteFrame@frame+1)^0,w,c
 26451  006608  6E36               	movwf	(nwkRouteFrame@header+1)^0,c
 26452                           
 26453                           ;../nwk/nwk_src/nwkRoute.c: 303:   if (0xffff != NWK_RouteNextHop(header->nwkDstAddr, he
      +                          ader->nwkFcf.multicast))
 26454  00660A  EE20 F00D          	lfsr	2,13
 26455  00660E  5035               	movf	nwkRouteFrame@header^0,w,c
 26456  006610  26D9               	addwf	fsr2l,f,c
 26457  006612  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 26458  006614  22DA               	addwfc	fsr2h,f,c
 26459  006616  006F FF78  F008    	movff	postinc2,NWK_RouteNextHop@dst
 26460  00661C  006F FF74  F009    	movff	postdec2,NWK_RouteNextHop@dst+1
 26461  006622  EE20 F009          	lfsr	2,9
 26462  006626  5035               	movf	nwkRouteFrame@header^0,w,c
 26463  006628  26D9               	addwf	fsr2l,f,c
 26464  00662A  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 26465  00662C  22DA               	addwfc	fsr2h,f,c
 26466  00662E  0E00               	movlw	0
 26467  006630  B6DF               	btfsc	indf2,3,c
 26468  006632  0E01               	movlw	1
 26469  006634  6E0A               	movwf	NWK_RouteNextHop@multicast^0,c
 26470  006636  ECF5  F044         	call	_NWK_RouteNextHop	;wreg free
 26471  00663A  2808               	incf	?_NWK_RouteNextHop^0,w,c
 26472  00663C  E103               	bnz	u16240
 26473  00663E  2809               	incf	(?_NWK_RouteNextHop+1)^0,w,c
 26474  006640  B4D8               	btfsc	status,2,c
 26475  006642  D01B               	goto	l16068
 26476  006644                     u16240:
 26477                           
 26478                           ;../nwk/nwk_src/nwkRoute.c: 304:   {;../nwk/nwk_src/nwkRoute.c: 305:     frame->tx.confi
      +                          rm = ((void*)0);
 26479  006644  EE20 F087          	lfsr	2,135
 26480  006648  5033               	movf	nwkRouteFrame@frame^0,w,c
 26481  00664A  26D9               	addwf	fsr2l,f,c
 26482  00664C  5034               	movf	(nwkRouteFrame@frame+1)^0,w,c
 26483  00664E  22DA               	addwfc	fsr2h,f,c
 26484  006650  0E00               	movlw	0
 26485  006652  6EDE               	movwf	postinc2,c
 26486  006654  0E00               	movlw	0
 26487  006656  6EDD               	movwf	postdec2,c
 26488                           
 26489                           ;../nwk/nwk_src/nwkRoute.c: 306:     frame->tx.control = NWK_TX_CONTROL_ROUTING;
 26490  006658  EE20 F086          	lfsr	2,134
 26491  00665C  5033               	movf	nwkRouteFrame@frame^0,w,c
 26492  00665E  26D9               	addwf	fsr2l,f,c
 26493  006660  5034               	movf	(nwkRouteFrame@frame+1)^0,w,c
 26494  006662  22DA               	addwfc	fsr2h,f,c
 26495  006664  0E02               	movlw	2
 26496  006666  6EDF               	movwf	indf2,c
 26497                           
 26498                           ;../nwk/nwk_src/nwkRoute.c: 307:     nwkTxFrame(frame);
 26499  006668  0060  F0CC  F024   	movff	nwkRouteFrame@frame,nwkTxFrame@frame
 26500  00666E  0060  F0D0  F025   	movff	nwkRouteFrame@frame+1,nwkTxFrame@frame+1
 26501  006674  ECD9  F01E         	call	_nwkTxFrame	;wreg free
 26502                           
 26503                           ;../nwk/nwk_src/nwkRoute.c: 308:   }
 26504  006678  0012               	return	
 26505  00667A                     l16068:
 26506                           
 26507                           ;../nwk/nwk_src/nwkRoute.c: 310:   {;../nwk/nwk_src/nwkRoute.c: 311:     nwkRouteSendRou
      +                          teError(header->nwkSrcAddr, header->nwkDstAddr, header->nwkFcf.multicast);
 26508  00667A  EE20 F00B          	lfsr	2,11
 26509  00667E  5035               	movf	nwkRouteFrame@header^0,w,c
 26510  006680  26D9               	addwf	fsr2l,f,c
 26511  006682  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 26512  006684  22DA               	addwfc	fsr2h,f,c
 26513  006686  006F FF78  F02A    	movff	postinc2,nwkRouteSendRouteError@src
 26514  00668C  006F FF74  F02B    	movff	postdec2,nwkRouteSendRouteError@src+1
 26515  006692  EE20 F00D          	lfsr	2,13
 26516  006696  5035               	movf	nwkRouteFrame@header^0,w,c
 26517  006698  26D9               	addwf	fsr2l,f,c
 26518  00669A  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 26519  00669C  22DA               	addwfc	fsr2h,f,c
 26520  00669E  006F FF78  F02C    	movff	postinc2,nwkRouteSendRouteError@dst
 26521  0066A4  006F FF74  F02D    	movff	postdec2,nwkRouteSendRouteError@dst+1
 26522  0066AA  EE20 F009          	lfsr	2,9
 26523  0066AE  5035               	movf	nwkRouteFrame@header^0,w,c
 26524  0066B0  26D9               	addwf	fsr2l,f,c
 26525  0066B2  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 26526  0066B4  22DA               	addwfc	fsr2h,f,c
 26527  0066B6  0E00               	movlw	0
 26528  0066B8  B6DF               	btfsc	indf2,3,c
 26529  0066BA  0E01               	movlw	1
 26530  0066BC  6E2E               	movwf	nwkRouteSendRouteError@multicast^0,c
 26531  0066BE  EC46  F031         	call	_nwkRouteSendRouteError	;wreg free
 26532                           
 26533                           ;../nwk/nwk_src/nwkRoute.c: 312:     nwkFrameFree(frame);
 26534  0066C2  0060  F0CC  F002   	movff	nwkRouteFrame@frame,nwkFrameFree@frame
 26535  0066C8  0060  F0D0  F003   	movff	nwkRouteFrame@frame+1,nwkFrameFree@frame+1
 26536  0066CE  EC8F  F04B         	call	_nwkFrameFree	;wreg free
 26537                           
 26538                           ; BSR set to: 1
 26539  0066D2  0012               	return		;funcret
 26540  0066D4                     __end_of_nwkRouteFrame:
 26541                           	opt callstack 0
 26542                           
 26543 ;; *************** function _nwkRouteSendRouteError *****************
 26544 ;; Defined at:
 26545 ;;		line 318 in file "../nwk/nwk_src/nwkRoute.c"
 26546 ;; Parameters:    Size  Location     Type
 26547 ;;  src             2   41[COMRAM] unsigned short 
 26548 ;;  dst             2   43[COMRAM] unsigned short 
 26549 ;;  multicast       1   45[COMRAM] unsigned char 
 26550 ;; Auto vars:     Size  Location     Type
 26551 ;;  frame           2   48[COMRAM] PTR struct NwkFrame_t
 26552 ;;		 -> nwkFrameFrames(685), NULL(0), 
 26553 ;;  command         2   46[COMRAM] PTR __pack struct NwkCom
 26554 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 26555 ;; Return value:  Size  Location     Type
 26556 ;;                  1    wreg      void 
 26557 ;; Registers used:
 26558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26559 ;; Tracked objects:
 26560 ;;		On entry : 0/3D
 26561 ;;		On exit  : 0/0
 26562 ;;		Unchanged: 0/0
 26563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26564 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26565 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26567 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26568 ;;Total ram usage:        9 bytes
 26569 ;; Hardware stack levels used:    1
 26570 ;; Hardware stack levels required when called:   11
 26571 ;; This function calls:
 26572 ;;		_nwkFrameAlloc
 26573 ;;		_nwkFrameCommandInit
 26574 ;;		_nwkTxFrame
 26575 ;; This function is called by:
 26576 ;;		_nwkRouteFrame
 26577 ;; This function uses a non-reentrant model
 26578 ;;
 26579                           
 26580                           	psect	text165
 26581  00628C                     __ptext165:
 26582                           	opt callstack 0
 26583  00628C                     _nwkRouteSendRouteError:
 26584                           	opt callstack 15
 26585                           
 26586                           ;../nwk/nwk_src/nwkRoute.c: 318: static void nwkRouteSendRouteError(uint16_t src, uint16
      +                          _t dst, uint8_t multicast);../nwk/nwk_src/nwkRoute.c: 319: {;../nwk/nwk_src/nwkRoute.c: 
      +                          320:   NwkFrame_t *frame;;../nwk/nwk_src/nwkRoute.c: 321:   NwkCommandRouteError_t *comm
      +                          and;;../nwk/nwk_src/nwkRoute.c: 323:   if (((void*)0) == (frame = nwkFrameAlloc()))
 26587                           
 26588                           ; BSR set to: 1
 26589                           ;incstack = 0
 26590  00628C  EC5C  F038         	call	_nwkFrameAlloc	;wreg free
 26591  006290  0060  F038  F031   	movff	?_nwkFrameAlloc,nwkRouteSendRouteError@frame
 26592  006296  0060  F03C  F032   	movff	?_nwkFrameAlloc+1,nwkRouteSendRouteError@frame+1
 26593  00629C  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 26594  00629E  1032               	iorwf	(nwkRouteSendRouteError@frame+1)^0,w,c
 26595  0062A0  B4D8               	btfsc	status,2,c
 26596  0062A2  0012               	return	
 26597                           
 26598                           ;../nwk/nwk_src/nwkRoute.c: 326:   nwkFrameCommandInit(frame);
 26599  0062A4  0060  F0C4  F002   	movff	nwkRouteSendRouteError@frame,nwkFrameCommandInit@frame
 26600  0062AA  0060  F0C8  F003   	movff	nwkRouteSendRouteError@frame+1,nwkFrameCommandInit@frame+1
 26601  0062B0  EC10  F044         	call	_nwkFrameCommandInit	;wreg free
 26602                           
 26603                           ; BSR set to: 1
 26604                           ;../nwk/nwk_src/nwkRoute.c: 328:   frame->size += sizeof(NwkCommandRouteError_t);
 26605  0062B4  EE20 F001          	lfsr	2,1
 26606  0062B8  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 26607  0062BA  26D9               	addwf	fsr2l,f,c
 26608  0062BC  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 26609  0062BE  22DA               	addwfc	fsr2h,f,c
 26610  0062C0  0E06               	movlw	6
 26611  0062C2  26DF               	addwf	indf2,f,c
 26612                           
 26613                           ; BSR set to: 1
 26614                           ;../nwk/nwk_src/nwkRoute.c: 329:   frame->tx.confirm = ((void*)0);
 26615  0062C4  EE20 F087          	lfsr	2,135
 26616  0062C8  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 26617  0062CA  26D9               	addwf	fsr2l,f,c
 26618  0062CC  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 26619  0062CE  22DA               	addwfc	fsr2h,f,c
 26620  0062D0  0E00               	movlw	0
 26621  0062D2  6EDE               	movwf	postinc2,c
 26622  0062D4  0E00               	movlw	0
 26623  0062D6  6EDD               	movwf	postdec2,c
 26624                           
 26625                           ; BSR set to: 1
 26626                           ;../nwk/nwk_src/nwkRoute.c: 331:   frame->header.nwkDstAddr = src;
 26627  0062D8  EE20 F00F          	lfsr	2,15
 26628  0062DC  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 26629  0062DE  26D9               	addwf	fsr2l,f,c
 26630  0062E0  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 26631  0062E2  22DA               	addwfc	fsr2h,f,c
 26632  0062E4  0060  F0AB  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
 26633  0062EA  0060  F0AF  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
 26634                           
 26635                           ; BSR set to: 1
 26636                           ;../nwk/nwk_src/nwkRoute.c: 333:   command = (NwkCommandRouteError_t *)frame->payload;
 26637  0062F0  EE20 F081          	lfsr	2,129
 26638  0062F4  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 26639  0062F6  26D9               	addwf	fsr2l,f,c
 26640  0062F8  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 26641  0062FA  22DA               	addwfc	fsr2h,f,c
 26642  0062FC  006F FF78  F02F    	movff	postinc2,nwkRouteSendRouteError@command
 26643  006302  006F FF74  F030    	movff	postdec2,nwkRouteSendRouteError@command+1
 26644                           
 26645                           ; BSR set to: 1
 26646                           ;../nwk/nwk_src/nwkRoute.c: 334:   command->id = NWK_COMMAND_ROUTE_ERROR;
 26647  006308  0060  F0BF  FFD9   	movff	nwkRouteSendRouteError@command,fsr2l
 26648  00630E  0060  F0C3  FFDA   	movff	nwkRouteSendRouteError@command+1,fsr2h
 26649  006314  0E01               	movlw	1
 26650  006316  6EDF               	movwf	indf2,c
 26651                           
 26652                           ; BSR set to: 1
 26653                           ;../nwk/nwk_src/nwkRoute.c: 335:   command->srcAddr = src;
 26654  006318  EE20 F001          	lfsr	2,1
 26655  00631C  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 26656  00631E  26D9               	addwf	fsr2l,f,c
 26657  006320  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 26658  006322  22DA               	addwfc	fsr2h,f,c
 26659  006324  0060  F0AB  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
 26660  00632A  0060  F0AF  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
 26661                           
 26662                           ; BSR set to: 1
 26663                           ;../nwk/nwk_src/nwkRoute.c: 336:   command->dstAddr = dst;
 26664  006330  EE20 F003          	lfsr	2,3
 26665  006334  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 26666  006336  26D9               	addwf	fsr2l,f,c
 26667  006338  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 26668  00633A  22DA               	addwfc	fsr2h,f,c
 26669  00633C  0060  F0B3  FFDE   	movff	nwkRouteSendRouteError@dst,postinc2
 26670  006342  0060  F0B7  FFDD   	movff	nwkRouteSendRouteError@dst+1,postdec2
 26671                           
 26672                           ; BSR set to: 1
 26673                           ;../nwk/nwk_src/nwkRoute.c: 337:   command->multicast = multicast;
 26674  006348  EE20 F005          	lfsr	2,5
 26675  00634C  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 26676  00634E  26D9               	addwf	fsr2l,f,c
 26677  006350  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 26678  006352  22DA               	addwfc	fsr2h,f,c
 26679  006354  0060  F0BB  FFDF   	movff	nwkRouteSendRouteError@multicast,indf2
 26680                           
 26681                           ; BSR set to: 1
 26682                           ;../nwk/nwk_src/nwkRoute.c: 339:   nwkTxFrame(frame);
 26683  00635A  0060  F0C4  F024   	movff	nwkRouteSendRouteError@frame,nwkTxFrame@frame
 26684  006360  0060  F0C8  F025   	movff	nwkRouteSendRouteError@frame+1,nwkTxFrame@frame+1
 26685  006366  ECD9  F01E         	call	_nwkTxFrame	;wreg free
 26686  00636A  0012               	return		;funcret
 26687  00636C                     __end_of_nwkRouteSendRouteError:
 26688                           	opt callstack 0
 26689                           
 26690 ;; *************** function _nwkFrameCommandInit *****************
 26691 ;; Defined at:
 26692 ;;		line 131 in file "../nwk/nwk_src/nwkFrame.c"
 26693 ;; Parameters:    Size  Location     Type
 26694 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 26695 ;;		 -> nwkFrameFrames(685), NULL(0), 
 26696 ;; Auto vars:     Size  Location     Type
 26697 ;;		None
 26698 ;; Return value:  Size  Location     Type
 26699 ;;                  1    wreg      void 
 26700 ;; Registers used:
 26701 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26702 ;; Tracked objects:
 26703 ;;		On entry : 0/1
 26704 ;;		On exit  : 3F/1
 26705 ;;		Unchanged: 0/0
 26706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26711 ;;Total ram usage:        2 bytes
 26712 ;; Hardware stack levels used:    1
 26713 ;; Hardware stack levels required when called:    7
 26714 ;; This function calls:
 26715 ;;		Nothing
 26716 ;; This function is called by:
 26717 ;;		_nwkRouteSendRouteError
 26718 ;;		_nwkRxSendAck
 26719 ;; This function uses a non-reentrant model
 26720 ;;
 26721                           
 26722                           	psect	text166
 26723  008820                     __ptext166:
 26724                           	opt callstack 0
 26725  008820                     _nwkFrameCommandInit:
 26726                           	opt callstack 18
 26727                           
 26728                           ;../nwk/nwk_src/nwkFrame.c: 131: void nwkFrameCommandInit(NwkFrame_t *frame);../nwk/nwk_
      +                          src/nwkFrame.c: 132: {;../nwk/nwk_src/nwkFrame.c: 133:   frame->tx.status = NWK_SUCCESS_
      +                          STATUS;
 26729                           
 26730                           ;incstack = 0
 26731  008820  EE20 F083          	lfsr	2,131
 26732  008824  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 26733  008826  26D9               	addwf	fsr2l,f,c
 26734  008828  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 26735  00882A  22DA               	addwfc	fsr2h,f,c
 26736  00882C  0E00               	movlw	0
 26737  00882E  6EDF               	movwf	indf2,c
 26738                           
 26739                           ;../nwk/nwk_src/nwkFrame.c: 134:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 26740  008830  0101               	movlb	1	; () banked
 26741  008832  2B35               	incf	(_nwkIb+4)& (0+255),f,b
 26742  008834  EE20 F00C          	lfsr	2,12
 26743  008838  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 26744  00883A  26D9               	addwf	fsr2l,f,c
 26745  00883C  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 26746  00883E  22DA               	addwfc	fsr2h,f,c
 26747  008840  0060  F4D7  FFDF   	movff	_nwkIb+4,indf2
 26748                           
 26749                           ;../nwk/nwk_src/nwkFrame.c: 135:   frame->header.nwkSrcAddr = nwkIb.addr;
 26750  008846  EE20 F00D          	lfsr	2,13
 26751  00884A  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 26752  00884C  26D9               	addwf	fsr2l,f,c
 26753  00884E  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 26754  008850  22DA               	addwfc	fsr2h,f,c
 26755  008852  0060  F4C7  FFDE   	movff	_nwkIb,postinc2
 26756  008858  0060  F4CB  FFDD   	movff	_nwkIb+1,postdec2
 26757                           
 26758                           ;../nwk/nwk_src/nwkFrame.c: 137:   frame->header.nwkFcf.security = 1;
 26759  00885E  EE20 F00B          	lfsr	2,11
 26760  008862  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 26761  008864  26D9               	addwf	fsr2l,f,c
 26762  008866  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 26763  008868  22DA               	addwfc	fsr2h,f,c
 26764  00886A  82DF               	bsf	indf2,1,c
 26765                           
 26766                           ; BSR set to: 1
 26767  00886C  0012               	return		;funcret
 26768  00886E                     __end_of_nwkFrameCommandInit:
 26769                           	opt callstack 0
 26770                           
 26771 ;; *************** function _nwkFrameFree *****************
 26772 ;; Defined at:
 26773 ;;		line 100 in file "../nwk/nwk_src/nwkFrame.c"
 26774 ;; Parameters:    Size  Location     Type
 26775 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 26776 ;;		 -> nwkFrameFrames(685), NULL(0), 
 26777 ;; Auto vars:     Size  Location     Type
 26778 ;;		None
 26779 ;; Return value:  Size  Location     Type
 26780 ;;                  1    wreg      void 
 26781 ;; Registers used:
 26782 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26783 ;; Tracked objects:
 26784 ;;		On entry : 0/3D
 26785 ;;		On exit  : 3F/1
 26786 ;;		Unchanged: 0/0
 26787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26788 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26791 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26792 ;;Total ram usage:        2 bytes
 26793 ;; Hardware stack levels used:    1
 26794 ;; Hardware stack levels required when called:    7
 26795 ;; This function calls:
 26796 ;;		Nothing
 26797 ;; This function is called by:
 26798 ;;		_nwkDataReqTxConf
 26799 ;;		_nwkRouteFrame
 26800 ;;		_nwkRxTaskHandler
 26801 ;;		_nwkTxTaskHandler
 26802 ;; This function uses a non-reentrant model
 26803 ;;
 26804                           
 26805                           	psect	text167
 26806  00971E                     __ptext167:
 26807                           	opt callstack 0
 26808  00971E                     _nwkFrameFree:
 26809                           	opt callstack 20
 26810                           
 26811                           ;../nwk/nwk_src/nwkFrame.c: 100: void nwkFrameFree(NwkFrame_t *frame);../nwk/nwk_src/nwk
      +                          Frame.c: 101: {;../nwk/nwk_src/nwkFrame.c: 102:   frame->state = NWK_FRAME_STATE_FREE;
 26812                           
 26813                           ; BSR set to: 1
 26814                           ;incstack = 0
 26815  00971E  0060  F00B  FFD9   	movff	nwkFrameFree@frame,fsr2l
 26816  009724  0060  F00F  FFDA   	movff	nwkFrameFree@frame+1,fsr2h
 26817  00972A  0E00               	movlw	0
 26818  00972C  6EDF               	movwf	indf2,c
 26819                           
 26820                           ;../nwk/nwk_src/nwkFrame.c: 103:   nwkIb.lock--;
 26821  00972E  0101               	movlb	1	; () banked
 26822  009730  0767               	decf	(_nwkIb+54)& (0+255),f,b
 26823  009732  A0D8               	btfss	status,0,c
 26824  009734  0768               	decf	(_nwkIb+55)& (0+255),f,b
 26825                           
 26826                           ; BSR set to: 1
 26827  009736  0012               	return		;funcret
 26828  009738                     __end_of_nwkFrameFree:
 26829                           	opt callstack 0
 26830                           
 26831 ;; *************** function _nwkDataReqTaskHandler *****************
 26832 ;; Defined at:
 26833 ;;		line 209 in file "../nwk/nwk_src/nwkDataReq.c"
 26834 ;; Parameters:    Size  Location     Type
 26835 ;;		None
 26836 ;; Auto vars:     Size  Location     Type
 26837 ;;  req             2   50[COMRAM] PTR struct NWK_DataReq_t
 26838 ;;		 -> NULL(0), tx_buffer.nwkDataReq(22), tx_buffer(524), 
 26839 ;; Return value:  Size  Location     Type
 26840 ;;                  1    wreg      void 
 26841 ;; Registers used:
 26842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 26843 ;; Tracked objects:
 26844 ;;		On entry : 0/3D
 26845 ;;		On exit  : 0/0
 26846 ;;		Unchanged: 0/0
 26847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26849 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26850 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26851 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26852 ;;Total ram usage:        4 bytes
 26853 ;; Hardware stack levels used:    1
 26854 ;; Hardware stack levels required when called:   12
 26855 ;; This function calls:
 26856 ;;		_nwkDataReqConfirm
 26857 ;;		_nwkDataReqSendFrame
 26858 ;; This function is called by:
 26859 ;;		_NWK_TaskHandler
 26860 ;; This function uses a non-reentrant model
 26861 ;;
 26862                           
 26863                           	psect	text168
 26864  007CB0                     __ptext168:
 26865                           	opt callstack 0
 26866  007CB0                     _nwkDataReqTaskHandler:
 26867                           	opt callstack 16
 26868                           
 26869                           ;../nwk/nwk_src/nwkDataReq.c: 211:   for (NWK_DataReq_t *req = nwkDataReqQueue; req; req
      +                           = req->next)
 26870                           
 26871                           ; BSR set to: 1
 26872                           ;incstack = 0
 26873  007CB0  0060  F304  F033   	movff	_nwkDataReqQueue,nwkDataReqTaskHandler@req
 26874  007CB6  0060  F308  F034   	movff	_nwkDataReqQueue+1,nwkDataReqTaskHandler@req+1
 26875  007CBC  D035               	goto	l16846
 26876  007CBE                     l16828:
 26877                           
 26878                           ;../nwk/nwk_src/nwkDataReq.c: 216:       {;../nwk/nwk_src/nwkDataReq.c: 217:         nwk
      +                          DataReqSendFrame(req);
 26879  007CBE  0060  F0CC  F02A   	movff	nwkDataReqTaskHandler@req,nwkDataReqSendFrame@req
 26880  007CC4  0060  F0D0  F02B   	movff	nwkDataReqTaskHandler@req+1,nwkDataReqSendFrame@req+1
 26881  007CCA  ECFB  F00C         	call	_nwkDataReqSendFrame	;wreg free
 26882  007CCE  0012               	return	
 26883  007CD0                     l16834:
 26884                           
 26885                           ;../nwk/nwk_src/nwkDataReq.c: 225:       {;../nwk/nwk_src/nwkDataReq.c: 226:         nwk
      +                          DataReqConfirm(req);
 26886  007CD0  0060  F0CC  F009   	movff	nwkDataReqTaskHandler@req,nwkDataReqConfirm@req
 26887  007CD6  0060  F0D0  F00A   	movff	nwkDataReqTaskHandler@req+1,nwkDataReqConfirm@req+1
 26888  007CDC  ECF0  F02F         	call	_nwkDataReqConfirm	;wreg free
 26889  007CE0  0012               	return	
 26890  007CE2                     l16842:
 26891  007CE2  EE20 F004          	lfsr	2,4
 26892  007CE6  5033               	movf	nwkDataReqTaskHandler@req^0,w,c
 26893  007CE8  26D9               	addwf	fsr2l,f,c
 26894  007CEA  5034               	movf	(nwkDataReqTaskHandler@req+1)^0,w,c
 26895  007CEC  22DA               	addwfc	fsr2h,f,c
 26896  007CEE  50DF               	movf	indf2,w,c
 26897  007CF0  6E31               	movwf	??_nwkDataReqTaskHandler^0,c
 26898  007CF2  6A32               	clrf	(??_nwkDataReqTaskHandler+1)^0,c
 26899                           
 26900                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26901                           ; Switch size 1, requested type "simple"
 26902                           ; Number of cases is 1, Range of values is 0 to 0
 26903                           ; switch strategies available:
 26904                           ; Name         Instructions Cycles
 26905                           ; simple_byte            4     3 (average)
 26906                           ;	Chosen strategy is simple_byte
 26907  007CF4  5032               	movf	(??_nwkDataReqTaskHandler+1)^0,w,c
 26908  007CF6  0A00               	xorlw	0	; case 0
 26909  007CF8  A4D8               	btfss	status,2,c
 26910  007CFA  D00A               	goto	l16844
 26911                           
 26912                           ; Switch size 1, requested type "simple"
 26913                           ; Number of cases is 3, Range of values is 0 to 2
 26914                           ; switch strategies available:
 26915                           ; Name         Instructions Cycles
 26916                           ; simple_byte           10     6 (average)
 26917                           ;	Chosen strategy is simple_byte
 26918  007CFC  5031               	movf	??_nwkDataReqTaskHandler^0,w,c
 26919  007CFE  0A00               	xorlw	0	; case 0
 26920  007D00  B4D8               	btfsc	status,2,c
 26921  007D02  D7DD               	goto	l16828
 26922  007D04  0A01               	xorlw	1	; case 1
 26923  007D06  B4D8               	btfsc	status,2,c
 26924  007D08  D003               	goto	l16844
 26925  007D0A  0A03               	xorlw	3	; case 2
 26926  007D0C  B4D8               	btfsc	status,2,c
 26927  007D0E  D7E0               	goto	l16834
 26928  007D10                     l16844:
 26929                           
 26930                           ;../nwk/nwk_src/nwkDataReq.c: 233:   }
 26931  007D10  0060  F0CF  FFD9   	movff	nwkDataReqTaskHandler@req,fsr2l
 26932  007D16  0060  F0D3  FFDA   	movff	nwkDataReqTaskHandler@req+1,fsr2h
 26933  007D1C  006F FF78  F033    	movff	postinc2,nwkDataReqTaskHandler@req
 26934  007D22  006F FF74  F034    	movff	postdec2,nwkDataReqTaskHandler@req+1
 26935  007D28                     l16846:
 26936  007D28  5033               	movf	nwkDataReqTaskHandler@req^0,w,c
 26937  007D2A  1034               	iorwf	(nwkDataReqTaskHandler@req+1)^0,w,c
 26938  007D2C  B4D8               	btfsc	status,2,c
 26939  007D2E  0012               	return	
 26940  007D30  D7D8               	goto	l16842
 26941  007D32                     __end_of_nwkDataReqTaskHandler:
 26942                           	opt callstack 0
 26943                           
 26944 ;; *************** function _nwkDataReqSendFrame *****************
 26945 ;; Defined at:
 26946 ;;		line 111 in file "../nwk/nwk_src/nwkDataReq.c"
 26947 ;; Parameters:    Size  Location     Type
 26948 ;;  req             2   41[COMRAM] PTR struct NWK_DataReq_t
 26949 ;;		 -> NULL(0), tx_buffer.nwkDataReq(22), tx_buffer(524), 
 26950 ;; Auto vars:     Size  Location     Type
 26951 ;;  mcHeader        2   44[COMRAM] PTR __pack struct NwkFra
 26952 ;;		 -> nwkFrameFrames(685), NULL(0), 
 26953 ;;  frame           2   46[COMRAM] PTR struct NwkFrame_t
 26954 ;;		 -> nwkFrameFrames(685), NULL(0), 
 26955 ;; Return value:  Size  Location     Type
 26956 ;;                  1    wreg      void 
 26957 ;; Registers used:
 26958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26959 ;; Tracked objects:
 26960 ;;		On entry : 0/3D
 26961 ;;		On exit  : 0/0
 26962 ;;		Unchanged: 0/0
 26963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26965 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26967 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26968 ;;Total ram usage:        7 bytes
 26969 ;; Hardware stack levels used:    1
 26970 ;; Hardware stack levels required when called:   11
 26971 ;; This function calls:
 26972 ;;		_memcpy
 26973 ;;		_nwkFrameAlloc
 26974 ;;		_nwkTxFrame
 26975 ;; This function is called by:
 26976 ;;		_nwkDataReqTaskHandler
 26977 ;; This function uses a non-reentrant model
 26978 ;;
 26979                           
 26980                           	psect	text169
 26981  0019F6                     __ptext169:
 26982                           	opt callstack 0
 26983  0019F6                     _nwkDataReqSendFrame:
 26984                           	opt callstack 16
 26985                           
 26986                           ;../nwk/nwk_src/nwkDataReq.c: 111: static void nwkDataReqSendFrame(NWK_DataReq_t *req);.
      +                          ./nwk/nwk_src/nwkDataReq.c: 112: {;../nwk/nwk_src/nwkDataReq.c: 113:   NwkFrame_t *frame
      +                          ;;../nwk/nwk_src/nwkDataReq.c: 115:   if (((void*)0) == (frame = nwkFrameAlloc()))
 26987                           
 26988                           ;incstack = 0
 26989  0019F6  EC5C  F038         	call	_nwkFrameAlloc	;wreg free
 26990  0019FA  0060  F038  F02F   	movff	?_nwkFrameAlloc,nwkDataReqSendFrame@frame
 26991  001A00  0060  F03C  F030   	movff	?_nwkFrameAlloc+1,nwkDataReqSendFrame@frame+1
 26992  001A06  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 26993  001A08  1030               	iorwf	(nwkDataReqSendFrame@frame+1)^0,w,c
 26994  001A0A  A4D8               	btfss	status,2,c
 26995  001A0C  D011               	goto	l16032
 26996                           
 26997                           ;../nwk/nwk_src/nwkDataReq.c: 116:   {;../nwk/nwk_src/nwkDataReq.c: 117:     req->state 
      +                          = NWK_DATA_REQ_STATE_CONFIRM;
 26998  001A0E  EE20 F004          	lfsr	2,4
 26999  001A12  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 27000  001A14  26D9               	addwf	fsr2l,f,c
 27001  001A16  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 27002  001A18  22DA               	addwfc	fsr2h,f,c
 27003  001A1A  0E02               	movlw	2
 27004  001A1C  6EDF               	movwf	indf2,c
 27005                           
 27006                           ;../nwk/nwk_src/nwkDataReq.c: 118:     req->status = NWK_OUT_OF_MEMORY_STATUS;
 27007  001A1E  EE20 F011          	lfsr	2,17
 27008  001A22  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 27009  001A24  26D9               	addwf	fsr2l,f,c
 27010  001A26  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 27011  001A28  22DA               	addwfc	fsr2h,f,c
 27012  001A2A  0E02               	movlw	2
 27013  001A2C  6EDF               	movwf	indf2,c
 27014  001A2E  0012               	return	
 27015  001A30                     l16032:
 27016                           
 27017                           ;../nwk/nwk_src/nwkDataReq.c: 122:   req->frame = frame;
 27018  001A30  EE20 F002          	lfsr	2,2
 27019  001A34  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 27020  001A36  26D9               	addwf	fsr2l,f,c
 27021  001A38  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 27022  001A3A  22DA               	addwfc	fsr2h,f,c
 27023  001A3C  0060  F0BF  FFDE   	movff	nwkDataReqSendFrame@frame,postinc2
 27024  001A42  0060  F0C3  FFDD   	movff	nwkDataReqSendFrame@frame+1,postdec2
 27025                           
 27026                           ;../nwk/nwk_src/nwkDataReq.c: 123:   req->state = NWK_DATA_REQ_STATE_WAIT_CONF;
 27027  001A48  EE20 F004          	lfsr	2,4
 27028  001A4C  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 27029  001A4E  26D9               	addwf	fsr2l,f,c
 27030  001A50  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 27031  001A52  22DA               	addwfc	fsr2h,f,c
 27032  001A54  0E01               	movlw	1
 27033  001A56  6EDF               	movwf	indf2,c
 27034                           
 27035                           ;../nwk/nwk_src/nwkDataReq.c: 125:   frame->tx.confirm = nwkDataReqTxConf;
 27036  001A58  EE20 F087          	lfsr	2,135
 27037  001A5C  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 27038  001A5E  26D9               	addwf	fsr2l,f,c
 27039  001A60  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 27040  001A62  22DA               	addwfc	fsr2h,f,c
 27041  001A64  0E7E               	movlw	low _nwkDataReqTxConf
 27042  001A66  6EDE               	movwf	postinc2,c
 27043  001A68  0E73               	movlw	high _nwkDataReqTxConf
 27044  001A6A  6EDD               	movwf	postdec2,c
 27045                           
 27046                           ;../nwk/nwk_src/nwkDataReq.c: 126:   frame->tx.control = req->options & NWK_OPT_BROADCAS
      +                          T_PAN_ID ? NWK_TX_CONTROL_BROADCAST_PAN_ID : 0;
 27047  001A6C  EE20 F086          	lfsr	2,134
 27048  001A70  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 27049  001A72  26D9               	addwf	fsr2l,f,c
 27050  001A74  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 27051  001A76  22DA               	addwfc	fsr2h,f,c
 27052  001A78  EE10 F009          	lfsr	1,9
 27053  001A7C  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 27054  001A7E  26E1               	addwf	fsr1l,f,c
 27055  001A80  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 27056  001A82  22E2               	addwfc	fsr1h,f,c
 27057  001A84  A4E7               	btfss	indf1,2,c
 27058  001A86  D002               	goto	u16130
 27059  001A88  0E01               	movlw	1
 27060  001A8A  D001               	goto	u16140
 27061  001A8C                     u16130:
 27062  001A8C  0E00               	movlw	0
 27063  001A8E                     u16140:
 27064  001A8E  6EDF               	movwf	indf2,c
 27065                           
 27066                           ;../nwk/nwk_src/nwkDataReq.c: 128:   frame->header.nwkFcf.ackRequest = req->options & NW
      +                          K_OPT_ACK_REQUEST ? 1 : 0;
 27067  001A90  EE20 F009          	lfsr	2,9
 27068  001A94  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 27069  001A96  26D9               	addwf	fsr2l,f,c
 27070  001A98  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 27071  001A9A  22DA               	addwfc	fsr2h,f,c
 27072  001A9C  A0DF               	btfss	indf2,0,c
 27073  001A9E  D003               	goto	u16150
 27074  001AA0  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 27075  001AA2  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 27076  001AA4  D001               	goto	u16168
 27077  001AA6                     u16150:
 27078  001AA6  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 27079  001AA8                     u16168:
 27080  001AA8  EE20 F00B          	lfsr	2,11
 27081  001AAC  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 27082  001AAE  26D9               	addwf	fsr2l,f,c
 27083  001AB0  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 27084  001AB2  22DA               	addwfc	fsr2h,f,c
 27085  001AB4  50DF               	movf	indf2,w,c
 27086  001AB6  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27087  001AB8  0BFE               	andlw	-2
 27088  001ABA  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27089  001ABC  6EDF               	movwf	indf2,c
 27090                           
 27091                           ;../nwk/nwk_src/nwkDataReq.c: 129:   frame->header.nwkFcf.linkLocal = req->options & NWK
      +                          _OPT_LINK_LOCAL ? 1 : 0;
 27092  001ABE  EE20 F009          	lfsr	2,9
 27093  001AC2  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 27094  001AC4  26D9               	addwf	fsr2l,f,c
 27095  001AC6  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 27096  001AC8  22DA               	addwfc	fsr2h,f,c
 27097  001ACA  A6DF               	btfss	indf2,3,c
 27098  001ACC  D003               	goto	u16170
 27099  001ACE  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 27100  001AD0  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 27101  001AD2  D001               	goto	u16188
 27102  001AD4                     u16170:
 27103  001AD4  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 27104  001AD6                     u16188:
 27105  001AD6  EE20 F00B          	lfsr	2,11
 27106  001ADA  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 27107  001ADC  26D9               	addwf	fsr2l,f,c
 27108  001ADE  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 27109  001AE0  22DA               	addwfc	fsr2h,f,c
 27110  001AE2  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 27111  001AE4  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 27112  001AE6  50DF               	movf	indf2,w,c
 27113  001AE8  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27114  001AEA  0BFB               	andlw	-5
 27115  001AEC  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27116  001AEE  6EDF               	movwf	indf2,c
 27117                           
 27118                           ;../nwk/nwk_src/nwkDataReq.c: 132:   frame->header.nwkFcf.security = req->options & NWK_
      +                          OPT_ENABLE_SECURITY ? 1 : 0;
 27119  001AF0  EE20 F009          	lfsr	2,9
 27120  001AF4  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 27121  001AF6  26D9               	addwf	fsr2l,f,c
 27122  001AF8  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 27123  001AFA  22DA               	addwfc	fsr2h,f,c
 27124  001AFC  A2DF               	btfss	indf2,1,c
 27125  001AFE  D003               	goto	u16190
 27126  001B00  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 27127  001B02  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 27128  001B04  D001               	goto	u16208
 27129  001B06                     u16190:
 27130  001B06  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 27131  001B08                     u16208:
 27132  001B08  EE20 F00B          	lfsr	2,11
 27133  001B0C  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 27134  001B0E  26D9               	addwf	fsr2l,f,c
 27135  001B10  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 27136  001B12  22DA               	addwfc	fsr2h,f,c
 27137  001B14  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 27138  001B16  50DF               	movf	indf2,w,c
 27139  001B18  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27140  001B1A  0BFD               	andlw	-3
 27141  001B1C  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27142  001B1E  6EDF               	movwf	indf2,c
 27143                           
 27144                           ;../nwk/nwk_src/nwkDataReq.c: 136:   frame->header.nwkFcf.multicast = req->options & NWK
      +                          _OPT_MULTICAST ? 1 : 0;
 27145  001B20  EE20 F009          	lfsr	2,9
 27146  001B24  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 27147  001B26  26D9               	addwf	fsr2l,f,c
 27148  001B28  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 27149  001B2A  22DA               	addwfc	fsr2h,f,c
 27150  001B2C  A8DF               	btfss	indf2,4,c
 27151  001B2E  D003               	goto	u16210
 27152  001B30  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 27153  001B32  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 27154  001B34  D001               	goto	u16228
 27155  001B36                     u16210:
 27156  001B36  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 27157  001B38                     u16228:
 27158  001B38  EE20 F00B          	lfsr	2,11
 27159  001B3C  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 27160  001B3E  26D9               	addwf	fsr2l,f,c
 27161  001B40  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 27162  001B42  22DA               	addwfc	fsr2h,f,c
 27163  001B44  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 27164  001B46  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 27165  001B48  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 27166  001B4A  50DF               	movf	indf2,w,c
 27167  001B4C  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27168  001B4E  0BF7               	andlw	-9
 27169  001B50  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27170  001B52  6EDF               	movwf	indf2,c
 27171                           
 27172                           ;../nwk/nwk_src/nwkDataReq.c: 138:   if (frame->header.nwkFcf.multicast)
 27173  001B54  EE20 F00B          	lfsr	2,11
 27174  001B58  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 27175  001B5A  26D9               	addwf	fsr2l,f,c
 27176  001B5C  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 27177  001B5E  22DA               	addwfc	fsr2h,f,c
 27178  001B60  A6DF               	btfss	indf2,3,c
 27179  001B62  D06C               	goto	l1819
 27180                           
 27181                           ;../nwk/nwk_src/nwkDataReq.c: 139:   {;../nwk/nwk_src/nwkDataReq.c: 140:     NwkFrameMul
      +                          ticastHeader_t *mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
 27182  001B64  EE20 F081          	lfsr	2,129
 27183  001B68  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 27184  001B6A  26D9               	addwf	fsr2l,f,c
 27185  001B6C  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 27186  001B6E  22DA               	addwfc	fsr2h,f,c
 27187  001B70  006F FF78  F02D    	movff	postinc2,nwkDataReqSendFrame@mcHeader
 27188  001B76  006F FF74  F02E    	movff	postdec2,nwkDataReqSendFrame@mcHeader+1
 27189                           
 27190                           ;../nwk/nwk_src/nwkDataReq.c: 142:     mcHeader->memberRadius = req->memberRadius;
 27191  001B7C  EE20 F00A          	lfsr	2,10
 27192  001B80  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 27193  001B82  26D9               	addwf	fsr2l,f,c
 27194  001B84  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 27195  001B86  22DA               	addwfc	fsr2h,f,c
 27196  001B88  50DF               	movf	indf2,w,c
 27197  001B8A  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 27198  001B8C  EE20 F001          	lfsr	2,1
 27199  001B90  502D               	movf	nwkDataReqSendFrame@mcHeader^0,w,c
 27200  001B92  26D9               	addwf	fsr2l,f,c
 27201  001B94  502E               	movf	(nwkDataReqSendFrame@mcHeader+1)^0,w,c
 27202  001B96  22DA               	addwfc	fsr2h,f,c
 27203  001B98  50DF               	movf	indf2,w,c
 27204  001B9A  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27205  001B9C  0BF0               	andlw	-16
 27206  001B9E  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27207  001BA0  6EDF               	movwf	indf2,c
 27208                           
 27209                           ;../nwk/nwk_src/nwkDataReq.c: 143:     mcHeader->maxMemberRadius = req->memberRadius;
 27210  001BA2  EE20 F00A          	lfsr	2,10
 27211  001BA6  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 27212  001BA8  26D9               	addwf	fsr2l,f,c
 27213  001BAA  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 27214  001BAC  22DA               	addwfc	fsr2h,f,c
 27215  001BAE  50DF               	movf	indf2,w,c
 27216  001BB0  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 27217  001BB2  EE20 F001          	lfsr	2,1
 27218  001BB6  502D               	movf	nwkDataReqSendFrame@mcHeader^0,w,c
 27219  001BB8  26D9               	addwf	fsr2l,f,c
 27220  001BBA  502E               	movf	(nwkDataReqSendFrame@mcHeader+1)^0,w,c
 27221  001BBC  22DA               	addwfc	fsr2h,f,c
 27222  001BBE  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 27223  001BC0  50DF               	movf	indf2,w,c
 27224  001BC2  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27225  001BC4  0B0F               	andlw	-241
 27226  001BC6  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27227  001BC8  6EDF               	movwf	indf2,c
 27228                           
 27229                           ;../nwk/nwk_src/nwkDataReq.c: 144:     mcHeader->nonMemberRadius = req->nonMemberRadius;
 27230  001BCA  EE20 F00B          	lfsr	2,11
 27231  001BCE  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 27232  001BD0  26D9               	addwf	fsr2l,f,c
 27233  001BD2  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 27234  001BD4  22DA               	addwfc	fsr2h,f,c
 27235  001BD6  50DF               	movf	indf2,w,c
 27236  001BD8  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 27237  001BDA  0060  F0B7  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
 27238  001BE0  0060  F0BB  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
 27239  001BE6  50DF               	movf	indf2,w,c
 27240  001BE8  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27241  001BEA  0BF0               	andlw	-16
 27242  001BEC  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27243  001BEE  6EDF               	movwf	indf2,c
 27244                           
 27245                           ;../nwk/nwk_src/nwkDataReq.c: 145:     mcHeader->maxNonMemberRadius = req->nonMemberRadi
      +                          us;
 27246  001BF0  EE20 F00B          	lfsr	2,11
 27247  001BF4  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 27248  001BF6  26D9               	addwf	fsr2l,f,c
 27249  001BF8  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 27250  001BFA  22DA               	addwfc	fsr2h,f,c
 27251  001BFC  50DF               	movf	indf2,w,c
 27252  001BFE  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 27253  001C00  0060  F0B7  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
 27254  001C06  0060  F0BB  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
 27255  001C0C  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 27256  001C0E  50DF               	movf	indf2,w,c
 27257  001C10  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27258  001C12  0B0F               	andlw	-241
 27259  001C14  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27260  001C16  6EDF               	movwf	indf2,c
 27261                           
 27262                           ;../nwk/nwk_src/nwkDataReq.c: 147:     frame->payload += sizeof(NwkFrameMulticastHeader_
      +                          t);
 27263  001C18  EE20 F081          	lfsr	2,129
 27264  001C1C  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 27265  001C1E  26D9               	addwf	fsr2l,f,c
 27266  001C20  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 27267  001C22  22DA               	addwfc	fsr2h,f,c
 27268  001C24  0E02               	movlw	2
 27269  001C26  26DE               	addwf	postinc2,f,c
 27270  001C28  0E00               	movlw	0
 27271  001C2A  22DD               	addwfc	postdec2,f,c
 27272                           
 27273                           ;../nwk/nwk_src/nwkDataReq.c: 148:     frame->size += sizeof(NwkFrameMulticastHeader_t);
 27274  001C2C  EE20 F001          	lfsr	2,1
 27275  001C30  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 27276  001C32  26D9               	addwf	fsr2l,f,c
 27277  001C34  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 27278  001C36  22DA               	addwfc	fsr2h,f,c
 27279  001C38  0E02               	movlw	2
 27280  001C3A  26DF               	addwf	indf2,f,c
 27281  001C3C                     l1819:
 27282                           
 27283                           ;../nwk/nwk_src/nwkDataReq.c: 152:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 27284  001C3C  0101               	movlb	1	; () banked
 27285  001C3E  2B35               	incf	(_nwkIb+4)& (0+255),f,b
 27286  001C40  EE20 F00C          	lfsr	2,12
 27287  001C44  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 27288  001C46  26D9               	addwf	fsr2l,f,c
 27289  001C48  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 27290  001C4A  22DA               	addwfc	fsr2h,f,c
 27291  001C4C  0060  F4D7  FFDF   	movff	_nwkIb+4,indf2
 27292                           
 27293                           ;../nwk/nwk_src/nwkDataReq.c: 153:   frame->header.nwkSrcAddr = nwkIb.addr;
 27294  001C52  EE20 F00D          	lfsr	2,13
 27295  001C56  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 27296  001C58  26D9               	addwf	fsr2l,f,c
 27297  001C5A  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 27298  001C5C  22DA               	addwfc	fsr2h,f,c
 27299  001C5E  0060  F4C7  FFDE   	movff	_nwkIb,postinc2
 27300  001C64  0060  F4CB  FFDD   	movff	_nwkIb+1,postdec2
 27301                           
 27302                           ; BSR set to: 1
 27303                           ;../nwk/nwk_src/nwkDataReq.c: 154:   frame->header.nwkDstAddr = req->dstAddr;
 27304  001C6A  EE20 F005          	lfsr	2,5
 27305  001C6E  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 27306  001C70  26D9               	addwf	fsr2l,f,c
 27307  001C72  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 27308  001C74  22DA               	addwfc	fsr2h,f,c
 27309  001C76  EE10 F00F          	lfsr	1,15
 27310  001C7A  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 27311  001C7C  26E1               	addwf	fsr1l,f,c
 27312  001C7E  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 27313  001C80  22E2               	addwfc	fsr1h,f,c
 27314  001C82  006F FF7B FFE6     	movff	postinc2,postinc1
 27315  001C88  006F FF77 FFE5     	movff	postdec2,postdec1
 27316                           
 27317                           ; BSR set to: 1
 27318                           ;../nwk/nwk_src/nwkDataReq.c: 155:   frame->header.nwkSrcEndpoint = req->srcEndpoint;
 27319  001C8E  EE20 F008          	lfsr	2,8
 27320  001C92  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 27321  001C94  26D9               	addwf	fsr2l,f,c
 27322  001C96  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 27323  001C98  22DA               	addwfc	fsr2h,f,c
 27324  001C9A  50DF               	movf	indf2,w,c
 27325  001C9C  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 27326  001C9E  EE20 F011          	lfsr	2,17
 27327  001CA2  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 27328  001CA4  26D9               	addwf	fsr2l,f,c
 27329  001CA6  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 27330  001CA8  22DA               	addwfc	fsr2h,f,c
 27331  001CAA  50DF               	movf	indf2,w,c
 27332  001CAC  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27333  001CAE  0BF0               	andlw	-16
 27334  001CB0  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27335  001CB2  6EDF               	movwf	indf2,c
 27336                           
 27337                           ; BSR set to: 1
 27338                           ;../nwk/nwk_src/nwkDataReq.c: 156:   frame->header.nwkDstEndpoint = req->dstEndpoint;
 27339  001CB4  EE20 F007          	lfsr	2,7
 27340  001CB8  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 27341  001CBA  26D9               	addwf	fsr2l,f,c
 27342  001CBC  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 27343  001CBE  22DA               	addwfc	fsr2h,f,c
 27344  001CC0  50DF               	movf	indf2,w,c
 27345  001CC2  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 27346  001CC4  EE20 F011          	lfsr	2,17
 27347  001CC8  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 27348  001CCA  26D9               	addwf	fsr2l,f,c
 27349  001CCC  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 27350  001CCE  22DA               	addwfc	fsr2h,f,c
 27351  001CD0  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 27352  001CD2  50DF               	movf	indf2,w,c
 27353  001CD4  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27354  001CD6  0B0F               	andlw	-241
 27355  001CD8  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 27356  001CDA  6EDF               	movwf	indf2,c
 27357                           
 27358                           ; BSR set to: 1
 27359                           ;../nwk/nwk_src/nwkDataReq.c: 158:   memcpy(frame->payload, req->data, req->size);
 27360  001CDC  EE20 F081          	lfsr	2,129
 27361  001CE0  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 27362  001CE2  26D9               	addwf	fsr2l,f,c
 27363  001CE4  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 27364  001CE6  22DA               	addwfc	fsr2h,f,c
 27365  001CE8  006F FF78  F008    	movff	postinc2,memcpy@d1
 27366  001CEE  006F FF74  F009    	movff	postdec2,memcpy@d1+1
 27367  001CF4  EE20 F00C          	lfsr	2,12
 27368  001CF8  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 27369  001CFA  26D9               	addwf	fsr2l,f,c
 27370  001CFC  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 27371  001CFE  22DA               	addwfc	fsr2h,f,c
 27372  001D00  006F FF78  F00A    	movff	postinc2,memcpy@s1
 27373  001D06  006F FF74  F00B    	movff	postdec2,memcpy@s1+1
 27374  001D0C  EE20 F00E          	lfsr	2,14
 27375  001D10  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 27376  001D12  26D9               	addwf	fsr2l,f,c
 27377  001D14  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 27378  001D16  22DA               	addwfc	fsr2h,f,c
 27379  001D18  50DF               	movf	indf2,w,c
 27380  001D1A  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 27381  001D1C  502C               	movf	??_nwkDataReqSendFrame^0,w,c
 27382  001D1E  6E0C               	movwf	memcpy@n^0,c
 27383  001D20  6A0D               	clrf	(memcpy@n+1)^0,c
 27384  001D22  EC95  F03F         	call	_memcpy	;wreg free
 27385                           
 27386                           ;../nwk/nwk_src/nwkDataReq.c: 159:   frame->size += req->size;
 27387  001D26  EE20 F00E          	lfsr	2,14
 27388  001D2A  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 27389  001D2C  26D9               	addwf	fsr2l,f,c
 27390  001D2E  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 27391  001D30  22DA               	addwfc	fsr2h,f,c
 27392  001D32  50DF               	movf	indf2,w,c
 27393  001D34  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 27394  001D36  EE20 F001          	lfsr	2,1
 27395  001D3A  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 27396  001D3C  26D9               	addwf	fsr2l,f,c
 27397  001D3E  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 27398  001D40  22DA               	addwfc	fsr2h,f,c
 27399  001D42  502C               	movf	??_nwkDataReqSendFrame^0,w,c
 27400  001D44  26DF               	addwf	indf2,f,c
 27401                           
 27402                           ;../nwk/nwk_src/nwkDataReq.c: 161:   nwkTxFrame(frame);
 27403  001D46  0060  F0BC  F024   	movff	nwkDataReqSendFrame@frame,nwkTxFrame@frame
 27404  001D4C  0060  F0C0  F025   	movff	nwkDataReqSendFrame@frame+1,nwkTxFrame@frame+1
 27405  001D52  ECD9  F01E         	call	_nwkTxFrame	;wreg free
 27406  001D56  0012               	return		;funcret
 27407  001D58                     __end_of_nwkDataReqSendFrame:
 27408                           	opt callstack 0
 27409                           
 27410 ;; *************** function _nwkTxFrame *****************
 27411 ;; Defined at:
 27412 ;;		line 109 in file "../nwk/nwk_src/nwkTx.c"
 27413 ;; Parameters:    Size  Location     Type
 27414 ;;  frame           2   35[COMRAM] PTR struct NwkFrame_t
 27415 ;;		 -> nwkFrameFrames(685), NULL(0), 
 27416 ;; Auto vars:     Size  Location     Type
 27417 ;;  header          2   39[COMRAM] PTR __pack struct NwkFra
 27418 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 27419 ;; Return value:  Size  Location     Type
 27420 ;;                  1    wreg      void 
 27421 ;; Registers used:
 27422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27423 ;; Tracked objects:
 27424 ;;		On entry : 0/1
 27425 ;;		On exit  : 3F/1
 27426 ;;		Unchanged: 0/0
 27427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27429 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27431 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27432 ;;Total ram usage:        6 bytes
 27433 ;; Hardware stack levels used:    1
 27434 ;; Hardware stack levels required when called:   10
 27435 ;; This function calls:
 27436 ;;		_nwkRoutePrepareTx
 27437 ;;		_rand
 27438 ;; This function is called by:
 27439 ;;		_nwkDataReqSendFrame
 27440 ;;		_nwkRouteFrame
 27441 ;;		_nwkRouteSendRouteError
 27442 ;;		_nwkRxSendAck
 27443 ;; This function uses a non-reentrant model
 27444 ;;
 27445                           
 27446                           	psect	text170
 27447  003DB2                     __ptext170:
 27448                           	opt callstack 0
 27449  003DB2                     _nwkTxFrame:
 27450                           	opt callstack 15
 27451                           
 27452                           ;../nwk/nwk_src/nwkTx.c: 109: void nwkTxFrame(NwkFrame_t *frame);../nwk/nwk_src/nwkTx.c:
      +                           110: {;../nwk/nwk_src/nwkTx.c: 111:   NwkFrameHeader_t *header = &frame->header;
 27453                           
 27454                           ;incstack = 0
 27455  003DB2  0E02               	movlw	2
 27456  003DB4  2424               	addwf	nwkTxFrame@frame^0,w,c
 27457  003DB6  6E28               	movwf	nwkTxFrame@header^0,c
 27458  003DB8  0E00               	movlw	0
 27459  003DBA  2025               	addwfc	(nwkTxFrame@frame+1)^0,w,c
 27460  003DBC  6E29               	movwf	(nwkTxFrame@header+1)^0,c
 27461                           
 27462                           ;../nwk/nwk_src/nwkTx.c: 113:   if (frame->tx.control & NWK_TX_CONTROL_ROUTING)
 27463  003DBE  EE20 F086          	lfsr	2,134
 27464  003DC2  5024               	movf	nwkTxFrame@frame^0,w,c
 27465  003DC4  26D9               	addwf	fsr2l,f,c
 27466  003DC6  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 27467  003DC8  22DA               	addwfc	fsr2h,f,c
 27468  003DCA  B2DF               	btfsc	indf2,1,c
 27469  003DCC  D010               	goto	l10280
 27470                           
 27471                           ;../nwk/nwk_src/nwkTx.c: 118:   {;../nwk/nwk_src/nwkTx.c: 120:     if (header->nwkFcf.se
      +                          curity)
 27472                           
 27473                           ;../nwk/nwk_src/nwkTx.c: 116:   }
 27474                           
 27475                           ;../nwk/nwk_src/nwkTx.c: 114:   {;../nwk/nwk_src/nwkTx.c: 115:     frame->state = NWK_TX
      +                          _STATE_DELAY;
 27476  003DCE  EE20 F009          	lfsr	2,9
 27477  003DD2  5028               	movf	nwkTxFrame@header^0,w,c
 27478  003DD4  26D9               	addwf	fsr2l,f,c
 27479  003DD6  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 27480  003DD8  22DA               	addwfc	fsr2h,f,c
 27481  003DDA  A2DF               	btfss	indf2,1,c
 27482  003DDC  D008               	goto	l10280
 27483                           
 27484                           ;../nwk/nwk_src/nwkTx.c: 121:       frame->state = NWK_TX_STATE_ENCRYPT;
 27485  003DDE  0060  F093  FFD9   	movff	nwkTxFrame@frame,fsr2l
 27486  003DE4  0060  F097  FFDA   	movff	nwkTxFrame@frame+1,fsr2h
 27487  003DEA  0E10               	movlw	16
 27488  003DEC  D007               	goto	L26
 27489  003DEE                     l10280:
 27490                           
 27491                           ;../nwk/nwk_src/nwkTx.c: 124:       frame->state = NWK_TX_STATE_DELAY;
 27492  003DEE  0060  F093  FFD9   	movff	nwkTxFrame@frame,fsr2l
 27493  003DF4  0060  F097  FFDA   	movff	nwkTxFrame@frame+1,fsr2h
 27494  003DFA  0E12               	movlw	18
 27495  003DFC                     L26:
 27496  003DFC  6EDF               	movwf	indf2,c
 27497                           
 27498                           ;../nwk/nwk_src/nwkTx.c: 127:   frame->tx.status = NWK_SUCCESS_STATUS;
 27499  003DFE  EE20 F083          	lfsr	2,131
 27500  003E02  5024               	movf	nwkTxFrame@frame^0,w,c
 27501  003E04  26D9               	addwf	fsr2l,f,c
 27502  003E06  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 27503  003E08  22DA               	addwfc	fsr2h,f,c
 27504  003E0A  0E00               	movlw	0
 27505  003E0C  6EDF               	movwf	indf2,c
 27506                           
 27507                           ;../nwk/nwk_src/nwkTx.c: 129:   if (frame->tx.control & NWK_TX_CONTROL_BROADCAST_PAN_ID)
 27508  003E0E  EE20 F086          	lfsr	2,134
 27509  003E12  5024               	movf	nwkTxFrame@frame^0,w,c
 27510  003E14  26D9               	addwf	fsr2l,f,c
 27511  003E16  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 27512  003E18  22DA               	addwfc	fsr2h,f,c
 27513  003E1A  A0DF               	btfss	indf2,0,c
 27514  003E1C  D00B               	goto	l10288
 27515                           
 27516                           ;../nwk/nwk_src/nwkTx.c: 130:     header->macDstPanId = 0xffff;
 27517  003E1E  EE20 F003          	lfsr	2,3
 27518  003E22  5028               	movf	nwkTxFrame@header^0,w,c
 27519  003E24  26D9               	addwf	fsr2l,f,c
 27520  003E26  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 27521  003E28  22DA               	addwfc	fsr2h,f,c
 27522  003E2A  0EFF               	movlw	255
 27523  003E2C  6EDE               	movwf	postinc2,c
 27524  003E2E  0EFF               	movlw	255
 27525  003E30  6EDD               	movwf	postdec2,c
 27526  003E32  D00C               	goto	l2418
 27527  003E34                     l10288:
 27528                           
 27529                           ;../nwk/nwk_src/nwkTx.c: 132:     header->macDstPanId = nwkIb.panId;
 27530  003E34  EE20 F003          	lfsr	2,3
 27531  003E38  5028               	movf	nwkTxFrame@header^0,w,c
 27532  003E3A  26D9               	addwf	fsr2l,f,c
 27533  003E3C  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 27534  003E3E  22DA               	addwfc	fsr2h,f,c
 27535  003E40  0060  F4CF  FFDE   	movff	_nwkIb+2,postinc2
 27536  003E46  0060  F4D3  FFDD   	movff	_nwkIb+3,postdec2
 27537  003E4C                     l2418:
 27538                           
 27539                           ;../nwk/nwk_src/nwkTx.c: 135:   if (0 == (frame->tx.control & NWK_TX_CONTROL_DIRECT_LINK
      +                          ) &&
 27540  003E4C  EE20 F086          	lfsr	2,134
 27541  003E50  5024               	movf	nwkTxFrame@frame^0,w,c
 27542  003E52  26D9               	addwf	fsr2l,f,c
 27543  003E54  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 27544  003E56  22DA               	addwfc	fsr2h,f,c
 27545  003E58  B4DF               	btfsc	indf2,2,c
 27546  003E5A  D011               	goto	l10294
 27547  003E5C  EE20 F086          	lfsr	2,134
 27548  003E60  5024               	movf	nwkTxFrame@frame^0,w,c
 27549  003E62  26D9               	addwf	fsr2l,f,c
 27550  003E64  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 27551  003E66  22DA               	addwfc	fsr2h,f,c
 27552  003E68  B0DF               	btfsc	indf2,0,c
 27553  003E6A  D009               	goto	l10294
 27554                           
 27555                           ;../nwk/nwk_src/nwkTx.c: 137:     nwkRoutePrepareTx(frame);
 27556  003E6C  0060  F090  F00D   	movff	nwkTxFrame@frame,nwkRoutePrepareTx@frame
 27557  003E72  0060  F094  F00E   	movff	nwkTxFrame@frame+1,nwkRoutePrepareTx@frame+1
 27558  003E78  EC90  F02A         	call	_nwkRoutePrepareTx	;wreg free
 27559  003E7C  D012               	goto	l10296
 27560  003E7E                     l10294:
 27561                           
 27562                           ;../nwk/nwk_src/nwkTx.c: 140:     header->macDstAddr = header->nwkDstAddr;
 27563  003E7E  EE20 F00D          	lfsr	2,13
 27564  003E82  5028               	movf	nwkTxFrame@header^0,w,c
 27565  003E84  26D9               	addwf	fsr2l,f,c
 27566  003E86  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 27567  003E88  22DA               	addwfc	fsr2h,f,c
 27568  003E8A  EE10 F005          	lfsr	1,5
 27569  003E8E  5028               	movf	nwkTxFrame@header^0,w,c
 27570  003E90  26E1               	addwf	fsr1l,f,c
 27571  003E92  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 27572  003E94  22E2               	addwfc	fsr1h,f,c
 27573  003E96  006F FF7B FFE6     	movff	postinc2,postinc1
 27574  003E9C  006F FF77 FFE5     	movff	postdec2,postdec1
 27575  003EA2                     l10296:
 27576                           
 27577                           ;../nwk/nwk_src/nwkTx.c: 142:   header->macSrcAddr = nwkIb.addr;
 27578  003EA2  EE20 F007          	lfsr	2,7
 27579  003EA6  5028               	movf	nwkTxFrame@header^0,w,c
 27580  003EA8  26D9               	addwf	fsr2l,f,c
 27581  003EAA  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 27582  003EAC  22DA               	addwfc	fsr2h,f,c
 27583  003EAE  0060  F4C7  FFDE   	movff	_nwkIb,postinc2
 27584  003EB4  0060  F4CB  FFDD   	movff	_nwkIb+1,postdec2
 27585                           
 27586                           ;../nwk/nwk_src/nwkTx.c: 143:   header->macSeq = ++nwkIb.macSeqNum;
 27587  003EBA  0101               	movlb	1	; () banked
 27588  003EBC  2B36               	incf	(_nwkIb+5)& (0+255),f,b
 27589  003EBE  EE20 F002          	lfsr	2,2
 27590  003EC2  5028               	movf	nwkTxFrame@header^0,w,c
 27591  003EC4  26D9               	addwf	fsr2l,f,c
 27592  003EC6  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 27593  003EC8  22DA               	addwfc	fsr2h,f,c
 27594  003ECA  0060  F4DB  FFDF   	movff	_nwkIb+5,indf2
 27595                           
 27596                           ; BSR set to: 1
 27597                           ;../nwk/nwk_src/nwkTx.c: 145:   if (0xffff == header->macDstAddr)
 27598  003ED0  EE20 F005          	lfsr	2,5
 27599  003ED4  5028               	movf	nwkTxFrame@header^0,w,c
 27600  003ED6  26D9               	addwf	fsr2l,f,c
 27601  003ED8  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 27602  003EDA  22DA               	addwfc	fsr2h,f,c
 27603  003EDC  28DE               	incf	postinc2,w,c
 27604  003EDE  E124               	bnz	l10306
 27605  003EE0  28DE               	incf	postinc2,w,c
 27606  003EE2  A4D8               	btfss	status,2,c
 27607  003EE4  D021               	goto	l10306
 27608                           
 27609                           ; BSR set to: 1
 27610                           ;../nwk/nwk_src/nwkTx.c: 146:   {;../nwk/nwk_src/nwkTx.c: 147:     header->macFcf = 0x88
      +                          41;
 27611  003EE6  0060  F0A3  FFD9   	movff	nwkTxFrame@header,fsr2l
 27612  003EEC  0060  F0A7  FFDA   	movff	nwkTxFrame@header+1,fsr2h
 27613  003EF2  0E41               	movlw	65
 27614  003EF4  6EDE               	movwf	postinc2,c
 27615  003EF6  0E88               	movlw	136
 27616  003EF8  6EDD               	movwf	postdec2,c
 27617                           
 27618                           ; BSR set to: 1
 27619                           ;../nwk/nwk_src/nwkTx.c: 148:     frame->tx.timeout = (rand() & 0x07) + 1;
 27620  003EFA  EC09  F02A         	call	_rand	;wreg free
 27621  003EFE  0E07               	movlw	7
 27622  003F00  161A               	andwf	?_rand^0,f,c
 27623  003F02  0E00               	movlw	0
 27624  003F04  161B               	andwf	(?_rand+1)^0,f,c
 27625  003F06  0E01               	movlw	1
 27626  003F08  261A               	addwf	?_rand^0,f,c
 27627  003F0A  0E00               	movlw	0
 27628  003F0C  221B               	addwfc	(?_rand+1)^0,f,c
 27629  003F0E  EE20 F084          	lfsr	2,132
 27630  003F12  5024               	movf	nwkTxFrame@frame^0,w,c
 27631  003F14  26D9               	addwf	fsr2l,f,c
 27632  003F16  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 27633  003F18  22DA               	addwfc	fsr2h,f,c
 27634  003F1A  0060  F06B  FFDE   	movff	?_rand,postinc2
 27635  003F20  0060  F06F  FFDD   	movff	?_rand+1,postdec2
 27636                           
 27637                           ;../nwk/nwk_src/nwkTx.c: 149:   }
 27638  003F26  0012               	return	
 27639  003F28                     l10306:
 27640                           
 27641                           ; BSR set to: 1
 27642                           ;../nwk/nwk_src/nwkTx.c: 151:   {;../nwk/nwk_src/nwkTx.c: 152:     header->macFcf = 0x88
      +                          61;
 27643  003F28  0060  F0A3  FFD9   	movff	nwkTxFrame@header,fsr2l
 27644  003F2E  0060  F0A7  FFDA   	movff	nwkTxFrame@header+1,fsr2h
 27645  003F34  0E61               	movlw	97
 27646  003F36  6EDE               	movwf	postinc2,c
 27647  003F38  0E88               	movlw	136
 27648  003F3A  6EDD               	movwf	postdec2,c
 27649                           
 27650                           ; BSR set to: 1
 27651                           ;../nwk/nwk_src/nwkTx.c: 153:     frame->tx.timeout = 0;
 27652  003F3C  EE20 F084          	lfsr	2,132
 27653  003F40  5024               	movf	nwkTxFrame@frame^0,w,c
 27654  003F42  26D9               	addwf	fsr2l,f,c
 27655  003F44  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 27656  003F46  22DA               	addwfc	fsr2h,f,c
 27657  003F48  0E00               	movlw	0
 27658  003F4A  6EDE               	movwf	postinc2,c
 27659  003F4C  0E00               	movlw	0
 27660  003F4E  6EDD               	movwf	postdec2,c
 27661                           
 27662                           ; BSR set to: 1
 27663  003F50  0012               	return		;funcret
 27664  003F52                     __end_of_nwkTxFrame:
 27665                           	opt callstack 0
 27666                           
 27667 ;; *************** function _rand *****************
 27668 ;; Defined at:
 27669 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
 27670 ;; Parameters:    Size  Location     Type
 27671 ;;		None
 27672 ;; Auto vars:     Size  Location     Type
 27673 ;;		None
 27674 ;; Return value:  Size  Location     Type
 27675 ;;                  2   25[COMRAM] int 
 27676 ;; Registers used:
 27677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27678 ;; Tracked objects:
 27679 ;;		On entry : 0/1
 27680 ;;		On exit  : 3F/1
 27681 ;;		Unchanged: 0/0
 27682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27685 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27686 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27687 ;;Total ram usage:       10 bytes
 27688 ;; Hardware stack levels used:    1
 27689 ;; Hardware stack levels required when called:    8
 27690 ;; This function calls:
 27691 ;;		___omul
 27692 ;; This function is called by:
 27693 ;;		_nwkTxFrame
 27694 ;;		_nwkTxBroadcastFrame
 27695 ;; This function uses a non-reentrant model
 27696 ;;
 27697                           
 27698                           	psect	text171
 27699  005412                     __ptext171:
 27700                           	opt callstack 0
 27701  005412                     _rand:
 27702                           	opt callstack 17
 27703                           
 27704                           ; BSR set to: 1
 27705                           ;incstack = 0
 27706  005412  0060  F740  F002   	movff	_seed,___omul@multiplier
 27707  005418  0060  F744  F003   	movff	_seed+1,___omul@multiplier+1
 27708  00541E  0060  F748  F004   	movff	_seed+2,___omul@multiplier+2
 27709  005424  0060  F74C  F005   	movff	_seed+3,___omul@multiplier+3
 27710  00542A  0060  F750  F006   	movff	_seed+4,___omul@multiplier+4
 27711  005430  0060  F754  F007   	movff	_seed+5,___omul@multiplier+5
 27712  005436  0060  F758  F008   	movff	_seed+6,___omul@multiplier+6
 27713  00543C  0060  F75C  F009   	movff	_seed+7,___omul@multiplier+7
 27714  005442  0E2D               	movlw	45
 27715  005444  6E0A               	movwf	___omul@multiplicand^0,c
 27716  005446  0E7F               	movlw	127
 27717  005448  6E0B               	movwf	(___omul@multiplicand+1)^0,c
 27718  00544A  0E95               	movlw	149
 27719  00544C  6E0C               	movwf	(___omul@multiplicand+2)^0,c
 27720  00544E  0E4C               	movlw	76
 27721  005450  6E0D               	movwf	(___omul@multiplicand+3)^0,c
 27722  005452  0E2D               	movlw	45
 27723  005454  6E0E               	movwf	(___omul@multiplicand+4)^0,c
 27724  005456  0EF4               	movlw	244
 27725  005458  6E0F               	movwf	(___omul@multiplicand+5)^0,c
 27726  00545A  0E51               	movlw	81
 27727  00545C  6E10               	movwf	(___omul@multiplicand+6)^0,c
 27728  00545E  0E58               	movlw	88
 27729  005460  6E11               	movwf	(___omul@multiplicand+7)^0,c
 27730  005462  EC05  F03B         	call	___omul	;wreg free
 27731  005466  0060  F008  F01C   	movff	?___omul,??_rand
 27732  00546C  0060  F00C  F01D   	movff	?___omul+1,??_rand+1
 27733  005472  0060  F010  F01E   	movff	?___omul+2,??_rand+2
 27734  005478  0060  F014  F01F   	movff	?___omul+3,??_rand+3
 27735  00547E  0060  F018  F020   	movff	?___omul+4,??_rand+4
 27736  005484  0060  F01C  F021   	movff	?___omul+5,??_rand+5
 27737  00548A  0060  F020  F022   	movff	?___omul+6,??_rand+6
 27738  005490  0060  F024  F023   	movff	?___omul+7,??_rand+7
 27739  005496  0E01               	movlw	1
 27740  005498  241C               	addwf	??_rand^0,w,c
 27741  00549A  0101               	movlb	1	; () banked
 27742  00549C  6FD0               	movwf	_seed& (0+255),b
 27743  00549E  0E00               	movlw	0
 27744  0054A0  201D               	addwfc	(??_rand+1)^0,w,c
 27745  0054A2  6FD1               	movwf	(_seed+1)& (0+255),b
 27746  0054A4  0E00               	movlw	0
 27747  0054A6  201E               	addwfc	(??_rand+2)^0,w,c
 27748  0054A8  6FD2               	movwf	(_seed+2)& (0+255),b
 27749  0054AA  0E00               	movlw	0
 27750  0054AC  201F               	addwfc	(??_rand+3)^0,w,c
 27751  0054AE  6FD3               	movwf	(_seed+3)& (0+255),b
 27752  0054B0  0E00               	movlw	0
 27753  0054B2  2020               	addwfc	(??_rand+4)^0,w,c
 27754  0054B4  6FD4               	movwf	(_seed+4)& (0+255),b
 27755  0054B6  0E00               	movlw	0
 27756  0054B8  2021               	addwfc	(??_rand+5)^0,w,c
 27757  0054BA  6FD5               	movwf	(_seed+5)& (0+255),b
 27758  0054BC  0E00               	movlw	0
 27759  0054BE  2022               	addwfc	(??_rand+6)^0,w,c
 27760  0054C0  6FD6               	movwf	(_seed+6)& (0+255),b
 27761  0054C2  0E00               	movlw	0
 27762  0054C4  2023               	addwfc	(??_rand+7)^0,w,c
 27763  0054C6  6FD7               	movwf	(_seed+7)& (0+255),b
 27764                           
 27765                           ; BSR set to: 1
 27766  0054C8  0060  F740  F01C   	movff	_seed,??_rand
 27767  0054CE  0060  F744  F01D   	movff	_seed+1,??_rand+1
 27768  0054D4  0060  F748  F01E   	movff	_seed+2,??_rand+2
 27769  0054DA  0060  F74C  F01F   	movff	_seed+3,??_rand+3
 27770  0054E0  0060  F750  F020   	movff	_seed+4,??_rand+4
 27771  0054E6  0060  F754  F021   	movff	_seed+5,??_rand+5
 27772  0054EC  0060  F758  F022   	movff	_seed+6,??_rand+6
 27773  0054F2  0060  F75C  F023   	movff	_seed+7,??_rand+7
 27774  0054F8  0E32               	movlw	50
 27775  0054FA  D009               	goto	u8080
 27776  0054FC                     u8085:
 27777  0054FC  90D8               	bcf	status,0,c
 27778  0054FE  3223               	rrcf	(??_rand+7)^0,f,c
 27779  005500  3222               	rrcf	(??_rand+6)^0,f,c
 27780  005502  3221               	rrcf	(??_rand+5)^0,f,c
 27781  005504  3220               	rrcf	(??_rand+4)^0,f,c
 27782  005506  321F               	rrcf	(??_rand+3)^0,f,c
 27783  005508  321E               	rrcf	(??_rand+2)^0,f,c
 27784  00550A  321D               	rrcf	(??_rand+1)^0,f,c
 27785  00550C  321C               	rrcf	??_rand^0,f,c
 27786  00550E                     u8080:
 27787  00550E  2EE8               	decfsz	wreg,f,c
 27788  005510  D7F5               	goto	u8085
 27789  005512  0060  F070  F01A   	movff	??_rand,?_rand
 27790  005518  0060  F078  F01B   	movff	??_rand+2,?_rand+1
 27791                           
 27792                           ; BSR set to: 1
 27793  00551E  0012               	return		;funcret
 27794  005520                     __end_of_rand:
 27795                           	opt callstack 0
 27796                           
 27797 ;; *************** function ___omul *****************
 27798 ;; Defined at:
 27799 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
 27800 ;; Parameters:    Size  Location     Type
 27801 ;;  multiplier      8    1[COMRAM] unsigned long long 
 27802 ;;  multiplicand    8    9[COMRAM] unsigned long long 
 27803 ;; Auto vars:     Size  Location     Type
 27804 ;;  product         8   17[COMRAM] unsigned long long 
 27805 ;; Return value:  Size  Location     Type
 27806 ;;                  8    1[COMRAM] unsigned long long 
 27807 ;; Registers used:
 27808 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27809 ;; Tracked objects:
 27810 ;;		On entry : 0/1
 27811 ;;		On exit  : 0/0
 27812 ;;		Unchanged: 0/0
 27813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27814 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27815 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27817 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27818 ;;Total ram usage:       24 bytes
 27819 ;; Hardware stack levels used:    1
 27820 ;; Hardware stack levels required when called:    7
 27821 ;; This function calls:
 27822 ;;		Nothing
 27823 ;; This function is called by:
 27824 ;;		_rand
 27825 ;; This function uses a non-reentrant model
 27826 ;;
 27827                           
 27828                           	psect	text172
 27829  00760A                     __ptext172:
 27830                           	opt callstack 0
 27831  00760A                     ___omul:
 27832                           	opt callstack 17
 27833                           
 27834                           ; BSR set to: 1
 27835                           ;incstack = 0
 27836  00760A  EE20  F012         	lfsr	2,___omul@product
 27837  00760E  0E07               	movlw	7
 27838  007610                     u7881:
 27839  007610  6ADE               	clrf	postinc2,c
 27840  007612  06E8               	decf	wreg,f,c
 27841  007614  E2FD               	bc	u7881
 27842  007616                     l9896:
 27843  007616  A002               	btfss	___omul@multiplier^0,0,c
 27844  007618  D010               	goto	l9900
 27845  00761A  500A               	movf	___omul@multiplicand^0,w,c
 27846  00761C  2612               	addwf	___omul@product^0,f,c
 27847  00761E  500B               	movf	(___omul@multiplicand+1)^0,w,c
 27848  007620  2213               	addwfc	(___omul@product+1)^0,f,c
 27849  007622  500C               	movf	(___omul@multiplicand+2)^0,w,c
 27850  007624  2214               	addwfc	(___omul@product+2)^0,f,c
 27851  007626  500D               	movf	(___omul@multiplicand+3)^0,w,c
 27852  007628  2215               	addwfc	(___omul@product+3)^0,f,c
 27853  00762A  500E               	movf	(___omul@multiplicand+4)^0,w,c
 27854  00762C  2216               	addwfc	(___omul@product+4)^0,f,c
 27855  00762E  500F               	movf	(___omul@multiplicand+5)^0,w,c
 27856  007630  2217               	addwfc	(___omul@product+5)^0,f,c
 27857  007632  5010               	movf	(___omul@multiplicand+6)^0,w,c
 27858  007634  2218               	addwfc	(___omul@product+6)^0,f,c
 27859  007636  5011               	movf	(___omul@multiplicand+7)^0,w,c
 27860  007638  2219               	addwfc	(___omul@product+7)^0,f,c
 27861  00763A                     l9900:
 27862  00763A  90D8               	bcf	status,0,c
 27863  00763C  360A               	rlcf	___omul@multiplicand^0,f,c
 27864  00763E  360B               	rlcf	(___omul@multiplicand+1)^0,f,c
 27865  007640  360C               	rlcf	(___omul@multiplicand+2)^0,f,c
 27866  007642  360D               	rlcf	(___omul@multiplicand+3)^0,f,c
 27867  007644  360E               	rlcf	(___omul@multiplicand+4)^0,f,c
 27868  007646  360F               	rlcf	(___omul@multiplicand+5)^0,f,c
 27869  007648  3610               	rlcf	(___omul@multiplicand+6)^0,f,c
 27870  00764A  3611               	rlcf	(___omul@multiplicand+7)^0,f,c
 27871  00764C  90D8               	bcf	status,0,c
 27872  00764E  3209               	rrcf	(___omul@multiplier+7)^0,f,c
 27873  007650  3208               	rrcf	(___omul@multiplier+6)^0,f,c
 27874  007652  3207               	rrcf	(___omul@multiplier+5)^0,f,c
 27875  007654  3206               	rrcf	(___omul@multiplier+4)^0,f,c
 27876  007656  3205               	rrcf	(___omul@multiplier+3)^0,f,c
 27877  007658  3204               	rrcf	(___omul@multiplier+2)^0,f,c
 27878  00765A  3203               	rrcf	(___omul@multiplier+1)^0,f,c
 27879  00765C  3202               	rrcf	___omul@multiplier^0,f,c
 27880  00765E  5002               	movf	___omul@multiplier^0,w,c
 27881  007660  1003               	iorwf	(___omul@multiplier+1)^0,w,c
 27882  007662  1004               	iorwf	(___omul@multiplier+2)^0,w,c
 27883  007664  1005               	iorwf	(___omul@multiplier+3)^0,w,c
 27884  007666  1006               	iorwf	(___omul@multiplier+4)^0,w,c
 27885  007668  1007               	iorwf	(___omul@multiplier+5)^0,w,c
 27886  00766A  1008               	iorwf	(___omul@multiplier+6)^0,w,c
 27887  00766C  1009               	iorwf	(___omul@multiplier+7)^0,w,c
 27888  00766E  A4D8               	btfss	status,2,c
 27889  007670  D7D2               	goto	l9896
 27890  007672  0060  F048  F002   	movff	___omul@product,?___omul
 27891  007678  0060  F04C  F003   	movff	___omul@product+1,?___omul+1
 27892  00767E  0060  F050  F004   	movff	___omul@product+2,?___omul+2
 27893  007684  0060  F054  F005   	movff	___omul@product+3,?___omul+3
 27894  00768A  0060  F058  F006   	movff	___omul@product+4,?___omul+4
 27895  007690  0060  F05C  F007   	movff	___omul@product+5,?___omul+5
 27896  007696  0060  F060  F008   	movff	___omul@product+6,?___omul+6
 27897  00769C  0060  F064  F009   	movff	___omul@product+7,?___omul+7
 27898  0076A2  0012               	return		;funcret
 27899  0076A4                     __end_of___omul:
 27900                           	opt callstack 0
 27901                           
 27902 ;; *************** function _nwkRoutePrepareTx *****************
 27903 ;; Defined at:
 27904 ;;		line 264 in file "../nwk/nwk_src/nwkRoute.c"
 27905 ;; Parameters:    Size  Location     Type
 27906 ;;  frame           2   12[COMRAM] PTR struct NwkFrame_t
 27907 ;;		 -> nwkFrameFrames(685), NULL(0), 
 27908 ;; Auto vars:     Size  Location     Type
 27909 ;;  header          2   16[COMRAM] PTR __pack struct NwkFra
 27910 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 27911 ;; Return value:  Size  Location     Type
 27912 ;;                  1    wreg      void 
 27913 ;; Registers used:
 27914 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27915 ;; Tracked objects:
 27916 ;;		On entry : 0/1
 27917 ;;		On exit  : 0/0
 27918 ;;		Unchanged: 0/0
 27919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27921 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27922 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27923 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27924 ;;Total ram usage:        6 bytes
 27925 ;; Hardware stack levels used:    1
 27926 ;; Hardware stack levels required when called:    9
 27927 ;; This function calls:
 27928 ;;		_NWK_GroupIsMember
 27929 ;;		_NWK_RouteNextHop
 27930 ;; This function is called by:
 27931 ;;		_nwkTxFrame
 27932 ;; This function uses a non-reentrant model
 27933 ;;
 27934                           
 27935                           	psect	text173
 27936  005520                     __ptext173:
 27937                           	opt callstack 0
 27938  005520                     _nwkRoutePrepareTx:
 27939                           	opt callstack 15
 27940                           
 27941                           ;../nwk/nwk_src/nwkRoute.c: 264: void nwkRoutePrepareTx(NwkFrame_t *frame);../nwk/nwk_sr
      +                          c/nwkRoute.c: 265: {;../nwk/nwk_src/nwkRoute.c: 266:   NwkFrameHeader_t *header = &frame
      +                          ->header;
 27942                           
 27943                           ;incstack = 0
 27944  005520  0E02               	movlw	2
 27945  005522  240D               	addwf	nwkRoutePrepareTx@frame^0,w,c
 27946  005524  6E11               	movwf	nwkRoutePrepareTx@header^0,c
 27947  005526  0E00               	movlw	0
 27948  005528  200E               	addwfc	(nwkRoutePrepareTx@frame+1)^0,w,c
 27949  00552A  6E12               	movwf	(nwkRoutePrepareTx@header+1)^0,c
 27950                           
 27951                           ;../nwk/nwk_src/nwkRoute.c: 268:   if (0xffff == header->nwkDstAddr)
 27952  00552C  EE20 F00D          	lfsr	2,13
 27953  005530  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 27954  005532  26D9               	addwf	fsr2l,f,c
 27955  005534  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 27956  005536  22DA               	addwfc	fsr2h,f,c
 27957  005538  28DE               	incf	postinc2,w,c
 27958  00553A  E10E               	bnz	l9968
 27959  00553C  28DE               	incf	postinc2,w,c
 27960  00553E  A4D8               	btfss	status,2,c
 27961  005540  D00B               	goto	l9968
 27962                           
 27963                           ;../nwk/nwk_src/nwkRoute.c: 269:   {;../nwk/nwk_src/nwkRoute.c: 270:     header->macDstA
      +                          ddr = 0xffff;
 27964  005542  EE20 F005          	lfsr	2,5
 27965  005546  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 27966  005548  26D9               	addwf	fsr2l,f,c
 27967  00554A  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 27968  00554C  22DA               	addwfc	fsr2h,f,c
 27969  00554E  0EFF               	movlw	255
 27970  005550  6EDE               	movwf	postinc2,c
 27971  005552  0EFF               	movlw	255
 27972  005554  6EDD               	movwf	postdec2,c
 27973                           
 27974                           ;../nwk/nwk_src/nwkRoute.c: 271:   }
 27975  005556  0012               	return	
 27976  005558                     l9968:
 27977  005558  EE20 F009          	lfsr	2,9
 27978  00555C  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 27979  00555E  26D9               	addwf	fsr2l,f,c
 27980  005560  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 27981  005562  22DA               	addwfc	fsr2h,f,c
 27982  005564  A4DF               	btfss	indf2,2,c
 27983  005566  D013               	goto	l9972
 27984                           
 27985                           ;../nwk/nwk_src/nwkRoute.c: 274:   {;../nwk/nwk_src/nwkRoute.c: 275:     header->macDstA
      +                          ddr = header->nwkDstAddr;
 27986  005568  EE20 F00D          	lfsr	2,13
 27987  00556C  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 27988  00556E  26D9               	addwf	fsr2l,f,c
 27989  005570  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 27990  005572  22DA               	addwfc	fsr2h,f,c
 27991  005574  EE10 F005          	lfsr	1,5
 27992  005578  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 27993  00557A  26E1               	addwf	fsr1l,f,c
 27994  00557C  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 27995  00557E  22E2               	addwfc	fsr1h,f,c
 27996  005580  006F FF7B FFE6     	movff	postinc2,postinc1
 27997  005586  006F FF77 FFE5     	movff	postdec2,postdec1
 27998                           
 27999                           ;../nwk/nwk_src/nwkRoute.c: 276:   }
 28000  00558C  0012               	return	
 28001  00558E                     l9972:
 28002  00558E  EE20 F009          	lfsr	2,9
 28003  005592  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 28004  005594  26D9               	addwf	fsr2l,f,c
 28005  005596  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 28006  005598  22DA               	addwfc	fsr2h,f,c
 28007  00559A  A6DF               	btfss	indf2,3,c
 28008  00559C  D023               	goto	l9978
 28009  00559E  EE20 F00D          	lfsr	2,13
 28010  0055A2  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 28011  0055A4  26D9               	addwf	fsr2l,f,c
 28012  0055A6  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 28013  0055A8  22DA               	addwfc	fsr2h,f,c
 28014  0055AA  006F FF78  F002    	movff	postinc2,NWK_GroupIsMember@group
 28015  0055B0  006F FF74  F003    	movff	postdec2,NWK_GroupIsMember@group+1
 28016  0055B6  EC17  F049         	call	_NWK_GroupIsMember	;wreg free
 28017  0055BA  0900               	iorlw	0
 28018  0055BC  B4D8               	btfsc	status,2,c
 28019  0055BE  D012               	goto	l9978
 28020                           
 28021                           ;../nwk/nwk_src/nwkRoute.c: 280:   {;../nwk/nwk_src/nwkRoute.c: 281:     header->macDstA
      +                          ddr = 0xffff;
 28022  0055C0  EE20 F005          	lfsr	2,5
 28023  0055C4  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 28024  0055C6  26D9               	addwf	fsr2l,f,c
 28025  0055C8  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 28026  0055CA  22DA               	addwfc	fsr2h,f,c
 28027  0055CC  0EFF               	movlw	255
 28028  0055CE  6EDE               	movwf	postinc2,c
 28029  0055D0  0EFF               	movlw	255
 28030  0055D2  6EDD               	movwf	postdec2,c
 28031                           
 28032                           ;../nwk/nwk_src/nwkRoute.c: 282:     header->nwkFcf.linkLocal = 1;
 28033  0055D4  EE20 F009          	lfsr	2,9
 28034  0055D8  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 28035  0055DA  26D9               	addwf	fsr2l,f,c
 28036  0055DC  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 28037  0055DE  22DA               	addwfc	fsr2h,f,c
 28038  0055E0  84DF               	bsf	indf2,2,c
 28039                           
 28040                           ;../nwk/nwk_src/nwkRoute.c: 283:   }
 28041  0055E2  0012               	return	
 28042  0055E4                     l9978:
 28043                           
 28044                           ;../nwk/nwk_src/nwkRoute.c: 287:   {;../nwk/nwk_src/nwkRoute.c: 288:     header->macDstA
      +                          ddr = NWK_RouteNextHop(header->nwkDstAddr, header->nwkFcf.multicast);
 28045  0055E4  EE20 F00D          	lfsr	2,13
 28046  0055E8  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 28047  0055EA  26D9               	addwf	fsr2l,f,c
 28048  0055EC  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 28049  0055EE  22DA               	addwfc	fsr2h,f,c
 28050  0055F0  006F FF78  F008    	movff	postinc2,NWK_RouteNextHop@dst
 28051  0055F6  006F FF74  F009    	movff	postdec2,NWK_RouteNextHop@dst+1
 28052  0055FC  EE20 F009          	lfsr	2,9
 28053  005600  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 28054  005602  26D9               	addwf	fsr2l,f,c
 28055  005604  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 28056  005606  22DA               	addwfc	fsr2h,f,c
 28057  005608  0E00               	movlw	0
 28058  00560A  B6DF               	btfsc	indf2,3,c
 28059  00560C  0E01               	movlw	1
 28060  00560E  6E0A               	movwf	NWK_RouteNextHop@multicast^0,c
 28061  005610  ECF5  F044         	call	_NWK_RouteNextHop	;wreg free
 28062  005614  EE20 F005          	lfsr	2,5
 28063  005618  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 28064  00561A  26D9               	addwf	fsr2l,f,c
 28065  00561C  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 28066  00561E  22DA               	addwfc	fsr2h,f,c
 28067  005620  0060  F023  FFDE   	movff	?_NWK_RouteNextHop,postinc2
 28068  005626  0060  F027  FFDD   	movff	?_NWK_RouteNextHop+1,postdec2
 28069  00562C  0012               	return		;funcret
 28070  00562E                     __end_of_nwkRoutePrepareTx:
 28071                           	opt callstack 0
 28072                           
 28073 ;; *************** function _NWK_RouteNextHop *****************
 28074 ;; Defined at:
 28075 ;;		line 144 in file "../nwk/nwk_src/nwkRoute.c"
 28076 ;; Parameters:    Size  Location     Type
 28077 ;;  dst             2    7[COMRAM] unsigned short 
 28078 ;;  multicast       1    9[COMRAM] unsigned char 
 28079 ;; Auto vars:     Size  Location     Type
 28080 ;;  entry           2   10[COMRAM] PTR struct NWK_RouteTabl
 28081 ;;		 -> nwkRouteTable(70), NULL(0), 
 28082 ;; Return value:  Size  Location     Type
 28083 ;;                  2    7[COMRAM] unsigned short 
 28084 ;; Registers used:
 28085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28086 ;; Tracked objects:
 28087 ;;		On entry : 0/3D
 28088 ;;		On exit  : 0/0
 28089 ;;		Unchanged: 0/0
 28090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28091 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28092 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28094 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28095 ;;Total ram usage:        5 bytes
 28096 ;; Hardware stack levels used:    1
 28097 ;; Hardware stack levels required when called:    8
 28098 ;; This function calls:
 28099 ;;		_NWK_RouteFindEntry
 28100 ;; This function is called by:
 28101 ;;		_nwkRoutePrepareTx
 28102 ;;		_nwkRouteFrame
 28103 ;; This function uses a non-reentrant model
 28104 ;;
 28105                           
 28106                           	psect	text174
 28107  0089EA                     __ptext174:
 28108                           	opt callstack 0
 28109  0089EA                     _NWK_RouteNextHop:
 28110                           	opt callstack 15
 28111                           
 28112                           ;../nwk/nwk_src/nwkRoute.c: 144: uint16_t NWK_RouteNextHop(uint16_t dst, uint8_t multica
      +                          st);../nwk/nwk_src/nwkRoute.c: 145: {;../nwk/nwk_src/nwkRoute.c: 146:   NWK_RouteTableEn
      +                          try_t *entry;;../nwk/nwk_src/nwkRoute.c: 148:   entry = NWK_RouteFindEntry(dst, multicas
      +                          t);
 28113                           
 28114                           ;incstack = 0
 28115  0089EA  0060  F020  F002   	movff	NWK_RouteNextHop@dst,NWK_RouteFindEntry@dst
 28116  0089F0  0060  F024  F003   	movff	NWK_RouteNextHop@dst+1,NWK_RouteFindEntry@dst+1
 28117  0089F6  0060  F028  F004   	movff	NWK_RouteNextHop@multicast,NWK_RouteFindEntry@multicast
 28118  0089FC  ECA7  F040         	call	_NWK_RouteFindEntry	;wreg free
 28119  008A00  0060  F008  F00B   	movff	?_NWK_RouteFindEntry,NWK_RouteNextHop@entry
 28120  008A06  0060  F00C  F00C   	movff	?_NWK_RouteFindEntry+1,NWK_RouteNextHop@entry+1
 28121                           
 28122                           ;../nwk/nwk_src/nwkRoute.c: 149:   if (entry)
 28123  008A0C  500B               	movf	NWK_RouteNextHop@entry^0,w,c
 28124  008A0E  100C               	iorwf	(NWK_RouteNextHop@entry+1)^0,w,c
 28125  008A10  B4D8               	btfsc	status,2,c
 28126  008A12  D00D               	goto	l1954
 28127                           
 28128                           ;../nwk/nwk_src/nwkRoute.c: 150:     return entry->nextHopAddr;
 28129  008A14  EE20 F003          	lfsr	2,3
 28130  008A18  500B               	movf	NWK_RouteNextHop@entry^0,w,c
 28131  008A1A  26D9               	addwf	fsr2l,f,c
 28132  008A1C  500C               	movf	(NWK_RouteNextHop@entry+1)^0,w,c
 28133  008A1E  22DA               	addwfc	fsr2h,f,c
 28134  008A20  006F FF78  F008    	movff	postinc2,?_NWK_RouteNextHop
 28135  008A26  006F FF74  F009    	movff	postdec2,?_NWK_RouteNextHop+1
 28136  008A2C  0012               	return	
 28137  008A2E                     l1954:
 28138                           
 28139                           ;../nwk/nwk_src/nwkRoute.c: 152:   return 0xffff;
 28140  008A2E  6808               	setf	?_NWK_RouteNextHop^0,c
 28141  008A30  6809               	setf	(?_NWK_RouteNextHop+1)^0,c
 28142  008A32  0012               	return		;funcret
 28143  008A34                     __end_of_NWK_RouteNextHop:
 28144                           	opt callstack 0
 28145                           
 28146 ;; *************** function _NWK_RouteFindEntry *****************
 28147 ;; Defined at:
 28148 ;;		line 91 in file "../nwk/nwk_src/nwkRoute.c"
 28149 ;; Parameters:    Size  Location     Type
 28150 ;;  dst             2    1[COMRAM] unsigned short 
 28151 ;;  multicast       1    3[COMRAM] unsigned char 
 28152 ;; Auto vars:     Size  Location     Type
 28153 ;;  i               1    6[COMRAM] unsigned char 
 28154 ;; Return value:  Size  Location     Type
 28155 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
 28156 ;; Registers used:
 28157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28158 ;; Tracked objects:
 28159 ;;		On entry : 0/3D
 28160 ;;		On exit  : 0/0
 28161 ;;		Unchanged: 0/0
 28162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28163 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28165 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28166 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28167 ;;Total ram usage:        6 bytes
 28168 ;; Hardware stack levels used:    1
 28169 ;; Hardware stack levels required when called:    7
 28170 ;; This function calls:
 28171 ;;		Nothing
 28172 ;; This function is called by:
 28173 ;;		_NWK_RouteNextHop
 28174 ;;		_nwkRouteRemove
 28175 ;;		_nwkRouteFrameReceived
 28176 ;;		_nwkRouteFrameSent
 28177 ;; This function uses a non-reentrant model
 28178 ;;
 28179                           
 28180                           	psect	text175
 28181  00814E                     __ptext175:
 28182                           	opt callstack 0
 28183  00814E                     _NWK_RouteFindEntry:
 28184                           	opt callstack 19
 28185                           
 28186                           ;../nwk/nwk_src/nwkRoute.c: 91: NWK_RouteTableEntry_t *NWK_RouteFindEntry(uint16_t dst, 
      +                          uint8_t multicast);../nwk/nwk_src/nwkRoute.c: 92: {;../nwk/nwk_src/nwkRoute.c: 93:   for
      +                           (uint8_t i = 0; i < 10; i++)
 28187                           
 28188                           ;incstack = 0
 28189  00814E  0E00               	movlw	0
 28190  008150  6E07               	movwf	NWK_RouteFindEntry@i^0,c
 28191  008152                     l9404:
 28192                           
 28193                           ;../nwk/nwk_src/nwkRoute.c: 94:   {;../nwk/nwk_src/nwkRoute.c: 95:     if (nwkRouteTable
      +                          [i].dstAddr == dst &&
 28194  008152  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 28195  008154  0D07               	mullw	7
 28196  008156  0E75               	movlw	low (_nwkRouteTable+1)
 28197  008158  24F3               	addwf	243,w,c
 28198  00815A  6ED9               	movwf	fsr2l,c
 28199  00815C  0E02               	movlw	high (_nwkRouteTable+1)
 28200  00815E  20F4               	addwfc	prodh,w,c
 28201  008160  6EDA               	movwf	fsr2h,c
 28202  008162  5002               	movf	NWK_RouteFindEntry@dst^0,w,c
 28203  008164  18DE               	xorwf	postinc2,w,c
 28204  008166  E11E               	bnz	l9412
 28205  008168  5003               	movf	(NWK_RouteFindEntry@dst+1)^0,w,c
 28206  00816A  18DE               	xorwf	postinc2,w,c
 28207  00816C  A4D8               	btfss	status,2,c
 28208  00816E  D01A               	goto	l9412
 28209  008170  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 28210  008172  0D07               	mullw	7
 28211  008174  0E74               	movlw	low _nwkRouteTable
 28212  008176  24F3               	addwf	243,w,c
 28213  008178  6ED9               	movwf	fsr2l,c
 28214  00817A  0E02               	movlw	high _nwkRouteTable
 28215  00817C  20F4               	addwfc	prodh,w,c
 28216  00817E  6EDA               	movwf	fsr2h,c
 28217  008180  0102               	movlb	2	; () banked
 28218  008182  A2DF               	btfss	indf2,1,c
 28219  008184  D002               	goto	u6920
 28220  008186  0E01               	movlw	1
 28221  008188  D001               	goto	u6926
 28222  00818A                     u6920:
 28223  00818A  0E00               	movlw	0
 28224  00818C                     u6926:
 28225  00818C  1804               	xorwf	NWK_RouteFindEntry@multicast^0,w,c
 28226  00818E  A4D8               	btfss	status,2,c
 28227  008190  D009               	goto	l9412
 28228                           
 28229                           ; BSR set to: 2
 28230                           ;../nwk/nwk_src/nwkRoute.c: 97:       return &nwkRouteTable[i];
 28231  008192  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 28232  008194  0D07               	mullw	7
 28233  008196  0E74               	movlw	low _nwkRouteTable
 28234  008198  24F3               	addwf	243,w,c
 28235  00819A  6E02               	movwf	?_NWK_RouteFindEntry^0,c
 28236  00819C  0E02               	movlw	high _nwkRouteTable
 28237  00819E  20F4               	addwfc	prodh,w,c
 28238  0081A0  6E03               	movwf	(?_NWK_RouteFindEntry+1)^0,c
 28239  0081A2  0012               	return	
 28240  0081A4                     l9412:
 28241                           
 28242                           ;../nwk/nwk_src/nwkRoute.c: 98:   }
 28243  0081A4  2A07               	incf	NWK_RouteFindEntry@i^0,f,c
 28244  0081A6  0E09               	movlw	9
 28245  0081A8  6407               	cpfsgt	NWK_RouteFindEntry@i^0,c
 28246  0081AA  D7D3               	goto	l9404
 28247                           
 28248                           ;../nwk/nwk_src/nwkRoute.c: 100:   return ((void*)0);
 28249  0081AC  0E00               	movlw	0
 28250  0081AE  6E02               	movwf	?_NWK_RouteFindEntry^0,c
 28251  0081B0  0E00               	movlw	0
 28252  0081B2  6E03               	movwf	(?_NWK_RouteFindEntry+1)^0,c
 28253  0081B4  0012               	return		;funcret
 28254  0081B6                     __end_of_NWK_RouteFindEntry:
 28255                           	opt callstack 0
 28256                           
 28257 ;; *************** function _NWK_GroupIsMember *****************
 28258 ;; Defined at:
 28259 ;;		line 101 in file "../nwk/nwk_src/nwkGroup.c"
 28260 ;; Parameters:    Size  Location     Type
 28261 ;;  group           2    1[COMRAM] unsigned short 
 28262 ;; Auto vars:     Size  Location     Type
 28263 ;;  i               1    5[COMRAM] unsigned char 
 28264 ;; Return value:  Size  Location     Type
 28265 ;;                  1    wreg      _Bool 
 28266 ;; Registers used:
 28267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28268 ;; Tracked objects:
 28269 ;;		On entry : 0/1
 28270 ;;		On exit  : 0/0
 28271 ;;		Unchanged: 0/0
 28272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28274 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28276 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28277 ;;Total ram usage:        5 bytes
 28278 ;; Hardware stack levels used:    1
 28279 ;; Hardware stack levels required when called:    7
 28280 ;; This function calls:
 28281 ;;		Nothing
 28282 ;; This function is called by:
 28283 ;;		_nwkRoutePrepareTx
 28284 ;;		_nwkRxHandleReceivedFrame
 28285 ;; This function uses a non-reentrant model
 28286 ;;
 28287                           
 28288                           	psect	text176
 28289  00922E                     __ptext176:
 28290                           	opt callstack 0
 28291  00922E                     _NWK_GroupIsMember:
 28292                           	opt callstack 19
 28293                           
 28294                           ;../nwk/nwk_src/nwkGroup.c: 101: _Bool NWK_GroupIsMember(uint16_t group);../nwk/nwk_src/
      +                          nwkGroup.c: 102: {;../nwk/nwk_src/nwkGroup.c: 103:   for (uint8_t i = 0; i < 10; i++)
 28295                           
 28296                           ;incstack = 0
 28297  00922E  0E00               	movlw	0
 28298  009230  6E06               	movwf	NWK_GroupIsMember@i^0,c
 28299  009232                     l9648:
 28300                           
 28301                           ;../nwk/nwk_src/nwkGroup.c: 104:     if (group == nwkGroups[i])
 28302  009232  5006               	movf	NWK_GroupIsMember@i^0,w,c
 28303  009234  0D02               	mullw	2
 28304  009236  0E00               	movlw	low _nwkGroups
 28305  009238  24F3               	addwf	243,w,c
 28306  00923A  6ED9               	movwf	fsr2l,c
 28307  00923C  0E02               	movlw	high _nwkGroups
 28308  00923E  20F4               	addwfc	prodh,w,c
 28309  009240  6EDA               	movwf	fsr2h,c
 28310  009242  5002               	movf	NWK_GroupIsMember@group^0,w,c
 28311  009244  18DE               	xorwf	postinc2,w,c
 28312  009246  E106               	bnz	l9654
 28313  009248  5003               	movf	(NWK_GroupIsMember@group+1)^0,w,c
 28314  00924A  18DE               	xorwf	postinc2,w,c
 28315  00924C  A4D8               	btfss	status,2,c
 28316  00924E  D002               	goto	l9654
 28317                           
 28318                           ;../nwk/nwk_src/nwkGroup.c: 105:       return 1;
 28319  009250  0E01               	movlw	1
 28320  009252  0012               	return	
 28321  009254                     l9654:
 28322  009254  2A06               	incf	NWK_GroupIsMember@i^0,f,c
 28323  009256  0E09               	movlw	9
 28324  009258  6406               	cpfsgt	NWK_GroupIsMember@i^0,c
 28325  00925A  D7EB               	goto	l9648
 28326                           
 28327                           ;../nwk/nwk_src/nwkGroup.c: 106:   return 0;
 28328  00925C  0E00               	movlw	0
 28329  00925E  0012               	return		;funcret
 28330  009260                     __end_of_NWK_GroupIsMember:
 28331                           	opt callstack 0
 28332                           
 28333 ;; *************** function _nwkFrameAlloc *****************
 28334 ;; Defined at:
 28335 ;;		line 80 in file "../nwk/nwk_src/nwkFrame.c"
 28336 ;; Parameters:    Size  Location     Type
 28337 ;;		None
 28338 ;; Auto vars:     Size  Location     Type
 28339 ;;  i               1   17[COMRAM] unsigned char 
 28340 ;; Return value:  Size  Location     Type
 28341 ;;                  2   13[COMRAM] PTR struct NwkFrame_t
 28342 ;; Registers used:
 28343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28344 ;; Tracked objects:
 28345 ;;		On entry : 0/0
 28346 ;;		On exit  : 0/0
 28347 ;;		Unchanged: 0/0
 28348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28349 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28350 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28352 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28353 ;;Total ram usage:        5 bytes
 28354 ;; Hardware stack levels used:    1
 28355 ;; Hardware stack levels required when called:    8
 28356 ;; This function calls:
 28357 ;;		_memset
 28358 ;; This function is called by:
 28359 ;;		_nwkDataReqSendFrame
 28360 ;;		_nwkRouteSendRouteError
 28361 ;;		_PHY_DataInd
 28362 ;;		_nwkRxSendAck
 28363 ;;		_nwkTxBroadcastFrame
 28364 ;; This function uses a non-reentrant model
 28365 ;;
 28366                           
 28367                           	psect	text177
 28368  0070B8                     __ptext177:
 28369                           	opt callstack 0
 28370  0070B8                     _nwkFrameAlloc:
 28371                           	opt callstack 17
 28372                           
 28373                           ;../nwk/nwk_src/nwkFrame.c: 82:   for (uint8_t i = 0; i < 5; i++)
 28374                           
 28375                           ;incstack = 0
 28376  0070B8  0E00               	movlw	0
 28377  0070BA  6E12               	movwf	nwkFrameAlloc@i^0,c
 28378  0070BC                     l15062:
 28379                           
 28380                           ;../nwk/nwk_src/nwkFrame.c: 83:   {;../nwk/nwk_src/nwkFrame.c: 84:     if (NWK_FRAME_STA
      +                          TE_FREE == nwkFrameFrames[i].state)
 28381  0070BC  5012               	movf	nwkFrameAlloc@i^0,w,c
 28382  0070BE  0D89               	mullw	137
 28383  0070C0  0EBD               	movlw	low _nwkFrameFrames
 28384  0070C2  24F3               	addwf	243,w,c
 28385  0070C4  6ED9               	movwf	fsr2l,c
 28386  0070C6  0E05               	movlw	high _nwkFrameFrames
 28387  0070C8  20F4               	addwfc	prodh,w,c
 28388  0070CA  6EDA               	movwf	fsr2h,c
 28389  0070CC  50DF               	movf	indf2,w,c
 28390  0070CE  A4D8               	btfss	status,2,c
 28391  0070D0  D044               	goto	l15076
 28392                           
 28393                           ;../nwk/nwk_src/nwkFrame.c: 85:     {;../nwk/nwk_src/nwkFrame.c: 86:       memset(&nwkFr
      +                          ameFrames[i], 0, sizeof(NwkFrame_t));
 28394  0070D2  5012               	movf	nwkFrameAlloc@i^0,w,c
 28395  0070D4  0D89               	mullw	137
 28396  0070D6  0EBD               	movlw	low _nwkFrameFrames
 28397  0070D8  24F3               	addwf	243,w,c
 28398  0070DA  6E02               	movwf	memset@dest^0,c
 28399  0070DC  0E05               	movlw	high _nwkFrameFrames
 28400  0070DE  20F4               	addwfc	prodh,w,c
 28401  0070E0  6E03               	movwf	(memset@dest+1)^0,c
 28402  0070E2  0E00               	movlw	0
 28403  0070E4  6E05               	movwf	(memset@c+1)^0,c
 28404  0070E6  0E00               	movlw	0
 28405  0070E8  6E04               	movwf	memset@c^0,c
 28406  0070EA  0E00               	movlw	0
 28407  0070EC  6E07               	movwf	(memset@n+1)^0,c
 28408  0070EE  0E89               	movlw	137
 28409  0070F0  6E06               	movwf	memset@n^0,c
 28410  0070F2  ECBC  F024         	call	_memset	;wreg free
 28411                           
 28412                           ;../nwk/nwk_src/nwkFrame.c: 87:       nwkFrameFrames[i].size = sizeof(NwkFrameHeader_t);
 28413  0070F6  5012               	movf	nwkFrameAlloc@i^0,w,c
 28414  0070F8  0D89               	mullw	137
 28415  0070FA  0EBE               	movlw	low (_nwkFrameFrames+1)
 28416  0070FC  24F3               	addwf	243,w,c
 28417  0070FE  6ED9               	movwf	fsr2l,c
 28418  007100  0E05               	movlw	high (_nwkFrameFrames+1)
 28419  007102  20F4               	addwfc	prodh,w,c
 28420  007104  6EDA               	movwf	fsr2h,c
 28421  007106  0E10               	movlw	16
 28422  007108  6EDF               	movwf	indf2,c
 28423                           
 28424                           ;../nwk/nwk_src/nwkFrame.c: 88:       nwkFrameFrames[i].payload = nwkFrameFrames[i].data
      +                           + sizeof(NwkFrameHeader_t);
 28425  00710A  5012               	movf	nwkFrameAlloc@i^0,w,c
 28426  00710C  0D89               	mullw	137
 28427  00710E  0EBD               	movlw	low _nwkFrameFrames
 28428  007110  6E10               	movwf	??_nwkFrameAlloc^0,c
 28429  007112  0E05               	movlw	high _nwkFrameFrames
 28430  007114  6E11               	movwf	(??_nwkFrameAlloc+1)^0,c
 28431  007116  0E12               	movlw	18
 28432  007118  2610               	addwf	??_nwkFrameAlloc^0,f,c
 28433  00711A  0E00               	movlw	0
 28434  00711C  2211               	addwfc	(??_nwkFrameAlloc+1)^0,f,c
 28435  00711E  50F3               	movf	243,w,c
 28436  007120  2610               	addwf	??_nwkFrameAlloc^0,f,c
 28437  007122  50F4               	movf	244,w,c
 28438  007124  2211               	addwfc	(??_nwkFrameAlloc+1)^0,f,c
 28439  007126  5012               	movf	nwkFrameAlloc@i^0,w,c
 28440  007128  0D89               	mullw	137
 28441  00712A  0E3E               	movlw	low (_nwkFrameFrames+129)
 28442  00712C  24F3               	addwf	243,w,c
 28443  00712E  6ED9               	movwf	fsr2l,c
 28444  007130  0E06               	movlw	high (_nwkFrameFrames+129)
 28445  007132  20F4               	addwfc	prodh,w,c
 28446  007134  6EDA               	movwf	fsr2h,c
 28447  007136  0060  F043  FFDE   	movff	??_nwkFrameAlloc,postinc2
 28448  00713C  0060  F047  FFDD   	movff	??_nwkFrameAlloc+1,postdec2
 28449                           
 28450                           ;../nwk/nwk_src/nwkFrame.c: 89:       nwkIb.lock++;
 28451  007142  0101               	movlb	1	; () banked
 28452  007144  4B67               	infsnz	(_nwkIb+54)& (0+255),f,b
 28453  007146  2B68               	incf	(_nwkIb+55)& (0+255),f,b
 28454                           
 28455                           ; BSR set to: 1
 28456                           ;../nwk/nwk_src/nwkFrame.c: 90:       return &nwkFrameFrames[i];
 28457  007148  5012               	movf	nwkFrameAlloc@i^0,w,c
 28458  00714A  0D89               	mullw	137
 28459  00714C  0EBD               	movlw	low _nwkFrameFrames
 28460  00714E  24F3               	addwf	243,w,c
 28461  007150  6E0E               	movwf	?_nwkFrameAlloc^0,c
 28462  007152  0E05               	movlw	high _nwkFrameFrames
 28463  007154  20F4               	addwfc	prodh,w,c
 28464  007156  6E0F               	movwf	(?_nwkFrameAlloc+1)^0,c
 28465  007158  0012               	return	
 28466  00715A                     l15076:
 28467                           
 28468                           ;../nwk/nwk_src/nwkFrame.c: 92:   }
 28469  00715A  2A12               	incf	nwkFrameAlloc@i^0,f,c
 28470  00715C  0E04               	movlw	4
 28471  00715E  6412               	cpfsgt	nwkFrameAlloc@i^0,c
 28472  007160  D7AD               	goto	l15062
 28473                           
 28474                           ;../nwk/nwk_src/nwkFrame.c: 93:   return ((void*)0);
 28475  007162  0E00               	movlw	0
 28476  007164  6E0E               	movwf	?_nwkFrameAlloc^0,c
 28477  007166  0E00               	movlw	0
 28478  007168  6E0F               	movwf	(?_nwkFrameAlloc+1)^0,c
 28479  00716A  0012               	return		;funcret
 28480  00716C                     __end_of_nwkFrameAlloc:
 28481                           	opt callstack 0
 28482                           
 28483 ;; *************** function _memset *****************
 28484 ;; Defined at:
 28485 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memset.c"
 28486 ;; Parameters:    Size  Location     Type
 28487 ;;  dest            2    1[COMRAM] PTR void 
 28488 ;;		 -> nwkFrameFrames(685), cmdSetTX@CHstr(3), atCommand(80), tx_buffer.payload(109), 
 28489 ;;		 -> tx_buffer(524), rx_buffer.payload(109), rx_buffer(488), 
 28490 ;;  c               2    3[COMRAM] int 
 28491 ;;  n               2    5[COMRAM] unsigned int 
 28492 ;; Auto vars:     Size  Location     Type
 28493 ;;  s               2   11[COMRAM] PTR unsigned char 
 28494 ;;		 -> nwkFrameFrames(685), cmdSetTX@CHstr(3), atCommand(80), tx_buffer.payload(109), 
 28495 ;;		 -> tx_buffer(524), rx_buffer.payload(109), rx_buffer(488), 
 28496 ;;  k               2    9[COMRAM] unsigned int 
 28497 ;; Return value:  Size  Location     Type
 28498 ;;                  2    1[COMRAM] PTR void 
 28499 ;; Registers used:
 28500 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28501 ;; Tracked objects:
 28502 ;;		On entry : 0/0
 28503 ;;		On exit  : 0/0
 28504 ;;		Unchanged: 0/0
 28505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28506 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28507 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28508 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28509 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28510 ;;Total ram usage:       12 bytes
 28511 ;; Hardware stack levels used:    1
 28512 ;; Hardware stack levels required when called:    7
 28513 ;; This function calls:
 28514 ;;		Nothing
 28515 ;; This function is called by:
 28516 ;;		_appDataInd
 28517 ;;		_cmdSend
 28518 ;;		_cmdBcast
 28519 ;;		_cmdSetTX
 28520 ;;		_processATCommand
 28521 ;;		_nwkFrameAlloc
 28522 ;; This function uses a non-reentrant model
 28523 ;;
 28524                           
 28525                           	psect	text178
 28526  004978                     __ptext178:
 28527                           	opt callstack 0
 28528  004978                     _memset:
 28529                           	opt callstack 22
 28530                           
 28531                           ;incstack = 0
 28532  004978  0060  F008  F00C   	movff	memset@dest,memset@s
 28533  00497E  0060  F00C  F00D   	movff	memset@dest+1,memset@s+1
 28534  004984  5006               	movf	memset@n^0,w,c
 28535  004986  1007               	iorwf	(memset@n+1)^0,w,c
 28536  004988  B4D8               	btfsc	status,2,c
 28537  00498A  0012               	return	
 28538  00498C  0060  F033  FFD9   	movff	memset@s,fsr2l
 28539  004992  0060  F037  FFDA   	movff	memset@s+1,fsr2h
 28540  004998  0060  F013  FFDF   	movff	memset@c,indf2
 28541  00499E  5006               	movf	memset@n^0,w,c
 28542  0049A0  240C               	addwf	memset@s^0,w,c
 28543  0049A2  6E08               	movwf	??_memset^0,c
 28544  0049A4  5007               	movf	(memset@n+1)^0,w,c
 28545  0049A6  200D               	addwfc	(memset@s+1)^0,w,c
 28546  0049A8  6E09               	movwf	(??_memset+1)^0,c
 28547  0049AA  0EFF               	movlw	255
 28548  0049AC  2408               	addwf	??_memset^0,w,c
 28549  0049AE  6ED9               	movwf	fsr2l,c
 28550  0049B0  0EFF               	movlw	255
 28551  0049B2  2009               	addwfc	(??_memset+1)^0,w,c
 28552  0049B4  6EDA               	movwf	fsr2h,c
 28553  0049B6  0060  F013  FFDF   	movff	memset@c,indf2
 28554  0049BC  5007               	movf	(memset@n+1)^0,w,c
 28555  0049BE  E104               	bnz	l14876
 28556  0049C0  0E03               	movlw	3
 28557  0049C2  5C06               	subwf	memset@n^0,w,c
 28558  0049C4  A0D8               	btfss	status,0,c
 28559  0049C6  0012               	return	
 28560  0049C8                     l14876:
 28561  0049C8  EE20 F001          	lfsr	2,1
 28562  0049CC  500C               	movf	memset@s^0,w,c
 28563  0049CE  26D9               	addwf	fsr2l,f,c
 28564  0049D0  500D               	movf	(memset@s+1)^0,w,c
 28565  0049D2  22DA               	addwfc	fsr2h,f,c
 28566  0049D4  0060  F013  FFDF   	movff	memset@c,indf2
 28567  0049DA  EE20 F002          	lfsr	2,2
 28568  0049DE  500C               	movf	memset@s^0,w,c
 28569  0049E0  26D9               	addwf	fsr2l,f,c
 28570  0049E2  500D               	movf	(memset@s+1)^0,w,c
 28571  0049E4  22DA               	addwfc	fsr2h,f,c
 28572  0049E6  0060  F013  FFDF   	movff	memset@c,indf2
 28573  0049EC  5006               	movf	memset@n^0,w,c
 28574  0049EE  240C               	addwf	memset@s^0,w,c
 28575  0049F0  6E08               	movwf	??_memset^0,c
 28576  0049F2  5007               	movf	(memset@n+1)^0,w,c
 28577  0049F4  200D               	addwfc	(memset@s+1)^0,w,c
 28578  0049F6  6E09               	movwf	(??_memset+1)^0,c
 28579  0049F8  0EFE               	movlw	254
 28580  0049FA  2408               	addwf	??_memset^0,w,c
 28581  0049FC  6ED9               	movwf	fsr2l,c
 28582  0049FE  0EFF               	movlw	255
 28583  004A00  2009               	addwfc	(??_memset+1)^0,w,c
 28584  004A02  6EDA               	movwf	fsr2h,c
 28585  004A04  0060  F013  FFDF   	movff	memset@c,indf2
 28586  004A0A  5006               	movf	memset@n^0,w,c
 28587  004A0C  240C               	addwf	memset@s^0,w,c
 28588  004A0E  6E08               	movwf	??_memset^0,c
 28589  004A10  5007               	movf	(memset@n+1)^0,w,c
 28590  004A12  200D               	addwfc	(memset@s+1)^0,w,c
 28591  004A14  6E09               	movwf	(??_memset+1)^0,c
 28592  004A16  0EFD               	movlw	253
 28593  004A18  2408               	addwf	??_memset^0,w,c
 28594  004A1A  6ED9               	movwf	fsr2l,c
 28595  004A1C  0EFF               	movlw	255
 28596  004A1E  2009               	addwfc	(??_memset+1)^0,w,c
 28597  004A20  6EDA               	movwf	fsr2h,c
 28598  004A22  0060  F013  FFDF   	movff	memset@c,indf2
 28599  004A28  5007               	movf	(memset@n+1)^0,w,c
 28600  004A2A  E104               	bnz	l14882
 28601  004A2C  0E07               	movlw	7
 28602  004A2E  5C06               	subwf	memset@n^0,w,c
 28603  004A30  A0D8               	btfss	status,0,c
 28604  004A32  0012               	return	
 28605  004A34                     l14882:
 28606  004A34  EE20 F003          	lfsr	2,3
 28607  004A38  500C               	movf	memset@s^0,w,c
 28608  004A3A  26D9               	addwf	fsr2l,f,c
 28609  004A3C  500D               	movf	(memset@s+1)^0,w,c
 28610  004A3E  22DA               	addwfc	fsr2h,f,c
 28611  004A40  0060  F013  FFDF   	movff	memset@c,indf2
 28612  004A46  5006               	movf	memset@n^0,w,c
 28613  004A48  240C               	addwf	memset@s^0,w,c
 28614  004A4A  6E08               	movwf	??_memset^0,c
 28615  004A4C  5007               	movf	(memset@n+1)^0,w,c
 28616  004A4E  200D               	addwfc	(memset@s+1)^0,w,c
 28617  004A50  6E09               	movwf	(??_memset+1)^0,c
 28618  004A52  0EFC               	movlw	252
 28619  004A54  2408               	addwf	??_memset^0,w,c
 28620  004A56  6ED9               	movwf	fsr2l,c
 28621  004A58  0EFF               	movlw	255
 28622  004A5A  2009               	addwfc	(??_memset+1)^0,w,c
 28623  004A5C  6EDA               	movwf	fsr2h,c
 28624  004A5E  0060  F013  FFDF   	movff	memset@c,indf2
 28625  004A64  5007               	movf	(memset@n+1)^0,w,c
 28626  004A66  E104               	bnz	l14888
 28627  004A68  0E09               	movlw	9
 28628  004A6A  5C06               	subwf	memset@n^0,w,c
 28629  004A6C  A0D8               	btfss	status,0,c
 28630  004A6E  0012               	return	
 28631  004A70                     l14888:
 28632  004A70  0060  F030  F008   	movff	memset@s,??_memset
 28633  004A76  0060  F034  F009   	movff	memset@s+1,??_memset+1
 28634  004A7C  1E08               	comf	??_memset^0,f,c
 28635  004A7E  1E09               	comf	(??_memset+1)^0,f,c
 28636  004A80  4A08               	infsnz	??_memset^0,f,c
 28637  004A82  2A09               	incf	(??_memset+1)^0,f,c
 28638  004A84  0E03               	movlw	3
 28639  004A86  1408               	andwf	??_memset^0,w,c
 28640  004A88  6E0A               	movwf	memset@k^0,c
 28641  004A8A  6A0B               	clrf	(memset@k+1)^0,c
 28642  004A8C  500A               	movf	memset@k^0,w,c
 28643  004A8E  260C               	addwf	memset@s^0,f,c
 28644  004A90  500B               	movf	(memset@k+1)^0,w,c
 28645  004A92  220D               	addwfc	(memset@s+1)^0,f,c
 28646  004A94  500A               	movf	memset@k^0,w,c
 28647  004A96  5E06               	subwf	memset@n^0,f,c
 28648  004A98  500B               	movf	(memset@k+1)^0,w,c
 28649  004A9A  5A07               	subwfb	(memset@n+1)^0,f,c
 28650  004A9C  0EFC               	movlw	252
 28651  004A9E  1606               	andwf	memset@n^0,f,c
 28652  004AA0  0EFF               	movlw	255
 28653  004AA2  1607               	andwf	(memset@n+1)^0,f,c
 28654  004AA4  D00E               	goto	l14896
 28655  004AA6                     l14890:
 28656  004AA6  0060  F033  FFD9   	movff	memset@s,fsr2l
 28657  004AAC  0060  F037  FFDA   	movff	memset@s+1,fsr2h
 28658  004AB2  0060  F013  FFDF   	movff	memset@c,indf2
 28659  004AB8  0606               	decf	memset@n^0,f,c
 28660  004ABA  A0D8               	btfss	status,0,c
 28661  004ABC  0607               	decf	(memset@n+1)^0,f,c
 28662  004ABE  4A0C               	infsnz	memset@s^0,f,c
 28663  004AC0  2A0D               	incf	(memset@s+1)^0,f,c
 28664  004AC2                     l14896:
 28665  004AC2  5006               	movf	memset@n^0,w,c
 28666  004AC4  1007               	iorwf	(memset@n+1)^0,w,c
 28667  004AC6  B4D8               	btfsc	status,2,c
 28668  004AC8  0012               	return	
 28669  004ACA  D7ED               	goto	l14890
 28670  004ACC                     __end_of_memset:
 28671                           	opt callstack 0
 28672                           
 28673 ;; *************** function _memcpy *****************
 28674 ;; Defined at:
 28675 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memcpy.c"
 28676 ;; Parameters:    Size  Location     Type
 28677 ;;  d1              2    7[COMRAM] PTR void 
 28678 ;;		 -> nwkSecurityProcessMic@tmic(4), nwkFrameFrames..(127), nwkFrameFrames(685), nwkIb(56), 
 28679 ;;		 -> handle_led_events@temp(3), ledqueue(96), rx_buffer_queue(4), cmdSetSF@CHstr(3), 
 28680 ;;		 -> cmdSetCADRSSI@CHstr(3), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), 
 28681 ;;		 -> cmdSetAES@AESstr(32), cmdRecv@buf_id(1), NULL(0), tx_buffer.payload(109), 
 28682 ;;		 -> cmdSend@destaddr(5), tx_buffer(524), rx_buffer.payload(109), rx_buffer(488), 
 28683 ;;  s1              2    9[COMRAM] PTR const void 
 28684 ;;		 -> phyRxBuffer(128), nwkSecurityProcessMic@vmic(4), nwkFrameFrames..(127), nwkFrameFrames(685), 
 28685 ;;		 -> queueLedEvent@temp(3), ledqueue(96), rx_buffer_queue(4), STR_58(2), 
 28686 ;;		 -> STR_57(2), net_key(16), cmdSetAES@AESstr(32), atCommand(80), 
 28687 ;;		 -> NULL(0), tx_buffer(524), appDataInd@buf_id(1), 
 28688 ;;  n               2   11[COMRAM] unsigned int 
 28689 ;; Auto vars:     Size  Location     Type
 28690 ;;  s               2   16[COMRAM] PTR const unsigned char 
 28691 ;;		 -> phyRxBuffer(128), nwkSecurityProcessMic@vmic(4), nwkFrameFrames..(127), nwkFrameFrames(685), 
 28692 ;;		 -> queueLedEvent@temp(3), ledqueue(96), rx_buffer_queue(4), STR_58(2), 
 28693 ;;		 -> STR_57(2), net_key(16), cmdSetAES@AESstr(32), atCommand(80), 
 28694 ;;		 -> NULL(0), tx_buffer(524), appDataInd@buf_id(1), 
 28695 ;;  d               2   14[COMRAM] PTR unsigned char 
 28696 ;;		 -> nwkSecurityProcessMic@tmic(4), nwkFrameFrames..(127), nwkFrameFrames(685), nwkIb(56), 
 28697 ;;		 -> handle_led_events@temp(3), ledqueue(96), rx_buffer_queue(4), cmdSetSF@CHstr(3), 
 28698 ;;		 -> cmdSetCADRSSI@CHstr(3), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), 
 28699 ;;		 -> cmdSetAES@AESstr(32), cmdRecv@buf_id(1), NULL(0), tx_buffer.payload(109), 
 28700 ;;		 -> cmdSend@destaddr(5), tx_buffer(524), rx_buffer.payload(109), rx_buffer(488), 
 28701 ;;  tmp             1   13[COMRAM] unsigned char 
 28702 ;; Return value:  Size  Location     Type
 28703 ;;                  2    7[COMRAM] PTR void 
 28704 ;; Registers used:
 28705 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 28706 ;; Tracked objects:
 28707 ;;		On entry : 0/0
 28708 ;;		On exit  : 0/0
 28709 ;;		Unchanged: 0/0
 28710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28711 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28712 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28714 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28715 ;;Total ram usage:       11 bytes
 28716 ;; Hardware stack levels used:    1
 28717 ;; Hardware stack levels required when called:    7
 28718 ;; This function calls:
 28719 ;;		Nothing
 28720 ;; This function is called by:
 28721 ;;		_appDataInd
 28722 ;;		_cmdSend
 28723 ;;		_cmdBcast
 28724 ;;		_cmdSetAES
 28725 ;;		_cmdSetRFCH
 28726 ;;		_cmdSetTX
 28727 ;;		_cmdSetCADRSSI
 28728 ;;		_cmdSetSF
 28729 ;;		_CircularBufferPushBack
 28730 ;;		_CircularBufferPopFront
 28731 ;;		_nwkDataReqSendFrame
 28732 ;;		_PHY_DataInd
 28733 ;;		_NWK_SetSecurityKey
 28734 ;;		_nwkSecurityProcessMic
 28735 ;;		_nwkTxBroadcastFrame
 28736 ;; This function uses a non-reentrant model
 28737 ;;
 28738                           
 28739                           	psect	text179
 28740  007F2A                     __ptext179:
 28741                           	opt callstack 0
 28742  007F2A                     _memcpy:
 28743                           	opt callstack 19
 28744                           
 28745                           ;incstack = 0
 28746  007F2A  0060  F028  F011   	movff	memcpy@s1,memcpy@s
 28747  007F30  0060  F02C  F012   	movff	memcpy@s1+1,memcpy@s+1
 28748  007F36  0060  F020  F00F   	movff	memcpy@d1,memcpy@d
 28749  007F3C  0060  F024  F010   	movff	memcpy@d1+1,memcpy@d+1
 28750  007F42  D023               	goto	l14644
 28751  007F44                     l14636:
 28752  007F44  0060  F047  FFF6   	movff	memcpy@s,tblptrl
 28753  007F4A  0060  F04B  FFF7   	movff	memcpy@s+1,tblptrh
 28754  007F50  0E00               	movlw	low (__mediumconst shr (0+16))
 28755  007F52  6EF8               	movwf	tblptru,c
 28756  007F54  0E0F               	movlw	(high __ramtop+-1)
 28757  007F56  64F7               	cpfsgt	tblptrh,c
 28758  007F58  D003               	bra	u14017
 28759  007F5A  0008               	tblrd		*
 28760  007F5C  50F5               	movf	tablat,w,c
 28761  007F5E  D007               	bra	u14010
 28762  007F60                     u14017:
 28763  007F60  006F FFDB FFE9     	movff	tblptrl,fsr0l
 28764  007F66  006F FFDF FFEA     	movff	tblptrh,fsr0h
 28765  007F6C  50EF               	movf	indf0,w,c
 28766  007F6E                     u14010:
 28767  007F6E  6E0E               	movwf	memcpy@tmp^0,c
 28768  007F70  4A11               	infsnz	memcpy@s^0,f,c
 28769  007F72  2A12               	incf	(memcpy@s+1)^0,f,c
 28770  007F74  0060  F03F  FFD9   	movff	memcpy@d,fsr2l
 28771  007F7A  0060  F043  FFDA   	movff	memcpy@d+1,fsr2h
 28772  007F80  0060  F03B  FFDF   	movff	memcpy@tmp,indf2
 28773  007F86  4A0F               	infsnz	memcpy@d^0,f,c
 28774  007F88  2A10               	incf	(memcpy@d+1)^0,f,c
 28775  007F8A                     l14644:
 28776  007F8A  060C               	decf	memcpy@n^0,f,c
 28777  007F8C  A0D8               	btfss	status,0,c
 28778  007F8E  060D               	decf	(memcpy@n+1)^0,f,c
 28779  007F90  280C               	incf	memcpy@n^0,w,c
 28780  007F92  E1D8               	bnz	l14636
 28781  007F94  280D               	incf	(memcpy@n+1)^0,w,c
 28782  007F96  B4D8               	btfsc	status,2,c
 28783  007F98  0012               	return	
 28784  007F9A  D7D4               	goto	l14636
 28785  007F9C                     __end_of_memcpy:
 28786                           	opt callstack 0
 28787                           
 28788 ;; *************** function _nwkDataReqConfirm *****************
 28789 ;; Defined at:
 28790 ;;		line 188 in file "../nwk/nwk_src/nwkDataReq.c"
 28791 ;; Parameters:    Size  Location     Type
 28792 ;;  req             2    8[COMRAM] PTR struct NWK_DataReq_t
 28793 ;;		 -> NULL(0), tx_buffer.nwkDataReq(22), tx_buffer(524), 
 28794 ;; Auto vars:     Size  Location     Type
 28795 ;;  prev            2   12[COMRAM] PTR struct NWK_DataReq_t
 28796 ;;		 -> NULL(0), tx_buffer.nwkDataReq(22), tx_buffer(524), 
 28797 ;; Return value:  Size  Location     Type
 28798 ;;                  1    wreg      void 
 28799 ;; Registers used:
 28800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 28801 ;; Tracked objects:
 28802 ;;		On entry : 0/3D
 28803 ;;		On exit  : 0/0
 28804 ;;		Unchanged: 0/0
 28805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28807 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28808 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28809 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28810 ;;Total ram usage:        6 bytes
 28811 ;; Hardware stack levels used:    1
 28812 ;; Hardware stack levels required when called:    9
 28813 ;; This function calls:
 28814 ;;		_appDataConf
 28815 ;; This function is called by:
 28816 ;;		_nwkDataReqTaskHandler
 28817 ;; This function uses a non-reentrant model
 28818 ;;
 28819                           
 28820                           	psect	text180
 28821  005FE0                     __ptext180:
 28822                           	opt callstack 0
 28823  005FE0                     _nwkDataReqConfirm:
 28824                           	opt callstack 18
 28825                           
 28826                           ;../nwk/nwk_src/nwkDataReq.c: 188: static void nwkDataReqConfirm(NWK_DataReq_t *req);../
      +                          nwk/nwk_src/nwkDataReq.c: 189: {;../nwk/nwk_src/nwkDataReq.c: 190:   if (nwkDataReqQueue
      +                           == req)
 28827                           
 28828                           ;incstack = 0
 28829  005FE0  5009               	movf	nwkDataReqConfirm@req^0,w,c
 28830  005FE2  0100               	movlb	0	; () banked
 28831  005FE4  19C1               	xorwf	_nwkDataReqQueue& (0+255),w,b
 28832  005FE6  E111               	bnz	l11990
 28833  005FE8  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 28834  005FEA  19C2               	xorwf	(_nwkDataReqQueue+1)& (0+255),w,b
 28835  005FEC  A4D8               	btfss	status,2,c
 28836  005FEE  D00D               	goto	l11990
 28837                           
 28838                           ; BSR set to: 0
 28839                           ;../nwk/nwk_src/nwkDataReq.c: 191:   {;../nwk/nwk_src/nwkDataReq.c: 192:     nwkDataReqQ
      +                          ueue = nwkDataReqQueue->next;
 28840  005FF0  0060  F307  FFD9   	movff	_nwkDataReqQueue,fsr2l
 28841  005FF6  0060  F30B  FFDA   	movff	_nwkDataReqQueue+1,fsr2h
 28842  005FFC  006F FF78  F0C1    	movff	postinc2,_nwkDataReqQueue
 28843  006002  006F FF74  F0C2    	movff	postdec2,_nwkDataReqQueue+1
 28844                           
 28845                           ;../nwk/nwk_src/nwkDataReq.c: 193:   }
 28846  006008  D03E               	goto	l11998
 28847  00600A                     l11990:
 28848                           
 28849                           ; BSR set to: 0
 28850                           ;../nwk/nwk_src/nwkDataReq.c: 195:   {;../nwk/nwk_src/nwkDataReq.c: 196:     NWK_DataReq
      +                          _t *prev = nwkDataReqQueue;
 28851  00600A  0060  F304  F00D   	movff	_nwkDataReqQueue,nwkDataReqConfirm@prev
 28852  006010  0060  F308  F00E   	movff	_nwkDataReqQueue+1,nwkDataReqConfirm@prev+1
 28853                           
 28854                           ;../nwk/nwk_src/nwkDataReq.c: 197:     while (prev->next != req)
 28855  006016  D00C               	goto	l11994
 28856  006018                     l11992:
 28857                           
 28858                           ;../nwk/nwk_src/nwkDataReq.c: 198:       prev = prev->next;
 28859  006018  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 28860  00601E  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 28861  006024  006F FF78  F00D    	movff	postinc2,nwkDataReqConfirm@prev
 28862  00602A  006F FF74  F00E    	movff	postdec2,nwkDataReqConfirm@prev+1
 28863  006030                     l11994:
 28864                           
 28865                           ;../nwk/nwk_src/nwkDataReq.c: 197:     while (prev->next != req)
 28866  006030  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 28867  006036  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 28868  00603C  5009               	movf	nwkDataReqConfirm@req^0,w,c
 28869  00603E  18DE               	xorwf	postinc2,w,c
 28870  006040  E1EB               	bnz	l11992
 28871  006042  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 28872  006044  18DE               	xorwf	postinc2,w,c
 28873  006046  A4D8               	btfss	status,2,c
 28874  006048  D7E7               	goto	l11992
 28875                           
 28876                           ;../nwk/nwk_src/nwkDataReq.c: 199:     prev->next = ((NWK_DataReq_t *)prev->next)->next;
 28877  00604A  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 28878  006050  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 28879  006056  006F FF78  F00B    	movff	postinc2,??_nwkDataReqConfirm
 28880  00605C  006F FF74  F00C    	movff	postdec2,??_nwkDataReqConfirm+1
 28881  006062  0060  F02F  FFD9   	movff	??_nwkDataReqConfirm,fsr2l
 28882  006068  0060  F033  FFDA   	movff	??_nwkDataReqConfirm+1,fsr2h
 28883  00606E  0060  F037  FFE1   	movff	nwkDataReqConfirm@prev,fsr1l
 28884  006074  0060  F03B  FFE2   	movff	nwkDataReqConfirm@prev+1,fsr1h
 28885  00607A  006F FF7B FFE6     	movff	postinc2,postinc1
 28886  006080  006F FF77 FFE5     	movff	postdec2,postdec1
 28887  006086                     l11998:
 28888                           
 28889                           ;../nwk/nwk_src/nwkDataReq.c: 202:   nwkIb.lock--;
 28890  006086  0101               	movlb	1	; () banked
 28891  006088  0767               	decf	(_nwkIb+54)& (0+255),f,b
 28892  00608A  A0D8               	btfss	status,0,c
 28893  00608C  0768               	decf	(_nwkIb+55)& (0+255),f,b
 28894                           
 28895                           ; BSR set to: 1
 28896                           ;../nwk/nwk_src/nwkDataReq.c: 203:   req->confirm(req);
 28897  00608E  0060  F024  F007   	movff	nwkDataReqConfirm@req,appDataConf@req
 28898  006094  0060  F028  F008   	movff	nwkDataReqConfirm@req+1,appDataConf@req+1
 28899  00609A  EE20 F00F          	lfsr	2,15
 28900  00609E  5009               	movf	nwkDataReqConfirm@req^0,w,c
 28901  0060A0  26D9               	addwf	fsr2l,f,c
 28902  0060A2  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 28903  0060A4  22DA               	addwfc	fsr2h,f,c
 28904  0060A6  006F FF78  F00B    	movff	postinc2,??_nwkDataReqConfirm
 28905  0060AC  006F FF74  F00C    	movff	postdec2,??_nwkDataReqConfirm+1
 28906  0060B2  D801               	call	u11008
 28907  0060B4  0012               	return	
 28908  0060B6                     u11008:
 28909  0060B6  0005               	push	
 28910  0060B8  6EFA               	movwf	pclath,c
 28911  0060BA  500B               	movf	??_nwkDataReqConfirm^0,w,c
 28912  0060BC  6EFD               	movwf	tosl,c
 28913  0060BE  500C               	movf	(??_nwkDataReqConfirm+1)^0,w,c
 28914  0060C0  6EFE               	movwf	tosh,c
 28915  0060C2  6AFF               	clrf	tosu,c
 28916  0060C4  50FA               	movf	pclath,w,c
 28917  0060C6  0012               	return		;indir
 28918  0060C8                     __end_of_nwkDataReqConfirm:
 28919                           	opt callstack 0
 28920                           
 28921 ;; *************** function _appDataConf *****************
 28922 ;; Defined at:
 28923 ;;		line 34 in file "../app/app_src/application.c"
 28924 ;; Parameters:    Size  Location     Type
 28925 ;;  req             2    6[COMRAM] PTR struct NWK_DataReq_t
 28926 ;;		 -> NULL(0), tx_buffer.nwkDataReq(22), tx_buffer(524), 
 28927 ;; Auto vars:     Size  Location     Type
 28928 ;;		None
 28929 ;; Return value:  Size  Location     Type
 28930 ;;                  1    wreg      void 
 28931 ;; Registers used:
 28932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28933 ;; Tracked objects:
 28934 ;;		On entry : 3F/1
 28935 ;;		On exit  : 0/0
 28936 ;;		Unchanged: 0/0
 28937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28938 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28941 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28942 ;;Total ram usage:        2 bytes
 28943 ;; Hardware stack levels used:    1
 28944 ;; Hardware stack levels required when called:    8
 28945 ;; This function calls:
 28946 ;;		_free_tx_buffer
 28947 ;; This function is called by:
 28948 ;;		_cmdSend
 28949 ;;		_cmdBcast
 28950 ;;		_nwkDataReqConfirm
 28951 ;; This function uses a non-reentrant model
 28952 ;;
 28953                           
 28954                           	psect	text181
 28955  009526                     __ptext181:
 28956                           	opt callstack 0
 28957  009526                     _appDataConf:
 28958                           	opt callstack 18
 28959                           
 28960                           ; BSR set to: 1
 28961                           ;../app/app_src/application.c: 34: void appDataConf(NWK_DataReq_t *req);../app/app_src/a
      +                          pplication.c: 35: {;../app/app_src/application.c: 36:  if (NWK_SUCCESS_STATUS == req->st
      +                          atus){
 28962                           
 28963                           ;incstack = 0
 28964  009526  EE20 F011          	lfsr	2,17
 28965  00952A  5007               	movf	appDataConf@req^0,w,c
 28966  00952C  26D9               	addwf	fsr2l,f,c
 28967  00952E  5008               	movf	(appDataConf@req+1)^0,w,c
 28968  009530  22DA               	addwfc	fsr2h,f,c
 28969  009532  50DF               	movf	indf2,w,c
 28970                           
 28971                           ; BSR set to: 1
 28972                           
 28973                           ;../app/app_src/application.c: 40:  else{
 28974                           
 28975                           ;../app/app_src/application.c: 39:  }
 28976                           
 28977                           ; BSR set to: 1
 28978  009534  F000               	nop		;# 
 28979                           
 28980                           ;../app/app_src/application.c: 44:  free_tx_buffer(req);
 28981  009536  0060  F01C  F002   	movff	appDataConf@req,free_tx_buffer@req
 28982  00953C  0060  F020  F003   	movff	appDataConf@req+1,free_tx_buffer@req+1
 28983  009542  EC08  F046         	call	_free_tx_buffer	;wreg free
 28984  009546  0012               	return		;funcret
 28985  009548                     __end_of_appDataConf:
 28986                           	opt callstack 0
 28987                           
 28988 ;; *************** function _free_tx_buffer *****************
 28989 ;; Defined at:
 28990 ;;		line 73 in file "../app/app_src/application.c"
 28991 ;; Parameters:    Size  Location     Type
 28992 ;;  req             2    1[COMRAM] PTR struct NWK_DataReq_t
 28993 ;;		 -> NULL(0), tx_buffer.nwkDataReq(22), tx_buffer(524), 
 28994 ;; Auto vars:     Size  Location     Type
 28995 ;;  buf_id          1    5[COMRAM] unsigned char 
 28996 ;; Return value:  Size  Location     Type
 28997 ;;                  1    wreg      void 
 28998 ;; Registers used:
 28999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29000 ;; Tracked objects:
 29001 ;;		On entry : 0/1
 29002 ;;		On exit  : 0/0
 29003 ;;		Unchanged: 0/0
 29004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29005 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29007 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29008 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29009 ;;Total ram usage:        5 bytes
 29010 ;; Hardware stack levels used:    1
 29011 ;; Hardware stack levels required when called:    7
 29012 ;; This function calls:
 29013 ;;		Nothing
 29014 ;; This function is called by:
 29015 ;;		_appDataConf
 29016 ;; This function uses a non-reentrant model
 29017 ;;
 29018                           
 29019                           	psect	text182
 29020  008C10                     __ptext182:
 29021                           	opt callstack 0
 29022  008C10                     _free_tx_buffer:
 29023                           	opt callstack 18
 29024                           
 29025                           ;../app/app_src/application.c: 74:     uint8_t buf_id = 0;
 29026                           
 29027                           ;incstack = 0
 29028  008C10  0E00               	movlw	0
 29029  008C12  6E06               	movwf	free_tx_buffer@buf_id^0,c
 29030                           
 29031                           ;../app/app_src/application.c: 76:     while(buf_id < 4){
 29032  008C14  D01A               	goto	l10224
 29033  008C16                     l10216:
 29034                           
 29035                           ;../app/app_src/application.c: 77:         if(req == &tx_buffer[buf_id].nwkDataReq){
 29036  008C16  5006               	movf	free_tx_buffer@buf_id^0,w,c
 29037  008C18  0D83               	mullw	131
 29038  008C1A  0E6D               	movlw	low (_tx_buffer+3)
 29039  008C1C  24F3               	addwf	243,w,c
 29040  008C1E  6E04               	movwf	??_free_tx_buffer^0,c
 29041  008C20  0E08               	movlw	high (_tx_buffer+3)
 29042  008C22  20F4               	addwfc	prodh,w,c
 29043  008C24  6E05               	movwf	(??_free_tx_buffer+1)^0,c
 29044  008C26  5004               	movf	??_free_tx_buffer^0,w,c
 29045  008C28  1802               	xorwf	free_tx_buffer@req^0,w,c
 29046  008C2A  E10E               	bnz	l10222
 29047  008C2C  5005               	movf	(??_free_tx_buffer+1)^0,w,c
 29048  008C2E  1803               	xorwf	(free_tx_buffer@req+1)^0,w,c
 29049  008C30  A4D8               	btfss	status,2,c
 29050  008C32  D00A               	goto	l10222
 29051                           
 29052                           ;../app/app_src/application.c: 79:             tx_buffer[buf_id].free = 1;
 29053  008C34  5006               	movf	free_tx_buffer@buf_id^0,w,c
 29054  008C36  0D83               	mullw	131
 29055  008C38  0E6A               	movlw	low _tx_buffer
 29056  008C3A  24F3               	addwf	243,w,c
 29057  008C3C  6ED9               	movwf	fsr2l,c
 29058  008C3E  0E08               	movlw	high _tx_buffer
 29059  008C40  20F4               	addwfc	prodh,w,c
 29060  008C42  6EDA               	movwf	fsr2h,c
 29061  008C44  84DF               	bsf	indf2,2,c
 29062  008C46  0012               	return	
 29063  008C48                     l10222:
 29064                           
 29065                           ;../app/app_src/application.c: 82:         buf_id++;
 29066  008C48  2A06               	incf	free_tx_buffer@buf_id^0,f,c
 29067  008C4A                     l10224:
 29068                           
 29069                           ;../app/app_src/application.c: 76:     while(buf_id < 4){
 29070  008C4A  0E03               	movlw	3
 29071  008C4C  6406               	cpfsgt	free_tx_buffer@buf_id^0,c
 29072  008C4E  D7E3               	goto	l10216
 29073  008C50  0012               	return	
 29074  008C52                     __end_of_free_tx_buffer:
 29075                           	opt callstack 0
 29076                           
 29077 ;; *************** function _SYS_Init *****************
 29078 ;; Defined at:
 29079 ;;		line 58 in file "../sys/sys_src/sys.c"
 29080 ;; Parameters:    Size  Location     Type
 29081 ;;		None
 29082 ;; Auto vars:     Size  Location     Type
 29083 ;;		None
 29084 ;; Return value:  Size  Location     Type
 29085 ;;                  1    wreg      void 
 29086 ;; Registers used:
 29087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29088 ;; Tracked objects:
 29089 ;;		On entry : 3B/3D
 29090 ;;		On exit  : 3F/0
 29091 ;;		Unchanged: 0/0
 29092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29097 ;;Total ram usage:        0 bytes
 29098 ;; Hardware stack levels used:    1
 29099 ;; Hardware stack levels required when called:   15
 29100 ;; This function calls:
 29101 ;;		_NWK_Init
 29102 ;;		_PHY_Init
 29103 ;;		_SYS_TimerInit
 29104 ;; This function is called by:
 29105 ;;		_main
 29106 ;; This function uses a non-reentrant model
 29107 ;;
 29108                           
 29109                           	psect	text183
 29110  009958                     __ptext183:
 29111                           	opt callstack 0
 29112  009958                     _SYS_Init:
 29113                           	opt callstack 15
 29114                           
 29115                           ;../sys/sys_src/sys.c: 60:   SYS_TimerInit();
 29116                           
 29117                           ;incstack = 0
 29118  009958  ECE3  F04C         	call	_SYS_TimerInit	;wreg free
 29119                           
 29120                           ; BSR set to: 0
 29121                           ;../sys/sys_src/sys.c: 61:   PHY_Init();
 29122  00995C  EC06  F04D         	call	_PHY_Init	;wreg free
 29123                           
 29124                           ; BSR set to: 1
 29125                           ;../sys/sys_src/sys.c: 62:   NWK_Init();
 29126  009960  ECE7  F042         	call	_NWK_Init	;wreg free
 29127                           
 29128                           ; BSR set to: 0
 29129  009964  0012               	return		;funcret
 29130  009966                     __end_of_SYS_Init:
 29131                           	opt callstack 0
 29132                           
 29133 ;; *************** function _SYS_TimerInit *****************
 29134 ;; Defined at:
 29135 ;;		line 63 in file "../sys/sys_src/sysTimer.c"
 29136 ;; Parameters:    Size  Location     Type
 29137 ;;		None
 29138 ;; Auto vars:     Size  Location     Type
 29139 ;;		None
 29140 ;; Return value:  Size  Location     Type
 29141 ;;                  1    wreg      void 
 29142 ;; Registers used:
 29143 ;;		wreg, status,2, status,0
 29144 ;; Tracked objects:
 29145 ;;		On entry : 3B/3D
 29146 ;;		On exit  : 3F/0
 29147 ;;		Unchanged: 0/0
 29148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29153 ;;Total ram usage:        0 bytes
 29154 ;; Hardware stack levels used:    1
 29155 ;; Hardware stack levels required when called:    7
 29156 ;; This function calls:
 29157 ;;		Nothing
 29158 ;; This function is called by:
 29159 ;;		_SYS_Init
 29160 ;; This function uses a non-reentrant model
 29161 ;;
 29162                           
 29163                           	psect	text184
 29164  0099C6                     __ptext184:
 29165                           	opt callstack 0
 29166  0099C6                     _SYS_TimerInit:
 29167                           	opt callstack 22
 29168                           
 29169                           ;../sys/sys_src/sysTimer.c: 65:   timers = ((void*)0);
 29170                           
 29171                           ; BSR set to: 0
 29172                           ;incstack = 0
 29173  0099C6  0E00               	movlw	0
 29174  0099C8  0100               	movlb	0	; () banked
 29175  0099CA  6FBB               	movwf	_timers& (0+255),b
 29176  0099CC  0E00               	movlw	0
 29177  0099CE  6FBC               	movwf	(_timers+1)& (0+255),b
 29178                           
 29179                           ; BSR set to: 0
 29180  0099D0  0012               	return		;funcret
 29181  0099D2                     __end_of_SYS_TimerInit:
 29182                           	opt callstack 0
 29183                           
 29184 ;; *************** function _PHY_Init *****************
 29185 ;; Defined at:
 29186 ;;		line 810 in file "../phy/sx1216/phy_src/phy.c"
 29187 ;; Parameters:    Size  Location     Type
 29188 ;;		None
 29189 ;; Auto vars:     Size  Location     Type
 29190 ;;		None
 29191 ;; Return value:  Size  Location     Type
 29192 ;;                  1    wreg      void 
 29193 ;; Registers used:
 29194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29195 ;; Tracked objects:
 29196 ;;		On entry : 3F/0
 29197 ;;		On exit  : 3F/1
 29198 ;;		Unchanged: 0/0
 29199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29204 ;;Total ram usage:        0 bytes
 29205 ;; Hardware stack levels used:    1
 29206 ;; Hardware stack levels required when called:   14
 29207 ;; This function calls:
 29208 ;;		_initRadio
 29209 ;; This function is called by:
 29210 ;;		_SYS_Init
 29211 ;; This function uses a non-reentrant model
 29212 ;;
 29213                           
 29214                           	psect	text185
 29215  009A0C                     __ptext185:
 29216                           	opt callstack 0
 29217  009A0C                     _PHY_Init:
 29218                           	opt callstack 15
 29219                           
 29220                           ; BSR set to: 0
 29221                           ;../phy/sx1216/phy_src/phy.c: 811:     initRadio();
 29222                           
 29223                           ; BSR set to: 0
 29224                           ;incstack = 0
 29225  009A0C  EC61  F023         	call	_initRadio	;wreg free
 29226                           
 29227                           ; BSR set to: 1
 29228  009A10  0012               	return		;funcret
 29229  009A12                     __end_of_PHY_Init:
 29230                           	opt callstack 0
 29231                           
 29232 ;; *************** function _initRadio *****************
 29233 ;; Defined at:
 29234 ;;		line 444 in file "../phy/sx1216/phy_src/phy.c"
 29235 ;; Parameters:    Size  Location     Type
 29236 ;;		None
 29237 ;; Auto vars:     Size  Location     Type
 29238 ;;  BWset           4    0        unsigned long 
 29239 ;;  wideRSSI        2   55[COMRAM] unsigned short 
 29240 ;;  version         1   54[COMRAM] unsigned char 
 29241 ;; Return value:  Size  Location     Type
 29242 ;;                  1    wreg      void 
 29243 ;; Registers used:
 29244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29245 ;; Tracked objects:
 29246 ;;		On entry : 0/0
 29247 ;;		On exit  : 3F/1
 29248 ;;		Unchanged: 0/0
 29249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29251 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29252 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29253 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29254 ;;Total ram usage:        7 bytes
 29255 ;; Hardware stack levels used:    1
 29256 ;; Hardware stack levels required when called:   13
 29257 ;; This function calls:
 29258 ;;		_SX1276Read
 29259 ;;		_SX1276Write
 29260 ;;		_computeFRF
 29261 ;;		_enableCrc
 29262 ;;		_explicitHeaderMode
 29263 ;;		_receive
 29264 ;;		_setCodingRate4
 29265 ;;		_setFrequency
 29266 ;;		_setPreambleLength
 29267 ;;		_setSignalBandwidth
 29268 ;;		_setSpreadingFactor
 29269 ;;		_setTxPower
 29270 ;;		_srand
 29271 ;; This function is called by:
 29272 ;;		_cmdSetNaddr
 29273 ;;		_cmdSetRFCH
 29274 ;;		_cmdSetTX
 29275 ;;		_cmdSetCADRSSI
 29276 ;;		_cmdSetSF
 29277 ;;		_radio_engine
 29278 ;;		_PHY_Init
 29279 ;; This function uses a non-reentrant model
 29280 ;;
 29281                           
 29282                           	psect	text186
 29283  0046C2                     __ptext186:
 29284                           	opt callstack 0
 29285  0046C2                     _initRadio:
 29286                           	opt callstack 14
 29287                           
 29288                           ; BSR set to: 1
 29289                           ;incstack = 0
 29290                           ;../phy/sx1216/phy_src/phy.c: 446:     uint8_t version;;../phy/sx1216/phy_src/phy.c: 447
      +                          :     uint32_t BWset;;../phy/sx1216/phy_src/phy.c: 448:     uint16_t wideRSSI;;../phy/sx
      +                          1216/phy_src/phy.c: 450:     do { LATCbits.LATC5 = 0; } while(0);
 29291  0046C2  9ABC               	bcf	188,5,c	;volatile
 29292                           
 29293                           ;../phy/sx1216/phy_src/phy.c: 451:     _delay((unsigned long)((100)*(64000000/4000.0)));
 29294  0046C4  0E09               	movlw	9
 29295  0046C6  6E34               	movwf	(??_initRadio+1)^0,c
 29296  0046C8  0E1E               	movlw	30
 29297  0046CA  6E33               	movwf	??_initRadio^0,c
 29298  0046CC  0EE4               	movlw	228
 29299  0046CE                     u18047:
 29300  0046CE  2EE8               	decfsz	wreg,f,c
 29301  0046D0  D7FE               	bra	u18047
 29302  0046D2  2E33               	decfsz	??_initRadio^0,f,c
 29303  0046D4  D7FC               	bra	u18047
 29304  0046D6  2E34               	decfsz	(??_initRadio+1)^0,f,c
 29305  0046D8  D7FA               	bra	u18047
 29306  0046DA  D000               	nop2	
 29307  0046DC  8ABC               	bsf	188,5,c	;volatile
 29308                           
 29309                           ;../phy/sx1216/phy_src/phy.c: 453:     computeFRF();
 29310  0046DE  EC77  F020         	call	_computeFRF	;wreg free
 29311                           
 29312                           ;../phy/sx1216/phy_src/phy.c: 454:     _delay((unsigned long)((500)*(64000000/4000.0)));
 29313  0046E2  0E29               	movlw	41
 29314  0046E4  6E34               	movwf	(??_initRadio+1)^0,c
 29315  0046E6  0E96               	movlw	150
 29316  0046E8  6E33               	movwf	??_initRadio^0,c
 29317  0046EA  0E7F               	movlw	127
 29318  0046EC                     u18057:
 29319  0046EC  2EE8               	decfsz	wreg,f,c
 29320  0046EE  D7FE               	bra	u18057
 29321  0046F0  2E33               	decfsz	??_initRadio^0,f,c
 29322  0046F2  D7FC               	bra	u18057
 29323  0046F4  2E34               	decfsz	(??_initRadio+1)^0,f,c
 29324  0046F6  D7FA               	bra	u18057
 29325  0046F8  F000               	nop	
 29326                           
 29327                           ;../phy/sx1216/phy_src/phy.c: 456:     version = SX1276Read(0x42);
 29328  0046FA  0E42               	movlw	66
 29329  0046FC  EC24  F04C         	call	_SX1276Read
 29330  004700  6E37               	movwf	initRadio@version^0,c
 29331                           
 29332                           ; BSR set to: 61
 29333                           ;../phy/sx1216/phy_src/phy.c: 457:     version++;
 29334  004702  2A37               	incf	initRadio@version^0,f,c
 29335                           
 29336                           ; BSR set to: 61
 29337                           ;../phy/sx1216/phy_src/phy.c: 458:     SX1276Write(0x01,0x00);
 29338  004704  0E00               	movlw	0
 29339  004706  6E0F               	movwf	SX1276Write@data^0,c
 29340  004708  0E01               	movlw	1
 29341  00470A  EC54  F04C         	call	_SX1276Write
 29342                           
 29343                           ; BSR set to: 61
 29344                           ;../phy/sx1216/phy_src/phy.c: 459:     SX1276Write(0x01,0x80);
 29345  00470E  0E80               	movlw	128
 29346  004710  6E0F               	movwf	SX1276Write@data^0,c
 29347  004712  0E01               	movlw	1
 29348  004714  EC54  F04C         	call	_SX1276Write
 29349                           
 29350                           ; BSR set to: 61
 29351                           ;../phy/sx1216/phy_src/phy.c: 461:     setFrequency(fhssList[0]);
 29352  004718  0EAB               	movlw	low _fhssList
 29353  00471A  6EF6               	movwf	tblptrl,c
 29354  00471C                     	if	1	;There is more than 1 active tblptr byte
 29355  00471C  0EFC               	movlw	high _fhssList
 29356  00471E  6EF7               	movwf	tblptrh,c
 29357  004720                     	endif
 29358  004720                     	if	1	;There are 3 active tblptr bytes
 29359  004720  0E00               	movlw	low (_fhssList shr (0+16))
 29360  004722  6EF8               	movwf	tblptru,c
 29361  004724                     	endif
 29362  004724  0009               	tblrd		*+
 29363  004726  006F FFD4  F023    	movff	tablat,setFrequency@frequency
 29364  00472C  0009               	tblrd		*+
 29365  00472E  006F FFD4  F024    	movff	tablat,setFrequency@frequency+1
 29366  004734  0009               	tblrd		*+
 29367  004736  006F FFD4  F025    	movff	tablat,setFrequency@frequency+2
 29368  00473C  000A               	tblrd		*-
 29369  00473E  006F FFD4  F026    	movff	tablat,setFrequency@frequency+3
 29370  004744  EC38  F027         	call	_setFrequency	;wreg free
 29371                           
 29372                           ; BSR set to: 61
 29373                           ;../phy/sx1216/phy_src/phy.c: 462:     setSpreadingFactor(7);
 29374  004748  0E07               	movlw	7
 29375  00474A  EC9B  F02B         	call	_setSpreadingFactor
 29376                           
 29377                           ;../phy/sx1216/phy_src/phy.c: 463:     setTxPower(17);
 29378  00474E  0E11               	movlw	17
 29379  004750  ECB3  F049         	call	_setTxPower
 29380                           
 29381                           ; BSR set to: 61
 29382                           ;../phy/sx1216/phy_src/phy.c: 464:     setSignalBandwidth(500E3);
 29383  004754  0E20               	movlw	32
 29384  004756  6E23               	movwf	setSignalBandwidth@sbw^0,c
 29385  004758  0EA1               	movlw	161
 29386  00475A  6E24               	movwf	(setSignalBandwidth@sbw+1)^0,c
 29387  00475C  0E07               	movlw	7
 29388  00475E  6E25               	movwf	(setSignalBandwidth@sbw+2)^0,c
 29389  004760  0E00               	movlw	0
 29390  004762  6E26               	movwf	(setSignalBandwidth@sbw+3)^0,c
 29391  004764  EC74  F007         	call	_setSignalBandwidth	;wreg free
 29392                           
 29393                           ;../phy/sx1216/phy_src/phy.c: 465:     explicitHeaderMode();
 29394  004768  EC0C  F04C         	call	_explicitHeaderMode	;wreg free
 29395                           
 29396                           ; BSR set to: 61
 29397                           ;../phy/sx1216/phy_src/phy.c: 466:     setCodingRate4(4);
 29398  00476C  0E04               	movlw	4
 29399  00476E  EC5E  F048         	call	_setCodingRate4
 29400                           
 29401                           ; BSR set to: 61
 29402                           ;../phy/sx1216/phy_src/phy.c: 467:     setPreambleLength(12);
 29403  004772  0E00               	movlw	0
 29404  004774  6E12               	movwf	(setPreambleLength@length+1)^0,c
 29405  004776  0E0C               	movlw	12
 29406  004778  6E11               	movwf	setPreambleLength@length^0,c
 29407  00477A  ECA9  F04B         	call	_setPreambleLength	;wreg free
 29408                           
 29409                           ; BSR set to: 61
 29410                           ;../phy/sx1216/phy_src/phy.c: 468:     enableCrc();
 29411  00477E  EC4B  F04C         	call	_enableCrc	;wreg free
 29412                           
 29413                           ; BSR set to: 61
 29414                           ;../phy/sx1216/phy_src/phy.c: 469:     SX1276Write(0x0E, 0x0);
 29415  004782  0E00               	movlw	0
 29416  004784  6E0F               	movwf	SX1276Write@data^0,c
 29417  004786  0E0E               	movlw	14
 29418  004788  EC54  F04C         	call	_SX1276Write
 29419                           
 29420                           ; BSR set to: 61
 29421                           ;../phy/sx1216/phy_src/phy.c: 470:     SX1276Write(0x0F, 0);
 29422  00478C  0E00               	movlw	0
 29423  00478E  6E0F               	movwf	SX1276Write@data^0,c
 29424  004790  0E0F               	movlw	15
 29425  004792  EC54  F04C         	call	_SX1276Write
 29426                           
 29427                           ; BSR set to: 61
 29428                           ;../phy/sx1216/phy_src/phy.c: 473:     SX1276Write(0x0C, SX1276Read(0x0C) | 0x03);
 29429  004796  0E0C               	movlw	12
 29430  004798  EC24  F04C         	call	_SX1276Read
 29431  00479C  0903               	iorlw	3
 29432  00479E  6E0F               	movwf	SX1276Write@data^0,c
 29433  0047A0  0E0C               	movlw	12
 29434  0047A2  EC54  F04C         	call	_SX1276Write
 29435                           
 29436                           ; BSR set to: 61
 29437                           ;../phy/sx1216/phy_src/phy.c: 476:     SX1276Write(0x26, 0x04);
 29438  0047A6  0E04               	movlw	4
 29439  0047A8  6E0F               	movwf	SX1276Write@data^0,c
 29440  0047AA  0E26               	movlw	38
 29441  0047AC  EC54  F04C         	call	_SX1276Write
 29442                           
 29443                           ; BSR set to: 61
 29444                           ;../phy/sx1216/phy_src/phy.c: 479:     SX1276Write(0x36,0x02);
 29445  0047B0  0E02               	movlw	2
 29446  0047B2  6E0F               	movwf	SX1276Write@data^0,c
 29447  0047B4  0E36               	movlw	54
 29448  0047B6  EC54  F04C         	call	_SX1276Write
 29449                           
 29450                           ; BSR set to: 61
 29451                           ;../phy/sx1216/phy_src/phy.c: 480:     SX1276Write(0x3A,0x64);
 29452  0047BA  0E64               	movlw	100
 29453  0047BC  6E0F               	movwf	SX1276Write@data^0,c
 29454  0047BE  0E3A               	movlw	58
 29455  0047C0  EC54  F04C         	call	_SX1276Write
 29456                           
 29457                           ; BSR set to: 61
 29458                           ;../phy/sx1216/phy_src/phy.c: 492:     SX1276Write(0x1F,255);
 29459  0047C4  0EFF               	movlw	255
 29460  0047C6  6E0F               	movwf	SX1276Write@data^0,c
 29461  0047C8  0E1F               	movlw	31
 29462  0047CA  EC54  F04C         	call	_SX1276Write
 29463                           
 29464                           ; BSR set to: 61
 29465                           ;../phy/sx1216/phy_src/phy.c: 494:     receive(0);
 29466  0047CE  0E00               	movlw	0
 29467  0047D0  ECE5  F046         	call	_receive
 29468                           
 29469                           ; BSR set to: 61
 29470                           ;../phy/sx1216/phy_src/phy.c: 496:     _delay((unsigned long)((100)*(64000000/4000.0)));
 29471  0047D4  0E09               	movlw	9
 29472  0047D6  6E34               	movwf	(??_initRadio+1)^0,c
 29473  0047D8  0E1E               	movlw	30
 29474  0047DA  6E33               	movwf	??_initRadio^0,c
 29475  0047DC  0EE4               	movlw	228
 29476  0047DE                     u18067:
 29477  0047DE  2EE8               	decfsz	wreg,f,c
 29478  0047E0  D7FE               	bra	u18067
 29479  0047E2  2E33               	decfsz	??_initRadio^0,f,c
 29480  0047E4  D7FC               	bra	u18067
 29481  0047E6  2E34               	decfsz	(??_initRadio+1)^0,f,c
 29482  0047E8  D7FA               	bra	u18067
 29483  0047EA  D000               	nop2	
 29484                           
 29485                           ;../phy/sx1216/phy_src/phy.c: 498:     wideRSSI = (SX1276Read(0x2C)<<8) + SX1276Read(0x2
      +                          C);
 29486  0047EC  0E2C               	movlw	44
 29487  0047EE  EC24  F04C         	call	_SX1276Read
 29488  0047F2  6E33               	movwf	??_initRadio^0,c
 29489  0047F4  0E2C               	movlw	44
 29490  0047F6  EC24  F04C         	call	_SX1276Read
 29491  0047FA  6E34               	movwf	(??_initRadio+1)^0,c
 29492  0047FC  5034               	movf	(??_initRadio+1)^0,w,c
 29493  0047FE  6E36               	movwf	(??_initRadio+3)^0,c
 29494  004800  6A35               	clrf	(??_initRadio+2)^0,c
 29495  004802  5033               	movf	??_initRadio^0,w,c
 29496  004804  2435               	addwf	(??_initRadio+2)^0,w,c
 29497  004806  6E38               	movwf	initRadio@wideRSSI^0,c
 29498  004808  0E00               	movlw	0
 29499  00480A  2036               	addwfc	(??_initRadio+3)^0,w,c
 29500  00480C  6E39               	movwf	(initRadio@wideRSSI+1)^0,c
 29501                           
 29502                           ; BSR set to: 61
 29503                           ;../phy/sx1216/phy_src/phy.c: 500:     srand(wideRSSI);
 29504  00480E  0060  F0E0  F002   	movff	initRadio@wideRSSI,srand@s
 29505  004814  0060  F0E4  F003   	movff	initRadio@wideRSSI+1,srand@s+1
 29506  00481A  ECF0  F047         	call	_srand	;wreg free
 29507                           
 29508                           ; BSR set to: 1
 29509  00481E  0012               	return		;funcret
 29510  004820                     __end_of_initRadio:
 29511                           	opt callstack 0
 29512                           
 29513 ;; *************** function _srand *****************
 29514 ;; Defined at:
 29515 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
 29516 ;; Parameters:    Size  Location     Type
 29517 ;;  s               2    1[COMRAM] unsigned int 
 29518 ;; Auto vars:     Size  Location     Type
 29519 ;;		None
 29520 ;; Return value:  Size  Location     Type
 29521 ;;                  1    wreg      void 
 29522 ;; Registers used:
 29523 ;;		wreg, status,2, status,0
 29524 ;; Tracked objects:
 29525 ;;		On entry : 3F/3D
 29526 ;;		On exit  : 3F/1
 29527 ;;		Unchanged: 0/0
 29528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29531 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29532 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29533 ;;Total ram usage:        6 bytes
 29534 ;; Hardware stack levels used:    1
 29535 ;; Hardware stack levels required when called:    7
 29536 ;; This function calls:
 29537 ;;		Nothing
 29538 ;; This function is called by:
 29539 ;;		_initRadio
 29540 ;; This function uses a non-reentrant model
 29541 ;;
 29542                           
 29543                           	psect	text187
 29544  008FE0                     __ptext187:
 29545                           	opt callstack 0
 29546  008FE0                     _srand:
 29547                           	opt callstack 19
 29548                           
 29549                           ; BSR set to: 61
 29550                           
 29551                           ; BSR set to: 1
 29552                           ;incstack = 0
 29553  008FE0  0EFF               	movlw	255
 29554  008FE2  6E04               	movwf	??_srand^0,c
 29555  008FE4  0EFF               	movlw	255
 29556  008FE6  6E05               	movwf	(??_srand+1)^0,c
 29557  008FE8  0060  F008  F006   	movff	srand@s,??_srand+2
 29558  008FEE  0060  F00C  F007   	movff	srand@s+1,??_srand+3
 29559  008FF4  5004               	movf	??_srand^0,w,c
 29560  008FF6  2606               	addwf	(??_srand+2)^0,f,c
 29561  008FF8  5005               	movf	(??_srand+1)^0,w,c
 29562  008FFA  2207               	addwfc	(??_srand+3)^0,f,c
 29563  008FFC  0060  F018  F1D0   	movff	??_srand+2,_seed
 29564  009002  0060  F01C  F1D1   	movff	??_srand+3,_seed+1
 29565  009008  0101               	movlb	1	; () banked
 29566  00900A  6BD2               	clrf	(_seed+2)& (0+255),b
 29567  00900C  6BD3               	clrf	(_seed+3)& (0+255),b
 29568  00900E  6BD4               	clrf	(_seed+4)& (0+255),b
 29569  009010  6BD5               	clrf	(_seed+5)& (0+255),b
 29570  009012  6BD6               	clrf	(_seed+6)& (0+255),b
 29571  009014  6BD7               	clrf	(_seed+7)& (0+255),b
 29572                           
 29573                           ; BSR set to: 1
 29574  009016  0012               	return		;funcret
 29575  009018                     __end_of_srand:
 29576                           	opt callstack 0
 29577                           
 29578 ;; *************** function _setTxPower *****************
 29579 ;; Defined at:
 29580 ;;		line 139 in file "../phy/sx1216/phy_src/phy.c"
 29581 ;; Parameters:    Size  Location     Type
 29582 ;;  power           1    wreg     unsigned char 
 29583 ;; Auto vars:     Size  Location     Type
 29584 ;;  power           1   16[COMRAM] unsigned char 
 29585 ;; Return value:  Size  Location     Type
 29586 ;;                  1    wreg      void 
 29587 ;; Registers used:
 29588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29589 ;; Tracked objects:
 29590 ;;		On entry : 0/3D
 29591 ;;		On exit  : 3F/3D
 29592 ;;		Unchanged: 0/0
 29593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29597 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29598 ;;Total ram usage:        1 bytes
 29599 ;; Hardware stack levels used:    1
 29600 ;; Hardware stack levels required when called:   11
 29601 ;; This function calls:
 29602 ;;		_SX1276Write
 29603 ;; This function is called by:
 29604 ;;		_initRadio
 29605 ;; This function uses a non-reentrant model
 29606 ;;
 29607                           
 29608                           	psect	text188
 29609  009366                     __ptext188:
 29610                           	opt callstack 0
 29611  009366                     _setTxPower:
 29612                           	opt callstack 15
 29613                           
 29614                           ; BSR set to: 1
 29615                           ;incstack = 0
 29616                           ;setTxPower@power stored from wreg
 29617  009366  6E11               	movwf	setTxPower@power^0,c
 29618                           
 29619                           ;../phy/sx1216/phy_src/phy.c: 139: void setTxPower(uint8_t power);../phy/sx1216/phy_src/
      +                          phy.c: 140: {;../phy/sx1216/phy_src/phy.c: 141:     if(power < 2)
 29620  009368  0E02               	movlw	2
 29621  00936A  6011               	cpfslt	setTxPower@power^0,c
 29622  00936C  D002               	goto	l15488
 29623                           
 29624                           ;../phy/sx1216/phy_src/phy.c: 142:     {;../phy/sx1216/phy_src/phy.c: 143:         power
      +                           = 2;
 29625  00936E  0E02               	movlw	2
 29626  009370  6E11               	movwf	setTxPower@power^0,c
 29627  009372                     l15488:
 29628                           
 29629                           ;../phy/sx1216/phy_src/phy.c: 145:     if(power > 13)
 29630  009372  0E0D               	movlw	13
 29631  009374  6411               	cpfsgt	setTxPower@power^0,c
 29632  009376  D002               	goto	l15492
 29633                           
 29634                           ;../phy/sx1216/phy_src/phy.c: 146:     {;../phy/sx1216/phy_src/phy.c: 147:         power
      +                           = 13;
 29635  009378  0E0D               	movlw	13
 29636  00937A  6E11               	movwf	setTxPower@power^0,c
 29637  00937C                     l15492:
 29638                           
 29639                           ;../phy/sx1216/phy_src/phy.c: 149:     power = power -2;
 29640  00937C  5011               	movf	setTxPower@power^0,w,c
 29641  00937E  0FFE               	addlw	254
 29642  009380  6E11               	movwf	setTxPower@power^0,c
 29643                           
 29644                           ;../phy/sx1216/phy_src/phy.c: 150:     SX1276Write(0x09, 0x70 | power | 0x80);
 29645  009382  5011               	movf	setTxPower@power^0,w,c
 29646  009384  09F0               	iorlw	240
 29647  009386  6E0F               	movwf	SX1276Write@data^0,c
 29648  009388  0E09               	movlw	9
 29649  00938A  EC54  F04C         	call	_SX1276Write
 29650                           
 29651                           ; BSR set to: 61
 29652  00938E  0012               	return		;funcret
 29653  009390                     __end_of_setTxPower:
 29654                           	opt callstack 0
 29655                           
 29656 ;; *************** function _setSpreadingFactor *****************
 29657 ;; Defined at:
 29658 ;;		line 198 in file "../phy/sx1216/phy_src/phy.c"
 29659 ;; Parameters:    Size  Location     Type
 29660 ;;  sf              1    wreg     unsigned char 
 29661 ;; Auto vars:     Size  Location     Type
 29662 ;;  sf              1   42[COMRAM] unsigned char 
 29663 ;; Return value:  Size  Location     Type
 29664 ;;                  1    wreg      void 
 29665 ;; Registers used:
 29666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29667 ;; Tracked objects:
 29668 ;;		On entry : 3F/3D
 29669 ;;		On exit  : 0/0
 29670 ;;		Unchanged: 0/0
 29671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29673 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29674 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29675 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29676 ;;Total ram usage:        9 bytes
 29677 ;; Hardware stack levels used:    1
 29678 ;; Hardware stack levels required when called:   12
 29679 ;; This function calls:
 29680 ;;		_SX1276Read
 29681 ;;		_SX1276Write
 29682 ;;		___lldiv
 29683 ;;		_getSignalBandwidth
 29684 ;;		_getSpreadingFactor
 29685 ;; This function is called by:
 29686 ;;		_initRadio
 29687 ;; This function uses a non-reentrant model
 29688 ;;
 29689                           
 29690                           	psect	text189
 29691  005736                     __ptext189:
 29692                           	opt callstack 0
 29693  005736                     _setSpreadingFactor:
 29694                           	opt callstack 14
 29695                           
 29696                           ; BSR set to: 61
 29697                           ;incstack = 0
 29698                           ;setSpreadingFactor@sf stored from wreg
 29699  005736  6E2B               	movwf	setSpreadingFactor@sf^0,c
 29700                           
 29701                           ;../phy/sx1216/phy_src/phy.c: 198: void setSpreadingFactor(uint8_t sf);../phy/sx1216/phy
      +                          _src/phy.c: 199: {;../phy/sx1216/phy_src/phy.c: 200:     if (sf < 7)
 29702  005738  0E07               	movlw	7
 29703  00573A  602B               	cpfslt	setSpreadingFactor@sf^0,c
 29704  00573C  D002               	goto	l15516
 29705                           
 29706                           ;../phy/sx1216/phy_src/phy.c: 201:     {;../phy/sx1216/phy_src/phy.c: 202:         sf = 
      +                          7;
 29707  00573E  0E07               	movlw	7
 29708  005740  D004               	goto	L27
 29709  005742                     l15516:
 29710  005742  0E0C               	movlw	12
 29711  005744  642B               	cpfsgt	setSpreadingFactor@sf^0,c
 29712  005746  D002               	goto	l15520
 29713                           
 29714                           ;../phy/sx1216/phy_src/phy.c: 205:     {;../phy/sx1216/phy_src/phy.c: 206:         sf = 
      +                          12;
 29715  005748  0E0C               	movlw	12
 29716  00574A                     L27:
 29717  00574A  6E2B               	movwf	setSpreadingFactor@sf^0,c
 29718  00574C                     l15520:
 29719                           
 29720                           ;../phy/sx1216/phy_src/phy.c: 209:     SX1276Write(0x31, 0xc3);
 29721  00574C  0EC3               	movlw	195
 29722  00574E  6E0F               	movwf	SX1276Write@data^0,c
 29723  005750  0E31               	movlw	49
 29724  005752  EC54  F04C         	call	_SX1276Write
 29725                           
 29726                           ; BSR set to: 61
 29727                           ;../phy/sx1216/phy_src/phy.c: 210:     SX1276Write(0x37, 0x0a);
 29728  005756  0E0A               	movlw	10
 29729  005758  6E0F               	movwf	SX1276Write@data^0,c
 29730  00575A  0E37               	movlw	55
 29731  00575C  EC54  F04C         	call	_SX1276Write
 29732                           
 29733                           ; BSR set to: 61
 29734                           ;../phy/sx1216/phy_src/phy.c: 211:     SX1276Write(0x1E, (SX1276Read(0x1E) & 0x0f) | ((s
      +                          f << 4) & 0xf0));
 29735  005760  0060  F0AC  F023   	movff	setSpreadingFactor@sf,??_setSpreadingFactor
 29736  005766  3A23               	swapf	??_setSpreadingFactor^0,f,c
 29737  005768  0EF0               	movlw	240
 29738  00576A  1623               	andwf	??_setSpreadingFactor^0,f,c
 29739  00576C  0EF0               	movlw	240
 29740  00576E  1623               	andwf	??_setSpreadingFactor^0,f,c
 29741  005770  0E1E               	movlw	30
 29742  005772  EC24  F04C         	call	_SX1276Read
 29743  005776  0B0F               	andlw	15
 29744  005778  1023               	iorwf	??_setSpreadingFactor^0,w,c
 29745  00577A  6E0F               	movwf	SX1276Write@data^0,c
 29746  00577C  0E1E               	movlw	30
 29747  00577E  EC54  F04C         	call	_SX1276Write
 29748                           
 29749                           ; BSR set to: 61
 29750                           ;../phy/sx1216/phy_src/phy.c: 213:     symbolDuration = 1000 / ( getSignalBandwidth() / 
      +                          (1L << getSpreadingFactor()) ) ;
 29751  005782  EC9C  F04B         	call	_getSpreadingFactor	;wreg free
 29752  005786  0E01               	movlw	1
 29753  005788  6E23               	movwf	??_setSpreadingFactor^0,c
 29754  00578A  6A24               	clrf	(??_setSpreadingFactor+1)^0,c
 29755  00578C  6A25               	clrf	(??_setSpreadingFactor+2)^0,c
 29756  00578E  6A26               	clrf	(??_setSpreadingFactor+3)^0,c
 29757  005790  2A0F               	incf	?_getSpreadingFactor^0,f,c
 29758  005792  D005               	goto	u15240
 29759  005794                     u15245:
 29760  005794  90D8               	bcf	status,0,c
 29761  005796  3623               	rlcf	??_setSpreadingFactor^0,f,c
 29762  005798  3624               	rlcf	(??_setSpreadingFactor+1)^0,f,c
 29763  00579A  3625               	rlcf	(??_setSpreadingFactor+2)^0,f,c
 29764  00579C  3626               	rlcf	(??_setSpreadingFactor+3)^0,f,c
 29765  00579E                     u15240:
 29766  00579E  2E0F               	decfsz	?_getSpreadingFactor^0,f,c
 29767  0057A0  D7F9               	goto	u15245
 29768  0057A2  0060  F08C  F01A   	movff	??_setSpreadingFactor,___lldiv@divisor
 29769  0057A8  0060  F090  F01B   	movff	??_setSpreadingFactor+1,___lldiv@divisor+1
 29770  0057AE  0060  F094  F01C   	movff	??_setSpreadingFactor+2,___lldiv@divisor+2
 29771  0057B4  0060  F098  F01D   	movff	??_setSpreadingFactor+3,___lldiv@divisor+3
 29772  0057BA  ECCD  F027         	call	_getSignalBandwidth	;wreg free
 29773  0057BE  0060  F03C  F016   	movff	?_getSignalBandwidth,___lldiv@dividend
 29774  0057C4  0060  F040  F017   	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 29775  0057CA  0060  F044  F018   	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 29776  0057D0  0060  F048  F019   	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 29777  0057D6  EC4B  F03D         	call	___lldiv	;wreg free
 29778  0057DA  0060  F058  F027   	movff	?___lldiv,_setSpreadingFactor$8391
 29779  0057E0  0060  F05C  F028   	movff	?___lldiv+1,_setSpreadingFactor$8391+1
 29780  0057E6  0060  F060  F029   	movff	?___lldiv+2,_setSpreadingFactor$8391+2
 29781  0057EC  0060  F064  F02A   	movff	?___lldiv+3,_setSpreadingFactor$8391+3
 29782                           
 29783                           ;../phy/sx1216/phy_src/phy.c: 213:     symbolDuration = 1000 / ( getSignalBandwidth() / 
      +                          (1L << getSpreadingFactor()) ) ;
 29784  0057F2  0EE8               	movlw	232
 29785  0057F4  6E16               	movwf	___lldiv@dividend^0,c
 29786  0057F6  0E03               	movlw	3
 29787  0057F8  6E17               	movwf	(___lldiv@dividend+1)^0,c
 29788  0057FA  0E00               	movlw	0
 29789  0057FC  6E18               	movwf	(___lldiv@dividend+2)^0,c
 29790  0057FE  0E00               	movlw	0
 29791  005800  6E19               	movwf	(___lldiv@dividend+3)^0,c
 29792  005802  0060  F09C  F01A   	movff	_setSpreadingFactor$8391,___lldiv@divisor
 29793  005808  0060  F0A0  F01B   	movff	_setSpreadingFactor$8391+1,___lldiv@divisor+1
 29794  00580E  0060  F0A4  F01C   	movff	_setSpreadingFactor$8391+2,___lldiv@divisor+2
 29795  005814  0060  F0A8  F01D   	movff	_setSpreadingFactor$8391+3,___lldiv@divisor+3
 29796  00581A  EC4B  F03D         	call	___lldiv	;wreg free
 29797  00581E  0060  F058  F126   	movff	?___lldiv,_symbolDuration
 29798  005824  0060  F05C  F127   	movff	?___lldiv+1,_symbolDuration+1
 29799  00582A  0060  F060  F128   	movff	?___lldiv+2,_symbolDuration+2
 29800  005830  0060  F064  F129   	movff	?___lldiv+3,_symbolDuration+3
 29801  005836  0012               	return		;funcret
 29802  005838                     __end_of_setSpreadingFactor:
 29803                           	opt callstack 0
 29804                           
 29805 ;; *************** function _setSignalBandwidth *****************
 29806 ;; Defined at:
 29807 ;;		line 223 in file "../phy/sx1216/phy_src/phy.c"
 29808 ;; Parameters:    Size  Location     Type
 29809 ;;  sbw             4   34[COMRAM] unsigned long 
 29810 ;; Auto vars:     Size  Location     Type
 29811 ;;  bw              4   46[COMRAM] unsigned long 
 29812 ;; Return value:  Size  Location     Type
 29813 ;;                  1    wreg      void 
 29814 ;; Registers used:
 29815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29816 ;; Tracked objects:
 29817 ;;		On entry : 3F/3D
 29818 ;;		On exit  : 0/0
 29819 ;;		Unchanged: 0/0
 29820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29821 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29822 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29823 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29824 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29825 ;;Total ram usage:       16 bytes
 29826 ;; Hardware stack levels used:    1
 29827 ;; Hardware stack levels required when called:   12
 29828 ;; This function calls:
 29829 ;;		_SX1276Read
 29830 ;;		_SX1276Write
 29831 ;;		___flge
 29832 ;;		___lldiv
 29833 ;;		___xxtofl
 29834 ;;		_getSignalBandwidth
 29835 ;;		_getSpreadingFactor
 29836 ;; This function is called by:
 29837 ;;		_initRadio
 29838 ;; This function uses a non-reentrant model
 29839 ;;
 29840                           
 29841                           	psect	text190
 29842  000EE8                     __ptext190:
 29843                           	opt callstack 0
 29844  000EE8                     _setSignalBandwidth:
 29845                           	opt callstack 14
 29846                           
 29847                           ; BSR set to: 61
 29848                           ;../phy/sx1216/phy_src/phy.c: 223: void setSignalBandwidth(uint32_t sbw);../phy/sx1216/p
      +                          hy_src/phy.c: 224: {;../phy/sx1216/phy_src/phy.c: 225:   uint32_t bw;;../phy/sx1216/phy_
      +                          src/phy.c: 227:   if (sbw <= 7.8E3) {
 29849                           
 29850                           ;incstack = 0
 29851  000EE8  0E00               	movlw	0
 29852  000EEA  6E10               	movwf	___flge@ff1^0,c
 29853  000EEC  0EC0               	movlw	192
 29854  000EEE  6E11               	movwf	(___flge@ff1+1)^0,c
 29855  000EF0  0EF3               	movlw	243
 29856  000EF2  6E12               	movwf	(___flge@ff1+2)^0,c
 29857  000EF4  0E45               	movlw	69
 29858  000EF6  6E13               	movwf	(___flge@ff1+3)^0,c
 29859  000EF8  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 29860  000EFE  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 29861  000F04  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 29862  000F0A  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 29863  000F10  0E00               	movlw	0
 29864  000F12  ECAF  F022         	call	___xxtofl
 29865  000F16  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 29866  000F1C  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 29867  000F22  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 29868  000F28  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 29869  000F2E  ECD2  F033         	call	___flge	;wreg free
 29870  000F32  A0D8               	btfss	status,0,c
 29871  000F34  D002               	goto	l15534
 29872                           
 29873                           ;../phy/sx1216/phy_src/phy.c: 228:     bw = 0;
 29874  000F36  0E00               	movlw	0
 29875  000F38  D149               	goto	L28
 29876  000F3A                     l15534:
 29877  000F3A  0E00               	movlw	0
 29878  000F3C  6E10               	movwf	___flge@ff1^0,c
 29879  000F3E  0E80               	movlw	128
 29880  000F40  6E11               	movwf	(___flge@ff1+1)^0,c
 29881  000F42  0E22               	movlw	34
 29882  000F44  6E12               	movwf	(___flge@ff1+2)^0,c
 29883  000F46  0E46               	movlw	70
 29884  000F48  6E13               	movwf	(___flge@ff1+3)^0,c
 29885  000F4A  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 29886  000F50  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 29887  000F56  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 29888  000F5C  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 29889  000F62  0E00               	movlw	0
 29890  000F64  ECAF  F022         	call	___xxtofl
 29891  000F68  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 29892  000F6E  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 29893  000F74  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 29894  000F7A  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 29895  000F80  ECD2  F033         	call	___flge	;wreg free
 29896  000F84  A0D8               	btfss	status,0,c
 29897  000F86  D002               	goto	l15538
 29898                           
 29899                           ;../phy/sx1216/phy_src/phy.c: 230:     bw = 1;
 29900  000F88  0E01               	movlw	1
 29901  000F8A  D120               	goto	L28
 29902  000F8C                     l15538:
 29903  000F8C  0E00               	movlw	0
 29904  000F8E  6E10               	movwf	___flge@ff1^0,c
 29905  000F90  0EC0               	movlw	192
 29906  000F92  6E11               	movwf	(___flge@ff1+1)^0,c
 29907  000F94  0E73               	movlw	115
 29908  000F96  6E12               	movwf	(___flge@ff1+2)^0,c
 29909  000F98  0E46               	movlw	70
 29910  000F9A  6E13               	movwf	(___flge@ff1+3)^0,c
 29911  000F9C  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 29912  000FA2  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 29913  000FA8  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 29914  000FAE  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 29915  000FB4  0E00               	movlw	0
 29916  000FB6  ECAF  F022         	call	___xxtofl
 29917  000FBA  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 29918  000FC0  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 29919  000FC6  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 29920  000FCC  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 29921  000FD2  ECD2  F033         	call	___flge	;wreg free
 29922  000FD6  A0D8               	btfss	status,0,c
 29923  000FD8  D002               	goto	l15542
 29924                           
 29925                           ;../phy/sx1216/phy_src/phy.c: 232:     bw = 2;
 29926  000FDA  0E02               	movlw	2
 29927  000FDC  D0F7               	goto	L28
 29928  000FDE                     l15542:
 29929  000FDE  0E00               	movlw	0
 29930  000FE0  6E10               	movwf	___flge@ff1^0,c
 29931  000FE2  0E80               	movlw	128
 29932  000FE4  6E11               	movwf	(___flge@ff1+1)^0,c
 29933  000FE6  0EA2               	movlw	162
 29934  000FE8  6E12               	movwf	(___flge@ff1+2)^0,c
 29935  000FEA  0E46               	movlw	70
 29936  000FEC  6E13               	movwf	(___flge@ff1+3)^0,c
 29937  000FEE  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 29938  000FF4  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 29939  000FFA  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 29940  001000  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 29941  001006  0E00               	movlw	0
 29942  001008  ECAF  F022         	call	___xxtofl
 29943  00100C  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 29944  001012  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 29945  001018  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 29946  00101E  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 29947  001024  ECD2  F033         	call	___flge	;wreg free
 29948  001028  A0D8               	btfss	status,0,c
 29949  00102A  D002               	goto	l15546
 29950                           
 29951                           ;../phy/sx1216/phy_src/phy.c: 234:     bw = 3;
 29952  00102C  0E03               	movlw	3
 29953  00102E  D0CE               	goto	L28
 29954  001030                     l15546:
 29955  001030  0E00               	movlw	0
 29956  001032  6E10               	movwf	___flge@ff1^0,c
 29957  001034  0E24               	movlw	36
 29958  001036  6E11               	movwf	(___flge@ff1+1)^0,c
 29959  001038  0EF4               	movlw	244
 29960  00103A  6E12               	movwf	(___flge@ff1+2)^0,c
 29961  00103C  0E46               	movlw	70
 29962  00103E  6E13               	movwf	(___flge@ff1+3)^0,c
 29963  001040  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 29964  001046  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 29965  00104C  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 29966  001052  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 29967  001058  0E00               	movlw	0
 29968  00105A  ECAF  F022         	call	___xxtofl
 29969  00105E  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 29970  001064  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 29971  00106A  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 29972  001070  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 29973  001076  ECD2  F033         	call	___flge	;wreg free
 29974  00107A  A0D8               	btfss	status,0,c
 29975  00107C  D002               	goto	l15550
 29976                           
 29977                           ;../phy/sx1216/phy_src/phy.c: 236:     bw = 4;
 29978  00107E  0E04               	movlw	4
 29979  001080  D0A5               	goto	L28
 29980  001082                     l15550:
 29981  001082  0E00               	movlw	0
 29982  001084  6E10               	movwf	___flge@ff1^0,c
 29983  001086  0EE4               	movlw	228
 29984  001088  6E11               	movwf	(___flge@ff1+1)^0,c
 29985  00108A  0E22               	movlw	34
 29986  00108C  6E12               	movwf	(___flge@ff1+2)^0,c
 29987  00108E  0E47               	movlw	71
 29988  001090  6E13               	movwf	(___flge@ff1+3)^0,c
 29989  001092  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 29990  001098  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 29991  00109E  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 29992  0010A4  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 29993  0010AA  0E00               	movlw	0
 29994  0010AC  ECAF  F022         	call	___xxtofl
 29995  0010B0  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 29996  0010B6  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 29997  0010BC  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 29998  0010C2  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 29999  0010C8  ECD2  F033         	call	___flge	;wreg free
 30000  0010CC  A0D8               	btfss	status,0,c
 30001  0010CE  D002               	goto	l15554
 30002                           
 30003                           ;../phy/sx1216/phy_src/phy.c: 238:     bw = 5;
 30004  0010D0  0E05               	movlw	5
 30005  0010D2  D07C               	goto	L28
 30006  0010D4                     l15554:
 30007  0010D4  0E00               	movlw	0
 30008  0010D6  6E10               	movwf	___flge@ff1^0,c
 30009  0010D8  0E24               	movlw	36
 30010  0010DA  6E11               	movwf	(___flge@ff1+1)^0,c
 30011  0010DC  0E74               	movlw	116
 30012  0010DE  6E12               	movwf	(___flge@ff1+2)^0,c
 30013  0010E0  0E47               	movlw	71
 30014  0010E2  6E13               	movwf	(___flge@ff1+3)^0,c
 30015  0010E4  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 30016  0010EA  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 30017  0010F0  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 30018  0010F6  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 30019  0010FC  0E00               	movlw	0
 30020  0010FE  ECAF  F022         	call	___xxtofl
 30021  001102  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 30022  001108  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 30023  00110E  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 30024  001114  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 30025  00111A  ECD2  F033         	call	___flge	;wreg free
 30026  00111E  A0D8               	btfss	status,0,c
 30027  001120  D002               	goto	l15558
 30028                           
 30029                           ;../phy/sx1216/phy_src/phy.c: 240:     bw = 6;
 30030  001122  0E06               	movlw	6
 30031  001124  D053               	goto	L28
 30032  001126                     l15558:
 30033  001126  0E00               	movlw	0
 30034  001128  6E10               	movwf	___flge@ff1^0,c
 30035  00112A  0E24               	movlw	36
 30036  00112C  6E11               	movwf	(___flge@ff1+1)^0,c
 30037  00112E  0EF4               	movlw	244
 30038  001130  6E12               	movwf	(___flge@ff1+2)^0,c
 30039  001132  0E47               	movlw	71
 30040  001134  6E13               	movwf	(___flge@ff1+3)^0,c
 30041  001136  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 30042  00113C  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 30043  001142  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 30044  001148  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 30045  00114E  0E00               	movlw	0
 30046  001150  ECAF  F022         	call	___xxtofl
 30047  001154  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 30048  00115A  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 30049  001160  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 30050  001166  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 30051  00116C  ECD2  F033         	call	___flge	;wreg free
 30052  001170  A0D8               	btfss	status,0,c
 30053  001172  D002               	goto	l15562
 30054                           
 30055                           ;../phy/sx1216/phy_src/phy.c: 242:     bw = 7;
 30056  001174  0E07               	movlw	7
 30057  001176  D02A               	goto	L28
 30058  001178                     l15562:
 30059  001178  0E00               	movlw	0
 30060  00117A  6E10               	movwf	___flge@ff1^0,c
 30061  00117C  0E24               	movlw	36
 30062  00117E  6E11               	movwf	(___flge@ff1+1)^0,c
 30063  001180  0E74               	movlw	116
 30064  001182  6E12               	movwf	(___flge@ff1+2)^0,c
 30065  001184  0E48               	movlw	72
 30066  001186  6E13               	movwf	(___flge@ff1+3)^0,c
 30067  001188  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 30068  00118E  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 30069  001194  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 30070  00119A  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 30071  0011A0  0E00               	movlw	0
 30072  0011A2  ECAF  F022         	call	___xxtofl
 30073  0011A6  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 30074  0011AC  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 30075  0011B2  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 30076  0011B8  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 30077  0011BE  ECD2  F033         	call	___flge	;wreg free
 30078  0011C2  A0D8               	btfss	status,0,c
 30079  0011C4  D002               	goto	l15566
 30080                           
 30081                           ;../phy/sx1216/phy_src/phy.c: 244:     bw = 8;
 30082  0011C6  0E08               	movlw	8
 30083  0011C8  D001               	goto	L28
 30084  0011CA                     l15566:
 30085                           
 30086                           ;../phy/sx1216/phy_src/phy.c: 246:     bw = 9;
 30087  0011CA  0E09               	movlw	9
 30088  0011CC                     L28:
 30089  0011CC  6E2F               	movwf	setSignalBandwidth@bw^0,c
 30090  0011CE  0E00               	movlw	0
 30091  0011D0  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 30092  0011D2  0E00               	movlw	0
 30093  0011D4  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 30094  0011D6  0E00               	movlw	0
 30095  0011D8  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 30096                           
 30097                           ;../phy/sx1216/phy_src/phy.c: 249:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0x0f) | (bw <
      +                          < 4));
 30098  0011DA  0060  F0BC  F027   	movff	setSignalBandwidth@bw,??_setSignalBandwidth
 30099  0011E0  3A27               	swapf	??_setSignalBandwidth^0,f,c
 30100  0011E2  0EF0               	movlw	240
 30101  0011E4  1627               	andwf	??_setSignalBandwidth^0,f,c
 30102  0011E6  0E1D               	movlw	29
 30103  0011E8  EC24  F04C         	call	_SX1276Read
 30104  0011EC  0B0F               	andlw	15
 30105  0011EE  1027               	iorwf	??_setSignalBandwidth^0,w,c
 30106  0011F0  6E0F               	movwf	SX1276Write@data^0,c
 30107  0011F2  0E1D               	movlw	29
 30108  0011F4  EC54  F04C         	call	_SX1276Write
 30109                           
 30110                           ; BSR set to: 61
 30111                           ;../phy/sx1216/phy_src/phy.c: 250:   symbolDuration = 1000 / ( getSignalBandwidth() / (1
      +                          L << getSpreadingFactor()) ) ;
 30112  0011F8  EC9C  F04B         	call	_getSpreadingFactor	;wreg free
 30113  0011FC  0E01               	movlw	1
 30114  0011FE  6E27               	movwf	??_setSignalBandwidth^0,c
 30115  001200  6A28               	clrf	(??_setSignalBandwidth+1)^0,c
 30116  001202  6A29               	clrf	(??_setSignalBandwidth+2)^0,c
 30117  001204  6A2A               	clrf	(??_setSignalBandwidth+3)^0,c
 30118  001206  2A0F               	incf	?_getSpreadingFactor^0,f,c
 30119  001208  D005               	goto	u15340
 30120  00120A                     u15345:
 30121  00120A  90D8               	bcf	status,0,c
 30122  00120C  3627               	rlcf	??_setSignalBandwidth^0,f,c
 30123  00120E  3628               	rlcf	(??_setSignalBandwidth+1)^0,f,c
 30124  001210  3629               	rlcf	(??_setSignalBandwidth+2)^0,f,c
 30125  001212  362A               	rlcf	(??_setSignalBandwidth+3)^0,f,c
 30126  001214                     u15340:
 30127  001214  2E0F               	decfsz	?_getSpreadingFactor^0,f,c
 30128  001216  D7F9               	goto	u15345
 30129  001218  0060  F09C  F01A   	movff	??_setSignalBandwidth,___lldiv@divisor
 30130  00121E  0060  F0A0  F01B   	movff	??_setSignalBandwidth+1,___lldiv@divisor+1
 30131  001224  0060  F0A4  F01C   	movff	??_setSignalBandwidth+2,___lldiv@divisor+2
 30132  00122A  0060  F0A8  F01D   	movff	??_setSignalBandwidth+3,___lldiv@divisor+3
 30133  001230  ECCD  F027         	call	_getSignalBandwidth	;wreg free
 30134  001234  0060  F03C  F016   	movff	?_getSignalBandwidth,___lldiv@dividend
 30135  00123A  0060  F040  F017   	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 30136  001240  0060  F044  F018   	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 30137  001246  0060  F048  F019   	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 30138  00124C  EC4B  F03D         	call	___lldiv	;wreg free
 30139  001250  0060  F058  F02B   	movff	?___lldiv,_setSignalBandwidth$8392
 30140  001256  0060  F05C  F02C   	movff	?___lldiv+1,_setSignalBandwidth$8392+1
 30141  00125C  0060  F060  F02D   	movff	?___lldiv+2,_setSignalBandwidth$8392+2
 30142  001262  0060  F064  F02E   	movff	?___lldiv+3,_setSignalBandwidth$8392+3
 30143                           
 30144                           ;../phy/sx1216/phy_src/phy.c: 250:   symbolDuration = 1000 / ( getSignalBandwidth() / (1
      +                          L << getSpreadingFactor()) ) ;
 30145  001268  0EE8               	movlw	232
 30146  00126A  6E16               	movwf	___lldiv@dividend^0,c
 30147  00126C  0E03               	movlw	3
 30148  00126E  6E17               	movwf	(___lldiv@dividend+1)^0,c
 30149  001270  0E00               	movlw	0
 30150  001272  6E18               	movwf	(___lldiv@dividend+2)^0,c
 30151  001274  0E00               	movlw	0
 30152  001276  6E19               	movwf	(___lldiv@dividend+3)^0,c
 30153  001278  0060  F0AC  F01A   	movff	_setSignalBandwidth$8392,___lldiv@divisor
 30154  00127E  0060  F0B0  F01B   	movff	_setSignalBandwidth$8392+1,___lldiv@divisor+1
 30155  001284  0060  F0B4  F01C   	movff	_setSignalBandwidth$8392+2,___lldiv@divisor+2
 30156  00128A  0060  F0B8  F01D   	movff	_setSignalBandwidth$8392+3,___lldiv@divisor+3
 30157  001290  EC4B  F03D         	call	___lldiv	;wreg free
 30158  001294  0060  F058  F126   	movff	?___lldiv,_symbolDuration
 30159  00129A  0060  F05C  F127   	movff	?___lldiv+1,_symbolDuration+1
 30160  0012A0  0060  F060  F128   	movff	?___lldiv+2,_symbolDuration+2
 30161  0012A6  0060  F064  F129   	movff	?___lldiv+3,_symbolDuration+3
 30162  0012AC  0012               	return		;funcret
 30163  0012AE                     __end_of_setSignalBandwidth:
 30164                           	opt callstack 0
 30165                           
 30166 ;; *************** function _getSpreadingFactor *****************
 30167 ;; Defined at:
 30168 ;;		line 261 in file "../phy/sx1216/phy_src/phy.c"
 30169 ;; Parameters:    Size  Location     Type
 30170 ;;		None
 30171 ;; Auto vars:     Size  Location     Type
 30172 ;;		None
 30173 ;; Return value:  Size  Location     Type
 30174 ;;                  4   14[COMRAM] unsigned long 
 30175 ;; Registers used:
 30176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30177 ;; Tracked objects:
 30178 ;;		On entry : 3F/3D
 30179 ;;		On exit  : 3F/3D
 30180 ;;		Unchanged: 0/0
 30181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30182 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30185 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30186 ;;Total ram usage:        5 bytes
 30187 ;; Hardware stack levels used:    1
 30188 ;; Hardware stack levels required when called:   11
 30189 ;; This function calls:
 30190 ;;		_SX1276Read
 30191 ;; This function is called by:
 30192 ;;		_setSpreadingFactor
 30193 ;;		_setSignalBandwidth
 30194 ;; This function uses a non-reentrant model
 30195 ;;
 30196                           
 30197                           	psect	text191
 30198  009738                     __ptext191:
 30199                           	opt callstack 0
 30200  009738                     _getSpreadingFactor:
 30201                           	opt callstack 14
 30202                           
 30203                           ; BSR set to: 61
 30204                           ;../phy/sx1216/phy_src/phy.c: 263:   return SX1276Read(0x1E) >> 4;
 30205                           
 30206                           ;incstack = 0
 30207  009738  0E1E               	movlw	30
 30208  00973A  EC24  F04C         	call	_SX1276Read
 30209  00973E  6E13               	movwf	??_getSpreadingFactor^0,c
 30210  009740  3A13               	swapf	??_getSpreadingFactor^0,f,c
 30211  009742  0E0F               	movlw	15
 30212  009744  1613               	andwf	??_getSpreadingFactor^0,f,c
 30213  009746  5013               	movf	??_getSpreadingFactor^0,w,c
 30214  009748  6E0F               	movwf	?_getSpreadingFactor^0,c
 30215  00974A  6A10               	clrf	(?_getSpreadingFactor+1)^0,c
 30216  00974C  6A11               	clrf	(?_getSpreadingFactor+2)^0,c
 30217  00974E  6A12               	clrf	(?_getSpreadingFactor+3)^0,c
 30218                           
 30219                           ; BSR set to: 61
 30220  009750  0012               	return		;funcret
 30221  009752                     __end_of_getSpreadingFactor:
 30222                           	opt callstack 0
 30223                           
 30224 ;; *************** function _getSignalBandwidth *****************
 30225 ;; Defined at:
 30226 ;;		line 272 in file "../phy/sx1216/phy_src/phy.c"
 30227 ;; Parameters:    Size  Location     Type
 30228 ;;		None
 30229 ;; Auto vars:     Size  Location     Type
 30230 ;;  bw              1   20[COMRAM] unsigned char 
 30231 ;; Return value:  Size  Location     Type
 30232 ;;                  4   14[COMRAM] unsigned long 
 30233 ;; Registers used:
 30234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30235 ;; Tracked objects:
 30236 ;;		On entry : 3F/3D
 30237 ;;		On exit  : 3F/3D
 30238 ;;		Unchanged: 0/0
 30239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30240 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30242 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30243 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30244 ;;Total ram usage:        7 bytes
 30245 ;; Hardware stack levels used:    1
 30246 ;; Hardware stack levels required when called:   11
 30247 ;; This function calls:
 30248 ;;		_SX1276Read
 30249 ;; This function is called by:
 30250 ;;		_setSpreadingFactor
 30251 ;;		_setSignalBandwidth
 30252 ;; This function uses a non-reentrant model
 30253 ;;
 30254                           
 30255                           	psect	text192
 30256  004F9A                     __ptext192:
 30257                           	opt callstack 0
 30258  004F9A                     _getSignalBandwidth:
 30259                           	opt callstack 14
 30260                           
 30261                           ; BSR set to: 61
 30262                           ;../phy/sx1216/phy_src/phy.c: 274:   uint8_t bw = (SX1276Read(0x1D) >> 4);
 30263                           
 30264                           ; BSR set to: 61
 30265                           ;incstack = 0
 30266  004F9A  0E1D               	movlw	29
 30267  004F9C  EC24  F04C         	call	_SX1276Read
 30268  004FA0  6E13               	movwf	??_getSignalBandwidth^0,c
 30269  004FA2  3813               	swapf	??_getSignalBandwidth^0,w,c
 30270  004FA4  0B0F               	andlw	15
 30271  004FA6  6E15               	movwf	getSignalBandwidth@bw^0,c
 30272                           
 30273                           ;../phy/sx1216/phy_src/phy.c: 275:   switch (bw) {
 30274  004FA8  D05A               	goto	l15130
 30275  004FAA                     l15088:
 30276                           
 30277                           ; BSR set to: 61
 30278  004FAA  0E78               	movlw	120
 30279  004FAC  6E0F               	movwf	?_getSignalBandwidth^0,c
 30280  004FAE  0E1E               	movlw	30
 30281  004FB0  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 30282  004FB2  0E00               	movlw	0
 30283  004FB4  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 30284  004FB6  0E00               	movlw	0
 30285  004FB8  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 30286  004FBA  0012               	return	
 30287  004FBC                     l15092:
 30288                           
 30289                           ; BSR set to: 61
 30290  004FBC  0EA0               	movlw	160
 30291  004FBE  6E0F               	movwf	?_getSignalBandwidth^0,c
 30292  004FC0  0E28               	movlw	40
 30293  004FC2  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 30294  004FC4  0E00               	movlw	0
 30295  004FC6  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 30296  004FC8  0E00               	movlw	0
 30297  004FCA  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 30298  004FCC  0012               	return	
 30299  004FCE                     l15096:
 30300                           
 30301                           ; BSR set to: 61
 30302  004FCE  0EF0               	movlw	240
 30303  004FD0  6E0F               	movwf	?_getSignalBandwidth^0,c
 30304  004FD2  0E3C               	movlw	60
 30305  004FD4  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 30306  004FD6  0E00               	movlw	0
 30307  004FD8  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 30308  004FDA  0E00               	movlw	0
 30309  004FDC  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 30310  004FDE  0012               	return	
 30311  004FE0                     l15100:
 30312                           
 30313                           ; BSR set to: 61
 30314  004FE0  0E40               	movlw	64
 30315  004FE2  6E0F               	movwf	?_getSignalBandwidth^0,c
 30316  004FE4  0E51               	movlw	81
 30317  004FE6  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 30318  004FE8  0E00               	movlw	0
 30319  004FEA  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 30320  004FEC  0E00               	movlw	0
 30321  004FEE  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 30322  004FF0  0012               	return	
 30323  004FF2                     l15104:
 30324                           
 30325                           ; BSR set to: 61
 30326  004FF2  0E12               	movlw	18
 30327  004FF4  6E0F               	movwf	?_getSignalBandwidth^0,c
 30328  004FF6  0E7A               	movlw	122
 30329  004FF8  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 30330  004FFA  0E00               	movlw	0
 30331  004FFC  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 30332  004FFE  0E00               	movlw	0
 30333  005000  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 30334  005002  0012               	return	
 30335  005004                     l15108:
 30336                           
 30337                           ; BSR set to: 61
 30338  005004  0EE4               	movlw	228
 30339  005006  6E0F               	movwf	?_getSignalBandwidth^0,c
 30340  005008  0EA2               	movlw	162
 30341  00500A  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 30342  00500C  0E00               	movlw	0
 30343  00500E  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 30344  005010  0E00               	movlw	0
 30345  005012  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 30346  005014  0012               	return	
 30347  005016                     l15112:
 30348                           
 30349                           ; BSR set to: 61
 30350  005016  0E24               	movlw	36
 30351  005018  6E0F               	movwf	?_getSignalBandwidth^0,c
 30352  00501A  0EF4               	movlw	244
 30353  00501C  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 30354  00501E  0E00               	movlw	0
 30355  005020  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 30356  005022  0E00               	movlw	0
 30357  005024  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 30358  005026  0012               	return	
 30359  005028                     l15116:
 30360                           
 30361                           ; BSR set to: 61
 30362  005028  0E48               	movlw	72
 30363  00502A  6E0F               	movwf	?_getSignalBandwidth^0,c
 30364  00502C  0EE8               	movlw	232
 30365  00502E  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 30366  005030  0E01               	movlw	1
 30367  005032  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 30368  005034  0E00               	movlw	0
 30369  005036  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 30370  005038  0012               	return	
 30371  00503A                     l15120:
 30372                           
 30373                           ; BSR set to: 61
 30374  00503A  0E90               	movlw	144
 30375  00503C  6E0F               	movwf	?_getSignalBandwidth^0,c
 30376  00503E  0ED0               	movlw	208
 30377  005040  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 30378  005042  0E03               	movlw	3
 30379  005044  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 30380  005046  0E00               	movlw	0
 30381  005048  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 30382  00504A  0012               	return	
 30383  00504C                     l15124:
 30384                           
 30385                           ; BSR set to: 61
 30386  00504C  0E20               	movlw	32
 30387  00504E  6E0F               	movwf	?_getSignalBandwidth^0,c
 30388  005050  0EA1               	movlw	161
 30389  005052  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 30390  005054  0E07               	movlw	7
 30391  005056  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 30392  005058  0E00               	movlw	0
 30393  00505A  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 30394  00505C  0012               	return	
 30395  00505E                     l15130:
 30396                           
 30397                           ; BSR set to: 61
 30398  00505E  5015               	movf	getSignalBandwidth@bw^0,w,c
 30399  005060  6E13               	movwf	??_getSignalBandwidth^0,c
 30400  005062  6A14               	clrf	(??_getSignalBandwidth+1)^0,c
 30401                           
 30402                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30403                           ; Switch size 1, requested type "simple"
 30404                           ; Number of cases is 1, Range of values is 0 to 0
 30405                           ; switch strategies available:
 30406                           ; Name         Instructions Cycles
 30407                           ; simple_byte            4     3 (average)
 30408                           ;	Chosen strategy is simple_byte
 30409  005064  5014               	movf	(??_getSignalBandwidth+1)^0,w,c
 30410  005066  0A00               	xorlw	0	; case 0
 30411  005068  A4D8               	btfss	status,2,c
 30412  00506A  D01F               	goto	l15132
 30413                           
 30414                           ; BSR set to: 61
 30415                           ; Switch size 1, requested type "simple"
 30416                           ; Number of cases is 10, Range of values is 0 to 9
 30417                           ; switch strategies available:
 30418                           ; Name         Instructions Cycles
 30419                           ; simple_byte           31    16 (average)
 30420                           ;	Chosen strategy is simple_byte
 30421  00506C  5013               	movf	??_getSignalBandwidth^0,w,c
 30422  00506E  0A00               	xorlw	0	; case 0
 30423  005070  B4D8               	btfsc	status,2,c
 30424  005072  D79B               	goto	l15088
 30425  005074  0A01               	xorlw	1	; case 1
 30426  005076  B4D8               	btfsc	status,2,c
 30427  005078  D7A1               	goto	l15092
 30428  00507A  0A03               	xorlw	3	; case 2
 30429  00507C  B4D8               	btfsc	status,2,c
 30430  00507E  D7A7               	goto	l15096
 30431  005080  0A01               	xorlw	1	; case 3
 30432  005082  B4D8               	btfsc	status,2,c
 30433  005084  D7AD               	goto	l15100
 30434  005086  0A07               	xorlw	7	; case 4
 30435  005088  B4D8               	btfsc	status,2,c
 30436  00508A  D7B3               	goto	l15104
 30437  00508C  0A01               	xorlw	1	; case 5
 30438  00508E  B4D8               	btfsc	status,2,c
 30439  005090  D7B9               	goto	l15108
 30440  005092  0A03               	xorlw	3	; case 6
 30441  005094  B4D8               	btfsc	status,2,c
 30442  005096  D7BF               	goto	l15112
 30443  005098  0A01               	xorlw	1	; case 7
 30444  00509A  B4D8               	btfsc	status,2,c
 30445  00509C  D7C5               	goto	l15116
 30446  00509E  0A0F               	xorlw	15	; case 8
 30447  0050A0  B4D8               	btfsc	status,2,c
 30448  0050A2  D7CB               	goto	l15120
 30449  0050A4  0A01               	xorlw	1	; case 9
 30450  0050A6  B4D8               	btfsc	status,2,c
 30451  0050A8  D7D1               	goto	l15124
 30452  0050AA                     l15132:
 30453                           
 30454                           ; BSR set to: 61
 30455                           ;../phy/sx1216/phy_src/phy.c: 287:   return 0;
 30456  0050AA  0E00               	movlw	0
 30457  0050AC  6E0F               	movwf	?_getSignalBandwidth^0,c
 30458  0050AE  0E00               	movlw	0
 30459  0050B0  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 30460  0050B2  0E00               	movlw	0
 30461  0050B4  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 30462  0050B6  0E00               	movlw	0
 30463  0050B8  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 30464                           
 30465                           ; BSR set to: 61
 30466  0050BA  0012               	return		;funcret
 30467  0050BC                     __end_of_getSignalBandwidth:
 30468                           	opt callstack 0
 30469                           
 30470 ;; *************** function ___xxtofl *****************
 30471 ;; Defined at:
 30472 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 30473 ;; Parameters:    Size  Location     Type
 30474 ;;  sign            1    wreg     unsigned char 
 30475 ;;  val             4    1[COMRAM] long 
 30476 ;; Auto vars:     Size  Location     Type
 30477 ;;  sign            1    9[COMRAM] unsigned char 
 30478 ;;  arg             4   11[COMRAM] unsigned long 
 30479 ;;  exp             1   10[COMRAM] unsigned char 
 30480 ;; Return value:  Size  Location     Type
 30481 ;;                  4    1[COMRAM] unsigned char 
 30482 ;; Registers used:
 30483 ;;		wreg, status,2, status,0
 30484 ;; Tracked objects:
 30485 ;;		On entry : 0/0
 30486 ;;		On exit  : 0/0
 30487 ;;		Unchanged: 0/0
 30488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30489 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30490 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30491 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30492 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30493 ;;Total ram usage:       14 bytes
 30494 ;; Hardware stack levels used:    1
 30495 ;; Hardware stack levels required when called:    7
 30496 ;; This function calls:
 30497 ;;		Nothing
 30498 ;; This function is called by:
 30499 ;;		_setSignalBandwidth
 30500 ;;		_get_lqi
 30501 ;; This function uses a non-reentrant model
 30502 ;;
 30503                           
 30504                           	psect	text193
 30505  00455E                     __ptext193:
 30506                           	opt callstack 0
 30507  00455E                     ___xxtofl:
 30508                           	opt callstack 18
 30509                           
 30510                           ; BSR set to: 61
 30511                           ;incstack = 0
 30512                           ;___xxtofl@sign stored from wreg
 30513  00455E  6E0A               	movwf	___xxtofl@sign^0,c
 30514  004560  500A               	movf	___xxtofl@sign^0,w,c
 30515  004562  A4D8               	btfss	status,2,c
 30516  004564  AE05               	btfss	(___xxtofl@val+3)^0,7,c
 30517  004566  D022               	goto	l3966
 30518  004568  0060  F008  F006   	movff	___xxtofl@val,??___xxtofl
 30519  00456E  0060  F00C  F007   	movff	___xxtofl@val+1,??___xxtofl+1
 30520  004574  0060  F010  F008   	movff	___xxtofl@val+2,??___xxtofl+2
 30521  00457A  0060  F014  F009   	movff	___xxtofl@val+3,??___xxtofl+3
 30522  004580  1E06               	comf	??___xxtofl^0,f,c
 30523  004582  1E07               	comf	(??___xxtofl+1)^0,f,c
 30524  004584  1E08               	comf	(??___xxtofl+2)^0,f,c
 30525  004586  1E09               	comf	(??___xxtofl+3)^0,f,c
 30526  004588  2A06               	incf	??___xxtofl^0,f,c
 30527  00458A  0E00               	movlw	0
 30528  00458C  2207               	addwfc	(??___xxtofl+1)^0,f,c
 30529  00458E  2208               	addwfc	(??___xxtofl+2)^0,f,c
 30530  004590  2209               	addwfc	(??___xxtofl+3)^0,f,c
 30531  004592  0060  F018  F00C   	movff	??___xxtofl,___xxtofl@arg
 30532  004598  0060  F01C  F00D   	movff	??___xxtofl+1,___xxtofl@arg+1
 30533  00459E  0060  F020  F00E   	movff	??___xxtofl+2,___xxtofl@arg+2
 30534  0045A4  0060  F024  F00F   	movff	??___xxtofl+3,___xxtofl@arg+3
 30535  0045AA  D00C               	goto	l15236
 30536  0045AC                     l3966:
 30537  0045AC  0060  F008  F00C   	movff	___xxtofl@val,___xxtofl@arg
 30538  0045B2  0060  F00C  F00D   	movff	___xxtofl@val+1,___xxtofl@arg+1
 30539  0045B8  0060  F010  F00E   	movff	___xxtofl@val+2,___xxtofl@arg+2
 30540  0045BE  0060  F014  F00F   	movff	___xxtofl@val+3,___xxtofl@arg+3
 30541  0045C4                     l15236:
 30542  0045C4  5002               	movf	___xxtofl@val^0,w,c
 30543  0045C6  1003               	iorwf	(___xxtofl@val+1)^0,w,c
 30544  0045C8  1004               	iorwf	(___xxtofl@val+2)^0,w,c
 30545  0045CA  1005               	iorwf	(___xxtofl@val+3)^0,w,c
 30546  0045CC  A4D8               	btfss	status,2,c
 30547  0045CE  D009               	goto	l15242
 30548  0045D0  0E00               	movlw	0
 30549  0045D2  6E02               	movwf	?___xxtofl^0,c
 30550  0045D4  0E00               	movlw	0
 30551  0045D6  6E03               	movwf	(?___xxtofl+1)^0,c
 30552  0045D8  0E00               	movlw	0
 30553  0045DA  6E04               	movwf	(?___xxtofl+2)^0,c
 30554  0045DC  0E00               	movlw	0
 30555  0045DE  6E05               	movwf	(?___xxtofl+3)^0,c
 30556  0045E0  0012               	return	
 30557  0045E2                     l15242:
 30558  0045E2  0E96               	movlw	150
 30559  0045E4  6E0B               	movwf	___xxtofl@exp^0,c
 30560  0045E6  D006               	goto	l15246
 30561  0045E8                     l15244:
 30562  0045E8  2A0B               	incf	___xxtofl@exp^0,f,c
 30563  0045EA  90D8               	bcf	status,0,c
 30564  0045EC  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 30565  0045EE  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 30566  0045F0  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 30567  0045F2  320C               	rrcf	___xxtofl@arg^0,f,c
 30568  0045F4                     l15246:
 30569  0045F4  0E00               	movlw	0
 30570  0045F6  140C               	andwf	___xxtofl@arg^0,w,c
 30571  0045F8  6E06               	movwf	??___xxtofl^0,c
 30572  0045FA  0E00               	movlw	0
 30573  0045FC  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 30574  0045FE  6E07               	movwf	(??___xxtofl+1)^0,c
 30575  004600  0E00               	movlw	0
 30576  004602  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 30577  004604  6E08               	movwf	(??___xxtofl+2)^0,c
 30578  004606  0EFE               	movlw	254
 30579  004608  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 30580  00460A  6E09               	movwf	(??___xxtofl+3)^0,c
 30581  00460C  5006               	movf	??___xxtofl^0,w,c
 30582  00460E  1007               	iorwf	(??___xxtofl+1)^0,w,c
 30583  004610  1008               	iorwf	(??___xxtofl+2)^0,w,c
 30584  004612  1009               	iorwf	(??___xxtofl+3)^0,w,c
 30585  004614  B4D8               	btfsc	status,2,c
 30586  004616  D00D               	goto	l3973
 30587  004618  D7E7               	goto	l15244
 30588  00461A                     l15248:
 30589  00461A  2A0B               	incf	___xxtofl@exp^0,f,c
 30590  00461C  0E01               	movlw	1
 30591  00461E  260C               	addwf	___xxtofl@arg^0,f,c
 30592  004620  0E00               	movlw	0
 30593  004622  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
 30594  004624  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
 30595  004626  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
 30596  004628  90D8               	bcf	status,0,c
 30597  00462A  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 30598  00462C  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 30599  00462E  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 30600  004630  320C               	rrcf	___xxtofl@arg^0,f,c
 30601  004632                     l3973:
 30602  004632  0E00               	movlw	0
 30603  004634  140C               	andwf	___xxtofl@arg^0,w,c
 30604  004636  6E06               	movwf	??___xxtofl^0,c
 30605  004638  0E00               	movlw	0
 30606  00463A  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 30607  00463C  6E07               	movwf	(??___xxtofl+1)^0,c
 30608  00463E  0E00               	movlw	0
 30609  004640  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 30610  004642  6E08               	movwf	(??___xxtofl+2)^0,c
 30611  004644  0EFF               	movlw	255
 30612  004646  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 30613  004648  6E09               	movwf	(??___xxtofl+3)^0,c
 30614  00464A  5006               	movf	??___xxtofl^0,w,c
 30615  00464C  1007               	iorwf	(??___xxtofl+1)^0,w,c
 30616  00464E  1008               	iorwf	(??___xxtofl+2)^0,w,c
 30617  004650  1009               	iorwf	(??___xxtofl+3)^0,w,c
 30618  004652  B4D8               	btfsc	status,2,c
 30619  004654  D007               	goto	l15256
 30620  004656  D7E1               	goto	l15248
 30621  004658                     l15254:
 30622  004658  060B               	decf	___xxtofl@exp^0,f,c
 30623  00465A  90D8               	bcf	status,0,c
 30624  00465C  360C               	rlcf	___xxtofl@arg^0,f,c
 30625  00465E  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
 30626  004660  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
 30627  004662  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
 30628  004664                     l15256:
 30629  004664  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
 30630  004666  D003               	goto	u14930
 30631  004668  0E02               	movlw	2
 30632  00466A  600B               	cpfslt	___xxtofl@exp^0,c
 30633  00466C  D7F5               	goto	l15254
 30634  00466E                     u14930:
 30635  00466E  A00B               	btfss	___xxtofl@exp^0,0,c
 30636  004670  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
 30637  004672  90D8               	bcf	status,0,c
 30638  004674  320B               	rrcf	___xxtofl@exp^0,f,c
 30639  004676  0060  F02C  F006   	movff	___xxtofl@exp,??___xxtofl
 30640  00467C  6A07               	clrf	(??___xxtofl+1)^0,c
 30641  00467E  6A08               	clrf	(??___xxtofl+2)^0,c
 30642  004680  6A09               	clrf	(??___xxtofl+3)^0,c
 30643  004682  0060  F018  F009   	movff	??___xxtofl,??___xxtofl+3
 30644  004688  6A08               	clrf	(??___xxtofl+2)^0,c
 30645  00468A  6A07               	clrf	(??___xxtofl+1)^0,c
 30646  00468C  6A06               	clrf	??___xxtofl^0,c
 30647  00468E  5006               	movf	??___xxtofl^0,w,c
 30648  004690  120C               	iorwf	___xxtofl@arg^0,f,c
 30649  004692  5007               	movf	(??___xxtofl+1)^0,w,c
 30650  004694  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
 30651  004696  5008               	movf	(??___xxtofl+2)^0,w,c
 30652  004698  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
 30653  00469A  5009               	movf	(??___xxtofl+3)^0,w,c
 30654  00469C  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
 30655  00469E  500A               	movf	___xxtofl@sign^0,w,c
 30656  0046A0  A4D8               	btfss	status,2,c
 30657  0046A2  AE05               	btfss	(___xxtofl@val+3)^0,7,c
 30658  0046A4  D001               	goto	l15272
 30659  0046A6  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
 30660  0046A8                     l15272:
 30661  0046A8  0060  F030  F002   	movff	___xxtofl@arg,?___xxtofl
 30662  0046AE  0060  F034  F003   	movff	___xxtofl@arg+1,?___xxtofl+1
 30663  0046B4  0060  F038  F004   	movff	___xxtofl@arg+2,?___xxtofl+2
 30664  0046BA  0060  F03C  F005   	movff	___xxtofl@arg+3,?___xxtofl+3
 30665  0046C0  0012               	return		;funcret
 30666  0046C2                     __end_of___xxtofl:
 30667                           	opt callstack 0
 30668                           
 30669 ;; *************** function ___flge *****************
 30670 ;; Defined at:
 30671 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 30672 ;; Parameters:    Size  Location     Type
 30673 ;;  ff1             4   15[COMRAM] unsigned char 
 30674 ;;  ff2             4   19[COMRAM] unsigned char 
 30675 ;; Auto vars:     Size  Location     Type
 30676 ;;		None
 30677 ;; Return value:  Size  Location     Type
 30678 ;;		None               void
 30679 ;; Registers used:
 30680 ;;		wreg, status,2, status,0
 30681 ;; Tracked objects:
 30682 ;;		On entry : 0/3D
 30683 ;;		On exit  : 0/0
 30684 ;;		Unchanged: 0/0
 30685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30686 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30688 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30689 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30690 ;;Total ram usage:       12 bytes
 30691 ;; Hardware stack levels used:    1
 30692 ;; Hardware stack levels required when called:    7
 30693 ;; This function calls:
 30694 ;;		Nothing
 30695 ;; This function is called by:
 30696 ;;		_setSignalBandwidth
 30697 ;; This function uses a non-reentrant model
 30698 ;;
 30699                           
 30700                           	psect	text194
 30701  0067A4                     __ptext194:
 30702                           	opt callstack 0
 30703  0067A4                     ___flge:
 30704                           	opt callstack 18
 30705                           
 30706                           ;incstack = 0
 30707  0067A4  0E00               	movlw	0
 30708  0067A6  1410               	andwf	___flge@ff1^0,w,c
 30709  0067A8  6E18               	movwf	??___flge^0,c
 30710  0067AA  0E00               	movlw	0
 30711  0067AC  1411               	andwf	(___flge@ff1+1)^0,w,c
 30712  0067AE  6E19               	movwf	(??___flge+1)^0,c
 30713  0067B0  0E80               	movlw	128
 30714  0067B2  1412               	andwf	(___flge@ff1+2)^0,w,c
 30715  0067B4  6E1A               	movwf	(??___flge+2)^0,c
 30716  0067B6  0E7F               	movlw	127
 30717  0067B8  1413               	andwf	(___flge@ff1+3)^0,w,c
 30718  0067BA  6E1B               	movwf	(??___flge+3)^0,c
 30719  0067BC  5018               	movf	??___flge^0,w,c
 30720  0067BE  1019               	iorwf	(??___flge+1)^0,w,c
 30721  0067C0  101A               	iorwf	(??___flge+2)^0,w,c
 30722  0067C2  101B               	iorwf	(??___flge+3)^0,w,c
 30723  0067C4  A4D8               	btfss	status,2,c
 30724  0067C6  D008               	goto	l15196
 30725  0067C8  0E00               	movlw	0
 30726  0067CA  6E10               	movwf	___flge@ff1^0,c
 30727  0067CC  0E00               	movlw	0
 30728  0067CE  6E11               	movwf	(___flge@ff1+1)^0,c
 30729  0067D0  0E00               	movlw	0
 30730  0067D2  6E12               	movwf	(___flge@ff1+2)^0,c
 30731  0067D4  0E00               	movlw	0
 30732  0067D6  6E13               	movwf	(___flge@ff1+3)^0,c
 30733  0067D8                     l15196:
 30734  0067D8  0E00               	movlw	0
 30735  0067DA  1414               	andwf	___flge@ff2^0,w,c
 30736  0067DC  6E18               	movwf	??___flge^0,c
 30737  0067DE  0E00               	movlw	0
 30738  0067E0  1415               	andwf	(___flge@ff2+1)^0,w,c
 30739  0067E2  6E19               	movwf	(??___flge+1)^0,c
 30740  0067E4  0E80               	movlw	128
 30741  0067E6  1416               	andwf	(___flge@ff2+2)^0,w,c
 30742  0067E8  6E1A               	movwf	(??___flge+2)^0,c
 30743  0067EA  0E7F               	movlw	127
 30744  0067EC  1417               	andwf	(___flge@ff2+3)^0,w,c
 30745  0067EE  6E1B               	movwf	(??___flge+3)^0,c
 30746  0067F0  5018               	movf	??___flge^0,w,c
 30747  0067F2  1019               	iorwf	(??___flge+1)^0,w,c
 30748  0067F4  101A               	iorwf	(??___flge+2)^0,w,c
 30749  0067F6  101B               	iorwf	(??___flge+3)^0,w,c
 30750  0067F8  A4D8               	btfss	status,2,c
 30751  0067FA  D008               	goto	l15200
 30752  0067FC  0E00               	movlw	0
 30753  0067FE  6E14               	movwf	___flge@ff2^0,c
 30754  006800  0E00               	movlw	0
 30755  006802  6E15               	movwf	(___flge@ff2+1)^0,c
 30756  006804  0E00               	movlw	0
 30757  006806  6E16               	movwf	(___flge@ff2+2)^0,c
 30758  006808  0E00               	movlw	0
 30759  00680A  6E17               	movwf	(___flge@ff2+3)^0,c
 30760  00680C                     l15200:
 30761  00680C  AE13               	btfss	(___flge@ff1+3)^0,7,c
 30762  00680E  D009               	goto	l15204
 30763  006810  6C10               	negf	___flge@ff1^0,c
 30764  006812  1E11               	comf	(___flge@ff1+1)^0,f,c
 30765  006814  B0D8               	btfsc	status,0,c
 30766  006816  2A11               	incf	(___flge@ff1+1)^0,f,c
 30767  006818  1E12               	comf	(___flge@ff1+2)^0,f,c
 30768  00681A  B0D8               	btfsc	status,0,c
 30769  00681C  2A12               	incf	(___flge@ff1+2)^0,f,c
 30770  00681E  0E80               	movlw	128
 30771  006820  5613               	subfwb	(___flge@ff1+3)^0,f,c
 30772  006822                     l15204:
 30773  006822  AE17               	btfss	(___flge@ff2+3)^0,7,c
 30774  006824  D009               	goto	l3576
 30775  006826  6C14               	negf	___flge@ff2^0,c
 30776  006828  1E15               	comf	(___flge@ff2+1)^0,f,c
 30777  00682A  B0D8               	btfsc	status,0,c
 30778  00682C  2A15               	incf	(___flge@ff2+1)^0,f,c
 30779  00682E  1E16               	comf	(___flge@ff2+2)^0,f,c
 30780  006830  B0D8               	btfsc	status,0,c
 30781  006832  2A16               	incf	(___flge@ff2+2)^0,f,c
 30782  006834  0E80               	movlw	128
 30783  006836  5617               	subfwb	(___flge@ff2+3)^0,f,c
 30784  006838                     l3576:
 30785  006838  0E00               	movlw	0
 30786  00683A  1A10               	xorwf	___flge@ff1^0,f,c
 30787  00683C  0E00               	movlw	0
 30788  00683E  1A11               	xorwf	(___flge@ff1+1)^0,f,c
 30789  006840  0E00               	movlw	0
 30790  006842  1A12               	xorwf	(___flge@ff1+2)^0,f,c
 30791  006844  0E80               	movlw	128
 30792  006846  1A13               	xorwf	(___flge@ff1+3)^0,f,c
 30793  006848  0E00               	movlw	0
 30794  00684A  1A14               	xorwf	___flge@ff2^0,f,c
 30795  00684C  0E00               	movlw	0
 30796  00684E  1A15               	xorwf	(___flge@ff2+1)^0,f,c
 30797  006850  0E00               	movlw	0
 30798  006852  1A16               	xorwf	(___flge@ff2+2)^0,f,c
 30799  006854  0E80               	movlw	128
 30800  006856  1A17               	xorwf	(___flge@ff2+3)^0,f,c
 30801  006858  5014               	movf	___flge@ff2^0,w,c
 30802  00685A  5C10               	subwf	___flge@ff1^0,w,c
 30803  00685C  5015               	movf	(___flge@ff2+1)^0,w,c
 30804  00685E  5811               	subwfb	(___flge@ff1+1)^0,w,c
 30805  006860  5016               	movf	(___flge@ff2+2)^0,w,c
 30806  006862  5812               	subwfb	(___flge@ff1+2)^0,w,c
 30807  006864  5017               	movf	(___flge@ff2+3)^0,w,c
 30808  006866  5813               	subwfb	(___flge@ff1+3)^0,w,c
 30809  006868  B0D8               	btfsc	status,0,c
 30810  00686A  D002               	goto	l15210
 30811  00686C  90D8               	bcf	status,0,c
 30812  00686E  0012               	return	
 30813  006870                     l15210:
 30814  006870  80D8               	bsf	status,0,c
 30815  006872  0012               	return		;funcret
 30816  006874                     __end_of___flge:
 30817                           	opt callstack 0
 30818                           
 30819 ;; *************** function _setPreambleLength *****************
 30820 ;; Defined at:
 30821 ;;		line 316 in file "../phy/sx1216/phy_src/phy.c"
 30822 ;; Parameters:    Size  Location     Type
 30823 ;;  length          2   16[COMRAM] unsigned short 
 30824 ;; Auto vars:     Size  Location     Type
 30825 ;;		None
 30826 ;; Return value:  Size  Location     Type
 30827 ;;                  1    wreg      void 
 30828 ;; Registers used:
 30829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30830 ;; Tracked objects:
 30831 ;;		On entry : 3F/3D
 30832 ;;		On exit  : 3F/3D
 30833 ;;		Unchanged: 0/0
 30834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30835 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30839 ;;Total ram usage:        2 bytes
 30840 ;; Hardware stack levels used:    1
 30841 ;; Hardware stack levels required when called:   11
 30842 ;; This function calls:
 30843 ;;		_SX1276Write
 30844 ;; This function is called by:
 30845 ;;		_initRadio
 30846 ;; This function uses a non-reentrant model
 30847 ;;
 30848                           
 30849                           	psect	text195
 30850  009752                     __ptext195:
 30851                           	opt callstack 0
 30852  009752                     _setPreambleLength:
 30853                           	opt callstack 15
 30854                           
 30855                           ; BSR set to: 61
 30856                           ;../phy/sx1216/phy_src/phy.c: 316: void setPreambleLength(uint16_t length);../phy/sx1216
      +                          /phy_src/phy.c: 317: {;../phy/sx1216/phy_src/phy.c: 318:   SX1276Write(0x20, (uint8_t)(l
      +                          ength >> 8));
 30857                           
 30858                           ;incstack = 0
 30859  009752  0060  F048  F00F   	movff	setPreambleLength@length+1,SX1276Write@data
 30860  009758  0E20               	movlw	32
 30861  00975A  EC54  F04C         	call	_SX1276Write
 30862                           
 30863                           ;../phy/sx1216/phy_src/phy.c: 319:   SX1276Write(0x21, (uint8_t)(length >> 0));
 30864  00975E  0060  F044  F00F   	movff	setPreambleLength@length,SX1276Write@data
 30865  009764  0E21               	movlw	33
 30866  009766  EC54  F04C         	call	_SX1276Write
 30867                           
 30868                           ; BSR set to: 61
 30869  00976A  0012               	return		;funcret
 30870  00976C                     __end_of_setPreambleLength:
 30871                           	opt callstack 0
 30872                           
 30873 ;; *************** function _setFrequency *****************
 30874 ;; Defined at:
 30875 ;;		line 160 in file "../phy/sx1216/phy_src/phy.c"
 30876 ;; Parameters:    Size  Location     Type
 30877 ;;  frequency       4   34[COMRAM] unsigned long 
 30878 ;; Auto vars:     Size  Location     Type
 30879 ;;  num             4   42[COMRAM] unsigned long 
 30880 ;;  num_mod         4   38[COMRAM] unsigned long 
 30881 ;; Return value:  Size  Location     Type
 30882 ;;                  4   34[COMRAM] unsigned long 
 30883 ;; Registers used:
 30884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30885 ;; Tracked objects:
 30886 ;;		On entry : 0/0
 30887 ;;		On exit  : 3F/3D
 30888 ;;		Unchanged: 0/0
 30889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30890 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30891 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30893 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30894 ;;Total ram usage:       12 bytes
 30895 ;; Hardware stack levels used:    1
 30896 ;; Hardware stack levels required when called:   11
 30897 ;; This function calls:
 30898 ;;		_SX1276Write
 30899 ;;		___lldiv
 30900 ;;		___llmod
 30901 ;; This function is called by:
 30902 ;;		_initRadio
 30903 ;;		_PHY_SetChannel
 30904 ;; This function uses a non-reentrant model
 30905 ;;
 30906                           
 30907                           	psect	text196
 30908  004E70                     __ptext196:
 30909                           	opt callstack 0
 30910  004E70                     _setFrequency:
 30911                           	opt callstack 15
 30912                           
 30913                           ;../phy/sx1216/phy_src/phy.c: 160: uint32_t setFrequency(uint32_t frequency);../phy/sx12
      +                          16/phy_src/phy.c: 161: {;../phy/sx1216/phy_src/phy.c: 162:     uint32_t num, num_mod;;..
      +                          /phy/sx1216/phy_src/phy.c: 170:     num = frequency / 15625;
 30914                           
 30915                           ; BSR set to: 61
 30916                           ;incstack = 0
 30917  004E70  0060  F08C  F016   	movff	setFrequency@frequency,___lldiv@dividend
 30918  004E76  0060  F090  F017   	movff	setFrequency@frequency+1,___lldiv@dividend+1
 30919  004E7C  0060  F094  F018   	movff	setFrequency@frequency+2,___lldiv@dividend+2
 30920  004E82  0060  F098  F019   	movff	setFrequency@frequency+3,___lldiv@dividend+3
 30921  004E88  0E09               	movlw	9
 30922  004E8A  6E1A               	movwf	___lldiv@divisor^0,c
 30923  004E8C  0E3D               	movlw	61
 30924  004E8E  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 30925  004E90  0E00               	movlw	0
 30926  004E92  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 30927  004E94  0E00               	movlw	0
 30928  004E96  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 30929  004E98  EC4B  F03D         	call	___lldiv	;wreg free
 30930  004E9C  0060  F058  F02B   	movff	?___lldiv,setFrequency@num
 30931  004EA2  0060  F05C  F02C   	movff	?___lldiv+1,setFrequency@num+1
 30932  004EA8  0060  F060  F02D   	movff	?___lldiv+2,setFrequency@num+2
 30933  004EAE  0060  F064  F02E   	movff	?___lldiv+3,setFrequency@num+3
 30934                           
 30935                           ;../phy/sx1216/phy_src/phy.c: 171:     num_mod = frequency % 15625;
 30936  004EB4  0060  F08C  F002   	movff	setFrequency@frequency,___llmod@dividend
 30937  004EBA  0060  F090  F003   	movff	setFrequency@frequency+1,___llmod@dividend+1
 30938  004EC0  0060  F094  F004   	movff	setFrequency@frequency+2,___llmod@dividend+2
 30939  004EC6  0060  F098  F005   	movff	setFrequency@frequency+3,___llmod@dividend+3
 30940  004ECC  0E09               	movlw	9
 30941  004ECE  6E06               	movwf	___llmod@divisor^0,c
 30942  004ED0  0E3D               	movlw	61
 30943  004ED2  6E07               	movwf	(___llmod@divisor+1)^0,c
 30944  004ED4  0E00               	movlw	0
 30945  004ED6  6E08               	movwf	(___llmod@divisor+2)^0,c
 30946  004ED8  0E00               	movlw	0
 30947  004EDA  6E09               	movwf	(___llmod@divisor+3)^0,c
 30948  004EDC  ECCE  F03F         	call	___llmod	;wreg free
 30949  004EE0  0060  F008  F027   	movff	?___llmod,setFrequency@num_mod
 30950  004EE6  0060  F00C  F028   	movff	?___llmod+1,setFrequency@num_mod+1
 30951  004EEC  0060  F010  F029   	movff	?___llmod+2,setFrequency@num_mod+2
 30952  004EF2  0060  F014  F02A   	movff	?___llmod+3,setFrequency@num_mod+3
 30953                           
 30954                           ;../phy/sx1216/phy_src/phy.c: 175:     num <<= 8;
 30955  004EF8  0060  F0B4  F02E   	movff	setFrequency@num+2,setFrequency@num+3
 30956  004EFE  0060  F0B0  F02D   	movff	setFrequency@num+1,setFrequency@num+2
 30957  004F04  0060  F0AC  F02C   	movff	setFrequency@num,setFrequency@num+1
 30958  004F0A  6A2B               	clrf	setFrequency@num^0,c
 30959                           
 30960                           ;../phy/sx1216/phy_src/phy.c: 176:     num_mod <<= 8;
 30961  004F0C  0060  F0A4  F02A   	movff	setFrequency@num_mod+2,setFrequency@num_mod+3
 30962  004F12  0060  F0A0  F029   	movff	setFrequency@num_mod+1,setFrequency@num_mod+2
 30963  004F18  0060  F09C  F028   	movff	setFrequency@num_mod,setFrequency@num_mod+1
 30964  004F1E  6A27               	clrf	setFrequency@num_mod^0,c
 30965                           
 30966                           ;../phy/sx1216/phy_src/phy.c: 180:     num_mod = num_mod / 15625;
 30967  004F20  0060  F09C  F016   	movff	setFrequency@num_mod,___lldiv@dividend
 30968  004F26  0060  F0A0  F017   	movff	setFrequency@num_mod+1,___lldiv@dividend+1
 30969  004F2C  0060  F0A4  F018   	movff	setFrequency@num_mod+2,___lldiv@dividend+2
 30970  004F32  0060  F0A8  F019   	movff	setFrequency@num_mod+3,___lldiv@dividend+3
 30971  004F38  0E09               	movlw	9
 30972  004F3A  6E1A               	movwf	___lldiv@divisor^0,c
 30973  004F3C  0E3D               	movlw	61
 30974  004F3E  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 30975  004F40  0E00               	movlw	0
 30976  004F42  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 30977  004F44  0E00               	movlw	0
 30978  004F46  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 30979  004F48  EC4B  F03D         	call	___lldiv	;wreg free
 30980  004F4C  0060  F058  F027   	movff	?___lldiv,setFrequency@num_mod
 30981  004F52  0060  F05C  F028   	movff	?___lldiv+1,setFrequency@num_mod+1
 30982  004F58  0060  F060  F029   	movff	?___lldiv+2,setFrequency@num_mod+2
 30983  004F5E  0060  F064  F02A   	movff	?___lldiv+3,setFrequency@num_mod+3
 30984                           
 30985                           ;../phy/sx1216/phy_src/phy.c: 181:     num += num_mod;
 30986  004F64  5027               	movf	setFrequency@num_mod^0,w,c
 30987  004F66  262B               	addwf	setFrequency@num^0,f,c
 30988  004F68  5028               	movf	(setFrequency@num_mod+1)^0,w,c
 30989  004F6A  222C               	addwfc	(setFrequency@num+1)^0,f,c
 30990  004F6C  5029               	movf	(setFrequency@num_mod+2)^0,w,c
 30991  004F6E  222D               	addwfc	(setFrequency@num+2)^0,f,c
 30992  004F70  502A               	movf	(setFrequency@num_mod+3)^0,w,c
 30993  004F72  222E               	addwfc	(setFrequency@num+3)^0,f,c
 30994                           
 30995                           ;../phy/sx1216/phy_src/phy.c: 184:     SX1276Write(0x06, (uint8_t)(num >> 16));
 30996  004F74  0060  F0B4  F00F   	movff	setFrequency@num+2,SX1276Write@data
 30997  004F7A  0E06               	movlw	6
 30998  004F7C  EC54  F04C         	call	_SX1276Write
 30999                           
 31000                           ; BSR set to: 61
 31001                           ;../phy/sx1216/phy_src/phy.c: 185:     SX1276Write(0x07, (uint8_t)(num >> 8));
 31002  004F80  0060  F0B0  F00F   	movff	setFrequency@num+1,SX1276Write@data
 31003  004F86  0E07               	movlw	7
 31004  004F88  EC54  F04C         	call	_SX1276Write
 31005                           
 31006                           ; BSR set to: 61
 31007                           ;../phy/sx1216/phy_src/phy.c: 186:     SX1276Write(0x08, (uint8_t)(num));
 31008  004F8C  0060  F0AC  F00F   	movff	setFrequency@num,SX1276Write@data
 31009  004F92  0E08               	movlw	8
 31010  004F94  EC54  F04C         	call	_SX1276Write
 31011                           
 31012                           ; BSR set to: 61
 31013  004F98  0012               	return		;funcret
 31014  004F9A                     __end_of_setFrequency:
 31015                           	opt callstack 0
 31016                           
 31017 ;; *************** function _setCodingRate4 *****************
 31018 ;; Defined at:
 31019 ;;		line 297 in file "../phy/sx1216/phy_src/phy.c"
 31020 ;; Parameters:    Size  Location     Type
 31021 ;;  denominator     1    wreg     unsigned char 
 31022 ;; Auto vars:     Size  Location     Type
 31023 ;;  denominator     1   18[COMRAM] unsigned char 
 31024 ;;  cr              1   17[COMRAM] unsigned char 
 31025 ;; Return value:  Size  Location     Type
 31026 ;;                  1    wreg      void 
 31027 ;; Registers used:
 31028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31029 ;; Tracked objects:
 31030 ;;		On entry : 3F/3D
 31031 ;;		On exit  : 3F/3D
 31032 ;;		Unchanged: 0/0
 31033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31035 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31036 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31037 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31038 ;;Total ram usage:        3 bytes
 31039 ;; Hardware stack levels used:    1
 31040 ;; Hardware stack levels required when called:   11
 31041 ;; This function calls:
 31042 ;;		_SX1276Read
 31043 ;;		_SX1276Write
 31044 ;; This function is called by:
 31045 ;;		_initRadio
 31046 ;; This function uses a non-reentrant model
 31047 ;;
 31048                           
 31049                           	psect	text197
 31050  0090BC                     __ptext197:
 31051                           	opt callstack 0
 31052  0090BC                     _setCodingRate4:
 31053                           	opt callstack 15
 31054                           
 31055                           ; BSR set to: 61
 31056                           ;incstack = 0
 31057                           ;setCodingRate4@denominator stored from wreg
 31058  0090BC  6E13               	movwf	setCodingRate4@denominator^0,c
 31059                           
 31060                           ;../phy/sx1216/phy_src/phy.c: 297: void setCodingRate4(uint8_t denominator);../phy/sx121
      +                          6/phy_src/phy.c: 298: {;../phy/sx1216/phy_src/phy.c: 299:   if (denominator < 5) {
 31061  0090BE  0E05               	movlw	5
 31062  0090C0  6013               	cpfslt	setCodingRate4@denominator^0,c
 31063  0090C2  D002               	goto	l15578
 31064                           
 31065                           ;../phy/sx1216/phy_src/phy.c: 300:     denominator = 5;
 31066  0090C4  0E05               	movlw	5
 31067  0090C6  D004               	goto	L29
 31068  0090C8                     l15578:
 31069  0090C8  0E08               	movlw	8
 31070  0090CA  6413               	cpfsgt	setCodingRate4@denominator^0,c
 31071  0090CC  D002               	goto	l15582
 31072                           
 31073                           ;../phy/sx1216/phy_src/phy.c: 302:     denominator = 8;
 31074  0090CE  0E08               	movlw	8
 31075  0090D0                     L29:
 31076  0090D0  6E13               	movwf	setCodingRate4@denominator^0,c
 31077  0090D2                     l15582:
 31078                           
 31079                           ;../phy/sx1216/phy_src/phy.c: 305:   uint8_t cr = denominator - 4;
 31080  0090D2  5013               	movf	setCodingRate4@denominator^0,w,c
 31081  0090D4  0FFC               	addlw	252
 31082  0090D6  6E12               	movwf	setCodingRate4@cr^0,c
 31083                           
 31084                           ;../phy/sx1216/phy_src/phy.c: 307:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0xf1) | (cr <
      +                          < 1));
 31085  0090D8  90D8               	bcf	status,0,c
 31086  0090DA  3412               	rlcf	setCodingRate4@cr^0,w,c
 31087  0090DC  6E11               	movwf	??_setCodingRate4^0,c
 31088  0090DE  0E1D               	movlw	29
 31089  0090E0  EC24  F04C         	call	_SX1276Read
 31090  0090E4  0BF1               	andlw	241
 31091  0090E6  1011               	iorwf	??_setCodingRate4^0,w,c
 31092  0090E8  6E0F               	movwf	SX1276Write@data^0,c
 31093  0090EA  0E1D               	movlw	29
 31094  0090EC  EC54  F04C         	call	_SX1276Write
 31095                           
 31096                           ; BSR set to: 61
 31097  0090F0  0012               	return		;funcret
 31098  0090F2                     __end_of_setCodingRate4:
 31099                           	opt callstack 0
 31100                           
 31101 ;; *************** function _receive *****************
 31102 ;; Defined at:
 31103 ;;		line 402 in file "../phy/sx1216/phy_src/phy.c"
 31104 ;; Parameters:    Size  Location     Type
 31105 ;;  size            1    wreg     unsigned char 
 31106 ;; Auto vars:     Size  Location     Type
 31107 ;;  size            1   16[COMRAM] unsigned char 
 31108 ;; Return value:  Size  Location     Type
 31109 ;;                  1    wreg      void 
 31110 ;; Registers used:
 31111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31112 ;; Tracked objects:
 31113 ;;		On entry : 0/3D
 31114 ;;		On exit  : 3F/3D
 31115 ;;		Unchanged: 0/0
 31116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31118 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31120 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31121 ;;Total ram usage:        1 bytes
 31122 ;; Hardware stack levels used:    1
 31123 ;; Hardware stack levels required when called:   12
 31124 ;; This function calls:
 31125 ;;		_SX1276Write
 31126 ;;		_explicitHeaderMode
 31127 ;;		_implicitHeaderMode
 31128 ;; This function is called by:
 31129 ;;		_initRadio
 31130 ;;		_DIO0_Receive_ISR
 31131 ;;		_radio_engine
 31132 ;;		_PHY_SetRxState
 31133 ;; This function uses a non-reentrant model
 31134 ;;
 31135                           
 31136                           	psect	text198
 31137  008DCA                     __ptext198:
 31138                           	opt callstack 0
 31139  008DCA                     _receive:
 31140                           	opt callstack 14
 31141                           
 31142                           ; BSR set to: 61
 31143                           ;incstack = 0
 31144                           ;receive@size stored from wreg
 31145  008DCA  6E11               	movwf	receive@size^0,c
 31146                           
 31147                           ;../phy/sx1216/phy_src/phy.c: 402: void receive(uint8_t size);../phy/sx1216/phy_src/phy.
      +                          c: 403: {;../phy/sx1216/phy_src/phy.c: 404:   if (size > 0) {
 31148  008DCC  5011               	movf	receive@size^0,w,c
 31149  008DCE  B4D8               	btfsc	status,2,c
 31150  008DD0  D009               	goto	l15594
 31151                           
 31152                           ;../phy/sx1216/phy_src/phy.c: 405:     implicitHeaderMode();
 31153  008DD2  EC00  F04C         	call	_implicitHeaderMode	;wreg free
 31154                           
 31155                           ;../phy/sx1216/phy_src/phy.c: 407:     SX1276Write(0x22, size & 0xff);
 31156  008DD6  0060  F044  F00F   	movff	receive@size,SX1276Write@data
 31157  008DDC  0E22               	movlw	34
 31158  008DDE  EC54  F04C         	call	_SX1276Write
 31159                           
 31160                           ;../phy/sx1216/phy_src/phy.c: 408:   } else {
 31161  008DE2  D002               	goto	l2700
 31162  008DE4                     l15594:
 31163                           
 31164                           ;../phy/sx1216/phy_src/phy.c: 409:     explicitHeaderMode();
 31165  008DE4  EC0C  F04C         	call	_explicitHeaderMode	;wreg free
 31166  008DE8                     l2700:
 31167                           
 31168                           ; BSR set to: 61
 31169                           ;../phy/sx1216/phy_src/phy.c: 412:   SX1276Write(0x0D, 0);
 31170  008DE8  0E00               	movlw	0
 31171  008DEA  6E0F               	movwf	SX1276Write@data^0,c
 31172  008DEC  0E0D               	movlw	13
 31173  008DEE  EC54  F04C         	call	_SX1276Write
 31174                           
 31175                           ;../phy/sx1216/phy_src/phy.c: 413:   SX1276Write(0x12, 0xFF);
 31176  008DF2  0EFF               	movlw	255
 31177  008DF4  6E0F               	movwf	SX1276Write@data^0,c
 31178  008DF6  0E12               	movlw	18
 31179  008DF8  EC54  F04C         	call	_SX1276Write
 31180                           
 31181                           ;../phy/sx1216/phy_src/phy.c: 414:   SX1276Write(0x01,0x80 | 0x05);
 31182  008DFC  0E85               	movlw	133
 31183  008DFE  6E0F               	movwf	SX1276Write@data^0,c
 31184  008E00  0E01               	movlw	1
 31185  008E02  EC54  F04C         	call	_SX1276Write
 31186                           
 31187                           ; BSR set to: 61
 31188  008E06  0012               	return		;funcret
 31189  008E08                     __end_of_receive:
 31190                           	opt callstack 0
 31191                           
 31192 ;; *************** function _implicitHeaderMode *****************
 31193 ;; Defined at:
 31194 ;;		line 388 in file "../phy/sx1216/phy_src/phy.c"
 31195 ;; Parameters:    Size  Location     Type
 31196 ;;		None
 31197 ;; Auto vars:     Size  Location     Type
 31198 ;;		None
 31199 ;; Return value:  Size  Location     Type
 31200 ;;                  1    wreg      void 
 31201 ;; Registers used:
 31202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31203 ;; Tracked objects:
 31204 ;;		On entry : 0/3D
 31205 ;;		On exit  : 3F/3D
 31206 ;;		Unchanged: 0/0
 31207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31212 ;;Total ram usage:        0 bytes
 31213 ;; Hardware stack levels used:    1
 31214 ;; Hardware stack levels required when called:   11
 31215 ;; This function calls:
 31216 ;;		_SX1276Read
 31217 ;;		_SX1276Write
 31218 ;; This function is called by:
 31219 ;;		_receive
 31220 ;; This function uses a non-reentrant model
 31221 ;;
 31222                           
 31223                           	psect	text199
 31224  009800                     __ptext199:
 31225                           	opt callstack 0
 31226  009800                     _implicitHeaderMode:
 31227                           	opt callstack 14
 31228                           
 31229                           ;../phy/sx1216/phy_src/phy.c: 390:   _implicitHeaderMode = 1;
 31230                           
 31231                           ; BSR set to: 61
 31232                           ;incstack = 0
 31233  009800  0E01               	movlw	1
 31234  009802  0100               	movlb	0	; () banked
 31235  009804  6FDF               	movwf	__implicitHeaderMode& (0+255),b
 31236                           
 31237                           ; BSR set to: 0
 31238                           ;../phy/sx1216/phy_src/phy.c: 392:   SX1276Write(0x1D, SX1276Read(0x1D) | 0x01);
 31239  009806  0E1D               	movlw	29
 31240  009808  EC24  F04C         	call	_SX1276Read
 31241  00980C  0901               	iorlw	1
 31242  00980E  6E0F               	movwf	SX1276Write@data^0,c
 31243  009810  0E1D               	movlw	29
 31244  009812  EC54  F04C         	call	_SX1276Write
 31245                           
 31246                           ; BSR set to: 61
 31247  009816  0012               	return		;funcret
 31248  009818                     __end_of_implicitHeaderMode:
 31249                           	opt callstack 0
 31250                           
 31251 ;; *************** function _explicitHeaderMode *****************
 31252 ;; Defined at:
 31253 ;;		line 374 in file "../phy/sx1216/phy_src/phy.c"
 31254 ;; Parameters:    Size  Location     Type
 31255 ;;		None
 31256 ;; Auto vars:     Size  Location     Type
 31257 ;;		None
 31258 ;; Return value:  Size  Location     Type
 31259 ;;                  1    wreg      void 
 31260 ;; Registers used:
 31261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31262 ;; Tracked objects:
 31263 ;;		On entry : 0/3D
 31264 ;;		On exit  : 3F/3D
 31265 ;;		Unchanged: 0/0
 31266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31271 ;;Total ram usage:        0 bytes
 31272 ;; Hardware stack levels used:    1
 31273 ;; Hardware stack levels required when called:   11
 31274 ;; This function calls:
 31275 ;;		_SX1276Read
 31276 ;;		_SX1276Write
 31277 ;; This function is called by:
 31278 ;;		_receive
 31279 ;;		_initRadio
 31280 ;;		_PHY_DataReq
 31281 ;; This function uses a non-reentrant model
 31282 ;;
 31283                           
 31284                           	psect	text200
 31285  009818                     __ptext200:
 31286                           	opt callstack 0
 31287  009818                     _explicitHeaderMode:
 31288                           	opt callstack 14
 31289                           
 31290                           ;../phy/sx1216/phy_src/phy.c: 376:   _implicitHeaderMode = 0;
 31291                           
 31292                           ; BSR set to: 61
 31293                           ;incstack = 0
 31294  009818  0E00               	movlw	0
 31295  00981A  0100               	movlb	0	; () banked
 31296  00981C  6FDF               	movwf	__implicitHeaderMode& (0+255),b
 31297                           
 31298                           ; BSR set to: 0
 31299                           ;../phy/sx1216/phy_src/phy.c: 378:   SX1276Write(0x1D, SX1276Read(0x1D) & 0xfe);
 31300  00981E  0E1D               	movlw	29
 31301  009820  EC24  F04C         	call	_SX1276Read
 31302  009824  0BFE               	andlw	254
 31303  009826  6E0F               	movwf	SX1276Write@data^0,c
 31304  009828  0E1D               	movlw	29
 31305  00982A  EC54  F04C         	call	_SX1276Write
 31306                           
 31307                           ; BSR set to: 61
 31308  00982E  0012               	return		;funcret
 31309  009830                     __end_of_explicitHeaderMode:
 31310                           	opt callstack 0
 31311                           
 31312 ;; *************** function _enableCrc *****************
 31313 ;; Defined at:
 31314 ;;		line 351 in file "../phy/sx1216/phy_src/phy.c"
 31315 ;; Parameters:    Size  Location     Type
 31316 ;;		None
 31317 ;; Auto vars:     Size  Location     Type
 31318 ;;		None
 31319 ;; Return value:  Size  Location     Type
 31320 ;;                  1    wreg      void 
 31321 ;; Registers used:
 31322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31323 ;; Tracked objects:
 31324 ;;		On entry : 3F/3D
 31325 ;;		On exit  : 3F/3D
 31326 ;;		Unchanged: 0/0
 31327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31332 ;;Total ram usage:        0 bytes
 31333 ;; Hardware stack levels used:    1
 31334 ;; Hardware stack levels required when called:   11
 31335 ;; This function calls:
 31336 ;;		_SX1276Read
 31337 ;;		_SX1276Write
 31338 ;; This function is called by:
 31339 ;;		_initRadio
 31340 ;; This function uses a non-reentrant model
 31341 ;;
 31342                           
 31343                           	psect	text201
 31344  009896                     __ptext201:
 31345                           	opt callstack 0
 31346  009896                     _enableCrc:
 31347                           	opt callstack 15
 31348                           
 31349                           ; BSR set to: 61
 31350                           ;../phy/sx1216/phy_src/phy.c: 353:   SX1276Write(0x1E, SX1276Read(0x1E) | 0x04);
 31351                           
 31352                           ; BSR set to: 61
 31353                           ;incstack = 0
 31354  009896  0E1E               	movlw	30
 31355  009898  EC24  F04C         	call	_SX1276Read
 31356  00989C  0904               	iorlw	4
 31357  00989E  6E0F               	movwf	SX1276Write@data^0,c
 31358  0098A0  0E1E               	movlw	30
 31359  0098A2  EC54  F04C         	call	_SX1276Write
 31360                           
 31361                           ; BSR set to: 61
 31362  0098A6  0012               	return		;funcret
 31363  0098A8                     __end_of_enableCrc:
 31364                           	opt callstack 0
 31365                           
 31366 ;; *************** function _SX1276Write *****************
 31367 ;; Defined at:
 31368 ;;		line 45 in file "../phy/sx1216/phy_src/phy.c"
 31369 ;; Parameters:    Size  Location     Type
 31370 ;;  addr            1    wreg     unsigned char 
 31371 ;;  data            1   14[COMRAM] unsigned char 
 31372 ;; Auto vars:     Size  Location     Type
 31373 ;;  addr            1   15[COMRAM] unsigned char 
 31374 ;; Return value:  Size  Location     Type
 31375 ;;                  1    wreg      void 
 31376 ;; Registers used:
 31377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31378 ;; Tracked objects:
 31379 ;;		On entry : 0/0
 31380 ;;		On exit  : 3F/3D
 31381 ;;		Unchanged: 0/0
 31382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31383 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31386 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31387 ;;Total ram usage:        2 bytes
 31388 ;; Hardware stack levels used:    1
 31389 ;; Hardware stack levels required when called:   10
 31390 ;; This function calls:
 31391 ;;		_SX1276WriteBuffer
 31392 ;; This function is called by:
 31393 ;;		_idle
 31394 ;;		_setTxPower
 31395 ;;		_setFrequency
 31396 ;;		_setSpreadingFactor
 31397 ;;		_setSignalBandwidth
 31398 ;;		_setCodingRate4
 31399 ;;		_setPreambleLength
 31400 ;;		_setSyncWord
 31401 ;;		_enableCrc
 31402 ;;		_explicitHeaderMode
 31403 ;;		_implicitHeaderMode
 31404 ;;		_receive
 31405 ;;		_initRadio
 31406 ;;		_cad
 31407 ;;		_start_radio_cad
 31408 ;;		_DIO0_Receive_ISR
 31409 ;;		_PHY_DataReq
 31410 ;; This function uses a non-reentrant model
 31411 ;;
 31412                           
 31413                           	psect	text202
 31414  0098A8                     __ptext202:
 31415                           	opt callstack 0
 31416  0098A8                     _SX1276Write:
 31417                           	opt callstack 15
 31418                           
 31419                           ; BSR set to: 61
 31420                           ;incstack = 0
 31421                           ;SX1276Write@addr stored from wreg
 31422  0098A8  6E10               	movwf	SX1276Write@addr^0,c
 31423                           
 31424                           ;../phy/sx1216/phy_src/phy.c: 45: static void SX1276Write( uint8_t addr, uint8_t data );
      +                          ../phy/sx1216/phy_src/phy.c: 46: {;../phy/sx1216/phy_src/phy.c: 47:     SX1276WriteBuffe
      +                          r( addr, &data, 1 );
 31425  0098AA  0E0F               	movlw	low SX1276Write@data
 31426  0098AC  6E09               	movwf	SX1276WriteBuffer@buffer^0,c
 31427  0098AE  0E01               	movlw	1
 31428  0098B0  6E0A               	movwf	SX1276WriteBuffer@size^0,c
 31429  0098B2  5010               	movf	SX1276Write@addr^0,w,c
 31430  0098B4  EC3C  F04A         	call	_SX1276WriteBuffer
 31431                           
 31432                           ; BSR set to: 61
 31433  0098B8  0012               	return		;funcret
 31434  0098BA                     __end_of_SX1276Write:
 31435                           	opt callstack 0
 31436                           
 31437 ;; *************** function _SX1276WriteBuffer *****************
 31438 ;; Defined at:
 31439 ;;		line 75 in file "../phy/sx1216/phy_src/phy.c"
 31440 ;; Parameters:    Size  Location     Type
 31441 ;;  addr            1    wreg     unsigned char 
 31442 ;;  buffer          1    8[COMRAM] PTR unsigned char 
 31443 ;;		 -> SX1276Write@data(1), 
 31444 ;;  size            1    9[COMRAM] unsigned char 
 31445 ;; Auto vars:     Size  Location     Type
 31446 ;;  addr            1   10[COMRAM] unsigned char 
 31447 ;;  i               1    0        unsigned char 
 31448 ;; Return value:  Size  Location     Type
 31449 ;;                  1    wreg      void 
 31450 ;; Registers used:
 31451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31452 ;; Tracked objects:
 31453 ;;		On entry : 0/0
 31454 ;;		On exit  : 3F/3D
 31455 ;;		Unchanged: 0/0
 31456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31458 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31460 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31461 ;;Total ram usage:        3 bytes
 31462 ;; Hardware stack levels used:    1
 31463 ;; Hardware stack levels required when called:    9
 31464 ;; This function calls:
 31465 ;;		_SPI1_ExchangeByte
 31466 ;;		_SPI1_WriteBlock
 31467 ;; This function is called by:
 31468 ;;		_SX1276Write
 31469 ;; This function uses a non-reentrant model
 31470 ;;
 31471                           
 31472                           	psect	text203
 31473  009478                     __ptext203:
 31474                           	opt callstack 0
 31475  009478                     _SX1276WriteBuffer:
 31476                           	opt callstack 15
 31477                           
 31478                           ; BSR set to: 61
 31479                           ;incstack = 0
 31480                           ;SX1276WriteBuffer@addr stored from wreg
 31481  009478  6E0B               	movwf	SX1276WriteBuffer@addr^0,c
 31482                           
 31483                           ;../phy/sx1216/phy_src/phy.c: 75: static void SX1276WriteBuffer( uint8_t addr, uint8_t *
      +                          buffer, uint8_t size );../phy/sx1216/phy_src/phy.c: 76: {;../phy/sx1216/phy_src/phy.c: 7
      +                          7:     uint8_t i;;../phy/sx1216/phy_src/phy.c: 79:     do { LATCbits.LATC6 = 0; } while(
      +                          0);
 31484  00947A  9CBC               	bcf	188,6,c	;volatile
 31485                           
 31486                           ;../phy/sx1216/phy_src/phy.c: 80:     SPI1_ExchangeByte(addr | 0x80);
 31487  00947C  500B               	movf	SX1276WriteBuffer@addr^0,w,c
 31488  00947E  0980               	iorlw	128
 31489  009480  ECB6  F04B         	call	_SPI1_ExchangeByte
 31490                           
 31491                           ; BSR set to: 61
 31492                           ;../phy/sx1216/phy_src/phy.c: 81:     SPI1_WriteBlock(buffer, size);
 31493  009484  0060  F024  F003   	movff	SX1276WriteBuffer@buffer,SPI1_WriteBlock@block
 31494  00948A  6A04               	clrf	(SPI1_WriteBlock@block+1)^0,c
 31495  00948C  0060  F028  F005   	movff	SX1276WriteBuffer@size,SPI1_WriteBlock@blockSize
 31496  009492  6A06               	clrf	(SPI1_WriteBlock@blockSize+1)^0,c
 31497  009494  EC79  F048         	call	_SPI1_WriteBlock	;wreg free
 31498                           
 31499                           ; BSR set to: 61
 31500  009498  8CBC               	bsf	188,6,c	;volatile
 31501                           
 31502                           ; BSR set to: 61
 31503  00949A  0012               	return		;funcret
 31504  00949C                     __end_of_SX1276WriteBuffer:
 31505                           	opt callstack 0
 31506                           
 31507 ;; *************** function _SPI1_WriteBlock *****************
 31508 ;; Defined at:
 31509 ;;		line 121 in file "mcc_generated_files/spi1.c"
 31510 ;; Parameters:    Size  Location     Type
 31511 ;;  block           2    2[COMRAM] PTR void 
 31512 ;;		 -> SX1276Write@data(1), nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 31513 ;;  blockSize       2    4[COMRAM] unsigned int 
 31514 ;; Auto vars:     Size  Location     Type
 31515 ;;  data            2    6[COMRAM] PTR unsigned char 
 31516 ;;		 -> SX1276Write@data(1), nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 31517 ;; Return value:  Size  Location     Type
 31518 ;;                  1    wreg      void 
 31519 ;; Registers used:
 31520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31521 ;; Tracked objects:
 31522 ;;		On entry : 3F/3D
 31523 ;;		On exit  : 3F/3D
 31524 ;;		Unchanged: 0/0
 31525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31526 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31529 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31530 ;;Total ram usage:        6 bytes
 31531 ;; Hardware stack levels used:    1
 31532 ;; Hardware stack levels required when called:    8
 31533 ;; This function calls:
 31534 ;;		_SPI1_ExchangeByte
 31535 ;; This function is called by:
 31536 ;;		_SX1276WriteBuffer
 31537 ;;		_PHY_DataReq
 31538 ;; This function uses a non-reentrant model
 31539 ;;
 31540                           
 31541                           	psect	text204
 31542  0090F2                     __ptext204:
 31543                           	opt callstack 0
 31544  0090F2                     _SPI1_WriteBlock:
 31545                           	opt callstack 15
 31546                           
 31547                           ; BSR set to: 61
 31548                           ;mcc_generated_files/spi1.c: 121: void SPI1_WriteBlock(void *block, size_t blockSize);mc
      +                          c_generated_files/spi1.c: 122: {;mcc_generated_files/spi1.c: 123:     uint8_t *data = bl
      +                          ock;
 31549                           
 31550                           ; BSR set to: 61
 31551                           ;incstack = 0
 31552  0090F2  0060  F00C  F007   	movff	SPI1_WriteBlock@block,SPI1_WriteBlock@data
 31553  0090F8  0060  F010  F008   	movff	SPI1_WriteBlock@block+1,SPI1_WriteBlock@data+1
 31554                           
 31555                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 31556  0090FE  D00B               	goto	l14440
 31557  009100                     l14436:
 31558                           
 31559                           ; BSR set to: 61
 31560                           ;mcc_generated_files/spi1.c: 125:     {;mcc_generated_files/spi1.c: 126:         SPI1_Ex
      +                          changeByte(*data++);
 31561  009100  0060  F01F  FFD9   	movff	SPI1_WriteBlock@data,fsr2l
 31562  009106  0060  F023  FFDA   	movff	SPI1_WriteBlock@data+1,fsr2h
 31563  00910C  50DF               	movf	indf2,w,c
 31564  00910E  ECB6  F04B         	call	_SPI1_ExchangeByte
 31565                           
 31566                           ; BSR set to: 61
 31567  009112  4A07               	infsnz	SPI1_WriteBlock@data^0,f,c
 31568  009114  2A08               	incf	(SPI1_WriteBlock@data+1)^0,f,c
 31569  009116                     l14440:
 31570                           
 31571                           ; BSR set to: 61
 31572                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 31573  009116  0605               	decf	SPI1_WriteBlock@blockSize^0,f,c
 31574  009118  A0D8               	btfss	status,0,c
 31575  00911A  0606               	decf	(SPI1_WriteBlock@blockSize+1)^0,f,c
 31576  00911C  2805               	incf	SPI1_WriteBlock@blockSize^0,w,c
 31577  00911E  E1F0               	bnz	l14436
 31578  009120  2806               	incf	(SPI1_WriteBlock@blockSize+1)^0,w,c
 31579  009122  B4D8               	btfsc	status,2,c
 31580  009124  0012               	return	
 31581  009126  D7EC               	goto	l14436
 31582  009128                     __end_of_SPI1_WriteBlock:
 31583                           	opt callstack 0
 31584                           
 31585 ;; *************** function _SX1276Read *****************
 31586 ;; Defined at:
 31587 ;;		line 32 in file "../phy/sx1216/phy_src/phy.c"
 31588 ;; Parameters:    Size  Location     Type
 31589 ;;  addr            1    wreg     unsigned char 
 31590 ;; Auto vars:     Size  Location     Type
 31591 ;;  addr            1   12[COMRAM] unsigned char 
 31592 ;;  data            1   13[COMRAM] unsigned char 
 31593 ;; Return value:  Size  Location     Type
 31594 ;;                  1    wreg      unsigned char 
 31595 ;; Registers used:
 31596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31597 ;; Tracked objects:
 31598 ;;		On entry : 0/39
 31599 ;;		On exit  : 3F/3D
 31600 ;;		Unchanged: 0/0
 31601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31603 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31605 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31606 ;;Total ram usage:        2 bytes
 31607 ;; Hardware stack levels used:    1
 31608 ;; Hardware stack levels required when called:   10
 31609 ;; This function calls:
 31610 ;;		_SX1276ReadBuffer
 31611 ;; This function is called by:
 31612 ;;		_setSpreadingFactor
 31613 ;;		_setSignalBandwidth
 31614 ;;		_getSpreadingFactor
 31615 ;;		_getSignalBandwidth
 31616 ;;		_setCodingRate4
 31617 ;;		_enableCrc
 31618 ;;		_explicitHeaderMode
 31619 ;;		_implicitHeaderMode
 31620 ;;		_initRadio
 31621 ;;		_cad
 31622 ;;		_DIO0_Receive_ISR
 31623 ;;		_radio_engine
 31624 ;; This function uses a non-reentrant model
 31625 ;;
 31626                           
 31627                           	psect	text205
 31628  009848                     __ptext205:
 31629                           	opt callstack 0
 31630  009848                     _SX1276Read:
 31631                           	opt callstack 14
 31632                           
 31633                           ; BSR set to: 61
 31634                           ;incstack = 0
 31635                           ;SX1276Read@addr stored from wreg
 31636  009848  6E0D               	movwf	SX1276Read@addr^0,c
 31637                           
 31638                           ;../phy/sx1216/phy_src/phy.c: 32: static uint8_t SX1276Read( uint8_t addr );../phy/sx121
      +                          6/phy_src/phy.c: 33: {;../phy/sx1216/phy_src/phy.c: 34:     uint8_t data;;../phy/sx1216/
      +                          phy_src/phy.c: 35:     SX1276ReadBuffer( addr, &data, 1 );
 31639  00984A  0E0E               	movlw	low SX1276Read@data
 31640  00984C  6E09               	movwf	SX1276ReadBuffer@buffer^0,c
 31641  00984E  6A0A               	clrf	(SX1276ReadBuffer@buffer+1)^0,c
 31642  009850  0E01               	movlw	1
 31643  009852  6E0B               	movwf	SX1276ReadBuffer@size^0,c
 31644  009854  500D               	movf	SX1276Read@addr^0,w,c
 31645  009856  ECF0  F049         	call	_SX1276ReadBuffer
 31646                           
 31647                           ; BSR set to: 61
 31648                           ;../phy/sx1216/phy_src/phy.c: 36:     return data;
 31649  00985A  500E               	movf	SX1276Read@data^0,w,c
 31650                           
 31651                           ; BSR set to: 61
 31652  00985C  0012               	return		;funcret
 31653  00985E                     __end_of_SX1276Read:
 31654                           	opt callstack 0
 31655                           
 31656 ;; *************** function _SX1276ReadBuffer *****************
 31657 ;; Defined at:
 31658 ;;		line 57 in file "../phy/sx1216/phy_src/phy.c"
 31659 ;; Parameters:    Size  Location     Type
 31660 ;;  addr            1    wreg     unsigned char 
 31661 ;;  buffer          2    8[COMRAM] PTR unsigned char 
 31662 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 31663 ;;  size            1   10[COMRAM] unsigned char 
 31664 ;; Auto vars:     Size  Location     Type
 31665 ;;  addr            1   11[COMRAM] unsigned char 
 31666 ;;  i               1    0        unsigned char 
 31667 ;; Return value:  Size  Location     Type
 31668 ;;                  1    wreg      void 
 31669 ;; Registers used:
 31670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31671 ;; Tracked objects:
 31672 ;;		On entry : 0/3D
 31673 ;;		On exit  : 3F/3D
 31674 ;;		Unchanged: 0/0
 31675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31676 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31677 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31679 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31680 ;;Total ram usage:        4 bytes
 31681 ;; Hardware stack levels used:    1
 31682 ;; Hardware stack levels required when called:    9
 31683 ;; This function calls:
 31684 ;;		_SPI1_ExchangeByte
 31685 ;;		_SPI1_ReadBlock
 31686 ;; This function is called by:
 31687 ;;		_SX1276Read
 31688 ;;		_DIO0_Receive_ISR
 31689 ;; This function uses a non-reentrant model
 31690 ;;
 31691                           
 31692                           	psect	text206
 31693  0093E0                     __ptext206:
 31694                           	opt callstack 0
 31695  0093E0                     _SX1276ReadBuffer:
 31696                           	opt callstack 14
 31697                           
 31698                           ; BSR set to: 61
 31699                           ;incstack = 0
 31700                           ;SX1276ReadBuffer@addr stored from wreg
 31701  0093E0  6E0C               	movwf	SX1276ReadBuffer@addr^0,c
 31702                           
 31703                           ;../phy/sx1216/phy_src/phy.c: 57: static void SX1276ReadBuffer( uint8_t addr, uint8_t *b
      +                          uffer, uint8_t size );../phy/sx1216/phy_src/phy.c: 58: {;../phy/sx1216/phy_src/phy.c: 59
      +                          :     uint8_t i;;../phy/sx1216/phy_src/phy.c: 61:     do { LATCbits.LATC6 = 0; } while(0
      +                          );
 31704  0093E2  9CBC               	bcf	188,6,c	;volatile
 31705                           
 31706                           ;../phy/sx1216/phy_src/phy.c: 62:     SPI1_ExchangeByte(addr & 0x7F);
 31707  0093E4  500C               	movf	SX1276ReadBuffer@addr^0,w,c
 31708  0093E6  0B7F               	andlw	127
 31709  0093E8  ECB6  F04B         	call	_SPI1_ExchangeByte
 31710                           
 31711                           ; BSR set to: 61
 31712                           ;../phy/sx1216/phy_src/phy.c: 63:     SPI1_ReadBlock(buffer, size);
 31713  0093EC  0060  F024  F003   	movff	SX1276ReadBuffer@buffer,SPI1_ReadBlock@block
 31714  0093F2  0060  F028  F004   	movff	SX1276ReadBuffer@buffer+1,SPI1_ReadBlock@block+1
 31715  0093F8  0060  F02C  F005   	movff	SX1276ReadBuffer@size,SPI1_ReadBlock@blockSize
 31716  0093FE  6A06               	clrf	(SPI1_ReadBlock@blockSize+1)^0,c
 31717  009400  EC0C  F048         	call	_SPI1_ReadBlock	;wreg free
 31718                           
 31719                           ; BSR set to: 61
 31720  009404  8CBC               	bsf	188,6,c	;volatile
 31721                           
 31722                           ; BSR set to: 61
 31723  009406  0012               	return		;funcret
 31724  009408                     __end_of_SX1276ReadBuffer:
 31725                           	opt callstack 0
 31726                           
 31727 ;; *************** function _SPI1_ReadBlock *****************
 31728 ;; Defined at:
 31729 ;;		line 130 in file "mcc_generated_files/spi1.c"
 31730 ;; Parameters:    Size  Location     Type
 31731 ;;  block           2    2[COMRAM] PTR void 
 31732 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 31733 ;;  blockSize       2    4[COMRAM] unsigned int 
 31734 ;; Auto vars:     Size  Location     Type
 31735 ;;  data            2    6[COMRAM] PTR unsigned char 
 31736 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 31737 ;; Return value:  Size  Location     Type
 31738 ;;                  1    wreg      void 
 31739 ;; Registers used:
 31740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31741 ;; Tracked objects:
 31742 ;;		On entry : 3F/3D
 31743 ;;		On exit  : 3F/3D
 31744 ;;		Unchanged: 0/0
 31745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31746 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31747 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31749 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31750 ;;Total ram usage:        6 bytes
 31751 ;; Hardware stack levels used:    1
 31752 ;; Hardware stack levels required when called:    8
 31753 ;; This function calls:
 31754 ;;		_SPI1_ExchangeByte
 31755 ;; This function is called by:
 31756 ;;		_SX1276ReadBuffer
 31757 ;; This function uses a non-reentrant model
 31758 ;;
 31759                           
 31760                           	psect	text207
 31761  009018                     __ptext207:
 31762                           	opt callstack 0
 31763  009018                     _SPI1_ReadBlock:
 31764                           	opt callstack 14
 31765                           
 31766                           ; BSR set to: 61
 31767                           ;mcc_generated_files/spi1.c: 130: void SPI1_ReadBlock(void *block, size_t blockSize);mcc
      +                          _generated_files/spi1.c: 131: {;mcc_generated_files/spi1.c: 132:     uint8_t *data = blo
      +                          ck;
 31768                           
 31769                           ; BSR set to: 61
 31770                           ;incstack = 0
 31771  009018  0060  F00C  F007   	movff	SPI1_ReadBlock@block,SPI1_ReadBlock@data
 31772  00901E  0060  F010  F008   	movff	SPI1_ReadBlock@block+1,SPI1_ReadBlock@data+1
 31773                           
 31774                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 31775  009024  D00C               	goto	l14448
 31776  009026                     l14444:
 31777                           
 31778                           ; BSR set to: 61
 31779                           ;mcc_generated_files/spi1.c: 134:     {;mcc_generated_files/spi1.c: 135:         *data++
      +                           = SPI1_ExchangeByte(0);
 31780  009026  0E00               	movlw	0
 31781  009028  ECB6  F04B         	call	_SPI1_ExchangeByte
 31782  00902C  0060  F01F  FFD9   	movff	SPI1_ReadBlock@data,fsr2l
 31783  009032  0060  F023  FFDA   	movff	SPI1_ReadBlock@data+1,fsr2h
 31784  009038  6EDF               	movwf	indf2,c
 31785                           
 31786                           ; BSR set to: 61
 31787  00903A  4A07               	infsnz	SPI1_ReadBlock@data^0,f,c
 31788  00903C  2A08               	incf	(SPI1_ReadBlock@data+1)^0,f,c
 31789  00903E                     l14448:
 31790                           
 31791                           ; BSR set to: 61
 31792                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 31793  00903E  0605               	decf	SPI1_ReadBlock@blockSize^0,f,c
 31794  009040  A0D8               	btfss	status,0,c
 31795  009042  0606               	decf	(SPI1_ReadBlock@blockSize+1)^0,f,c
 31796  009044  2805               	incf	SPI1_ReadBlock@blockSize^0,w,c
 31797  009046  E1EF               	bnz	l14444
 31798  009048  2806               	incf	(SPI1_ReadBlock@blockSize+1)^0,w,c
 31799  00904A  B4D8               	btfsc	status,2,c
 31800  00904C  0012               	return	
 31801  00904E  D7EB               	goto	l14444
 31802  009050                     __end_of_SPI1_ReadBlock:
 31803                           	opt callstack 0
 31804                           
 31805 ;; *************** function _SPI1_ExchangeByte *****************
 31806 ;; Defined at:
 31807 ;;		line 100 in file "mcc_generated_files/spi1.c"
 31808 ;; Parameters:    Size  Location     Type
 31809 ;;  data            1    wreg     unsigned char 
 31810 ;; Auto vars:     Size  Location     Type
 31811 ;;  data            1    1[COMRAM] unsigned char 
 31812 ;; Return value:  Size  Location     Type
 31813 ;;                  1    wreg      unsigned char 
 31814 ;; Registers used:
 31815 ;;		wreg, status,2
 31816 ;; Tracked objects:
 31817 ;;		On entry : 0/3D
 31818 ;;		On exit  : 3F/3D
 31819 ;;		Unchanged: 0/0
 31820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31824 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31825 ;;Total ram usage:        1 bytes
 31826 ;; Hardware stack levels used:    1
 31827 ;; Hardware stack levels required when called:    7
 31828 ;; This function calls:
 31829 ;;		Nothing
 31830 ;; This function is called by:
 31831 ;;		_SPI1_WriteBlock
 31832 ;;		_SPI1_ReadBlock
 31833 ;;		_SX1276ReadBuffer
 31834 ;;		_SX1276WriteBuffer
 31835 ;;		_PHY_DataReq
 31836 ;; This function uses a non-reentrant model
 31837 ;;
 31838                           
 31839                           	psect	text208
 31840  00976C                     __ptext208:
 31841                           	opt callstack 0
 31842  00976C                     _SPI1_ExchangeByte:
 31843                           	opt callstack 15
 31844                           
 31845                           ; BSR set to: 61
 31846                           ;incstack = 0
 31847                           ;SPI1_ExchangeByte@data stored from wreg
 31848  00976C  6E02               	movwf	SPI1_ExchangeByte@data^0,c
 31849                           
 31850                           ;mcc_generated_files/spi1.c: 100: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     SPI1TCNTL = 1;
 31851  00976E  0E01               	movlw	1
 31852  009770  013D               	movlb	61	; () banked
 31853  009772  6F12               	movwf	18,b	;volatile
 31854                           
 31855                           ; BSR set to: 61
 31856                           ;mcc_generated_files/spi1.c: 103:     SPI1TXB = data;
 31857  009774  0060  F00B  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 31858  00977A                     l1086:
 31859  00977A  0139               	movlb	57	; () banked
 31860  00977C  A9A2               	btfss	162,4,b	;volatile
 31861  00977E  D7FD               	goto	l1086
 31862                           
 31863                           ; BSR set to: 57
 31864                           ;mcc_generated_files/spi1.c: 105:     return SPI1RXB;
 31865  009780  013D               	movlb	61	; () banked
 31866  009782  5110               	movf	16,w,b	;volatile
 31867                           
 31868                           ; BSR set to: 61
 31869  009784  0012               	return		;funcret
 31870  009786                     __end_of_SPI1_ExchangeByte:
 31871                           	opt callstack 0
 31872                           
 31873 ;; *************** function _computeFRF *****************
 31874 ;; Defined at:
 31875 ;;		line 705 in file "../phy/sx1216/phy_src/phy.c"
 31876 ;; Parameters:    Size  Location     Type
 31877 ;;		None
 31878 ;; Auto vars:     Size  Location     Type
 31879 ;;  num             4   42[COMRAM] unsigned long 
 31880 ;;  num_mod         4   38[COMRAM] unsigned long 
 31881 ;;  frequency       4   34[COMRAM] unsigned long 
 31882 ;;  i               1   46[COMRAM] unsigned char 
 31883 ;; Return value:  Size  Location     Type
 31884 ;;                  1    wreg      void 
 31885 ;; Registers used:
 31886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31887 ;; Tracked objects:
 31888 ;;		On entry : 0/0
 31889 ;;		On exit  : 0/0
 31890 ;;		Unchanged: 0/0
 31891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31893 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31895 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31896 ;;Total ram usage:       13 bytes
 31897 ;; Hardware stack levels used:    1
 31898 ;; Hardware stack levels required when called:    8
 31899 ;; This function calls:
 31900 ;;		___lldiv
 31901 ;;		___llmod
 31902 ;; This function is called by:
 31903 ;;		_initRadio
 31904 ;; This function uses a non-reentrant model
 31905 ;;
 31906                           
 31907                           	psect	text209
 31908  0040EE                     __ptext209:
 31909                           	opt callstack 0
 31910  0040EE                     _computeFRF:
 31911                           	opt callstack 18
 31912                           
 31913                           ;../phy/sx1216/phy_src/phy.c: 707:     for(uint8_t i = 0; i < (sizeof(fhssList)/4);i++)
 31914                           
 31915                           ; BSR set to: 61
 31916                           ;incstack = 0
 31917  0040EE  0E00               	movlw	0
 31918  0040F0  6E2F               	movwf	computeFRF@i^0,c
 31919  0040F2                     l15602:
 31920                           
 31921                           ;../phy/sx1216/phy_src/phy.c: 708:     {;../phy/sx1216/phy_src/phy.c: 709:         uint3
      +                          2_t num, num_mod, frequency;;../phy/sx1216/phy_src/phy.c: 710:         frequency = fhssL
      +                          ist[i];
 31922  0040F2  502F               	movf	computeFRF@i^0,w,c
 31923  0040F4  0D04               	mullw	4
 31924  0040F6  0EAB               	movlw	low _fhssList
 31925  0040F8  24F3               	addwf	243,w,c
 31926  0040FA  6EF6               	movwf	tblptrl,c
 31927  0040FC  0EFC               	movlw	high _fhssList
 31928  0040FE  20F4               	addwfc	244,w,c
 31929  004100  6EF7               	movwf	tblptrh,c
 31930  004102                     	if	1	;There are 3 active tblptr bytes
 31931  004102  6AF8               	clrf	tblptru,c
 31932  004104  0E00               	movlw	low (__mediumconst shr (0+16))
 31933  004106  22F8               	addwfc	tblptru,f,c
 31934  004108                     	endif
 31935  004108  0009               	tblrd		*+
 31936  00410A  006F FFD4  F023    	movff	tablat,computeFRF@frequency
 31937  004110  0009               	tblrd		*+
 31938  004112  006F FFD4  F024    	movff	tablat,computeFRF@frequency+1
 31939  004118  0009               	tblrd		*+
 31940  00411A  006F FFD4  F025    	movff	tablat,computeFRF@frequency+2
 31941  004120  000A               	tblrd		*-
 31942  004122  006F FFD4  F026    	movff	tablat,computeFRF@frequency+3
 31943                           
 31944                           ;../phy/sx1216/phy_src/phy.c: 717:         num = frequency / 15625;
 31945  004128  0060  F08C  F016   	movff	computeFRF@frequency,___lldiv@dividend
 31946  00412E  0060  F090  F017   	movff	computeFRF@frequency+1,___lldiv@dividend+1
 31947  004134  0060  F094  F018   	movff	computeFRF@frequency+2,___lldiv@dividend+2
 31948  00413A  0060  F098  F019   	movff	computeFRF@frequency+3,___lldiv@dividend+3
 31949  004140  0E09               	movlw	9
 31950  004142  6E1A               	movwf	___lldiv@divisor^0,c
 31951  004144  0E3D               	movlw	61
 31952  004146  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 31953  004148  0E00               	movlw	0
 31954  00414A  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 31955  00414C  0E00               	movlw	0
 31956  00414E  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 31957  004150  EC4B  F03D         	call	___lldiv	;wreg free
 31958  004154  0060  F058  F02B   	movff	?___lldiv,computeFRF@num
 31959  00415A  0060  F05C  F02C   	movff	?___lldiv+1,computeFRF@num+1
 31960  004160  0060  F060  F02D   	movff	?___lldiv+2,computeFRF@num+2
 31961  004166  0060  F064  F02E   	movff	?___lldiv+3,computeFRF@num+3
 31962                           
 31963                           ;../phy/sx1216/phy_src/phy.c: 718:         num_mod = frequency % 15625;
 31964  00416C  0060  F08C  F002   	movff	computeFRF@frequency,___llmod@dividend
 31965  004172  0060  F090  F003   	movff	computeFRF@frequency+1,___llmod@dividend+1
 31966  004178  0060  F094  F004   	movff	computeFRF@frequency+2,___llmod@dividend+2
 31967  00417E  0060  F098  F005   	movff	computeFRF@frequency+3,___llmod@dividend+3
 31968  004184  0E09               	movlw	9
 31969  004186  6E06               	movwf	___llmod@divisor^0,c
 31970  004188  0E3D               	movlw	61
 31971  00418A  6E07               	movwf	(___llmod@divisor+1)^0,c
 31972  00418C  0E00               	movlw	0
 31973  00418E  6E08               	movwf	(___llmod@divisor+2)^0,c
 31974  004190  0E00               	movlw	0
 31975  004192  6E09               	movwf	(___llmod@divisor+3)^0,c
 31976  004194  ECCE  F03F         	call	___llmod	;wreg free
 31977  004198  0060  F008  F027   	movff	?___llmod,computeFRF@num_mod
 31978  00419E  0060  F00C  F028   	movff	?___llmod+1,computeFRF@num_mod+1
 31979  0041A4  0060  F010  F029   	movff	?___llmod+2,computeFRF@num_mod+2
 31980  0041AA  0060  F014  F02A   	movff	?___llmod+3,computeFRF@num_mod+3
 31981                           
 31982                           ;../phy/sx1216/phy_src/phy.c: 722:         num <<= 8;
 31983  0041B0  0060  F0B4  F02E   	movff	computeFRF@num+2,computeFRF@num+3
 31984  0041B6  0060  F0B0  F02D   	movff	computeFRF@num+1,computeFRF@num+2
 31985  0041BC  0060  F0AC  F02C   	movff	computeFRF@num,computeFRF@num+1
 31986  0041C2  6A2B               	clrf	computeFRF@num^0,c
 31987                           
 31988                           ;../phy/sx1216/phy_src/phy.c: 723:         num_mod <<= 8;
 31989  0041C4  0060  F0A4  F02A   	movff	computeFRF@num_mod+2,computeFRF@num_mod+3
 31990  0041CA  0060  F0A0  F029   	movff	computeFRF@num_mod+1,computeFRF@num_mod+2
 31991  0041D0  0060  F09C  F028   	movff	computeFRF@num_mod,computeFRF@num_mod+1
 31992  0041D6  6A27               	clrf	computeFRF@num_mod^0,c
 31993                           
 31994                           ;../phy/sx1216/phy_src/phy.c: 727:         num_mod = num_mod / 15625;
 31995  0041D8  0060  F09C  F016   	movff	computeFRF@num_mod,___lldiv@dividend
 31996  0041DE  0060  F0A0  F017   	movff	computeFRF@num_mod+1,___lldiv@dividend+1
 31997  0041E4  0060  F0A4  F018   	movff	computeFRF@num_mod+2,___lldiv@dividend+2
 31998  0041EA  0060  F0A8  F019   	movff	computeFRF@num_mod+3,___lldiv@dividend+3
 31999  0041F0  0E09               	movlw	9
 32000  0041F2  6E1A               	movwf	___lldiv@divisor^0,c
 32001  0041F4  0E3D               	movlw	61
 32002  0041F6  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 32003  0041F8  0E00               	movlw	0
 32004  0041FA  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 32005  0041FC  0E00               	movlw	0
 32006  0041FE  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 32007  004200  EC4B  F03D         	call	___lldiv	;wreg free
 32008  004204  0060  F058  F027   	movff	?___lldiv,computeFRF@num_mod
 32009  00420A  0060  F05C  F028   	movff	?___lldiv+1,computeFRF@num_mod+1
 32010  004210  0060  F060  F029   	movff	?___lldiv+2,computeFRF@num_mod+2
 32011  004216  0060  F064  F02A   	movff	?___lldiv+3,computeFRF@num_mod+3
 32012                           
 32013                           ;../phy/sx1216/phy_src/phy.c: 728:         num += num_mod;
 32014  00421C  5027               	movf	computeFRF@num_mod^0,w,c
 32015  00421E  262B               	addwf	computeFRF@num^0,f,c
 32016  004220  5028               	movf	(computeFRF@num_mod+1)^0,w,c
 32017  004222  222C               	addwfc	(computeFRF@num+1)^0,f,c
 32018  004224  5029               	movf	(computeFRF@num_mod+2)^0,w,c
 32019  004226  222D               	addwfc	(computeFRF@num+2)^0,f,c
 32020  004228  502A               	movf	(computeFRF@num_mod+3)^0,w,c
 32021  00422A  222E               	addwfc	(computeFRF@num+3)^0,f,c
 32022                           
 32023                           ;../phy/sx1216/phy_src/phy.c: 730:         fhssReg[i][0] = (num >> 16);
 32024  00422C  502F               	movf	computeFRF@i^0,w,c
 32025  00422E  0D03               	mullw	3
 32026  004230  0E00               	movlw	low _fhssReg
 32027  004232  24F3               	addwf	243,w,c
 32028  004234  6ED9               	movwf	fsr2l,c
 32029  004236  0E05               	movlw	high _fhssReg
 32030  004238  20F4               	addwfc	prodh,w,c
 32031  00423A  6EDA               	movwf	fsr2h,c
 32032  00423C  0060  F0B7  FFDF   	movff	computeFRF@num+2,indf2
 32033                           
 32034                           ;../phy/sx1216/phy_src/phy.c: 731:         fhssReg[i][1] = (num >> 8);
 32035  004242  502F               	movf	computeFRF@i^0,w,c
 32036  004244  0D03               	mullw	3
 32037  004246  0E01               	movlw	low (_fhssReg+1)
 32038  004248  24F3               	addwf	243,w,c
 32039  00424A  6ED9               	movwf	fsr2l,c
 32040  00424C  0E05               	movlw	high (_fhssReg+1)
 32041  00424E  20F4               	addwfc	prodh,w,c
 32042  004250  6EDA               	movwf	fsr2h,c
 32043  004252  0060  F0B3  FFDF   	movff	computeFRF@num+1,indf2
 32044                           
 32045                           ;../phy/sx1216/phy_src/phy.c: 732:         fhssReg[i][2] = (num);
 32046  004258  502F               	movf	computeFRF@i^0,w,c
 32047  00425A  0D03               	mullw	3
 32048  00425C  0E02               	movlw	low (_fhssReg+2)
 32049  00425E  24F3               	addwf	243,w,c
 32050  004260  6ED9               	movwf	fsr2l,c
 32051  004262  0E05               	movlw	high (_fhssReg+2)
 32052  004264  20F4               	addwfc	prodh,w,c
 32053  004266  6EDA               	movwf	fsr2h,c
 32054  004268  0060  F0AF  FFDF   	movff	computeFRF@num,indf2
 32055                           
 32056                           ;../phy/sx1216/phy_src/phy.c: 733:     }
 32057  00426E  2A2F               	incf	computeFRF@i^0,f,c
 32058  004270  0E3E               	movlw	62
 32059  004272  642F               	cpfsgt	computeFRF@i^0,c
 32060  004274  D73E               	goto	l15602
 32061  004276  0012               	return	
 32062  004278                     __end_of_computeFRF:
 32063                           	opt callstack 0
 32064                           
 32065 ;; *************** function ___llmod *****************
 32066 ;; Defined at:
 32067 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\llmod.c"
 32068 ;; Parameters:    Size  Location     Type
 32069 ;;  dividend        4    1[COMRAM] unsigned long 
 32070 ;;  divisor         4    5[COMRAM] unsigned long 
 32071 ;; Auto vars:     Size  Location     Type
 32072 ;;  counter         1    9[COMRAM] unsigned char 
 32073 ;; Return value:  Size  Location     Type
 32074 ;;                  4    1[COMRAM] unsigned long 
 32075 ;; Registers used:
 32076 ;;		wreg, status,2, status,0
 32077 ;; Tracked objects:
 32078 ;;		On entry : 0/0
 32079 ;;		On exit  : 0/0
 32080 ;;		Unchanged: 0/0
 32081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32082 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32085 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32086 ;;Total ram usage:        9 bytes
 32087 ;; Hardware stack levels used:    1
 32088 ;; Hardware stack levels required when called:    7
 32089 ;; This function calls:
 32090 ;;		Nothing
 32091 ;; This function is called by:
 32092 ;;		_setFrequency
 32093 ;;		_computeFRF
 32094 ;; This function uses a non-reentrant model
 32095 ;;
 32096                           
 32097                           	psect	text210
 32098  007F9C                     __ptext210:
 32099                           	opt callstack 0
 32100  007F9C                     ___llmod:
 32101                           	opt callstack 18
 32102                           
 32103                           ;incstack = 0
 32104  007F9C  5006               	movf	___llmod@divisor^0,w,c
 32105  007F9E  1007               	iorwf	(___llmod@divisor+1)^0,w,c
 32106  007FA0  1008               	iorwf	(___llmod@divisor+2)^0,w,c
 32107  007FA2  1009               	iorwf	(___llmod@divisor+3)^0,w,c
 32108  007FA4  B4D8               	btfsc	status,2,c
 32109  007FA6  D024               	goto	l3731
 32110  007FA8  0E01               	movlw	1
 32111  007FAA  6E0A               	movwf	___llmod@counter^0,c
 32112  007FAC  D006               	goto	l15220
 32113  007FAE                     l15218:
 32114  007FAE  90D8               	bcf	status,0,c
 32115  007FB0  3606               	rlcf	___llmod@divisor^0,f,c
 32116  007FB2  3607               	rlcf	(___llmod@divisor+1)^0,f,c
 32117  007FB4  3608               	rlcf	(___llmod@divisor+2)^0,f,c
 32118  007FB6  3609               	rlcf	(___llmod@divisor+3)^0,f,c
 32119  007FB8  2A0A               	incf	___llmod@counter^0,f,c
 32120  007FBA                     l15220:
 32121  007FBA  AE09               	btfss	(___llmod@divisor+3)^0,7,c
 32122  007FBC  D7F8               	goto	l15218
 32123  007FBE                     u14850:
 32124  007FBE  5006               	movf	___llmod@divisor^0,w,c
 32125  007FC0  5C02               	subwf	___llmod@dividend^0,w,c
 32126  007FC2  5007               	movf	(___llmod@divisor+1)^0,w,c
 32127  007FC4  5803               	subwfb	(___llmod@dividend+1)^0,w,c
 32128  007FC6  5008               	movf	(___llmod@divisor+2)^0,w,c
 32129  007FC8  5804               	subwfb	(___llmod@dividend+2)^0,w,c
 32130  007FCA  5009               	movf	(___llmod@divisor+3)^0,w,c
 32131  007FCC  5805               	subwfb	(___llmod@dividend+3)^0,w,c
 32132  007FCE  A0D8               	btfss	status,0,c
 32133  007FD0  D008               	goto	l15226
 32134  007FD2  5006               	movf	___llmod@divisor^0,w,c
 32135  007FD4  5E02               	subwf	___llmod@dividend^0,f,c
 32136  007FD6  5007               	movf	(___llmod@divisor+1)^0,w,c
 32137  007FD8  5A03               	subwfb	(___llmod@dividend+1)^0,f,c
 32138  007FDA  5008               	movf	(___llmod@divisor+2)^0,w,c
 32139  007FDC  5A04               	subwfb	(___llmod@dividend+2)^0,f,c
 32140  007FDE  5009               	movf	(___llmod@divisor+3)^0,w,c
 32141  007FE0  5A05               	subwfb	(___llmod@dividend+3)^0,f,c
 32142  007FE2                     l15226:
 32143  007FE2  90D8               	bcf	status,0,c
 32144  007FE4  3209               	rrcf	(___llmod@divisor+3)^0,f,c
 32145  007FE6  3208               	rrcf	(___llmod@divisor+2)^0,f,c
 32146  007FE8  3207               	rrcf	(___llmod@divisor+1)^0,f,c
 32147  007FEA  3206               	rrcf	___llmod@divisor^0,f,c
 32148  007FEC  2E0A               	decfsz	___llmod@counter^0,f,c
 32149  007FEE  D7E7               	goto	u14850
 32150  007FF0                     l3731:
 32151  007FF0  0060  F008  F002   	movff	___llmod@dividend,?___llmod
 32152  007FF6  0060  F00C  F003   	movff	___llmod@dividend+1,?___llmod+1
 32153  007FFC  0060  F010  F004   	movff	___llmod@dividend+2,?___llmod+2
 32154  008002  0060  F014  F005   	movff	___llmod@dividend+3,?___llmod+3
 32155  008008  0012               	return		;funcret
 32156  00800A                     __end_of___llmod:
 32157                           	opt callstack 0
 32158                           
 32159 ;; *************** function ___lldiv *****************
 32160 ;; Defined at:
 32161 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 32162 ;; Parameters:    Size  Location     Type
 32163 ;;  dividend        4   21[COMRAM] unsigned long 
 32164 ;;  divisor         4   25[COMRAM] unsigned long 
 32165 ;; Auto vars:     Size  Location     Type
 32166 ;;  quotient        4   29[COMRAM] unsigned long 
 32167 ;;  counter         1   33[COMRAM] unsigned char 
 32168 ;; Return value:  Size  Location     Type
 32169 ;;                  4   21[COMRAM] unsigned long 
 32170 ;; Registers used:
 32171 ;;		wreg, status,2, status,0
 32172 ;; Tracked objects:
 32173 ;;		On entry : 0/3D
 32174 ;;		On exit  : 0/0
 32175 ;;		Unchanged: 0/0
 32176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32177 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32178 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32180 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32181 ;;Total ram usage:       13 bytes
 32182 ;; Hardware stack levels used:    1
 32183 ;; Hardware stack levels required when called:    7
 32184 ;; This function calls:
 32185 ;;		Nothing
 32186 ;; This function is called by:
 32187 ;;		_setFrequency
 32188 ;;		_setSpreadingFactor
 32189 ;;		_setSignalBandwidth
 32190 ;;		_computeFRF
 32191 ;; This function uses a non-reentrant model
 32192 ;;
 32193                           
 32194                           	psect	text211
 32195  007A96                     __ptext211:
 32196                           	opt callstack 0
 32197  007A96                     ___lldiv:
 32198                           	opt callstack 18
 32199                           
 32200                           ;incstack = 0
 32201  007A96  0E00               	movlw	0
 32202  007A98  6E1E               	movwf	___lldiv@quotient^0,c
 32203  007A9A  0E00               	movlw	0
 32204  007A9C  6E1F               	movwf	(___lldiv@quotient+1)^0,c
 32205  007A9E  0E00               	movlw	0
 32206  007AA0  6E20               	movwf	(___lldiv@quotient+2)^0,c
 32207  007AA2  0E00               	movlw	0
 32208  007AA4  6E21               	movwf	(___lldiv@quotient+3)^0,c
 32209  007AA6  501A               	movf	___lldiv@divisor^0,w,c
 32210  007AA8  101B               	iorwf	(___lldiv@divisor+1)^0,w,c
 32211  007AAA  101C               	iorwf	(___lldiv@divisor+2)^0,w,c
 32212  007AAC  101D               	iorwf	(___lldiv@divisor+3)^0,w,c
 32213  007AAE  B4D8               	btfsc	status,2,c
 32214  007AB0  D02A               	goto	l3338
 32215  007AB2  0E01               	movlw	1
 32216  007AB4  6E22               	movwf	___lldiv@counter^0,c
 32217  007AB6  D006               	goto	l15178
 32218  007AB8                     l15176:
 32219  007AB8  90D8               	bcf	status,0,c
 32220  007ABA  361A               	rlcf	___lldiv@divisor^0,f,c
 32221  007ABC  361B               	rlcf	(___lldiv@divisor+1)^0,f,c
 32222  007ABE  361C               	rlcf	(___lldiv@divisor+2)^0,f,c
 32223  007AC0  361D               	rlcf	(___lldiv@divisor+3)^0,f,c
 32224  007AC2  2A22               	incf	___lldiv@counter^0,f,c
 32225  007AC4                     l15178:
 32226  007AC4  AE1D               	btfss	(___lldiv@divisor+3)^0,7,c
 32227  007AC6  D7F8               	goto	l15176
 32228  007AC8                     u14770:
 32229  007AC8  90D8               	bcf	status,0,c
 32230  007ACA  361E               	rlcf	___lldiv@quotient^0,f,c
 32231  007ACC  361F               	rlcf	(___lldiv@quotient+1)^0,f,c
 32232  007ACE  3620               	rlcf	(___lldiv@quotient+2)^0,f,c
 32233  007AD0  3621               	rlcf	(___lldiv@quotient+3)^0,f,c
 32234  007AD2  501A               	movf	___lldiv@divisor^0,w,c
 32235  007AD4  5C16               	subwf	___lldiv@dividend^0,w,c
 32236  007AD6  501B               	movf	(___lldiv@divisor+1)^0,w,c
 32237  007AD8  5817               	subwfb	(___lldiv@dividend+1)^0,w,c
 32238  007ADA  501C               	movf	(___lldiv@divisor+2)^0,w,c
 32239  007ADC  5818               	subwfb	(___lldiv@dividend+2)^0,w,c
 32240  007ADE  501D               	movf	(___lldiv@divisor+3)^0,w,c
 32241  007AE0  5819               	subwfb	(___lldiv@dividend+3)^0,w,c
 32242  007AE2  A0D8               	btfss	status,0,c
 32243  007AE4  D009               	goto	l15188
 32244  007AE6  501A               	movf	___lldiv@divisor^0,w,c
 32245  007AE8  5E16               	subwf	___lldiv@dividend^0,f,c
 32246  007AEA  501B               	movf	(___lldiv@divisor+1)^0,w,c
 32247  007AEC  5A17               	subwfb	(___lldiv@dividend+1)^0,f,c
 32248  007AEE  501C               	movf	(___lldiv@divisor+2)^0,w,c
 32249  007AF0  5A18               	subwfb	(___lldiv@dividend+2)^0,f,c
 32250  007AF2  501D               	movf	(___lldiv@divisor+3)^0,w,c
 32251  007AF4  5A19               	subwfb	(___lldiv@dividend+3)^0,f,c
 32252  007AF6  801E               	bsf	___lldiv@quotient^0,0,c
 32253  007AF8                     l15188:
 32254  007AF8  90D8               	bcf	status,0,c
 32255  007AFA  321D               	rrcf	(___lldiv@divisor+3)^0,f,c
 32256  007AFC  321C               	rrcf	(___lldiv@divisor+2)^0,f,c
 32257  007AFE  321B               	rrcf	(___lldiv@divisor+1)^0,f,c
 32258  007B00  321A               	rrcf	___lldiv@divisor^0,f,c
 32259  007B02  2E22               	decfsz	___lldiv@counter^0,f,c
 32260  007B04  D7E1               	goto	u14770
 32261  007B06                     l3338:
 32262  007B06  0060  F078  F016   	movff	___lldiv@quotient,?___lldiv
 32263  007B0C  0060  F07C  F017   	movff	___lldiv@quotient+1,?___lldiv+1
 32264  007B12  0060  F080  F018   	movff	___lldiv@quotient+2,?___lldiv+2
 32265  007B18  0060  F084  F019   	movff	___lldiv@quotient+3,?___lldiv+3
 32266  007B1E  0012               	return		;funcret
 32267  007B20                     __end_of___lldiv:
 32268                           	opt callstack 0
 32269                           
 32270 ;; *************** function _NWK_Init *****************
 32271 ;; Defined at:
 32272 ;;		line 70 in file "../nwk/nwk_src/nwk.c"
 32273 ;; Parameters:    Size  Location     Type
 32274 ;;		None
 32275 ;; Auto vars:     Size  Location     Type
 32276 ;;  i               1    5[COMRAM] unsigned char 
 32277 ;; Return value:  Size  Location     Type
 32278 ;;                  1    wreg      void 
 32279 ;; Registers used:
 32280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32281 ;; Tracked objects:
 32282 ;;		On entry : 3F/1
 32283 ;;		On exit  : 3F/0
 32284 ;;		Unchanged: 0/0
 32285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32289 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32290 ;;Total ram usage:        1 bytes
 32291 ;; Hardware stack levels used:    1
 32292 ;; Hardware stack levels required when called:    9
 32293 ;; This function calls:
 32294 ;;		_nwkDataReqInit
 32295 ;;		_nwkFrameInit
 32296 ;;		_nwkGroupInit
 32297 ;;		_nwkRouteInit
 32298 ;;		_nwkRxInit
 32299 ;;		_nwkSecurityInit
 32300 ;;		_nwkTxInit
 32301 ;; This function is called by:
 32302 ;;		_SYS_Init
 32303 ;; This function uses a non-reentrant model
 32304 ;;
 32305                           
 32306                           	psect	text212
 32307  0085CE                     __ptext212:
 32308                           	opt callstack 0
 32309  0085CE                     _NWK_Init:
 32310                           	opt callstack 20
 32311                           
 32312                           ; BSR set to: 1
 32313                           ;../nwk/nwk_src/nwk.c: 72:   nwkIb.nwkSeqNum = 0;
 32314                           
 32315                           ;incstack = 0
 32316  0085CE  0E00               	movlw	0
 32317  0085D0  6F35               	movwf	(_nwkIb+4)& (0+255),b
 32318                           
 32319                           ;../nwk/nwk_src/nwk.c: 73:   nwkIb.macSeqNum = 0;
 32320  0085D2  0E00               	movlw	0
 32321  0085D4  6F36               	movwf	(_nwkIb+5)& (0+255),b
 32322                           
 32323                           ;../nwk/nwk_src/nwk.c: 74:   nwkIb.addr = 0;
 32324  0085D6  0E00               	movlw	0
 32325  0085D8  6F32               	movwf	(_nwkIb+1)& (0+255),b
 32326  0085DA  0E00               	movlw	0
 32327  0085DC  6F31               	movwf	_nwkIb& (0+255),b
 32328                           
 32329                           ;../nwk/nwk_src/nwk.c: 75:   nwkIb.lock = 0;
 32330  0085DE  0E00               	movlw	0
 32331  0085E0  6F68               	movwf	(_nwkIb+55)& (0+255),b
 32332  0085E2  0E00               	movlw	0
 32333  0085E4  6F67               	movwf	(_nwkIb+54)& (0+255),b
 32334                           
 32335                           ;../nwk/nwk_src/nwk.c: 77:   for (uint8_t i = 0; i < 16; i++)
 32336  0085E6  0E00               	movlw	0
 32337  0085E8  6E06               	movwf	NWK_Init@i^0,c
 32338  0085EA                     l13676:
 32339                           
 32340                           ; BSR set to: 1
 32341                           ;../nwk/nwk_src/nwk.c: 78:     nwkIb.endpoint[i] = ((void*)0);
 32342  0085EA  5006               	movf	NWK_Init@i^0,w,c
 32343  0085EC  0D02               	mullw	2
 32344  0085EE  0E37               	movlw	low (_nwkIb+6)
 32345  0085F0  24F3               	addwf	243,w,c
 32346  0085F2  6ED9               	movwf	fsr2l,c
 32347  0085F4  0E01               	movlw	high (_nwkIb+6)
 32348  0085F6  20F4               	addwfc	prodh,w,c
 32349  0085F8  6EDA               	movwf	fsr2h,c
 32350  0085FA  0E00               	movlw	0
 32351  0085FC  6EDE               	movwf	postinc2,c
 32352  0085FE  0E00               	movlw	0
 32353  008600  6EDD               	movwf	postdec2,c
 32354                           
 32355                           ; BSR set to: 1
 32356  008602  2A06               	incf	NWK_Init@i^0,f,c
 32357                           
 32358                           ; BSR set to: 1
 32359  008604  0E0F               	movlw	15
 32360  008606  6406               	cpfsgt	NWK_Init@i^0,c
 32361  008608  D7F0               	goto	l13676
 32362                           
 32363                           ; BSR set to: 1
 32364                           ;../nwk/nwk_src/nwk.c: 80:   nwkTxInit();
 32365  00860A  EC3D  F045         	call	_nwkTxInit	;wreg free
 32366                           
 32367                           ; BSR set to: 1
 32368                           ;../nwk/nwk_src/nwk.c: 81:   nwkRxInit();
 32369  00860E  EC85  F044         	call	_nwkRxInit	;wreg free
 32370                           
 32371                           ;../nwk/nwk_src/nwk.c: 82:   nwkFrameInit();
 32372  008612  ECA4  F04A         	call	_nwkFrameInit	;wreg free
 32373                           
 32374                           ;../nwk/nwk_src/nwk.c: 83:   nwkDataReqInit();
 32375  008616  ECE9  F04C         	call	_nwkDataReqInit	;wreg free
 32376                           
 32377                           ; BSR set to: 0
 32378                           ;../nwk/nwk_src/nwk.c: 86:   nwkRouteInit();
 32379  00861A  EC37  F044         	call	_nwkRouteInit	;wreg free
 32380                           
 32381                           ; BSR set to: 2
 32382                           ;../nwk/nwk_src/nwk.c: 90:   nwkSecurityInit();
 32383  00861E  EC96  F04C         	call	_nwkSecurityInit	;wreg free
 32384                           
 32385                           ;../nwk/nwk_src/nwk.c: 94:   nwkGroupInit();
 32386  008622  EC17  F04A         	call	_nwkGroupInit	;wreg free
 32387                           
 32388                           ; BSR set to: 0
 32389  008626  0012               	return		;funcret
 32390  008628                     __end_of_NWK_Init:
 32391                           	opt callstack 0
 32392                           
 32393 ;; *************** function _nwkTxInit *****************
 32394 ;; Defined at:
 32395 ;;		line 94 in file "../nwk/nwk_src/nwkTx.c"
 32396 ;; Parameters:    Size  Location     Type
 32397 ;;		None
 32398 ;; Auto vars:     Size  Location     Type
 32399 ;;		None
 32400 ;; Return value:  Size  Location     Type
 32401 ;;                  1    wreg      void 
 32402 ;; Registers used:
 32403 ;;		wreg, status,2, status,0
 32404 ;; Tracked objects:
 32405 ;;		On entry : 3F/1
 32406 ;;		On exit  : 3F/1
 32407 ;;		Unchanged: 0/0
 32408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32413 ;;Total ram usage:        0 bytes
 32414 ;; Hardware stack levels used:    1
 32415 ;; Hardware stack levels required when called:    7
 32416 ;; This function calls:
 32417 ;;		Nothing
 32418 ;; This function is called by:
 32419 ;;		_NWK_Init
 32420 ;; This function uses a non-reentrant model
 32421 ;;
 32422                           
 32423                           	psect	text213
 32424  008A7A                     __ptext213:
 32425                           	opt callstack 0
 32426  008A7A                     _nwkTxInit:
 32427                           	opt callstack 21
 32428                           
 32429                           ; BSR set to: 1
 32430                           ;../nwk/nwk_src/nwkTx.c: 96:   nwkTxPhyActiveFrame = ((void*)0);
 32431                           
 32432                           ; BSR set to: 0
 32433                           ;incstack = 0
 32434  008A7A  0E00               	movlw	0
 32435  008A7C  0100               	movlb	0	; () banked
 32436  008A7E  6FBD               	movwf	_nwkTxPhyActiveFrame& (0+255),b
 32437  008A80  0E00               	movlw	0
 32438  008A82  6FBE               	movwf	(_nwkTxPhyActiveFrame+1)& (0+255),b
 32439                           
 32440                           ; BSR set to: 0
 32441                           ;../nwk/nwk_src/nwkTx.c: 98:   nwkTxAckWaitTimer.interval = 200;
 32442  008A84  0EC8               	movlw	200
 32443  008A86  0101               	movlb	1	; () banked
 32444  008A88  6F9C               	movwf	(_nwkTxAckWaitTimer+6)& (0+255),b
 32445  008A8A  0E00               	movlw	0
 32446  008A8C  6F9D               	movwf	(_nwkTxAckWaitTimer+7)& (0+255),b
 32447  008A8E  0E00               	movlw	0
 32448  008A90  6F9E               	movwf	(_nwkTxAckWaitTimer+8)& (0+255),b
 32449  008A92  0E00               	movlw	0
 32450  008A94  6F9F               	movwf	(_nwkTxAckWaitTimer+9)& (0+255),b
 32451                           
 32452                           ; BSR set to: 1
 32453                           ;../nwk/nwk_src/nwkTx.c: 99:   nwkTxAckWaitTimer.mode = SYS_TIMER_INTERVAL_MODE;
 32454  008A96  0E00               	movlw	0
 32455  008A98  6FA0               	movwf	(_nwkTxAckWaitTimer+10)& (0+255),b
 32456                           
 32457                           ;../nwk/nwk_src/nwkTx.c: 100:   nwkTxAckWaitTimer.handler = nwkTxAckWaitTimerHandler;
 32458  008A9A  0E64               	movlw	low _nwkTxAckWaitTimerHandler
 32459  008A9C  6FA1               	movwf	(_nwkTxAckWaitTimer+11)& (0+255),b
 32460  008A9E  0E78               	movlw	high _nwkTxAckWaitTimerHandler
 32461  008AA0  6FA2               	movwf	(_nwkTxAckWaitTimer+12)& (0+255),b
 32462                           
 32463                           ; BSR set to: 1
 32464                           ;../nwk/nwk_src/nwkTx.c: 102:   nwkTxDelayTimer.interval = 20;
 32465  008AA2  0E14               	movlw	20
 32466  008AA4  6F8F               	movwf	(_nwkTxDelayTimer+6)& (0+255),b
 32467  008AA6  0E00               	movlw	0
 32468  008AA8  6F90               	movwf	(_nwkTxDelayTimer+7)& (0+255),b
 32469  008AAA  0E00               	movlw	0
 32470  008AAC  6F91               	movwf	(_nwkTxDelayTimer+8)& (0+255),b
 32471  008AAE  0E00               	movlw	0
 32472  008AB0  6F92               	movwf	(_nwkTxDelayTimer+9)& (0+255),b
 32473                           
 32474                           ; BSR set to: 1
 32475                           ;../nwk/nwk_src/nwkTx.c: 103:   nwkTxDelayTimer.mode = SYS_TIMER_INTERVAL_MODE;
 32476  008AB2  0E00               	movlw	0
 32477  008AB4  6F93               	movwf	(_nwkTxDelayTimer+10)& (0+255),b
 32478                           
 32479                           ;../nwk/nwk_src/nwkTx.c: 104:   nwkTxDelayTimer.handler = nwkTxDelayTimerHandler;
 32480  008AB6  0E80               	movlw	low _nwkTxDelayTimerHandler
 32481  008AB8  6F94               	movwf	(_nwkTxDelayTimer+11)& (0+255),b
 32482  008ABA  0E79               	movlw	high _nwkTxDelayTimerHandler
 32483  008ABC  6F95               	movwf	(_nwkTxDelayTimer+12)& (0+255),b
 32484                           
 32485                           ; BSR set to: 1
 32486  008ABE  0012               	return		;funcret
 32487  008AC0                     __end_of_nwkTxInit:
 32488                           	opt callstack 0
 32489                           
 32490 ;; *************** function _nwkSecurityInit *****************
 32491 ;; Defined at:
 32492 ;;		line 84 in file "../nwk/nwk_src/nwkSecurity.c"
 32493 ;; Parameters:    Size  Location     Type
 32494 ;;		None
 32495 ;; Auto vars:     Size  Location     Type
 32496 ;;		None
 32497 ;; Return value:  Size  Location     Type
 32498 ;;                  1    wreg      void 
 32499 ;; Registers used:
 32500 ;;		wreg, status,2, status,0
 32501 ;; Tracked objects:
 32502 ;;		On entry : 3F/2
 32503 ;;		On exit  : 3F/0
 32504 ;;		Unchanged: 0/0
 32505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32510 ;;Total ram usage:        0 bytes
 32511 ;; Hardware stack levels used:    1
 32512 ;; Hardware stack levels required when called:    7
 32513 ;; This function calls:
 32514 ;;		Nothing
 32515 ;; This function is called by:
 32516 ;;		_NWK_Init
 32517 ;; This function uses a non-reentrant model
 32518 ;;
 32519                           
 32520                           	psect	text214
 32521  00992C                     __ptext214:
 32522                           	opt callstack 0
 32523  00992C                     _nwkSecurityInit:
 32524                           	opt callstack 21
 32525                           
 32526                           ; BSR set to: 2
 32527                           ;../nwk/nwk_src/nwkSecurity.c: 86:   nwkSecurityActiveFrames = 0;
 32528                           
 32529                           ; BSR set to: 1
 32530                           ;incstack = 0
 32531  00992C  0E00               	movlw	0
 32532  00992E  0100               	movlb	0	; () banked
 32533  009930  6FCA               	movwf	_nwkSecurityActiveFrames& (0+255),b
 32534                           
 32535                           ; BSR set to: 0
 32536                           ;../nwk/nwk_src/nwkSecurity.c: 87:   nwkSecurityActiveFrame = ((void*)0);
 32537  009932  0E00               	movlw	0
 32538  009934  6FBF               	movwf	_nwkSecurityActiveFrame& (0+255),b
 32539  009936  0E00               	movlw	0
 32540  009938  6FC0               	movwf	(_nwkSecurityActiveFrame+1)& (0+255),b
 32541                           
 32542                           ; BSR set to: 0
 32543  00993A  0012               	return		;funcret
 32544  00993C                     __end_of_nwkSecurityInit:
 32545                           	opt callstack 0
 32546                           
 32547 ;; *************** function _nwkRxInit *****************
 32548 ;; Defined at:
 32549 ;;		line 102 in file "../nwk/nwk_src/nwkRx.c"
 32550 ;; Parameters:    Size  Location     Type
 32551 ;;		None
 32552 ;; Auto vars:     Size  Location     Type
 32553 ;;  i               1    4[COMRAM] unsigned char 
 32554 ;; Return value:  Size  Location     Type
 32555 ;;                  1    wreg      void 
 32556 ;; Registers used:
 32557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32558 ;; Tracked objects:
 32559 ;;		On entry : 3F/1
 32560 ;;		On exit  : 0/0
 32561 ;;		Unchanged: 0/0
 32562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32564 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32566 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32567 ;;Total ram usage:        1 bytes
 32568 ;; Hardware stack levels used:    1
 32569 ;; Hardware stack levels required when called:    8
 32570 ;; This function calls:
 32571 ;;		_NWK_OpenEndpoint
 32572 ;; This function is called by:
 32573 ;;		_NWK_Init
 32574 ;; This function uses a non-reentrant model
 32575 ;;
 32576                           
 32577                           	psect	text215
 32578  00890A                     __ptext215:
 32579                           	opt callstack 0
 32580  00890A                     _nwkRxInit:
 32581                           	opt callstack 20
 32582                           
 32583                           ; BSR set to: 1
 32584                           ;../nwk/nwk_src/nwkRx.c: 104:   for (uint8_t i = 0; i < 10; i++)
 32585                           
 32586                           ; BSR set to: 0
 32587                           ;incstack = 0
 32588  00890A  0E00               	movlw	0
 32589  00890C  6E05               	movwf	nwkRxInit@i^0,c
 32590  00890E                     l12860:
 32591                           
 32592                           ; BSR set to: 1
 32593                           ;../nwk/nwk_src/nwkRx.c: 105:     nwkRxDuplicateRejectionTable[i].ttl = 0;
 32594  00890E  5005               	movf	nwkRxInit@i^0,w,c
 32595  008910  0D05               	mullw	5
 32596  008912  0EC4               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 32597  008914  24F3               	addwf	243,w,c
 32598  008916  6ED9               	movwf	fsr2l,c
 32599  008918  0E03               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 32600  00891A  20F4               	addwfc	prodh,w,c
 32601  00891C  6EDA               	movwf	fsr2h,c
 32602  00891E  0E00               	movlw	0
 32603  008920  6EDF               	movwf	indf2,c
 32604                           
 32605                           ; BSR set to: 1
 32606  008922  2A05               	incf	nwkRxInit@i^0,f,c
 32607                           
 32608                           ; BSR set to: 1
 32609  008924  0E09               	movlw	9
 32610  008926  6405               	cpfsgt	nwkRxInit@i^0,c
 32611  008928  D7F2               	goto	l12860
 32612                           
 32613                           ; BSR set to: 1
 32614                           ;../nwk/nwk_src/nwkRx.c: 107:   nwkRxDuplicateRejectionTimer.interval = 5000;
 32615  00892A  0E88               	movlw	136
 32616  00892C  6FA9               	movwf	(_nwkRxDuplicateRejectionTimer+6)& (0+255),b
 32617  00892E  0E13               	movlw	19
 32618  008930  6FAA               	movwf	(_nwkRxDuplicateRejectionTimer+7)& (0+255),b
 32619  008932  0E00               	movlw	0
 32620  008934  6FAB               	movwf	(_nwkRxDuplicateRejectionTimer+8)& (0+255),b
 32621  008936  0E00               	movlw	0
 32622  008938  6FAC               	movwf	(_nwkRxDuplicateRejectionTimer+9)& (0+255),b
 32623                           
 32624                           ;../nwk/nwk_src/nwkRx.c: 108:   nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_M
      +                          ODE;
 32625  00893A  0E00               	movlw	0
 32626  00893C  6FAD               	movwf	(_nwkRxDuplicateRejectionTimer+10)& (0+255),b
 32627                           
 32628                           ; BSR set to: 1
 32629                           ;../nwk/nwk_src/nwkRx.c: 109:   nwkRxDuplicateRejectionTimer.handler = nwkRxDuplicateRej
      +                          ectionTimerHandler;
 32630  00893E  0E2A               	movlw	low _nwkRxDuplicateRejectionTimerHandler
 32631  008940  6FAE               	movwf	(_nwkRxDuplicateRejectionTimer+11)& (0+255),b
 32632  008942  0E87               	movlw	high _nwkRxDuplicateRejectionTimerHandler
 32633  008944  6FAF               	movwf	(_nwkRxDuplicateRejectionTimer+12)& (0+255),b
 32634                           
 32635                           ; BSR set to: 1
 32636                           ;../nwk/nwk_src/nwkRx.c: 111:   NWK_OpenEndpoint(0, nwkRxServiceDataInd);
 32637  008946  0EAE               	movlw	low _nwkRxServiceDataInd
 32638  008948  6E02               	movwf	NWK_OpenEndpoint@handler^0,c
 32639  00894A  0E7E               	movlw	high _nwkRxServiceDataInd
 32640  00894C  6E03               	movwf	(NWK_OpenEndpoint@handler+1)^0,c
 32641  00894E  0E00               	movlw	0
 32642  008950  ECF9  F04A         	call	_NWK_OpenEndpoint
 32643  008954  0012               	return		;funcret
 32644  008956                     __end_of_nwkRxInit:
 32645                           	opt callstack 0
 32646                           
 32647 ;; *************** function _NWK_OpenEndpoint *****************
 32648 ;; Defined at:
 32649 ;;		line 127 in file "../nwk/nwk_src/nwk.c"
 32650 ;; Parameters:    Size  Location     Type
 32651 ;;  id              1    wreg     unsigned char 
 32652 ;;  handler         2    1[COMRAM] PTR FTN(PTR struct NWK_D
 32653 ;;		 -> nwkRxServiceDataInd(1), appDataInd(1), 
 32654 ;; Auto vars:     Size  Location     Type
 32655 ;;  id              1    3[COMRAM] unsigned char 
 32656 ;; Return value:  Size  Location     Type
 32657 ;;                  1    wreg      void 
 32658 ;; Registers used:
 32659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32660 ;; Tracked objects:
 32661 ;;		On entry : 0/0
 32662 ;;		On exit  : 0/0
 32663 ;;		Unchanged: 0/0
 32664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32668 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32669 ;;Total ram usage:        3 bytes
 32670 ;; Hardware stack levels used:    1
 32671 ;; Hardware stack levels required when called:    7
 32672 ;; This function calls:
 32673 ;;		Nothing
 32674 ;; This function is called by:
 32675 ;;		_bootLoadApplication
 32676 ;;		_nwkRxInit
 32677 ;; This function uses a non-reentrant model
 32678 ;;
 32679                           
 32680                           	psect	text216
 32681  0095F2                     __ptext216:
 32682                           	opt callstack 0
 32683  0095F2                     _NWK_OpenEndpoint:
 32684                           	opt callstack 22
 32685                           
 32686                           ;incstack = 0
 32687                           ;NWK_OpenEndpoint@id stored from wreg
 32688  0095F2  6E04               	movwf	NWK_OpenEndpoint@id^0,c
 32689                           
 32690                           ;../nwk/nwk_src/nwk.c: 127: void NWK_OpenEndpoint(uint8_t id, _Bool (*handler)(NWK_DataI
      +                          nd_t *ind));../nwk/nwk_src/nwk.c: 128: {;../nwk/nwk_src/nwk.c: 129:   nwkIb.endpoint[id]
      +                           = handler;
 32691  0095F4  5004               	movf	NWK_OpenEndpoint@id^0,w,c
 32692  0095F6  0D02               	mullw	2
 32693  0095F8  0E37               	movlw	low (_nwkIb+6)
 32694  0095FA  24F3               	addwf	243,w,c
 32695  0095FC  6ED9               	movwf	fsr2l,c
 32696  0095FE  0E01               	movlw	high (_nwkIb+6)
 32697  009600  20F4               	addwfc	prodh,w,c
 32698  009602  6EDA               	movwf	fsr2h,c
 32699  009604  0060  F00B  FFDE   	movff	NWK_OpenEndpoint@handler,postinc2
 32700  00960A  0060  F00F  FFDD   	movff	NWK_OpenEndpoint@handler+1,postdec2
 32701  009610  0012               	return		;funcret
 32702  009612                     __end_of_NWK_OpenEndpoint:
 32703                           	opt callstack 0
 32704                           
 32705 ;; *************** function _nwkRouteInit *****************
 32706 ;; Defined at:
 32707 ;;		line 79 in file "../nwk/nwk_src/nwkRoute.c"
 32708 ;; Parameters:    Size  Location     Type
 32709 ;;		None
 32710 ;; Auto vars:     Size  Location     Type
 32711 ;;  i               1    1[COMRAM] unsigned char 
 32712 ;; Return value:  Size  Location     Type
 32713 ;;                  1    wreg      void 
 32714 ;; Registers used:
 32715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32716 ;; Tracked objects:
 32717 ;;		On entry : 3F/0
 32718 ;;		On exit  : 3F/2
 32719 ;;		Unchanged: 0/0
 32720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32725 ;;Total ram usage:        1 bytes
 32726 ;; Hardware stack levels used:    1
 32727 ;; Hardware stack levels required when called:    7
 32728 ;; This function calls:
 32729 ;;		Nothing
 32730 ;; This function is called by:
 32731 ;;		_NWK_Init
 32732 ;; This function uses a non-reentrant model
 32733 ;;
 32734                           
 32735                           	psect	text217
 32736  00886E                     __ptext217:
 32737                           	opt callstack 0
 32738  00886E                     _nwkRouteInit:
 32739                           	opt callstack 21
 32740                           
 32741                           ; BSR set to: 0
 32742                           ;../nwk/nwk_src/nwkRoute.c: 81:   for (uint8_t i = 0; i < 10; i++)
 32743                           
 32744                           ;incstack = 0
 32745  00886E  0E00               	movlw	0
 32746  008870  6E02               	movwf	nwkRouteInit@i^0,c
 32747  008872                     l12892:
 32748                           
 32749                           ;../nwk/nwk_src/nwkRoute.c: 82:   {;../nwk/nwk_src/nwkRoute.c: 83:     nwkRouteTable[i].
      +                          dstAddr = 0xffff;
 32750  008872  5002               	movf	nwkRouteInit@i^0,w,c
 32751  008874  0D07               	mullw	7
 32752  008876  0E75               	movlw	low (_nwkRouteTable+1)
 32753  008878  24F3               	addwf	243,w,c
 32754  00887A  6ED9               	movwf	fsr2l,c
 32755  00887C  0E02               	movlw	high (_nwkRouteTable+1)
 32756  00887E  20F4               	addwfc	prodh,w,c
 32757  008880  6EDA               	movwf	fsr2h,c
 32758  008882  0EFF               	movlw	255
 32759  008884  6EDE               	movwf	postinc2,c
 32760  008886  0EFF               	movlw	255
 32761  008888  6EDD               	movwf	postdec2,c
 32762                           
 32763                           ;../nwk/nwk_src/nwkRoute.c: 84:     nwkRouteTable[i].fixed = 0;
 32764  00888A  5002               	movf	nwkRouteInit@i^0,w,c
 32765  00888C  0D07               	mullw	7
 32766  00888E  0E74               	movlw	low _nwkRouteTable
 32767  008890  24F3               	addwf	243,w,c
 32768  008892  6ED9               	movwf	fsr2l,c
 32769  008894  0E02               	movlw	high _nwkRouteTable
 32770  008896  20F4               	addwfc	prodh,w,c
 32771  008898  6EDA               	movwf	fsr2h,c
 32772  00889A  0102               	movlb	2	; () banked
 32773  00889C  90DF               	bcf	indf2,0,c
 32774                           
 32775                           ;../nwk/nwk_src/nwkRoute.c: 85:     nwkRouteTable[i].rank = 0;
 32776  00889E  5002               	movf	nwkRouteInit@i^0,w,c
 32777  0088A0  0D07               	mullw	7
 32778  0088A2  0E79               	movlw	low (_nwkRouteTable+5)
 32779  0088A4  24F3               	addwf	243,w,c
 32780  0088A6  6ED9               	movwf	fsr2l,c
 32781  0088A8  0E02               	movlw	high (_nwkRouteTable+5)
 32782  0088AA  20F4               	addwfc	prodh,w,c
 32783  0088AC  6EDA               	movwf	fsr2h,c
 32784  0088AE  0E00               	movlw	0
 32785  0088B0  6EDF               	movwf	indf2,c
 32786                           
 32787                           ; BSR set to: 2
 32788                           ;../nwk/nwk_src/nwkRoute.c: 86:   }
 32789  0088B2  2A02               	incf	nwkRouteInit@i^0,f,c
 32790                           
 32791                           ; BSR set to: 2
 32792  0088B4  0E09               	movlw	9
 32793  0088B6  6402               	cpfsgt	nwkRouteInit@i^0,c
 32794  0088B8  D7DC               	goto	l12892
 32795  0088BA  0012               	return	
 32796  0088BC                     __end_of_nwkRouteInit:
 32797                           	opt callstack 0
 32798                           
 32799 ;; *************** function _nwkGroupInit *****************
 32800 ;; Defined at:
 32801 ;;		line 70 in file "../nwk/nwk_src/nwkGroup.c"
 32802 ;; Parameters:    Size  Location     Type
 32803 ;;		None
 32804 ;; Auto vars:     Size  Location     Type
 32805 ;;  i               1    1[COMRAM] unsigned char 
 32806 ;; Return value:  Size  Location     Type
 32807 ;;                  1    wreg      void 
 32808 ;; Registers used:
 32809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32810 ;; Tracked objects:
 32811 ;;		On entry : 3F/0
 32812 ;;		On exit  : 3F/0
 32813 ;;		Unchanged: 3F/0
 32814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32818 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32819 ;;Total ram usage:        1 bytes
 32820 ;; Hardware stack levels used:    1
 32821 ;; Hardware stack levels required when called:    7
 32822 ;; This function calls:
 32823 ;;		Nothing
 32824 ;; This function is called by:
 32825 ;;		_NWK_Init
 32826 ;; This function uses a non-reentrant model
 32827 ;;
 32828                           
 32829                           	psect	text218
 32830  00942E                     __ptext218:
 32831                           	opt callstack 0
 32832  00942E                     _nwkGroupInit:
 32833                           	opt callstack 21
 32834                           
 32835                           ; BSR set to: 0
 32836                           ;../nwk/nwk_src/nwkGroup.c: 72:   for (uint8_t i = 0; i < 10; i++)
 32837                           
 32838                           ; BSR set to: 2
 32839                           ;incstack = 0
 32840  00942E  0E00               	movlw	0
 32841  009430  6E02               	movwf	nwkGroupInit@i^0,c
 32842  009432                     l12908:
 32843                           
 32844                           ; BSR set to: 0
 32845                           ;../nwk/nwk_src/nwkGroup.c: 73:     nwkGroups[i] = 0xffff;
 32846  009432  5002               	movf	nwkGroupInit@i^0,w,c
 32847  009434  0D02               	mullw	2
 32848  009436  0E00               	movlw	low _nwkGroups
 32849  009438  24F3               	addwf	243,w,c
 32850  00943A  6ED9               	movwf	fsr2l,c
 32851  00943C  0E02               	movlw	high _nwkGroups
 32852  00943E  20F4               	addwfc	prodh,w,c
 32853  009440  6EDA               	movwf	fsr2h,c
 32854  009442  0EFF               	movlw	255
 32855  009444  6EDE               	movwf	postinc2,c
 32856  009446  0EFF               	movlw	255
 32857  009448  6EDD               	movwf	postdec2,c
 32858                           
 32859                           ; BSR set to: 0
 32860  00944A  2A02               	incf	nwkGroupInit@i^0,f,c
 32861                           
 32862                           ; BSR set to: 0
 32863  00944C  0E09               	movlw	9
 32864  00944E  6402               	cpfsgt	nwkGroupInit@i^0,c
 32865  009450  D7F0               	goto	l12908
 32866  009452  0012               	return	
 32867  009454                     __end_of_nwkGroupInit:
 32868                           	opt callstack 0
 32869                           
 32870 ;; *************** function _nwkFrameInit *****************
 32871 ;; Defined at:
 32872 ;;		line 70 in file "../nwk/nwk_src/nwkFrame.c"
 32873 ;; Parameters:    Size  Location     Type
 32874 ;;		None
 32875 ;; Auto vars:     Size  Location     Type
 32876 ;;  i               1    1[COMRAM] unsigned char 
 32877 ;; Return value:  Size  Location     Type
 32878 ;;                  1    wreg      void 
 32879 ;; Registers used:
 32880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32881 ;; Tracked objects:
 32882 ;;		On entry : 0/1
 32883 ;;		On exit  : 0/0
 32884 ;;		Unchanged: 0/0
 32885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32887 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32890 ;;Total ram usage:        1 bytes
 32891 ;; Hardware stack levels used:    1
 32892 ;; Hardware stack levels required when called:    7
 32893 ;; This function calls:
 32894 ;;		Nothing
 32895 ;; This function is called by:
 32896 ;;		_NWK_Init
 32897 ;; This function uses a non-reentrant model
 32898 ;;
 32899                           
 32900                           	psect	text219
 32901  009548                     __ptext219:
 32902                           	opt callstack 0
 32903  009548                     _nwkFrameInit:
 32904                           	opt callstack 21
 32905                           
 32906                           ;../nwk/nwk_src/nwkFrame.c: 72:   for (uint8_t i = 0; i < 5; i++)
 32907                           
 32908                           ; BSR set to: 0
 32909                           ;incstack = 0
 32910  009548  0E00               	movlw	0
 32911  00954A  6E02               	movwf	nwkFrameInit@i^0,c
 32912  00954C                     l12878:
 32913                           
 32914                           ;../nwk/nwk_src/nwkFrame.c: 73:     nwkFrameFrames[i].state = NWK_FRAME_STATE_FREE;
 32915  00954C  5002               	movf	nwkFrameInit@i^0,w,c
 32916  00954E  0D89               	mullw	137
 32917  009550  0EBD               	movlw	low _nwkFrameFrames
 32918  009552  24F3               	addwf	243,w,c
 32919  009554  6ED9               	movwf	fsr2l,c
 32920  009556  0E05               	movlw	high _nwkFrameFrames
 32921  009558  20F4               	addwfc	prodh,w,c
 32922  00955A  6EDA               	movwf	fsr2h,c
 32923  00955C  0E00               	movlw	0
 32924  00955E  6EDF               	movwf	indf2,c
 32925  009560  2A02               	incf	nwkFrameInit@i^0,f,c
 32926  009562  0E04               	movlw	4
 32927  009564  6402               	cpfsgt	nwkFrameInit@i^0,c
 32928  009566  D7F2               	goto	l12878
 32929  009568  0012               	return	
 32930  00956A                     __end_of_nwkFrameInit:
 32931                           	opt callstack 0
 32932                           
 32933 ;; *************** function _nwkDataReqInit *****************
 32934 ;; Defined at:
 32935 ;;		line 78 in file "../nwk/nwk_src/nwkDataReq.c"
 32936 ;; Parameters:    Size  Location     Type
 32937 ;;		None
 32938 ;; Auto vars:     Size  Location     Type
 32939 ;;		None
 32940 ;; Return value:  Size  Location     Type
 32941 ;;                  1    wreg      void 
 32942 ;; Registers used:
 32943 ;;		wreg, status,2, status,0
 32944 ;; Tracked objects:
 32945 ;;		On entry : 0/1
 32946 ;;		On exit  : 3F/0
 32947 ;;		Unchanged: 0/0
 32948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32953 ;;Total ram usage:        0 bytes
 32954 ;; Hardware stack levels used:    1
 32955 ;; Hardware stack levels required when called:    7
 32956 ;; This function calls:
 32957 ;;		Nothing
 32958 ;; This function is called by:
 32959 ;;		_NWK_Init
 32960 ;; This function uses a non-reentrant model
 32961 ;;
 32962                           
 32963                           	psect	text220
 32964  0099D2                     __ptext220:
 32965                           	opt callstack 0
 32966  0099D2                     _nwkDataReqInit:
 32967                           	opt callstack 21
 32968                           
 32969                           ;../nwk/nwk_src/nwkDataReq.c: 80:   nwkDataReqQueue = ((void*)0);
 32970                           
 32971                           ;incstack = 0
 32972  0099D2  0E00               	movlw	0
 32973  0099D4  0100               	movlb	0	; () banked
 32974  0099D6  6FC1               	movwf	_nwkDataReqQueue& (0+255),b
 32975  0099D8  0E00               	movlw	0
 32976  0099DA  6FC2               	movwf	(_nwkDataReqQueue+1)& (0+255),b
 32977                           
 32978                           ; BSR set to: 0
 32979  0099DC  0012               	return		;funcret
 32980  0099DE                     __end_of_nwkDataReqInit:
 32981                           	opt callstack 0
 32982                           
 32983 ;; *************** function _SYSTEM_Initialize *****************
 32984 ;; Defined at:
 32985 ;;		line 50 in file "mcc_generated_files/mcc.c"
 32986 ;; Parameters:    Size  Location     Type
 32987 ;;		None
 32988 ;; Auto vars:     Size  Location     Type
 32989 ;;		None
 32990 ;; Return value:  Size  Location     Type
 32991 ;;                  1    wreg      void 
 32992 ;; Registers used:
 32993 ;;		wreg, status,2, status,0, cstack
 32994 ;; Tracked objects:
 32995 ;;		On entry : 0/0
 32996 ;;		On exit  : 3F/3D
 32997 ;;		Unchanged: 0/0
 32998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33003 ;;Total ram usage:        0 bytes
 33004 ;; Hardware stack levels used:    1
 33005 ;; Hardware stack levels required when called:    9
 33006 ;; This function calls:
 33007 ;;		_CRC_Initialize
 33008 ;;		_INTERRUPT_Initialize
 33009 ;;		_OSCILLATOR_Initialize
 33010 ;;		_PIN_MANAGER_Initialize
 33011 ;;		_PMD_Initialize
 33012 ;;		_SPI1_Initialize
 33013 ;;		_TMR0_Initialize
 33014 ;;		_UART1_Initialize
 33015 ;; This function is called by:
 33016 ;;		_main
 33017 ;; This function uses a non-reentrant model
 33018 ;;
 33019                           
 33020                           	psect	text221
 33021  00956A                     __ptext221:
 33022                           	opt callstack 0
 33023  00956A                     _SYSTEM_Initialize:
 33024                           	opt callstack 21
 33025                           
 33026                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 33027                           
 33028                           ; BSR set to: 0
 33029                           ;incstack = 0
 33030  00956A  EC49  F046         	call	_INTERRUPT_Initialize	;wreg free
 33031                           
 33032                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 33033  00956E  ECC6  F04A         	call	_PMD_Initialize	;wreg free
 33034                           
 33035                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 33036  009572  EC90  F03D         	call	_PIN_MANAGER_Initialize	;wreg free
 33037                           
 33038                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 33039  009576  EC18  F04C         	call	_OSCILLATOR_Initialize	;wreg free
 33040                           
 33041                           ; BSR set to: 57
 33042                           ;mcc_generated_files/mcc.c: 56:     CRC_Initialize();
 33043  00957A  EC71  F040         	call	_CRC_Initialize	;wreg free
 33044                           
 33045                           ; BSR set to: 0
 33046                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
 33047  00957E  EC04  F047         	call	_TMR0_Initialize	;wreg free
 33048                           
 33049                           ;mcc_generated_files/mcc.c: 58:     UART1_Initialize();
 33050  009582  EC13  F03A         	call	_UART1_Initialize	;wreg free
 33051                           
 33052                           ; BSR set to: 57
 33053                           ;mcc_generated_files/mcc.c: 59:     SPI1_Initialize();
 33054  009586  ECC3  F04B         	call	_SPI1_Initialize	;wreg free
 33055                           
 33056                           ; BSR set to: 61
 33057  00958A  0012               	return		;funcret
 33058  00958C                     __end_of_SYSTEM_Initialize:
 33059                           	opt callstack 0
 33060                           
 33061 ;; *************** function _UART1_Initialize *****************
 33062 ;; Defined at:
 33063 ;;		line 95 in file "mcc_generated_files/uart1.c"
 33064 ;; Parameters:    Size  Location     Type
 33065 ;;		None
 33066 ;; Auto vars:     Size  Location     Type
 33067 ;;		None
 33068 ;; Return value:  Size  Location     Type
 33069 ;;                  1    wreg      void 
 33070 ;; Registers used:
 33071 ;;		wreg, status,2, status,0, cstack
 33072 ;; Tracked objects:
 33073 ;;		On entry : 3B/39
 33074 ;;		On exit  : 3F/39
 33075 ;;		Unchanged: 0/0
 33076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33081 ;;Total ram usage:        0 bytes
 33082 ;; Hardware stack levels used:    1
 33083 ;; Hardware stack levels required when called:    8
 33084 ;; This function calls:
 33085 ;;		_UART1_SetErrorHandler
 33086 ;;		_UART1_SetFramingErrorHandler
 33087 ;;		_UART1_SetOverrunErrorHandler
 33088 ;;		_UART1_SetRxInterruptHandler
 33089 ;;		_UART1_SetTxInterruptHandler
 33090 ;; This function is called by:
 33091 ;;		_SYSTEM_Initialize
 33092 ;; This function uses a non-reentrant model
 33093 ;;
 33094                           
 33095                           	psect	text222
 33096  007426                     __ptext222:
 33097                           	opt callstack 0
 33098  007426                     _UART1_Initialize:
 33099                           	opt callstack 21
 33100                           
 33101                           ;mcc_generated_files/uart1.c: 98:     PIE3bits.U1RXIE = 0;
 33102                           
 33103                           ; BSR set to: 61
 33104                           ;incstack = 0
 33105  007426  0139               	movlb	57	; () banked
 33106  007428  9793               	bcf	147,3,b	;volatile
 33107                           
 33108                           ; BSR set to: 57
 33109                           ;mcc_generated_files/uart1.c: 99:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 33110  00742A  0EA4               	movlw	low _UART1_Receive_ISR
 33111  00742C  6E02               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 33112  00742E  0E76               	movlw	high _UART1_Receive_ISR
 33113  007430  6E03               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 33114  007432  ECBA  F04C         	call	_UART1_SetRxInterruptHandler	;wreg free
 33115                           
 33116                           ; BSR set to: 57
 33117                           ;mcc_generated_files/uart1.c: 100:     PIE3bits.U1TXIE = 0;
 33118  007436  9993               	bcf	147,4,b	;volatile
 33119                           
 33120                           ;mcc_generated_files/uart1.c: 101:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 33121  007438  0E28               	movlw	low _UART1_Transmit_ISR
 33122  00743A  6E02               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 33123  00743C  0E91               	movlw	high _UART1_Transmit_ISR
 33124  00743E  6E03               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 33125  007440  ECB3  F04C         	call	_UART1_SetTxInterruptHandler	;wreg free
 33126                           
 33127                           ; BSR set to: 57
 33128                           ;mcc_generated_files/uart1.c: 106:     U1P1L = 0x00;
 33129  007444  0E00               	movlw	0
 33130  007446  013D               	movlb	61	; () banked
 33131  007448  6FEC               	movwf	236,b	;volatile
 33132                           
 33133                           ; BSR set to: 61
 33134                           ;mcc_generated_files/uart1.c: 109:     U1P1H = 0x00;
 33135  00744A  0E00               	movlw	0
 33136  00744C  6FED               	movwf	237,b	;volatile
 33137                           
 33138                           ; BSR set to: 61
 33139                           ;mcc_generated_files/uart1.c: 112:     U1P2L = 0x00;
 33140  00744E  0E00               	movlw	0
 33141  007450  6FEE               	movwf	238,b	;volatile
 33142                           
 33143                           ; BSR set to: 61
 33144                           ;mcc_generated_files/uart1.c: 115:     U1P2H = 0x00;
 33145  007452  0E00               	movlw	0
 33146  007454  6FEF               	movwf	239,b	;volatile
 33147                           
 33148                           ; BSR set to: 61
 33149                           ;mcc_generated_files/uart1.c: 118:     U1P3L = 0x00;
 33150  007456  0E00               	movlw	0
 33151  007458  6FF0               	movwf	240,b	;volatile
 33152                           
 33153                           ; BSR set to: 61
 33154                           ;mcc_generated_files/uart1.c: 121:     U1P3H = 0x00;
 33155  00745A  0E00               	movlw	0
 33156  00745C  6FF1               	movwf	241,b	;volatile
 33157                           
 33158                           ; BSR set to: 61
 33159                           ;mcc_generated_files/uart1.c: 124:     U1CON0 = 0xB3;
 33160  00745E  0EB3               	movlw	179
 33161  007460  6FF2               	movwf	242,b	;volatile
 33162                           
 33163                           ; BSR set to: 61
 33164                           ;mcc_generated_files/uart1.c: 127:     U1CON1 = 0x00;
 33165  007462  0E00               	movlw	0
 33166  007464  6FF3               	movwf	243,b	;volatile
 33167                           
 33168                           ; BSR set to: 61
 33169                           ;mcc_generated_files/uart1.c: 130:     U1CON2 = 0x82;
 33170  007466  0E82               	movlw	130
 33171  007468  6FF4               	movwf	244,b	;volatile
 33172                           
 33173                           ; BSR set to: 61
 33174                           ;mcc_generated_files/uart1.c: 133:     U1BRGL = 0x40;
 33175  00746A  0E40               	movlw	64
 33176  00746C  6FF5               	movwf	245,b	;volatile
 33177                           
 33178                           ; BSR set to: 61
 33179                           ;mcc_generated_files/uart1.c: 136:     U1BRGH = 0x03;
 33180  00746E  0E03               	movlw	3
 33181  007470  6FF6               	movwf	246,b	;volatile
 33182                           
 33183                           ; BSR set to: 61
 33184                           ;mcc_generated_files/uart1.c: 139:     U1FIFO = 0x00;
 33185  007472  0E00               	movlw	0
 33186  007474  6FF7               	movwf	247,b	;volatile
 33187                           
 33188                           ; BSR set to: 61
 33189                           ;mcc_generated_files/uart1.c: 142:     U1UIR = 0x00;
 33190  007476  0E00               	movlw	0
 33191  007478  6FF8               	movwf	248,b	;volatile
 33192                           
 33193                           ; BSR set to: 61
 33194                           ;mcc_generated_files/uart1.c: 145:     U1ERRIR = 0x00;
 33195  00747A  0E00               	movlw	0
 33196  00747C  6FF9               	movwf	249,b	;volatile
 33197                           
 33198                           ; BSR set to: 61
 33199                           ;mcc_generated_files/uart1.c: 148:     U1ERRIE = 0x00;
 33200  00747E  0E00               	movlw	0
 33201  007480  6FFA               	movwf	250,b	;volatile
 33202                           
 33203                           ; BSR set to: 61
 33204                           ;mcc_generated_files/uart1.c: 151:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 33205  007482  0E2C               	movlw	low _UART1_DefaultFramingErrorHandler
 33206  007484  6E02               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 33207  007486  0E9A               	movlw	high _UART1_DefaultFramingErrorHandler
 33208  007488  6E03               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 33209  00748A  ECC8  F04C         	call	_UART1_SetFramingErrorHandler	;wreg free
 33210                           
 33211                           ; BSR set to: 61
 33212                           ;mcc_generated_files/uart1.c: 152:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 33213  00748E  0E2A               	movlw	low _UART1_DefaultOverrunErrorHandler
 33214  007490  6E02               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 33215  007492  0E9A               	movlw	high _UART1_DefaultOverrunErrorHandler
 33216  007494  6E03               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 33217  007496  ECC1  F04C         	call	_UART1_SetOverrunErrorHandler	;wreg free
 33218                           
 33219                           ; BSR set to: 61
 33220                           ;mcc_generated_files/uart1.c: 153:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 33221  00749A  0E12               	movlw	low _UART1_DefaultErrorHandler
 33222  00749C  6E02               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 33223  00749E  0E9A               	movlw	high _UART1_DefaultErrorHandler
 33224  0074A0  6E03               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 33225  0074A2  ECCF  F04C         	call	_UART1_SetErrorHandler	;wreg free
 33226                           
 33227                           ;mcc_generated_files/uart1.c: 155:     uart1RxLastError.status = 0;
 33228  0074A6  0E00               	movlw	0
 33229  0074A8  0100               	movlb	0	; () banked
 33230  0074AA  6FCC               	movwf	_uart1RxLastError& (0+255),b	;volatile
 33231                           
 33232                           ;mcc_generated_files/uart1.c: 158:     uart1TxHead = 0;
 33233  0074AC  0E00               	movlw	0
 33234  0074AE  6FD0               	movwf	_uart1TxHead& (0+255),b	;volatile
 33235                           
 33236                           ;mcc_generated_files/uart1.c: 159:     uart1TxTail = 0;
 33237  0074B0  0E00               	movlw	0
 33238  0074B2  6FCF               	movwf	_uart1TxTail& (0+255),b	;volatile
 33239                           
 33240                           ;mcc_generated_files/uart1.c: 160:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 33241  0074B4  0E40               	movlw	64
 33242  0074B6  6FFF               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
 33243                           
 33244                           ;mcc_generated_files/uart1.c: 161:     uart1RxHead = 0;
 33245  0074B8  0E00               	movlw	0
 33246  0074BA  6E5E               	movwf	_uart1RxHead^0,c	;volatile
 33247                           
 33248                           ;mcc_generated_files/uart1.c: 162:     uart1RxTail = 0;
 33249  0074BC  0E00               	movlw	0
 33250  0074BE  6FCE               	movwf	_uart1RxTail& (0+255),b	;volatile
 33251                           
 33252                           ;mcc_generated_files/uart1.c: 163:     uart1RxCount = 0;
 33253  0074C0  0E00               	movlw	0
 33254  0074C2  6FCD               	movwf	_uart1RxCount& (0+255),b	;volatile
 33255                           
 33256                           ; BSR set to: 0
 33257                           ;mcc_generated_files/uart1.c: 166:     PIE3bits.U1RXIE = 1;
 33258  0074C4  0139               	movlb	57	; () banked
 33259  0074C6  8793               	bsf	147,3,b	;volatile
 33260                           
 33261                           ; BSR set to: 57
 33262  0074C8  0012               	return		;funcret
 33263  0074CA                     __end_of_UART1_Initialize:
 33264                           	opt callstack 0
 33265                           
 33266 ;; *************** function _UART1_SetTxInterruptHandler *****************
 33267 ;; Defined at:
 33268 ;;		line 352 in file "mcc_generated_files/uart1.c"
 33269 ;; Parameters:    Size  Location     Type
 33270 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 33271 ;;		 -> UART1_Transmit_ISR(1), 
 33272 ;; Auto vars:     Size  Location     Type
 33273 ;;		None
 33274 ;; Return value:  Size  Location     Type
 33275 ;;                  1    wreg      void 
 33276 ;; Registers used:
 33277 ;;		wreg, status,2, status,0
 33278 ;; Tracked objects:
 33279 ;;		On entry : 3F/39
 33280 ;;		On exit  : 3F/39
 33281 ;;		Unchanged: 3E/0
 33282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33283 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33286 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33287 ;;Total ram usage:        2 bytes
 33288 ;; Hardware stack levels used:    1
 33289 ;; Hardware stack levels required when called:    7
 33290 ;; This function calls:
 33291 ;;		Nothing
 33292 ;; This function is called by:
 33293 ;;		_UART1_Initialize
 33294 ;; This function uses a non-reentrant model
 33295 ;;
 33296                           
 33297                           	psect	text223
 33298  009966                     __ptext223:
 33299                           	opt callstack 0
 33300  009966                     _UART1_SetTxInterruptHandler:
 33301                           	opt callstack 21
 33302                           
 33303                           ; BSR set to: 57
 33304                           ;mcc_generated_files/uart1.c: 353:     UART1_TxInterruptHandler = InterruptHandler;
 33305                           
 33306                           ; BSR set to: 57
 33307                           ;incstack = 0
 33308  009966  0060  F008  F1F5   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 33309  00996C  0060  F00C  F1F6   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 33310                           
 33311                           ; BSR set to: 57
 33312  009972  0012               	return		;funcret
 33313  009974                     __end_of_UART1_SetTxInterruptHandler:
 33314                           	opt callstack 0
 33315                           
 33316 ;; *************** function _UART1_SetRxInterruptHandler *****************
 33317 ;; Defined at:
 33318 ;;		line 348 in file "mcc_generated_files/uart1.c"
 33319 ;; Parameters:    Size  Location     Type
 33320 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 33321 ;;		 -> UART1_Receive_ISR(1), 
 33322 ;; Auto vars:     Size  Location     Type
 33323 ;;		None
 33324 ;; Return value:  Size  Location     Type
 33325 ;;                  1    wreg      void 
 33326 ;; Registers used:
 33327 ;;		wreg, status,2, status,0
 33328 ;; Tracked objects:
 33329 ;;		On entry : 3F/39
 33330 ;;		On exit  : 3F/39
 33331 ;;		Unchanged: 3E/0
 33332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33336 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33337 ;;Total ram usage:        2 bytes
 33338 ;; Hardware stack levels used:    1
 33339 ;; Hardware stack levels required when called:    7
 33340 ;; This function calls:
 33341 ;;		Nothing
 33342 ;; This function is called by:
 33343 ;;		_UART1_Initialize
 33344 ;; This function uses a non-reentrant model
 33345 ;;
 33346                           
 33347                           	psect	text224
 33348  009974                     __ptext224:
 33349                           	opt callstack 0
 33350  009974                     _UART1_SetRxInterruptHandler:
 33351                           	opt callstack 21
 33352                           
 33353                           ; BSR set to: 57
 33354                           ;mcc_generated_files/uart1.c: 349:     UART1_RxInterruptHandler = InterruptHandler;
 33355                           
 33356                           ; BSR set to: 57
 33357                           ;incstack = 0
 33358  009974  0060  F008  F1F7   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 33359  00997A  0060  F00C  F1F8   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 33360                           
 33361                           ; BSR set to: 57
 33362  009980  0012               	return		;funcret
 33363  009982                     __end_of_UART1_SetRxInterruptHandler:
 33364                           	opt callstack 0
 33365                           
 33366 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 33367 ;; Defined at:
 33368 ;;		line 338 in file "mcc_generated_files/uart1.c"
 33369 ;; Parameters:    Size  Location     Type
 33370 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 33371 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 33372 ;; Auto vars:     Size  Location     Type
 33373 ;;		None
 33374 ;; Return value:  Size  Location     Type
 33375 ;;                  1    wreg      void 
 33376 ;; Registers used:
 33377 ;;		wreg, status,2, status,0
 33378 ;; Tracked objects:
 33379 ;;		On entry : 3F/3D
 33380 ;;		On exit  : 3F/3D
 33381 ;;		Unchanged: 3E/0
 33382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33386 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33387 ;;Total ram usage:        2 bytes
 33388 ;; Hardware stack levels used:    1
 33389 ;; Hardware stack levels required when called:    7
 33390 ;; This function calls:
 33391 ;;		Nothing
 33392 ;; This function is called by:
 33393 ;;		_UART1_Initialize
 33394 ;; This function uses a non-reentrant model
 33395 ;;
 33396                           
 33397                           	psect	text225
 33398  009982                     __ptext225:
 33399                           	opt callstack 0
 33400  009982                     _UART1_SetOverrunErrorHandler:
 33401                           	opt callstack 21
 33402                           
 33403                           ; BSR set to: 61
 33404                           ;mcc_generated_files/uart1.c: 339:     UART1_OverrunErrorHandler = interruptHandler;
 33405                           
 33406                           ; BSR set to: 57
 33407                           ;incstack = 0
 33408  009982  0060  F008  F1EF   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 33409  009988  0060  F00C  F1F0   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 33410                           
 33411                           ; BSR set to: 61
 33412  00998E  0012               	return		;funcret
 33413  009990                     __end_of_UART1_SetOverrunErrorHandler:
 33414                           	opt callstack 0
 33415                           
 33416 ;; *************** function _UART1_SetFramingErrorHandler *****************
 33417 ;; Defined at:
 33418 ;;		line 334 in file "mcc_generated_files/uart1.c"
 33419 ;; Parameters:    Size  Location     Type
 33420 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 33421 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 33422 ;; Auto vars:     Size  Location     Type
 33423 ;;		None
 33424 ;; Return value:  Size  Location     Type
 33425 ;;                  1    wreg      void 
 33426 ;; Registers used:
 33427 ;;		wreg, status,2, status,0
 33428 ;; Tracked objects:
 33429 ;;		On entry : 3F/3D
 33430 ;;		On exit  : 3F/3D
 33431 ;;		Unchanged: 3E/0
 33432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33433 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33436 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33437 ;;Total ram usage:        2 bytes
 33438 ;; Hardware stack levels used:    1
 33439 ;; Hardware stack levels required when called:    7
 33440 ;; This function calls:
 33441 ;;		Nothing
 33442 ;; This function is called by:
 33443 ;;		_UART1_Initialize
 33444 ;; This function uses a non-reentrant model
 33445 ;;
 33446                           
 33447                           	psect	text226
 33448  009990                     __ptext226:
 33449                           	opt callstack 0
 33450  009990                     _UART1_SetFramingErrorHandler:
 33451                           	opt callstack 21
 33452                           
 33453                           ; BSR set to: 61
 33454                           ;mcc_generated_files/uart1.c: 335:     UART1_FramingErrorHandler = interruptHandler;
 33455                           
 33456                           ; BSR set to: 61
 33457                           ;incstack = 0
 33458  009990  0060  F008  F1F1   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 33459  009996  0060  F00C  F1F2   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 33460                           
 33461                           ; BSR set to: 61
 33462  00999C  0012               	return		;funcret
 33463  00999E                     __end_of_UART1_SetFramingErrorHandler:
 33464                           	opt callstack 0
 33465                           
 33466 ;; *************** function _UART1_SetErrorHandler *****************
 33467 ;; Defined at:
 33468 ;;		line 342 in file "mcc_generated_files/uart1.c"
 33469 ;; Parameters:    Size  Location     Type
 33470 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 33471 ;;		 -> UART1_DefaultErrorHandler(1), 
 33472 ;; Auto vars:     Size  Location     Type
 33473 ;;		None
 33474 ;; Return value:  Size  Location     Type
 33475 ;;                  1    wreg      void 
 33476 ;; Registers used:
 33477 ;;		wreg, status,2, status,0
 33478 ;; Tracked objects:
 33479 ;;		On entry : 3F/3D
 33480 ;;		On exit  : 3F/3D
 33481 ;;		Unchanged: 3E/0
 33482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33483 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33486 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33487 ;;Total ram usage:        2 bytes
 33488 ;; Hardware stack levels used:    1
 33489 ;; Hardware stack levels required when called:    7
 33490 ;; This function calls:
 33491 ;;		Nothing
 33492 ;; This function is called by:
 33493 ;;		_UART1_Initialize
 33494 ;; This function uses a non-reentrant model
 33495 ;;
 33496                           
 33497                           	psect	text227
 33498  00999E                     __ptext227:
 33499                           	opt callstack 0
 33500  00999E                     _UART1_SetErrorHandler:
 33501                           	opt callstack 21
 33502                           
 33503                           ; BSR set to: 61
 33504                           ;mcc_generated_files/uart1.c: 343:     UART1_ErrorHandler = interruptHandler;
 33505                           
 33506                           ; BSR set to: 61
 33507                           ;incstack = 0
 33508  00999E  0060  F008  F1ED   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 33509  0099A4  0060  F00C  F1EE   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 33510                           
 33511                           ; BSR set to: 61
 33512  0099AA  0012               	return		;funcret
 33513  0099AC                     __end_of_UART1_SetErrorHandler:
 33514                           	opt callstack 0
 33515                           
 33516 ;; *************** function _TMR0_Initialize *****************
 33517 ;; Defined at:
 33518 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 33519 ;; Parameters:    Size  Location     Type
 33520 ;;		None
 33521 ;; Auto vars:     Size  Location     Type
 33522 ;;		None
 33523 ;; Return value:  Size  Location     Type
 33524 ;;                  1    wreg      void 
 33525 ;; Registers used:
 33526 ;;		wreg, status,2, status,0, cstack
 33527 ;; Tracked objects:
 33528 ;;		On entry : 3F/0
 33529 ;;		On exit  : 3B/39
 33530 ;;		Unchanged: 0/0
 33531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33534 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33536 ;;Total ram usage:        2 bytes
 33537 ;; Hardware stack levels used:    1
 33538 ;; Hardware stack levels required when called:    8
 33539 ;; This function calls:
 33540 ;;		_TMR0_SetInterruptHandler
 33541 ;; This function is called by:
 33542 ;;		_SYSTEM_Initialize
 33543 ;; This function uses a non-reentrant model
 33544 ;;
 33545                           
 33546                           	psect	text228
 33547  008E08                     __ptext228:
 33548                           	opt callstack 0
 33549  008E08                     _TMR0_Initialize:
 33550                           	opt callstack 21
 33551                           
 33552                           ; BSR set to: 0
 33553                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x40;
 33554                           
 33555                           ; BSR set to: 61
 33556                           ;incstack = 0
 33557  008E08  0E40               	movlw	64
 33558  008E0A  6EB9               	movwf	185,c	;volatile
 33559                           
 33560                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xC1;
 33561  008E0C  0EC1               	movlw	193
 33562  008E0E  6EB7               	movwf	183,c	;volatile
 33563                           
 33564                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x80;
 33565  008E10  0E80               	movlw	128
 33566  008E12  6EB6               	movwf	182,c	;volatile
 33567                           
 33568                           ; BSR set to: 0
 33569                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 33570  008E14  50B6               	movf	182,w,c	;volatile
 33571  008E16  006F FEDC  F004    	movff	16311,??_TMR0_Initialize	;volatile
 33572  008E1C  6A05               	clrf	(??_TMR0_Initialize+1)^0,c
 33573  008E1E  0060  F010  F005   	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 33574  008E24  6A04               	clrf	??_TMR0_Initialize^0,c
 33575  008E26  1004               	iorwf	??_TMR0_Initialize^0,w,c
 33576  008E28  6FFD               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
 33577  008E2A  5005               	movf	(??_TMR0_Initialize+1)^0,w,c
 33578  008E2C  6FFE               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
 33579                           
 33580                           ; BSR set to: 0
 33581                           ;mcc_generated_files/tmr0.c: 84:     PIR3bits.TMR0IF = 0;
 33582  008E2E  0139               	movlb	57	; () banked
 33583  008E30  9FA3               	bcf	163,7,b	;volatile
 33584                           
 33585                           ; BSR set to: 57
 33586                           ;mcc_generated_files/tmr0.c: 87:     PIE3bits.TMR0IE = 1;
 33587  008E32  8F93               	bsf	147,7,b	;volatile
 33588                           
 33589                           ; BSR set to: 57
 33590                           ;mcc_generated_files/tmr0.c: 90:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 33591  008E34  0E26               	movlw	low _TMR0_DefaultInterruptHandler
 33592  008E36  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 33593  008E38  0E9A               	movlw	high _TMR0_DefaultInterruptHandler
 33594  008E3A  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 33595  008E3C  ECD6  F04C         	call	_TMR0_SetInterruptHandler	;wreg free
 33596                           
 33597                           ;mcc_generated_files/tmr0.c: 93:     T0CON0 = 0x90;
 33598  008E40  0E90               	movlw	144
 33599  008E42  6EB8               	movwf	184,c	;volatile
 33600  008E44  0012               	return		;funcret
 33601  008E46                     __end_of_TMR0_Initialize:
 33602                           	opt callstack 0
 33603                           
 33604 ;; *************** function _TMR0_SetInterruptHandler *****************
 33605 ;; Defined at:
 33606 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 33607 ;; Parameters:    Size  Location     Type
 33608 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 33609 ;;		 -> TMR0_DefaultInterruptHandler(1), Timer0Handler(1), 
 33610 ;; Auto vars:     Size  Location     Type
 33611 ;;		None
 33612 ;; Return value:  Size  Location     Type
 33613 ;;                  1    wreg      void 
 33614 ;; Registers used:
 33615 ;;		wreg, status,2, status,0
 33616 ;; Tracked objects:
 33617 ;;		On entry : 3B/3D
 33618 ;;		On exit  : 3B/39
 33619 ;;		Unchanged: 3A/0
 33620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33621 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33624 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33625 ;;Total ram usage:        2 bytes
 33626 ;; Hardware stack levels used:    1
 33627 ;; Hardware stack levels required when called:    7
 33628 ;; This function calls:
 33629 ;;		Nothing
 33630 ;; This function is called by:
 33631 ;;		_TMR0_Initialize
 33632 ;;		_main
 33633 ;; This function uses a non-reentrant model
 33634 ;;
 33635                           
 33636                           	psect	text229
 33637  0099AC                     __ptext229:
 33638                           	opt callstack 0
 33639  0099AC                     _TMR0_SetInterruptHandler:
 33640                           	opt callstack 23
 33641                           
 33642                           ;mcc_generated_files/tmr0.c: 161:     TMR0_InterruptHandler = InterruptHandler;
 33643                           
 33644                           ;incstack = 0
 33645  0099AC  0060  F008  F1F3   	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 33646  0099B2  0060  F00C  F1F4   	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 33647  0099B8  0012               	return		;funcret
 33648  0099BA                     __end_of_TMR0_SetInterruptHandler:
 33649                           	opt callstack 0
 33650                           
 33651 ;; *************** function _SPI1_Initialize *****************
 33652 ;; Defined at:
 33653 ;;		line 64 in file "mcc_generated_files/spi1.c"
 33654 ;; Parameters:    Size  Location     Type
 33655 ;;		None
 33656 ;; Auto vars:     Size  Location     Type
 33657 ;;		None
 33658 ;; Return value:  Size  Location     Type
 33659 ;;                  1    wreg      void 
 33660 ;; Registers used:
 33661 ;;		wreg, status,2
 33662 ;; Tracked objects:
 33663 ;;		On entry : 3F/39
 33664 ;;		On exit  : 3F/3D
 33665 ;;		Unchanged: 0/0
 33666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33671 ;;Total ram usage:        0 bytes
 33672 ;; Hardware stack levels used:    1
 33673 ;; Hardware stack levels required when called:    7
 33674 ;; This function calls:
 33675 ;;		Nothing
 33676 ;; This function is called by:
 33677 ;;		_SYSTEM_Initialize
 33678 ;; This function uses a non-reentrant model
 33679 ;;
 33680                           
 33681                           	psect	text230
 33682  009786                     __ptext230:
 33683                           	opt callstack 0
 33684  009786                     _SPI1_Initialize:
 33685                           	opt callstack 22
 33686                           
 33687                           ; BSR set to: 57
 33688                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x82;
 33689                           
 33690                           ;incstack = 0
 33691  009786  0E82               	movlw	130
 33692  009788  013D               	movlb	61	; () banked
 33693  00978A  6F14               	movwf	20,b	;volatile
 33694                           
 33695                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0xC0;
 33696  00978C  0EC0               	movlw	192
 33697  00978E  6F15               	movwf	21,b	;volatile
 33698                           
 33699                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x03;
 33700  009790  0E03               	movlw	3
 33701  009792  6F16               	movwf	22,b	;volatile
 33702                           
 33703                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x01;
 33704  009794  0E01               	movlw	1
 33705  009796  6F1C               	movwf	28,b	;volatile
 33706                           
 33707                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x03;
 33708  009798  0E03               	movlw	3
 33709  00979A  6F19               	movwf	25,b	;volatile
 33710                           
 33711                           ; BSR set to: 61
 33712                           ;mcc_generated_files/spi1.c: 76:     TRISBbits.TRISB2 = 0;
 33713  00979C  94C3               	bcf	195,2,c	;volatile
 33714                           
 33715                           ; BSR set to: 61
 33716  00979E  0012               	return		;funcret
 33717  0097A0                     __end_of_SPI1_Initialize:
 33718                           	opt callstack 0
 33719                           
 33720 ;; *************** function _PMD_Initialize *****************
 33721 ;; Defined at:
 33722 ;;		line 76 in file "mcc_generated_files/mcc.c"
 33723 ;; Parameters:    Size  Location     Type
 33724 ;;		None
 33725 ;; Auto vars:     Size  Location     Type
 33726 ;;		None
 33727 ;; Return value:  Size  Location     Type
 33728 ;;                  1    wreg      void 
 33729 ;; Registers used:
 33730 ;;		wreg, status,2
 33731 ;; Tracked objects:
 33732 ;;		On entry : 3F/39
 33733 ;;		On exit  : 3F/39
 33734 ;;		Unchanged: 0/0
 33735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33740 ;;Total ram usage:        0 bytes
 33741 ;; Hardware stack levels used:    1
 33742 ;; Hardware stack levels required when called:    7
 33743 ;; This function calls:
 33744 ;;		Nothing
 33745 ;; This function is called by:
 33746 ;;		_SYSTEM_Initialize
 33747 ;; This function uses a non-reentrant model
 33748 ;;
 33749                           
 33750                           	psect	text231
 33751  00958C                     __ptext231:
 33752                           	opt callstack 0
 33753  00958C                     _PMD_Initialize:
 33754                           	opt callstack 22
 33755                           
 33756                           ; BSR set to: 57
 33757                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
 33758                           
 33759                           ; BSR set to: 61
 33760                           ;incstack = 0
 33761  00958C  0E00               	movlw	0
 33762  00958E  6FC0               	movwf	192,b	;volatile
 33763                           
 33764                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
 33765  009590  0E00               	movlw	0
 33766  009592  6FC1               	movwf	193,b	;volatile
 33767                           
 33768                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
 33769  009594  0E00               	movlw	0
 33770  009596  6FC2               	movwf	194,b	;volatile
 33771                           
 33772                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
 33773  009598  0E00               	movlw	0
 33774  00959A  6FC3               	movwf	195,b	;volatile
 33775                           
 33776                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
 33777  00959C  0E00               	movlw	0
 33778  00959E  6FC4               	movwf	196,b	;volatile
 33779                           
 33780                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
 33781  0095A0  0E00               	movlw	0
 33782  0095A2  6FC5               	movwf	197,b	;volatile
 33783                           
 33784                           ;mcc_generated_files/mcc.c: 91:     PMD6 = 0x00;
 33785  0095A4  0E00               	movlw	0
 33786  0095A6  6FC6               	movwf	198,b	;volatile
 33787                           
 33788                           ;mcc_generated_files/mcc.c: 93:     PMD7 = 0x00;
 33789  0095A8  0E00               	movlw	0
 33790  0095AA  6FC7               	movwf	199,b	;volatile
 33791                           
 33792                           ; BSR set to: 57
 33793  0095AC  0012               	return		;funcret
 33794  0095AE                     __end_of_PMD_Initialize:
 33795                           	opt callstack 0
 33796                           
 33797 ;; *************** function _PIN_MANAGER_Initialize *****************
 33798 ;; Defined at:
 33799 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 33800 ;; Parameters:    Size  Location     Type
 33801 ;;		None
 33802 ;; Auto vars:     Size  Location     Type
 33803 ;;		None
 33804 ;; Return value:  Size  Location     Type
 33805 ;;                  1    wreg      void 
 33806 ;; Registers used:
 33807 ;;		wreg, status,2
 33808 ;; Tracked objects:
 33809 ;;		On entry : 3F/39
 33810 ;;		On exit  : 3F/3A
 33811 ;;		Unchanged: 0/0
 33812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33817 ;;Total ram usage:        0 bytes
 33818 ;; Hardware stack levels used:    1
 33819 ;; Hardware stack levels required when called:    7
 33820 ;; This function calls:
 33821 ;;		Nothing
 33822 ;; This function is called by:
 33823 ;;		_SYSTEM_Initialize
 33824 ;; This function uses a non-reentrant model
 33825 ;;
 33826                           
 33827                           	psect	text232
 33828  007B20                     __ptext232:
 33829                           	opt callstack 0
 33830  007B20                     _PIN_MANAGER_Initialize:
 33831                           	opt callstack 22
 33832                           
 33833                           ; BSR set to: 57
 33834                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x08;
 33835                           
 33836                           ; BSR set to: 57
 33837                           ;incstack = 0
 33838  007B20  0E08               	movlw	8
 33839  007B22  6EBA               	movwf	186,c	;volatile
 33840                           
 33841                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 33842  007B24  0E00               	movlw	0
 33843  007B26  6EBB               	movwf	187,c	;volatile
 33844                           
 33845                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x40;
 33846  007B28  0E40               	movlw	64
 33847  007B2A  6EBC               	movwf	188,c	;volatile
 33848                           
 33849                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xF7;
 33850  007B2C  0EF7               	movlw	247
 33851  007B2E  6EC2               	movwf	194,c	;volatile
 33852                           
 33853                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFE;
 33854  007B30  0EFE               	movlw	254
 33855  007B32  6EC3               	movwf	195,c	;volatile
 33856                           
 33857                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x1C;
 33858  007B34  0E1C               	movlw	28
 33859  007B36  6EC4               	movwf	196,c	;volatile
 33860                           
 33861                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x29;
 33862  007B38  0E29               	movlw	41
 33863  007B3A  013A               	movlb	58	; () banked
 33864  007B3C  6F60               	movwf	96,b	;volatile
 33865                           
 33866                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xCD;
 33867  007B3E  0ECD               	movlw	205
 33868  007B40  6F50               	movwf	80,b	;volatile
 33869                           
 33870                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xF2;
 33871  007B42  0EF2               	movlw	242
 33872  007B44  6F40               	movwf	64,b	;volatile
 33873                           
 33874                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
 33875  007B46  0E00               	movlw	0
 33876  007B48  6F81               	movwf	129,b	;volatile
 33877                           
 33878                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
 33879  007B4A  0E00               	movlw	0
 33880  007B4C  6F51               	movwf	81,b	;volatile
 33881                           
 33882                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
 33883  007B4E  0E00               	movlw	0
 33884  007B50  6F41               	movwf	65,b	;volatile
 33885                           
 33886                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x08;
 33887  007B52  0E08               	movlw	8
 33888  007B54  6F61               	movwf	97,b	;volatile
 33889                           
 33890                           ;mcc_generated_files/pin_manager.c: 89:     RB1I2C = 0x00;
 33891  007B56  0E00               	movlw	0
 33892  007B58  6F5A               	movwf	90,b	;volatile
 33893                           
 33894                           ;mcc_generated_files/pin_manager.c: 90:     RB2I2C = 0x00;
 33895  007B5A  0E00               	movlw	0
 33896  007B5C  6F5B               	movwf	91,b	;volatile
 33897                           
 33898                           ;mcc_generated_files/pin_manager.c: 91:     RC3I2C = 0x00;
 33899  007B5E  0E00               	movlw	0
 33900  007B60  6F6A               	movwf	106,b	;volatile
 33901                           
 33902                           ;mcc_generated_files/pin_manager.c: 92:     RC4I2C = 0x00;
 33903  007B62  0E00               	movlw	0
 33904  007B64  6F6B               	movwf	107,b	;volatile
 33905                           
 33906                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 33907  007B66  0E00               	movlw	0
 33908  007B68  6F42               	movwf	66,b	;volatile
 33909                           
 33910                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x06;
 33911  007B6A  0E06               	movlw	6
 33912  007B6C  6F52               	movwf	82,b	;volatile
 33913                           
 33914                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x18;
 33915  007B6E  0E18               	movlw	24
 33916  007B70  6F62               	movwf	98,b	;volatile
 33917                           
 33918                           ; BSR set to: 58
 33919                           ;mcc_generated_files/pin_manager.c: 104:     SLRCONA = 0xFF;
 33920  007B72  6943               	setf	67,b	;volatile
 33921                           
 33922                           ; BSR set to: 58
 33923                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONB = 0xFF;
 33924  007B74  6953               	setf	83,b	;volatile
 33925                           
 33926                           ; BSR set to: 58
 33927                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONC = 0xFF;
 33928  007B76  6963               	setf	99,b	;volatile
 33929                           
 33930                           ; BSR set to: 58
 33931                           ;mcc_generated_files/pin_manager.c: 111:     INLVLA = 0xFF;
 33932  007B78  6944               	setf	68,b	;volatile
 33933                           
 33934                           ; BSR set to: 58
 33935                           ;mcc_generated_files/pin_manager.c: 112:     INLVLB = 0xFF;
 33936  007B7A  6954               	setf	84,b	;volatile
 33937                           
 33938                           ; BSR set to: 58
 33939                           ;mcc_generated_files/pin_manager.c: 113:     INLVLC = 0xFF;
 33940  007B7C  6964               	setf	100,b	;volatile
 33941                           
 33942                           ;mcc_generated_files/pin_manager.c: 114:     INLVLE = 0x08;
 33943  007B7E  0E08               	movlw	8
 33944  007B80  6F84               	movwf	132,b	;volatile
 33945                           
 33946                           ;mcc_generated_files/pin_manager.c: 123:     RC0PPS = 0x13;
 33947  007B82  0E13               	movlw	19
 33948  007B84  6F10               	movwf	16,b	;volatile
 33949                           
 33950                           ;mcc_generated_files/pin_manager.c: 124:     SPI1SCKPPS = 0x17;
 33951  007B86  0E17               	movlw	23
 33952  007B88  6FDE               	movwf	222,b	;volatile
 33953                           
 33954                           ;mcc_generated_files/pin_manager.c: 125:     SPI1SSPPS = 0x05;
 33955  007B8A  0E05               	movlw	5
 33956  007B8C  6FE0               	movwf	224,b	;volatile
 33957                           
 33958                           ;mcc_generated_files/pin_manager.c: 126:     RB0PPS = 0x1F;
 33959  007B8E  0E1F               	movlw	31
 33960  007B90  6F08               	movwf	8,b	;volatile
 33961                           
 33962                           ;mcc_generated_files/pin_manager.c: 127:     RC1PPS = 0x14;
 33963  007B92  0E14               	movlw	20
 33964  007B94  6F11               	movwf	17,b	;volatile
 33965                           
 33966                           ;mcc_generated_files/pin_manager.c: 128:     U1RXPPS = 0x12;
 33967  007B96  0E12               	movlw	18
 33968  007B98  6FE5               	movwf	229,b	;volatile
 33969                           
 33970                           ;mcc_generated_files/pin_manager.c: 129:     U1CTSPPS = 0x1F;
 33971  007B9A  0E1F               	movlw	31
 33972  007B9C  6FE6               	movwf	230,b	;volatile
 33973                           
 33974                           ;mcc_generated_files/pin_manager.c: 130:     RC7PPS = 0x1E;
 33975  007B9E  0E1E               	movlw	30
 33976  007BA0  6F17               	movwf	23,b	;volatile
 33977                           
 33978                           ;mcc_generated_files/pin_manager.c: 131:     SPI1SDIPPS = 0x09;
 33979  007BA2  0E09               	movlw	9
 33980  007BA4  6FDF               	movwf	223,b	;volatile
 33981                           
 33982                           ; BSR set to: 58
 33983  007BA6  0012               	return		;funcret
 33984  007BA8                     __end_of_PIN_MANAGER_Initialize:
 33985                           	opt callstack 0
 33986                           
 33987 ;; *************** function _OSCILLATOR_Initialize *****************
 33988 ;; Defined at:
 33989 ;;		line 62 in file "mcc_generated_files/mcc.c"
 33990 ;; Parameters:    Size  Location     Type
 33991 ;;		None
 33992 ;; Auto vars:     Size  Location     Type
 33993 ;;		None
 33994 ;; Return value:  Size  Location     Type
 33995 ;;                  1    wreg      void 
 33996 ;; Registers used:
 33997 ;;		wreg, status,2
 33998 ;; Tracked objects:
 33999 ;;		On entry : 3F/3A
 34000 ;;		On exit  : 3F/39
 34001 ;;		Unchanged: 0/0
 34002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34007 ;;Total ram usage:        0 bytes
 34008 ;; Hardware stack levels used:    1
 34009 ;; Hardware stack levels required when called:    7
 34010 ;; This function calls:
 34011 ;;		Nothing
 34012 ;; This function is called by:
 34013 ;;		_SYSTEM_Initialize
 34014 ;; This function uses a non-reentrant model
 34015 ;;
 34016                           
 34017                           	psect	text233
 34018  009830                     __ptext233:
 34019                           	opt callstack 0
 34020  009830                     _OSCILLATOR_Initialize:
 34021                           	opt callstack 22
 34022                           
 34023                           ; BSR set to: 58
 34024                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
 34025                           
 34026                           ; BSR set to: 58
 34027                           ;incstack = 0
 34028  009830  0E60               	movlw	96
 34029  009832  0139               	movlb	57	; () banked
 34030  009834  6FD9               	movwf	217,b	;volatile
 34031                           
 34032                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
 34033  009836  0E00               	movlw	0
 34034  009838  6FDB               	movwf	219,b	;volatile
 34035                           
 34036                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
 34037  00983A  0E00               	movlw	0
 34038  00983C  6FDD               	movwf	221,b	;volatile
 34039                           
 34040                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x08;
 34041  00983E  0E08               	movlw	8
 34042  009840  6FDF               	movwf	223,b	;volatile
 34043                           
 34044                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
 34045  009842  0E00               	movlw	0
 34046  009844  6FDE               	movwf	222,b	;volatile
 34047                           
 34048                           ; BSR set to: 57
 34049  009846  0012               	return		;funcret
 34050  009848                     __end_of_OSCILLATOR_Initialize:
 34051                           	opt callstack 0
 34052                           
 34053 ;; *************** function _INTERRUPT_Initialize *****************
 34054 ;; Defined at:
 34055 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 34056 ;; Parameters:    Size  Location     Type
 34057 ;;		None
 34058 ;; Auto vars:     Size  Location     Type
 34059 ;;  state           1    1[COMRAM] _Bool 
 34060 ;; Return value:  Size  Location     Type
 34061 ;;                  1    wreg      void 
 34062 ;; Registers used:
 34063 ;;		wreg, status,2
 34064 ;; Tracked objects:
 34065 ;;		On entry : 0/0
 34066 ;;		On exit  : 3F/39
 34067 ;;		Unchanged: 0/0
 34068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34072 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34073 ;;Total ram usage:        1 bytes
 34074 ;; Hardware stack levels used:    1
 34075 ;; Hardware stack levels required when called:    7
 34076 ;; This function calls:
 34077 ;;		Nothing
 34078 ;; This function is called by:
 34079 ;;		_SYSTEM_Initialize
 34080 ;; This function uses a non-reentrant model
 34081 ;;
 34082                           
 34083                           	psect	text234
 34084  008C92                     __ptext234:
 34085                           	opt callstack 0
 34086  008C92                     _INTERRUPT_Initialize:
 34087                           	opt callstack 22
 34088                           
 34089                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 34090                           
 34091                           ; BSR set to: 57
 34092                           ;incstack = 0
 34093  008C92  8AD2               	bsf	210,5,c	;volatile
 34094                           
 34095                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 34096  008C94  0E00               	movlw	0
 34097  008C96  BED2               	btfsc	16338,7,c	;volatile
 34098  008C98  0E01               	movlw	1
 34099  008C9A  6E02               	movwf	INTERRUPT_Initialize@state^0,c
 34100                           
 34101                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 34102  008C9C  9ED2               	bcf	16338,7,c	;volatile
 34103                           
 34104                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 34105  008C9E  0E55               	movlw	85
 34106  008CA0  6ED4               	movwf	212,c	;volatile
 34107                           
 34108                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 34109  008CA2  0EAA               	movlw	170
 34110  008CA4  6ED4               	movwf	212,c	;volatile
 34111                           
 34112                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 34113  008CA6  90D4               	bcf	212,0,c	;volatile
 34114                           
 34115                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 34116  008CA8  0E00               	movlw	0
 34117  008CAA  6ED7               	movwf	215,c	;volatile
 34118                           
 34119                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 34120  008CAC  0E00               	movlw	0
 34121  008CAE  6ED6               	movwf	214,c	;volatile
 34122                           
 34123                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 34124  008CB0  0E08               	movlw	8
 34125  008CB2  6ED5               	movwf	213,c	;volatile
 34126                           
 34127                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 34128  008CB4  0E55               	movlw	85
 34129  008CB6  6ED4               	movwf	212,c	;volatile
 34130                           
 34131                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 34132  008CB8  0EAA               	movlw	170
 34133  008CBA  6ED4               	movwf	212,c	;volatile
 34134                           
 34135                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 34136  008CBC  80D4               	bsf	212,0,c	;volatile
 34137                           
 34138                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 34139  008CBE  B002               	btfsc	INTERRUPT_Initialize@state^0,0,c
 34140  008CC0  D002               	bra	u6255
 34141  008CC2  9ED2               	bcf	16338,7,c	;volatile
 34142  008CC4  D001               	bra	u6256
 34143  008CC6                     u6255:
 34144  008CC6  8ED2               	bsf	16338,7,c	;volatile
 34145  008CC8                     u6256:
 34146                           
 34147                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 1;
 34148  008CC8  0139               	movlb	57	; () banked
 34149  008CCA  8983               	bsf	131,4,b	;volatile
 34150                           
 34151                           ; BSR set to: 57
 34152                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 1;
 34153  008CCC  8783               	bsf	131,3,b	;volatile
 34154                           
 34155                           ; BSR set to: 57
 34156                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.TMR0IP = 0;
 34157  008CCE  9F83               	bcf	131,7,b	;volatile
 34158                           
 34159                           ; BSR set to: 57
 34160  008CD0  0012               	return		;funcret
 34161  008CD2                     __end_of_INTERRUPT_Initialize:
 34162                           	opt callstack 0
 34163                           
 34164 ;; *************** function _CRC_Initialize *****************
 34165 ;; Defined at:
 34166 ;;		line 76 in file "mcc_generated_files/crc.c"
 34167 ;; Parameters:    Size  Location     Type
 34168 ;;		None
 34169 ;; Auto vars:     Size  Location     Type
 34170 ;;  seed            2    4[COMRAM] unsigned short 
 34171 ;;  poly            2    2[COMRAM] unsigned short 
 34172 ;; Return value:  Size  Location     Type
 34173 ;;                  1    wreg      void 
 34174 ;; Registers used:
 34175 ;;		wreg, status,2, status,0
 34176 ;; Tracked objects:
 34177 ;;		On entry : 3F/39
 34178 ;;		On exit  : 3F/0
 34179 ;;		Unchanged: 0/0
 34180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34182 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34183 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34184 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34185 ;;Total ram usage:        5 bytes
 34186 ;; Hardware stack levels used:    1
 34187 ;; Hardware stack levels required when called:    7
 34188 ;; This function calls:
 34189 ;;		Nothing
 34190 ;; This function is called by:
 34191 ;;		_SYSTEM_Initialize
 34192 ;; This function uses a non-reentrant model
 34193 ;;
 34194                           
 34195                           	psect	text235
 34196  0080E2                     __ptext235:
 34197                           	opt callstack 0
 34198  0080E2                     _CRC_Initialize:
 34199                           	opt callstack 22
 34200                           
 34201                           ; BSR set to: 57
 34202                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 34203                           
 34204                           ; BSR set to: 57
 34205                           ;incstack = 0
 34206  0080E2  0E80               	movlw	128
 34207  0080E4  6F68               	movwf	104,b	;volatile
 34208                           
 34209                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (7 << 4) | (15);
 34210  0080E6  0E7F               	movlw	127
 34211  0080E8  6F69               	movwf	105,b	;volatile
 34212                           
 34213                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 34214  0080EA  0E00               	movlw	0
 34215  0080EC  6F62               	movwf	98,b	;volatile
 34216                           
 34217                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 34218  0080EE  0E00               	movlw	0
 34219  0080F0  6F63               	movwf	99,b	;volatile
 34220                           
 34221                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 34222  0080F2  0E00               	movlw	0
 34223  0080F4  6F7C               	movwf	124,b	;volatile
 34224                           
 34225                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 34226  0080F6  0E00               	movlw	0
 34227  0080F8  6F78               	movwf	120,b	;volatile
 34228                           
 34229                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 34230  0080FA  0E00               	movlw	0
 34231  0080FC  6F77               	movwf	119,b	;volatile
 34232                           
 34233                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 34234  0080FE  0E00               	movlw	0
 34235  008100  6F76               	movwf	118,b	;volatile
 34236                           
 34237                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 34238  008102  0E3F               	movlw	63
 34239  008104  6F7B               	movwf	123,b	;volatile
 34240                           
 34241                           ; BSR set to: 57
 34242                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 34243  008106  697A               	setf	122,b	;volatile
 34244                           
 34245                           ; BSR set to: 57
 34246                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 34247  008108  6979               	setf	121,b	;volatile
 34248                           
 34249                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 34250  00810A  0E00               	movlw	0
 34251  00810C  6F7D               	movwf	125,b	;volatile
 34252                           
 34253                           ;mcc_generated_files/crc.c: 106:     poly = 32773;
 34254  00810E  0E80               	movlw	128
 34255  008110  6E04               	movwf	(CRC_Initialize@poly+1)^0,c
 34256  008112  0E05               	movlw	5
 34257  008114  6E03               	movwf	CRC_Initialize@poly^0,c
 34258                           
 34259                           ; BSR set to: 57
 34260                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 34261  008116  0060  F013  F967   	movff	CRC_Initialize@poly+1,14695	;volatile
 34262                           
 34263                           ; BSR set to: 57
 34264                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 34265  00811C  0E05               	movlw	5
 34266  00811E  6F66               	movwf	102,b	;volatile
 34267                           
 34268                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 34269  008120  0E00               	movlw	0
 34270  008122  6E06               	movwf	(CRC_Initialize@seed+1)^0,c
 34271  008124  0E00               	movlw	0
 34272  008126  6E05               	movwf	CRC_Initialize@seed^0,c
 34273                           
 34274                           ; BSR set to: 57
 34275                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 34276  008128  0060  F01B  F963   	movff	CRC_Initialize@seed+1,14691	;volatile
 34277                           
 34278                           ; BSR set to: 57
 34279                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 34280  00812E  0E00               	movlw	0
 34281  008130  6F62               	movwf	98,b	;volatile
 34282                           
 34283                           ; BSR set to: 57
 34284                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 34285  008132  3969               	swapf	105,w,b	;volatile
 34286  008134  0B0F               	andlw	15
 34287  008136  6E02               	movwf	??_CRC_Initialize^0,c
 34288  008138  2802               	incf	??_CRC_Initialize^0,w,c
 34289  00813A  0100               	movlb	0	; () banked
 34290  00813C  6FEC               	movwf	_crcObj& (0+255),b
 34291                           
 34292                           ; BSR set to: 0
 34293                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 34294  00813E  0139               	movlb	57	; () banked
 34295  008140  5169               	movf	105,w,b	;volatile
 34296  008142  0B0F               	andlw	15
 34297  008144  6E02               	movwf	??_CRC_Initialize^0,c
 34298  008146  2802               	incf	??_CRC_Initialize^0,w,c
 34299  008148  0100               	movlb	0	; () banked
 34300  00814A  6FED               	movwf	(_crcObj+1)& (0+255),b
 34301                           
 34302                           ; BSR set to: 0
 34303  00814C  0012               	return		;funcret
 34304  00814E                     __end_of_CRC_Initialize:
 34305                           	opt callstack 0
 34306                           
 34307 ;; *************** function _TMR0_ISR *****************
 34308 ;; Defined at:
 34309 ;;		line 135 in file "mcc_generated_files/tmr0.c"
 34310 ;; Parameters:    Size  Location     Type
 34311 ;;		None
 34312 ;; Auto vars:     Size  Location     Type
 34313 ;;		None
 34314 ;; Return value:  Size  Location     Type
 34315 ;;                  1    wreg      void 
 34316 ;; Registers used:
 34317 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 34318 ;; Tracked objects:
 34319 ;;		On entry : 0/0
 34320 ;;		On exit  : 0/0
 34321 ;;		Unchanged: 0/0
 34322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34325 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34326 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34327 ;;Total ram usage:        1 bytes
 34328 ;; Hardware stack levels used:    1
 34329 ;; Hardware stack levels required when called:    6
 34330 ;; This function calls:
 34331 ;;		_TMR0_CallBack
 34332 ;; This function is called by:
 34333 ;;		Interrupt level 1
 34334 ;; This function uses a non-reentrant model
 34335 ;;
 34336                           
 34337                           	psect	text236
 34338  0095B0                     __ptext236:
 34339                           	opt callstack 0
 34340  0095B0                     _TMR0_ISR:
 34341                           	opt callstack 11
 34342                           
 34343                           ; BSR set to: 0
 34344                           ;incstack = 0
 34345  0095B0  006F FF60  F001    	movff	status,??_TMR0_ISR
 34346                           
 34347                           ;mcc_generated_files/tmr0.c: 138:     PIR3bits.TMR0IF = 0;
 34348  0095B6  0139               	movlb	57	; () banked
 34349  0095B8  9FA3               	bcf	163,7,b	;volatile
 34350                           
 34351                           ;mcc_generated_files/tmr0.c: 140:     TMR0H = timer0ReloadVal16bit >> 8;
 34352  0095BA  0060  F3FB  FFB7   	movff	_timer0ReloadVal16bit+1,16311	;volatile
 34353                           
 34354                           ;mcc_generated_files/tmr0.c: 141:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 34355  0095C0  0060  F3F7  FFB6   	movff	_timer0ReloadVal16bit,16310	;volatile
 34356                           
 34357                           ; BSR set to: 57
 34358                           ;mcc_generated_files/tmr0.c: 145:     TMR0_CallBack();
 34359  0095C6  EC09  F04B         	call	_TMR0_CallBack	;wreg free
 34360  0095CA  0060  F007  FFD8   	movff	??_TMR0_ISR,status
 34361  0095D0  0011               	retfie		f
 34362  0095D2                     __end_of_TMR0_ISR:
 34363                           	opt callstack 0
 34364                           
 34365 ;; *************** function _TMR0_CallBack *****************
 34366 ;; Defined at:
 34367 ;;		line 150 in file "mcc_generated_files/tmr0.c"
 34368 ;; Parameters:    Size  Location     Type
 34369 ;;		None
 34370 ;; Auto vars:     Size  Location     Type
 34371 ;;		None
 34372 ;; Return value:  Size  Location     Type
 34373 ;;                  1    wreg      void 
 34374 ;; Registers used:
 34375 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 34376 ;; Tracked objects:
 34377 ;;		On entry : 3F/39
 34378 ;;		On exit  : 0/0
 34379 ;;		Unchanged: 0/0
 34380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34385 ;;Total ram usage:        0 bytes
 34386 ;; Hardware stack levels used:    1
 34387 ;; Hardware stack levels required when called:    5
 34388 ;; This function calls:
 34389 ;;		Absolute function
 34390 ;;		_TMR0_DefaultInterruptHandler
 34391 ;;		_Timer0Handler
 34392 ;; This function is called by:
 34393 ;;		_TMR0_ISR
 34394 ;; This function uses a non-reentrant model
 34395 ;;
 34396                           
 34397                           	psect	text237
 34398  009612                     __ptext237:
 34399                           	opt callstack 0
 34400  009612                     _TMR0_CallBack:
 34401                           	opt callstack 11
 34402                           
 34403                           ; BSR set to: 57
 34404                           ;mcc_generated_files/tmr0.c: 154:     if(TMR0_InterruptHandler)
 34405                           
 34406                           ;incstack = 0
 34407  009612  0101               	movlb	1	; () banked
 34408  009614  51F3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 34409  009616  11F4               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 34410  009618  B4D8               	btfsc	status,2,c
 34411  00961A  0012               	return	
 34412                           
 34413                           ; BSR set to: 1
 34414                           ;mcc_generated_files/tmr0.c: 155:     {;mcc_generated_files/tmr0.c: 156:         TMR0_In
      +                          terruptHandler();
 34415  00961C  D801               	call	i1u1337_28
 34416  00961E  0012               	return	
 34417  009620                     i1u1337_28:
 34418  009620  0005               	push	
 34419  009622  6EFA               	movwf	pclath,c
 34420  009624  51F3               	movf	_TMR0_InterruptHandler& (0+255),w,b
 34421  009626  6EFD               	movwf	tosl,c
 34422  009628  51F4               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 34423  00962A  6EFE               	movwf	tosh,c
 34424  00962C  6AFF               	clrf	tosu,c
 34425  00962E  50FA               	movf	pclath,w,c
 34426  009630  0012               	return		;indir
 34427  009632                     __end_of_TMR0_CallBack:
 34428                           	opt callstack 0
 34429                           
 34430 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 34431 ;; Defined at:
 34432 ;;		line 164 in file "mcc_generated_files/tmr0.c"
 34433 ;; Parameters:    Size  Location     Type
 34434 ;;		None
 34435 ;; Auto vars:     Size  Location     Type
 34436 ;;		None
 34437 ;; Return value:  Size  Location     Type
 34438 ;;                  1    wreg      void 
 34439 ;; Registers used:
 34440 ;;		None
 34441 ;; Tracked objects:
 34442 ;;		On entry : 3F/1
 34443 ;;		On exit  : 3F/1
 34444 ;;		Unchanged: 3F/0
 34445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34450 ;;Total ram usage:        0 bytes
 34451 ;; Hardware stack levels used:    1
 34452 ;; Hardware stack levels required when called:    4
 34453 ;; This function calls:
 34454 ;;		Nothing
 34455 ;; This function is called by:
 34456 ;;		_TMR0_Initialize
 34457 ;;		_TMR0_CallBack
 34458 ;; This function uses a non-reentrant model
 34459 ;;
 34460                           
 34461                           	psect	text238
 34462  009A26                     __ptext238:
 34463                           	opt callstack 0
 34464  009A26                     _TMR0_DefaultInterruptHandler:
 34465                           	opt callstack 11
 34466                           
 34467                           ; BSR set to: 1
 34468                           
 34469                           ;incstack = 0
 34470  009A26  0012               	return		;funcret
 34471  009A28                     __end_of_TMR0_DefaultInterruptHandler:
 34472                           	opt callstack 0
 34473                           
 34474 ;; *************** function _Timer0Handler *****************
 34475 ;; Defined at:
 34476 ;;		line 7 in file "../hal/hal_src/Timers.c"
 34477 ;; Parameters:    Size  Location     Type
 34478 ;;		None
 34479 ;; Auto vars:     Size  Location     Type
 34480 ;;		None
 34481 ;; Return value:  Size  Location     Type
 34482 ;;                  1    wreg      void 
 34483 ;; Registers used:
 34484 ;;		wreg, status,2, status,0
 34485 ;; Tracked objects:
 34486 ;;		On entry : 3F/1
 34487 ;;		On exit  : 3F/0
 34488 ;;		Unchanged: 0/0
 34489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34494 ;;Total ram usage:        0 bytes
 34495 ;; Hardware stack levels used:    1
 34496 ;; Hardware stack levels required when called:    4
 34497 ;; This function calls:
 34498 ;;		Nothing
 34499 ;; This function is called by:
 34500 ;;		_main
 34501 ;;		_TMR0_CallBack
 34502 ;; This function uses a non-reentrant model
 34503 ;;
 34504                           
 34505                           	psect	text239
 34506  0088BC                     __ptext239:
 34507                           	opt callstack 0
 34508  0088BC                     _Timer0Handler:
 34509                           	opt callstack 11
 34510                           
 34511                           ; BSR set to: 1
 34512                           ;../hal/hal_src/Timers.c: 9:     if(txTimeOut){
 34513                           
 34514                           ; BSR set to: 1
 34515                           ;incstack = 0
 34516  0088BC  0100               	movlb	0	; () banked
 34517  0088BE  51F1               	movf	_txTimeOut& (0+255),w,b	;volatile
 34518  0088C0  11F2               	iorwf	(_txTimeOut+1)& (0+255),w,b	;volatile
 34519  0088C2  B4D8               	btfsc	status,2,c
 34520  0088C4  D003               	goto	i1l13578
 34521                           
 34522                           ; BSR set to: 0
 34523                           ;../hal/hal_src/Timers.c: 10:         txTimeOut--;
 34524  0088C6  07F1               	decf	_txTimeOut& (0+255),f,b	;volatile
 34525  0088C8  A0D8               	btfss	status,0,c
 34526  0088CA  07F2               	decf	(_txTimeOut+1)& (0+255),f,b	;volatile
 34527  0088CC                     i1l13578:
 34528                           
 34529                           ; BSR set to: 0
 34530                           ;../hal/hal_src/Timers.c: 12:     if(ATTimeoutTimer){
 34531  0088CC  51FB               	movf	_ATTimeoutTimer& (0+255),w,b	;volatile
 34532  0088CE  11FC               	iorwf	(_ATTimeoutTimer+1)& (0+255),w,b	;volatile
 34533  0088D0  B4D8               	btfsc	status,2,c
 34534  0088D2  D003               	goto	i1l13582
 34535                           
 34536                           ; BSR set to: 0
 34537                           ;../hal/hal_src/Timers.c: 13:         ATTimeoutTimer--;
 34538  0088D4  07FB               	decf	_ATTimeoutTimer& (0+255),f,b	;volatile
 34539  0088D6  A0D8               	btfss	status,0,c
 34540  0088D8  07FC               	decf	(_ATTimeoutTimer+1)& (0+255),f,b	;volatile
 34541  0088DA                     i1l13582:
 34542                           
 34543                           ; BSR set to: 0
 34544                           ;../hal/hal_src/Timers.c: 15:     if(cadTimeOut){
 34545  0088DA  51F3               	movf	_cadTimeOut& (0+255),w,b	;volatile
 34546  0088DC  11F4               	iorwf	(_cadTimeOut+1)& (0+255),w,b	;volatile
 34547  0088DE  B4D8               	btfsc	status,2,c
 34548  0088E0  D003               	goto	i1l13586
 34549                           
 34550                           ; BSR set to: 0
 34551                           ;../hal/hal_src/Timers.c: 16:         cadTimeOut--;
 34552  0088E2  07F3               	decf	_cadTimeOut& (0+255),f,b	;volatile
 34553  0088E4  A0D8               	btfss	status,0,c
 34554  0088E6  07F4               	decf	(_cadTimeOut+1)& (0+255),f,b	;volatile
 34555  0088E8                     i1l13586:
 34556                           
 34557                           ; BSR set to: 0
 34558                           ;../hal/hal_src/Timers.c: 18:     if(_cadBackoffTimer){
 34559  0088E8  51F5               	movf	__cadBackoffTimer& (0+255),w,b	;volatile
 34560  0088EA  11F6               	iorwf	(__cadBackoffTimer+1)& (0+255),w,b	;volatile
 34561  0088EC  B4D8               	btfsc	status,2,c
 34562  0088EE  D003               	goto	i1l13590
 34563                           
 34564                           ; BSR set to: 0
 34565                           ;../hal/hal_src/Timers.c: 19:         _cadBackoffTimer--;
 34566  0088F0  07F5               	decf	__cadBackoffTimer& (0+255),f,b	;volatile
 34567  0088F2  A0D8               	btfss	status,0,c
 34568  0088F4  07F6               	decf	(__cadBackoffTimer+1)& (0+255),f,b	;volatile
 34569  0088F6                     i1l13590:
 34570                           
 34571                           ; BSR set to: 0
 34572                           ;../hal/hal_src/Timers.c: 21:     if(ledtimer){
 34573  0088F6  51EF               	movf	_ledtimer& (0+255),w,b	;volatile
 34574  0088F8  11F0               	iorwf	(_ledtimer+1)& (0+255),w,b	;volatile
 34575  0088FA  B4D8               	btfsc	status,2,c
 34576  0088FC  D003               	goto	i1l1042
 34577                           
 34578                           ; BSR set to: 0
 34579                           ;../hal/hal_src/Timers.c: 22:         ledtimer--;
 34580  0088FE  07EF               	decf	_ledtimer& (0+255),f,b	;volatile
 34581  008900  A0D8               	btfss	status,0,c
 34582  008902  07F0               	decf	(_ledtimer+1)& (0+255),f,b	;volatile
 34583  008904                     i1l1042:
 34584                           
 34585                           ; BSR set to: 0
 34586                           ;../hal/hal_src/Timers.c: 24:     halTimerIrqCount++;
 34587  008904  4BC3               	infsnz	_halTimerIrqCount& (0+255),f,b	;volatile
 34588  008906  2BC4               	incf	(_halTimerIrqCount+1)& (0+255),f,b	;volatile
 34589                           
 34590                           ; BSR set to: 0
 34591  008908  0012               	return		;funcret
 34592  00890A                     __end_of_Timer0Handler:
 34593                           	opt callstack 0
 34594                           
 34595 ;; *************** function _Default_ISR *****************
 34596 ;; Defined at:
 34597 ;;		line 77 in file "mcc_generated_files/interrupt_manager.c"
 34598 ;; Parameters:    Size  Location     Type
 34599 ;;		None
 34600 ;; Auto vars:     Size  Location     Type
 34601 ;;		None
 34602 ;; Return value:  Size  Location     Type
 34603 ;;                  1    wreg      void 
 34604 ;; Registers used:
 34605 ;;		None
 34606 ;; Tracked objects:
 34607 ;;		On entry : 0/0
 34608 ;;		On exit  : 0/0
 34609 ;;		Unchanged: 0/0
 34610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34615 ;;Total ram usage:        0 bytes
 34616 ;; Hardware stack levels used:    1
 34617 ;; This function calls:
 34618 ;;		Nothing
 34619 ;; This function is called by:
 34620 ;;		Interrupt level 2
 34621 ;; This function uses a non-reentrant model
 34622 ;;
 34623                           
 34624                           	psect	text240
 34625  009A28                     __ptext240:
 34626                           	opt callstack 0
 34627  009A28                     _Default_ISR:
 34628                           	opt callstack 14
 34629                           
 34630                           ; BSR set to: 0
 34631                           ;incstack = 0
 34632  009A28  0011               	retfie		f
 34633  009A2A                     __end_of_Default_ISR:
 34634                           	opt callstack 0
 34635                           
 34636 ;; *************** function _UART1_tx_vect_isr *****************
 34637 ;; Defined at:
 34638 ;;		line 247 in file "mcc_generated_files/uart1.c"
 34639 ;; Parameters:    Size  Location     Type
 34640 ;;		None
 34641 ;; Auto vars:     Size  Location     Type
 34642 ;;		None
 34643 ;; Return value:  Size  Location     Type
 34644 ;;                  1    wreg      void 
 34645 ;; Registers used:
 34646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 34647 ;; Tracked objects:
 34648 ;;		On entry : 0/0
 34649 ;;		On exit  : 0/0
 34650 ;;		Unchanged: 0/0
 34651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34656 ;;Total ram usage:        0 bytes
 34657 ;; Hardware stack levels used:    1
 34658 ;; Hardware stack levels required when called:    1
 34659 ;; This function calls:
 34660 ;;		Absolute function
 34661 ;;		_UART1_Transmit_ISR
 34662 ;; This function is called by:
 34663 ;;		Interrupt level 2
 34664 ;; This function uses a non-reentrant model
 34665 ;;
 34666                           
 34667                           	psect	text241
 34668  009634                     __ptext241:
 34669                           	opt callstack 0
 34670  009634                     _UART1_tx_vect_isr:
 34671                           	opt callstack 13
 34672                           
 34673                           ;mcc_generated_files/uart1.c: 249:     if(UART1_TxInterruptHandler)
 34674                           
 34675                           ;incstack = 0
 34676  009634  0101               	movlb	1	; () banked
 34677  009636  51F5               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 34678  009638  11F6               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 34679  00963A  B4D8               	btfsc	status,2,c
 34680  00963C  0011               	retfie		f
 34681                           
 34682                           ; BSR set to: 1
 34683                           ;mcc_generated_files/uart1.c: 250:     {;mcc_generated_files/uart1.c: 251:         UART1
      +                          _TxInterruptHandler();
 34684  00963E  D801               	call	i2u1347_48
 34685  009640  0011               	retfie		f
 34686  009642                     i2u1347_48:
 34687  009642  0005               	push	
 34688  009644  6EFA               	movwf	pclath,c
 34689  009646  51F5               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 34690  009648  6EFD               	movwf	tosl,c
 34691  00964A  51F6               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 34692  00964C  6EFE               	movwf	tosh,c
 34693  00964E  6AFF               	clrf	tosu,c
 34694  009650  50FA               	movf	pclath,w,c
 34695  009652  0012               	return		;indir
 34696  009654                     __end_of_UART1_tx_vect_isr:
 34697                           	opt callstack 0
 34698                           
 34699 ;; *************** function _UART1_Transmit_ISR *****************
 34700 ;; Defined at:
 34701 ;;		line 265 in file "mcc_generated_files/uart1.c"
 34702 ;; Parameters:    Size  Location     Type
 34703 ;;		None
 34704 ;; Auto vars:     Size  Location     Type
 34705 ;;		None
 34706 ;; Return value:  Size  Location     Type
 34707 ;;                  1    wreg      void 
 34708 ;; Registers used:
 34709 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34710 ;; Tracked objects:
 34711 ;;		On entry : 3F/1
 34712 ;;		On exit  : 6/0
 34713 ;;		Unchanged: 0/0
 34714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34719 ;;Total ram usage:        0 bytes
 34720 ;; Hardware stack levels used:    1
 34721 ;; This function calls:
 34722 ;;		Nothing
 34723 ;; This function is called by:
 34724 ;;		_UART1_Initialize
 34725 ;;		_UART1_tx_vect_isr
 34726 ;; This function uses a non-reentrant model
 34727 ;;
 34728                           
 34729                           	psect	text242
 34730  009128                     __ptext242:
 34731                           	opt callstack 0
 34732  009128                     _UART1_Transmit_ISR:
 34733                           	opt callstack 13
 34734                           
 34735                           ; BSR set to: 1
 34736                           ;mcc_generated_files/uart1.c: 268:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 34737                           
 34738                           ;incstack = 0
 34739  009128  0E40               	movlw	64
 34740  00912A  0100               	movlb	0	; () banked
 34741  00912C  61FF               	cpfslt	_uart1TxBufferRemaining& (0+255),b
 34742  00912E  D012               	goto	i2l13980
 34743                           
 34744                           ; BSR set to: 0
 34745                           ;mcc_generated_files/uart1.c: 269:     {;mcc_generated_files/uart1.c: 273:        U1TXB 
      +                          = uart1TxBuffer[uart1TxTail++];
 34746  009130  0E00               	movlw	low _uart1TxBuffer
 34747  009132  25CF               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 34748  009134  6ED9               	movwf	fsr2l,c
 34749  009136  6ADA               	clrf	fsr2h,c
 34750  009138  0E03               	movlw	high _uart1TxBuffer
 34751  00913A  22DA               	addwfc	fsr2h,f,c
 34752  00913C  50DF               	movf	indf2,w,c
 34753  00913E  013D               	movlb	61	; () banked
 34754  009140  6FEA               	movwf	234,b	;volatile
 34755                           
 34756                           ; BSR set to: 61
 34757  009142  0100               	movlb	0	; () banked
 34758  009144  2BCF               	incf	_uart1TxTail& (0+255),f,b	;volatile
 34759                           
 34760                           ; BSR set to: 0
 34761                           ;mcc_generated_files/uart1.c: 274:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 34762  009146  0E3F               	movlw	63
 34763  009148  65CF               	cpfsgt	_uart1TxTail& (0+255),b
 34764  00914A  D002               	goto	i2l13978
 34765                           
 34766                           ; BSR set to: 0
 34767                           ;mcc_generated_files/uart1.c: 275:         {;mcc_generated_files/uart1.c: 276:          
      +                             uart1TxTail = 0;
 34768  00914C  0E00               	movlw	0
 34769  00914E  6FCF               	movwf	_uart1TxTail& (0+255),b	;volatile
 34770  009150                     i2l13978:
 34771                           
 34772                           ; BSR set to: 0
 34773                           ;mcc_generated_files/uart1.c: 278:         uart1TxBufferRemaining++;
 34774  009150  2BFF               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 34775                           
 34776                           ;mcc_generated_files/uart1.c: 279:     }
 34777  009152  0012               	return	
 34778  009154                     i2l13980:
 34779                           
 34780                           ; BSR set to: 0
 34781                           ;mcc_generated_files/uart1.c: 281:     {;mcc_generated_files/uart1.c: 284:         tx_do
      +                          ne = 1;
 34782  009154  0E01               	movlw	1
 34783  009156  6FE2               	movwf	_tx_done& (0+255),b	;volatile
 34784                           
 34785                           ; BSR set to: 0
 34786                           ;mcc_generated_files/uart1.c: 286:         PIE3bits.U1TXIE = 0;
 34787  009158  0139               	movlb	57	; () banked
 34788  00915A  9993               	bcf	147,4,b	;volatile
 34789  00915C  0012               	return		;funcret
 34790  00915E                     __end_of_UART1_Transmit_ISR:
 34791                           	opt callstack 0
 34792                           
 34793 ;; *************** function _UART1_rx_vect_isr *****************
 34794 ;; Defined at:
 34795 ;;		line 255 in file "mcc_generated_files/uart1.c"
 34796 ;; Parameters:    Size  Location     Type
 34797 ;;		None
 34798 ;; Auto vars:     Size  Location     Type
 34799 ;;		None
 34800 ;; Return value:  Size  Location     Type
 34801 ;;                  1    wreg      void 
 34802 ;; Registers used:
 34803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 34804 ;; Tracked objects:
 34805 ;;		On entry : 0/0
 34806 ;;		On exit  : 0/0
 34807 ;;		Unchanged: 0/0
 34808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34813 ;;Total ram usage:        0 bytes
 34814 ;; Hardware stack levels used:    1
 34815 ;; Hardware stack levels required when called:    3
 34816 ;; This function calls:
 34817 ;;		Absolute function
 34818 ;;		_UART1_Receive_ISR
 34819 ;; This function is called by:
 34820 ;;		Interrupt level 2
 34821 ;; This function uses a non-reentrant model
 34822 ;;
 34823                           
 34824                           	psect	text243
 34825  009654                     __ptext243:
 34826                           	opt callstack 0
 34827  009654                     _UART1_rx_vect_isr:
 34828                           	opt callstack 11
 34829                           
 34830                           ;mcc_generated_files/uart1.c: 257:     if(UART1_RxInterruptHandler)
 34831                           
 34832                           ;incstack = 0
 34833  009654  0101               	movlb	1	; () banked
 34834  009656  51F7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 34835  009658  11F8               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 34836  00965A  B4D8               	btfsc	status,2,c
 34837  00965C  0011               	retfie		f
 34838                           
 34839                           ; BSR set to: 1
 34840                           ;mcc_generated_files/uart1.c: 258:     {;mcc_generated_files/uart1.c: 259:         UART1
      +                          _RxInterruptHandler();
 34841  00965E  D801               	call	i2u1349_48
 34842  009660  0011               	retfie		f
 34843  009662                     i2u1349_48:
 34844  009662  0005               	push	
 34845  009664  6EFA               	movwf	pclath,c
 34846  009666  51F7               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 34847  009668  6EFD               	movwf	tosl,c
 34848  00966A  51F8               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 34849  00966C  6EFE               	movwf	tosh,c
 34850  00966E  6AFF               	clrf	tosu,c
 34851  009670  50FA               	movf	pclath,w,c
 34852  009672  0012               	return		;indir
 34853  009674                     __end_of_UART1_rx_vect_isr:
 34854                           	opt callstack 0
 34855                           
 34856 ;; *************** function _UART1_Receive_ISR *****************
 34857 ;; Defined at:
 34858 ;;		line 292 in file "mcc_generated_files/uart1.c"
 34859 ;; Parameters:    Size  Location     Type
 34860 ;;		None
 34861 ;; Auto vars:     Size  Location     Type
 34862 ;;		None
 34863 ;; Return value:  Size  Location     Type
 34864 ;;                  1    wreg      void 
 34865 ;; Registers used:
 34866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 34867 ;; Tracked objects:
 34868 ;;		On entry : 3F/1
 34869 ;;		On exit  : 0/0
 34870 ;;		Unchanged: 0/0
 34871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34876 ;;Total ram usage:        0 bytes
 34877 ;; Hardware stack levels used:    1
 34878 ;; Hardware stack levels required when called:    2
 34879 ;; This function calls:
 34880 ;;		Absolute function
 34881 ;;		_UART1_DefaultErrorHandler
 34882 ;;		_UART1_DefaultFramingErrorHandler
 34883 ;;		_UART1_DefaultOverrunErrorHandler
 34884 ;;		_UART1_RxDataHandler
 34885 ;; This function is called by:
 34886 ;;		_UART1_Initialize
 34887 ;;		_UART1_rx_vect_isr
 34888 ;; This function uses a non-reentrant model
 34889 ;;
 34890                           
 34891                           	psect	text244
 34892  0076A4                     __ptext244:
 34893                           	opt callstack 0
 34894  0076A4                     _UART1_Receive_ISR:
 34895                           	opt callstack 11
 34896                           
 34897                           ; BSR set to: 1
 34898                           ;mcc_generated_files/uart1.c: 295:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 34899                           
 34900                           ;incstack = 0
 34901  0076A4  0E00               	movlw	low _uart1RxStatusBuffer
 34902  0076A6  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 34903  0076A8  6ED9               	movwf	fsr2l,c
 34904  0076AA  6ADA               	clrf	fsr2h,c
 34905  0076AC  0E01               	movlw	high _uart1RxStatusBuffer
 34906  0076AE  22DA               	addwfc	fsr2h,f,c
 34907  0076B0  0E00               	movlw	0
 34908  0076B2  6EDF               	movwf	indf2,c
 34909                           
 34910                           ; BSR set to: 1
 34911                           ;mcc_generated_files/uart1.c: 297:     if(U1ERRIRbits.FERIF){
 34912  0076B4  013D               	movlb	61	; () banked
 34913  0076B6  A7F9               	btfss	249,3,b	;volatile
 34914  0076B8  D013               	goto	i2u1341_49
 34915                           
 34916                           ; BSR set to: 61
 34917                           ;mcc_generated_files/uart1.c: 298:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 34918  0076BA  0E00               	movlw	low _uart1RxStatusBuffer
 34919  0076BC  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 34920  0076BE  6ED9               	movwf	fsr2l,c
 34921  0076C0  6ADA               	clrf	fsr2h,c
 34922  0076C2  0E01               	movlw	high _uart1RxStatusBuffer
 34923  0076C4  22DA               	addwfc	fsr2h,f,c
 34924  0076C6  0101               	movlb	1	; () banked
 34925  0076C8  82DF               	bsf	indf2,1,c
 34926                           
 34927                           ; BSR set to: 1
 34928                           ;mcc_generated_files/uart1.c: 299:         UART1_FramingErrorHandler();
 34929  0076CA  D801               	call	i2u1341_48
 34930  0076CC  D009               	goto	i2u1341_49
 34931  0076CE                     i2u1341_48:
 34932  0076CE  0005               	push	
 34933  0076D0  6EFA               	movwf	pclath,c
 34934  0076D2  51F1               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 34935  0076D4  6EFD               	movwf	tosl,c
 34936  0076D6  51F2               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 34937  0076D8  6EFE               	movwf	tosh,c
 34938  0076DA  6AFF               	clrf	tosu,c
 34939  0076DC  50FA               	movf	pclath,w,c
 34940  0076DE  0012               	return		;indir
 34941  0076E0                     i2u1341_49:
 34942                           
 34943                           ;mcc_generated_files/uart1.c: 302:     if(U1ERRIRbits.RXFOIF){
 34944  0076E0  013D               	movlb	61	; () banked
 34945  0076E2  A3F9               	btfss	249,1,b	;volatile
 34946  0076E4  D013               	goto	i2u1343_49
 34947                           
 34948                           ; BSR set to: 61
 34949                           ;mcc_generated_files/uart1.c: 303:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 34950  0076E6  0E00               	movlw	low _uart1RxStatusBuffer
 34951  0076E8  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 34952  0076EA  6ED9               	movwf	fsr2l,c
 34953  0076EC  6ADA               	clrf	fsr2h,c
 34954  0076EE  0E01               	movlw	high _uart1RxStatusBuffer
 34955  0076F0  22DA               	addwfc	fsr2h,f,c
 34956  0076F2  0101               	movlb	1	; () banked
 34957  0076F4  84DF               	bsf	indf2,2,c
 34958                           
 34959                           ; BSR set to: 1
 34960                           ;mcc_generated_files/uart1.c: 304:         UART1_OverrunErrorHandler();
 34961  0076F6  D801               	call	i2u1343_48
 34962  0076F8  D009               	goto	i2u1343_49
 34963  0076FA                     i2u1343_48:
 34964  0076FA  0005               	push	
 34965  0076FC  6EFA               	movwf	pclath,c
 34966  0076FE  51EF               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 34967  007700  6EFD               	movwf	tosl,c
 34968  007702  51F0               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 34969  007704  6EFE               	movwf	tosh,c
 34970  007706  6AFF               	clrf	tosu,c
 34971  007708  50FA               	movf	pclath,w,c
 34972  00770A  0012               	return		;indir
 34973  00770C                     i2u1343_49:
 34974                           
 34975                           ;mcc_generated_files/uart1.c: 307:     if(uart1RxStatusBuffer[uart1RxHead].status){
 34976  00770C  0E00               	movlw	low _uart1RxStatusBuffer
 34977  00770E  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 34978  007710  6ED9               	movwf	fsr2l,c
 34979  007712  6ADA               	clrf	fsr2h,c
 34980  007714  0E01               	movlw	high _uart1RxStatusBuffer
 34981  007716  22DA               	addwfc	fsr2h,f,c
 34982  007718  50DF               	movf	indf2,w,c
 34983  00771A  B4D8               	btfsc	status,2,c
 34984  00771C  D00C               	goto	i2l14002
 34985                           
 34986                           ;mcc_generated_files/uart1.c: 308:         UART1_ErrorHandler();
 34987  00771E  D801               	call	i2u1345_48
 34988  007720  0012               	return	
 34989  007722                     i2u1345_48:
 34990  007722  0005               	push	
 34991  007724  6EFA               	movwf	pclath,c
 34992  007726  0101               	movlb	1	; () banked
 34993  007728  51ED               	movf	_UART1_ErrorHandler& (0+255),w,b
 34994  00772A  6EFD               	movwf	tosl,c
 34995  00772C  51EE               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 34996  00772E  6EFE               	movwf	tosh,c
 34997  007730  6AFF               	clrf	tosu,c
 34998  007732  50FA               	movf	pclath,w,c
 34999  007734  0012               	return		;indir
 35000  007736                     i2l14002:
 35001                           
 35002                           ;mcc_generated_files/uart1.c: 310:         UART1_RxDataHandler();
 35003  007736  EC4E  F04A         	call	_UART1_RxDataHandler	;wreg free
 35004  00773A  0012               	return		;funcret
 35005  00773C                     __end_of_UART1_Receive_ISR:
 35006                           	opt callstack 0
 35007                           
 35008 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 35009 ;; Defined at:
 35010 ;;		line 328 in file "mcc_generated_files/uart1.c"
 35011 ;; Parameters:    Size  Location     Type
 35012 ;;		None
 35013 ;; Auto vars:     Size  Location     Type
 35014 ;;		None
 35015 ;; Return value:  Size  Location     Type
 35016 ;;                  1    wreg      void 
 35017 ;; Registers used:
 35018 ;;		None
 35019 ;; Tracked objects:
 35020 ;;		On entry : 3F/1
 35021 ;;		On exit  : 3F/1
 35022 ;;		Unchanged: 3F/0
 35023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35028 ;;Total ram usage:        0 bytes
 35029 ;; Hardware stack levels used:    1
 35030 ;; This function calls:
 35031 ;;		Nothing
 35032 ;; This function is called by:
 35033 ;;		_UART1_Initialize
 35034 ;;		_UART1_Receive_ISR
 35035 ;; This function uses a non-reentrant model
 35036 ;;
 35037                           
 35038                           	psect	text245
 35039  009A2A                     __ptext245:
 35040                           	opt callstack 0
 35041  009A2A                     _UART1_DefaultOverrunErrorHandler:
 35042                           	opt callstack 12
 35043                           
 35044                           ; BSR set to: 1
 35045                           
 35046                           ;incstack = 0
 35047  009A2A  0012               	return		;funcret
 35048  009A2C                     __end_of_UART1_DefaultOverrunErrorHandler:
 35049                           	opt callstack 0
 35050                           
 35051 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 35052 ;; Defined at:
 35053 ;;		line 326 in file "mcc_generated_files/uart1.c"
 35054 ;; Parameters:    Size  Location     Type
 35055 ;;		None
 35056 ;; Auto vars:     Size  Location     Type
 35057 ;;		None
 35058 ;; Return value:  Size  Location     Type
 35059 ;;                  1    wreg      void 
 35060 ;; Registers used:
 35061 ;;		None
 35062 ;; Tracked objects:
 35063 ;;		On entry : 3F/1
 35064 ;;		On exit  : 3F/1
 35065 ;;		Unchanged: 3F/0
 35066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35071 ;;Total ram usage:        0 bytes
 35072 ;; Hardware stack levels used:    1
 35073 ;; This function calls:
 35074 ;;		Nothing
 35075 ;; This function is called by:
 35076 ;;		_UART1_Initialize
 35077 ;;		_UART1_Receive_ISR
 35078 ;; This function uses a non-reentrant model
 35079 ;;
 35080                           
 35081                           	psect	text246
 35082  009A2C                     __ptext246:
 35083                           	opt callstack 0
 35084  009A2C                     _UART1_DefaultFramingErrorHandler:
 35085                           	opt callstack 12
 35086                           
 35087                           ; BSR set to: 1
 35088                           
 35089                           ; BSR set to: 1
 35090                           ;incstack = 0
 35091  009A2C  0012               	return		;funcret
 35092  009A2E                     __end_of_UART1_DefaultFramingErrorHandler:
 35093                           	opt callstack 0
 35094                           
 35095 ;; *************** function _UART1_DefaultErrorHandler *****************
 35096 ;; Defined at:
 35097 ;;		line 330 in file "mcc_generated_files/uart1.c"
 35098 ;; Parameters:    Size  Location     Type
 35099 ;;		None
 35100 ;; Auto vars:     Size  Location     Type
 35101 ;;		None
 35102 ;; Return value:  Size  Location     Type
 35103 ;;                  1    wreg      void 
 35104 ;; Registers used:
 35105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35106 ;; Tracked objects:
 35107 ;;		On entry : 3F/1
 35108 ;;		On exit  : 3F/0
 35109 ;;		Unchanged: 0/0
 35110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35115 ;;Total ram usage:        0 bytes
 35116 ;; Hardware stack levels used:    1
 35117 ;; Hardware stack levels required when called:    1
 35118 ;; This function calls:
 35119 ;;		_UART1_RxDataHandler
 35120 ;; This function is called by:
 35121 ;;		_UART1_Initialize
 35122 ;;		_UART1_Receive_ISR
 35123 ;; This function uses a non-reentrant model
 35124 ;;
 35125                           
 35126                           	psect	text247
 35127  009A12                     __ptext247:
 35128                           	opt callstack 0
 35129  009A12                     _UART1_DefaultErrorHandler:
 35130                           	opt callstack 11
 35131                           
 35132                           ; BSR set to: 1
 35133                           ;mcc_generated_files/uart1.c: 331:     UART1_RxDataHandler();
 35134                           
 35135                           ; BSR set to: 1
 35136                           ;incstack = 0
 35137  009A12  EC4E  F04A         	call	_UART1_RxDataHandler	;wreg free
 35138                           
 35139                           ; BSR set to: 0
 35140  009A16  0012               	return		;funcret
 35141  009A18                     __end_of_UART1_DefaultErrorHandler:
 35142                           	opt callstack 0
 35143                           
 35144 ;; *************** function _UART1_RxDataHandler *****************
 35145 ;; Defined at:
 35146 ;;		line 316 in file "mcc_generated_files/uart1.c"
 35147 ;; Parameters:    Size  Location     Type
 35148 ;;		None
 35149 ;; Auto vars:     Size  Location     Type
 35150 ;;		None
 35151 ;; Return value:  Size  Location     Type
 35152 ;;                  1    wreg      void 
 35153 ;; Registers used:
 35154 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35155 ;; Tracked objects:
 35156 ;;		On entry : 0/3D
 35157 ;;		On exit  : 3F/0
 35158 ;;		Unchanged: 0/0
 35159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35164 ;;Total ram usage:        0 bytes
 35165 ;; Hardware stack levels used:    1
 35166 ;; This function calls:
 35167 ;;		Nothing
 35168 ;; This function is called by:
 35169 ;;		_UART1_Receive_ISR
 35170 ;;		_UART1_DefaultErrorHandler
 35171 ;; This function uses a non-reentrant model
 35172 ;;
 35173                           
 35174                           	psect	text248
 35175  00949C                     __ptext248:
 35176                           	opt callstack 0
 35177  00949C                     _UART1_RxDataHandler:
 35178                           	opt callstack 12
 35179                           
 35180                           ;mcc_generated_files/uart1.c: 318:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 35181                           
 35182                           ; BSR set to: 0
 35183                           ;incstack = 0
 35184  00949C  0E10               	movlw	low _uart1RxBuffer
 35185  00949E  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 35186  0094A0  6ED9               	movwf	fsr2l,c
 35187  0094A2  6ADA               	clrf	fsr2h,c
 35188  0094A4  0E01               	movlw	high _uart1RxBuffer
 35189  0094A6  22DA               	addwfc	fsr2h,f,c
 35190  0094A8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 35191  0094AE  2A5E               	incf	_uart1RxHead^0,f,c	;volatile
 35192                           
 35193                           ;mcc_generated_files/uart1.c: 319:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 35194  0094B0  0E0F               	movlw	15
 35195  0094B2  645E               	cpfsgt	_uart1RxHead^0,c
 35196  0094B4  D002               	goto	i2l12842
 35197                           
 35198                           ;mcc_generated_files/uart1.c: 320:     {;mcc_generated_files/uart1.c: 321:         uart1
      +                          RxHead = 0;
 35199  0094B6  0E00               	movlw	0
 35200  0094B8  6E5E               	movwf	_uart1RxHead^0,c	;volatile
 35201  0094BA                     i2l12842:
 35202                           
 35203                           ;mcc_generated_files/uart1.c: 323:     uart1RxCount++;
 35204  0094BA  0100               	movlb	0	; () banked
 35205  0094BC  2BCD               	incf	_uart1RxCount& (0+255),f,b	;volatile
 35206                           
 35207                           ; BSR set to: 0
 35208  0094BE  0012               	return		;funcret
 35209  0094C0                     __end_of_UART1_RxDataHandler:
 35210                           	opt callstack 0
 35211                           
 35212                           ;
 35213                           ; Interrupt Vector Table @ 0x8
 35214                           ;
 35215                           
 35216                           	psect	ivt0x8
 35217  000008                     __pivt0x8:
 35218                           	opt callstack 0
 35219  000008                     ivt0x8_base:
 35220                           	opt callstack 0
 35221                           
 35222                           ; Vector 0 : SWINT
 35223  000008  268A               	dw	_Default_ISR shr (0+2)
 35224                           
 35225                           ; Vector 1 : HLVD
 35226  00000A  268A               	dw	_Default_ISR shr (0+2)
 35227                           
 35228                           ; Vector 2 : OSF
 35229  00000C  268A               	dw	_Default_ISR shr (0+2)
 35230                           
 35231                           ; Vector 3 : CSW
 35232  00000E  268A               	dw	_Default_ISR shr (0+2)
 35233                           
 35234                           ; Vector 4 : NVM
 35235  000010  268A               	dw	_Default_ISR shr (0+2)
 35236                           
 35237                           ; Vector 5 : SCAN
 35238  000012  268A               	dw	_Default_ISR shr (0+2)
 35239                           
 35240                           ; Vector 6 : CRC
 35241  000014  268A               	dw	_Default_ISR shr (0+2)
 35242                           
 35243                           ; Vector 7 : IOC
 35244  000016  268A               	dw	_Default_ISR shr (0+2)
 35245                           
 35246                           ; Vector 8 : INT0
 35247  000018  268A               	dw	_Default_ISR shr (0+2)
 35248                           
 35249                           ; Vector 9 : ZCD
 35250  00001A  268A               	dw	_Default_ISR shr (0+2)
 35251                           
 35252                           ; Vector 10 : AD
 35253  00001C  268A               	dw	_Default_ISR shr (0+2)
 35254                           
 35255                           ; Vector 11 : ADT
 35256  00001E  268A               	dw	_Default_ISR shr (0+2)
 35257                           
 35258                           ; Vector 12 : CMP1
 35259  000020  268A               	dw	_Default_ISR shr (0+2)
 35260                           
 35261                           ; Vector 13 : SMT1
 35262  000022  268A               	dw	_Default_ISR shr (0+2)
 35263                           
 35264                           ; Vector 14 : SMT1PRA
 35265  000024  268A               	dw	_Default_ISR shr (0+2)
 35266                           
 35267                           ; Vector 15 : SMT1PRW
 35268  000026  268A               	dw	_Default_ISR shr (0+2)
 35269                           
 35270                           ; Vector 16 : DMA1SCNT
 35271  000028  268A               	dw	_Default_ISR shr (0+2)
 35272                           
 35273                           ; Vector 17 : DMA1DCNT
 35274  00002A  268A               	dw	_Default_ISR shr (0+2)
 35275                           
 35276                           ; Vector 18 : DMA1OR
 35277  00002C  268A               	dw	_Default_ISR shr (0+2)
 35278                           
 35279                           ; Vector 19 : DMA1A
 35280  00002E  268A               	dw	_Default_ISR shr (0+2)
 35281                           
 35282                           ; Vector 20 : SPI1RX
 35283  000030  268A               	dw	_Default_ISR shr (0+2)
 35284                           
 35285                           ; Vector 21 : SPI1TX
 35286  000032  268A               	dw	_Default_ISR shr (0+2)
 35287                           
 35288                           ; Vector 22 : SPI1
 35289  000034  268A               	dw	_Default_ISR shr (0+2)
 35290                           
 35291                           ; Vector 23 : I2C1RX
 35292  000036  268A               	dw	_Default_ISR shr (0+2)
 35293                           
 35294                           ; Vector 24 : I2C1TX
 35295  000038  268A               	dw	_Default_ISR shr (0+2)
 35296                           
 35297                           ; Vector 25 : I2C1
 35298  00003A  268A               	dw	_Default_ISR shr (0+2)
 35299                           
 35300                           ; Vector 26 : I2C1E
 35301  00003C  268A               	dw	_Default_ISR shr (0+2)
 35302                           
 35303                           ; Vector 27 : U1RX
 35304  00003E  2595               	dw	_UART1_rx_vect_isr shr (0+2)
 35305                           
 35306                           ; Vector 28 : U1TX
 35307  000040  258D               	dw	_UART1_tx_vect_isr shr (0+2)
 35308                           
 35309                           ; Vector 29 : U1E
 35310  000042  268A               	dw	_Default_ISR shr (0+2)
 35311                           
 35312                           ; Vector 30 : U1
 35313  000044  268A               	dw	_Default_ISR shr (0+2)
 35314                           
 35315                           ; Vector 31 : TMR0
 35316  000046  256C               	dw	_TMR0_ISR shr (0+2)
 35317                           
 35318                           ; Vector 32 : TMR1
 35319  000048  268A               	dw	_Default_ISR shr (0+2)
 35320                           
 35321                           ; Vector 33 : TMR1G
 35322  00004A  268A               	dw	_Default_ISR shr (0+2)
 35323                           
 35324                           ; Vector 34 : TMR2
 35325  00004C  268A               	dw	_Default_ISR shr (0+2)
 35326                           
 35327                           ; Vector 35 : CCP1
 35328  00004E  268A               	dw	_Default_ISR shr (0+2)
 35329                           
 35330                           ; Vector 36 : Undefined
 35331  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 35332                           
 35333                           ; Vector 37 : NCO1
 35334  000052  268A               	dw	_Default_ISR shr (0+2)
 35335                           
 35336                           ; Vector 38 : CWG1
 35337  000054  268A               	dw	_Default_ISR shr (0+2)
 35338                           
 35339                           ; Vector 39 : CLC1
 35340  000056  268A               	dw	_Default_ISR shr (0+2)
 35341                           
 35342                           ; Vector 40 : INT1
 35343  000058  268A               	dw	_Default_ISR shr (0+2)
 35344                           
 35345                           ; Vector 41 : CMP2
 35346  00005A  268A               	dw	_Default_ISR shr (0+2)
 35347                           
 35348                           ; Vector 42 : DMA2SCNT
 35349  00005C  268A               	dw	_Default_ISR shr (0+2)
 35350                           
 35351                           ; Vector 43 : DMA2DCNT
 35352  00005E  268A               	dw	_Default_ISR shr (0+2)
 35353                           
 35354                           ; Vector 44 : DMA2OR
 35355  000060  268A               	dw	_Default_ISR shr (0+2)
 35356                           
 35357                           ; Vector 45 : DMA2A
 35358  000062  268A               	dw	_Default_ISR shr (0+2)
 35359                           
 35360                           ; Vector 46 : I2C2RX
 35361  000064  268A               	dw	_Default_ISR shr (0+2)
 35362                           
 35363                           ; Vector 47 : I2C2TX
 35364  000066  268A               	dw	_Default_ISR shr (0+2)
 35365                           
 35366                           ; Vector 48 : I2C2
 35367  000068  268A               	dw	_Default_ISR shr (0+2)
 35368                           
 35369                           ; Vector 49 : I2C2E
 35370  00006A  268A               	dw	_Default_ISR shr (0+2)
 35371                           
 35372                           ; Vector 50 : U2RX
 35373  00006C  268A               	dw	_Default_ISR shr (0+2)
 35374                           
 35375                           ; Vector 51 : U2TX
 35376  00006E  268A               	dw	_Default_ISR shr (0+2)
 35377                           
 35378                           ; Vector 52 : U2E
 35379  000070  268A               	dw	_Default_ISR shr (0+2)
 35380                           
 35381                           ; Vector 53 : U2
 35382  000072  268A               	dw	_Default_ISR shr (0+2)
 35383                           
 35384                           ; Vector 54 : TMR3
 35385  000074  268A               	dw	_Default_ISR shr (0+2)
 35386                           
 35387                           ; Vector 55 : TMR3G
 35388  000076  268A               	dw	_Default_ISR shr (0+2)
 35389                           
 35390                           ; Vector 56 : TMR4
 35391  000078  268A               	dw	_Default_ISR shr (0+2)
 35392                           
 35393                           ; Vector 57 : CCP2
 35394  00007A  268A               	dw	_Default_ISR shr (0+2)
 35395                           
 35396                           ; Vector 58 : Undefined
 35397  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 35398                           
 35399                           ; Vector 59 : CWG2
 35400  00007E  268A               	dw	_Default_ISR shr (0+2)
 35401                           
 35402                           ; Vector 60 : CLC2
 35403  000080  268A               	dw	_Default_ISR shr (0+2)
 35404                           
 35405                           ; Vector 61 : INT2
 35406  000082  268A               	dw	_Default_ISR shr (0+2)
 35407                           
 35408                           ; Vector 62 : Undefined
 35409  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 35410                           
 35411                           ; Vector 63 : Undefined
 35412  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 35413                           
 35414                           ; Vector 64 : Undefined
 35415  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 35416                           
 35417                           ; Vector 65 : Undefined
 35418  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 35419                           
 35420                           ; Vector 66 : Undefined
 35421  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 35422                           
 35423                           ; Vector 67 : Undefined
 35424  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 35425                           
 35426                           ; Vector 68 : Undefined
 35427  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 35428                           
 35429                           ; Vector 69 : Undefined
 35430  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 35431                           
 35432                           ; Vector 70 : TMR5
 35433  000094  268A               	dw	_Default_ISR shr (0+2)
 35434                           
 35435                           ; Vector 71 : TMR5G
 35436  000096  268A               	dw	_Default_ISR shr (0+2)
 35437                           
 35438                           ; Vector 72 : TMR6
 35439  000098  268A               	dw	_Default_ISR shr (0+2)
 35440                           
 35441                           ; Vector 73 : CCP3
 35442  00009A  268A               	dw	_Default_ISR shr (0+2)
 35443                           
 35444                           ; Vector 74 : CWG3
 35445  00009C  268A               	dw	_Default_ISR shr (0+2)
 35446                           
 35447                           ; Vector 75 : CLC3
 35448  00009E  268A               	dw	_Default_ISR shr (0+2)
 35449                           
 35450                           ; Vector 76 : Undefined
 35451  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 35452                           
 35453                           ; Vector 77 : Undefined
 35454  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 35455                           
 35456                           ; Vector 78 : Undefined
 35457  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 35458                           
 35459                           ; Vector 79 : Undefined
 35460  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 35461                           
 35462                           ; Vector 80 : CCP4
 35463  0000A8  268A               	dw	_Default_ISR shr (0+2)
 35464                           
 35465                           ; Vector 81 : CLC4
 35466  0000AA  268A               	dw	_Default_ISR shr (0+2)
 35467  0000AC                     ivt0x8_undefint:
 35468                           	opt callstack 0
 35469  0000AC  00FF               	reset	
 35470                           
 35471                           	psect	text249
 35472  000000                     __ptext249:
 35473                           	opt callstack 0
 35474                           
 35475                           	psect	rparam
 35476  0000                     tosu	equ	0x3FFF
 35477                           tosh	equ	0x3FFE
 35478                           tosl	equ	0x3FFD
 35479                           stkptr	equ	0x3FFC
 35480                           pclatu	equ	0x3FFB
 35481                           pclath	equ	0x3FFA
 35482                           pcl	equ	0x3FF9
 35483                           tblptru	equ	0x3FF8
 35484                           tblptrh	equ	0x3FF7
 35485                           tblptrl	equ	0x3FF6
 35486                           tablat	equ	0x3FF5
 35487                           prodh	equ	0x3FF4
 35488                           prodl	equ	0x3FF3
 35489                           indf0	equ	0x3FEF
 35490                           postinc0	equ	0x3FEE
 35491                           postdec0	equ	0x3FED
 35492                           preinc0	equ	0x3FEC
 35493                           plusw0	equ	0x3FEB
 35494                           fsr0h	equ	0x3FEA
 35495                           fsr0l	equ	0x3FE9
 35496                           wreg	equ	0x3FE8
 35497                           indf1	equ	0x3FE7
 35498                           postinc1	equ	0x3FE6
 35499                           postdec1	equ	0x3FE5
 35500                           preinc1	equ	0x3FE4
 35501                           plusw1	equ	0x3FE3
 35502                           fsr1h	equ	0x3FE2
 35503                           fsr1l	equ	0x3FE1
 35504                           bsr	equ	0x3FE0
 35505                           indf2	equ	0x3FDF
 35506                           postinc2	equ	0x3FDE
 35507                           postdec2	equ	0x3FDD
 35508                           preinc2	equ	0x3FDC
 35509                           plusw2	equ	0x3FDB
 35510                           fsr2h	equ	0x3FDA
 35511                           fsr2l	equ	0x3FD9
 35512                           status	equ	0x3FD8


Data Sizes:
    Strings     581
    Constant    270
    Data        23
    BSS         2733
    Persistent  15
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      94
    BANK0           160     81     160
    BANK1           256      0     249
    BANK2           256      0     218
    BANK3           256      0     242
    BANK4           256      0      96
    BANK5           256      0     189
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    nwkRxDuplicateRejectionTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxDelayTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrameFrames...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame.payload	PTR unsigned char  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.nwkDataReq.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    tx_buffer.nwkDataReq.next.data	PTR unsigned char  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[524]), 

    tx_buffer.nwkDataReq.next.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.nwkDataReq.next.next	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    tx_buffer.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    tx_buffer.next.data	PTR unsigned char  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[524]), 

    tx_buffer.next.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.next.next	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    tx_buffer.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    tx_buffer.data	PTR unsigned char  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[524]), 

    tx_buffer.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.next	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    handler$0	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    S4218$4$0	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    S2836$3$0	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S2612$4$0	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    ?_nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    ?_nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    ?_nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S70$11$0	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    cmdSetTX@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdGetRxCnt@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetRFCH@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetNaddr@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    set_hop_table_ttl@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetTTL@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetAES@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetAddr@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    print_hop_table@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSendSink@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    strspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_58(CODE[2]), STR_57(CODE[2]), 

    strspn@s	PTR const unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_133(CODE[10]), STR_131(CODE[10]), STR_129(CODE[6]), STR_127(CODE[6]), 
		 -> STR_125(CODE[7]), STR_123(CODE[5]), STR_121(CODE[7]), STR_119(CODE[7]), 
		 -> STR_117(CODE[6]), STR_115(CODE[9]), STR_113(CODE[8]), STR_111(CODE[8]), 
		 -> STR_109(CODE[7]), STR_107(CODE[6]), STR_105(CODE[3]), STR_103(CODE[9]), 
		 -> STR_101(CODE[7]), STR_99(CODE[7]), STR_97(CODE[10]), STR_95(CODE[10]), 
		 -> STR_93(CODE[15]), STR_91(CODE[13]), STR_89(CODE[9]), STR_87(CODE[7]), 
		 -> STR_85(CODE[7]), STR_83(CODE[10]), STR_81(CODE[7]), STR_79(CODE[8]), 
		 -> STR_77(CODE[11]), STR_75(CODE[5]), STR_73(CODE[5]), STR_71(CODE[7]), 
		 -> STR_69(CODE[9]), STR_67(CODE[7]), STR_60(CODE[2]), STR_54(CODE[6]), 
		 -> STR_52(CODE[6]), STR_50(CODE[5]), STR_46(CODE[2]), STR_41(CODE[2]), 
		 -> STR_37(CODE[2]), STR_28(CODE[2]), STR_25(CODE[2]), STR_15(CODE[2]), 
		 -> STR_11(CODE[2]), STR_6(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_133(CODE[10]), STR_131(CODE[10]), STR_129(CODE[6]), STR_127(CODE[6]), 
		 -> STR_125(CODE[7]), STR_123(CODE[5]), STR_121(CODE[7]), STR_119(CODE[7]), 
		 -> STR_117(CODE[6]), STR_115(CODE[9]), STR_113(CODE[8]), STR_111(CODE[8]), 
		 -> STR_109(CODE[7]), STR_107(CODE[6]), STR_105(CODE[3]), STR_103(CODE[9]), 
		 -> STR_101(CODE[7]), STR_99(CODE[7]), STR_97(CODE[10]), STR_95(CODE[10]), 
		 -> STR_93(CODE[15]), STR_91(CODE[13]), STR_89(CODE[9]), STR_87(CODE[7]), 
		 -> STR_85(CODE[7]), STR_83(CODE[10]), STR_81(CODE[7]), STR_79(CODE[8]), 
		 -> STR_77(CODE[11]), STR_75(CODE[5]), STR_73(CODE[5]), STR_71(CODE[7]), 
		 -> STR_69(CODE[9]), STR_67(CODE[7]), STR_60(CODE[2]), STR_54(CODE[6]), 
		 -> STR_52(CODE[6]), STR_50(CODE[5]), STR_46(CODE[2]), STR_41(CODE[2]), 
		 -> STR_37(CODE[2]), STR_28(CODE[2]), STR_25(CODE[2]), STR_15(CODE[2]), 
		 -> STR_11(CODE[2]), STR_6(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strcspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_58(CODE[2]), STR_57(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    __strtoxl@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cmdSetSF@p2(BANK0[2]), cmdSetCADRSSI@p2(BANK0[2]), cmdSetTX@p2(BANK0[2]), cmdSetRFCH@p2(BANK0[2]), 
		 -> cmdSetAES@p2(BANK0[2]), NULL(NULL[0]), cmdSend@p2(BANK0[2]), 

    __strtoxl@s	PTR const unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_58(CODE[2]), STR_57(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    __strtoxl@cp	PTR const unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_58(CODE[2]), STR_57(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    strtoul@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cmdSetTX@p2(BANK0[2]), cmdSetRFCH@p2(BANK0[2]), cmdSetAES@p2(BANK0[2]), NULL(NULL[0]), 
		 -> cmdSend@p2(BANK0[2]), 

    strtoul@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    strtol@endptr	PTR PTR unsigned char  size(1) Largest target is 2
		 -> cmdSetSF@p2(BANK0[2]), cmdSetCADRSSI@p2(BANK0[2]), 

    strtol@s	PTR const unsigned char  size(1) Largest target is 3
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), 

    strtok@sep	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_58(CODE[2]), STR_57(CODE[2]), 

    strtok@p	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_133(CODE[10]), STR_131(CODE[10]), STR_129(CODE[6]), STR_127(CODE[6]), 
		 -> STR_125(CODE[7]), STR_123(CODE[5]), STR_121(CODE[7]), STR_119(CODE[7]), 
		 -> STR_117(CODE[6]), STR_115(CODE[9]), STR_113(CODE[8]), STR_111(CODE[8]), 
		 -> STR_109(CODE[7]), STR_107(CODE[6]), STR_105(CODE[3]), STR_103(CODE[9]), 
		 -> STR_101(CODE[7]), STR_99(CODE[7]), STR_97(CODE[10]), STR_95(CODE[10]), 
		 -> STR_93(CODE[15]), STR_91(CODE[13]), STR_89(CODE[9]), STR_87(CODE[7]), 
		 -> STR_85(CODE[7]), STR_83(CODE[10]), STR_81(CODE[7]), STR_79(CODE[8]), 
		 -> STR_77(CODE[11]), STR_75(CODE[5]), STR_73(CODE[5]), STR_71(CODE[7]), 
		 -> STR_69(CODE[9]), STR_67(CODE[7]), STR_60(CODE[2]), STR_54(CODE[6]), 
		 -> STR_52(CODE[6]), STR_50(CODE[5]), STR_46(CODE[2]), STR_41(CODE[2]), 
		 -> STR_37(CODE[2]), STR_28(CODE[2]), STR_25(CODE[2]), STR_15(CODE[2]), 
		 -> STR_11(CODE[2]), STR_6(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[32]), STR_133(CODE[10]), STR_131(CODE[10]), STR_129(CODE[6]), 
		 -> STR_127(CODE[6]), STR_125(CODE[7]), STR_123(CODE[5]), STR_121(CODE[7]), 
		 -> STR_119(CODE[7]), STR_117(CODE[6]), STR_115(CODE[9]), STR_113(CODE[8]), 
		 -> STR_111(CODE[8]), STR_109(CODE[7]), STR_107(CODE[6]), STR_105(CODE[3]), 
		 -> STR_103(CODE[9]), STR_101(CODE[7]), STR_99(CODE[7]), STR_97(CODE[10]), 
		 -> STR_95(CODE[10]), STR_93(CODE[15]), STR_91(CODE[13]), STR_89(CODE[9]), 
		 -> STR_87(CODE[7]), STR_85(CODE[7]), STR_83(CODE[10]), STR_81(CODE[7]), 
		 -> STR_79(CODE[8]), STR_77(CODE[11]), STR_75(CODE[5]), STR_73(CODE[5]), 
		 -> STR_71(CODE[7]), STR_69(CODE[9]), STR_67(CODE[7]), STR_60(CODE[2]), 
		 -> STR_58(CODE[2]), STR_57(CODE[2]), STR_54(CODE[6]), STR_52(CODE[6]), 
		 -> STR_50(CODE[5]), STR_46(CODE[2]), STR_41(CODE[2]), STR_37(CODE[2]), 
		 -> STR_28(CODE[2]), STR_25(CODE[2]), STR_15(CODE[2]), STR_11(CODE[2]), 
		 -> atCommand(BANK2[80]), NULL(NULL[0]), STR_6(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[32]), STR_133(CODE[10]), STR_131(CODE[10]), STR_129(CODE[6]), 
		 -> STR_127(CODE[6]), STR_125(CODE[7]), STR_123(CODE[5]), STR_121(CODE[7]), 
		 -> STR_119(CODE[7]), STR_117(CODE[6]), STR_115(CODE[9]), STR_113(CODE[8]), 
		 -> STR_111(CODE[8]), STR_109(CODE[7]), STR_107(CODE[6]), STR_105(CODE[3]), 
		 -> STR_103(CODE[9]), STR_101(CODE[7]), STR_99(CODE[7]), STR_97(CODE[10]), 
		 -> STR_95(CODE[10]), STR_93(CODE[15]), STR_91(CODE[13]), STR_89(CODE[9]), 
		 -> STR_87(CODE[7]), STR_85(CODE[7]), STR_83(CODE[10]), STR_81(CODE[7]), 
		 -> STR_79(CODE[8]), STR_77(CODE[11]), STR_75(CODE[5]), STR_73(CODE[5]), 
		 -> STR_71(CODE[7]), STR_69(CODE[9]), STR_67(CODE[7]), STR_60(CODE[2]), 
		 -> STR_58(CODE[2]), STR_57(CODE[2]), STR_54(CODE[6]), STR_52(CODE[6]), 
		 -> STR_50(CODE[5]), STR_46(CODE[2]), STR_41(CODE[2]), STR_37(CODE[2]), 
		 -> STR_28(CODE[2]), STR_25(CODE[2]), STR_15(CODE[2]), STR_11(CODE[2]), 
		 -> atCommand(BANK2[80]), NULL(NULL[0]), STR_6(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_139(CODE[5]), STR_138(CODE[8]), STR_137(CODE[28]), STR_136(CODE[26]), 
		 -> STR_135(CODE[12]), STR_134(CODE[12]), STR_65(CODE[5]), STR_64(CODE[34]), 
		 -> STR_63(CODE[14]), STR_62(CODE[5]), STR_61(CODE[12]), STR_59(CODE[8]), 
		 -> STR_56(CODE[5]), STR_55(CODE[12]), STR_48(CODE[5]), STR_47(CODE[12]), 
		 -> STR_45(CODE[13]), STR_44(CODE[5]), STR_43(CODE[12]), STR_42(CODE[12]), 
		 -> STR_40(CODE[14]), STR_39(CODE[5]), STR_38(CODE[12]), STR_36(CODE[13]), 
		 -> STR_35(CODE[18]), STR_34(CODE[18]), STR_33(CODE[5]), STR_32(CODE[21]), 
		 -> STR_31(CODE[5]), STR_30(CODE[12]), STR_29(CODE[12]), STR_27(CODE[12]), 
		 -> STR_26(CODE[12]), STR_24(CODE[5]), STR_23(CODE[3]), STR_22(CODE[5]), 
		 -> STR_21(CODE[5]), STR_20(CODE[12]), STR_19(CODE[12]), STR_18(CODE[3]), 
		 -> STR_17(CODE[6]), STR_16(CODE[5]), STR_14(CODE[13]), STR_13(CODE[12]), 
		 -> STR_12(CODE[5]), STR_10(CODE[16]), STR_9(CODE[8]), STR_8(CODE[12]), 
		 -> STR_7(CODE[12]), STR_5(CODE[8]), STR_4(CODE[12]), STR_3(CODE[12]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S7552_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK2[80]), tx_buffer.payload(BIGRAM[109]), 
		 -> tx_buffer(BIGRAM[524]), rx_buffer.payload(BIGRAM[109]), rx_buffer(BIGRAM[488]), 

    memset@s	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK2[80]), tx_buffer.payload(BIGRAM[109]), 
		 -> tx_buffer(BIGRAM[524]), rx_buffer.payload(BIGRAM[109]), rx_buffer(BIGRAM[488]), 

    memcpy@d1	PTR void  size(2) Largest target is 690
		 -> nwkSecurityProcessMic@tmic(COMRAM[4]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), nwkIb(BANK1[56]), 
		 -> handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), cmdSetSF@CHstr(BANK0[3]), 
		 -> cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), 
		 -> cmdSetAES@AESstr(BANK0[32]), cmdRecv@buf_id(COMRAM[1]), NULL(NULL[0]), tx_buffer.payload(BIGRAM[109]), 
		 -> cmdSend@destaddr(BANK0[5]), tx_buffer(BIGRAM[524]), rx_buffer.payload(BIGRAM[109]), rx_buffer(BIGRAM[488]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 690
		 -> nwkSecurityProcessMic@tmic(COMRAM[4]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), nwkIb(BANK1[56]), 
		 -> handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), cmdSetSF@CHstr(BANK0[3]), 
		 -> cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), 
		 -> cmdSetAES@AESstr(BANK0[32]), cmdRecv@buf_id(COMRAM[1]), NULL(NULL[0]), tx_buffer.payload(BIGRAM[109]), 
		 -> cmdSend@destaddr(BANK0[5]), tx_buffer(BIGRAM[524]), rx_buffer.payload(BIGRAM[109]), rx_buffer(BIGRAM[488]), 

    memcpy@s1	PTR const void  size(2) Largest target is 690
		 -> phyRxBuffer(BANK3[128]), nwkSecurityProcessMic@vmic(COMRAM[4]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), 
		 -> queueLedEvent@temp(COMRAM[3]), ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), STR_58(CODE[2]), 
		 -> STR_57(CODE[2]), net_key(BANK1[16]), cmdSetAES@AESstr(BANK0[32]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), appDataInd@buf_id(COMRAM[1]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 690
		 -> phyRxBuffer(BANK3[128]), nwkSecurityProcessMic@vmic(COMRAM[4]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), 
		 -> queueLedEvent@temp(COMRAM[3]), ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), STR_58(CODE[2]), 
		 -> STR_57(CODE[2]), net_key(BANK1[16]), cmdSetAES@AESstr(BANK0[32]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), appDataInd@buf_id(COMRAM[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_139(CODE[5]), STR_138(CODE[8]), STR_137(CODE[28]), STR_136(CODE[26]), 
		 -> STR_135(CODE[12]), STR_134(CODE[12]), STR_65(CODE[5]), STR_64(CODE[34]), 
		 -> STR_63(CODE[14]), STR_62(CODE[5]), STR_61(CODE[12]), STR_59(CODE[8]), 
		 -> STR_56(CODE[5]), STR_55(CODE[12]), STR_48(CODE[5]), STR_47(CODE[12]), 
		 -> STR_45(CODE[13]), STR_44(CODE[5]), STR_43(CODE[12]), STR_42(CODE[12]), 
		 -> STR_40(CODE[14]), STR_39(CODE[5]), STR_38(CODE[12]), STR_36(CODE[13]), 
		 -> STR_35(CODE[18]), STR_34(CODE[18]), STR_33(CODE[5]), STR_32(CODE[21]), 
		 -> STR_31(CODE[5]), STR_30(CODE[12]), STR_29(CODE[12]), STR_27(CODE[12]), 
		 -> STR_26(CODE[12]), STR_24(CODE[5]), STR_23(CODE[3]), STR_22(CODE[5]), 
		 -> STR_21(CODE[5]), STR_20(CODE[12]), STR_19(CODE[12]), STR_18(CODE[3]), 
		 -> STR_17(CODE[6]), STR_16(CODE[5]), STR_14(CODE[13]), STR_13(CODE[12]), 
		 -> STR_12(CODE[5]), STR_10(CODE[16]), STR_9(CODE[8]), STR_8(CODE[12]), 
		 -> STR_7(CODE[12]), STR_5(CODE[8]), STR_4(CODE[12]), STR_3(CODE[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_139(CODE[5]), STR_138(CODE[8]), STR_137(CODE[28]), STR_136(CODE[26]), 
		 -> STR_135(CODE[12]), STR_134(CODE[12]), STR_65(CODE[5]), STR_64(CODE[34]), 
		 -> STR_63(CODE[14]), STR_62(CODE[5]), STR_61(CODE[12]), STR_59(CODE[8]), 
		 -> STR_56(CODE[5]), STR_55(CODE[12]), STR_48(CODE[5]), STR_47(CODE[12]), 
		 -> STR_45(CODE[13]), STR_44(CODE[5]), STR_43(CODE[12]), STR_42(CODE[12]), 
		 -> STR_40(CODE[14]), STR_39(CODE[5]), STR_38(CODE[12]), STR_36(CODE[13]), 
		 -> STR_35(CODE[18]), STR_34(CODE[18]), STR_33(CODE[5]), STR_32(CODE[21]), 
		 -> STR_31(CODE[5]), STR_30(CODE[12]), STR_29(CODE[12]), STR_27(CODE[12]), 
		 -> STR_26(CODE[12]), STR_24(CODE[5]), STR_23(CODE[3]), STR_22(CODE[5]), 
		 -> STR_21(CODE[5]), STR_20(CODE[12]), STR_19(CODE[12]), STR_18(CODE[3]), 
		 -> STR_17(CODE[6]), STR_16(CODE[5]), STR_14(CODE[13]), STR_13(CODE[12]), 
		 -> STR_12(CODE[5]), STR_10(CODE[16]), STR_9(CODE[8]), STR_8(CODE[12]), 
		 -> STR_7(CODE[12]), STR_5(CODE[8]), STR_4(CODE[12]), STR_3(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_139(CODE[5]), STR_138(CODE[8]), STR_137(CODE[28]), STR_136(CODE[26]), 
		 -> STR_135(CODE[12]), STR_134(CODE[12]), STR_65(CODE[5]), STR_64(CODE[34]), 
		 -> STR_63(CODE[14]), STR_62(CODE[5]), STR_61(CODE[12]), STR_59(CODE[8]), 
		 -> STR_56(CODE[5]), STR_55(CODE[12]), STR_48(CODE[5]), STR_47(CODE[12]), 
		 -> STR_45(CODE[13]), STR_44(CODE[5]), STR_43(CODE[12]), STR_42(CODE[12]), 
		 -> STR_40(CODE[14]), STR_39(CODE[5]), STR_38(CODE[12]), STR_36(CODE[13]), 
		 -> STR_35(CODE[18]), STR_34(CODE[18]), STR_33(CODE[5]), STR_32(CODE[21]), 
		 -> STR_31(CODE[5]), STR_30(CODE[12]), STR_29(CODE[12]), STR_27(CODE[12]), 
		 -> STR_26(CODE[12]), STR_24(CODE[5]), STR_23(CODE[3]), STR_22(CODE[5]), 
		 -> STR_21(CODE[5]), STR_20(CODE[12]), STR_19(CODE[12]), STR_18(CODE[3]), 
		 -> STR_17(CODE[6]), STR_16(CODE[5]), STR_14(CODE[13]), STR_13(CODE[12]), 
		 -> STR_12(CODE[5]), STR_10(CODE[16]), STR_9(CODE[8]), STR_8(CODE[12]), 
		 -> STR_7(CODE[12]), STR_5(CODE[8]), STR_4(CODE[12]), STR_3(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    placeTimer@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@prev	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerTaskHandler@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStarted@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    timers.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    timers.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStart@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    timers	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_EncryptReq@key	PTR unsigned char  size(2) Largest target is 56
		 -> nwkIb(BANK1[56]), 

    SYS_EncryptReq@text	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSecurityVector(BANK1[16]), 

    xtea@key	PTR const unsigned long  size(2) Largest target is 56
		 -> nwkIb(BANK1[56]), 

    xtea@text	PTR unsigned long  size(2) Largest target is 16
		 -> nwkSecurityVector(BANK1[16]), 

    PHY_DataReq@data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    SX1276WriteBuffer@buffer	PTR unsigned char  size(1) Largest target is 1
		 -> SX1276Write@data(COMRAM[1]), 

    SX1276ReadBuffer@buffer	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    nwkTxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxEncryptConf@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxEncryptConf@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxEncryptConf@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxConfirm@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxConfirm@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxConfirm@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxConfirm@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    nwkTxAckReceived@command	PTR __pack struct NwkCommandAck_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkSecurityTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkSecurityActiveFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkSecurityTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkSecurityTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkSecurityTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkSecurityProcessMic@mic	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    SYS_EncryptConf@text	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    SYS_EncryptConf@vector	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSecurityVector(BANK1[16]), 

    nwkSecurityActiveFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkSecurityActiveFrame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkSecurityStart@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkSecurityProcess@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkSecurityProcess@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkSecurityProcess@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_SetSecurityKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> net_key(BANK1[16]), 

    nwkSecurityActiveFrame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleIndication@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxHandleIndication@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleIndication@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@mcHeader	PTR __pack struct NwkFrameMulticastHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxServiceDataInd@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxServiceDataInd@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    nwkRxRejectDuplicate@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxRejectDuplicate@entry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 50
		 -> nwkRxDuplicateRejectionTable(BANK3[50]), 

    nwkRxRejectDuplicate@freeEntry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 50
		 -> nwkRxDuplicateRejectionTable(BANK3[50]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkRxDecryptConf@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxDecryptConf@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxDecryptConf@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@command	PTR __pack struct NwkCommandAck_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@ack...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@ack	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataInd@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    PHY_DataInd@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    PHY_DataInd@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataInd@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S4250PHY_DataInd_t$data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    PHY_DataInd@ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    PHY_DataInd@ind	PTR struct PHY_DataInd_t size(1) Largest target is 6
		 -> DIO0_Receive_ISR@ind(COMRAM[5]), 

    S4218SYS_Timer_t$handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    S4218SYS_Timer_t$next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkRouteErrorReceived@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteErrorReceived@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    nwkRouteErrorReceived@command	PTR __pack struct NwkCommandRouteError_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@command	PTR __pack struct NwkCommandRouteError_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameSent@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameSent@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteRemove@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNextHop@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteFreeEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    sp__NWK_RouteNewEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNewEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNewEntry@iter	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    sp__NWK_RouteFindEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkFramePayloadSize@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFramePayloadSize@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFramePayloadSize@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameCommandInit@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameCommandInit@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameCommandInit@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameCommandInit@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    sp__nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    sp__nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameNext	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameNext@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameNext@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameNext@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFree@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameFree@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFree@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFrames...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameFrames.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTaskHandler@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqTaskHandler@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTaskHandler@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer.nwkDataReq(BIGRAM[22]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.next.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.next.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer.nwkDataReq(BIGRAM[22]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer.nwkDataReq(BIGRAM[22]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqTxConf@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqTxConf@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTxConf@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer.nwkDataReq(BIGRAM[22]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@mcHeader	PTR __pack struct NwkFrameMulticastHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqSendFrame@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer.nwkDataReq(BIGRAM[22]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    S2836$confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    S2835NwkFrame_t$payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameAlloc	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.next.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.next.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqQueue.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqQueue.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> tx_buffer.nwkDataReq(BIGRAM[22]), tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer.nwkDataReq(BIGRAM[22]), tx_buffer(BIGRAM[524]), 

    NWK_OpenEndpoint@handler	PTR FTN(PTR struct NWK_DataInd_t,)_Bool  size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), appDataInd(), 

    S2612NwkIb_t$endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), NULL(NULL[0]), appDataInd(), 

    nwkIb.endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), NULL(NULL[0]), appDataInd(), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    SPI1_ReadBlock@block	PTR void  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    SPI1_ReadBlock@data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    SPI1_WriteBlock@block	PTR void  size(2) Largest target is 690
		 -> SX1276Write@data(COMRAM[1]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    SPI1_WriteBlock@data	PTR unsigned char  size(2) Largest target is 690
		 -> SX1276Write@data(COMRAM[1]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    set_timer0base@timer	PTR unsigned short  size(1) Largest target is 2
		 -> _cadBackoffTimer(BANK0[2]), cadTimeOut(BANK0[2]), txTimeOut(BANK0[2]), ledtimer(BANK0[2]), 
		 -> ATTimeoutTimer(BANK0[2]), 

    get_timer0base@timer	PTR unsigned short  size(1) Largest target is 2
		 -> _cadBackoffTimer(BANK0[2]), cadTimeOut(BANK0[2]), txTimeOut(BANK0[2]), ledtimer(BANK0[2]), 
		 -> ATTimeoutTimer(BANK0[2]), 

    ledtasksbuf.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    crc16_app@dptr	PTR void  size(2) Largest target is 12
		 -> EUIDbyte(BANK1[12]), 

    crc16_app@ptr	PTR unsigned char  size(2) Largest target is 12
		 -> EUIDbyte(BANK1[12]), 

    CircularBufferEmpty@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    CircularBufferEmpty@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), rx_buffer_queue_context(BANK1[10]), 

    CircularBufferSpace@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    CircularBufferSpace@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferSize@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    CircularBufferSize@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferPeek@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    CircularBufferPopFront@val	PTR void  size(1) Largest target is 3
		 -> handle_led_events@temp(COMRAM[3]), cmdRecv@buf_id(COMRAM[1]), 

    CircularBufferPopFront@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    CircularBufferPopFront@ctx	PTR struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), rx_buffer_queue_context(BANK1[10]), 

    CircularBufferPushBack@val	PTR void  size(1) Largest target is 3
		 -> queueLedEvent@temp(COMRAM[3]), appDataInd@buf_id(COMRAM[1]), 

    CircularBufferPushBack@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    CircularBufferPushBack@ctx	PTR struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), rx_buffer_queue_context(BANK1[10]), 

    CircularBufferClear@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    CircularBufferInit@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    CircularBufferInit@buf	PTR void  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    CircularBufferInit@ctx	PTR struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), rx_buffer_queue_context(BANK1[10]), 

    executeATCommand@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    sp__NWK_RouteTable	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    print_hop_table@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    cmdSetSF@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_58(CODE[2]), STR_57(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetSF@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetSF@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetBaud@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetBaud@ptr	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetParity@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetCADRSSI@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_58(CODE[2]), STR_57(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetCADRSSI@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSetCADRSSI@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetTX@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_58(CODE[2]), STR_57(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetTX@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetRFCH@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_58(CODE[2]), STR_57(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetRFCH@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetAES@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_58(CODE[2]), STR_57(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetAES@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetNaddr@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSetAddr@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdBcast@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdBcast@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSend@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_58(CODE[2]), STR_57(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK2[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    cmdSend@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK2[80]), 

    cmdSend@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK2[80]), NULL(NULL[0]), 

    get_free_rx_buffer@buf_id	PTR unsigned char  size(1) Largest target is 1
		 -> appDataInd@buf_id(COMRAM[1]), 

    free_tx_buffer@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer.nwkDataReq(BIGRAM[22]), tx_buffer(BIGRAM[524]), 

    tx_buffer.nwkDataReq.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    tx_buffer.nwkDataReq.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer.payload(BIGRAM[109]), tx_buffer(BIGRAM[524]), 

    tx_buffer.nwkDataReq.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.nwkDataReq.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    get_free_tx_buffer@buf_id	PTR unsigned char  size(1) Largest target is 1
		 -> cmdBcast@buf_id(BANK0[1]), cmdSend@buf_id(BANK0[1]), 

    sp__memcpy	PTR void  size(2) Largest target is 690
		 -> nwkSecurityProcessMic@tmic(COMRAM[4]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), nwkIb(BANK1[56]), 
		 -> handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), cmdSetSF@CHstr(BANK0[3]), 
		 -> cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), 
		 -> cmdSetAES@AESstr(BANK0[32]), cmdRecv@buf_id(COMRAM[1]), NULL(NULL[0]), tx_buffer.payload(BIGRAM[109]), 
		 -> cmdSend@destaddr(BANK0[5]), tx_buffer(BIGRAM[524]), rx_buffer.payload(BIGRAM[109]), rx_buffer(BIGRAM[488]), 

    sp__memset	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK2[80]), tx_buffer.payload(BIGRAM[109]), 
		 -> tx_buffer(BIGRAM[524]), rx_buffer.payload(BIGRAM[109]), rx_buffer(BIGRAM[488]), 

    rx_buffer.rx_ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S98NWK_DataInd_t$data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataInd@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataInd@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    appDataInd@dataptr	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S70NWK_DataReq_t$confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    appDataConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    S70NWK_DataReq_t$data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    appDataConf@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    S70NWK_DataReq_t$frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataConf@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S70NWK_DataReq_t$next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    appDataConf@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    appDataConf@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer.nwkDataReq(BIGRAM[22]), tx_buffer(BIGRAM[524]), 

    S113$buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    rx_buffer_queue_context.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 


Critical Paths under _main in COMRAM

    _processATCommand->_executeATCommand
    _queue_serial_led_event->_queueLedEvent
    _queueLedEvent->_CircularBufferPushBack
    _CircularBufferSpace->_CircularBufferSize
    _executeATCommand->_cmdGetRxCnt
    _executeATCommand->_print_hop_table
    _set_hop_table_ttl->_printf
    _print_hop_table->_printf
    _cmdSetTX->_printf
    _cmdSetSink->_printf
    _cmdSetSF->_printf
    _cmdSetRFCH->_printf
    _cmdSetParity->_printf
    _cmdSetNaddr->_printf
    _setSyncWord->_SX1276Write
    _cmdSetCADRSSI->_printf
    _strtol->___strtoxl
    _cmdSetBaud->_strtoul
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _cmdSetAddr->_printf
    _cmdSetAES->_printf
    _cmdSend->_printf
    _strtoul->___strtoxl
    ___strtoxl->_toupper
    _cmdRstCAD->_printf
    _cmdRecv->_printf
    _CircularBufferPopFront->_memcpy
    _cmdNaddr->_printf
    _cmdMac->_printf
    _sendInfo->_printf
    _cmdGetTX->_printf
    _cmdGetSF->_printf
    _cmdGetRxCnt->_printf
    _cmdGetRFCH->_printf
    _cmdGetMode->_printf
    _cmdGetCADRSSI->_printf
    _cmdGetCAD->_printf
    _cmdBootLoad->_printf
    _cmdBcast->_printf
    _strstr->_strncmp
    _cmdAddr->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _atoi->_isspace
    _bootLoadApplication->_PHY_SetChannel
    _loadMACAddr->_DIA_ReadByte
    _crc16_app->_CRC_CalculatedResultGet
    _CRC_CalculatedResultGet->_CRC_ReverseValue
    _PHY_SetRxState->_receive
    _PHY_SetChannel->_setFrequency
    _NWK_SetSecurityKey->_memcpy
    _NWK_SetPanId->_PHY_SetPanId
    _NWK_SetAddr->_PHY_SetShortAddr
    _DATAEE_WriteByte_Platform->_DATAEE_WriteByte
    _DATAEE_ReadByte_Platform->_DATAEE_WriteByte
    _CircularBufferInit->___lwdiv
    _SYS_TimerTaskHandler->_nwkTxAckWaitTimerHandler
    _SYS_TimerTaskHandler->_nwkTxDelayTimerHandler
    _nwkTxDelayTimerHandler->_SYS_TimerStart
    _nwkTxAckWaitTimerHandler->_SYS_TimerStart
    _nwkRxDuplicateRejectionTimerHandler->_SYS_TimerStart
    _PHY_TaskHandler->_radio_engine
    _radio_engine->_DIO0_Receive_ISR
    _cad->_SX1276Write
    _start_radio_cad->_SX1276Write
    _PHY_DataConf->_nwkTxConvertPhyStatus
    _DIO0_Receive_ISR->_get_lqi
    _get_lqi->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul
    _PHY_DataInd->_memcpy
    _PHY_DataInd->_nwkFrameAlloc
    _NWK_TaskHandler->_nwkRxTaskHandler
    _nwkTxTaskHandler->_PHY_DataReq
    _nwkRouteFrameSent->_NWK_RouteFindEntry
    _nwkDataReqTxConf->_nwkFrameFree
    _PHY_DataReq->_SX1276Write
    _idle->_SX1276Write
    _nwkSecurityTaskHandler->_SYS_EncryptReq
    _nwkSecurityStart->_nwkFramePayloadSize
    _nwkSecurityProcessMic->_memcpy
    _SYS_EncryptReq->_xtea
    _nwkRxTaskHandler->_nwkRxHandleIndication
    _nwkRxHandleReceivedFrame->_nwkTxBroadcastFrame
    _nwkTxBroadcastFrame->_rand
    _nwkRxRejectDuplicate->_SYS_TimerStart
    _SYS_TimerStart->_placeTimer
    _nwkRouteFrameReceived->_NWK_RouteNewEntry
    _nwkRxHandleIndication->_nwkRxIndicateFrame
    _nwkRxSendAck->_nwkTxFrame
    _nwkRxIndicateFrame->_appDataInd
    _nwkRxIndicateFrame->_nwkRxServiceDataInd
    _nwkTxAckReceived->_nwkFrameNext
    _nwkRouteErrorReceived->_nwkRouteRemove
    _nwkRouteRemove->_NWK_RouteFindEntry
    _appDataInd->_CircularBufferPushBack
    _CircularBufferPushBack->_memcpy
    _nwkRouteFrame->_nwkRouteSendRouteError
    _nwkRouteSendRouteError->_nwkTxFrame
    _nwkDataReqTaskHandler->_nwkDataReqSendFrame
    _nwkDataReqSendFrame->_nwkTxFrame
    _nwkTxFrame->_rand
    _rand->___omul
    _nwkRoutePrepareTx->_NWK_RouteNextHop
    _NWK_RouteNextHop->_NWK_RouteFindEntry
    _nwkFrameAlloc->_memset
    _memcpy->___wmul
    _nwkDataReqConfirm->_appDataConf
    _appDataConf->_free_tx_buffer
    _PHY_Init->_initRadio
    _initRadio->_setSignalBandwidth
    _setTxPower->_SX1276Write
    _setSpreadingFactor->___lldiv
    _setSignalBandwidth->___lldiv
    _getSpreadingFactor->_SX1276Read
    _getSignalBandwidth->_SX1276Read
    ___flge->___xxtofl
    _setPreambleLength->_SX1276Write
    _setFrequency->___lldiv
    _setCodingRate4->_SX1276Write
    _receive->_SX1276Write
    _implicitHeaderMode->_SX1276Write
    _explicitHeaderMode->_SX1276Write
    _enableCrc->_SX1276Write
    _SX1276Write->_SX1276Read
    _SX1276WriteBuffer->_SPI1_WriteBlock
    _SPI1_WriteBlock->_SPI1_ExchangeByte
    _SX1276Read->_SX1276ReadBuffer
    _SX1276ReadBuffer->_SPI1_ReadBlock
    _SPI1_ReadBlock->_SPI1_ExchangeByte
    _computeFRF->___lldiv
    ___lldiv->_getSignalBandwidth
    _NWK_Init->_nwkRxInit
    _nwkRxInit->_NWK_OpenEndpoint
    _SYSTEM_Initialize->_CRC_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_processATCommand
    _processATCommand->_executeATCommand
    _executeATCommand->_cmdSetAES
    _set_hop_table_ttl->_printf
    _print_hop_table->_printf
    _cmdSetTX->_printf
    _cmdSetSink->_printf
    _cmdSetSF->_printf
    _cmdSetRFCH->_printf
    _cmdSetParity->_printf
    _cmdSetNaddr->_printf
    _cmdSetCADRSSI->_printf
    _cmdSetAddr->_printf
    _cmdSetAES->_printf
    _cmdSend->_printf
    _cmdRstCAD->_printf
    _cmdRecv->_printf
    _cmdNaddr->_printf
    _cmdMac->_printf
    _sendInfo->_printf
    _cmdGetTX->_printf
    _cmdGetSF->_printf
    _cmdGetRxCnt->_printf
    _cmdGetRFCH->_printf
    _cmdGetMode->_printf
    _cmdGetCADRSSI->_printf
    _cmdGetCAD->_printf
    _cmdBootLoad->_printf
    _cmdBcast->_printf
    _cmdAddr->_printf
    _vfprintf->_vfpfcnvrt

Critical Paths under _TMR0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 2250591
                  _SYSTEM_Initialize
                           _SYS_Init
                    _SYS_TaskHandler
           _TMR0_SetInterruptHandler
                _bootLoadApplication
                   _processATCommand
 ---------------------------------------------------------------------------------
 (1) _processATCommand                                     4     4      0 1797421
                                             77 BANK0      4     4      0
                         _UART1_Read
                  _UART1_is_rx_ready
                   _executeATCommand
                     _get_timer0base
                             _memset
             _queue_serial_led_event
                     _set_timer0base
 ---------------------------------------------------------------------------------
 (2) _queue_serial_led_event                               1     1      0   10941
                                             33 COMRAM     1     1      0
                      _queueLedEvent
 ---------------------------------------------------------------------------------
 (3) _queueLedEvent                                        6     4      2   10873
                                             27 COMRAM     6     4      2
             _CircularBufferPushBack
                _CircularBufferSpace
 ---------------------------------------------------------------------------------
 (4) _CircularBufferSpace                                  4     2      2     363
                                              9 COMRAM     4     2      2
                 _CircularBufferSize
 ---------------------------------------------------------------------------------
 (5) _CircularBufferSize                                   8     6      2     197
                                              1 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _executeATCommand                                     5     3      2 1781727
                                             92 COMRAM     1     1      0
                                             73 BANK0      4     2      2
                            _cmdAddr
                           _cmdBcast
                        _cmdBootLoad
                          _cmdGetCAD
                      _cmdGetCADRSSI
                         _cmdGetMode
                         _cmdGetRFCH
                        _cmdGetRxCnt
                           _cmdGetSF
                          _cmdGetTTL
                           _cmdGetTX
                               _cmdI
                             _cmdMac
                           _cmdNaddr
                            _cmdRecv
                           _cmdReset
                          _cmdRstCAD
                            _cmdSend
                        _cmdSendSink
                          _cmdSetAES
                         _cmdSetAddr
                         _cmdSetBaud
                      _cmdSetCADRSSI
                        _cmdSetNaddr
                       _cmdSetParity
                         _cmdSetRFCH
                           _cmdSetSF
                         _cmdSetSink
                          _cmdSetTTL
                           _cmdSetTX
                    _print_hop_table
                             _printf
                  _set_hop_table_ttl
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _set_hop_table_ttl                                    2     0      2   34256
                                             87 COMRAM     2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _print_hop_table                                     15    13      2   34575
                                             87 COMRAM     5     3      2
                                             31 BANK0     10    10      0
                     _NWK_RouteTable
                             _printf
 ---------------------------------------------------------------------------------
 (4) _NWK_RouteTable                                       2     0      2       0
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSetTX                                            10     8      2  168022
                                             87 COMRAM     2     0      2
                                             31 BANK0      8     8      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _memset
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetTTL                                            2     0      2     208
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSetSink                                           0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdSetSF                                            10     8      2  163519
                                             87 COMRAM     2     0      2
                                             31 BANK0      8     8      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (3) _cmdSetRFCH                                          10     8      2  164986
                                             87 COMRAM     2     0      2
                                             31 BANK0      8     8      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetParity                                         2     0      2   47308
                                             87 COMRAM     2     0      2
                             _printf
                         _set_parity
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _cmdSetNaddr                                          7     5      2  164487
                                             87 COMRAM     2     0      2
                                             31 BANK0      5     5      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _printf
                        _setSyncWord
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _setSyncWord                                          1     1      0    5766
                                             16 COMRAM     1     1      0
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _cmdSetCADRSSI                                       10     8      2  163488
                                             87 COMRAM     2     0      2
                                             31 BANK0      8     8      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (4) _strtol                                               4     0      4    5690
                                             51 COMRAM     4     0      4
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (3) _cmdSetBaud                                           5     3      2   10276
                                             57 COMRAM     5     3      2
                             _strtok
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _strtok                                               4     0      4    2848
                                             14 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (5) _strspn                                               7     3      4    1089
                                              7 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (5) _strcspn                                              7     3      4    1089
                                              7 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _cmdSetAddr                                           8     6      2   54536
                                             87 COMRAM     2     0      2
                                             31 BANK0      6     6      0
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetAES                                           46    44      2   75692
                                             87 COMRAM     4     2      2
                                             31 BANK0     42    42      0
          _DATAEE_WriteByte_Platform
                 _NWK_SetSecurityKey
                             _memcpy
                             _printf
                             _strlen
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSendSink                                          2     0      2     104
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSend                                             16    14      2   66182
                                             87 COMRAM     4     2      2
                                             31 BANK0     12    12      0
                        _NWK_DataReq
                 _get_free_tx_buffer
                             _memcpy
                             _memset
                             _printf
                             _strlen
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _strtoul                                              6     0      6    7250
                                             51 COMRAM     6     0      6
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (5) ___strtoxl                                           36    29      7    4973
                                             15 COMRAM    36    29      7
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     512
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _cmdRstCAD                                            0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdReset                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdRecv                                              4     4      0   42824
                                             87 COMRAM     4     4      0
                _CircularBufferEmpty
             _CircularBufferPopFront
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (4) _CircularBufferPopFront                               7     4      3    8100
                                             18 COMRAM     7     4      3
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _CircularBufferEmpty                                  6     4      2     250
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _cmdNaddr                                             0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdMac                                               2     2      0   34251
                                             87 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdI                                                 0     0      0   34152
                           _sendInfo
 ---------------------------------------------------------------------------------
 (4) _sendInfo                                             0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetTX                                             0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetTTL                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdGetSF                                             0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetRxCnt                                          5     3      2   34358
                                             87 COMRAM     5     3      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetRFCH                                           0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetMode                                           0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetCADRSSI                                        0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetCAD                                            0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdBootLoad                                          2     2      0   41060
                                             87 COMRAM     2     2      0
          _DATAEE_WriteByte_Platform
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdBcast                                            10     8      2   58698
                                             87 COMRAM     4     2      2
                                             31 BANK0      3     3      0
                        _NWK_DataReq
                 _get_free_tx_buffer
                             _memcpy
                             _memset
                             _printf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               6     2      4   12835
                                             12 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     637
                                              1 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _strchr                                               6     2      4     748
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _get_free_tx_buffer                                   2     1      1     363
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (4) _NWK_DataReq                                          2     0      2     425
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdAddr                                              0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              13     3     10   34152
                                             84 COMRAM     3     3      0
                                             21 BANK0     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             7     2      5   28645
                                             77 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           44    40      4   28049
                                             69 COMRAM     8     4      4
                                              0 BANK0     21    21      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                39    28     11    7685
                                             30 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              8     6      2     672
                                              7 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              6     4      2     219
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     219
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              6     4      2     323
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _utoa                                                32    22     10    6789
                                             30 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             17     1     16     440
                                              1 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             25     9     16     449
                                              1 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    7657
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    5293
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2    1150
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1705
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               9     5      4    1149
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0      93
                                              2 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (12) _UART1_Write                                         1     1      0      62
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     197
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     641
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     653
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    2673
                                              8 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     391
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     427
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _bootLoadApplication                                  7     7      0   50054
                                             47 COMRAM     7     7      0
                 _CircularBufferInit
           _DATAEE_ReadByte_Platform
          _DATAEE_WriteByte_Platform
                   _NWK_OpenEndpoint
                        _NWK_SetAddr
                       _NWK_SetPanId
                 _NWK_SetSecurityKey
                     _PHY_SetChannel
                     _PHY_SetRxState
                          _crc16_app
                        _loadMACAddr
                         _set_parity
                      _set_uart_baud
 ---------------------------------------------------------------------------------
 (2) _set_uart_baud                                        3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _set_parity                                           3     3      0     124
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _loadMACAddr                                          1     1      0     247
                                              5 COMRAM     1     1      0
                       _DIA_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DIA_ReadByte                                         4     0      4     157
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _crc16_app                                           12     6      6     836
                                             18 COMRAM    12     6      6
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
 ---------------------------------------------------------------------------------
 (3) _CRC_CalculatedResultGet                             10     8      2     387
                                              8 COMRAM    10     8      2
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (4) _CRC_ReverseValue                                     7     5      2     183
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _CRC_8BitDataWrite                                    1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PHY_SetRxState                                       1     1      0   19557
                            _receive
 ---------------------------------------------------------------------------------
 (2) _PHY_SetChannel                                       1     1      0    8775
                                             46 COMRAM     1     1      0
                       _setFrequency
 ---------------------------------------------------------------------------------
 (4) _NWK_SetSecurityKey                                   2     0      2    6375
                                             18 COMRAM     2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _NWK_SetPanId                                         2     0      2     222
                                              3 COMRAM     2     0      2
                       _PHY_SetPanId
 ---------------------------------------------------------------------------------
 (3) _PHY_SetPanId                                         2     0      2      89
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NWK_SetAddr                                          2     0      2     222
                                              3 COMRAM     2     0      2
                   _PHY_SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _PHY_SetShortAddr                                     2     0      2      89
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte_Platform                            3     0      3    6908
                                              5 COMRAM     3     0      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte_Platform                             5     3      2    4313
                                              5 COMRAM     5     3      2
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (5) _DATAEE_WriteByte                                     4     1      3    1794
                                              1 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2     312
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CircularBufferInit                                  14     6      8    1405
                                              8 COMRAM    14     6      8
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     340
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _SYS_TaskHandler                                      0     0      0  304075
                    _NWK_TaskHandler
                    _PHY_TaskHandler
               _SYS_TimerTaskHandler
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerTaskHandler                                11    11      0    7111
                                             24 COMRAM    11    11      0
_nwkRxDuplicateRejectionTimerHandler *
           _nwkTxAckWaitTimerHandler *
             _nwkTxDelayTimerHandler *
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _nwkTxDelayTimerHandler                               7     5      2    2272
                                             17 COMRAM     7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (3) _nwkTxAckWaitTimerHandler                             7     5      2    2452
                                             17 COMRAM     7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
                       _nwkTxConfirm
 ---------------------------------------------------------------------------------
 (4) _nwkTxConfirm                                         3     0      3     244
                                              1 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _nwkRxDuplicateRejectionTimerHandler                  4     2      2    1561
                                             17 COMRAM     4     2      2
                     _SYS_TimerStart
 ---------------------------------------------------------------------------------
 (2) _PHY_TaskHandler                                      0     0      0  184105
                       _radio_engine
 ---------------------------------------------------------------------------------
 (3) _radio_engine                                         2     2      0  184105
                                             74 COMRAM     2     2      0
                   _DIO0_Receive_ISR
                       _PHY_DataConf
                         _SX1276Read
                                _cad
                     _get_timer0base
                          _initRadio
                            _receive
                     _set_timer0base
 ---------------------------------------------------------------------------------
 (4) _cad                                                  4     4      0   20286
                                             16 COMRAM     4     4      0
                         _SX1276Read
                        _SX1276Write
                     _get_timer0base
                     _set_timer0base
                    _start_radio_cad
 ---------------------------------------------------------------------------------
 (5) _start_radio_cad                                      0     0      0   11470
                        _SX1276Write
                               _idle
 ---------------------------------------------------------------------------------
 (2) _set_timer0base                                       3     0      3    1086
                                              1 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_timer0base                                       4     2      2     655
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PHY_DataConf                                         1     1      0      44
                                              4 COMRAM     1     1      0
              _nwkTxConvertPhyStatus
 ---------------------------------------------------------------------------------
 (5) _nwkTxConvertPhyStatus                                3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _DIO0_Receive_ISR                                     7     7      0   43959
                                             67 COMRAM     7     7      0
                        _PHY_DataInd
                         _SX1276Read
                   _SX1276ReadBuffer
                        _SX1276Write
                            _get_lqi
                           _get_rssi
                            _receive
 ---------------------------------------------------------------------------------
 (5) _get_rssi                                             3     3      0      68
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _get_lqi                                              1     1      0    6159
                                             66 COMRAM     1     1      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     318
                                             56 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    1797
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2466
                                             40 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _PHY_DataInd                                          6     5      1    9820
                                             18 COMRAM     6     5      1
                             _memcpy
                      _nwkFrameAlloc
 ---------------------------------------------------------------------------------
 (2) _NWK_TaskHandler                                      0     0      0  112859
              _nwkDataReqTaskHandler
                   _nwkRxTaskHandler
             _nwkSecurityTaskHandler
                   _nwkTxTaskHandler
 ---------------------------------------------------------------------------------
 (3) _nwkTxTaskHandler                                     4     4      0   25116
                                             19 COMRAM     4     4      0
                        _PHY_DataReq
                     _SYS_TimerStart
                   _nwkDataReqTxConf *
                       _nwkFrameFree
                       _nwkFrameNext
                  _nwkRouteFrameSent
                 _nwkSecurityProcess
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrameSent                                    6     4      2    1664
                                              7 COMRAM     6     4      2
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
             _nwkRouteNormalizeRanks
 ---------------------------------------------------------------------------------
 (5) _nwkRouteNormalizeRanks                               2     2      0      90
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqTxConf                                     6     4      2     664
                                              3 COMRAM     6     4      2
                       _nwkFrameFree
 ---------------------------------------------------------------------------------
 (4) _PHY_DataReq                                          3     0      3   19228
                                             16 COMRAM     3     0      3
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
                        _SX1276Write
                 _explicitHeaderMode
                               _idle
 ---------------------------------------------------------------------------------
 (6) _idle                                                 0     0      0    5735
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _nwkSecurityTaskHandler                               4     4      0    9833
                                             58 COMRAM     4     4      0
                     _SYS_EncryptReq
                       _nwkFrameNext
                   _nwkRxDecryptConf
              _nwkSecurityProcessMic
                   _nwkSecurityStart
                   _nwkTxEncryptConf
 ---------------------------------------------------------------------------------
 (4) _nwkTxEncryptConf                                     2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _nwkSecurityStart                                     9     9      0     399
                                              5 COMRAM     9     9      0
                _nwkFramePayloadSize
 ---------------------------------------------------------------------------------
 (4) _nwkSecurityProcessMic                               18    18      0    6337
                                             18 COMRAM    18    18      0
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _nwkRxDecryptConf                                     3     0      3     244
                                              1 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _SYS_EncryptReq                                       5     1      4    1931
                                             53 COMRAM     5     1      4
                    _SYS_EncryptConf
                               _xtea
 ---------------------------------------------------------------------------------
 (5) _xtea                                                52    48      4    1094
                                              1 COMRAM    52    48      4
 ---------------------------------------------------------------------------------
 (5) _SYS_EncryptConf                                     10    10      0     381
                                              1 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (3) _nwkRxTaskHandler                                     4     4      0   63132
                                             63 COMRAM     4     4      0
                       _nwkFrameFree
                       _nwkFrameNext
                      _nwkRouteFrame
              _nwkRxHandleIndication
           _nwkRxHandleReceivedFrame
                 _nwkSecurityProcess
 ---------------------------------------------------------------------------------
 (4) _nwkSecurityProcess                                   3     0      3     422
                                              1 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleReceivedFrame                            10     8      2   18159
                                             40 COMRAM    10     8      2
                  _NWK_GroupIsMember
              _nwkRouteFrameReceived
               _nwkRxRejectDuplicate
                _nwkTxBroadcastFrame
 ---------------------------------------------------------------------------------
 (5) _nwkTxBroadcastFrame                                  5     3      2   10377
                                             35 COMRAM     5     3      2
                             _memcpy
                      _nwkFrameAlloc
                               _rand
 ---------------------------------------------------------------------------------
 (5) _nwkRxRejectDuplicate                                13    11      2    3934
                                             17 COMRAM    13    11      2
                     _SYS_TimerStart
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (4) _SYS_TimerStart                                       2     0      2    1425
                                             15 COMRAM     2     0      2
                   _SYS_TimerStarted
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _placeTimer                                          14    12      2     668
                                              1 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (5) _SYS_TimerStarted                                     4     2      2     179
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _nwkRouteFrameReceived                               12    10      2    1936
                                             10 COMRAM    12    10      2
                 _NWK_RouteFindEntry
                  _NWK_RouteNewEntry
 ---------------------------------------------------------------------------------
 (6) _NWK_RouteNewEntry                                    9     7      2     293
                                              1 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleIndication                                5     3      2   30138
                                             58 COMRAM     5     3      2
                 _nwkRxIndicateFrame
                       _nwkRxSendAck
 ---------------------------------------------------------------------------------
 (5) _nwkRxSendAck                                         6     4      2    7294
                                             41 COMRAM     6     4      2
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRxIndicateFrame                                  26    24      2   22446
                                             32 COMRAM    26    24      2
                         _appDataInd *
                _nwkFramePayloadSize
                _nwkRxServiceDataInd *
 ---------------------------------------------------------------------------------
 (6) _nwkRxServiceDataInd                                  5     4      1    2998
                                             27 COMRAM     5     4      1
              _nwkRouteErrorReceived
                   _nwkTxAckReceived
 ---------------------------------------------------------------------------------
 (7) _nwkTxAckReceived                                     7     6      1     937
                                              7 COMRAM     7     6      1
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (4) _nwkFrameNext                                         6     4      2     647
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _nwkRouteErrorReceived                                4     3      1    1887
                                             12 COMRAM     4     3      1
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (6) _nwkRouteRemove                                       5     2      3    1709
                                              7 COMRAM     5     2      3
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFreeEntry                                   2     0      2     244
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _nwkFramePayloadSize                                  4     2      2     244
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _appDataInd                                           5     4      1   17704
                                             27 COMRAM     5     4      1
             _CircularBufferPushBack
                 _get_free_rx_buffer
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (7) _get_free_rx_buffer                                   2     1      1     199
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (4) _CircularBufferPushBack                               9     6      3    8174
                                             18 COMRAM     9     6      3
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1278
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrame                                        4     2      2   13165
                                             50 COMRAM     4     2      2
                   _NWK_RouteNextHop
                       _nwkFrameFree
             _nwkRouteSendRouteError
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRouteSendRouteError                               9     4      5    7533
                                             41 COMRAM     9     4      5
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkFrameCommandInit                                  2     0      2     266
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _nwkFrameFree                                         2     0      2     378
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqTaskHandler                                4     4      0   14778
                                             48 COMRAM     4     4      0
                  _nwkDataReqConfirm
                _nwkDataReqSendFrame
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqSendFrame                                  7     5      2   14063
                                             41 COMRAM     7     5      2
                             _memcpy
                      _nwkFrameAlloc
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkTxFrame                                           6     4      2    3372
                                             35 COMRAM     6     4      2
                  _nwkRoutePrepareTx
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                10     8      2     422
                                             25 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (7) ___omul                                              24     8     16     422
                                              1 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (7) _nwkRoutePrepareTx                                    6     4      2    2109
                                             12 COMRAM     6     4      2
                  _NWK_GroupIsMember
                   _NWK_RouteNextHop
 ---------------------------------------------------------------------------------
 (8) _NWK_RouteNextHop                                     5     2      3    1465
                                              7 COMRAM     5     2      3
                 _NWK_RouteFindEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFindEntry                                   6     3      3    1020
                                              1 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _NWK_GroupIsMember                                    5     3      2     268
                                              1 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _nwkFrameAlloc                                        5     3      2    3143
                                             13 COMRAM     5     3      2
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    2889
                                              1 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6    6136
                                              7 COMRAM    11     5      6
                             ___wmul (ARG)
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqConfirm                                    6     4      2     554
                                              8 COMRAM     6     4      2
                        _appDataConf *
 ---------------------------------------------------------------------------------
 (5) _appDataConf                                          2     0      2     287
                                              6 COMRAM     2     0      2
                     _free_tx_buffer
 ---------------------------------------------------------------------------------
 (6) _free_tx_buffer                                       5     3      2     179
                                              1 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYS_Init                                             0     0      0   97979
                           _NWK_Init
                           _PHY_Init
                      _SYS_TimerInit
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PHY_Init                                             0     0      0   97373
                          _initRadio
 ---------------------------------------------------------------------------------
 (4) _initRadio                                           11    11      0   97373
                                             50 COMRAM     7     7      0
                         _SX1276Read
                        _SX1276Write
                         _computeFRF
                          _enableCrc
                 _explicitHeaderMode
                            _receive
                     _setCodingRate4
                       _setFrequency
                  _setPreambleLength
                 _setSignalBandwidth
                 _setSpreadingFactor
                         _setTxPower
                              _srand
 ---------------------------------------------------------------------------------
 (5) _srand                                                6     4      2     135
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _setTxPower                                           1     1      0    5868
                                             16 COMRAM     1     1      0
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setSpreadingFactor                                   9     9      0   11242
                                             34 COMRAM     9     9      0
                         _SX1276Read
                        _SX1276Write
                            ___lldiv
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (5) _setSignalBandwidth                                  16    12      4   15241
                                             34 COMRAM    16    12      4
                         _SX1276Read
                        _SX1276Write
                             ___flge
                            ___lldiv
                           ___xxtofl
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _getSpreadingFactor                                   5     1      4    1145
                                             14 COMRAM     5     1      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) _getSignalBandwidth                                   7     3      4    1179
                                             14 COMRAM     7     3      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1516
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2138
                                             15 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _setPreambleLength                                    2     0      2    5904
                                             16 COMRAM     2     0      2
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setFrequency                                        12     8      4    8744
                                             34 COMRAM    12     8      4
                        _SX1276Write
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) _setCodingRate4                                       3     3      0    7013
                                             16 COMRAM     3     3      0
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _receive                                              1     1      0   19557
                                             16 COMRAM     1     1      0
                        _SX1276Write
                 _explicitHeaderMode
                 _implicitHeaderMode
 ---------------------------------------------------------------------------------
 (6) _implicitHeaderMode                                   0     0      0    6880
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (6) _explicitHeaderMode                                   0     0      0    6880
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _enableCrc                                            0     0      0    6880
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (6) _SX1276Write                                          2     1      1    5735
                                             14 COMRAM     2     1      1
                         _SX1276Read (ARG)
                  _SX1276WriteBuffer
 ---------------------------------------------------------------------------------
 (7) _SX1276WriteBuffer                                    4     2      2    1046
                                              8 COMRAM     3     1      2
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (8) _SPI1_WriteBlock                                      6     2      4     546
                                              2 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _SX1276Read                                           2     2      0    1145
                                             12 COMRAM     2     2      0
                   _SX1276ReadBuffer
 ---------------------------------------------------------------------------------
 (8) _SX1276ReadBuffer                                     5     2      3    1046
                                              8 COMRAM     4     1      3
                  _SPI1_ExchangeByte
                     _SPI1_ReadBlock
 ---------------------------------------------------------------------------------
 (9) _SPI1_ReadBlock                                       6     2      4     338
                                              2 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (9) _SPI1_ExchangeByte                                    1     1      0      31
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _computeFRF                                          13    13      0    2989
                                             34 COMRAM    13    13      0
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     648
                                              1 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    1905
                                             21 COMRAM    13     5      8
                 _getSignalBandwidth (ARG)
                 _getSpreadingFactor (ARG)
 ---------------------------------------------------------------------------------
 (2) _NWK_Init                                             1     1      0     606
                                              5 COMRAM     1     1      0
                     _nwkDataReqInit
                       _nwkFrameInit
                       _nwkGroupInit
                       _nwkRouteInit
                          _nwkRxInit
                    _nwkSecurityInit
                          _nwkTxInit
 ---------------------------------------------------------------------------------
 (3) _nwkTxInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _nwkSecurityInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _nwkRxInit                                            1     1      0     290
                                              4 COMRAM     1     1      0
                   _NWK_OpenEndpoint
 ---------------------------------------------------------------------------------
 (2) _NWK_OpenEndpoint                                     3     1      2     222
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _nwkRouteInit                                         1     1      0     112
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkGroupInit                                         1     1      0      68
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkFrameInit                                         1     1      0      68
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     862
                     _CRC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     555
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     200
                                              3 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     200
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       5     5      0      92
                                              1 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR0_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _Timer0Handler *
 ---------------------------------------------------------------------------------
 (16) _Timer0Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (19) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (19) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CRC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _SYS_Init
     _NWK_Init
       _nwkDataReqInit
       _nwkFrameInit
       _nwkGroupInit
       _nwkRouteInit
       _nwkRxInit
         _NWK_OpenEndpoint
       _nwkSecurityInit
       _nwkTxInit
     _PHY_Init
       _initRadio
         _SX1276Read
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         _computeFRF
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___llmod
         _enableCrc
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _explicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _receive
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _implicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _setCodingRate4
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _setFrequency
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___llmod
         _setPreambleLength
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _setSignalBandwidth
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___flge
             ___xxtofl (ARG)
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___xxtofl
           _getSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         _setSpreadingFactor
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _getSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         _setTxPower
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _srand
     _SYS_TimerInit
   _SYS_TaskHandler
     _NWK_TaskHandler
       _nwkDataReqTaskHandler
         _nwkDataReqConfirm
           _appDataConf *
             _free_tx_buffer
         _nwkDataReqSendFrame
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
           _nwkFrameAlloc
             _memset
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___omul
       _nwkRxTaskHandler
         _nwkFrameFree
         _nwkFrameNext
         _nwkRouteFrame
           _NWK_RouteNextHop
             _NWK_RouteFindEntry
           _nwkFrameFree
           _nwkRouteSendRouteError
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___omul
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___omul
         _nwkRxHandleIndication
           _nwkRxIndicateFrame
             _appDataInd *
               _CircularBufferPushBack
                 ___wmul
                 _memcpy
                   ___wmul (ARG)
                   _strlen (ARG)
               _get_free_rx_buffer
               _memcpy
                 ___wmul (ARG)
                 _strlen (ARG)
               _memset
             _nwkFramePayloadSize *
             _nwkRxServiceDataInd *
               _nwkRouteErrorReceived
                 _nwkRouteRemove
                   _NWK_RouteFindEntry
                   _NWK_RouteFreeEntry
               _nwkTxAckReceived
                 _nwkFrameNext
           _nwkRxSendAck
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___omul
         _nwkRxHandleReceivedFrame
           _NWK_GroupIsMember
           _nwkRouteFrameReceived
             _NWK_RouteFindEntry
             _NWK_RouteNewEntry
           _nwkRxRejectDuplicate
             _SYS_TimerStart
               _SYS_TimerStarted
               _placeTimer
             _nwkRouteRemove
               _NWK_RouteFindEntry
               _NWK_RouteFreeEntry
           _nwkTxBroadcastFrame
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
             _nwkFrameAlloc
               _memset
             _rand
               ___omul
         _nwkSecurityProcess
       _nwkSecurityTaskHandler
         _SYS_EncryptReq
           _SYS_EncryptConf
           _xtea
         _nwkFrameNext
         _nwkRxDecryptConf
         _nwkSecurityProcessMic
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
         _nwkSecurityStart
           _nwkFramePayloadSize
         _nwkTxEncryptConf
       _nwkTxTaskHandler
         _PHY_DataReq
           _SPI1_ExchangeByte
           _SPI1_WriteBlock
             _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _idle
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkDataReqTxConf *
           _nwkFrameFree
         _nwkFrameFree *
         _nwkFrameNext *
         _nwkRouteFrameSent *
           _NWK_RouteFindEntry
           _NWK_RouteFreeEntry
           _nwkRouteNormalizeRanks
         _nwkSecurityProcess *
     _PHY_TaskHandler
       _radio_engine
         _DIO0_Receive_ISR
           _PHY_DataInd
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
             _nwkFrameAlloc
               _memset
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _get_lqi
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
           _get_rssi
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _PHY_DataConf
           _nwkTxConvertPhyStatus
         _SX1276Read
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
         _cad
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _get_timer0base
           _set_timer0base
           _start_radio_cad
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _idle
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _get_timer0base
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _receive
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _implicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _set_timer0base
     _SYS_TimerTaskHandler
       _nwkRxDuplicateRejectionTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
       _nwkTxAckWaitTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
         _nwkTxConfirm
       _nwkTxDelayTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
       _placeTimer *
   _TMR0_SetInterruptHandler
   _bootLoadApplication
     _CircularBufferInit
       ___lwdiv
     _DATAEE_ReadByte_Platform
       _DATAEE_ReadByte
       _DATAEE_WriteByte
     _DATAEE_WriteByte_Platform
       _DATAEE_WriteByte
     _NWK_OpenEndpoint
     _NWK_SetAddr
       _PHY_SetShortAddr
     _NWK_SetPanId
       _PHY_SetPanId
     _NWK_SetSecurityKey
       _memcpy
         ___wmul (ARG)
         _strlen (ARG)
     _PHY_SetChannel
       _setFrequency
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         ___lldiv
           _getSignalBandwidth (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         ___llmod
     _PHY_SetRxState
       _receive
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         _explicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _implicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
     _crc16_app
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
     _loadMACAddr
       _DIA_ReadByte
     _set_parity
     _set_uart_baud
   _processATCommand
     _UART1_Read
     _UART1_is_rx_ready
     _executeATCommand
       _cmdAddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdBcast
         _NWK_DataReq
         _get_free_tx_buffer
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
       _cmdBootLoad
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetCAD
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetCADRSSI
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetMode
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetRFCH
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetRxCnt
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetSF
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetTTL
       _cmdGetTX
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdI
         _sendInfo
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                 _isdigit
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                   _toupper
                     _islower
       _cmdMac
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdNaddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdRecv
         _CircularBufferEmpty
         _CircularBufferPopFront
           ___wmul
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _putch
           _UART1_Write
       _cmdReset
       _cmdRstCAD
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdSend
         _NWK_DataReq
         _get_free_tx_buffer
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSendSink
       _cmdSetAES
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _NWK_SetSecurityKey
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetAddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetBaud
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetCADRSSI
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtol
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetNaddr
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _setSyncWord
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetParity
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _set_parity
         _strstr
           _strchr
           _strlen
           _strncmp
       _cmdSetRFCH
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetSF
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtol
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetSink
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdSetTTL
       _cmdSetTX
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _print_hop_table
         _NWK_RouteTable
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _fputc
               _putch
                 _UART1_Write
             _isdigit
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
               _toupper
                 _islower
       _set_hop_table_ttl
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _strstr
         _strchr
         _strlen
         _strncmp
     _get_timer0base
     _memset
     _queue_serial_led_event
       _queueLedEvent
         _CircularBufferPushBack
           ___wmul
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
         _CircularBufferSpace
           _CircularBufferSize
     _set_timer0base

 _TMR0_ISR (ROOT)
   _TMR0_CallBack
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _Timer0Handler *

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     6A1      37       41.4%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      BD      15       73.8%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      60      13       37.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F2      11       94.5%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      DA       9       85.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F9       7       97.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     51      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5E       1       98.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4E0      32        0.0%
DATA                 0      0     B81       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jun 13 23:43:34 2020

                         cmdSetNaddr@tempaddr 0083                nwkRouteFrameReceived@discovery 0011  
                           _SPI1_ExchangeByte 976C                                    _RSSITarget 00F7  
                              _setCodingRate4 90BC                            _commandByteCounter 00E1  
                                 __CFG_CP$OFF 000000                            ?_SPI1_ExchangeByte 0001  
                     bootLoadApplication@temp 0034                           ___wmul@multiplicand 0004  
                            ??_PHY_SetRxState 0012                             ??_PHY_TaskHandler 004D  
              __end_of_nwkRouteNormalizeRanks 8FA8                                _SYS_TimerStart 93B8  
                     ??_nwkDataReqTaskHandler 0031                      __size_of_start_radio_cad 0010  
                                 __CFG_LVP$ON 000000                       ?_nwkTxDelayTimerHandler 0012  
                  __size_of_set_hop_table_ttl 0010                                           l224 8208  
                                         l411 72A2                                           l238 826A  
                                         l361 7540                                           l370 6260  
                                         l380 7352                                           l387 9A1A  
                                         l646 7C54                                           _GIE 01FE97  
                    __end_of_DIO0_Receive_ISR 77D2                                           _SNR 00D8  
                          _CircularBufferInit 6F4E                            _CircularBufferSize 845A  
                      __end_of_NWK_RouteTable 99E8                          __end_of_cmdSetParity 7980  
                                         _cad 6DDE                                           _abs 8D4E  
                                         _pad 6E98                                  ?_loadMACAddr 0001  
                           _NWK_GroupIsMember 922E                            nwkRouteFrame@frame 0033  
                             nwkRxSendAck@ack 002E                       __size_of_PMD_Initialize 0022  
                         ??_SPI1_ExchangeByte 0002                                           prod 003FF3  
                      CircularBufferEmpty@ctx 0002                                           tosl 003FFD  
                                         wreg 003FE8                        ?_nwkSecurityProcessMic 0001  
                                 get_lqi@rssi 0043                      nwkDataReqSendFrame@frame 002F  
                                ___flmul@aexp 001D                                  ___flmul@bexp 0022  
                      CircularBufferInit@size 0015                          _FirmwareVersionMajor FDB6  
                    _DATAEE_ReadByte_Platform 5D18                            _UART1_Transmit_ISR 9128  
                        _FirmwareVersionMinor FDB5                                  ___flmul@sign 001C  
                                ___flmul@temp 0027                                  ___flmul@prod 0023  
                               __CFG_BBEN$OFF 000000                            ?_NWK_GroupIsMember 0002  
                              ?_queueLedEvent 001C                              _SX1276ReadBuffer 93E0  
                       __end_of_SYS_TimerInit 99D2                         queueLedEvent@LEDState 001E  
                         ?_CircularBufferInit 0009                __end_of_nwkSecurityTaskHandler 5736  
                                 ?_SX1276Read 0001                               PHY_DataReq@data 0011  
                                __CFG_ZCD$OFF 000000                        NWK_GroupIsMember@group 0002  
                         ?_CircularBufferSize 0002                               ?_SYS_EncryptReq 0036  
                             ?_get_timer0base 0002                                  ___fltol@exp1 0042  
                                        ?_cad 0001                                          ?_abs 0014  
                             nwkTxFrame@frame 0024                                          l1226 8C80  
                                        l1086 977A                                          l1441 8BA4  
                                        l2234 6C38                                          l2171 1670  
                                        l3203 26C8                                          l3205 26D4  
                                        l3230 3032                                          l4017 4550  
                                        l2418 3E4C                                          l3243 2912  
                                        l2700 8DE8                                          l3228 3026  
                                        l4132 6518                                          l1637 866A  
                                        l3245 291E                                          l2294 5B6E  
                                        l2438 78B8                                          l1638 8652  
                                        l1646 6708                                          l2296 5B76  
                                        l3192 6ED4                                          l3338 7B06  
                                        l1819 1C3C                                          l4147 87C2  
                                        l2744 930E                                          l4192 0CB6  
                                        l4193 0CE4                                          l1954 8A2E  
                                        l2770 5208                                          l3802 86C8  
                             PHY_DataReq@size 0013                                          l3731 7FF0  
                                        l1974 3B06                                          ?_pad 0014  
                                        l4199 0CEC                                          l3576 6838  
                                        l3840 1EBC                                          l3841 1E9A  
                                        l3925 16F2                                          l3749 6418  
                                        l3942 19B8                                          l3934 1922  
                                        l3935 191E                                          l3759 6DAC  
                                        l3856 1F8E                                          l3865 1FF6  
                                        l3866 1FF2                                          l3973 4632  
                                        l3966 45AC                                          l3986 8D7E  
                                        l9412 81A4                                          l9404 8152  
                                        l9630 7A40                          nwkDataReqConfirm@req 0009  
                                        l9900 763A                                          l9636 7A60  
                                        l9654 9254                          _SYS_TimerTaskHandler 52F8  
                                        l9648 9232                                          l9914 8262  
                                        l9906 8224                                          STR_1 FF5F  
                                        STR_2 FFDE                                          STR_3 FEC5  
                                        STR_4 FEC5                                          STR_5 FEC9  
                                        l9972 558E                                          STR_6 FFDE  
                                        STR_7 FEC5                                          STR_8 FEC5  
                                        STR_9 FEC9                                          l9968 5558  
                                        l9896 7616                                          l9978 55E4  
                                        l9986 859E                                          _LATA 003FBA  
                                        _LATB 003FBB                                          _LATC 003FBC  
                  __end_of_explicitHeaderMode 9830                                          _PMD0 0039C0  
                                        _PMD1 0039C1                                          _PMD2 0039C2  
                                        _PMD3 0039C3                                          _PMD4 0039C4  
                                        _PMD5 0039C5                                          _PMD6 0039C6  
                                        _PMD7 0039C7                                          u6255 8CC6  
                                        u6256 8CC8                                          u8040 6C90  
                                        u8130 3CDC                                          u9010 16FE  
                                        u9100 19A2                                          u8080 550E  
                                        u7370 7A8C                                          u9050 1918  
                                        u9220 69DC                                          u8085 54FC  
                                        u6920 818A                                          u8440 6B40  
                                        u8450 6B5C                                          u9090 1984  
                                        u9170 694E                                          u9500 3B10  
                                        u9180 6986                                          u6926 818C  
                                        u8470 7EBC                                          u9510 3B12  
                                        u9520 3B3A                                          u8640 1E6E  
                                        u9185 697C                                          u9530 3B5A  
                                        u9450 3A80                                          u8650 1E7E  
                                        u9540 3B60                                          u8900 2058  
                                        u8820 1FD6                                          u8660 1E80  
                                        u9704 2EEA                                          u8840 1FEC  
                                        u7881 7610                                          u9705 2EE6  
                                        u9714 2F50                                          u8690 1EC4  
                                        u9715 2F4C                                          u9651 2E2A  
                                        u9674 2E7A                                          u9675 2E76  
                           ?_PHY_SetShortAddr 0002                           _CircularBufferEmpty 9260  
                                        _RSSI 00DA                                          _WPUA 003A41  
                                        _WPUB 003A51                                          _WPUC 003A61  
                                        _WPUE 003A81                    _nwkRouteFrameReceived$3893 0012  
                         _CircularBufferSpace 9050                              PHY_DataInd@frame 0017  
                               __CFG_FCMEN$ON 000000                           ?_UART1_Transmit_ISR 0001  
            __end_of_nwkTxAckWaitTimerHandler 78F4                                          abs@a 0014  
                                        _cmdI 9A00                           ??_NWK_GroupIsMember 0004  
                     __end_of_nwkSecurityInit 993C                                          _dbuf 02BA  
                                        _idle 99BA                                          _atoi 43EE  
                                        _main 9390                                          _dtoa 2646  
                         nwkRouteFrame@header 0035                              ?_NWK_TaskHandler 0001  
                                        _rand 5412                                          _seed 01D0  
                                        _prec 00B7                                          _nout 00B3  
                                        pad@i 001B                                          pad@p 0018  
                                        fsr0h 003FEA                                          fsr1h 003FE2  
                                        indf0 003FEF                                          fsr2h 003FDA  
                                        fsr0l 003FE9                                          indf1 003FE7  
                                        indf2 003FDF                                          fsr1l 003FE1  
                                        pad@w 001D                                          fsr2l 003FD9  
                          ??_PHY_SetShortAddr 0004                                          _utoa 300A  
                                        _xtea 20A0                                          _xtoa 28F6  
                             _rx_buffer_queue 01D8                       __size_of_SPI1_ReadBlock 0038  
                    nwkRxRejectDuplicate@diff 001A                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                              NWK_DataReq@req 0002                     __end_of_SPI1_ExchangeByte 9786  
               ??_UART1_SetTxInterruptHandler 0004    nwkRxDuplicateRejectionTimerHandler@restart 0014  
                      CircularBufferSpace@ctx 000A                        __end_of_setCodingRate4 90F2  
                               __CFG_CSWEN$ON 000000                             _UART1_rx_vect_isr 9654  
                                ___param_bank 000000                          __end_of_DIA_ReadByte 9504  
                  ??_nwkRxHandleReceivedFrame 002B                             nwkFrameFree@frame 0002  
                   CircularBufferPopFront@ctx 0013                     CircularBufferPopFront@val 0015  
                        ??_CircularBufferInit 0011                    __size_of_UART1_is_rx_ready 000E  
                        ??_CircularBufferSize 0004                                   ?_UART1_Read 0001  
                            _SYS_TimerStarted 8B48                       ??_nwkRxHandleIndication 003D  
                          ?_UART1_rx_vect_isr 0001                                         ??_cad 0011  
                                       ??_abs 0016                                         ??_pad 001A  
                   __size_of_DATAEE_WriteByte 0040                        __end_of_SYS_TimerStart 93E0  
                     __end_of_TMR0_Initialize 8E46                   __end_of_nwkFramePayloadSize 9366  
                        ?_CircularBufferEmpty 0002                __end_of_nwkTxDelayTimerHandler 7A0C  
              ??_TMR0_DefaultInterruptHandler 0001                              ?_SYS_EncryptConf 0001  
                        __size_of_cmdGetRxCnt 004A                          ?_CircularBufferSpace 000A  
              __size_of_OSCILLATOR_Initialize 0018                          ??_UART1_Transmit_ISR 0001  
                            nwkTxFrame@header 0028                 __end_of_OSCILLATOR_Initialize 9848  
                        __size_of_cmdBootLoad 003A                                         l10002 6C94  
                                       l10014 6CFA                      ??_nwkRouteSendRouteError 002F  
                                       l10042 8B68                                         l10036 8B56  
                                       l10044 8B80                                         l10222 8C48  
                                ?_SX1276Write 000F                                         l10216 8C16  
                                       l10224 8C4A                                         l10080 3D5E  
                                       l10064 3C94                                         l10306 3F28  
                                       l11034 3A82                                         l10058 3C56  
                                       l10082 3D6C                                         l11202 2F8A  
                                       l10332 6B18                                         l10324 6AE8  
                                       l11060 3B9A                                         l10068 3CD4  
                                       l12020 5EB4                                         l11038 3A98  
                                       l10078 3D46                                         l12006 5E20  
                                       l10510 1D84                                         l10280 3DEE  
                                       l12040 932A                                         l10370 7ED2  
                                       l10338 6B4C                                         l11066 3BF2  
                                       l11330 5B82                                         l11074 8F72  
                                       l10514 1D88                                         l10364 7EC0  
                                       l11180 2EFE                                         l11340 5BEA  
                                       l10612 1F02                                         l10604 1EE0  
                                       l13100 798E                                         l10294 3E7E  
                                       l10374 7EDE                                         l11174 2ED4  
                                       l11158 2DE4                                         l10614 1F06  
                                       l10622 1F18                                         l10534 1DCC  
                                       l10296 3EA2                                         l10288 3E34  
                                       l10384 7EEA                                         l11336 5BC8  
                                       l10640 1FB2                                         l10632 1F7E  
                                       l10712 169E                                         l11360 8FB4  
                                       l11352 8FAC                                         l11178 2ED8  
                                       l11186 2F02                                         l12170 92D2  
                                       l11338 5BE8                                         l10650 1FC8  
                                       l10546 1DF0                                         l10538 1DD0  
                                       l10730 16DE                                         l10714 16A2  
                                       l11370 8FBC                                         l11348 5C12  
                                       l10812 1994                                         l10740 1710  
                                       l10732 16E2                                         l10716 16B2  
                                       l11364 8FB8                                         l11356 8FB0  
                                       l13108 79D0                                         l13212 8C00  
                                       l11198 2F6C                                         l10590 1EAC  
                                       l10656 1FD2                                         l10576 1E4A  
                                       l10824 19D8                                         l10808 1976  
                                       l13072 875E                                         l10690 207C  
                                       l13066 8732                                         l15100 4FE0  
                                       l12188 40A8                                         l10684 2072  
                                       l10676 204C                                         l10588 1EA8  
                                       l13084 7872                                         l13228 687C  
                                       l15012 0A1E                                         l10782 18CA  
                                       l13238 6898                                         l15022 0A6A  
                                       l15200 680C                                         l15120 503A  
                                       l15112 5016                                         l15104 4FF2  
                                       l10688 207A                                         l13184 8696  
                                       l13248 68B4                                         l13280 690C  
                                       l14400 808E                                         l15210 6870  
                                       l15130 505E                                         l10874 69B2  
                                       l10858 6960                                         l13186 869E  
                                       l13258 68D0                                         l13282 693C  
                                       l14410 87DE                                         l15018 0A60  
                                       l15220 7FBA                                         l15204 6822  
                                       l15132 50AA                                         l15124 504C  
                                       l15116 5028                                         l15108 5004  
                                       l15052 721A                                         l10788 18E8  
                                       l10892 69F2                                         l10884 69CA  
                                       l13196 86BE                                         l13460 8E4A  
                                       l13268 68EC                                         l14412 87E2  
                                       l15028 0A80                                         l15062 70BC  
                                       l16102 138C                                         l10886 69D6  
                                       l10878 69C2                                         l11934 865E  
                                       l16014 6510                                         l16006 64BE  
                                       l14440 9116                                         l16032 1A30  
                                       l14512 484C                                         l14424 8D1A  
                                       l17000 0240                                         l15226 7FE2  
                                       l15218 7FAE                                         l15242 45E2  
                                       l16106 13A8                                         l13722 5388  
                                       l13714 5326                                         l14602 6402  
                                       l14610 6D3A                                         l15162 84C8  
                                       l12908 9432                                         l12860 890E  
                                       l14444 9026                                         l14436 9100  
                                       l15244 45E8                                         l15236 45C4  
                                       l15092 4FBC                                         l15076 715A  
                                       l16132 151A                                         l16124 1496  
                                       l16212 5FA0                                         l11980 73F4  
                                       l13484 7C72                                         l14524 489A  
                                       l14540 4920                                         l14428 8D36  
                                       l14460 6EDE                                         l14612 6D4E  
                                       l15156 83B0                                         l17020 02FA  
                                       l17012 02B6                                         l17004 026A  
                                       l17100 05CE                                         l15254 4658  
                                       l15246 45F4                                         l11990 600A  
                                       l15422 3674                                         l16134 152A  
                                       l16126 1500                                         l11974 738C  
                                       l11982 740C                                         l15350 4DBC  
                                       l12790 678E                                         l12774 6700  
                                       l14630 8AFA                                         l14526 48AE  
                                       l14518 4874                                         l14390 8BC8  
                                       l14374 8B8E                                         l14454 6EBA  
                                       l15158 83D4                                         l15166 84DC  
                                       l15176 7AB8                                         l14448 903E  
                                       l15272 46A8                                         l15256 4664  
                                       l15248 461A                                         l15096 4FCE  
                                       l15088 4FAA                                         l15520 574C  
                                       l11992 6018                                         l16144 157C  
                                       l16312 77CA                                         l14544 4946  
                                       l14536 490A                                         l14560 4C60  
                                       l14464 6EFA                                         l14712 28A6  
                                       l17040 03C0                                         l17032 0370  
                                       l17024 0324                                         l17016 02D8  
                                       l17008 0294                                         l15178 7AC4  
                                       l15602 40F2                                         l11994 6030  
                                       l16162 1634                                         l16154 15E0  
                                       l16138 1540                                         l16146 158E  
                                       l16082 12EA                                         l12786 676C  
                                       l14458 6ECC                                         l14618 6D96  
                                       l14802 2AC6                                         l15282 7BE6  
                                       l16330 2C3A                                         l17114 86E8  
                                       l17210 428A                                         l12892 8872  
                                       l13676 85EA                                         l15188 7AF8  
                                       l15196 67D8                                         l15516 5742  
                                       l14636 7F44                                         l14644 7F8A  
                                       l16068 667A                                         l15460 3794  
                                       l15452 3772                                         l15444 3756  
                                       l15436 373A                                         l16164 1646  
                                       l16092 1354                                         l17300 23CC  
                                       l14580 4D12                                         l14572 4CD6  
                                       l14564 4C7A                                         l14556 4C3C  
                                       l14388 8BC6                                         l14468 6F30  
                                       l14716 28C0                                         l14732 307E  
                                       l16500 325A                                         l15700 82EC  
                                       l17060 0478                                         l17052 0426  
                                       l17044 03E2                                         l17036 039A  
                                       l17028 0346                                         l17220 42BA  
                                       l12878 954C                                         l15550 1082  
                                       l15542 0FDE                                         l15534 0F3A  
                                       l11998 6086                                         l14902 5C82  
                                       l16254 6E1C                                         l17134 5D62  
                                       l14566 4C8E                                         l14590 6392  
                                       l14742 31AA                                         l16502 325E  
                                       l16510 327A                                         l16422 7852  
                                       l16184 6C0E                                         l16176 6BC8  
                                       l16096 1366                                         l16248 6E00  
                                       l17312 23F6                                         l14840 4468  
                                       l14824 4400                                         l14576 4CEC  
                                       l14664 26AC                                         l14592 63A6  
                                       l16336 2C5C                                         l16520 32FC  
                                       l16504 3266                                         l16512 32C0  
                                       l17080 0532                                         l17072 04E6  
                                       l17064 049A                                         l17056 0450  
                                       l17048 0404                                         l15562 1178  
                                       l15554 10D4                                         l15546 1030  
                                       l15538 0F8C                                         l16194 6C4E  
                                       l16282 6E6E                                         l17170 5DDC  
                                       l17146 5D8A                                         l14850 44E2  
                                       l14842 4470                                         l14834 4456  
                                       l14826 4404                                         l14682 2702  
                                       l14818 2B40                                         l14930 0684  
                                       l15810 0E80                                         l15714 0B3A  
                                       l17234 4302                                         l17226 42D4  
                                       l17218 42B2                                         l15492 937C  
                                       l15476 37E8                                         l15468 37C6  
                                       l16188 6C28                                         l15636 757C  
                                       l17412 2602                                         l14844 4476  
                                       l14692 283E                                         l14780 2998  
                                       l14772 2976                                         l16372 3896  
                                       l15724 0B9C                                         l17092 058C  
                                       l17076 0508                                         l17068 04BC  
                                       l17236 430A                                         l17228 42E6  
                                       ?_cmdI 0001                                         l15582 90D2  
                                       l15566 11CA                                         l15558 1126  
                                       l15654 210C                                         l17158 5DB4  
                                       l17326 2468                                         l14846 44A4  
                                       l14678 26F2                                         l14766 2936  
                                       l14950 069E                                         l14942 0690  
                                       l14934 0688                                         l14926 0674  
                                       l15830 81C2                                         l16454 589E  
                                       l15822 0EB6                                         l15806 0E4A  
                                       l15742 0BFE                                         l16550 3406  
                                       l16534 334E                                         l16526 332A  
                                       l15488 9372                                         l17336 249A  
                                       l14928 0676                                         l14952 06E4  
                                       l16712 89AA                                         l16464 5908  
                                       l15824 0ECE                                         l15736 0BC4  
                                       l15816 0E9C                                         l16616 61E8  
                                       l17096 05B6                                         l17272 438A  
                                       l17256 4358                                         l17248 433C  
                                       l17280 43B0                                         l15594 8DE4  
                                       l15578 90C8                                         l14890 4AA6  
                                       l14882 4A34                                         l17346 24CC  
                                       l14794 2A2E                                         l14970 0776  
                                       l14946 0694                                         l14938 068C  
                                       l15906 7D8A                                         l15674 50EE  
                                       l16378 38B8                                         l16458 58CE  
                                       l16466 5920                                         l15738 0BF6  
                                       l16546 33DE                                         l15690 8284  
                                       l17266 4378                                         l14876 49C8  
                                       l16804 354C                                         l16820 3614  
                                       l15860 8426                                         l17356 2506  
                                       l15908 7D98                                         l15676 50FC  
                                       l16716 89BE                                         l15772 0CD2  
                                       l15764 0CA6                                         l15692 828C  
                                       l16750 6A28                                         l16814 3594  
                                       l16806 354C                                         l16902 51EE  
                                       l15862 842E                                         l17382 256C  
                                       l17366 2534                                         l14966 0746  
                                       l15838 8200                                         l16478 8968  
                                       l15790 0D8C                                         l15782 0D54  
                                       l15758 0C92                                         l16670 7944  
                                       l14896 4AC2                                         l14888 4A70  
                                       l16760 6A74                                         l16752 6A3E  
                                       l16808 355E                                         l16912 5212  
                                       l17376 2562                                         l14968 076A  
                                       l16728 60DC                                         l17448 93AE  
                                       l16842 7CE2                                         l16834 7CD0  
                                       l16754 6A50                                         l16762 6AAE  
                                       l16818 35CE                                         l16914 5216  
                                       l16906 51FA                                         l15858 841E  
                                       l15866 8436                                         l17394 258A  
                                       l15698 82E4                                         l16674 796C  
                                       l16666 791C                                         l16844 7D10  
                                       l16828 7CBE                                         l16756 6A62  
                                       l16748 6A16                                         l16780 347E  
                                       l16772 3436                                         l16932 5260  
                                       l16916 521E                       __end_of_SYS_TaskHandler 9958  
                                       l14988 0886                                         l15884 658A  
                                       l16846 7D28                                         l16870 5690  
                                       l16782 348E                                         l16774 344C  
                                       l16950 52BA                                         l14998 0932  
                                       l15878 654C                                         l15886 65BC  
                                       l16792 34DC                                         l16936 5278  
                                       l16928 5258                                         l16960 00B4  
                                       l16882 56D6                                         l16874 569C  
                                       l16946 52B2                                         l15978 595E  
                                       l16868 567A                                         l16892 5710  
                                       l16980 017A                                         l16972 012E  
                                       l16964 00E2                                         l15998 6470  
                                       l16896 51DE                                         l16992 01FC  
                                       l16984 01A4                                         l16976 0150  
                                       l16968 0104                                         l16996 021E  
                                       l16988 01D2                                 ___fltol@sign1 0041  
                                       ?_idle 0001                               __end_of___aodiv 4978  
                                       ?_atoi 0009                               __end_of___fladd 20A0  
                   __end_of_NWK_GroupIsMember 9260                                         ?_main 0001  
                                       ?_dtoa 001F                               __end_of___aomod 4D44  
                                       ?_rand 001A                                         STR_10 FE4A  
                                       STR_11 FFDE                                         STR_20 FEC5  
                                       STR_12 FFD6                                         STR_13 FEC5  
                                       STR_21 FFDB                                         STR_30 FEC5  
                                       STR_22 FFF4                                         STR_14 FE85  
                                       STR_23 FFD3                                         STR_31 FFD6  
                                       STR_15 FFDE                                         STR_24 FFD6  
                                       STR_16 FFD6                                         STR_40 FE77  
                                       STR_32 FE11                                         STR_33 FFD6  
                                       STR_25 FF5F                                         STR_41 FFDE  
                                       STR_17 FFA7                                 __CFG_WDTE$OFF 000000  
                                       STR_18 FFD3                                         STR_42 FEC5  
                                       STR_26 FEC5                                         STR_50 FFEA  
                                       STR_34 FE38                                         STR_43 FEC5  
                                       STR_27 FEC5                                         STR_19 FEC5  
                                       STR_51 FFBF                                         STR_35 FE26  
                                       STR_44 FFD6                                         STR_60 FFDE  
                                       STR_28 FFDE                                         STR_52 FFBF  
                                       STR_36 FE9F                                         STR_61 FEC5  
                                       STR_29 FEC5                                         STR_37 FFDE  
                                       STR_53 FFC5                                         STR_45 FE92  
                                       STR_62 FFD6                                         STR_38 FEC5  
                                       STR_46 FFDE                                         STR_54 FFC5  
                                       STR_70 FFA0                                         STR_39 FFD6  
                                       STR_55 FEC5                                         STR_47 FEC5  
                                       STR_71 FFA0                                         STR_63 FE69  
                                       STR_56 FFD6                                         STR_48 FFD6  
                                       STR_72 FFE5                                         STR_80 FF61  
                                       STR_64 FDB9                                         STR_65 FFD6  
                                       STR_57 FFDE                                         STR_81 FF61  
                                       STR_73 FFE5                                         STR_49 FFEA  
                                       STR_58 FFFC                                         STR_74 FFE0  
                                       STR_66 FF5A                                         STR_82 FF04  
                                       STR_90 FEAC                                         STR_67 FF5A  
                                       STR_75 FFE0                                         STR_91 FEAC  
                                       STR_83 FF04                                         STR_59 FF32  
                                       STR_84 FF8B                                         STR_68 FF29  
                                       STR_76 FED1                                         STR_92 FE5A  
                                       STR_85 FF8B                                         STR_77 FED1  
                                       STR_69 FF29                                         STR_93 FE5A  
                                       STR_86 FF6F                                         STR_78 FF4A  
                                       STR_94 FEF0                                         STR_87 FF6F  
                                       STR_79 FF4A                                         STR_95 FEF0  
                                       STR_88 FF0E                                         STR_96 FEDC  
                             __end_of___flmul 19F6                                         STR_89 FF0E  
                                       STR_97 FEDC                                         STR_98 FF92  
                                       STR_99 FF92                            _implicitHeaderMode 9800  
                             __end_of___fltol 6A0C                         nwkDataReqConfirm@prev 000D  
                             __end_of___lldiv 7B20                                         ?_utoa 001F  
                                       ?_xtea 0002                                         u11008 60B6  
                             __end_of___lodiv 644A                                         ?_xtoa 001F  
                                       u14000 8AF6                               __end_of___llmod 800A  
                                       u14010 7F6E                                         u13050 53EC  
                                       u10810 8644                                         _U1P1H 003DED  
                                       u11460 40D8                                         u12420 86A2  
                                       u14100 284C                                         _U1P2H 003DEF  
                                       u11470 40DA                                         u13038 53B0  
                                       u14030 267E                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         u13039 53C2  
                                       u10815 863E                                         u14120 286E  
                                       u14040 2680                                         _U1P2L 003DEE  
                                       u14017 7F60                                         u14121 286C  
                                       u14130 287C                                         _U1P3L 003DF0  
                                       u12460 9946                                         u14140 2882  
                                       u14220 31D4                                         u14300 29CC  
                                       u14221 31D2                                         u14070 26BE  
                                       u14230 31E2                                         u14160 2890  
                                       u14240 31E8                                         u14400 2B0C  
                                       u14320 2A04                                         u15105 5AA0  
                                       u15025 8C8E                                         u15106 5AA2  
                                       u10970 7414                                         u15026 8C90  
                                       u14090 26EC                                         u13610 918A  
                                       u14330 2A06                                         u15060 4DAA  
                                       u13540 8086                                         u13700 91BE  
                                       u13620 918C                                         u14260 2908  
                                       u16020 65EE                                         u14430 4452  
                                       u14190 301C                                         u13710 91C0  
                                       u14350 2A92                                         u16030 65F4  
                                       u15240 579E                                         u15160 3790  
                                       u15400 2186                                         u13560 80CE  
                                       u13720 91F2                                         u14360 2AD6  
                                       u14280 2994                                         u14600 07B2  
                                       u17000 7290                               __end_of___lomod 6DDE  
                                       u16210 1B36                                         u16130 1A8C  
                                       u15170 37C2                                         u12850 7C7E  
                                       u14450 4518                                         u13570 880C  
                                       u13730 91F4                                         u14290 29CA  
                                       u14610 07B4                                         u16050 928A  
                                       u13811 487A                                         u14355 2A80  
                                       u16027 65E0                                         u15340 1214  
                                       u16140 1A8E                                         u15180 37E4  
                                       u11964 6754                                         u14460 451A  
                                       u13740 87AA                                         u14380 2AF8  
                                       u14620 07C2                                         u15245 5794  
                                       u14701 71CC                                         u15405 217C  
                                       u11965 674E                                         u14381 2AF6  
                                       u16150 1AA6                                         u15430 22AA  
                                       u13830 48B2                                         u13750 87AC  
                                       u14390 2B06                                         u15510 5192  
                                       u15415 21A4                                         u16208 1B08  
                                       u16240 6644                                         u16400 14B0  
                                       u14640 07FE                                         u15520 51BC  
                                       u15600 0B38                                         u15345 120A  
                                       u15425 222A                                         u13577 87FE  
                                       u13921 6372                                         u16170 1AD4  
                                       u16410 14B2                                         u17210 56FE  
                                       u13770 9226                                         u13690 8D5C  
                                       u15610 0B68                                         u15435 22A0  
                                       u15515 518C                                         u16228 1B38  
                                       u16500 1612                                         u13780 9228  
                                       u13940 63AA                                         u15540 82CC  
                                       u15445 22C8                                         u15517 517E  
                                       u16190 1B06                                         u15198 3826  
                                       u17230 51F4                                         u14670 096E  
                                       u15470 5126                                         u15710 0C48  
                                       u15630 0B98                                         u15527 51AE  
                                       u15607 0B2A                                         u16168 1AA8  
                                       u16280 131C                                         u17128 35BC  
                                       u15800 0D34                                         u15560 832C  
                                       u15617 0B5A                                         u14770 7AC8  
                                       u14850 7FBE                                         u14930 466E  
                                       u16290 1332                                         u16610 5FDC  
                                       u13890 4C92                                         u13970 6D52  
                                       u15730 0C58                                         u16291 1330  
                                       u16188 1AD6                                         u16380 144E  
                                       u15900 0E78                                         u15820 0D7A  
                                       u15740 0C8E                                         u15660 0BF2  
                                       u15580 0B08                                         u15477 5118  
                                       u18037 8F5C                                         u16470 15C0  
                                       u16390 1450                                         u16630 6DFC  
                                       u15830 0D7C                                __CFG_DEBUG$OFF 000000  
                                       u18047 46CE                                         u18057 46EC  
                                       u16490 15FC                                         u17290 5294  
                                       u14970 7BD2                                         u15690 0C34  
                                       u16730 2C26                                         u18067 47DE  
                                       u15907 0E6A                                         u15747 0C80  
                                       u15667 0BE4                                         u15587 0AFA  
                                       u14990 7C1C                                         u15790 0D32  
                                       u17470 0340                                         u16680 6E86  
                                       u16760 3882                                         u17480 0362  
                                       u14977 7BC4                                         u15697 0C26  
                                       u15890 0E24                                         u16850 32A4  
                                       u16930 624A                               __end_of___lwdiv 86D6  
                                       u14997 7C0E                                         u17670 5D5E  
                                       u16790 7838                                         u16950 7340  
                                       u17920 2484                                         u16857 3296  
                                       u17770 429A                                         u17940 24B6  
                                       u17960 24F0                                         u17980 2520  
                                       _U1UIR 003DF8                                         _U1RXB 003DE8  
                                 computeFRF@i 002F                                         _U1TXB 003DEA  
                         ??_UART1_rx_vect_isr 0001                             ?_NWK_OpenEndpoint 0002  
                                       _OSCEN 0039DD                               __end_of_cmdAddr 95F2  
                                vfpfcnvrt@fmt 0048                                 strtoul@endptr 0036  
                                       _TMR0H 003FB7                                  vfpfcnvrt@llu 006D  
                                       _TMR0L 003FB6                               ?_NWK_RouteTable 0002  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                   _Default_ISR 9A28  
                             __end_of_cmdRecv 5938                               __end_of_cmdSend 2DD8  
                   ??_CRC_CalculatedResultGet 000B                              print_hop_table@i 005C  
           __size_of_TMR0_SetInterruptHandler 000E                           ___lmul@multiplicand 0006  
                   ?_TMR0_SetInterruptHandler 0002                            ??_NWK_OpenEndpoint 0004  
                            __end_of_TMR0_ISR 95D2                             _UART1_tx_vect_isr 9634  
                             __end_of_get_lqi 760A                                 __CFG_WRTB$OFF 000000  
                               __CFG_WRTC$OFF 000000                                 __CFG_WRTD$OFF 000000  
                    __end_of_NWK_RouteNextHop 8A34                        cmdSetCADRSSI@atCommand 0058  
                             _DATAEE_ReadByte 96B0                           ?_implicitHeaderMode 0001  
                        __size_of_cmdSetNaddr 007E                              __end_of_PHY_Init 9A12  
               nwkRouteSendRouteError@command 002F                         __end_of_Timer0Handler 890A  
                                       _flags 00B9                          __size_of_cmdSendSink 0002  
                   __size_of_CRC_ReverseValue 0058                                         _errno 012D  
                    __end_of_nwkSecurityStart 40EE                                         _fputc 8076  
                             __end_of_isalpha 91FA                                         _fputs 8D10  
                             __end_of_isdigit 922E                         ?_SYS_TimerTaskHandler 0001  
                                       _nwkIb 0131                              __end_of_NWK_Init 8628  
                          __CFG_MCLRE$EXTMCLR 000000                            ?_UART1_tx_vect_isr 0001  
                             __end_of_receive 8E08                                         _srand 8FE0  
                                       atoi@n 0016                                         pad@fp 0014  
                                       atoi@s 0009                                         _width 00B5  
                                       _putch 99E8                                         dtoa@d 0021  
                                       dtoa@i 0041                                         dtoa@n 0039  
                                       dtoa@p 0033                                         dtoa@s 0037  
                                       dtoa@w 0035                               __end_of_islower 9192  
                             __end_of_isspace 8B04                          __size_of_appDataConf 0022  
                             __end_of_isupper 91C6                                         pclath 003FFA  
                                       tablat 003FF5                              _nwkTxTaskHandler 342C  
                           nwkRxSendAck@frame 002A                                         plusw1 003FE3  
                                       plusw2 003FDB                           nwkDataReqTxConf@req 0008  
                                       utoa@d 0021                                         utoa@i 003D  
                                       utoa@n 0035                                         utoa@p 0031  
                                       utoa@w 0033                   nwkTxConvertPhyStatus@status 0004  
                                       xtea@i 0029                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 9982                   _UART1_SetRxInterruptHandler 9974  
                __size_of_nwkRxServiceDataInd 007C                                         xtoa@c 0044  
                                       xtoa@d 0021                                         xtoa@i 0042  
                                       xtoa@n 003A                                         xtoa@p 0036  
                                       xtoa@w 0038                                         xtoa@x 0029  
             nwkTxAckWaitTimerHandler@restart 0016                               __end_of_strcspn 833A  
                             __end_of_strncmp 51DC                               __end_of_toupper 87D0  
                            ___lodiv@dividend 0002      __end_of_UART1_DefaultFramingErrorHandler 9A2E  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0001  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 9A2C  
                             __end_of_strtoul 8A7A                       SX1276WriteBuffer@buffer 0009  
                         ??_UART1_tx_vect_isr 0001                              __end_of_SYS_Init 9966  
                   __end_of_UART1_rx_vect_isr 9674                      __size_of_SPI1_Initialize 001A  
                  __size_of_setPreambleLength 001A                                nwkFrameAlloc@i 0012  
                                _toupper$7663 000E                             nwkTxConfirm@frame 0002  
                             ?_setCodingRate4 0001                               __initialization 7004  
                  __end_of_NWK_RouteFindEntry 81B6                          ??_implicitHeaderMode 0011  
                                __end_of_cmdI 9A06                                  __end_of_idle 99C6  
                                __end_of_atoi 455E                                  __end_of_main 93B8  
                                __end_of_dtoa 28F6                                  __end_of_rand 5520  
                           nwkFrameNext@frame 0002                   SYS_TimerTaskHandler@elapsed 001E  
                                __end_of_utoa 321E                                  __end_of_xtea 2380  
                                __end_of_xtoa 2B76                                __CFG_SAFEN$OFF 000000  
                 ??_UART1_DefaultErrorHandler 0001                         ??_CircularBufferEmpty 0004  
                             ?_SYS_TimerStart 0010                           __size_of_SX1276Read 0016  
                       ??_CircularBufferSpace 000C                               cmdSend@destaddr 007F  
                  __end_of_NWK_RouteFreeEntry 90BC                              _need_radio_reset 00DB  
                            ??_CRC_Initialize 0002                                  ?_UART1_Write 0001  
                              _free_tx_buffer 8C10                                        ??_cmdI 0058  
                           cmdSetSF@atCommand 0058                                        ??_idle 0011  
                                      ??_atoi 000B                                        ??_main 005E  
                                      ??_dtoa 0029                                        ??_rand 001C  
                              __CFG_PR1WAY$ON 000000                                        ??_utoa 0029  
                                      ??_xtea 0006                                        ??_xtoa 002A  
                    ??_CircularBufferPopFront 0016                                 __activetblptr 000003  
                 __size_of_getSignalBandwidth 0122                   __size_of_setSignalBandwidth 03C6  
        __size_of_UART1_SetTxInterruptHandler 000E                           executeATCommand@cmd 00A9  
                   __end_of_UART1_tx_vect_isr 9654                                __CFG_MVECEN$ON 000000  
                  __end_of_nwkRxIndicateFrame 3838                               ??_queueLedEvent 001E  
                         computeFRF@frequency 0023                              ___lodiv@quotient 0012  
                    __end_of_executeATCommand 062E                           CRC_ReverseValue@crc 0002  
                            _UART1_Initialize 7426                      ??_CircularBufferPushBack 0016  
                  __end_of_NWK_SetSecurityKey 9526                                _nwkDataReqInit 99D2  
                       queueLedEvent@duration 001C                  DIO0_Receive_ISR@packetLength 0044  
                         NWK_RouteNextHop@dst 0008                             ??_start_radio_cad 0011  
                         _bootLoadApplication 2380                  __end_of_nwkRxRejectDuplicate 300A  
                __size_of_nwkDataReqSendFrame 0362                                        ?_fputc 0004  
                            ___llmod@dividend 0002                                        STR_100 FF76  
                                      STR_101 FF76                                        STR_110 FF52  
                                      STR_102 FF17                                        ?_fputs 000D  
                                      STR_103 FF17                                        STR_111 FF52  
                                      STR_104 FFF9                                        STR_120 FF68  
                                      STR_112 FF42                                        STR_121 FF68  
                                      STR_113 FF42                                        STR_105 FFF9  
                                      STR_122 FFEF                                        STR_106 FFB3  
                                      STR_114 FF20                                        STR_130 FEFA  
                                      STR_115 FF20                                        STR_107 FFB3  
                                      STR_131 FEFA                                        STR_123 FFEF  
                                      STR_116 FFCB                                        STR_124 FF99  
                                      STR_108 FF7D                                        STR_132 FEE6  
                                      STR_133 FEE6                                        STR_109 FF7D  
                                      STR_125 FF99                                        STR_117 FFCB  
                                      STR_134 FEC5                                        STR_126 FFB9  
                                      STR_118 FF84                                        STR_119 FF84  
                                      STR_127 FFB9                                        STR_135 FEB9  
                                      STR_128 FFAD                                        STR_136 FDF7  
                                      STR_129 FFAD                                        STR_137 FDDB  
                                      STR_138 FF3A                                        STR_139 FFD1  
                             cmdSend@tempaddr 0084                                        ?_srand 0002  
                       SYS_EncryptConf@vector 0006                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _T0CON0 003FB8  
                                      _T0CON1 003FB9                         __end_of_nwkFrameAlloc 716C  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                            _processATCommand 4278                                        _U1CON0 003DF2  
                    nwkRxHandleIndication@ack 003F                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RC4I2C 003A6B                           __size_of_UART1_Read 0042  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U1BRGL 003DF5                                        _RB0PPS 003A08  
                          __CFG_PWRTS$PWRT_64 000000                                        _RC0PPS 003A10  
                                      _RC1PPS 003A11                                        i1l1042 8904  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _RC7PPS 003A17  
                              __CFG_WDTCCS$SC 000000                                  loadMACAddr@i 0006  
                                      _INLVLA 003A44                                        _INLVLB 003A54  
                                      _INLVLC 003A64                                        _INLVLE 003A84  
                                      _TABLAT 003FF5                             ?_nwkDataReqTxConf 0004  
                                      _OSCFRQ 0039DF                                 vfpfcnvrt@done 0069  
                            __end_of_cmdBcast 3A30                                        _NVMDAT 0039E3  
                            __end_of_cmdGetSF 97E8                              __end_of_cmdGetTX 97D0  
                       _UART1_SetErrorHandler 999E                              ?_nwkSecurityInit 0001  
                            __end_of_cmdNaddr 97B8                                placeTimer@prev 000C  
                                ?_setSyncWord 0001                              __end_of___xxtofl 46C2  
                            __end_of_cmdSetSF 72CE                              __end_of_cmdSetTX 628C  
                          ??_nwkDataReqTxConf 0006                              __end_of_cmdReset 9A1C  
                          PHY_DataConf@status 0005                              set_parity@parity 0004  
                  __end_of_nwkSecurityProcess 92E8                    __size_of_SPI1_ExchangeByte 001A  
                              __CFG_XINST$OFF 000000                                  ___strtoxl@cp 0031  
                                vfprintf@cfmt 0053                                 ?_radio_engine 0001  
                                ?_PHY_DataInd 0013                                  ?_PHY_DataReq 0011  
                        ?_bootLoadApplication 0001                                        ___flge 67A4  
                            __end_of_get_rssi 9312                              __end_of_fhssList FDA7  
                                      ___lmul 84B8                                        ___omul 760A  
                                   ??___aodiv 0012                                     ??___fladd 0031  
                                   ??___aomod 0012                                        ___wmul 928E  
                                      _cmdMac 8956                                __CFG_STVREN$ON 000000  
                                   ??___flmul 0018                                     ??___fltol 003D  
                                      _crcObj 00EC                                     ??___lldiv 001E  
                                   ??___lodiv 0012                                     ??___llmod 000A  
                      __end_of_free_tx_buffer 8C52                                     ??___lomod 0012  
                                   ??___lwdiv 0006                      __end_of_nwkTxEncryptConf 9896  
                       __size_of_cmdSetParity 008C                                     ??_cmdAddr 0058  
                                      _memcpy 7F2A                              ?_TMR0_Initialize 0001  
                    __end_of_nwkRxTaskHandler 6AD4                                        _memset 4978  
                                   ??_cmdRecv 0058                                     ??_cmdSend 005A  
                            ___strtoxl@endptr 0012                                        clear_0 7050  
                                      clear_1 7062                                        clear_2 706E  
                                      clear_3 707A                                        clear_4 7086  
                                      clear_5 7092                                        clear_6 709E  
                            setCodingRate4@cr 0012                     CircularBufferPushBack@ctx 0013  
                   CircularBufferPushBack@val 0015                 DATAEE_ReadByte_Platform@copy1 000A  
               DATAEE_ReadByte_Platform@copy2 0009                 DATAEE_ReadByte_Platform@copy3 0008  
                                      _timers 00BB                                        _printf 94C0  
                                      pad@buf 0016             __size_of_nwkTxAckWaitTimerHandler 0090  
                  __size_of_NWK_GroupIsMember 0032               __size_of_nwkRouteSendRouteError 00E0  
                            ?_SYS_TaskHandler 0001                                        dtoa@fp 001F  
                                      _strchr 7BA8                     ?_nwkTxAckWaitTimerHandler 0012  
                     __end_of_DATAEE_ReadByte 96CE                                     ??_get_lqi 0043  
                            ___strtoxl@prev_a 001B                              __end_of_sendInfo 839A  
                                      _strlen 87D0                                        _strtok 644A  
                                      _strspn 827A                                        _strtol 8CD2  
                                      _strstr 6526                                 cmdSetAES@byte 00A5  
              __size_of_nwkTxConvertPhyStatus 0038                                 cmdSetAES@temp 00A1  
               __end_of_nwkTxConvertPhyStatus 8FE0                                        fputc@c 0004  
                              _PMD_Initialize 958C                                        fputs@c 0011  
                                      fputs@i 0012                                  __packetIndex 00DE  
                                      fputs@s 000D                                     ??_isalpha 0004  
                                   ??_isdigit 0004                        __end_of_nwkDataReqInit 99DE  
              __size_of_nwkRouteFrameReceived 01E2                                     ??_receive 0011  
                     _setSpreadingFactor$8391 0027                 __end_of_nwkRouteFrameReceived 3C12  
                                   ??_islower 0004                                  __mediumconst FCAA  
                                   ??_isspace 0004                                        tblptrh 003FF7  
                                   ??_isupper 0004                                        tblptrl 003FF6  
                                      tblptru 003FF8                   __end_ofNWK_LinearizeLqi@val FDB0  
                                      srand@s 0002                        ??_SYS_TimerTaskHandler 0019  
                                ?_NWK_DataReq 0002                          __size_of_loadMACAddr 003C  
                       __end_of_TMR0_CallBack 9632                              __end_of_vfprintf 83FA  
                                      xtea@t0 002A                                        xtea@t1 002E  
                                      utoa@fp 001F                          processATCommand@data 00B0  
 UART1_SetTxInterruptHandler@InterruptHandler 0002   UART1_SetRxInterruptHandler@InterruptHandler 0002  
    TMR0_SetInterruptHandler@InterruptHandler 0002          __end_of_UART1_SetOverrunErrorHandler 9990  
       __size_of_UART1_SetOverrunErrorHandler 000E                  _UART1_SetOverrunErrorHandler 9982  
                               _curent_parity 00E8                     _UART1_DefaultErrorHandler 9A12  
                                      xtoa@fp 001F                                     ??_strcspn 000C  
                                   ??_strncmp 0008                                     ??_toupper 000A  
                                   ??_strtoul 003A                 __size_of_INTERRUPT_Initialize 0040  
                __size_of_UART1_RxDataHandler 0024                                    ___flge@ff1 0010  
                                  ___flge@ff2 0014                                 cmdSetRFCH@cmd 0058  
                     ??_nwkRouteErrorReceived 000E                                  ___xxtofl@arg 000C  
                                ___xxtofl@exp 000B                             _SYSTEM_Initialize 956A  
                          _get_free_rx_buffer 8218                                  ___xxtofl@val 0002  
                               cmdSetSF@CHstr 0081                              PHY_SetRxState@rx 0001  
                                  __accesstop 0060                          cmdGetRxCnt@atCommand 0058  
                           ?_nwkRxDecryptConf 0002                       __end_of__initialization 70B2  
                                ?_NWK_SetAddr 0004                               SX1276Write@addr 0010  
                    __size_of_SPI1_WriteBlock 0036                          bootLoadApplication@i 0036  
                             SX1276Write@data 000F                                _SPI1_ReadBlock 9018  
                          __size_of_crc16_app 0084                         __size_of_DIA_ReadByte 0022  
                          ?_SYSTEM_Initialize 0001                            _get_free_tx_buffer 81B6  
                          _getSpreadingFactor 9738                                    _cadCounter 00DC  
                           ?_nwkTxAckReceived 0008                            _setSpreadingFactor 5736  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 0020  
                          ??_nwkRxDecryptConf 0005                                    ___fltol@f1 0039  
                             _PHY_TaskHandler 9A06                                  _cmdSetParity 78F4  
                               cmdRecv@buf_id 005B                      ??_queue_serial_led_event 0022  
                     SYS_TimerTaskHandler@cnt 001D                           ?_get_free_rx_buffer 0002  
                              ??_radio_engine 004B                            ??_nwkTxAckReceived 0009  
            __end_of_nwkRxHandleReceivedFrame 1672                         ??_bootLoadApplication 0030  
                          __size_of_cmdGetCAD 0018                                    _cadTimeOut 00F3  
                              __pcstackCOMRAM 0001                            CRC_Initialize@seed 0005  
                          __size_of_cmdGetTTL 0002                            __size_of___strtoxl 042E  
                          CRC_Initialize@poly 0003                      __end_of_SX1276ReadBuffer 9408  
                               cmdSetTX@CHstr 0084                  __size_of_nwkFrameCommandInit 004E  
                      __size_of_cmdGetCADRSSI 001A                                 cmdSetAddr@cmd 0058  
                                __pidataBANK0 99FA                                  __pidataBANK1 98BA  
                          nwkTxConfirm@status 0004                           ??_SYSTEM_Initialize 0007  
                         ?_get_free_tx_buffer 0002                           ?_getSpreadingFactor 000F  
                                 placeTimer@t 000E                CircularBufferInit@element_size 000F  
                                   ?_TMR0_ISR 0001                            __size_of_cmdSetAES 020E  
                         ?_setSpreadingFactor 0001                nwkRxHandleReceivedFrame@header 0031  
                          __size_of_cmdSetTTL 0002                              _DATAEE_WriteByte 8C52  
                              ivt0x8_undefint 00AC                               ?_free_tx_buffer 0002  
                           PHY_SetPanId@panId 0002                            __size_of_cmdRstCAD 0014  
                                   ?_PHY_Init 0001                                 __end_of_fputc 80E2  
                               cmdSetBaud@ptr 003D                                 __end_of_fputs 8D4E  
                           ??_SPI1_Initialize 0002                      nwkRxIndicateFrame@header 002D  
              nwkRxHandleReceivedFrame@member 002E                                 __end_of_srand 9018  
                               __end_of_putch 99F2                         SX1276WriteBuffer@addr 000B  
                  ??_DATAEE_ReadByte_Platform 0008                                     ?_NWK_Init 0001  
                                 receive@size 0011                       _rx_buffer_queue_context 01C6  
                       SX1276WriteBuffer@size 000A                        __end_of_PMD_Initialize 95AE  
                       SPI1_ExchangeByte@data 0002                       ??_nwkSecurityProcessMic 0013  
                               cmdSend@buf_id 008A                      nwkDataReqTaskHandler@req 0033  
                          _spi1_configuration FDB0                            __size_of_enableCrc 0012  
              __size_of_nwkDataReqTaskHandler 0082               __size_of_CircularBufferPopFront 00FC  
                  __size_of_UART1_tx_vect_isr 0020                              ??_SYS_EncryptReq 003A  
                           ?_DIO0_Receive_ISR 0001                 __end_of_nwkDataReqTaskHandler 7D32  
                            ??_get_timer0base 0004                          __size_of_SX1276Write 0012  
                             ?_nwkDataReqInit 0001                                 cmdSetNaddr@p1 0081  
                               cmdSetNaddr@p2 007F                          ??_get_free_rx_buffer 0003  
                                crc16_app@len 0015                                  crc16_app@ptr 001B  
                                   ?_SYS_Init 0001                                _nwkFrameFrames 05BD  
                   _UART1_FramingErrorHandler 01F1                                    _cmdGetRFCH 96CE  
                          ??_DIO0_Receive_ISR 0044               __size_of_CircularBufferPushBack 00F4  
                       __end_of_set_uart_baud 6942                                    _cmdGetMode 98FC  
                                _DIA_ReadByte 94E2                          ??_get_free_tx_buffer 0003  
                        ??_getSpreadingFactor 0013                              _CRC_ReverseValue 8628  
                                ??_SX1276Read 000D                          ??_setSpreadingFactor 0023  
                                     ??_fputc 0008                     __end_of_SYSTEM_Initialize 958C  
                                     ??_fputs 0011                      __end_of_SYS_TimerStarted 8B8C  
                             __CFG_IVT1WAY$ON 000000                                       ??_srand 0004  
                                     ??_putch 0003                                    _cmdSetRFCH 74CA  
                               ?_setFrequency 0023                        __end_of_SPI1_ReadBlock 9050  
                                  __pbssBANK0 00B1                                    __pbssBANK1 0100  
                                  __pbssBANK2 0200                                    __pbssBANK3 0300  
                                  __pbssBANK4 0400                                    __pbssBANK5 0500  
                                  _cmdSetAddr 77D2                                    _cmdSetBaud 800A  
               ?_UART1_SetOverrunErrorHandler 0002                        ?_UART1_SetErrorHandler 0002  
                                  _cmdSetSink 98DC                         __end_of_nwkRouteFrame 66D4  
                      _nwkRouteSendRouteError 628C                                    _appDataInd 716C  
                          __size_of_initRadio 015E                                    crc16_app@i 001D  
                __size_of_nwkTxBroadcastFrame 0144                                    _atStateVar 00E0  
                 nwkTxBroadcastFrame@newFrame 0027                                       IVTBASEH 003FD6  
                                     IVTBASEL 003FD5                                       IVTBASEU 003FD7  
                        CRC_ReverseValue@mask 0007                               setTxPower@power 0011  
                     setPreambleLength@length 0011                                       ?___flge 0010  
            __end_of_TMR0_SetInterruptHandler 99BA                                       ?___lmul 0002  
                          _explicitHeaderMode 9818                                       ?___omul 0002  
                                ??_UART1_Read 0002                      __size_of_print_hop_table 00E2  
                                     ?___wmul 0002                               _nwkDataReqQueue 00C1  
                                     ?_cmdMac 0001                                    ??_TMR0_ISR 0001  
                             __CFG_PPS1WAY$ON 000000                            NWK_OpenEndpoint@id 0004  
                        _nwkRxRejectDuplicate 2DD8                             _nwkDataReqConfirm 5FE0  
                     __size_of_set_timer0base 001A                                    ??_PHY_Init 003A  
                   __size_of_PHY_SetShortAddr 0002                           nwkTxAckReceived@ind 0008  
                            ??_NWK_RouteTable 0004                                       ?_memcpy 0008  
                                     ?_memset 0002                __size_of_nwkRxHandleIndication 00C4  
                         ___omul@multiplicand 000A                                ___lmul@product 000A  
                                  ??_NWK_Init 0006                            __end_of_SX1276Read 985E  
                           _SX1276WriteBuffer 9478                 __end_of_nwkRxHandleIndication 6C60  
                    __end_of_nwkTxTaskHandler 363A                            ?_nwkDataReqConfirm 0009  
                                     _CRCACCH 003963                                       _CRCACCL 003962  
                                     ?_printf 0075                               ?_PMD_Initialize 0001  
                                     _CRCDATH 003961                                       _CRCDATL 003960  
                           _UART1_Receive_ISR 76A4                                       _CRCCON0 003968  
                                     _CRCCON1 003969                            __size_of_nwkRxInit 004C  
                         _nwkRxServiceDataInd 7EAE                            __size_of_nwkTxInit 0046  
                                     ?_strchr 0002                           ?_explicitHeaderMode 0001  
                                     ?_strlen 0002                                       ?_strtok 000F  
                                     ?_strtol 0034                                       ?_strspn 0008  
                                     ?_strstr 000D                                       _CRCXORH 003967  
                                     _CRCXORL 003966                              ?_DATAEE_ReadByte 0002  
                           __end_of_crc16_app 7CB0                                 ?_nwkFrameFree 0002  
                          ?_SX1276WriteBuffer 0009                                 ?_nwkFrameInit 0001  
                                     _U1ERRIE 003DFA                                       _U1ERRIR 003DF9  
                               ?_nwkFrameNext 0002                                     ?_cmdBcast 0058  
                                   ?_cmdGetSF 0001                                     ?_cmdGetTX 0001  
                                     i1l13590 88F6                                       i1l13582 88DA  
                                     i1l13586 88E8                                       i1l13578 88CC  
                           _CRC_8BitDataWrite 990C                                       i2l14002 7736  
                                ?_Default_ISR 0001                          __size_of_UART1_Write 0042  
                                     i2l12842 94BA                                     ?_cmdNaddr 0001  
                                     i2l13980 9154                            ?_UART1_Receive_ISR 0001  
                                     i2l13978 9150                                       _U1RXPPS 003AE5  
                                   ?_cmdSetSF 0058                                     ?___xxtofl 0002  
                                   ?_cmdSetTX 0058                                 computeFRF@num 002B  
                                   ?_cmdReset 0001                                 appDataInd@ind 001C  
                                  ??_SYS_Init 003A                                       _OSCCON1 0039D9  
                                     _OSCCON3 0039DB                       nwkRouteNormalizeRanks@i 0003  
                         ??_nwkDataReqConfirm 000B                                       _IVTLOCK 003FD4  
                          __size_of_vfpfcnvrt 048C                                       _TBLPTRH 003FF7  
                                     _TBLPTRL 003FF6                            ?_CRC_8BitDataWrite 0001  
                                     _SPI1CLK 003D1C                                       _TBLPTRU 003FF8  
                    print_hop_table@atCommand 0058                                       _SPI1RXB 003D10  
                                     _NVMADRH 0039E1                                       _NVMADRL 0039E0  
                                     _SPI1TXB 003D11                                       _OSCTUNE 0039DE  
                                     _NVMCON2 0039E6                             __end_of_cmdGetCAD 9800  
                                     _SLRCONA 003A43                                       _SLRCONB 003A53  
                                     _SLRCONC 003A63                                 _cmdGetCADRSSI 96EA  
                           __end_of_cmdGetTTL 9A22                             __end_of___strtoxl 0EE8  
          __size_of_DATAEE_WriteByte_Platform 0044                             ?_NWK_RouteNextHop 0008  
                         ??_SX1276WriteBuffer 000B                        __size_of_cmdSetCADRSSI 00B0  
                                  cmdBcast@p1 007F                                ??_setFrequency 0027  
                  ?_DATAEE_WriteByte_Platform 0006                             __end_of_cmdSetAES 342C  
                         ??_UART1_Receive_ISR 0001                                     ?_get_rssi 0001  
                             placeTimer@timer 0002                             ?_nwkSecurityStart 0001  
                     __end_of_PHY_TaskHandler 9A0C                              ___lomod@dividend 0002  
                           __end_of_cmdSetTTL 9A1E                         nwkTxAckReceived@frame 000D  
                           __end_of_cmdRstCAD 9872                               ?_SPI1_ReadBlock 0003  
                             crc16_app@result 0019                            ??_NWK_RouteNextHop 000B  
                                  _computeFRF 40EE                            __end_of_UART1_Read 8C10  
                                   NWK_Init@i 0006                                 ?_nwkGroupInit 0001  
                         ??_CRC_8BitDataWrite 0002                       __size_of_nwkRouteRemove 003C  
                        DATAEE_WriteByte@bAdd 0002                            ??_nwkSecurityStart 0006  
                            ??_setCodingRate4 0011                          ?_nwkRxServiceDataInd 001C  
                        ??_explicitHeaderMode 0011                                       _TXPower 00D4  
                   __size_of_NWK_OpenEndpoint 0020                        _CircularBufferPopFront 5938  
                   INTERRUPT_Initialize@state 0002                             __end_of_enableCrc 98A8  
                                  _dwellTimer 00D3                                     ?_sendInfo 0001  
                                  _packetRSSI 00D9                                       __Hparam 0000  
                            ??_SYS_TimerStart 0012               __size_of_queue_serial_led_event 0054  
                        __size_of_setSyncWord 0010                                       __Lparam 0000  
                    __end_of_UART1_Initialize 74CA                        _CircularBufferPushBack 5C24  
                   __end_of_nwkDataReqConfirm 60C8                    __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                           ??_SPI1_WriteBlock 0007                                 ??_cmdGetRxCnt 005A  
                                  cmdSetAES@i 00A8                                 ?_PHY_DataConf 0001  
                               ?_nwkRxSendAck 002A                                 ?_nwkTxConfirm 0002  
                                     cad@RSSI 0012                           _nwkDataReqSendFrame 19F6  
                               ??_cmdBootLoad 0058                               __size_of___flge 00D0  
                       ?_nwkRxRejectDuplicate 0012                                       ___aodiv 4820  
                                     ___fladd 1D58                                       ___aomod 4C10  
                         nwkRouteRemove@entry 000B                      __size_of_NWK_TaskHandler 0012  
                                     _cadDone 00DD                     __end_of_SX1276WriteBuffer 949C  
                 __size_of_CircularBufferInit 00B6                                    cmdSetSF@p1 007F  
                             __size_of___lmul 005E                                    cmdSetSF@p2 0084  
                             __size_of___omul 009A                                       ___flmul 1672  
                                     ___fltol 6942                   __size_of_CircularBufferSize 005E  
                                     ___lldiv 7A96                               __size_of___wmul 002E  
                                     ___lodiv 636C                                       ___llmod 7F9C  
                             __size_of_cmdMac 004A                        __size_of_SYS_TimerInit 000C  
                                     ___lomod 6D20                                    cmdSetTX@p1 0081  
                                  cmdSetTX@p2 007F                                       ___lwdiv 8680  
                       nwkRxIndicateFrame@ind 002F                     __end_of_UART1_Receive_ISR 773C  
                                   ?_vfprintf 004E                                    cmdSend@cmd 0058  
                                     cad@temp 0014                          __size_of_PHY_DataInd 012C  
                    __end_of_processATCommand 43EE                          __size_of_PHY_DataReq 005C  
                                     _cmdAddr 95D2                             cmdSetCADRSSI@temp 0086  
                                     _aes_key 0214                                       _cmdRecv 5838  
                                  _current_sf 00D7                               _start_radio_cad 991C  
                                     _cmdSend 2B76                                       _channel 00D6  
                                     __pcinit 7004                               __size_of_memcpy 0072  
                             __size_of_memset 0154                                       __ramtop 1000  
                   __end_of_CRC_8BitDataWrite 991C                   __size_of_UART1_Transmit_ISR 0036  
                     __size_of_PHY_SetChannel 003E                                ??_nwkFrameFree 0004  
                                     __ptext0 9390                                       __ptext1 4278  
                                     __ptext2 86D6                                       __ptext3 8EFA  
                                     __ptext4 9050                                       __ptext5 845A  
                                     __ptext6 00B2                                       __ptext7 98CC  
                                     __ptext8 60C8                                       __ptext9 99DE  
                              ??_nwkFrameInit 0002                                ??_nwkFrameNext 0004  
                             __size_of_printf 0022                                       _get_lqi 756C  
                    SPI1_WriteBlock@blockSize 0005                                       _fhssReg 0500  
                           __end_of_initRadio 4820                                       cmdMac@i 0059  
                             __CFG_WRTAPP$OFF 000000                               __size_of_strchr 0084  
                             __size_of_strlen 0050                                    ??_cmdBcast 005A  
                             __size_of_strtok 00DC                               __size_of_strspn 0060  
                             __size_of_strtol 003E                               __size_of_strstr 00D8  
                                  ??_cmdGetSF 0058                                    ??_cmdGetTX 0058  
                       _OSCILLATOR_Initialize 9830                                 ?_nwkRouteInit 0001  
                               ??_cmdSetNaddr 005A                                  __size_of_cad 00BA  
                                __size_of_abs 003E                                    ??_cmdNaddr 0058  
                                  _placeTimer 3C12                                  __size_of_pad 00B6  
                                     _isalpha 91C6                                       _isdigit 91FA  
                               ??_cmdSendSink 0004                                    ??_cmdSetSF 005A  
                                  ??___xxtofl 0006                            _NWK_RouteFindEntry 814E  
                                     _net_key 0179                                    ??_cmdSetTX 005A  
                                     _receive 8DCA                                    ??_cmdReset 0002  
                    nwkFrameCommandInit@frame 0002                               _radio_state_var 00D2  
                                     _islower 915E                  __size_of_nwkFramePayloadSize 002A  
                    ??_PIN_MANAGER_Initialize 0002                                       _isspace 8AC0  
                             __CFG_WRTSAF$OFF 000000                                   ?_cmdGetRFCH 0001  
                                     _isupper 9192                                ?_cmdGetCADRSSI 0001  
                    __size_of_SYS_EncryptConf 00F4                             ?_executeATCommand 00A9  
                               ??_appDataConf 0009             __size_of_nwkRxHandleReceivedFrame 03C4  
                        __end_of_radio_engine 52F8                                   ?_cmdGetMode 0001  
                   ?_nwkRxHandleReceivedFrame 0029                                       _uartmsg 0120  
                                     atoi@neg 000F                          ?_nwkDataReqSendFrame 002A  
                               ?_PHY_SetPanId 0002                            _NWK_RouteFreeEntry 9086  
                     __size_of_PHY_SetRxState 0008                                       _tx_done 00E2  
                  __size_of_SYSTEM_Initialize 0022                            ??_executeATCommand 00AB  
                                     _strcspn 82DA                                       _strncmp 50BC  
                                     _toupper 877E                                    ??_get_rssi 0002  
                         SYS_TimerStart@timer 0010                          end_of_initialization 70B2  
                         ?_NWK_RouteFindEntry 0002                                       _strtoul 8A34  
                                 ?_cmdSetRFCH 0058                                     _SCANHADRH 00397A  
                                   _SCANHADRL 003979                                     _SCANHADRU 00397B  
                         __implicitHeaderMode 00DF                                ??_nwkGroupInit 0002  
                        __size_of_NWK_DataReq 0080             __end_of_DATAEE_WriteByte_Platform 8B48  
                                 ?_cmdSetAddr 0058                                     _SCANLADRH 003977  
                                   _SCANLADRL 003976                                   ?_cmdSetBaud 003A  
                                   _SCANLADRU 003978          nwkRxDuplicateRejectionTimerHandler@i 0015  
                                 ?_cmdSetSink 0001                             queueLedEvent@temp 001F  
                              ___omul@product 0012                         ??_nwkRxServiceDataInd 001D  
                                     memcpy@d 000F                                       memcpy@n 000C  
                                     memcpy@s 0011                                       fputc@fp 0006  
                                 ?_appDataInd 001C                                       memset@c 0004  
                                     memset@k 000A                                       memset@n 0006  
                                     memset@s 000C           __end_of_UART1_SetTxInterruptHandler 9974  
                 _UART1_SetTxInterruptHandler 9966                                       fputs@fp 000F  
                                   i1u1337_28 9620                   CRC_CalculatedResultGet@mask 000E  
                         ?_NWK_RouteFreeEntry 0002                             __end_of_nwkRxInit 8956  
                          _nwkRxIndicateFrame 363A                   nwkTxDelayTimerHandler@frame 0017  
                           __end_of_nwkTxInit 8AC0                                    _setTxPower 9366  
                                   i2u1341_48 76CE                                     i2u1341_49 76E0  
                                   i2u1343_48 76FA                                     i2u1343_49 770C  
                                   i2u1345_48 7722                                     i2u1347_48 9642  
                       NWK_RouteNewEntry@iter 0007                           nwkRxSendAck@command 002C  
                 nwkTxDelayTimerHandler@timer 0012                                     i2u1349_48 9662  
                          _NWK_SetSecurityKey 9504                                    ??_sendInfo 0058  
                        __size_of_NWK_SetAddr 001E                ??_UART1_SetOverrunErrorHandler 0004  
                      _nwkSecurityActiveFrame 00BF                               ___lldiv@divisor 001A  
                 __end_of_CircularBufferEmpty 928E                               ___lldiv@counter 0022  
                 __end_of_CircularBufferSpace 9086                 bootLoadApplication@buf_id_879 0033  
                              ??_PHY_DataConf 0005                                ??_nwkRxSendAck 002C  
                              ??_nwkTxConfirm 0005                      ??_nwkRouteNormalizeRanks 0002  
                           __end_of_vfpfcnvrt 0ABA                                    _nwkTxFrame 3DB2  
                                  _set_parity 83FA                                     _SPI1TCNTL 003D12  
                         ?_nwkRxIndicateFrame 0021                   __size_of_implicitHeaderMode 0018  
                                     postdec1 003FE5                                       postdec2 003FDD  
                                   _SPI1SSPPS 003AE0                                 _cmdSetCADRSSI 72CE  
                                     postinc0 003FEE                                       postinc1 003FE6  
                                     postinc2 003FDE                         nwkDataReqTxConf@frame 0004  
                            SYS_EncryptConf@i 000B                            _nwkSecurityEncrypt 00C7  
                         ?_NWK_SetSecurityKey 0013                          ??_NWK_RouteFindEntry 0005  
                      __size_of_Timer0Handler 004E                                    ??_vfprintf 0053  
                   __size_of_nwkDataReqTxConf 00A8                                       xtea@key 0004  
                                     xtea@sum 0032                                       strchr@c 0004  
                           UART1_Write@txData 0002                           _UART1_RxDataHandler 949C  
                           ?_nwkTxEncryptConf 0002                                       strchr@s 0002  
                       __CFG_WDTCPS$WDTCPS_31 000000                    __end_of_getSignalBandwidth 50BC  
                                     strlen@a 0004                             initRadio@wideRSSI 0038  
                  __end_of_setSignalBandwidth 12AE                                       strlen@s 0002  
                       nwkTxTaskHandler@frame 0016                      ?_CRC_CalculatedResultGet 0009  
                           ?_nwkRxTaskHandler 0001                    nwkRxHandleIndication@frame 003B  
                                     strspn@c 000A                                       strspn@i 000D  
                                     strtok@p 00B1                                       strtok@s 000F  
                                     strtol@s 0034                                       strspn@s 0008  
                                     strstr@h 000D                      _TMR0_SetInterruptHandler 99AC  
                                     strstr@n 000F                                     _PORTBbits 003FCB  
                        ??_NWK_RouteFreeEntry 0004                          _SYS_EncryptConf$5182 0004  
                          ??_nwkTxEncryptConf 0004                           __end_of_cmdGetRxCnt 89EA  
                          _nwkSecurityProcess 92BC                                ??_nwkRouteInit 0002  
                       NWK_SetSecurityKey@key 0013                             ??_print_hop_table 007F  
                         __end_of_cmdBootLoad 8F6E                      ??_nwkSecurityTaskHandler 003B  
                          ??_nwkRxTaskHandler 0040                                    _test_timer 01EB  
                                 ___fladd@grs 0038                        _queue_serial_led_event 86D6  
                              cmdSetRFCH@temp 0086                         setFrequency@frequency 0023  
                               ___xxtofl@sign 000A                           SPI1_ReadBlock@block 0003  
                                   _TRISBbits 003FC3                                ??_PHY_SetPanId 0004  
                       ??_nwkDataReqSendFrame 002C                                  strtol@endptr 0035  
                       __end_of_queueLedEvent 8F34                          ??_nwkRxIndicateFrame 0023  
                         ?_nwkSecurityProcess 0002                           _nwkFrameCommandInit 8820  
                               ?_NWK_SetPanId 0004                             placeTimer@timeout 0008  
                       nwkRxRejectDuplicate@i 0019                          ??_NWK_SetSecurityKey 0015  
                     nwkTxAckReceived@command 000B                                 _SYS_TimerInit 99C6  
                            __CFG_FEXTOSC$OFF 000000                      __end_of_DATAEE_WriteByte 8C92  
                         __end_of_cmdSetNaddr 7E30                          ?_UART1_RxDataHandler 0001  
                            ?_PHY_TaskHandler 0001                           __end_of_cmdSendSink 9A20  
                              PHY_DataInd@ind 0013                     NWK_RouteNextHop@multicast 000A  
                                 ?_computeFRF 0001                         CircularBufferInit@buf 000B  
                       CircularBufferInit@ctx 0009                                   ___flmul@grs 001E  
                     _nwkRxIndicateFrame$4860 002C                       _nwkRxIndicateFrame$4855 0027  
                     _nwkRxIndicateFrame$4856 0028                       _nwkRxIndicateFrame$4857 0029  
                     _nwkRxIndicateFrame$4858 002A                       _nwkRxIndicateFrame$4859 002B  
                         __end_of_appDataConf 9548                __size_of_nwkRouteErrorReceived 005C  
                       setSignalBandwidth@sbw 0023                               _SPI1_Initialize 9786  
               __end_of_nwkRouteErrorReceived 85CE                          print_hop_table@entry 005A  
                            ??_free_tx_buffer 0004                             _nwkTxAckWaitTimer 0196  
                           get_rssi@temp_rssi 0003                      ??_nwkTxDelayTimerHandler 0014  
                     __end_of_start_radio_cad 992C                        ??_nwkRxRejectDuplicate 0014  
                  __size_of_nwkDataReqConfirm 00E8                          _timer0ReloadVal16bit 00FD  
                              ?_cmdSetCADRSSI 0058                          ??_nwkSecurityProcess 0005  
                         __size_of_cmdGetRFCH 001C                         CircularBufferSize@ctx 0002  
                        ?_nwkFrameCommandInit 0002                      __end_of_CRC_ReverseValue 8680  
                         __size_of_cmdGetMode 0010                      __size_of_nwkSecurityInit 0010  
                  __size_of_SX1276WriteBuffer 0024                             ?_SX1276ReadBuffer 0009  
                              _set_timer0base 9704                  __end_of_INTERRUPT_Initialize 8CD2  
                     queue_serial_led_event@i 0022                       nwkRouteRemove@multicast 000A  
                            _PHY_SetShortAddr 9A24                                __end_of___flge 6874  
                  __size_of_UART1_Receive_ISR 0098                          __end_of_setFrequency 4F9A  
                              __end_of___lmul 8516                                __end_of___omul 76A4  
                                 vfpfcnvrt@ap 0049                                   vfpfcnvrt@fp 0046  
                                 vfpfcnvrt@ll 0060                                __end_of___wmul 92BC  
                            ??_nwkDataReqInit 0002                                __end_of_cmdMac 89A0  
                   __size_of_nwkRxDecryptConf 002A                            ??_SX1276ReadBuffer 000C  
                      __size_of_nwkFrameAlloc 00B4                           __size_of_cmdSetRFCH 00A2  
             CircularBufferPushBack@write_pos 001A                             __size_of_TMR0_ISR 0022  
                  __size_of_CRC_8BitDataWrite 0010                           __size_of_cmdSetAddr 0092  
                         __size_of_cmdSetBaud 006C                             __size_of_PHY_Init 0006  
                              __end_of_memcpy 7F9C                        ?_OSCILLATOR_Initialize 0001  
                         __size_of_cmdSetSink 0010                                __end_of_memset 4ACC  
                       nwkTxEncryptConf@frame 0002                     __size_of_nwkTxAckReceived 00C0  
                              SX1276Read@addr 000D                               setFrequency@num 002B  
                              SX1276Read@data 000E                           __size_of_appDataInd 00B2  
                          NWK_RouteNewEntry@i 0006                             __size_of_NWK_Init 005A  
                           ??_NWK_TaskHandler 0044                      nwkSecurityProcessMic@mic 001B  
                              __end_of_printf 94E2                           _nwkTxBroadcastFrame 4ACC  
              __size_of_nwkSecurityProcessMic 00EA                                 ??_loadMACAddr 0006  
                             ??_cmdGetCADRSSI 0058                                   ?_placeTimer 0002  
               __end_of_nwkSecurityProcessMic 5FE0                                __end_of_strchr 7C2C  
                              __end_of_strlen 8820                                __end_of_strtok 6526  
                              __end_of_strspn 82DA                                __end_of_strtol 8D10  
                              __end_of_strstr 65FE                           start_initialization 7004  
                             ___lodiv@divisor 000A                               ___lodiv@counter 001A  
                    __size_of_TMR0_Initialize 003E                         _nwkTxConvertPhyStatus 8FA8  
             __size_of_PIN_MANAGER_Initialize 0088                             cmdSetAES@key_type 00A4  
                              ??_NWK_SetPanId 0006                                   __end_of_cad 6E98  
                                 __end_of_abs 8D8C                                 nwkFrameInit@i 0002  
                                 __end_of_pad 6F4E                          __size_of_Default_ISR 0002  
                     ??_UART1_SetErrorHandler 0004                                ?_SYS_TimerInit 0001  
                       _nwkRouteFrameReceived 3A30                       __size_of_CRC_Initialize 006C  
                     ?_nwkRouteSendRouteError 002A                      __size_of_SYS_TaskHandler 000E  
                           __size_of_SYS_Init 000E                         ??_UART1_RxDataHandler 0001  
                               _Timer0Handler 88BC                                   putch@txData 0003  
                                  ivt0x8_base 0008                 __size_of_SYS_TimerTaskHandler 011A  
                     NWK_RouteFreeEntry@entry 0002                             ?_SYS_TimerStarted 0002  
                              _nwkRouteRemove 8EBE                                 _uart1RxBuffer 0110  
                        SYS_EncryptConf@block 000A                                  _msgIDCounter 00E3  
                           ??_SYS_EncryptConf 0002                   __end_of_bootLoadApplication 2646  
                          ??_SYS_TimerStarted 0004                             ___omul@multiplier 0002  
                               _uart1TxBuffer 0300                              _NWK_OpenEndpoint 95F2  
                             ___llmod@divisor 0006                          __end_of_nwkFrameFree 9738  
                        __end_of_nwkFrameInit 956A                     __size_of_DIO0_Receive_ISR 0096  
                                 ?_setTxPower 0001                          __end_of_nwkFrameNext 7A96  
                        ?_nwkTxBroadcastFrame 0024                               ___llmod@counter 000A  
                         DATAEE_ReadByte@bAdd 0002                                cmdSetNaddr@cmd 0058  
                      nwkRouteFrameSent@frame 0008                                 crc16_app@dptr 0013  
                      nwkRouteFrameSent@entry 000C                                 crc16_app@seed 0017  
                            __CFG_LPBOREN$OFF 000000                             _nwkRouteFrameSent 5E0A  
                      __end_of_set_timer0base 971E                                   ___strtoxl@a 002D  
                                 ___strtoxl@c 0033                                   ___strtoxl@s 0010  
                       ??_nwkFrameCommandInit 0004                               NWK_SetAddr@addr 0004  
                                 vfprintf@fmt 0050                                   ?_nwkTxFrame 0024  
                           nwkRouteRemove@dst 0008                                   ?_set_parity 0001  
             __end_of_CRC_CalculatedResultGet 67A4                                      ??___flge 0018  
               nwkTxDelayTimerHandler@restart 0016                              ??_PMD_Initialize 0002  
             __size_of_nwkRouteNormalizeRanks 003A                                      ??___lmul 000A  
                                    ??___omul 0012                                   _cmdGetRxCnt 89A0  
                                    ??___wmul 0006               CRC_CalculatedResultGet@xorValue 0009  
                                    ??_cmdMac 0058                            ?_nwkRouteFrameSent 0008  
                                 _cmdBootLoad 8F34                      _nwkTxAckWaitTimerHandler 7864  
                             ___strtoxl@limit 0027                        __size_of_TMR0_CallBack 0020  
                           NWK_SetPanId@panId 0004                                  cmdSetAES@cmd 0058  
                                 __pdataBANK0 00F7                                   __pdataBANK1 01DC  
                       CRC_8BitDataWrite@data 0002                                      ??_memcpy 000E  
                           SYS_TimerStarted@t 0004                                      ??_memset 0008  
                              cmdSendSink@cmd 0002                                 ??_SX1276Write 0010  
                              _PHY_SetChannel 8D8C                          __end_of_nwkGroupInit 9454  
                                  memset@dest 0002                                      ??_printf 0055  
                         __size_of_computeFRF 018A                             ?_nwkTxTaskHandler 0001  
                              _uart_baud_rate 00EA                                      ??_strchr 0006  
                       __size_of_radio_engine 011C                                      ??_strlen 0004  
                                    ??_strtok 0013                                      ??_strtol 0038  
                                    ??_strspn 000C                                      ??_strstr 0011  
                         ??_nwkRouteFrameSent 000A                                     ___fladd@a 002D  
                                   ___fladd@b 0029                                  cmdSetRFCH@p1 007F  
                                cmdSetRFCH@p2 0084                         PHY_SetChannel@channel 002F  
                              _symbolDuration 0126                                   __pbssBIGRAM 05BD  
             __size_of_nwkSecurityTaskHandler 0108                            ??_nwkTxTaskHandler 0014  
                                 _cmdSetNaddr 7DB2                                     ___flmul@a 0014  
                                   ___flmul@b 0010                                   __pbssCOMRAM 005E  
                              set_uart_baud@i 0004                                   _cmdSendSink 9A1E  
                            ??_SPI1_ReadBlock 0007                            _UART1_ErrorHandler 01ED  
                 __size_of_get_free_rx_buffer 0062                                 __pcstackBANK0 0060  
                                cmdSetSF@temp 0086                __end_of_nwkRouteSendRouteError 636C  
                     nwkRoutePrepareTx@header 0011                          setSpreadingFactor@sf 002B  
                            ___aodiv@dividend 0002                             __size_of_cmdBcast 01F8  
                           __size_of_cmdGetSF 0018                                   _CRCCON0bits 003968  
                                 _CRCCON1bits 003969                             __size_of_cmdGetTX 0018  
                   bootLoadApplication@buf_id 0032                                  cmdSetAddr@p1 0081  
                                cmdSetAddr@p2 007F                         _nwkDataReqTaskHandler 7CB0  
                    nwkFramePayloadSize@frame 0002                           cmdSetBaud@atCommand 003A  
                                   _crc16_app 7C2C                             __size_of_cmdNaddr 0018  
                        __end_of_PHY_DataConf 8EBE                                _PHY_SetRxState 99F2  
                        __end_of_nwkRxSendAck 5B30                                   _appDataConf 9526  
                        __end_of_nwkTxConfirm 9478                                  cmdSetTTL@cmd 0002  
                           __size_of___xxtofl 0164                             __size_of_cmdSetSF 00B0  
                           __size_of_cmdSetTX 00E2                                ?_Timer0Handler 0001  
                     __end_of_SPI1_Initialize 97A0                      _UART1_RxInterruptHandler 01F7  
                           __size_of_cmdReset 0004                        __end_of_nwkRouteRemove 8EFA  
               nwkRxHandleReceivedFrame@frame 0029                   __size_of_get_free_tx_buffer 0062  
                     nwkRxIndicateFrame@frame 0021                   __size_of_getSpreadingFactor 001A  
                   SYS_TimerTaskHandler@timer 0022                   __size_of_setSpreadingFactor 0102  
                                cmdSetTX@temp 0083                   ??_DATAEE_WriteByte_Platform 0009  
                         __end_of_loadMACAddr 8E82             __size_of_DATAEE_ReadByte_Platform 00F2  
                     ?_CircularBufferPopFront 0013                       CRC_ReverseValue@reverse 0005  
                             _SPI1_WriteBlock 90F2                                     _atCommand 0224  
                   ?_DATAEE_ReadByte_Platform 0006                                  _currentAddr0 00FA  
                                _currentAddr1 00F9                                 _nwkFrameAlloc 70B8  
                                   _cmdGetCAD 97E8                                 setSyncWord@sw 0011  
                           _nwkRoutePrepareTx 5520                           _nwkTxPhyActiveFrame 00BD  
                                _currentNetID 00F8                                     _cmdGetTTL 9A20  
                                   ___strtoxl 0ABA                                  _currentMsgID 00E7  
                           __size_of_get_rssi 002A                         ??_nwkTxBroadcastFrame 0026  
                     ?_CircularBufferPushBack 0013                                     _cmdSetAES 321E  
                ?_UART1_SetRxInterruptHandler 0002               nwkRouteSendRouteError@multicast 002E  
                                   _cmdSetTTL 9A1C                         _TMR0_InterruptHandler 01F3  
                          ?_nwkRoutePrepareTx 000D                                     _atoi$7500 0013  
                   __end_of_nwkRouteFrameSent 5EF6                                     _atoi$7498 0011  
                                   _atoi$7499 0015                                     _cmdRstCAD 985E  
                                   __pnvBANK0 00FD                                     __pnvBANK1 01ED  
                        __end_of_nwkRouteInit 88BC                               ??_cmdSetCADRSSI 005A  
                              _ATTimeoutTimer 00FB                           __size_of_placeTimer 01A0  
                         _nwkFramePayloadSize 933C                              ___lwdiv@dividend 0002  
                      _PIN_MANAGER_Initialize 7B20                                     _dtoa$7006 0031  
                            ?_start_radio_cad 0001                               ?_set_timer0base 0002  
             __size_of_nwkTxDelayTimerHandler 008C                             ?_UART1_Initialize 0001  
                   __size_of_NWK_RouteNextHop 004A          __end_of_UART1_SetFramingErrorHandler 999E  
       __size_of_UART1_SetFramingErrorHandler 000E                  _UART1_SetFramingErrorHandler 9990  
                           __size_of_sendInfo 0060                                  _radio_engine 51DC  
                        __end_of_PHY_SetPanId 9A24                                 __pmediumconst FCAA  
                                   _enableCrc 9896                                      ?___aodiv 0002  
                                    ?___fladd 0029                                      ?___aomod 0002  
                         UART1_Read@readValue 0002                           ??_nwkRoutePrepareTx 000F  
                   __size_of_nwkSecurityStart 019C                                     __ptext100 8C52  
                                   __ptext101 96B0                                 nwkGroupInit@i 0002  
                                   __ptext110 9A06                                     __ptext102 6F4E  
                            ___aodiv@quotient 0014                                     __ptext111 51DC  
                                   __ptext103 8680                                     __ptext200 9818  
                                   __ptext120 756C                                     __ptext112 6DDE  
                                   __ptext104 994A                                     __ptext201 9896  
                                   __ptext121 6942                                     __ptext113 991C  
                                   __ptext105 52F8                                     __ptext210 7F9C  
                                   __ptext202 98A8                                     __ptext130 8516  
                                   __ptext122 1672                                     __ptext114 9704  
                                   __ptext106 7864                                     __ptext211 7A96  
                                   __ptext203 9478                                     __ptext131 99BA  
                                   __ptext123 1D58                                     __ptext115 9408  
                                   __ptext107 872A                                     __ptext220 99D2  
                                   __ptext212 85CE                                     __ptext204 90F2  
                                   __ptext140 6A0C                                     __ptext132 562E  
                                   __ptext124 4D44                                     __ptext116 8E82  
                                   __ptext108 7980                                     __ptext221 956A  
                                   __ptext213 8A7A                                     __ptext205 9848  
                                   __ptext141 92BC                                     __ptext133 9884  
                                   __ptext125 9872                                     __ptext117 8FA8  
                                   __ptext109 9454                                     __ptext230 9786  
                                   __ptext222 7426                                     __ptext214 992C  
                                   __ptext206 93E0                                     __ptext150 6B9C  
                                   __ptext142 12AE                                     __ptext134 3F52  
                                   __ptext126 342C                                     __ptext118 773C  
                                   __ptext231 958C                                     __ptext223 9966  
                                   __ptext215 890A                                     __ptext207 9018  
                                   __ptext151 5A34                                     __ptext143 4ACC  
                                   __ptext135 5EF6                                     __ptext127 5E0A  
                                   __ptext119 92E8                                     __ptext240 9A28  
                                   __ptext232 7B20                                     __ptext224 9974  
                                   __ptext216 95F2                                     __ptext208 976C  
                                   __ptext160 933C                                     __ptext152 363A  
                                   __ptext144 2DD8                                     __ptext136 9312  
                                   __ptext128 8F6E                                     __ptext241 9634  
                                   __ptext233 9830                                     __ptext225 9982  
                                   __ptext217 886E                                     __ptext209 40EE  
                                   __ptext161 8218                                     __ptext153 716C  
                                   __ptext145 93B8                                     __ptext137 7E30  
                                   __ptext129 737E                                     __ptext242 9128  
                                   __ptext234 8C92                                     __ptext226 9990  
                                   __ptext218 942E                                     __ptext170 3DB2  
                                   __ptext162 5C24                                     __ptext154 7EAE  
                                   __ptext146 3C12                                     __ptext138 20A0  
                                   __ptext243 9654                                     __ptext235 80E2  
                                   __ptext227 999E                                     __ptext219 9548  
                                   __ptext171 5412                                     __ptext163 928E  
                                   __ptext155 6C60                                     __ptext147 8B48  
                                   __ptext139 5B30                                     __ptext244 76A4  
                                   __ptext236 95B0                                     __ptext228 8E08  
                                   __ptext180 5FE0                                     __ptext172 760A  
                                   __ptext164 65FE                                     __ptext156 7A0C  
                                   __ptext148 3A30                                     __ptext245 9A2A  
                                   __ptext237 9612                                     __ptext229 99AC  
                                   __ptext181 9526                                     __ptext173 5520  
                                   __ptext165 628C                                     __ptext157 8572  
                                   __ptext149 6AD4                                     __ptext246 9A2C  
                                   __ptext238 9A26                                     __ptext190 0EE8  
                                   __ptext182 8C10                                     __ptext174 89EA  
                                   __ptext166 8820                                     __ptext158 8EBE  
                                   __ptext247 9A12                                     __ptext239 88BC  
                                   __ptext191 9738                                     __ptext183 9958  
                                   __ptext175 814E                                     __ptext167 971E  
                                   __ptext159 9086                                     __ptext248 949C  
                                   __ptext192 4F9A                                     __ptext184 99C6  
                                   __ptext176 922E                                     __ptext168 7CB0  
                                   __ptext249 0000                                     __ptext193 455E  
                                   __ptext185 9A0C                                     __ptext177 70B8  
                                   __ptext169 19F6                                     __ptext194 67A4  
                                   __ptext186 46C2                                     __ptext178 4978  
                                   __ptext195 9752                                     __ptext187 8FE0  
                                   __ptext179 7F2A                                     __ptext196 4E70  
                                   __ptext188 9366                                     __ptext197 90BC  
                                   __ptext189 5736                        __end_of_PHY_SetChannel 8DCA  
                                   __ptext198 8DCA                        __size_of_set_uart_baud 00CE  
                                   __ptext199 9800                                      ?___flmul 0010  
                                    ?___fltol 0039                                      ?___lldiv 0016  
                                    ?___lodiv 0002                                      ?___llmod 0002  
                  CircularBufferInit@buf_size 000D                                      ?___lomod 0002  
                                    ?___lwdiv 0002                            ??_UART1_Initialize 0004  
                            _nwkDataReqTxConf 737E                                      ?_cmdAddr 0001  
                       NWK_RouteNextHop@entry 000B                                      ?_cmdRecv 0001  
                                    ?_cmdSend 0058                              _uart1RxLastError 00CC  
                           ?_processATCommand 0001                                 ??_UART1_Write 0002  
                           __size_of_vfprintf 0060                                      ?_get_lqi 0001  
                      __size_of_nwkRouteFrame 00D6                            ??_processATCommand 00AD  
                             ___lomod@divisor 000A                        __CFG_BBSIZE$BBSIZE_512 000000  
                           ??_nwkSecurityInit 0002                         _nwkRxHandleIndication 6B9C  
                                   _fhssdebug 00D5                               ___lomod@counter 0012  
                   nwkSecurityProcess@encrypt 0004      __end_of_UART1_DefaultOverrunErrorHandler 9A2C  
   __size_of_UART1_DefaultOverrunErrorHandler 0002            ??_UART1_DefaultOverrunErrorHandler 0001  
           ?_UART1_DefaultOverrunErrorHandler 0001              _UART1_DefaultOverrunErrorHandler 9A2A  
                                    ?_isalpha 0002                                      ?_isdigit 0002  
                         __size_of_setTxPower 002A                        ?_nwkTxConvertPhyStatus 0001  
                      __end_of_PHY_SetRxState 99FA                                      ?_receive 0001  
                        ?_nwkFramePayloadSize 0002                               ??_SYS_TimerInit 0002  
                                ??_cmdGetRFCH 0058                                      ?_islower 0002  
                                    ?_isspace 0002                                      ?_isupper 0002  
                      ?_nwkRouteFrameReceived 000B                           __end_of_SX1276Write 98BA  
                                ??_cmdGetMode 0058                        _nwkRouteNormalizeRanks 8F6E  
                                   _initRadio 46C2                                    ?_crc16_app 0013  
                       DIA_ReadByte@flashAddr 0002                                     cmdSend@p1 0088  
                                   cmdSend@p2 0086                              ___lwdiv@quotient 0006  
              __end_of_CircularBufferPopFront 5A34                           __size_of_nwkTxFrame 01A0  
                             ?_nwkRouteRemove 0008                     nwkRxRejectDuplicate@entry 001D  
                         __size_of_set_parity 0060                                 _TMR0_CallBack 9612  
                   __end_of_nwkRoutePrepareTx 562E                     nwkSecurityProcessMic@tmic 0021  
                              __size_of_fputc 006C                     nwkSecurityProcessMic@vmic 001D  
                              __size_of_fputs 003E                     nwkRxRejectDuplicate@shift 0018  
                                    ?_strcspn 0008                      __size_of_DATAEE_ReadByte 001E  
                                    ?_strncmp 0002                                      ?_toupper 0008  
                                 _U1ERRIRbits 003DF9                                  ??_cmdSetRFCH 005A  
                              __size_of_srand 0038                                ?_nwkFrameAlloc 000E  
                                    ?_strtoul 0034                                __size_of_putch 000A  
                                ??_cmdSetAddr 005A                                  ??_cmdSetBaud 003C  
                        _INTERRUPT_Initialize 8C92                                      _U1CTSPPS 003AE6  
                            __cadBackoffTimer 00F5                __end_of_CircularBufferPushBack 5D18  
                                ??_cmdSetSink 0058                                    ?_cmdGetCAD 0001  
                        SX1276ReadBuffer@addr 000C                           ___strtoxl@conv_done 0026  
                                  ?_cmdGetTTL 0001                                    ?___strtoxl 0010  
                                ??_appDataInd 001D                                    nwkRxInit@i 0005  
                           ??_TMR0_Initialize 0004                       __size_of_SYS_EncryptReq 007E  
                     __size_of_get_timer0base 0026                          SX1276ReadBuffer@size 000B  
                               ??_setSyncWord 0011                             free_tx_buffer@req 0002  
                              ___wmul@product 0006                                      _LATAbits 003FBA  
       UART1_SetErrorHandler@interruptHandler 0002                                      _LATCbits 003FBC  
    nwkRxDuplicateRejectionTimerHandler@timer 0012                   __size_of_explicitHeaderMode 0018  
                                  ?_cmdSetAES 0058                                      _SCANCON0 00397C  
                                    _EUIDbyte 01B0                                    ?_cmdSetTTL 0002  
                                 _ledTimerVar 012F                             ??_SYS_TaskHandler 004D  
                      _nwkSecurityTaskHandler 562E                                    ?_cmdRstCAD 0001  
                                    _IPR3bits 003983                                      _SCANTRIG 00397D  
                                    _PIE3bits 003993                                appDataConf@req 0007  
                          cmdSetAddr@tempaddr 0083                           __CFG_BORV$VBOR_2P45 000000  
                                 _ledStateVar 00D1                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
                           _NWK_RouteNewEntry 6AD4                                     _sinkAddr0 00E6  
                                   _sinkAddr1 00E5                 ??_UART1_SetRxInterruptHandler 0004  
                       __size_of_setFrequency 012A                     __size_of_executeATCommand 057C  
                  __end_of_CircularBufferInit 7004                    ??_TMR0_SetInterruptHandler 0004  
                                    _PIR0bits 0039A0                                     _nwkGroups 0200  
                  __end_of_CircularBufferSize 84B8                   nwkRouteFrameReceived@header 0015  
                                    _PIR2bits 0039A2                                      _SPI1BAUD 003D19  
                                    _PIR3bits 0039A3                                      _SPI1CON0 003D14  
                                    _SPI1CON1 003D15                                      _SPI1CON2 003D16  
                               ??_PHY_DataInd 0014                                     _nwkRxInit 890A  
                               ??_PHY_DataReq 0014                               _print_hop_table 60C8  
                                   _nwkTxInit 8A7A                           ___strtoxl@is_signed 0016  
                          ?_NWK_RouteNewEntry 0002                       _eeprom_write_flags_enum 00EB  
                              _ATVersionMajor FDB8                          __end_of_NWK_SetPanId 9692  
                                  ?_enableCrc 0001                                _ATVersionMinor FDB7  
                     _setSignalBandwidth$8392 002B                            __end_of_cmdGetRFCH 96EA  
                           _nwkSecurityOffset 00C8                                      _TMR0_ISR 95B0  
                   _DATAEE_WriteByte_Platform 8B04                               ?_PHY_SetChannel 0001  
                  __end_of_UART1_Transmit_ISR 915E                            __end_of_cmdGetMode 990C  
                           _nwkSecurityVector 0169                                      _PHY_Init 9A0C  
               ?_UART1_SetFramingErrorHandler 0002                              initRadio@version 0037  
                            _nwkRxDecryptConf 9312                                     _vfpfcnvrt 062E  
                                    _NWK_Init 85CE                                   cmdBcast@cmd 0058  
                                   _txTimeOut 00F1                            SPI1_ReadBlock@data 0007  
                                   _xtoa$7024 0032                                     _xtoa$7025 0034  
                     ?_queue_serial_led_event 0001                                     _rx_buffer 0A76  
                          NWK_GroupIsMember@i 0006                            __end_of_cmdSetRFCH 756C  
                        free_tx_buffer@buf_id 0006                           ??_NWK_RouteNewEntry 0004  
                           ___wmul@multiplier 0002                              _nwkTxAckReceived 6C60  
                          __end_of_cmdSetAddr 7864                          getSignalBandwidth@bw 0015  
                          __end_of_cmdSetBaud 8076             nwkRxHandleReceivedFrame@broadcast 002D  
                          __end_of_cmdSetSink 98EC                        nwkDataReqSendFrame@req 002A  
                                   _tx_buffer 086A                            __end_of_appDataInd 721E  
                        setSignalBandwidth@bw 002F                         ??_nwkFramePayloadSize 0004  
                                 _loadMACAddr 8E46                               ?_PHY_SetRxState 0001  
                      ?_nwkDataReqTaskHandler 0001                       __end_of_SPI1_WriteBlock 9128  
                             ??_Timer0Handler 0001                        _nwkTxDelayTimerHandler 7980  
                                    _SYS_Init 9958                           __end_of_UART1_Write 8BCE  
                       DATAEE_WriteByte@bData 0004                                 ??_NWK_DataReq 0004  
                 __end_of_nwkRxServiceDataInd 7F2A                                    ?_initRadio 0001  
                                _isspace$7525 0008                       __size_of_NWK_RouteTable 000A  
                              _CRC_Initialize 80E2                                ?_TMR0_CallBack 0001  
                                 strtoul@base 0038                                 _set_uart_baud 6874  
                                  vfpfcnvrt@c 0068                              ?_SPI1_Initialize 0001  
                          _getSignalBandwidth 4F9A                            _setSignalBandwidth 0EE8  
                                 _INTCON0bits 003FD2                             ___lmul@multiplier 0002  
                       __size_of_nwkFrameFree 001A                       nwkSecurityProcess@frame 0002  
                                   copy_data0 7018                                     copy_data1 703A  
                       __size_of_nwkFrameInit 0022                         ?_INTERRUPT_Initialize 0001  
                            get_rssi@rssi_reg 0002                     __size_of_nwkTxEncryptConf 0012  
                       __size_of_nwkFrameNext 008A                   nwkDataReqSendFrame@mcHeader 002D  
            __size_of_CRC_CalculatedResultGet 00D0                      __end_of_PHY_SetShortAddr 9A26  
                                ??_computeFRF 0023                 nwkRxRejectDuplicate@freeEntry 001B  
                           ?_DATAEE_WriteByte 0002                                  _setFrequency 4E70  
                   __size_of_nwkRxTaskHandler 00C8                                 ??_NWK_SetAddr 0006  
                      _uart1TxBufferRemaining 00FF                                ___strtoxl$7685 001F  
                              ___strtoxl$7686 0025                                ___strtoxl$7687 0021  
                              ___strtoxl$7688 0023                  _nwkRxDuplicateRejectionTable 03C0  
                           cmdGetRxCnt@buf_id 005C                  _nwkRxDuplicateRejectionTimer 01A3  
                   __end_of_NWK_RouteNewEntry 6B9C                                 _nwkRouteFrame 65FE  
                          ??_DATAEE_WriteByte 0005                                   _ledtasksbuf 01BC  
                            _DIO0_Receive_ISR 773C                                 _nwkRouteTable 0274  
                         ?_getSignalBandwidth 000F                           ?_setSignalBandwidth 0023  
                  __size_of_nwkRouteFrameSent 00EC               nwkSecurityTaskHandler@micStatus 003C  
                               ?_cmdSetParity 0058                                  _uart1RxCount 00CD  
                         SYS_EncryptConf@text 0008                    __end_of_implicitHeaderMode 9818  
                                    __Hrparam 0000                        __end_of_ATVersionMajor FDB9  
                      __end_of_ATVersionMinor FDB8                             computeFRF@num_mod 0027  
                                   memcpy@tmp 000E                                    ?_nwkRxInit 0001  
                                  vfprintf@ap 0052                                      __Lrparam 0000  
                                  vfprintf@fp 004E                                    ?_nwkTxInit 0001  
                             _NWK_TaskHandler 9872                         __size_of_nwkGroupInit 0026  
                          __CFG_BOREN$SBORDIS 000000                                ___strtoxl@base 0014  
                             _nwkRxAckControl 00CB                                   cmdSetAES@p1 00A6  
                                 cmdSetAES@p2 009F                           __end_of_setSyncWord 98FC  
                              ___strtoxl@sign 002B                                ___strtoxl@skip 002C  
                          cmdSetCADRSSI@CHstr 0081                       ??_OSCILLATOR_Initialize 0002  
                           ?_CRC_ReverseValue 0002                       __size_of_setCodingRate4 0036  
                           appDataInd@dataptr 001E                __end_of_queue_serial_led_event 872A  
                            __size_of___aodiv 0158                              __size_of___fladd 0348  
                nwkRouteErrorReceived@command 000F                              __size_of___aomod 0134  
                 __size_of_NWK_RouteFindEntry 0068                              __size_of___flmul 0384  
                            __size_of___fltol 00CA                  DATAEE_ReadByte_Platform@addr 0006  
                            __size_of___lldiv 008A                              __size_of___lodiv 00DE  
                __size_of_CircularBufferEmpty 002E                              __size_of___llmod 006E  
                    processATCommand@data_855 00AF                              __size_of___lomod 00BE  
                                  ?_vfpfcnvrt 0046                         SYS_TimerStarted@timer 0002  
                       nwkRxTaskHandler@frame 0042                              __size_of___lwdiv 0056  
                __size_of_CircularBufferSpace 0036                              __size_of_cmdAddr 0020  
                          ??_CRC_ReverseValue 0004   __end_of_nwkRxDuplicateRejectionTimerHandler 877E  
__size_of_nwkRxDuplicateRejectionTimerHandler 0054         ??_nwkRxDuplicateRejectionTimerHandler 0014  
        ?_nwkRxDuplicateRejectionTimerHandler 0012           _nwkRxDuplicateRejectionTimerHandler 872A  
                      nwkRoutePrepareTx@frame 000D                               ___aodiv@divisor 000A  
                                 _SX1276Write 98A8                           __end_of_PHY_DataInd 4E70  
                      ?_nwkRxHandleIndication 003B                           __end_of_PHY_DataReq 8572  
                            __size_of_cmdRecv 0100                              __size_of_cmdSend 0262  
                 __end_of_nwkDataReqSendFrame 1D58                           NWK_LinearizeLqi@val FDA7  
                             ___aodiv@counter 0012                                   cmdSetTX@cmd 0058  
                     __size_of_SYS_TimerStart 0028                          ??_getSignalBandwidth 0013  
                 __size_of_NWK_RouteFreeEntry 0036                      __end_of_NWK_OpenEndpoint 9612  
                        ??_setSignalBandwidth 0027                            __end_of_computeFRF 4278  
                       __size_of_PHY_DataConf 003C                         __size_of_nwkRxSendAck 00FC  
                       __size_of_nwkTxConfirm 0024                      _nwkRxHandleReceivedFrame 12AE  
                                    _cmdBcast 3838                                  _nwkFrameFree 971E  
        __size_of_UART1_SetRxInterruptHandler 000E                                  _nwkFrameInit 9548  
                                    _cmdGetSF 97D0                                  ??_placeTimer 0004  
                                    _cmdGetTX 97B8                                  _nwkFrameNext 7A0C  
                            __size_of_get_lqi 009E                                   _currentMode 00E4  
                                    _cmdNaddr 97A0                                      ___xxtofl 455E  
                                    _cmdSetSF 721E                        __end_of_CRC_Initialize 814E  
                                    _cmdSetTX 61AA                               _SYS_EncryptConf 5B30  
                                    _cmdReset 9A18                             _set_hop_table_ttl 98CC  
                            __size_of_isalpha 0034                              __size_of_isdigit 0034  
                                    __pivt0x8 0008                              __size_of_receive 003E  
                             ___lwdiv@divisor 0004                   nwkRouteSendRouteError@frame 0031  
                                 ??_crc16_app 0019                              __size_of_islower 0034  
                              ?_set_uart_baud 0001                              __size_of_isspace 0044  
                             ___lwdiv@counter 0008                                 ?_DIA_ReadByte 0002  
                             ??_nwkFrameAlloc 0010                     __size_of_SX1276ReadBuffer 0028  
                                    __ptext10 61AA                                      __ptext11 9A1C  
                                    __ptext20 800A                                      __ptext12 98DC  
                                    __ptext21 644A                                      __ptext13 721E  
                                    __ptext30 84B8                                      __ptext22 827A  
                                    __ptext14 74CA                                      __ptext31 985E  
                                    __ptext23 82DA                                      __ptext15 78F4  
                                    __ptext40 97B8                                      __ptext32 9A18  
                                    __ptext24 77D2                                      __ptext16 7DB2  
                                    __ptext41 9A20                                      __ptext33 5838  
                                    __ptext25 321E                                      __ptext17 98EC  
                                    __ptext50 6526                                      __ptext42 97D0  
                                    __ptext34 5938                                      __ptext26 9A1E  
                                    __ptext18 72CE                                      __ptext51 50BC  
                                    __ptext43 89A0                                      __ptext35 9260  
                                    __ptext27 2B76                                      __ptext19 8CD2  
                                    __ptext60 877E                                      __ptext52 7BA8  
                                    __ptext44 96CE                                      __ptext36 97A0  
                                    __ptext28 8A34                                      __ptext61 915E  
                                    __ptext53 81B6                                      __ptext45 98FC  
                                    __ptext37 8956                                      __ptext29 0ABA  
                                    __ptext70 8D10                                      __ptext62 9192  
                                    __ptext54 7D32                                      __ptext46 96EA  
                                    __ptext38 9A00                                      __ptext71 8076  
                                    __ptext63 91C6                                      __ptext55 95D2  
                                    __ptext47 97E8                                      __ptext39 833A  
                                    __ptext80 993C                                      __ptext72 99E8  
                                    __ptext64 300A                                      __ptext56 94C0  
                                    __ptext48 8F34                                      __ptext81 8BCE  
                                    __ptext73 8B8C                                      __ptext65 6D20  
                                    __ptext57 839A                                      __ptext49 3838  
                                    __ptext90 990C                                      __ptext82 2380  
                                    __ptext74 8D4E                                      __ptext66 636C  
                                    __ptext58 062E                                      __ptext91 99F2  
                                    __ptext83 6874                                      __ptext75 4C10  
                                    __ptext67 2646                                      __ptext59 28F6  
                                    __ptext92 8D8C                                      __ptext84 83FA  
                                    __ptext76 4820                                      __ptext68 6E98  
                                    __ptext93 9504                                      __ptext85 8E46  
                                    __ptext77 43EE                                      __ptext69 87D0  
                                    __ptext94 9674                                      __ptext86 94E2  
                                    __ptext78 8AC0                                      __ptext95 9A22  
                                    __ptext87 7C2C                                      __ptext79 91FA  
                                    __ptext96 9692                                      __ptext88 66D4  
                                    __ptext97 9A24                                      __ptext89 8628  
                                    __ptext98 8B04                                      __ptext99 5D18  
                            __size_of_isupper 0034                            ?_set_hop_table_ttl 0058  
                 __size_of_nwkRxIndicateFrame 01FE                    __size_of_nwkRoutePrepareTx 010E  
                        set_hop_table_ttl@cmd 0058                   __size_of_NWK_SetSecurityKey 0022  
              __size_of_UART1_SetErrorHandler 000E                                      _get_rssi 92E8  
                                    _fhssList FCAB                 __end_of_UART1_SetErrorHandler 99AC  
                       __size_of_nwkRouteInit 004E                   DATAEE_WriteByte@GIEBitValue 0005  
                               nwkRouteInit@i 0002                              __size_of_strcspn 0060  
                            __size_of_strncmp 0120                              __size_of_toupper 0052  
                    nwkTxBroadcastFrame@frame 0024                                   ??_cmdGetCAD 0058  
                            __size_of_strtoul 0046                                      _ledtimer 00EF  
                                    _ledqueue 0400                                   ??_cmdGetTTL 0002  
                                 ??___strtoxl 0017                                ?_nwkRouteFrame 0033  
                     __end_of_print_hop_table 61AA                                  _nwkGroupInit 942E  
                                    cmdRecv@i 005A                               cmdSetCADRSSI@p1 007F  
                             cmdSetCADRSSI@p2 0084                                 __size_of_cmdI 0006  
                         __end_of_NWK_DataReq 7DB2                                 __size_of_idle 000C  
                               __size_of_atoi 0170                                 __size_of_main 0028  
                               __size_of_dtoa 02B0                           ??_set_hop_table_ttl 005A  
                               __size_of_rand 010E                                   ??_cmdSetAES 005A  
                  ??_nwkTxAckWaitTimerHandler 0014                                ??_cmdSetParity 005A  
                               __size_of_utoa 0214                                 __size_of_xtea 02E0  
                                ??_setTxPower 0011                                   ??_cmdSetTTL 0004  
                               __size_of_xtoa 0280                         __size_of_PHY_SetPanId 0002  
                                 ??_cmdRstCAD 0058                               cmdSetAES@AESstr 007F  
        __end_of_TMR0_DefaultInterruptHandler 9A28         __size_of_TMR0_DefaultInterruptHandler 0002  
                _TMR0_DefaultInterruptHandler 9A26                             ??_DATAEE_ReadByte 0004  
                        __CFG_WDTCWS$WDTCWS_7 000000                           get_timer0base@timer 0002  
                                    _sendInfo 833A                 DATAEE_WriteByte_Platform@addr 0006  
                __end_of_FirmwareVersionMajor FDB7                 DATAEE_WriteByte_Platform@data 0008  
                                 _IVTLOCKbits 003FD4                            cmdSetBaud@tempbaud 003C  
                __end_of_FirmwareVersionMinor FDB6                           set_timer0base@timer 0002  
                       _nwkRouteErrorReceived 8572                        SX1276ReadBuffer@buffer 0009  
                    __size_of_PHY_TaskHandler 0006              nwkRxHandleReceivedFrame@mcHeader 002F  
                      nwkRxDecryptConf@status 0004                                  ??_nwkTxFrame 0026  
                  nwkRouteFrameReceived@frame 000B                     _UART1_OverrunErrorHandler 01EF  
                         __end_of_NWK_SetAddr 96B0                           sendOKMessage@F16699 01E6  
                          __end_of_placeTimer 3DB2                                  ??_set_parity 0002  
                            _NWK_RouteNextHop 89EA  UART1_SetOverrunErrorHandler@interruptHandler 0002  
                  nwkRouteFrameReceived@entry 0013            __size_of_UART1_DefaultErrorHandler 0006  
                 __size_of_nwkSecurityProcess 002C                                  ?_cmdGetRxCnt 0058  
                                 ??_enableCrc 0011                                  _PHY_DataConf 8E82  
                                _nwkRxSendAck 5A34                                  _nwkTxConfirm 9454  
                            _nwkSecurityStart 3F52                  __end_of_SYS_TimerTaskHandler 5412  
                   __size_of_SYS_TimerStarted 0044                                  ?_cmdBootLoad 0001  
                  ?_UART1_DefaultErrorHandler 0001                        __size_of_queueLedEvent 003A  
                                  strtol@base 0036                 __size_of_nwkRxRejectDuplicate 0232  
                                    _vfprintf 839A                                     printf@fmt 0075  
               nwkTxAckWaitTimerHandler@frame 0017                             _UART1_is_rx_ready 993C  
                       cmdSetParity@atCommand 0058                                      _syncList 01DC  
                 nwkSecurityTaskHandler@frame 003D                 nwkTxAckWaitTimerHandler@timer 0012  
                         setFrequency@num_mod 0027                                   _UART1_Write 8B8C  
            __end_of_DATAEE_ReadByte_Platform 5E0A                              ___aomod@dividend 0002  
                   __end_of_set_hop_table_ttl 98DC                            ?_UART1_is_rx_ready 0001  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0004  
                              _vfpfcnvrt$7039 006B                   __end_of_UART1_RxDataHandler 94C0  
                            cmdGetRxCnt@count 005B                                  _nwkRouteInit 886E  
                                ?_cmdSetNaddr 0058                                   _uart1RxHead 005E  
                                ?_cmdSendSink 0002                     setCodingRate4@denominator 0013  
                             ?_CRC_Initialize 0001                                   _uart1TxHead 00D0  
                             ??_TMR0_CallBack 0001                                   _uart1RxTail 00CE  
                                 _NVMCON1bits 0039E5                                   _phyRxBuffer 0340  
                            ?_SPI1_WriteBlock 0003                                   _uart1TxTail 00CF  
                                    memcpy@d1 0008                            __end_of_setTxPower 9390  
                                    memcpy@s1 000A                                ??_DIA_ReadByte 0006  
                       __end_of_cmdGetCADRSSI 9704                                   ??_initRadio 0033  
                        SPI1_WriteBlock@block 0003                         _nwkSecurityProcessMic 5EF6  
                                ?_appDataConf 0007                                      isalpha@c 0002  
                                    isdigit@c 0002                        ??_INTERRUPT_Initialize 0002  
                         DIO0_Receive_ISR@ind 0046                           ??_UART1_is_rx_ready 0002  
                                _PHY_SetPanId 9A22                              appDataInd@buf_id 0020  
                                  _SX1276Read 9848                            __end_of_nwkTxFrame 3F52  
                          __end_of_set_parity 845A                                     xtea@delta 0025  
                    __end_of_nwkDataReqTxConf 7426                                      intlevel1 0000  
                                    intlevel2 0000                      get_free_rx_buffer@buf_id 0002  
                   nwkRouteSendRouteError@dst 002C                     nwkRouteSendRouteError@src 002A  
                              _SYS_EncryptReq 7E30                                _get_timer0base 9408  
                   __size_of_nwkTxTaskHandler 020E                        NWK_RouteNewEntry@entry 0009  
                          SYS_EncryptReq@text 0036                       __end_of_NWK_TaskHandler 9884  
                                    islower@c 0002                              ??_set_timer0base 0005  
                                    isspace@c 0002                   __end_of_nwkFrameCommandInit 886E  
                            ___lldiv@dividend 0016                       ?_PIN_MANAGER_Initialize 0001  
                  __size_of_NWK_RouteNewEntry 00C8                       _nwkSecurityActiveFrames 00CA  
                                 _setSyncWord 98EC                             __CFG_CLKOUTEN$OFF 000000  
                       __size_of_NWK_SetPanId 001E                                      isupper@c 0002  
                                   strncmp@_l 0002                         nwkRxDecryptConf@frame 0002  
                                   strncmp@_r 0004                              _executeATCommand 00B2  
                          get_timer0base@tval 0004                   NWK_RouteFindEntry@multicast 0004  
                      nwkRxServiceDataInd@ind 001C                            set_timer0base@tval 0003  
                     NWK_OpenEndpoint@handler 0002                           _uart1RxStatusBuffer 0100  
               ?_TMR0_DefaultInterruptHandler 0001                                   ??_nwkRxInit 0005  
                                 ??_nwkTxInit 0002                               _nwkSecurityInit 992C  
                             _nwkTxDelayTimer 0189                             _setPreambleLength 9752  
                                 _PHY_DataInd 4D44                               _nwkSecuritySize 00C9  
                                 _PHY_DataReq 8516                          PHY_SetShortAddr@addr 0002  
                __size_of_bootLoadApplication 02C6                                    _SPI1SCKPPS 003ADE  
                                  _SPI1SDIPPS 003ADF                                     strtok@sep 0011  
                                    printf@ap 0057                     __end_of_UART1_is_rx_ready 994A  
                                  _UART1_Read 8BCE  UART1_SetFramingErrorHandler@interruptHandler 0002  
                          ?_setPreambleLength 0011             __end_of_UART1_DefaultErrorHandler 9A18  
                             ___aomod@divisor 000A                       __end_of_SYS_EncryptConf 5C24  
                    nwkRouteErrorReceived@ind 000D                                   ??_vfpfcnvrt 004A  
                             ___aomod@counter 0012                        nwkSecurityStart@header 000D  
                         SPI1_WriteBlock@data 0007                       ??_nwkTxConvertPhyStatus 0002  
                     __size_of_free_tx_buffer 0042                       ??_nwkRouteFrameReceived 000D  
                  __end_of_get_free_rx_buffer 827A                       ?_nwkRouteNormalizeRanks 0001  
                           SYS_EncryptReq@key 0038                                      xtea@text 0002  
                            ??_nwkRouteRemove 000B                              _halTimerIrqCount 00C3  
                         ??_setPreambleLength 0013                              ___lldiv@quotient 001E  
                                 _uart_parity 00E9                               _TMR0_Initialize 8E08  
                             ??_set_uart_baud 0002                                      strcspn@c 000A  
                                    strcspn@i 000D                                      strcspn@s 0008  
                           _current_baud_rate 012A                    __end_of_get_free_tx_buffer 8218  
                                    strncmp@l 0009                                      strncmp@n 0006  
                  __end_of_getSpreadingFactor 9752                                      strncmp@r 000B  
                                    toupper@c 0008                    __end_of_setSpreadingFactor 5838  
                   __size_of_UART1_Initialize 00A4                                _NWK_RouteTable 99DE  
                    DIO0_Receive_ISR@irqFlags 0045                               _SYS_TaskHandler 994A  
                                 _NWK_DataReq 7D32                                      strstr@nl 0011  
                     __size_of_nwkDataReqInit 000C                                      strtoul@s 0034  
                     _CRC_CalculatedResultGet 66D4                      _UART1_TxInterruptHandler 01F5  
                 __end_of_nwkTxBroadcastFrame 4C10                                 _queueLedEvent 8EFA  
                                _NWK_SetPanId 9674                        __end_of_SYS_EncryptReq 7EAE  
                      __end_of_get_timer0base 942E                                 ___fladd@signs 0035  
                            _nwkTxEncryptConf 9884                           __end_of_Default_ISR 9A2A  
                             ??_nwkRouteFrame 0035                               cmdSetRFCH@CHstr 0081  
                   __size_of_processATCommand 0176                                  ___aodiv@sign 0013  
                            _nwkRxTaskHandler 6A0C                       ?_nwkSecurityTaskHandler 0001  
              __end_of_PIN_MANAGER_Initialize 7BA8                      __end_of_nwkRxDecryptConf 933C  
                     SPI1_ReadBlock@blockSize 0005                         NWK_RouteFindEntry@dst 0002  
                                ___fladd@aexp 0036                                  ___fladd@bexp 0037  
                                 _NWK_SetAddr 9692                                cmdBcast@buf_id 0081  
                            ?_print_hop_table 0058                      __end_of_nwkTxAckReceived 6D20  
                ?_UART1_SetTxInterruptHandler 0002                        ?_nwkRouteErrorReceived 000D  
                          _eeprom_write_flags 00C5                              ??_PHY_SetChannel 002F  
                   __end_of_setPreambleLength 976C                                  ___aomod@sign 0013  
                         NWK_RouteFindEntry@i 0007                      get_free_tx_buffer@buf_id 0002  
                  __end_of_spi1_configuration FDB5                    nwkRxRejectDuplicate@header 0012  
              CRC_CalculatedResultGet@reverse 0010                 CRC_CalculatedResultGet@result 0011  
                       __end_of_cmdSetCADRSSI 737E  
