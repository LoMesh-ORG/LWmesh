

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jun 13 19:27:06 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F26K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1,inline
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1,inline
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1,inline
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1,inline
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1,group=2
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1,group=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1,group=2
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1,group=2
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1,group=2
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1,group=1
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1,group=1
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1,group=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1,group=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=2,class=CODE,delta=1
   238                           	psect	text213,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=2,class=CODE,delta=1
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	text217,global,reloc=2,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=2,class=CODE,delta=1
   245                           	psect	text220,global,reloc=2,class=CODE,delta=1
   246                           	psect	text221,global,reloc=2,class=CODE,delta=1
   247                           	psect	text222,global,reloc=2,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	text224,global,reloc=2,class=CODE,delta=1
   250                           	psect	text225,global,reloc=4,class=CODE,delta=1
   251                           	psect	text226,global,reloc=2,class=CODE,delta=1
   252                           	psect	text227,global,reloc=2,class=CODE,delta=1
   253                           	psect	text228,global,reloc=2,class=CODE,delta=1
   254                           	psect	text229,global,reloc=4,class=CODE,delta=1
   255                           	psect	text230,global,reloc=4,class=CODE,delta=1
   256                           	psect	text231,global,reloc=2,class=CODE,delta=1
   257                           	psect	text232,global,reloc=4,class=CODE,delta=1
   258                           	psect	text233,global,reloc=2,class=CODE,delta=1
   259                           	psect	text234,global,reloc=2,class=CODE,delta=1
   260                           	psect	text235,global,reloc=2,class=CODE,delta=1
   261                           	psect	text236,global,reloc=2,class=CODE,delta=1
   262                           	psect	text237,global,reloc=2,class=CODE,delta=1
   263                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   264                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   265                           	psect	text238,global,reloc=2,class=CODE,delta=1
   266                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   267  0000                     
   268                           ; Version 2.10
   269                           ; Generated 31/07/2019 GMT
   270                           ; 
   271                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   272                           ; All rights reserved.
   273                           ; 
   274                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   275                           ; 
   276                           ; Redistribution and use in source and binary forms, with or without modification, are
   277                           ; permitted provided that the following conditions are met:
   278                           ; 
   279                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   280                           ;        conditions and the following disclaimer.
   281                           ; 
   282                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   283                           ;        of conditions and the following disclaimer in the documentation and/or other
   284                           ;        materials provided with the distribution.
   285                           ; 
   286                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   287                           ;        software without specific prior written permission.
   288                           ; 
   289                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   290                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   291                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   292                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   293                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   294                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   295                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   296                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   297                           ; 
   298                           ; 
   299                           ; Code-generator required, PIC18F26K42 Definitions
   300                           ; 
   301                           ; SFR Addresses
   302  0000                     
   303                           	psect	idataBANK0
   304  009077                     __pidataBANK0:
   305                           	opt callstack 0
   306                           
   307                           ;initializer for _RSSITarget
   308  009077  B0                 	db	176
   309                           
   310                           ;initializer for _currentNetID
   311  009078  55                 	db	85
   312                           
   313                           ;initializer for _currentAddr1
   314  009079  34                 	db	52
   315                           
   316                           ;initializer for _currentAddr0
   317  00907A  12                 	db	18
   318                           
   319                           ;initializer for _ATTimeoutTimer
   320  00907B  03E8               	dw	1000
   321                           
   322                           	psect	idataBANK1
   323  009070                     __pidataBANK1:
   324                           	opt callstack 0
   325                           
   326                           ;initializer for sendOKMessage@F16691
   327  009070  4F                 	db	79
   328  009071  4B                 	db	75
   329  009072  0D                 	db	13
   330  009073  0A                 	db	10
   331  009074  00                 	db	0
   332                           
   333                           ;initializer for _test_timer
   334  009075  1388               	dw	5000
   335                           
   336                           	psect	idataBANK2
   337  00904A                     __pidataBANK2:
   338                           	opt callstack 0
   339                           
   340                           ;initializer for _syncList
   341  00904A  12                 	db	18
   342  00904B  23                 	db	35
   343  00904C  45                 	db	69
   344  00904D  56                 	db	86
   345  00904E  67                 	db	103
   346  00904F  78                 	db	120
   347  009050  89                 	db	137
   348  009051  9A                 	db	154
   349  009052  AB                 	db	171
   350  009053  BC                 	db	188
   351                           
   352                           	psect	mediumconst
   353  00FCAA                     __pmediumconst:
   354                           	opt callstack 0
   355  00FCAA  00                 	db	0
   356  00FCAB                     _fhssList:
   357                           	opt callstack 0
   358  00FCAB  7680               	dw	30336
   359  00FCAD  3600               	dw	13824
   360  00FCAF  FB00               	dw	64256
   361  00FCB1  361E               	dw	13854
   362  00FCB3  7F80               	dw	32640
   363  00FCB5  363D               	dw	13885
   364  00FCB7  0400               	dw	1024
   365  00FCB9  365C               	dw	13916
   366  00FCBB  8880               	dw	34944
   367  00FCBD  367A               	dw	13946
   368  00FCBF  0D00               	dw	3328
   369  00FCC1  3699               	dw	13977
   370  00FCC3  9180               	dw	37248
   371  00FCC5  36B7               	dw	14007
   372  00FCC7  1600               	dw	5632
   373  00FCC9  36D6               	dw	14038
   374  00FCCB  9A80               	dw	39552
   375  00FCCD  36F4               	dw	14068
   376  00FCCF  1F00               	dw	7936
   377  00FCD1  3713               	dw	14099
   378  00FCD3  DCC0               	dw	56512
   379  00FCD5  3703               	dw	14083
   380  00FCD7  5840               	dw	22592
   381  00FCD9  36E5               	dw	14053
   382  00FCDB  D3C0               	dw	54208
   383  00FCDD  36C6               	dw	14022
   384  00FCDF  4F40               	dw	20288
   385  00FCE1  36A8               	dw	13992
   386  00FCE3  CAC0               	dw	51904
   387  00FCE5  3689               	dw	13961
   388  00FCE7  4640               	dw	17984
   389  00FCE9  366B               	dw	13931
   390  00FCEB  C1C0               	dw	49600
   391  00FCED  364C               	dw	13900
   392  00FCEF  3D40               	dw	15680
   393  00FCF1  362E               	dw	13870
   394  00FCF3  B8C0               	dw	47296
   395  00FCF5  360F               	dw	13839
   396  00FCF7  3440               	dw	13376
   397  00FCF9  35F1               	dw	13809
   398  00FCFB  AFC0               	dw	44992
   399  00FCFD  35D2               	dw	13778
   400  00FCFF  D560               	dw	54624
   401  00FD01  35F8               	dw	13816
   402  00FD03  59E0               	dw	23008
   403  00FD05  3617               	dw	13847
   404  00FD07  DE60               	dw	56928
   405  00FD09  3635               	dw	13877
   406  00FD0B  6BE0               	dw	27616
   407  00FD0D  3691               	dw	13969
   408  00FD0F  F060               	dw	61536
   409  00FD11  36AF               	dw	13999
   410  00FD13  74E0               	dw	29920
   411  00FD15  36CE               	dw	14030
   412  00FD17  F960               	dw	63840
   413  00FD19  36EC               	dw	14060
   414  00FD1B  7DE0               	dw	32224
   415  00FD1D  370B               	dw	14091
   416  00FD1F  C020               	dw	49184
   417  00FD21  371A               	dw	14106
   418  00FD23  4710               	dw	18192
   419  00FD25  3604               	dw	13828
   420  00FD27  6CB0               	dw	27824
   421  00FD29  362A               	dw	13866
   422  00FD2B  5010               	dw	20496
   423  00FD2D  3641               	dw	13889
   424  00FD2F  75B0               	dw	30128
   425  00FD31  3667               	dw	13927
   426  00FD33  5910               	dw	22800
   427  00FD35  367E               	dw	13950
   428  00FD37  7EB0               	dw	32432
   429  00FD39  36A4               	dw	13988
   430  00FD3B  6210               	dw	25104
   431  00FD3D  36BB               	dw	14011
   432  00FD3F  87B0               	dw	34736
   433  00FD41  36E1               	dw	14049
   434  00FD43  6B10               	dw	27408
   435  00FD45  36F8               	dw	14072
   436  00FD47  90B0               	dw	37040
   437  00FD49  371E               	dw	14110
   438  00FD4B  AD50               	dw	44368
   439  00FD4D  3707               	dw	14087
   440  00FD4F  28D0               	dw	10448
   441  00FD51  36E9               	dw	14057
   442  00FD53  A450               	dw	42064
   443  00FD55  36CA               	dw	14026
   444  00FD57  C0F0               	dw	49392
   445  00FD59  36B3               	dw	14003
   446  00FD5B  9B50               	dw	39760
   447  00FD5D  368D               	dw	13965
   448  00FD5F  B7F0               	dw	47088
   449  00FD61  3676               	dw	13942
   450  00FD63  9250               	dw	37456
   451  00FD65  3650               	dw	13904
   452  00FD67  AEF0               	dw	44784
   453  00FD69  3639               	dw	13881
   454  00FD6B  8950               	dw	35152
   455  00FD6D  3613               	dw	13843
   456  00FD6F  A5F0               	dw	42480
   457  00FD71  35FC               	dw	13820
   458  00FD73  50E0               	dw	20704
   459  00FD75  35DA               	dw	13786
   460  00FD77  04D0               	dw	1232
   461  00FD79  35F5               	dw	13813
   462  00FD7B  2A70               	dw	10864
   463  00FD7D  361B               	dw	13851
   464  00FD7F  0DD0               	dw	3536
   465  00FD81  3632               	dw	13874
   466  00FD83  3C70               	dw	15472
   467  00FD85  3695               	dw	13973
   468  00FD87  1FD0               	dw	8144
   469  00FD89  36AC               	dw	13996
   470  00FD8B  4570               	dw	17776
   471  00FD8D  36D2               	dw	14034
   472  00FD8F  28D0               	dw	10448
   473  00FD91  36E9               	dw	14057
   474  00FD93  4E70               	dw	20080
   475  00FD95  370F               	dw	14095
   476  00FD97  0E40               	dw	3648
   477  00FD99  371B               	dw	14107
   478  00FD9B  A5F0               	dw	42480
   479  00FD9D  35FC               	dw	13820
   480  00FD9F  F130               	dw	61744
   481  00FDA1  3648               	dw	13896
   482  00FDA3  75B0               	dw	30128
   483  00FDA5  3667               	dw	13927
   484  00FDA7                     __end_of_fhssList:
   485                           	opt callstack 0
   486  00FDA7  03                 	db	3
   487  00FDA8  08                 	db	8
   488  00FDA9  1A                 	db	26
   489  00FDAA  40                 	db	64
   490  00FDAB  80                 	db	128
   491  00FDAC  BE                 	db	190
   492  00FDAD  E6                 	db	230
   493  00FDAE  F7                 	db	247
   494  00FDAF  FC                 	db	252
   495  00FDB0                     __end_ofNWK_LinearizeLqi@val:
   496                           	opt callstack 0
   497  00FDB0  82                 	db	130
   498  00FDB1  C0                 	db	192
   499  00FDB2  03                 	db	3
   500  00FDB3  03                 	db	3
   501  00FDB4  00                 	db	0
   502  00FDB5                     __end_of_spi1_configuration:
   503                           	opt callstack 0
   504  00FDB5  01                 	db	1
   505  00FDB6                     __end_of_FirmwareVersionMinor:
   506                           	opt callstack 0
   507  00FDB6  02                 	db	2
   508  00FDB7                     __end_of_FirmwareVersionMajor:
   509                           	opt callstack 0
   510  00FDB7  00                 	db	0
   511  00FDB8                     __end_of_ATVersionMinor:
   512                           	opt callstack 0
   513  00FDB8  01                 	db	1
   514  00FDB9                     __end_of_ATVersionMajor:
   515                           	opt callstack 0
   516  00FDB9                     STR_64:
   517                           
   518                           ; BSR set to: 0
   519  00FDB9  44                 	db	68	;'D'
   520  00FDBA  53                 	db	83	;'S'
   521  00FDBB  54                 	db	84	;'T'
   522  00FDBC  3A                 	db	58	;':'
   523  00FDBD  25                 	db	37
   524  00FDBE  30                 	db	48	;'0'
   525  00FDBF  34                 	db	52	;'4'
   526  00FDC0  58                 	db	88	;'X'
   527  00FDC1  20                 	db	32
   528  00FDC2  4E                 	db	78	;'N'
   529  00FDC3  58                 	db	88	;'X'
   530  00FDC4  54                 	db	84	;'T'
   531  00FDC5  3A                 	db	58	;':'
   532  00FDC6  25                 	db	37
   533  00FDC7  30                 	db	48	;'0'
   534  00FDC8  34                 	db	52	;'4'
   535  00FDC9  58                 	db	88	;'X'
   536  00FDCA  20                 	db	32
   537  00FDCB  53                 	db	83	;'S'
   538  00FDCC  43                 	db	67	;'C'
   539  00FDCD  4F                 	db	79	;'O'
   540  00FDCE  3A                 	db	58	;':'
   541  00FDCF  25                 	db	37
   542  00FDD0  75                 	db	117	;'u'
   543  00FDD1  20                 	db	32
   544  00FDD2  4C                 	db	76	;'L'
   545  00FDD3  51                 	db	81	;'Q'
   546  00FDD4  49                 	db	73	;'I'
   547  00FDD5  3A                 	db	58	;':'
   548  00FDD6  25                 	db	37
   549  00FDD7  75                 	db	117	;'u'
   550  00FDD8  0D                 	db	13
   551  00FDD9  0A                 	db	10
   552  00FDDA  00                 	db	0
   553  00FDDB                     STR_137:
   554                           
   555                           ; BSR set to: 0
   556  00FDDB  46                 	db	70	;'F'
   557  00FDDC  69                 	db	105	;'i'
   558  00FDDD  72                 	db	114	;'r'
   559  00FDDE  6D                 	db	109	;'m'
   560  00FDDF  77                 	db	119	;'w'
   561  00FDE0  61                 	db	97	;'a'
   562  00FDE1  72                 	db	114	;'r'
   563  00FDE2  65                 	db	101	;'e'
   564  00FDE3  20                 	db	32
   565  00FDE4  56                 	db	86	;'V'
   566  00FDE5  65                 	db	101	;'e'
   567  00FDE6  72                 	db	114	;'r'
   568  00FDE7  73                 	db	115	;'s'
   569  00FDE8  69                 	db	105	;'i'
   570  00FDE9  6F                 	db	111	;'o'
   571  00FDEA  6E                 	db	110	;'n'
   572  00FDEB  20                 	db	32
   573  00FDEC  25                 	db	37
   574  00FDED  31                 	db	49	;'1'
   575  00FDEE  75                 	db	117	;'u'
   576  00FDEF  2E                 	db	46
   577  00FDF0  25                 	db	37
   578  00FDF1  30                 	db	48	;'0'
   579  00FDF2  32                 	db	50	;'2'
   580  00FDF3  75                 	db	117	;'u'
   581  00FDF4  0D                 	db	13
   582  00FDF5  0A                 	db	10
   583  00FDF6  00                 	db	0
   584  00FDF7                     STR_136:
   585                           
   586                           ; BSR set to: 0
   587  00FDF7  41                 	db	65	;'A'
   588  00FDF8  54                 	db	84	;'T'
   589  00FDF9  20                 	db	32
   590  00FDFA  43                 	db	67	;'C'
   591  00FDFB  6F                 	db	111	;'o'
   592  00FDFC  6D                 	db	109	;'m'
   593  00FDFD  6D                 	db	109	;'m'
   594  00FDFE  61                 	db	97	;'a'
   595  00FDFF  6E                 	db	110	;'n'
   596  00FE00  64                 	db	100	;'d'
   597  00FE01  20                 	db	32
   598  00FE02  53                 	db	83	;'S'
   599  00FE03  65                 	db	101	;'e'
   600  00FE04  74                 	db	116	;'t'
   601  00FE05  20                 	db	32
   602  00FE06  25                 	db	37
   603  00FE07  31                 	db	49	;'1'
   604  00FE08  75                 	db	117	;'u'
   605  00FE09  2E                 	db	46
   606  00FE0A  25                 	db	37
   607  00FE0B  30                 	db	48	;'0'
   608  00FE0C  32                 	db	50	;'2'
   609  00FE0D  75                 	db	117	;'u'
   610  00FE0E  0D                 	db	13
   611  00FE0F  0A                 	db	10
   612  00FE10  00                 	db	0
   613  00FE11                     STR_32:
   614                           
   615                           ; BSR set to: 0
   616  00FE11  43                 	db	67	;'C'
   617  00FE12  41                 	db	65	;'A'
   618  00FE13  44                 	db	68	;'D'
   619  00FE14  20                 	db	32
   620  00FE15  43                 	db	67	;'C'
   621  00FE16  4F                 	db	79	;'O'
   622  00FE17  55                 	db	85	;'U'
   623  00FE18  4E                 	db	78	;'N'
   624  00FE19  54                 	db	84	;'T'
   625  00FE1A  45                 	db	69	;'E'
   626  00FE1B  52                 	db	82	;'R'
   627  00FE1C  20                 	db	32
   628  00FE1D  3D                 	db	61	;'='
   629  00FE1E  20                 	db	32
   630  00FE1F  25                 	db	37
   631  00FE20  30                 	db	48	;'0'
   632  00FE21  32                 	db	50	;'2'
   633  00FE22  58                 	db	88	;'X'
   634  00FE23  0D                 	db	13
   635  00FE24  0A                 	db	10
   636  00FE25  00                 	db	0
   637  00FE26                     
   638                           ; BSR set to: 0
   639  00FE26  4D                 	db	77	;'M'
   640  00FE27  4F                 	db	79	;'O'
   641  00FE28  44                 	db	68	;'D'
   642  00FE29  45                 	db	69	;'E'
   643  00FE2A  20                 	db	32
   644  00FE2B  3D                 	db	61	;'='
   645  00FE2C  20                 	db	32
   646  00FE2D  45                 	db	69	;'E'
   647  00FE2E  4E                 	db	78	;'N'
   648  00FE2F  44                 	db	68	;'D'
   649  00FE30  20                 	db	32
   650  00FE31  4E                 	db	78	;'N'
   651  00FE32  4F                 	db	79	;'O'
   652  00FE33  44                 	db	68	;'D'
   653  00FE34  45                 	db	69	;'E'
   654  00FE35  0D                 	db	13
   655  00FE36  0A                 	db	10
   656  00FE37  00                 	db	0
   657  00FE38                     STR_34:
   658                           
   659                           ; BSR set to: 0
   660  00FE38  4D                 	db	77	;'M'
   661  00FE39  4F                 	db	79	;'O'
   662  00FE3A  44                 	db	68	;'D'
   663  00FE3B  45                 	db	69	;'E'
   664  00FE3C  20                 	db	32
   665  00FE3D  3D                 	db	61	;'='
   666  00FE3E  20                 	db	32
   667  00FE3F  52                 	db	82	;'R'
   668  00FE40  45                 	db	69	;'E'
   669  00FE41  50                 	db	80	;'P'
   670  00FE42  45                 	db	69	;'E'
   671  00FE43  41                 	db	65	;'A'
   672  00FE44  54                 	db	84	;'T'
   673  00FE45  45                 	db	69	;'E'
   674  00FE46  52                 	db	82	;'R'
   675  00FE47  0D                 	db	13
   676  00FE48  0A                 	db	10
   677  00FE49  00                 	db	0
   678  00FE4A                     STR_10:
   679                           
   680                           ; BSR set to: 0
   681  00FE4A  41                 	db	65	;'A'
   682  00FE4B  44                 	db	68	;'D'
   683  00FE4C  44                 	db	68	;'D'
   684  00FE4D  52                 	db	82	;'R'
   685  00FE4E  3D                 	db	61	;'='
   686  00FE4F  25                 	db	37
   687  00FE50  30                 	db	48	;'0'
   688  00FE51  32                 	db	50	;'2'
   689  00FE52  58                 	db	88	;'X'
   690  00FE53  25                 	db	37
   691  00FE54  30                 	db	48	;'0'
   692  00FE55  32                 	db	50	;'2'
   693  00FE56  58                 	db	88	;'X'
   694  00FE57  0D                 	db	13
   695  00FE58  0A                 	db	10
   696  00FE59  00                 	db	0
   697  00FE5A                     STR_92:
   698                           
   699                           ; BSR set to: 0
   700  00FE5A  2B                 	db	43
   701  00FE5B  43                 	db	67	;'C'
   702  00FE5C  41                 	db	65	;'A'
   703  00FE5D  44                 	db	68	;'D'
   704  00FE5E  43                 	db	67	;'C'
   705  00FE5F  4F                 	db	79	;'O'
   706  00FE60  55                 	db	85	;'U'
   707  00FE61  4E                 	db	78	;'N'
   708  00FE62  54                 	db	84	;'T'
   709  00FE63  45                 	db	69	;'E'
   710  00FE64  52                 	db	82	;'R'
   711  00FE65  52                 	db	82	;'R'
   712  00FE66  53                 	db	83	;'S'
   713  00FE67  54                 	db	84	;'T'
   714  00FE68  00                 	db	0
   715  00FE69                     STR_63:
   716                           
   717                           ; BSR set to: 0
   718  00FE69  52                 	db	82	;'R'
   719  00FE6A  58                 	db	88	;'X'
   720  00FE6B  43                 	db	67	;'C'
   721  00FE6C  4E                 	db	78	;'N'
   722  00FE6D  54                 	db	84	;'T'
   723  00FE6E  3D                 	db	61	;'='
   724  00FE6F  25                 	db	37
   725  00FE70  75                 	db	117	;'u'
   726  00FE71  2F                 	db	47
   727  00FE72  25                 	db	37
   728  00FE73  75                 	db	117	;'u'
   729  00FE74  0D                 	db	13
   730  00FE75  0A                 	db	10
   731  00FE76  00                 	db	0
   732  00FE77                     STR_40:
   733                           
   734                           ; BSR set to: 0
   735  00FE77  54                 	db	84	;'T'
   736  00FE78  58                 	db	88	;'X'
   737  00FE79  20                 	db	32
   738  00FE7A  50                 	db	80	;'P'
   739  00FE7B  4F                 	db	79	;'O'
   740  00FE7C  57                 	db	87	;'W'
   741  00FE7D  45                 	db	69	;'E'
   742  00FE7E  52                 	db	82	;'R'
   743  00FE7F  3D                 	db	61	;'='
   744  00FE80  25                 	db	37
   745  00FE81  75                 	db	117	;'u'
   746  00FE82  0D                 	db	13
   747  00FE83  0A                 	db	10
   748  00FE84  00                 	db	0
   749  00FE85                     STR_14:
   750                           
   751                           ; BSR set to: 0
   752  00FE85  4E                 	db	78	;'N'
   753  00FE86  41                 	db	65	;'A'
   754  00FE87  44                 	db	68	;'D'
   755  00FE88  44                 	db	68	;'D'
   756  00FE89  52                 	db	82	;'R'
   757  00FE8A  3D                 	db	61	;'='
   758  00FE8B  25                 	db	37
   759  00FE8C  30                 	db	48	;'0'
   760  00FE8D  32                 	db	50	;'2'
   761  00FE8E  58                 	db	88	;'X'
   762  00FE8F  0D                 	db	13
   763  00FE90  0A                 	db	10
   764  00FE91  00                 	db	0
   765  00FE92                     STR_45:
   766                           
   767                           ; BSR set to: 0
   768  00FE92  43                 	db	67	;'C'
   769  00FE93  41                 	db	65	;'A'
   770  00FE94  44                 	db	68	;'D'
   771  00FE95  20                 	db	32
   772  00FE96  52                 	db	82	;'R'
   773  00FE97  53                 	db	83	;'S'
   774  00FE98  53                 	db	83	;'S'
   775  00FE99  3D                 	db	61	;'='
   776  00FE9A  25                 	db	37
   777  00FE9B  69                 	db	105	;'i'
   778  00FE9C  0D                 	db	13
   779  00FE9D  0A                 	db	10
   780  00FE9E  00                 	db	0
   781  00FE9F                     STR_36:
   782                           
   783                           ; BSR set to: 0
   784  00FE9F  43                 	db	67	;'C'
   785  00FEA0  48                 	db	72	;'H'
   786  00FEA1  41                 	db	65	;'A'
   787  00FEA2  4E                 	db	78	;'N'
   788  00FEA3  4E                 	db	78	;'N'
   789  00FEA4  45                 	db	69	;'E'
   790  00FEA5  4C                 	db	76	;'L'
   791  00FEA6  3D                 	db	61	;'='
   792  00FEA7  25                 	db	37
   793  00FEA8  75                 	db	117	;'u'
   794  00FEA9  0D                 	db	13
   795  00FEAA  0A                 	db	10
   796  00FEAB  00                 	db	0
   797  00FEAC                     STR_90:
   798                           
   799                           ; BSR set to: 0
   800  00FEAC  2B                 	db	43
   801  00FEAD  43                 	db	67	;'C'
   802  00FEAE  41                 	db	65	;'A'
   803  00FEAF  44                 	db	68	;'D'
   804  00FEB0  43                 	db	67	;'C'
   805  00FEB1  4F                 	db	79	;'O'
   806  00FEB2  55                 	db	85	;'U'
   807  00FEB3  4E                 	db	78	;'N'
   808  00FEB4  54                 	db	84	;'T'
   809  00FEB5  45                 	db	69	;'E'
   810  00FEB6  52                 	db	82	;'R'
   811  00FEB7  3F                 	db	63	;'?'
   812  00FEB8  00                 	db	0
   813  00FEB9                     STR_135:
   814                           
   815                           ; BSR set to: 0
   816  00FEB9  4C                 	db	76	;'L'
   817  00FEBA  6F                 	db	111	;'o'
   818  00FEBB  52                 	db	82	;'R'
   819  00FEBC  61                 	db	97	;'a'
   820  00FEBD  20                 	db	32
   821  00FEBE  4D                 	db	77	;'M'
   822  00FEBF  65                 	db	101	;'e'
   823  00FEC0  73                 	db	115	;'s'
   824  00FEC1  68                 	db	104	;'h'
   825  00FEC2  0D                 	db	13
   826  00FEC3  0A                 	db	10
   827  00FEC4  00                 	db	0
   828  00FEC5                     STR_3:
   829                           
   830                           ; BSR set to: 0
   831  00FEC5  4E                 	db	78	;'N'
   832  00FEC6  4F                 	db	79	;'O'
   833  00FEC7  54                 	db	84	;'T'
   834  00FEC8  20                 	db	32
   835  00FEC9  4F                 	db	79	;'O'
   836  00FECA  4B                 	db	75	;'K'
   837  00FECB  3A                 	db	58	;':'
   838  00FECC  25                 	db	37
   839  00FECD  75                 	db	117	;'u'
   840  00FECE  0D                 	db	13
   841  00FECF  0A                 	db	10
   842  00FED0  00                 	db	0
   843  00FED1                     STR_76:
   844                           
   845                           ; BSR set to: 0
   846  00FED1  2B                 	db	43
   847  00FED2  53                 	db	83	;'S'
   848  00FED3  48                 	db	72	;'H'
   849  00FED4  4F                 	db	79	;'O'
   850  00FED5  57                 	db	87	;'W'
   851  00FED6  48                 	db	72	;'H'
   852  00FED7  4F                 	db	79	;'O'
   853  00FED8  50                 	db	80	;'P'
   854  00FED9  53                 	db	83	;'S'
   855  00FEDA  3F                 	db	63	;'?'
   856  00FEDB  00                 	db	0
   857  00FEDC                     STR_96:
   858                           
   859                           ; BSR set to: 0
   860  00FEDC  2B                 	db	43
   861  00FEDD  43                 	db	67	;'C'
   862  00FEDE  41                 	db	65	;'A'
   863  00FEDF  44                 	db	68	;'D'
   864  00FEE0  52                 	db	82	;'R'
   865  00FEE1  53                 	db	83	;'S'
   866  00FEE2  53                 	db	83	;'S'
   867  00FEE3  49                 	db	73	;'I'
   868  00FEE4  3D                 	db	61	;'='
   869  00FEE5  00                 	db	0
   870  00FEE6                     STR_132:
   871                           
   872                           ; BSR set to: 0
   873  00FEE6  2B                 	db	43
   874  00FEE7  54                 	db	84	;'T'
   875  00FEE8  58                 	db	88	;'X'
   876  00FEE9  50                 	db	80	;'P'
   877  00FEEA  4F                 	db	79	;'O'
   878  00FEEB  57                 	db	87	;'W'
   879  00FEEC  45                 	db	69	;'E'
   880  00FEED  52                 	db	82	;'R'
   881  00FEEE  3D                 	db	61	;'='
   882  00FEEF  00                 	db	0
   883  00FEF0                     STR_94:
   884                           
   885                           ; BSR set to: 0
   886  00FEF0  2B                 	db	43
   887  00FEF1  43                 	db	67	;'C'
   888  00FEF2  41                 	db	65	;'A'
   889  00FEF3  44                 	db	68	;'D'
   890  00FEF4  52                 	db	82	;'R'
   891  00FEF5  53                 	db	83	;'S'
   892  00FEF6  53                 	db	83	;'S'
   893  00FEF7  49                 	db	73	;'I'
   894  00FEF8  3F                 	db	63	;'?'
   895  00FEF9  00                 	db	0
   896  00FEFA                     STR_130:
   897                           
   898                           ; BSR set to: 0
   899  00FEFA  2B                 	db	43
   900  00FEFB  54                 	db	84	;'T'
   901  00FEFC  58                 	db	88	;'X'
   902  00FEFD  50                 	db	80	;'P'
   903  00FEFE  4F                 	db	79	;'O'
   904  00FEFF  57                 	db	87	;'W'
   905  00FF00  45                 	db	69	;'E'
   906  00FF01  52                 	db	82	;'R'
   907  00FF02  3F                 	db	63	;'?'
   908  00FF03  00                 	db	0
   909  00FF04                     STR_82:
   910                           
   911                           ; BSR set to: 0
   912  00FF04  2B                 	db	43
   913  00FF05  42                 	db	66	;'B'
   914  00FF06  4F                 	db	79	;'O'
   915  00FF07  4F                 	db	79	;'O'
   916  00FF08  54                 	db	84	;'T'
   917  00FF09  4C                 	db	76	;'L'
   918  00FF0A  4F                 	db	79	;'O'
   919  00FF0B  41                 	db	65	;'A'
   920  00FF0C  44                 	db	68	;'D'
   921  00FF0D  00                 	db	0
   922  00FF0E                     STR_88:
   923                           
   924                           ; BSR set to: 0
   925  00FF0E  2B                 	db	43
   926  00FF0F  41                 	db	65	;'A'
   927  00FF10  45                 	db	69	;'E'
   928  00FF11  53                 	db	83	;'S'
   929  00FF12  4B                 	db	75	;'K'
   930  00FF13  45                 	db	69	;'E'
   931  00FF14  59                 	db	89	;'Y'
   932  00FF15  3A                 	db	58	;':'
   933  00FF16  00                 	db	0
   934  00FF17                     STR_102:
   935                           
   936                           ; BSR set to: 0
   937  00FF17  2B                 	db	43
   938  00FF18  48                 	db	72	;'H'
   939  00FF19  4F                 	db	79	;'O'
   940  00FF1A  50                 	db	80	;'P'
   941  00FF1B  54                 	db	84	;'T'
   942  00FF1C  54                 	db	84	;'T'
   943  00FF1D  4C                 	db	76	;'L'
   944  00FF1E  3D                 	db	61	;'='
   945  00FF1F  00                 	db	0
   946  00FF20                     STR_114:
   947                           
   948                           ; BSR set to: 0
   949  00FF20  2B                 	db	43
   950  00FF21  50                 	db	80	;'P'
   951  00FF22  41                 	db	65	;'A'
   952  00FF23  52                 	db	82	;'R'
   953  00FF24  49                 	db	73	;'I'
   954  00FF25  54                 	db	84	;'T'
   955  00FF26  59                 	db	89	;'Y'
   956  00FF27  3D                 	db	61	;'='
   957  00FF28  00                 	db	0
   958  00FF29                     STR_68:
   959                           
   960                           ; BSR set to: 0
   961  00FF29  2B                 	db	43
   962  00FF2A  53                 	db	83	;'S'
   963  00FF2B  45                 	db	69	;'E'
   964  00FF2C  54                 	db	84	;'T'
   965  00FF2D  53                 	db	83	;'S'
   966  00FF2E  49                 	db	73	;'I'
   967  00FF2F  4E                 	db	78	;'N'
   968  00FF30  4B                 	db	75	;'K'
   969  00FF31  00                 	db	0
   970  00FF32                     STR_59:
   971                           
   972                           ; BSR set to: 0
   973  00FF32  53                 	db	83	;'S'
   974  00FF33  46                 	db	70	;'F'
   975  00FF34  3D                 	db	61	;'='
   976  00FF35  25                 	db	37
   977  00FF36  75                 	db	117	;'u'
   978  00FF37  0D                 	db	13
   979  00FF38  0A                 	db	10
   980  00FF39  00                 	db	0
   981  00FF3A                     STR_138:
   982                           
   983                           ; BSR set to: 0
   984  00FF3A  52                 	db	82	;'R'
   985  00FF3B  65                 	db	101	;'e'
   986  00FF3C  67                 	db	103	;'g'
   987  00FF3D  69                 	db	105	;'i'
   988  00FF3E  6F                 	db	111	;'o'
   989  00FF3F  6E                 	db	110	;'n'
   990  00FF40  20                 	db	32
   991  00FF41  00                 	db	0
   992  00FF42                     STR_112:
   993                           
   994                           ; BSR set to: 0
   995  00FF42  2B                 	db	43
   996  00FF43  4E                 	db	78	;'N'
   997  00FF44  41                 	db	65	;'A'
   998  00FF45  44                 	db	68	;'D'
   999  00FF46  44                 	db	68	;'D'
  1000  00FF47  52                 	db	82	;'R'
  1001  00FF48  3D                 	db	61	;'='
  1002  00FF49  00                 	db	0
  1003  00FF4A                     STR_78:
  1004                           
  1005                           ; BSR set to: 0
  1006  00FF4A  2B                 	db	43
  1007  00FF4B  42                 	db	66	;'B'
  1008  00FF4C  43                 	db	67	;'C'
  1009  00FF4D  41                 	db	65	;'A'
  1010  00FF4E  53                 	db	83	;'S'
  1011  00FF4F  54                 	db	84	;'T'
  1012  00FF50  3D                 	db	61	;'='
  1013  00FF51  00                 	db	0
  1014  00FF52                     STR_110:
  1015                           
  1016                           ; BSR set to: 0
  1017  00FF52  2B                 	db	43
  1018  00FF53  4E                 	db	78	;'N'
  1019  00FF54  41                 	db	65	;'A'
  1020  00FF55  44                 	db	68	;'D'
  1021  00FF56  44                 	db	68	;'D'
  1022  00FF57  52                 	db	82	;'R'
  1023  00FF58  3F                 	db	63	;'?'
  1024  00FF59  00                 	db	0
  1025  00FF5A                     STR_66:
  1026                           
  1027                           ; BSR set to: 0
  1028  00FF5A  2B                 	db	43
  1029  00FF5B  53                 	db	83	;'S'
  1030  00FF5C  45                 	db	69	;'E'
  1031  00FF5D  4E                 	db	78	;'N'
  1032  00FF5E  44                 	db	68	;'D'
  1033  00FF5F  3A                 	db	58	;':'
  1034  00FF60  00                 	db	0
  1035  00FF61                     STR_80:
  1036                           
  1037                           ; BSR set to: 0
  1038  00FF61  2B                 	db	43
  1039  00FF62  42                 	db	66	;'B'
  1040  00FF63  41                 	db	65	;'A'
  1041  00FF64  55                 	db	85	;'U'
  1042  00FF65  44                 	db	68	;'D'
  1043  00FF66  3D                 	db	61	;'='
  1044  00FF67  00                 	db	0
  1045  00FF68                     STR_120:
  1046                           
  1047                           ; BSR set to: 0
  1048  00FF68  2B                 	db	43
  1049  00FF69  52                 	db	82	;'R'
  1050  00FF6A  46                 	db	70	;'F'
  1051  00FF6B  43                 	db	67	;'C'
  1052  00FF6C  48                 	db	72	;'H'
  1053  00FF6D  3D                 	db	61	;'='
  1054  00FF6E  00                 	db	0
  1055  00FF6F                     STR_86:
  1056                           
  1057                           ; BSR set to: 0
  1058  00FF6F  2B                 	db	43
  1059  00FF70  41                 	db	65	;'A'
  1060  00FF71  44                 	db	68	;'D'
  1061  00FF72  44                 	db	68	;'D'
  1062  00FF73  52                 	db	82	;'R'
  1063  00FF74  3D                 	db	61	;'='
  1064  00FF75  00                 	db	0
  1065  00FF76                     STR_100:
  1066                           
  1067                           ; BSR set to: 0
  1068  00FF76  2B                 	db	43
  1069  00FF77  48                 	db	72	;'H'
  1070  00FF78  4F                 	db	79	;'O'
  1071  00FF79  50                 	db	80	;'P'
  1072  00FF7A  53                 	db	83	;'S'
  1073  00FF7B  3D                 	db	61	;'='
  1074  00FF7C  00                 	db	0
  1075  00FF7D                     STR_108:
  1076                           
  1077                           ; BSR set to: 0
  1078  00FF7D  2B                 	db	43
  1079  00FF7E  4D                 	db	77	;'M'
  1080  00FF7F  4F                 	db	79	;'O'
  1081  00FF80  44                 	db	68	;'D'
  1082  00FF81  45                 	db	69	;'E'
  1083  00FF82  3F                 	db	63	;'?'
  1084  00FF83  00                 	db	0
  1085  00FF84                     STR_118:
  1086                           
  1087                           ; BSR set to: 0
  1088  00FF84  2B                 	db	43
  1089  00FF85  52                 	db	82	;'R'
  1090  00FF86  46                 	db	70	;'F'
  1091  00FF87  43                 	db	67	;'C'
  1092  00FF88  48                 	db	72	;'H'
  1093  00FF89  3F                 	db	63	;'?'
  1094  00FF8A  00                 	db	0
  1095  00FF8B                     STR_84:
  1096                           
  1097                           ; BSR set to: 0
  1098  00FF8B  2B                 	db	43
  1099  00FF8C  41                 	db	65	;'A'
  1100  00FF8D  44                 	db	68	;'D'
  1101  00FF8E  44                 	db	68	;'D'
  1102  00FF8F  52                 	db	82	;'R'
  1103  00FF90  3F                 	db	63	;'?'
  1104  00FF91  00                 	db	0
  1105  00FF92                     STR_98:
  1106                           
  1107                           ; BSR set to: 0
  1108  00FF92  2B                 	db	43
  1109  00FF93  48                 	db	72	;'H'
  1110  00FF94  4F                 	db	79	;'O'
  1111  00FF95  50                 	db	80	;'P'
  1112  00FF96  53                 	db	83	;'S'
  1113  00FF97  3F                 	db	63	;'?'
  1114  00FF98  00                 	db	0
  1115  00FF99                     STR_124:
  1116                           
  1117                           ; BSR set to: 0
  1118  00FF99  2B                 	db	43
  1119  00FF9A  52                 	db	82	;'R'
  1120  00FF9B  58                 	db	88	;'X'
  1121  00FF9C  43                 	db	67	;'C'
  1122  00FF9D  54                 	db	84	;'T'
  1123  00FF9E  3F                 	db	63	;'?'
  1124  00FF9F  00                 	db	0
  1125  00FFA0                     STR_70:
  1126                           
  1127                           ; BSR set to: 0
  1128  00FFA0  2B                 	db	43
  1129  00FFA1  53                 	db	83	;'S'
  1130  00FFA2  53                 	db	83	;'S'
  1131  00FFA3  49                 	db	73	;'I'
  1132  00FFA4  4E                 	db	78	;'N'
  1133  00FFA5  4B                 	db	75	;'K'
  1134  00FFA6  00                 	db	0
  1135  00FFA7                     STR_17:
  1136                           
  1137                           ; BSR set to: 0
  1138  00FFA7  25                 	db	37
  1139  00FFA8  30                 	db	48	;'0'
  1140  00FFA9  34                 	db	52	;'4'
  1141  00FFAA  58                 	db	88	;'X'
  1142  00FFAB  3A                 	db	58	;':'
  1143  00FFAC  00                 	db	0
  1144  00FFAD                     STR_128:
  1145                           
  1146                           ; BSR set to: 0
  1147  00FFAD  2B                 	db	43
  1148  00FFAE  54                 	db	84	;'T'
  1149  00FFAF  54                 	db	84	;'T'
  1150  00FFB0  4C                 	db	76	;'L'
  1151  00FFB1  3D                 	db	61	;'='
  1152  00FFB2  00                 	db	0
  1153  00FFB3                     STR_106:
  1154                           
  1155                           ; BSR set to: 0
  1156  00FFB3  2B                 	db	43
  1157  00FFB4  4D                 	db	77	;'M'
  1158  00FFB5  41                 	db	65	;'A'
  1159  00FFB6  43                 	db	67	;'C'
  1160  00FFB7  3F                 	db	63	;'?'
  1161  00FFB8  00                 	db	0
  1162  00FFB9                     STR_126:
  1163                           
  1164                           ; BSR set to: 0
  1165  00FFB9  2B                 	db	43
  1166  00FFBA  54                 	db	84	;'T'
  1167  00FFBB  54                 	db	84	;'T'
  1168  00FFBC  4C                 	db	76	;'L'
  1169  00FFBD  3F                 	db	63	;'?'
  1170  00FFBE  00                 	db	0
  1171  00FFBF                     STR_51:
  1172                           
  1173                           ; BSR set to: 0
  1174  00FFBF  3D                 	db	61	;'='
  1175  00FFC0  4E                 	db	78	;'N'
  1176  00FFC1  4F                 	db	79	;'O'
  1177  00FFC2  4E                 	db	78	;'N'
  1178  00FFC3  45                 	db	69	;'E'
  1179  00FFC4  00                 	db	0
  1180  00FFC5                     STR_53:
  1181                           
  1182                           ; BSR set to: 0
  1183  00FFC5  3D                 	db	61	;'='
  1184  00FFC6  45                 	db	69	;'E'
  1185  00FFC7  56                 	db	86	;'V'
  1186  00FFC8  45                 	db	69	;'E'
  1187  00FFC9  4E                 	db	78	;'N'
  1188  00FFCA  00                 	db	0
  1189  00FFCB                     STR_116:
  1190                           
  1191                           ; BSR set to: 0
  1192  00FFCB  2B                 	db	43
  1193  00FFCC  52                 	db	82	;'R'
  1194  00FFCD  45                 	db	69	;'E'
  1195  00FFCE  43                 	db	67	;'C'
  1196  00FFCF  56                 	db	86	;'V'
  1197  00FFD0  00                 	db	0
  1198  00FFD1                     STR_139:
  1199                           
  1200                           ; BSR set to: 0
  1201  00FFD1  4E                 	db	78	;'N'
  1202  00FFD2  41                 	db	65	;'A'
  1203  00FFD3  0D                 	db	13
  1204  00FFD4  0A                 	db	10
  1205  00FFD5  00                 	db	0
  1206  00FFD6                     STR_12:
  1207                           
  1208                           ; BSR set to: 0
  1209  00FFD6  4F                 	db	79	;'O'
  1210  00FFD7  4B                 	db	75	;'K'
  1211  00FFD8  0D                 	db	13
  1212  00FFD9  0A                 	db	10
  1213  00FFDA  00                 	db	0
  1214  00FFDB                     STR_21:
  1215                           
  1216                           ; BSR set to: 0
  1217  00FFDB  4D                 	db	77	;'M'
  1218  00FFDC  41                 	db	65	;'A'
  1219  00FFDD  43                 	db	67	;'C'
  1220  00FFDE  3D                 	db	61	;'='
  1221  00FFDF  00                 	db	0
  1222  00FFE0                     STR_74:
  1223                           
  1224                           ; BSR set to: 0
  1225  00FFE0  2B                 	db	43
  1226  00FFE1  53                 	db	83	;'S'
  1227  00FFE2  46                 	db	70	;'F'
  1228  00FFE3  3D                 	db	61	;'='
  1229  00FFE4  00                 	db	0
  1230  00FFE5                     STR_72:
  1231                           
  1232                           ; BSR set to: 0
  1233  00FFE5  2B                 	db	43
  1234  00FFE6  53                 	db	83	;'S'
  1235  00FFE7  46                 	db	70	;'F'
  1236  00FFE8  3F                 	db	63	;'?'
  1237  00FFE9  00                 	db	0
  1238  00FFEA                     STR_49:
  1239                           
  1240                           ; BSR set to: 0
  1241  00FFEA  3D                 	db	61	;'='
  1242  00FFEB  4F                 	db	79	;'O'
  1243  00FFEC  44                 	db	68	;'D'
  1244  00FFED  44                 	db	68	;'D'
  1245  00FFEE  00                 	db	0
  1246  00FFEF                     STR_122:
  1247                           
  1248                           ; BSR set to: 0
  1249  00FFEF  2B                 	db	43
  1250  00FFF0  52                 	db	82	;'R'
  1251  00FFF1  53                 	db	83	;'S'
  1252  00FFF2  54                 	db	84	;'T'
  1253  00FFF3  00                 	db	0
  1254  00FFF4                     STR_22:
  1255                           
  1256                           ; BSR set to: 0
  1257  00FFF4  25                 	db	37
  1258  00FFF5  30                 	db	48	;'0'
  1259  00FFF6  32                 	db	50	;'2'
  1260  00FFF7  58                 	db	88	;'X'
  1261  00FFF8  00                 	db	0
  1262  00FFF9                     STR_104:
  1263                           
  1264                           ; BSR set to: 0
  1265  00FFF9  2B                 	db	43
  1266  00FFFA  49                 	db	73	;'I'
  1267  00FFFB  00                 	db	0
  1268  00FFFC                     STR_58:
  1269                           
  1270                           ; BSR set to: 0
  1271  00FFFC  0D                 	db	13
  1272  00FFFD  00                 	db	0
  1273  0000                     
  1274                           ; #config settings
  1275  00FFFE  00                 	db	0	; dummy byte at the end
  1276  0000                     
  1277                           	psect	nvBANK0
  1278  0000FD                     __pnvBANK0:
  1279                           	opt callstack 0
  1280  0000FD                     _timer0ReloadVal16bit:
  1281                           	opt callstack 0
  1282  0000FD                     	ds	2
  1283  0000FF                     _uart1TxBufferRemaining:
  1284                           	opt callstack 0
  1285  0000FF                     	ds	1
  1286                           
  1287                           	psect	nvBANK1
  1288  0001E6                     __pnvBANK1:
  1289                           	opt callstack 0
  1290  0001E6                     _UART1_ErrorHandler:
  1291                           	opt callstack 0
  1292  0001E6                     	ds	2
  1293  0001E8                     _UART1_OverrunErrorHandler:
  1294                           	opt callstack 0
  1295  0001E8                     	ds	2
  1296  0001EA                     _UART1_FramingErrorHandler:
  1297                           	opt callstack 0
  1298  0001EA                     	ds	2
  1299  0001EC                     _TMR0_InterruptHandler:
  1300                           	opt callstack 0
  1301  0001EC                     	ds	2
  1302  0001EE                     _UART1_TxInterruptHandler:
  1303                           	opt callstack 0
  1304  0001EE                     	ds	2
  1305  0001F0                     _UART1_RxInterruptHandler:
  1306                           	opt callstack 0
  1307  0001F0                     	ds	2
  1308  0000                     _CRCDATH	set	14689
  1309  0000                     _CRCDATL	set	14688
  1310  0000                     _CRCCON1bits	set	14697
  1311  0000                     _CRCXORL	set	14694
  1312  0000                     _CRCXORH	set	14695
  1313  0000                     _SCANTRIG	set	14717
  1314  0000                     _SCANHADRL	set	14713
  1315  0000                     _SCANHADRH	set	14714
  1316  0000                     _SCANHADRU	set	14715
  1317  0000                     _SCANLADRL	set	14710
  1318  0000                     _SCANLADRH	set	14711
  1319  0000                     _SCANLADRU	set	14712
  1320  0000                     _SCANCON0	set	14716
  1321  0000                     _CRCCON1	set	14697
  1322  0000                     _CRCCON0	set	14696
  1323  0000                     _PMD7	set	14791
  1324  0000                     _PMD6	set	14790
  1325  0000                     _PMD5	set	14789
  1326  0000                     _PMD4	set	14788
  1327  0000                     _PMD3	set	14787
  1328  0000                     _PMD2	set	14786
  1329  0000                     _PMD1	set	14785
  1330  0000                     _PMD0	set	14784
  1331  0000                     _OSCTUNE	set	14814
  1332  0000                     _OSCFRQ	set	14815
  1333  0000                     _OSCEN	set	14813
  1334  0000                     _OSCCON3	set	14811
  1335  0000                     _OSCCON1	set	14809
  1336  0000                     _IPR3bits	set	14723
  1337  0000                     _PIR0bits	set	14752
  1338  0000                     _NVMCON2	set	14822
  1339  0000                     _NVMDAT	set	14819
  1340  0000                     _NVMADRL	set	14816
  1341  0000                     _NVMADRH	set	14817
  1342  0000                     _NVMCON1bits	set	14821
  1343  0000                     _PIR3bits	set	14755
  1344  0000                     _PIR2bits	set	14754
  1345  0000                     _PIE3bits	set	14739
  1346  0000                     _CRCCON0bits	set	14696
  1347  0000                     _CRCACCH	set	14691
  1348  0000                     _CRCACCL	set	14690
  1349  0000                     _SPI1SDIPPS	set	15071
  1350  0000                     _RC7PPS	set	14871
  1351  0000                     _U1CTSPPS	set	15078
  1352  0000                     _U1RXPPS	set	15077
  1353  0000                     _RC1PPS	set	14865
  1354  0000                     _RB0PPS	set	14856
  1355  0000                     _SPI1SSPPS	set	15072
  1356  0000                     _SPI1SCKPPS	set	15070
  1357  0000                     _RC0PPS	set	14864
  1358  0000                     _INLVLE	set	14980
  1359  0000                     _INLVLC	set	14948
  1360  0000                     _INLVLB	set	14932
  1361  0000                     _INLVLA	set	14916
  1362  0000                     _SLRCONC	set	14947
  1363  0000                     _SLRCONB	set	14931
  1364  0000                     _SLRCONA	set	14915
  1365  0000                     _ODCONC	set	14946
  1366  0000                     _ODCONB	set	14930
  1367  0000                     _ODCONA	set	14914
  1368  0000                     _RC4I2C	set	14955
  1369  0000                     _RC3I2C	set	14954
  1370  0000                     _RB2I2C	set	14939
  1371  0000                     _RB1I2C	set	14938
  1372  0000                     _WPUC	set	14945
  1373  0000                     _WPUA	set	14913
  1374  0000                     _WPUB	set	14929
  1375  0000                     _WPUE	set	14977
  1376  0000                     _ANSELA	set	14912
  1377  0000                     _ANSELB	set	14928
  1378  0000                     _ANSELC	set	14944
  1379  0000                     _U1TXB	set	15850
  1380  0000                     _U1ERRIE	set	15866
  1381  0000                     _U1UIR	set	15864
  1382  0000                     _U1P3H	set	15857
  1383  0000                     _U1P3L	set	15856
  1384  0000                     _U1P2H	set	15855
  1385  0000                     _U1P2L	set	15854
  1386  0000                     _U1P1H	set	15853
  1387  0000                     _U1P1L	set	15852
  1388  0000                     _SPI1RXB	set	15632
  1389  0000                     _SPI1TXB	set	15633
  1390  0000                     _SPI1TCNTL	set	15634
  1391  0000                     _SPI1BAUD	set	15641
  1392  0000                     _SPI1CLK	set	15644
  1393  0000                     _SPI1CON2	set	15638
  1394  0000                     _SPI1CON1	set	15637
  1395  0000                     _SPI1CON0	set	15636
  1396  0000                     _U1ERRIR	set	15865
  1397  0000                     _U1FIFO	set	15863
  1398  0000                     _U1ERRIRbits	set	15865
  1399  0000                     _U1BRGH	set	15862
  1400  0000                     _U1BRGL	set	15861
  1401  0000                     _U1CON2	set	15860
  1402  0000                     _U1CON0	set	15858
  1403  0000                     _U1CON1	set	15859
  1404  0000                     _U1RXB	set	15848
  1405  0000                     _PORTBbits	set	16331
  1406  0000                     _LATCbits	set	16316
  1407  0000                     _TRISC	set	16324
  1408  0000                     _TRISB	set	16323
  1409  0000                     _TRISA	set	16322
  1410  0000                     _LATC	set	16316
  1411  0000                     _LATB	set	16315
  1412  0000                     _LATA	set	16314
  1413  0000                     _IVTBASEL	set	16341
  1414  0000                     _IVTBASEH	set	16342
  1415  0000                     _IVTBASEU	set	16343
  1416  0000                     _IVTLOCKbits	set	16340
  1417  0000                     _IVTLOCK	set	16340
  1418  0000                     _INTCON0bits	set	16338
  1419  0000                     _TABLAT	set	16373
  1420  0000                     _TBLPTRL	set	16374
  1421  0000                     _TBLPTRH	set	16375
  1422  0000                     _TBLPTRU	set	16376
  1423  0000                     _T0CON0	set	16312
  1424  0000                     _TMR0L	set	16310
  1425  0000                     _TMR0H	set	16311
  1426  0000                     _T0CON1	set	16313
  1427  0000                     _TRISBbits	set	16323
  1428  0000                     _LATAbits	set	16314
  1429  0000                     _GIE	set	130711
  1430                           
  1431                           	psect	cinit
  1432  005DBC                     __pcinit:
  1433                           	opt callstack 0
  1434  005DBC                     start_initialization:
  1435                           	opt callstack 0
  1436  005DBC                     __initialization:
  1437                           	opt callstack 0
  1438                           
  1439                           ; Initialize objects allocated to BANK2 (10 bytes)
  1440                           ; load TBLPTR registers with __pidataBANK2
  1441  005DBC  0E4A               	movlw	low __pidataBANK2
  1442  005DBE  6EF6               	movwf	tblptrl,c
  1443  005DC0  0E90               	movlw	high __pidataBANK2
  1444  005DC2  6EF7               	movwf	tblptrh,c
  1445  005DC4  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1446  005DC6  6EF8               	movwf	tblptru,c
  1447  005DC8  EE00  F2DC         	lfsr	0,__pdataBANK2
  1448  005DCC  EE10 F00A          	lfsr	1,10
  1449  005DD0                     copy_data0:
  1450  005DD0  0009               	tblrd		*+
  1451  005DD2  006F FFD7 FFEE     	movff	tablat,postinc0
  1452  005DD8  50E5               	movf	postdec1,w,c
  1453  005DDA  50E1               	movf	fsr1l,w,c
  1454  005DDC  E1F9               	bnz	copy_data0
  1455                           
  1456                           ; Initialize objects allocated to BANK1 (7 bytes)
  1457                           ; load TBLPTR registers with __pidataBANK1
  1458  005DDE  0E70               	movlw	low __pidataBANK1
  1459  005DE0  6EF6               	movwf	tblptrl,c
  1460  005DE2  0E90               	movlw	high __pidataBANK1
  1461  005DE4  6EF7               	movwf	tblptrh,c
  1462  005DE6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1463  005DE8  6EF8               	movwf	tblptru,c
  1464  005DEA  EE00  F1F2         	lfsr	0,__pdataBANK1
  1465  005DEE  EE10 F007          	lfsr	1,7
  1466  005DF2                     copy_data1:
  1467  005DF2  0009               	tblrd		*+
  1468  005DF4  006F FFD7 FFEE     	movff	tablat,postinc0
  1469  005DFA  50E5               	movf	postdec1,w,c
  1470  005DFC  50E1               	movf	fsr1l,w,c
  1471  005DFE  E1F9               	bnz	copy_data1
  1472                           
  1473                           ; Initialize objects allocated to BANK0 (6 bytes)
  1474                           ; load TBLPTR registers with __pidataBANK0
  1475  005E00  0E77               	movlw	low __pidataBANK0
  1476  005E02  6EF6               	movwf	tblptrl,c
  1477  005E04  0E90               	movlw	high __pidataBANK0
  1478  005E06  6EF7               	movwf	tblptrh,c
  1479  005E08  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1480  005E0A  6EF8               	movwf	tblptru,c
  1481  005E0C  EE00  F0F7         	lfsr	0,__pdataBANK0
  1482  005E10  EE10 F006          	lfsr	1,6
  1483  005E14                     copy_data2:
  1484  005E14  0009               	tblrd		*+
  1485  005E16  006F FFD7 FFEE     	movff	tablat,postinc0
  1486  005E1C  50E5               	movf	postdec1,w,c
  1487  005E1E  50E1               	movf	fsr1l,w,c
  1488  005E20  E1F9               	bnz	copy_data2
  1489                           
  1490                           ; Clear objects allocated to BIGRAM (1697 bytes)
  1491  005E22  EE01  F1BD         	lfsr	0,__pbssBIGRAM
  1492  005E26  EE11 F2A1          	lfsr	1,1697
  1493  005E2A                     clear_0:
  1494  005E2A  6AEE               	clrf	postinc0,c
  1495  005E2C  50E5               	movf	postdec1,w,c
  1496  005E2E  50E1               	movf	fsr1l,w,c
  1497  005E30  E1FC               	bnz	clear_0
  1498  005E32  50E2               	movf	fsr1h,w,c
  1499  005E34  E1FA               	bnz	clear_0
  1500                           
  1501                           ; Clear objects allocated to BANK5 (189 bytes)
  1502  005E36  EE01  F100         	lfsr	0,__pbssBANK5
  1503  005E3A  0EBD               	movlw	189
  1504  005E3C                     clear_1:
  1505  005E3C  6AEE               	clrf	postinc0,c
  1506  005E3E  06E8               	decf	wreg,f,c
  1507  005E40  E1FD               	bnz	clear_1
  1508                           
  1509                           ; Clear objects allocated to BANK4 (96 bytes)
  1510  005E42  EE01  F000         	lfsr	0,__pbssBANK4
  1511  005E46  0E60               	movlw	96
  1512  005E48                     clear_2:
  1513  005E48  6AEE               	clrf	postinc0,c
  1514  005E4A  06E8               	decf	wreg,f,c
  1515  005E4C  E1FD               	bnz	clear_2
  1516                           
  1517                           ; Clear objects allocated to BANK3 (192 bytes)
  1518  005E4E  EE00  F300         	lfsr	0,__pbssBANK3
  1519  005E52  0EC0               	movlw	192
  1520  005E54                     clear_3:
  1521  005E54  6AEE               	clrf	postinc0,c
  1522  005E56  06E8               	decf	wreg,f,c
  1523  005E58  E1FD               	bnz	clear_3
  1524                           
  1525                           ; Clear objects allocated to BANK2 (220 bytes)
  1526  005E5A  EE00  F200         	lfsr	0,__pbssBANK2
  1527  005E5E  0EDC               	movlw	220
  1528  005E60                     clear_4:
  1529  005E60  6AEE               	clrf	postinc0,c
  1530  005E62  06E8               	decf	wreg,f,c
  1531  005E64  E1FD               	bnz	clear_4
  1532                           
  1533                           ; Clear objects allocated to BANK1 (230 bytes)
  1534  005E66  EE00  F100         	lfsr	0,__pbssBANK1
  1535  005E6A  0EE6               	movlw	230
  1536  005E6C                     clear_5:
  1537  005E6C  6AEE               	clrf	postinc0,c
  1538  005E6E  06E8               	decf	wreg,f,c
  1539  005E70  E1FD               	bnz	clear_5
  1540                           
  1541                           ; Clear objects allocated to BANK0 (70 bytes)
  1542  005E72  EE00  F0B1         	lfsr	0,__pbssBANK0
  1543  005E76  0E46               	movlw	70
  1544  005E78                     clear_6:
  1545  005E78  6AEE               	clrf	postinc0,c
  1546  005E7A  06E8               	decf	wreg,f,c
  1547  005E7C  E1FD               	bnz	clear_6
  1548                           
  1549                           ; Clear objects allocated to COMRAM (1 bytes)
  1550  005E7E  6A5E               	clrf	__pbssCOMRAM& (0+255),c
  1551                           
  1552                           ;
  1553                           ; Setup IVTBASE
  1554                           ;
  1555  005E80  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1556  005E82  6ED5               	movwf	213,c
  1557  005E84  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1558  005E86  6ED6               	movwf	214,c
  1559  005E88  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1560  005E8A  6ED7               	movwf	215,c
  1561  005E8C                     end_of_initialization:
  1562                           	opt callstack 0
  1563  005E8C                     __end_of__initialization:
  1564                           	opt callstack 0
  1565  005E8C  0100               	movlb	0
  1566  005E8E  EF2C  F045         	goto	_main	;jump to C main() function
  1567                           
  1568                           	psect	bssCOMRAM
  1569  00005E                     __pbssCOMRAM:
  1570                           	opt callstack 0
  1571  00005E                     _uart1RxHead:
  1572                           	opt callstack 0
  1573  00005E                     	ds	1
  1574                           
  1575                           	psect	bssBANK0
  1576  0000B1                     __pbssBANK0:
  1577                           	opt callstack 0
  1578  0000B1                     strtok@p:
  1579                           	opt callstack 0
  1580  0000B1                     	ds	2
  1581  0000B3                     _nout:
  1582                           	opt callstack 0
  1583  0000B3                     	ds	2
  1584  0000B5                     _width:
  1585                           	opt callstack 0
  1586  0000B5                     	ds	2
  1587  0000B7                     _prec:
  1588                           	opt callstack 0
  1589  0000B7                     	ds	2
  1590  0000B9                     _flags:
  1591                           	opt callstack 0
  1592  0000B9                     	ds	2
  1593  0000BB                     _timers:
  1594                           	opt callstack 0
  1595  0000BB                     	ds	2
  1596  0000BD                     _nwkTxPhyActiveFrame:
  1597                           	opt callstack 0
  1598  0000BD                     	ds	2
  1599  0000BF                     _nwkDataReqQueue:
  1600                           	opt callstack 0
  1601  0000BF                     	ds	2
  1602  0000C1                     _halTimerIrqCount:
  1603                           	opt callstack 0
  1604  0000C1                     	ds	2
  1605  0000C3                     _nwkRxAckControl:
  1606                           	opt callstack 0
  1607  0000C3                     	ds	1
  1608  0000C4                     _uart1RxLastError:
  1609                           	opt callstack 0
  1610  0000C4                     	ds	1
  1611  0000C5                     _uart1RxCount:
  1612                           	opt callstack 0
  1613  0000C5                     	ds	1
  1614  0000C6                     _uart1RxTail:
  1615                           	opt callstack 0
  1616  0000C6                     	ds	1
  1617  0000C7                     _uart1TxTail:
  1618                           	opt callstack 0
  1619  0000C7                     	ds	1
  1620  0000C8                     _uart1TxHead:
  1621                           	opt callstack 0
  1622  0000C8                     	ds	1
  1623  0000C9                     _ledStateVar:
  1624                           	opt callstack 0
  1625  0000C9                     	ds	1
  1626  0000CA                     _radio_state_var:
  1627                           	opt callstack 0
  1628  0000CA                     	ds	1
  1629  0000CB                     _dwellTimer:
  1630                           	opt callstack 0
  1631  0000CB                     	ds	1
  1632  0000CC                     _TXPower:
  1633                           	opt callstack 0
  1634  0000CC                     	ds	1
  1635  0000CD                     _fhssdebug:
  1636                           	opt callstack 0
  1637  0000CD                     	ds	1
  1638  0000CE                     _channel:
  1639                           	opt callstack 0
  1640  0000CE                     	ds	1
  1641  0000CF                     _current_sf:
  1642                           	opt callstack 0
  1643  0000CF                     	ds	1
  1644  0000D0                     _SNR:
  1645                           	opt callstack 0
  1646  0000D0                     	ds	1
  1647  0000D1                     _packetRSSI:
  1648                           	opt callstack 0
  1649  0000D1                     	ds	1
  1650  0000D2                     _RSSI:
  1651                           	opt callstack 0
  1652  0000D2                     	ds	1
  1653  0000D3                     _need_radio_reset:
  1654                           	opt callstack 0
  1655  0000D3                     	ds	1
  1656  0000D4                     _cadCounter:
  1657                           	opt callstack 0
  1658  0000D4                     	ds	1
  1659  0000D5                     _cadDone:
  1660                           	opt callstack 0
  1661  0000D5                     	ds	1
  1662  0000D6                     __packetIndex:
  1663                           	opt callstack 0
  1664  0000D6                     	ds	1
  1665  0000D7                     __implicitHeaderMode:
  1666                           	opt callstack 0
  1667  0000D7                     	ds	1
  1668  0000D8                     _atStateVar:
  1669                           	opt callstack 0
  1670  0000D8                     	ds	1
  1671  0000D9                     _commandByteCounter:
  1672                           	opt callstack 0
  1673  0000D9                     	ds	1
  1674  0000DA                     _tx_done:
  1675                           	opt callstack 0
  1676  0000DA                     	ds	1
  1677  0000DB                     _msgIDCounter:
  1678                           	opt callstack 0
  1679  0000DB                     	ds	1
  1680  0000DC                     _currentMode:
  1681                           	opt callstack 0
  1682  0000DC                     	ds	1
  1683  0000DD                     _sinkAddr1:
  1684                           	opt callstack 0
  1685  0000DD                     	ds	1
  1686  0000DE                     _sinkAddr0:
  1687                           	opt callstack 0
  1688  0000DE                     	ds	1
  1689  0000DF                     _currentMsgID:
  1690                           	opt callstack 0
  1691  0000DF                     	ds	1
  1692  0000E0                     _curent_parity:
  1693                           	opt callstack 0
  1694  0000E0                     	ds	1
  1695  0000E1                     _uart_parity:
  1696                           	opt callstack 0
  1697  0000E1                     	ds	1
  1698  0000E2                     _uart_baud_rate:
  1699                           	opt callstack 0
  1700  0000E2                     	ds	1
  1701  0000E3                     _eeprom_write_flags_enum:
  1702                           	opt callstack 0
  1703  0000E3                     	ds	1
  1704  0000E4                     _seed:
  1705                           	opt callstack 0
  1706  0000E4                     	ds	8
  1707  0000EC                     _crcObj:
  1708                           	opt callstack 0
  1709  0000EC                     	ds	3
  1710  0000EF                     _ledtimer:
  1711                           	opt callstack 0
  1712  0000EF                     	ds	2
  1713  0000F1                     _txTimeOut:
  1714                           	opt callstack 0
  1715  0000F1                     	ds	2
  1716  0000F3                     _cadTimeOut:
  1717                           	opt callstack 0
  1718  0000F3                     	ds	2
  1719  0000F5                     __cadBackoffTimer:
  1720                           	opt callstack 0
  1721  0000F5                     	ds	2
  1722                           
  1723                           	psect	dataBANK0
  1724  0000F7                     __pdataBANK0:
  1725                           	opt callstack 0
  1726  0000F7                     _RSSITarget:
  1727                           	opt callstack 0
  1728  0000F7                     	ds	1
  1729  0000F8                     _currentNetID:
  1730                           	opt callstack 0
  1731  0000F8                     	ds	1
  1732  0000F9                     _currentAddr1:
  1733                           	opt callstack 0
  1734  0000F9                     	ds	1
  1735  0000FA                     _currentAddr0:
  1736                           	opt callstack 0
  1737  0000FA                     	ds	1
  1738  0000FB                     _ATTimeoutTimer:
  1739                           	opt callstack 0
  1740  0000FB                     	ds	2
  1741                           
  1742                           	psect	bssBANK1
  1743  000100                     __pbssBANK1:
  1744                           	opt callstack 0
  1745  000100                     _nwkIb:
  1746                           	opt callstack 0
  1747  000100                     	ds	40
  1748  000128                     _uart1RxStatusBuffer:
  1749                           	opt callstack 0
  1750  000128                     	ds	16
  1751  000138                     _uartmsg:
  1752                           	opt callstack 0
  1753  000138                     	ds	6
  1754  00013E                     _symbolDuration:
  1755                           	opt callstack 0
  1756  00013E                     	ds	4
  1757  000142                     _current_baud_rate:
  1758                           	opt callstack 0
  1759  000142                     	ds	3
  1760  000145                     _errno:
  1761                           	opt callstack 0
  1762  000145                     	ds	2
  1763  000147                     _ledTimerVar:
  1764                           	opt callstack 0
  1765  000147                     	ds	2
  1766  000149                     _eeprom_write_flags:
  1767                           	opt callstack 0
  1768  000149                     	ds	2
  1769  00014B                     _atCommand:
  1770                           	opt callstack 0
  1771  00014B                     	ds	80
  1772  00019B                     _nwkTxDelayTimer:
  1773                           	opt callstack 0
  1774  00019B                     	ds	13
  1775  0001A8                     _nwkTxAckWaitTimer:
  1776                           	opt callstack 0
  1777  0001A8                     	ds	13
  1778  0001B5                     _nwkRxDuplicateRejectionTimer:
  1779                           	opt callstack 0
  1780  0001B5                     	ds	13
  1781  0001C2                     _EUIDbyte:
  1782                           	opt callstack 0
  1783  0001C2                     	ds	12
  1784  0001CE                     _ledtasksbuf:
  1785                           	opt callstack 0
  1786  0001CE                     	ds	10
  1787  0001D8                     _rx_buffer_queue_context:
  1788                           	opt callstack 0
  1789  0001D8                     	ds	10
  1790  0001E2                     _rx_buffer_queue:
  1791                           	opt callstack 0
  1792  0001E2                     	ds	4
  1793                           
  1794                           	psect	dataBANK1
  1795  0001F2                     __pdataBANK1:
  1796                           	opt callstack 0
  1797  0001F2                     	ds	5
  1798  0001F7                     _test_timer:
  1799                           	opt callstack 0
  1800  0001F7                     	ds	2
  1801                           
  1802                           	psect	bssBANK2
  1803  000200                     __pbssBANK2:
  1804                           	opt callstack 0
  1805  000200                     _nwkGroups:
  1806                           	opt callstack 0
  1807  000200                     	ds	20
  1808  000214                     _uart1RxBuffer:
  1809                           	opt callstack 0
  1810  000214                     	ds	16
  1811  000224                     _net_key:
  1812                           	opt callstack 0
  1813  000224                     	ds	16
  1814  000234                     _aes_key:
  1815                           	opt callstack 0
  1816  000234                     	ds	16
  1817  000244                     _nwkRouteTable:
  1818                           	opt callstack 0
  1819  000244                     	ds	70
  1820  00028A                     _nwkRxDuplicateRejectionTable:
  1821                           	opt callstack 0
  1822  00028A                     	ds	50
  1823  0002BC                     _dbuf:
  1824                           	opt callstack 0
  1825  0002BC                     	ds	32
  1826                           
  1827                           	psect	dataBANK2
  1828  0002DC                     __pdataBANK2:
  1829                           	opt callstack 0
  1830  0002DC                     _syncList:
  1831                           	opt callstack 0
  1832  0002DC                     	ds	10
  1833                           
  1834                           	psect	bssBANK3
  1835  000300                     __pbssBANK3:
  1836                           	opt callstack 0
  1837  000300                     _uart1TxBuffer:
  1838                           	opt callstack 0
  1839  000300                     	ds	64
  1840  000340                     _phyRxBuffer:
  1841                           	opt callstack 0
  1842  000340                     	ds	128
  1843                           
  1844                           	psect	bssBANK4
  1845  000400                     __pbssBANK4:
  1846                           	opt callstack 0
  1847  000400                     _ledqueue:
  1848                           	opt callstack 0
  1849  000400                     	ds	96
  1850                           
  1851                           	psect	bssBANK5
  1852  000500                     __pbssBANK5:
  1853                           	opt callstack 0
  1854  000500                     _fhssReg:
  1855                           	opt callstack 0
  1856  000500                     	ds	189
  1857                           
  1858                           	psect	bssBIGRAM
  1859  0005BD                     __pbssBIGRAM:
  1860                           	opt callstack 0
  1861  0005BD                     _nwkFrameFrames:
  1862                           	opt callstack 0
  1863  0005BD                     	ds	685
  1864  00086A                     _tx_buffer:
  1865                           	opt callstack 0
  1866  00086A                     	ds	524
  1867  000A76                     _rx_buffer:
  1868                           	opt callstack 0
  1869  000A76                     	ds	488
  1870                           
  1871                           	psect	cstackBANK0
  1872  000060                     __pcstackBANK0:
  1873                           	opt callstack 0
  1874  000060                     vfpfcnvrt@ll:
  1875                           	opt callstack 0
  1876                           
  1877                           ; 8 bytes @ 0x0
  1878  000060                     	ds	8
  1879  000068                     vfpfcnvrt@c:
  1880                           	opt callstack 0
  1881                           
  1882                           ; 1 bytes @ 0x8
  1883  000068                     	ds	1
  1884  000069                     vfpfcnvrt@done:
  1885                           	opt callstack 0
  1886                           
  1887                           ; 2 bytes @ 0x9
  1888  000069                     	ds	2
  1889  00006B                     _vfpfcnvrt$7403:
  1890                           	opt callstack 0
  1891                           
  1892                           ; 2 bytes @ 0xB
  1893  00006B                     	ds	2
  1894  00006D                     vfpfcnvrt@llu:
  1895                           	opt callstack 0
  1896                           
  1897                           ; 8 bytes @ 0xD
  1898  00006D                     	ds	8
  1899  000075                     ?_printf:
  1900                           	opt callstack 0
  1901  000075                     printf@fmt:
  1902                           	opt callstack 0
  1903                           
  1904                           ; 2 bytes @ 0x15
  1905  000075                     	ds	10
  1906  00007F                     ??_print_hop_table:
  1907  00007F                     cmdBcast@p1:
  1908                           	opt callstack 0
  1909  00007F                     cmdSetAddr@p2:
  1910                           	opt callstack 0
  1911  00007F                     cmdSetNaddr@p2:
  1912                           	opt callstack 0
  1913  00007F                     cmdSetRFCH@p1:
  1914                           	opt callstack 0
  1915  00007F                     cmdSetTX@p2:
  1916                           	opt callstack 0
  1917  00007F                     cmdSetCADRSSI@p1:
  1918                           	opt callstack 0
  1919  00007F                     cmdSetSF@p1:
  1920                           	opt callstack 0
  1921  00007F                     cmdSend@destaddr:
  1922                           	opt callstack 0
  1923  00007F                     cmdSetAES@AESstr:
  1924                           	opt callstack 0
  1925                           
  1926                           ; 32 bytes @ 0x1F
  1927  00007F                     	ds	2
  1928  000081                     cmdBcast@buf_id:
  1929                           	opt callstack 0
  1930  000081                     cmdSetAddr@p1:
  1931                           	opt callstack 0
  1932  000081                     cmdSetNaddr@p1:
  1933                           	opt callstack 0
  1934  000081                     cmdSetTX@p1:
  1935                           	opt callstack 0
  1936  000081                     cmdSetRFCH@CHstr:
  1937                           	opt callstack 0
  1938  000081                     cmdSetCADRSSI@CHstr:
  1939                           	opt callstack 0
  1940  000081                     cmdSetSF@CHstr:
  1941                           	opt callstack 0
  1942                           
  1943                           ; 3 bytes @ 0x21
  1944  000081                     	ds	2
  1945  000083                     cmdSetNaddr@tempaddr:
  1946                           	opt callstack 0
  1947  000083                     cmdSetTX@temp:
  1948                           	opt callstack 0
  1949  000083                     cmdSetAddr@tempaddr:
  1950                           	opt callstack 0
  1951                           
  1952                           ; 2 bytes @ 0x23
  1953  000083                     	ds	1
  1954  000084                     cmdSend@tempaddr:
  1955                           	opt callstack 0
  1956  000084                     cmdSetRFCH@p2:
  1957                           	opt callstack 0
  1958  000084                     cmdSetCADRSSI@p2:
  1959                           	opt callstack 0
  1960  000084                     cmdSetSF@p2:
  1961                           	opt callstack 0
  1962  000084                     cmdSetTX@CHstr:
  1963                           	opt callstack 0
  1964                           
  1965                           ; 3 bytes @ 0x24
  1966  000084                     	ds	2
  1967  000086                     cmdSetRFCH@temp:
  1968                           	opt callstack 0
  1969  000086                     cmdSetCADRSSI@temp:
  1970                           	opt callstack 0
  1971  000086                     cmdSetSF@temp:
  1972                           	opt callstack 0
  1973  000086                     cmdSend@p2:
  1974                           	opt callstack 0
  1975                           
  1976                           ; 2 bytes @ 0x26
  1977  000086                     	ds	2
  1978  000088                     cmdSend@p1:
  1979                           	opt callstack 0
  1980                           
  1981                           ; 2 bytes @ 0x28
  1982  000088                     	ds	2
  1983  00008A                     cmdSend@buf_id:
  1984                           	opt callstack 0
  1985                           
  1986                           ; 1 bytes @ 0x2A
  1987  00008A                     	ds	21
  1988  00009F                     cmdSetAES@p2:
  1989                           	opt callstack 0
  1990                           
  1991                           ; 2 bytes @ 0x3F
  1992  00009F                     	ds	2
  1993  0000A1                     cmdSetAES@temp:
  1994                           	opt callstack 0
  1995                           
  1996                           ; 3 bytes @ 0x41
  1997  0000A1                     	ds	3
  1998  0000A4                     cmdSetAES@key_type:
  1999                           	opt callstack 0
  2000                           
  2001                           ; 1 bytes @ 0x44
  2002  0000A4                     	ds	1
  2003  0000A5                     cmdSetAES@byte:
  2004                           	opt callstack 0
  2005                           
  2006                           ; 1 bytes @ 0x45
  2007  0000A5                     	ds	1
  2008  0000A6                     cmdSetAES@p1:
  2009                           	opt callstack 0
  2010                           
  2011                           ; 2 bytes @ 0x46
  2012  0000A6                     	ds	2
  2013  0000A8                     cmdSetAES@i:
  2014                           	opt callstack 0
  2015                           
  2016                           ; 1 bytes @ 0x48
  2017  0000A8                     	ds	1
  2018  0000A9                     executeATCommand@cmd:
  2019                           	opt callstack 0
  2020                           
  2021                           ; 2 bytes @ 0x49
  2022  0000A9                     	ds	2
  2023  0000AB                     ??_executeATCommand:
  2024                           
  2025                           ; 1 bytes @ 0x4B
  2026  0000AB                     	ds	2
  2027  0000AD                     ??_processATCommand:
  2028                           
  2029                           ; 1 bytes @ 0x4D
  2030  0000AD                     	ds	2
  2031  0000AF                     processATCommand@data_930:
  2032                           	opt callstack 0
  2033                           
  2034                           ; 1 bytes @ 0x4F
  2035  0000AF                     	ds	1
  2036  0000B0                     processATCommand@data:
  2037                           	opt callstack 0
  2038                           
  2039                           ; 1 bytes @ 0x50
  2040  0000B0                     	ds	1
  2041                           
  2042                           	psect	cstackCOMRAM
  2043  000001                     __pcstackCOMRAM:
  2044                           	opt callstack 0
  2045  000001                     ??_TMR0_ISR:
  2046  000001                     
  2047                           ; 1 bytes @ 0x0
  2048  000001                     	ds	1
  2049  000002                     ??_CRC_Initialize:
  2050  000002                     ??_nwkRouteNormalizeRanks:
  2051  000002                     ??_set_parity:
  2052  000002                     ??_set_uart_baud:
  2053  000002                     ??_nwkTxConvertPhyStatus:
  2054  000002                     ?_strlen:
  2055                           	opt callstack 0
  2056  000002                     ?_NWK_RouteTable:
  2057                           	opt callstack 0
  2058  000002                     ?_get_timer0base:
  2059                           	opt callstack 0
  2060  000002                     ?_nwkFrameNext:
  2061                           	opt callstack 0
  2062  000002                     ?_NWK_RouteFindEntry:
  2063                           	opt callstack 0
  2064  000002                     ?_NWK_RouteNewEntry:
  2065                           	opt callstack 0
  2066  000002                     ?_isupper:
  2067                           	opt callstack 0
  2068  000002                     ?_isalpha:
  2069                           	opt callstack 0
  2070  000002                     ?_isdigit:
  2071                           	opt callstack 0
  2072  000002                     ?_isspace:
  2073                           	opt callstack 0
  2074  000002                     ?_strncmp:
  2075                           	opt callstack 0
  2076  000002                     ?_strchr:
  2077                           	opt callstack 0
  2078  000002                     ?_islower:
  2079                           	opt callstack 0
  2080  000002                     ?_CircularBufferSize:
  2081                           	opt callstack 0
  2082  000002                     ?_CRC_ReverseValue:
  2083                           	opt callstack 0
  2084  000002                     ?___wmul:
  2085                           	opt callstack 0
  2086  000002                     ?___lwdiv:
  2087                           	opt callstack 0
  2088  000002                     ?___lmul:
  2089                           	opt callstack 0
  2090  000002                     ?___llmod:
  2091                           	opt callstack 0
  2092  000002                     ?___xxtofl:
  2093                           	opt callstack 0
  2094  000002                     ?___omul:
  2095                           	opt callstack 0
  2096  000002                     ?___aodiv:
  2097                           	opt callstack 0
  2098  000002                     ?___aomod:
  2099                           	opt callstack 0
  2100  000002                     ?___lodiv:
  2101                           	opt callstack 0
  2102  000002                     ?___lomod:
  2103                           	opt callstack 0
  2104  000002                     get_free_tx_buffer@buf_id:
  2105                           	opt callstack 0
  2106  000002                     get_free_rx_buffer@buf_id:
  2107                           	opt callstack 0
  2108  000002                     get_timer0base@timer:
  2109                           	opt callstack 0
  2110  000002                     set_timer0base@timer:
  2111                           	opt callstack 0
  2112  000002                     SPI1_ExchangeByte@data:
  2113                           	opt callstack 0
  2114  000002                     INTERRUPT_Initialize@state:
  2115                           	opt callstack 0
  2116  000002                     UART1_Read@readValue:
  2117                           	opt callstack 0
  2118  000002                     UART1_Write@txData:
  2119                           	opt callstack 0
  2120  000002                     CRC_8BitDataWrite@data:
  2121                           	opt callstack 0
  2122  000002                     nwkFrameInit@i:
  2123                           	opt callstack 0
  2124  000002                     nwkGroupInit@i:
  2125                           	opt callstack 0
  2126  000002                     nwkRouteInit@i:
  2127                           	opt callstack 0
  2128  000002                     get_rssi@rssi_reg:
  2129                           	opt callstack 0
  2130  000002                     free_tx_buffer@req:
  2131                           	opt callstack 0
  2132  000002                     cmdSendSink@cmd:
  2133                           	opt callstack 0
  2134  000002                     cmdSetTTL@cmd:
  2135                           	opt callstack 0
  2136  000002                     CircularBufferSize@ctx:
  2137                           	opt callstack 0
  2138  000002                     CircularBufferEmpty@ctx:
  2139                           	opt callstack 0
  2140  000002                     TMR0_SetInterruptHandler@InterruptHandler:
  2141                           	opt callstack 0
  2142  000002                     DATAEE_WriteByte@bAdd:
  2143                           	opt callstack 0
  2144  000002                     DATAEE_ReadByte@bAdd:
  2145                           	opt callstack 0
  2146  000002                     UART1_SetFramingErrorHandler@interruptHandler:
  2147                           	opt callstack 0
  2148  000002                     UART1_SetOverrunErrorHandler@interruptHandler:
  2149                           	opt callstack 0
  2150  000002                     UART1_SetErrorHandler@interruptHandler:
  2151                           	opt callstack 0
  2152  000002                     UART1_SetRxInterruptHandler@InterruptHandler:
  2153                           	opt callstack 0
  2154  000002                     UART1_SetTxInterruptHandler@InterruptHandler:
  2155                           	opt callstack 0
  2156  000002                     CRC_ReverseValue@crc:
  2157                           	opt callstack 0
  2158  000002                     NWK_OpenEndpoint@handler:
  2159                           	opt callstack 0
  2160  000002                     NWK_DataReq@req:
  2161                           	opt callstack 0
  2162  000002                     nwkFrameFree@frame:
  2163                           	opt callstack 0
  2164  000002                     nwkFrameNext@frame:
  2165                           	opt callstack 0
  2166  000002                     nwkFrameCommandInit@frame:
  2167                           	opt callstack 0
  2168  000002                     NWK_GroupIsMember@group:
  2169                           	opt callstack 0
  2170  000002                     NWK_RouteFindEntry@dst:
  2171                           	opt callstack 0
  2172  000002                     NWK_RouteFreeEntry@entry:
  2173                           	opt callstack 0
  2174  000002                     nwkFrame@nwkFramePayloadSize@frame_4851:
  2175                           	opt callstack 0
  2176  000002                     nwkTxConfirm@frame:
  2177                           	opt callstack 0
  2178  000002                     PHY_SetPanId@panId:
  2179                           	opt callstack 0
  2180  000002                     PHY_SetShortAddr@addr:
  2181                           	opt callstack 0
  2182  000002                     SYS_TimerStarted@timer:
  2183                           	opt callstack 0
  2184  000002                     placeTimer@timer:
  2185                           	opt callstack 0
  2186  000002                     ___wmul@multiplier:
  2187                           	opt callstack 0
  2188  000002                     ___lwdiv@dividend:
  2189                           	opt callstack 0
  2190  000002                     isalpha@c:
  2191                           	opt callstack 0
  2192  000002                     isdigit@c:
  2193                           	opt callstack 0
  2194  000002                     isspace@c:
  2195                           	opt callstack 0
  2196  000002                     isupper@c:
  2197                           	opt callstack 0
  2198  000002                     memset@dest:
  2199                           	opt callstack 0
  2200  000002                     srand@s:
  2201                           	opt callstack 0
  2202  000002                     strlen@s:
  2203                           	opt callstack 0
  2204  000002                     islower@c:
  2205                           	opt callstack 0
  2206  000002                     strchr@s:
  2207                           	opt callstack 0
  2208  000002                     strncmp@_l:
  2209                           	opt callstack 0
  2210  000002                     DIA_ReadByte@flashAddr:
  2211                           	opt callstack 0
  2212  000002                     ___lmul@multiplier:
  2213                           	opt callstack 0
  2214  000002                     ___llmod@dividend:
  2215                           	opt callstack 0
  2216  000002                     ___xxtofl@val:
  2217                           	opt callstack 0
  2218  000002                     ___omul@multiplier:
  2219                           	opt callstack 0
  2220  000002                     ___aodiv@dividend:
  2221                           	opt callstack 0
  2222  000002                     ___aomod@dividend:
  2223                           	opt callstack 0
  2224  000002                     ___lodiv@dividend:
  2225                           	opt callstack 0
  2226  000002                     ___lomod@dividend:
  2227                           	opt callstack 0
  2228                           
  2229                           ; 8 bytes @ 0x1
  2230  000002                     	ds	1
  2231  000003                     ??_get_free_rx_buffer:
  2232  000003                     ??_get_free_tx_buffer:
  2233  000003                     putch@txData:
  2234                           	opt callstack 0
  2235  000003                     nwkRouteNormalizeRanks@i:
  2236                           	opt callstack 0
  2237  000003                     set_timer0base@tval:
  2238                           	opt callstack 0
  2239  000003                     SPI1_WriteBlock@block:
  2240                           	opt callstack 0
  2241  000003                     SPI1_ReadBlock@block:
  2242                           	opt callstack 0
  2243  000003                     CRC_Initialize@poly:
  2244                           	opt callstack 0
  2245  000003                     get_rssi@temp_rssi:
  2246                           	opt callstack 0
  2247                           
  2248                           ; 2 bytes @ 0x2
  2249  000003                     	ds	1
  2250  000004                     ??_free_tx_buffer:
  2251  000004                     ??_nwkFrameNext:
  2252  000004                     ??_srand:
  2253  000004                     ??_isupper:
  2254  000004                     ??_isalpha:
  2255  000004                     ??_isdigit:
  2256  000004                     ??_isspace:
  2257  000004                     ??_islower:
  2258  000004                     ??_CircularBufferSize:
  2259  000004                     ??_TMR0_Initialize:
  2260  000004                     ??_CRC_ReverseValue:
  2261  000004                     ??strspn@nwkFrame@nwkFramePayloadSize:
  2262  000004                     set_parity@parity:
  2263                           	opt callstack 0
  2264  000004                     set_uart_baud@i:
  2265                           	opt callstack 0
  2266  000004                     DATAEE_WriteByte@bData:
  2267                           	opt callstack 0
  2268  000004                     NWK_OpenEndpoint@id:
  2269                           	opt callstack 0
  2270  000004                     NWK_RouteFindEntry@multicast:
  2271                           	opt callstack 0
  2272  000004                     nwkTxConfirm@status:
  2273                           	opt callstack 0
  2274  000004                     nwkTxConvertPhyStatus@status:
  2275                           	opt callstack 0
  2276  000004                     get_timer0base@tval:
  2277                           	opt callstack 0
  2278  000004                     NWK_SetAddr@addr:
  2279                           	opt callstack 0
  2280  000004                     NWK_SetPanId@panId:
  2281                           	opt callstack 0
  2282  000004                     nwkDataReqTxConf@frame:
  2283                           	opt callstack 0
  2284  000004                     SYS_TimerStarted@t:
  2285                           	opt callstack 0
  2286  000004                     ___wmul@multiplicand:
  2287                           	opt callstack 0
  2288  000004                     ___lwdiv@divisor:
  2289                           	opt callstack 0
  2290  000004                     memset@c:
  2291                           	opt callstack 0
  2292  000004                     fputc@c:
  2293                           	opt callstack 0
  2294  000004                     strlen@a:
  2295                           	opt callstack 0
  2296  000004                     strchr@c:
  2297                           	opt callstack 0
  2298  000004                     strncmp@_r:
  2299                           	opt callstack 0
  2300                           
  2301                           ; 2 bytes @ 0x3
  2302  000004                     	ds	1
  2303  000005                     DATAEE_WriteByte@GIEBitValue:
  2304                           	opt callstack 0
  2305  000005                     nwkRxInit@i:
  2306                           	opt callstack 0
  2307  000005                     PHY_DataConf@status:
  2308                           	opt callstack 0
  2309  000005                     SPI1_WriteBlock@blockSize:
  2310                           	opt callstack 0
  2311  000005                     SPI1_ReadBlock@blockSize:
  2312                           	opt callstack 0
  2313  000005                     CRC_Initialize@seed:
  2314                           	opt callstack 0
  2315  000005                     CRC_ReverseValue@reverse:
  2316                           	opt callstack 0
  2317                           
  2318                           ; 2 bytes @ 0x4
  2319  000005                     	ds	1
  2320  000006                     ??_strchr:
  2321  000006                     ??___xxtofl:
  2322  000006                     free_tx_buffer@buf_id:
  2323                           	opt callstack 0
  2324  000006                     loadMACAddr@i:
  2325                           	opt callstack 0
  2326  000006                     NWK_Init@i:
  2327                           	opt callstack 0
  2328  000006                     NWK_GroupIsMember@i:
  2329                           	opt callstack 0
  2330  000006                     NWK_RouteNewEntry@i:
  2331                           	opt callstack 0
  2332  000006                     DATAEE_ReadByte_Platform@addr:
  2333                           	opt callstack 0
  2334  000006                     DATAEE_WriteByte_Platform@addr:
  2335                           	opt callstack 0
  2336  000006                     ___wmul@product:
  2337                           	opt callstack 0
  2338  000006                     ___lwdiv@quotient:
  2339                           	opt callstack 0
  2340  000006                     memset@n:
  2341                           	opt callstack 0
  2342  000006                     fputc@fp:
  2343                           	opt callstack 0
  2344  000006                     strncmp@n:
  2345                           	opt callstack 0
  2346  000006                     ___lmul@multiplicand:
  2347                           	opt callstack 0
  2348  000006                     ___llmod@divisor:
  2349                           	opt callstack 0
  2350                           
  2351                           ; 4 bytes @ 0x5
  2352  000006                     	ds	1
  2353  000007                     NWK_RouteFindEntry@i:
  2354                           	opt callstack 0
  2355  000007                     appDataConf@req:
  2356                           	opt callstack 0
  2357  000007                     SPI1_WriteBlock@data:
  2358                           	opt callstack 0
  2359  000007                     SPI1_ReadBlock@data:
  2360                           	opt callstack 0
  2361  000007                     CRC_ReverseValue@mask:
  2362                           	opt callstack 0
  2363  000007                     NWK_RouteNewEntry@iter:
  2364                           	opt callstack 0
  2365                           
  2366                           ; 2 bytes @ 0x6
  2367  000007                     	ds	1
  2368  000008                     ??_memset:
  2369  000008                     ??_fputc:
  2370  000008                     ??_strncmp:
  2371  000008                     ?_toupper:
  2372                           	opt callstack 0
  2373  000008                     ?_strspn:
  2374                           	opt callstack 0
  2375  000008                     ?_strcspn:
  2376                           	opt callstack 0
  2377  000008                     ?_NWK_RouteNextHop:
  2378                           	opt callstack 0
  2379  000008                     DATAEE_ReadByte_Platform@copy3:
  2380                           	opt callstack 0
  2381  000008                     DATAEE_WriteByte_Platform@data:
  2382                           	opt callstack 0
  2383  000008                     nwkTxAckReceived@ind:
  2384                           	opt callstack 0
  2385  000008                     ___lwdiv@counter:
  2386                           	opt callstack 0
  2387  000008                     _isspace$7889:
  2388                           	opt callstack 0
  2389  000008                     nwkDataReqTxConf@req:
  2390                           	opt callstack 0
  2391  000008                     NWK_RouteNextHop@dst:
  2392                           	opt callstack 0
  2393  000008                     nwkRouteRemove@dst:
  2394                           	opt callstack 0
  2395  000008                     nwkRouteFrameSent@frame:
  2396                           	opt callstack 0
  2397  000008                     memcpy@d1:
  2398                           	opt callstack 0
  2399  000008                     toupper@c:
  2400                           	opt callstack 0
  2401  000008                     strcspn@s:
  2402                           	opt callstack 0
  2403  000008                     strspn@s:
  2404                           	opt callstack 0
  2405  000008                     placeTimer@timeout:
  2406                           	opt callstack 0
  2407                           
  2408                           ; 4 bytes @ 0x7
  2409  000008                     	ds	1
  2410  000009                     ?_CRC_CalculatedResultGet:
  2411                           	opt callstack 0
  2412  000009                     ?_atoi:
  2413                           	opt callstack 0
  2414  000009                     DATAEE_ReadByte_Platform@copy2:
  2415                           	opt callstack 0
  2416  000009                     SX1276WriteBuffer@buffer:
  2417                           	opt callstack 0
  2418  000009                     CircularBufferInit@ctx:
  2419                           	opt callstack 0
  2420  000009                     CRC_CalculatedResultGet@xorValue:
  2421                           	opt callstack 0
  2422  000009                     nwkDataReqConfirm@req:
  2423                           	opt callstack 0
  2424  000009                     NWK_RouteNewEntry@entry:
  2425                           	opt callstack 0
  2426  000009                     SX1276ReadBuffer@buffer:
  2427                           	opt callstack 0
  2428  000009                     atoi@s:
  2429                           	opt callstack 0
  2430  000009                     strncmp@l:
  2431                           	opt callstack 0
  2432                           
  2433                           ; 2 bytes @ 0x8
  2434  000009                     	ds	1
  2435  00000A                     ??_toupper:
  2436  00000A                     ??_nwkRouteFrameSent:
  2437  00000A                     ?_CircularBufferSpace:
  2438                           	opt callstack 0
  2439  00000A                     DATAEE_ReadByte_Platform@copy1:
  2440                           	opt callstack 0
  2441  00000A                     NWK_RouteNextHop@multicast:
  2442                           	opt callstack 0
  2443  00000A                     nwkRouteRemove@multicast:
  2444                           	opt callstack 0
  2445  00000A                     SX1276WriteBuffer@size:
  2446                           	opt callstack 0
  2447  00000A                     ___llmod@counter:
  2448                           	opt callstack 0
  2449  00000A                     ___xxtofl@sign:
  2450                           	opt callstack 0
  2451  00000A                     CircularBufferSpace@ctx:
  2452                           	opt callstack 0
  2453  00000A                     memcpy@s1:
  2454                           	opt callstack 0
  2455  00000A                     memset@k:
  2456                           	opt callstack 0
  2457  00000A                     strcspn@c:
  2458                           	opt callstack 0
  2459  00000A                     strspn@c:
  2460                           	opt callstack 0
  2461  00000A                     ___lmul@product:
  2462                           	opt callstack 0
  2463  00000A                     ___omul@multiplicand:
  2464                           	opt callstack 0
  2465  00000A                     ___aodiv@divisor:
  2466                           	opt callstack 0
  2467  00000A                     ___aomod@divisor:
  2468                           	opt callstack 0
  2469  00000A                     ___lodiv@divisor:
  2470                           	opt callstack 0
  2471  00000A                     ___lomod@divisor:
  2472                           	opt callstack 0
  2473                           
  2474                           ; 8 bytes @ 0x9
  2475  00000A                     	ds	1
  2476  00000B                     ??_CRC_CalculatedResultGet:
  2477  00000B                     ??_atoi:
  2478  00000B                     ??_nwkDataReqConfirm:
  2479  00000B                     SX1276ReadBuffer@size:
  2480                           	opt callstack 0
  2481  00000B                     SX1276WriteBuffer@addr:
  2482                           	opt callstack 0
  2483  00000B                     ___xxtofl@exp:
  2484                           	opt callstack 0
  2485  00000B                     CircularBufferInit@buf:
  2486                           	opt callstack 0
  2487  00000B                     NWK_RouteNextHop@entry:
  2488                           	opt callstack 0
  2489  00000B                     nwkRouteRemove@entry:
  2490                           	opt callstack 0
  2491  00000B                     nwkRouteFrameReceived@frame:
  2492                           	opt callstack 0
  2493  00000B                     nwkTxAckReceived@command:
  2494                           	opt callstack 0
  2495  00000B                     strncmp@r:
  2496                           	opt callstack 0
  2497                           
  2498                           ; 2 bytes @ 0xA
  2499  00000B                     	ds	1
  2500  00000C                     ??_strspn:
  2501  00000C                     ??_strcspn:
  2502  00000C                     ??_CircularBufferSpace:
  2503  00000C                     SX1276ReadBuffer@addr:
  2504                           	opt callstack 0
  2505  00000C                     nwkRouteFrameSent@entry:
  2506                           	opt callstack 0
  2507  00000C                     placeTimer@prev:
  2508                           	opt callstack 0
  2509  00000C                     memcpy@n:
  2510                           	opt callstack 0
  2511  00000C                     memset@s:
  2512                           	opt callstack 0
  2513  00000C                     ___xxtofl@arg:
  2514                           	opt callstack 0
  2515                           
  2516                           ; 4 bytes @ 0xB
  2517  00000C                     	ds	1
  2518  00000D                     ??_nwkRouteFrameReceived:
  2519  00000D                     ?_strstr:
  2520                           	opt callstack 0
  2521  00000D                     nwkRouteErrorReceived@ind:
  2522                           	opt callstack 0
  2523  00000D                     SX1276Read@addr:
  2524                           	opt callstack 0
  2525  00000D                     CircularBufferInit@buf_size:
  2526                           	opt callstack 0
  2527  00000D                     nwkDataReqConfirm@prev:
  2528                           	opt callstack 0
  2529  00000D                     nwkRoutePrepareTx@frame:
  2530                           	opt callstack 0
  2531  00000D                     nwkTxAckReceived@frame:
  2532                           	opt callstack 0
  2533  00000D                     fputs@s:
  2534                           	opt callstack 0
  2535  00000D                     strstr@h:
  2536                           	opt callstack 0
  2537  00000D                     strcspn@i:
  2538                           	opt callstack 0
  2539  00000D                     strspn@i:
  2540                           	opt callstack 0
  2541                           
  2542                           ; 2 bytes @ 0xC
  2543  00000D                     	ds	1
  2544  00000E                     ?_nwkFrameAlloc:
  2545                           	opt callstack 0
  2546  00000E                     SX1276Read@data:
  2547                           	opt callstack 0
  2548  00000E                     memcpy@tmp:
  2549                           	opt callstack 0
  2550  00000E                     CRC_CalculatedResultGet@mask:
  2551                           	opt callstack 0
  2552  00000E                     placeTimer@t:
  2553                           	opt callstack 0
  2554  00000E                     _toupper$8027:
  2555                           	opt callstack 0
  2556                           
  2557                           ; 2 bytes @ 0xD
  2558  00000E                     	ds	1
  2559  00000F                     ?_strtok:
  2560                           	opt callstack 0
  2561  00000F                     ?_getSignalBandwidth:
  2562                           	opt callstack 0
  2563  00000F                     ?_getSpreadingFactor:
  2564                           	opt callstack 0
  2565  00000F                     SX1276Write@data:
  2566                           	opt callstack 0
  2567  00000F                     CircularBufferInit@element_size:
  2568                           	opt callstack 0
  2569  00000F                     nwkRouteErrorReceived@command:
  2570                           	opt callstack 0
  2571  00000F                     atoi@neg:
  2572                           	opt callstack 0
  2573  00000F                     memcpy@d:
  2574                           	opt callstack 0
  2575  00000F                     fputs@fp:
  2576                           	opt callstack 0
  2577  00000F                     strstr@n:
  2578                           	opt callstack 0
  2579  00000F                     strtok@s:
  2580                           	opt callstack 0
  2581                           
  2582                           ; 2 bytes @ 0xE
  2583  00000F                     	ds	1
  2584  000010                     ??_nwkFrameAlloc:
  2585  000010                     ?___flmul:
  2586                           	opt callstack 0
  2587  000010                     ?___strtoxl:
  2588                           	opt callstack 0
  2589  000010                     CRC_CalculatedResultGet@reverse:
  2590                           	opt callstack 0
  2591  000010                     SX1276Write@addr:
  2592                           	opt callstack 0
  2593  000010                     SYS_TimerStart@timer:
  2594                           	opt callstack 0
  2595  000010                     ___strtoxl@s:
  2596                           	opt callstack 0
  2597  000010                     ___flge@ff1:
  2598                           	opt callstack 0
  2599  000010                     ___flmul@b:
  2600                           	opt callstack 0
  2601                           
  2602                           ; 4 bytes @ 0xF
  2603  000010                     	ds	1
  2604  000011                     ??_CircularBufferInit:
  2605  000011                     ??_setCodingRate4:
  2606  000011                     ??_cad:
  2607  000011                     nwkRouteFrameReceived@discovery:
  2608                           	opt callstack 0
  2609  000011                     setTxPower@power:
  2610                           	opt callstack 0
  2611  000011                     setSyncWord@sw:
  2612                           	opt callstack 0
  2613  000011                     receive@size:
  2614                           	opt callstack 0
  2615  000011                     fputs@c:
  2616                           	opt callstack 0
  2617  000011                     CRC_CalculatedResultGet@result:
  2618                           	opt callstack 0
  2619  000011                     nwkRoutePrepareTx@header:
  2620                           	opt callstack 0
  2621  000011                     setPreambleLength@length:
  2622                           	opt callstack 0
  2623  000011                     PHY_DataReq@data:
  2624                           	opt callstack 0
  2625  000011                     _atoi$7862:
  2626                           	opt callstack 0
  2627  000011                     memcpy@s:
  2628                           	opt callstack 0
  2629  000011                     strstr@nl:
  2630                           	opt callstack 0
  2631  000011                     strtok@sep:
  2632                           	opt callstack 0
  2633                           
  2634                           ; 2 bytes @ 0x10
  2635  000011                     	ds	1
  2636  000012                     nwkFrameAlloc@i:
  2637                           	opt callstack 0
  2638  000012                     _nwkRouteFrameReceived$4265:
  2639                           	opt callstack 0
  2640  000012                     setCodingRate4@cr:
  2641                           	opt callstack 0
  2642  000012                     ___aodiv@counter:
  2643                           	opt callstack 0
  2644  000012                     ___aomod@counter:
  2645                           	opt callstack 0
  2646  000012                     ___lomod@counter:
  2647                           	opt callstack 0
  2648  000012                     nwkRxDuplicateRejectionTimerHandler@timer:
  2649                           	opt callstack 0
  2650  000012                     nwkRxRejectDuplicate@header:
  2651                           	opt callstack 0
  2652  000012                     nwkTxAckWaitTimerHandler@timer:
  2653                           	opt callstack 0
  2654  000012                     nwkTxDelayTimerHandler@timer:
  2655                           	opt callstack 0
  2656  000012                     cad@RSSI:
  2657                           	opt callstack 0
  2658  000012                     fputs@i:
  2659                           	opt callstack 0
  2660  000012                     ___strtoxl@endptr:
  2661                           	opt callstack 0
  2662  000012                     ___omul@product:
  2663                           	opt callstack 0
  2664  000012                     ___lodiv@quotient:
  2665                           	opt callstack 0
  2666                           
  2667                           ; 8 bytes @ 0x11
  2668  000012                     	ds	1
  2669  000013                     ??_getSignalBandwidth:
  2670  000013                     ??_getSpreadingFactor:
  2671  000013                     ?_crc16_app:
  2672                           	opt callstack 0
  2673  000013                     PHY_DataInd@ind:
  2674                           	opt callstack 0
  2675  000013                     setCodingRate4@denominator:
  2676                           	opt callstack 0
  2677  000013                     PHY_DataReq@size:
  2678                           	opt callstack 0
  2679  000013                     ___aodiv@sign:
  2680                           	opt callstack 0
  2681  000013                     ___aomod@sign:
  2682                           	opt callstack 0
  2683  000013                     CircularBufferPushBack@ctx:
  2684                           	opt callstack 0
  2685  000013                     CircularBufferPopFront@ctx:
  2686                           	opt callstack 0
  2687  000013                     crc16_app@dptr:
  2688                           	opt callstack 0
  2689  000013                     nwkRouteFrameReceived@entry:
  2690                           	opt callstack 0
  2691  000013                     _atoi$7864:
  2692                           	opt callstack 0
  2693                           
  2694                           ; 2 bytes @ 0x12
  2695  000013                     	ds	1
  2696  000014                     ??_nwkTxTaskHandler:
  2697  000014                     ??_PHY_DataInd:
  2698  000014                     ??_nwkRxRejectDuplicate:
  2699  000014                     ?_abs:
  2700                           	opt callstack 0
  2701  000014                     ?_pad:
  2702                           	opt callstack 0
  2703  000014                     nwkRxDuplicateRejectionTimerHandler@restart:
  2704                           	opt callstack 0
  2705  000014                     cad@temp:
  2706                           	opt callstack 0
  2707  000014                     pad@fp:
  2708                           	opt callstack 0
  2709  000014                     abs@a:
  2710                           	opt callstack 0
  2711  000014                     ___strtoxl@base:
  2712                           	opt callstack 0
  2713  000014                     ___flge@ff2:
  2714                           	opt callstack 0
  2715  000014                     ___flmul@a:
  2716                           	opt callstack 0
  2717  000014                     ___aodiv@quotient:
  2718                           	opt callstack 0
  2719                           
  2720                           ; 8 bytes @ 0x13
  2721  000014                     	ds	1
  2722  000015                     CircularBufferPushBack@val:
  2723                           	opt callstack 0
  2724  000015                     CircularBufferPopFront@val:
  2725                           	opt callstack 0
  2726  000015                     nwkRxDuplicateRejectionTimerHandler@i:
  2727                           	opt callstack 0
  2728  000015                     getSignalBandwidth@bw:
  2729                           	opt callstack 0
  2730  000015                     _atoi$7863:
  2731                           	opt callstack 0
  2732  000015                     CircularBufferInit@size:
  2733                           	opt callstack 0
  2734  000015                     crc16_app@len:
  2735                           	opt callstack 0
  2736  000015                     nwkRouteFrameReceived@header:
  2737                           	opt callstack 0
  2738                           
  2739                           ; 2 bytes @ 0x14
  2740  000015                     	ds	1
  2741  000016                     ??_CircularBufferPushBack:
  2742  000016                     ??_CircularBufferPopFront:
  2743  000016                     ??_abs:
  2744  000016                     ?___lldiv:
  2745                           	opt callstack 0
  2746  000016                     nwkTxAckWaitTimerHandler@restart:
  2747                           	opt callstack 0
  2748  000016                     nwkTxDelayTimerHandler@restart:
  2749                           	opt callstack 0
  2750  000016                     ___strtoxl@is_signed:
  2751                           	opt callstack 0
  2752  000016                     nwkTxTaskHandler@frame:
  2753                           	opt callstack 0
  2754  000016                     pad@buf:
  2755                           	opt callstack 0
  2756  000016                     atoi@n:
  2757                           	opt callstack 0
  2758  000016                     ___lldiv@dividend:
  2759                           	opt callstack 0
  2760                           
  2761                           ; 4 bytes @ 0x15
  2762  000016                     	ds	1
  2763  000017                     ??___strtoxl:
  2764  000017                     crc16_app@seed:
  2765                           	opt callstack 0
  2766  000017                     PHY_DataInd@frame:
  2767                           	opt callstack 0
  2768  000017                     nwkTxAckWaitTimerHandler@frame:
  2769                           	opt callstack 0
  2770  000017                     nwkTxDelayTimerHandler@frame:
  2771                           	opt callstack 0
  2772                           
  2773                           ; 2 bytes @ 0x16
  2774  000017                     	ds	1
  2775  000018                     ??___flmul:
  2776  000018                     ??___flge:
  2777  000018                     nwkRxRejectDuplicate@shift:
  2778                           	opt callstack 0
  2779  000018                     pad@p:
  2780                           	opt callstack 0
  2781                           
  2782                           ; 2 bytes @ 0x17
  2783  000018                     	ds	1
  2784  000019                     ??_SYS_TimerTaskHandler:
  2785  000019                     nwkRxRejectDuplicate@i:
  2786                           	opt callstack 0
  2787  000019                     crc16_app@result:
  2788                           	opt callstack 0
  2789                           
  2790                           ; 2 bytes @ 0x18
  2791  000019                     	ds	1
  2792  00001A                     ??_pad:
  2793  00001A                     ?_rand:
  2794                           	opt callstack 0
  2795  00001A                     nwkRxRejectDuplicate@diff:
  2796                           	opt callstack 0
  2797  00001A                     ___lodiv@counter:
  2798                           	opt callstack 0
  2799  00001A                     CircularBufferPushBack@write_pos:
  2800                           	opt callstack 0
  2801  00001A                     ___lldiv@divisor:
  2802                           	opt callstack 0
  2803                           
  2804                           ; 4 bytes @ 0x19
  2805  00001A                     	ds	1
  2806  00001B                     crc16_app@ptr:
  2807                           	opt callstack 0
  2808  00001B                     nwkRxRejectDuplicate@freeEntry:
  2809                           	opt callstack 0
  2810  00001B                     pad@i:
  2811                           	opt callstack 0
  2812  00001B                     ___strtoxl@prev_a:
  2813                           	opt callstack 0
  2814                           
  2815                           ; 4 bytes @ 0x1A
  2816  00001B                     	ds	1
  2817  00001C                     ??_rand:
  2818  00001C                     appDataInd@ind:
  2819                           	opt callstack 0
  2820  00001C                     nwkRxServiceDataInd@ind:
  2821                           	opt callstack 0
  2822  00001C                     ___flmul@sign:
  2823                           	opt callstack 0
  2824  00001C                     queueLedEvent@duration:
  2825                           	opt callstack 0
  2826                           
  2827                           ; 2 bytes @ 0x1B
  2828  00001C                     	ds	1
  2829  00001D                     ??_nwkRxServiceDataInd:
  2830  00001D                     ??_appDataInd:
  2831  00001D                     SYS_TimerTaskHandler@cnt:
  2832                           	opt callstack 0
  2833  00001D                     ___flmul@aexp:
  2834                           	opt callstack 0
  2835  00001D                     crc16_app@i:
  2836                           	opt callstack 0
  2837  00001D                     nwkRxRejectDuplicate@entry:
  2838                           	opt callstack 0
  2839  00001D                     pad@w:
  2840                           	opt callstack 0
  2841                           
  2842                           ; 2 bytes @ 0x1C
  2843  00001D                     	ds	1
  2844  00001E                     queueLedEvent@LEDState:
  2845                           	opt callstack 0
  2846  00001E                     appDataInd@dataptr:
  2847                           	opt callstack 0
  2848  00001E                     SYS_TimerTaskHandler@elapsed:
  2849                           	opt callstack 0
  2850  00001E                     ___lldiv@quotient:
  2851                           	opt callstack 0
  2852  00001E                     ___flmul@grs:
  2853                           	opt callstack 0
  2854                           
  2855                           ; 4 bytes @ 0x1D
  2856  00001E                     	ds	1
  2857  00001F                     ?_dtoa:
  2858                           	opt callstack 0
  2859  00001F                     ?_utoa:
  2860                           	opt callstack 0
  2861  00001F                     ?_xtoa:
  2862                           	opt callstack 0
  2863  00001F                     dtoa@fp:
  2864                           	opt callstack 0
  2865  00001F                     utoa@fp:
  2866                           	opt callstack 0
  2867  00001F                     xtoa@fp:
  2868                           	opt callstack 0
  2869  00001F                     ___strtoxl$8049:
  2870                           	opt callstack 0
  2871  00001F                     queueLedEvent@temp:
  2872                           	opt callstack 0
  2873                           
  2874                           ; 3 bytes @ 0x1E
  2875  00001F                     	ds	1
  2876  000020                     appDataInd@buf_id:
  2877                           	opt callstack 0
  2878                           
  2879                           ; 1 bytes @ 0x1F
  2880  000020                     	ds	1
  2881  000021                     nwkRxIndicateFrame@frame:
  2882                           	opt callstack 0
  2883  000021                     ___strtoxl$8051:
  2884                           	opt callstack 0
  2885  000021                     dtoa@d:
  2886                           	opt callstack 0
  2887  000021                     utoa@d:
  2888                           	opt callstack 0
  2889  000021                     xtoa@d:
  2890                           	opt callstack 0
  2891                           
  2892                           ; 8 bytes @ 0x20
  2893  000021                     	ds	1
  2894  000022                     queue_serial_led_event@i:
  2895                           	opt callstack 0
  2896  000022                     ___lldiv@counter:
  2897                           	opt callstack 0
  2898  000022                     ___flmul@bexp:
  2899                           	opt callstack 0
  2900  000022                     SYS_TimerTaskHandler@timer:
  2901                           	opt callstack 0
  2902                           
  2903                           ; 2 bytes @ 0x21
  2904  000022                     	ds	1
  2905  000023                     ??_nwkRxIndicateFrame:
  2906  000023                     ??_setSpreadingFactor:
  2907  000023                     ___strtoxl$8052:
  2908                           	opt callstack 0
  2909  000023                     setFrequency@frequency:
  2910                           	opt callstack 0
  2911  000023                     setSignalBandwidth@sbw:
  2912                           	opt callstack 0
  2913  000023                     computeFRF@frequency:
  2914                           	opt callstack 0
  2915  000023                     ___flmul@prod:
  2916                           	opt callstack 0
  2917                           
  2918                           ; 4 bytes @ 0x22
  2919  000023                     	ds	1
  2920  000024                     nwkTxFrame@frame:
  2921                           	opt callstack 0
  2922  000024                     nwkTxBroadcastFrame@frame:
  2923                           	opt callstack 0
  2924                           
  2925                           ; 2 bytes @ 0x23
  2926  000024                     	ds	1
  2927  000025                     ___strtoxl$8050:
  2928                           	opt callstack 0
  2929                           
  2930                           ; 1 bytes @ 0x24
  2931  000025                     	ds	1
  2932  000026                     ??_nwkTxBroadcastFrame:
  2933  000026                     ___strtoxl@conv_done:
  2934                           	opt callstack 0
  2935                           
  2936                           ; 1 bytes @ 0x25
  2937  000026                     	ds	1
  2938  000027                     ??_setSignalBandwidth:
  2939  000027                     _nwkRxIndicateFrame$5298:
  2940                           	opt callstack 0
  2941  000027                     nwkTxBroadcastFrame@newFrame:
  2942                           	opt callstack 0
  2943  000027                     ___flmul@temp:
  2944                           	opt callstack 0
  2945  000027                     setFrequency@num_mod:
  2946                           	opt callstack 0
  2947  000027                     computeFRF@num_mod:
  2948                           	opt callstack 0
  2949  000027                     ___strtoxl@limit:
  2950                           	opt callstack 0
  2951  000027                     _setSpreadingFactor$8781:
  2952                           	opt callstack 0
  2953                           
  2954                           ; 4 bytes @ 0x26
  2955  000027                     	ds	1
  2956  000028                     _nwkRxIndicateFrame$5299:
  2957                           	opt callstack 0
  2958  000028                     nwkTxFrame@header:
  2959                           	opt callstack 0
  2960                           
  2961                           ; 2 bytes @ 0x27
  2962  000028                     	ds	1
  2963  000029                     ??_dtoa:
  2964  000029                     ??_utoa:
  2965  000029                     ?___fladd:
  2966                           	opt callstack 0
  2967  000029                     _nwkRxIndicateFrame$5300:
  2968                           	opt callstack 0
  2969  000029                     xtoa@x:
  2970                           	opt callstack 0
  2971  000029                     nwkRxHandleReceivedFrame@frame:
  2972                           	opt callstack 0
  2973  000029                     ___fladd@b:
  2974                           	opt callstack 0
  2975                           
  2976                           ; 4 bytes @ 0x28
  2977  000029                     	ds	1
  2978  00002A                     ??_xtoa:
  2979  00002A                     _nwkRxIndicateFrame$5301:
  2980                           	opt callstack 0
  2981  00002A                     nwkDataReqSendFrame@req:
  2982                           	opt callstack 0
  2983  00002A                     nwkRouteSendRouteError@src:
  2984                           	opt callstack 0
  2985  00002A                     nwkRxSendAck@frame:
  2986                           	opt callstack 0
  2987                           
  2988                           ; 2 bytes @ 0x29
  2989  00002A                     	ds	1
  2990  00002B                     ??_nwkRxHandleReceivedFrame:
  2991  00002B                     _nwkRxIndicateFrame$5302:
  2992                           	opt callstack 0
  2993  00002B                     setSpreadingFactor@sf:
  2994                           	opt callstack 0
  2995  00002B                     ___strtoxl@sign:
  2996                           	opt callstack 0
  2997  00002B                     setFrequency@num:
  2998                           	opt callstack 0
  2999  00002B                     computeFRF@num:
  3000                           	opt callstack 0
  3001  00002B                     _setSignalBandwidth$8782:
  3002                           	opt callstack 0
  3003                           
  3004                           ; 4 bytes @ 0x2A
  3005  00002B                     	ds	1
  3006  00002C                     ??_nwkDataReqSendFrame:
  3007  00002C                     _nwkRxIndicateFrame$5303:
  3008                           	opt callstack 0
  3009  00002C                     ___strtoxl@skip:
  3010                           	opt callstack 0
  3011  00002C                     nwkRouteSendRouteError@dst:
  3012                           	opt callstack 0
  3013  00002C                     nwkRxSendAck@command:
  3014                           	opt callstack 0
  3015                           
  3016                           ; 2 bytes @ 0x2B
  3017  00002C                     	ds	1
  3018  00002D                     nwkRxHandleReceivedFrame@broadcast:
  3019                           	opt callstack 0
  3020  00002D                     nwkDataReqSendFrame@mcHeader:
  3021                           	opt callstack 0
  3022  00002D                     nwkRxIndicateFrame@header:
  3023                           	opt callstack 0
  3024  00002D                     ___fladd@a:
  3025                           	opt callstack 0
  3026  00002D                     ___strtoxl@a:
  3027                           	opt callstack 0
  3028                           
  3029                           ; 4 bytes @ 0x2C
  3030  00002D                     	ds	1
  3031  00002E                     nwkRouteSendRouteError@multicast:
  3032                           	opt callstack 0
  3033  00002E                     nwkRxHandleReceivedFrame@member:
  3034                           	opt callstack 0
  3035  00002E                     nwkRxSendAck@ack:
  3036                           	opt callstack 0
  3037                           
  3038                           ; 2 bytes @ 0x2D
  3039  00002E                     	ds	1
  3040  00002F                     computeFRF@i:
  3041                           	opt callstack 0
  3042  00002F                     PHY_SetChannel@channel:
  3043                           	opt callstack 0
  3044  00002F                     nwkDataReqSendFrame@frame:
  3045                           	opt callstack 0
  3046  00002F                     nwkRouteSendRouteError@command:
  3047                           	opt callstack 0
  3048  00002F                     nwkRxHandleReceivedFrame@mcHeader:
  3049                           	opt callstack 0
  3050  00002F                     setSignalBandwidth@bw:
  3051                           	opt callstack 0
  3052  00002F                     nwkRxIndicateFrame@ind:
  3053                           	opt callstack 0
  3054                           
  3055                           ; 12 bytes @ 0x2E
  3056  00002F                     	ds	1
  3057  000030                     ??_bootLoadApplication:
  3058                           
  3059                           ; 1 bytes @ 0x2F
  3060  000030                     	ds	1
  3061  000031                     ??_nwkDataReqTaskHandler:
  3062  000031                     ??___fladd:
  3063  000031                     nwkRouteSendRouteError@frame:
  3064                           	opt callstack 0
  3065  000031                     nwkRxHandleReceivedFrame@header:
  3066                           	opt callstack 0
  3067  000031                     _dtoa$7370:
  3068                           	opt callstack 0
  3069  000031                     utoa@p:
  3070                           	opt callstack 0
  3071  000031                     ___strtoxl@cp:
  3072                           	opt callstack 0
  3073                           
  3074                           ; 2 bytes @ 0x30
  3075  000031                     	ds	1
  3076  000032                     bootLoadApplication@buf_id:
  3077                           	opt callstack 0
  3078  000032                     _xtoa$7388:
  3079                           	opt callstack 0
  3080                           
  3081                           ; 2 bytes @ 0x31
  3082  000032                     	ds	1
  3083  000033                     ??_initRadio:
  3084  000033                     bootLoadApplication@buf_id_954:
  3085                           	opt callstack 0
  3086  000033                     ___strtoxl@c:
  3087                           	opt callstack 0
  3088  000033                     nwkDataReqTaskHandler@req:
  3089                           	opt callstack 0
  3090  000033                     nwkRouteFrame@frame:
  3091                           	opt callstack 0
  3092  000033                     dtoa@p:
  3093                           	opt callstack 0
  3094  000033                     utoa@w:
  3095                           	opt callstack 0
  3096                           
  3097                           ; 2 bytes @ 0x32
  3098  000033                     	ds	1
  3099  000034                     ?_strtoul:
  3100                           	opt callstack 0
  3101  000034                     ?_strtol:
  3102                           	opt callstack 0
  3103  000034                     strtol@s:
  3104                           	opt callstack 0
  3105  000034                     bootLoadApplication@temp:
  3106                           	opt callstack 0
  3107  000034                     _xtoa$7389:
  3108                           	opt callstack 0
  3109  000034                     strtoul@s:
  3110                           	opt callstack 0
  3111                           
  3112                           ; 2 bytes @ 0x33
  3113  000034                     	ds	1
  3114  000035                     ___fladd@signs:
  3115                           	opt callstack 0
  3116  000035                     strtol@endptr:
  3117                           	opt callstack 0
  3118  000035                     nwkRouteFrame@header:
  3119                           	opt callstack 0
  3120  000035                     dtoa@w:
  3121                           	opt callstack 0
  3122  000035                     utoa@n:
  3123                           	opt callstack 0
  3124                           
  3125                           ; 8 bytes @ 0x34
  3126  000035                     	ds	1
  3127  000036                     bootLoadApplication@i:
  3128                           	opt callstack 0
  3129  000036                     ___fladd@aexp:
  3130                           	opt callstack 0
  3131  000036                     xtoa@p:
  3132                           	opt callstack 0
  3133  000036                     strtol@base:
  3134                           	opt callstack 0
  3135  000036                     strtoul@endptr:
  3136                           	opt callstack 0
  3137                           
  3138                           ; 2 bytes @ 0x35
  3139  000036                     	ds	1
  3140  000037                     initRadio@version:
  3141                           	opt callstack 0
  3142  000037                     ___fladd@bexp:
  3143                           	opt callstack 0
  3144  000037                     dtoa@s:
  3145                           	opt callstack 0
  3146                           
  3147                           ; 2 bytes @ 0x36
  3148  000037                     	ds	1
  3149  000038                     ___fladd@grs:
  3150                           	opt callstack 0
  3151  000038                     initRadio@wideRSSI:
  3152                           	opt callstack 0
  3153  000038                     xtoa@w:
  3154                           	opt callstack 0
  3155  000038                     strtoul@base:
  3156                           	opt callstack 0
  3157                           
  3158                           ; 2 bytes @ 0x37
  3159  000038                     	ds	1
  3160  000039                     ?___fltol:
  3161                           	opt callstack 0
  3162  000039                     ___fltol@f1:
  3163                           	opt callstack 0
  3164  000039                     dtoa@n:
  3165                           	opt callstack 0
  3166                           
  3167                           ; 8 bytes @ 0x38
  3168  000039                     	ds	1
  3169  00003A                     cmdSetBaud@atCommand:
  3170                           	opt callstack 0
  3171  00003A                     xtoa@n:
  3172                           	opt callstack 0
  3173                           
  3174                           ; 8 bytes @ 0x39
  3175  00003A                     	ds	1
  3176  00003B                     nwkRxHandleIndication@frame:
  3177                           	opt callstack 0
  3178                           
  3179                           ; 2 bytes @ 0x3A
  3180  00003B                     	ds	1
  3181  00003C                     cmdSetBaud@tempbaud:
  3182                           	opt callstack 0
  3183                           
  3184                           ; 1 bytes @ 0x3B
  3185  00003C                     	ds	1
  3186  00003D                     ??___fltol:
  3187  00003D                     cmdSetBaud@ptr:
  3188                           	opt callstack 0
  3189  00003D                     utoa@i:
  3190                           	opt callstack 0
  3191                           
  3192                           ; 2 bytes @ 0x3C
  3193  00003D                     	ds	2
  3194  00003F                     nwkRxHandleIndication@ack:
  3195                           	opt callstack 0
  3196                           
  3197                           ; 1 bytes @ 0x3E
  3198  00003F                     	ds	1
  3199  000040                     ??_nwkRxTaskHandler:
  3200                           
  3201                           ; 1 bytes @ 0x3F
  3202  000040                     	ds	1
  3203  000041                     ___fltol@sign1:
  3204                           	opt callstack 0
  3205  000041                     dtoa@i:
  3206                           	opt callstack 0
  3207                           
  3208                           ; 2 bytes @ 0x40
  3209  000041                     	ds	1
  3210  000042                     ___fltol@exp1:
  3211                           	opt callstack 0
  3212  000042                     nwkRxTaskHandler@frame:
  3213                           	opt callstack 0
  3214  000042                     xtoa@i:
  3215                           	opt callstack 0
  3216                           
  3217                           ; 2 bytes @ 0x41
  3218  000042                     	ds	1
  3219  000043                     get_lqi@rssi:
  3220                           	opt callstack 0
  3221                           
  3222                           ; 1 bytes @ 0x42
  3223  000043                     	ds	1
  3224  000044                     DIO0_Receive_ISR@packetLength:
  3225                           	opt callstack 0
  3226  000044                     xtoa@c:
  3227                           	opt callstack 0
  3228                           
  3229                           ; 2 bytes @ 0x43
  3230  000044                     	ds	1
  3231  000045                     DIO0_Receive_ISR@irqFlags:
  3232                           	opt callstack 0
  3233                           
  3234                           ; 1 bytes @ 0x44
  3235  000045                     	ds	1
  3236  000046                     ?_vfpfcnvrt:
  3237                           	opt callstack 0
  3238  000046                     vfpfcnvrt@fp:
  3239                           	opt callstack 0
  3240  000046                     DIO0_Receive_ISR@ind:
  3241                           	opt callstack 0
  3242                           
  3243                           ; 5 bytes @ 0x45
  3244  000046                     	ds	2
  3245  000048                     vfpfcnvrt@fmt:
  3246                           	opt callstack 0
  3247                           
  3248                           ; 1 bytes @ 0x47
  3249  000048                     	ds	1
  3250  000049                     vfpfcnvrt@ap:
  3251                           	opt callstack 0
  3252                           
  3253                           ; 1 bytes @ 0x48
  3254  000049                     	ds	1
  3255  00004A                     ??_vfpfcnvrt:
  3256                           
  3257                           ; 1 bytes @ 0x49
  3258  00004A                     	ds	1
  3259  00004B                     ??_radio_engine:
  3260                           
  3261                           ; 1 bytes @ 0x4A
  3262  00004B                     	ds	2
  3263  00004D                     
  3264                           ; 1 bytes @ 0x4C
  3265  00004D                     	ds	1
  3266  00004E                     ?_vfprintf:
  3267                           	opt callstack 0
  3268  00004E                     vfprintf@fp:
  3269                           	opt callstack 0
  3270                           
  3271                           ; 2 bytes @ 0x4D
  3272  00004E                     	ds	2
  3273  000050                     vfprintf@fmt:
  3274                           	opt callstack 0
  3275                           
  3276                           ; 2 bytes @ 0x4F
  3277  000050                     	ds	2
  3278  000052                     vfprintf@ap:
  3279                           	opt callstack 0
  3280                           
  3281                           ; 1 bytes @ 0x51
  3282  000052                     	ds	1
  3283  000053                     vfprintf@cfmt:
  3284                           	opt callstack 0
  3285                           
  3286                           ; 2 bytes @ 0x52
  3287  000053                     	ds	2
  3288  000055                     
  3289                           ; 1 bytes @ 0x54
  3290  000055                     	ds	2
  3291  000057                     printf@ap:
  3292                           	opt callstack 0
  3293                           
  3294                           ; 1 bytes @ 0x56
  3295  000057                     	ds	1
  3296  000058                     ??_cmdRecv:
  3297  000058                     ??_cmdMac:
  3298  000058                     ??_cmdBootLoad:
  3299  000058                     cmdSend@cmd:
  3300                           	opt callstack 0
  3301  000058                     cmdBcast@cmd:
  3302                           	opt callstack 0
  3303  000058                     cmdSetAddr@cmd:
  3304                           	opt callstack 0
  3305  000058                     cmdSetNaddr@cmd:
  3306                           	opt callstack 0
  3307  000058                     cmdSetAES@cmd:
  3308                           	opt callstack 0
  3309  000058                     cmdSetRFCH@cmd:
  3310                           	opt callstack 0
  3311  000058                     cmdSetTX@cmd:
  3312                           	opt callstack 0
  3313  000058                     cmdSetCADRSSI@atCommand:
  3314                           	opt callstack 0
  3315  000058                     cmdSetParity@atCommand:
  3316                           	opt callstack 0
  3317  000058                     cmdSetSF@atCommand:
  3318                           	opt callstack 0
  3319  000058                     cmdGetRxCnt@atCommand:
  3320                           	opt callstack 0
  3321  000058                     print_hop_table@atCommand:
  3322                           	opt callstack 0
  3323  000058                     set_hop_table_ttl@cmd:
  3324                           	opt callstack 0
  3325                           
  3326                           ; 2 bytes @ 0x57
  3327  000058                     	ds	1
  3328  000059                     cmdMac@i:
  3329                           	opt callstack 0
  3330                           
  3331                           ; 1 bytes @ 0x58
  3332  000059                     	ds	1
  3333  00005A                     ??_cmdSend:
  3334  00005A                     ??_cmdBcast:
  3335  00005A                     ??_cmdSetAES:
  3336  00005A                     ??_cmdGetRxCnt:
  3337  00005A                     cmdRecv@i:
  3338                           	opt callstack 0
  3339  00005A                     print_hop_table@entry:
  3340                           	opt callstack 0
  3341                           
  3342                           ; 2 bytes @ 0x59
  3343  00005A                     	ds	1
  3344  00005B                     cmdRecv@buf_id:
  3345                           	opt callstack 0
  3346  00005B                     cmdGetRxCnt@count:
  3347                           	opt callstack 0
  3348                           
  3349                           ; 1 bytes @ 0x5A
  3350  00005B                     	ds	1
  3351  00005C                     cmdGetRxCnt@buf_id:
  3352                           	opt callstack 0
  3353  00005C                     print_hop_table@i:
  3354                           	opt callstack 0
  3355                           
  3356                           ; 1 bytes @ 0x5B
  3357  00005C                     	ds	2
  3358  00005E                     
  3359                           ; 1 bytes @ 0x5D
  3360 ;;
  3361 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3362 ;;
  3363 ;; *************** function _main *****************
  3364 ;; Defined at:
  3365 ;;		line 51 in file "main.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;		None
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 6/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3383 ;;Total ram usage:        0 bytes
  3384 ;; Hardware stack levels required when called:   20
  3385 ;; This function calls:
  3386 ;;		_SYSTEM_Initialize
  3387 ;;		_SYS_Init
  3388 ;;		_SYS_TaskHandler
  3389 ;;		_TMR0_SetInterruptHandler
  3390 ;;		_bootLoadApplication
  3391 ;;		_processATCommand
  3392 ;; This function is called by:
  3393 ;;		Startup code after reset
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text0
  3398  008A58                     __ptext0:
  3399                           	opt callstack 0
  3400  008A58                     _main:
  3401                           	opt callstack 11
  3402                           
  3403                           ;main.c: 54:     SYSTEM_Initialize();
  3404                           
  3405                           ;incstack = 0
  3406  008A58  EC08  F046         	call	_SYSTEM_Initialize	;wreg free
  3407                           
  3408                           ; BSR set to: 61
  3409                           ;main.c: 61:     (INTCON0bits.GIEH = 1);
  3410  008A5C  8ED2               	bsf	210,7,c	;volatile
  3411                           
  3412                           ; BSR set to: 61
  3413                           ;main.c: 64:     (INTCON0bits.GIEL = 1);
  3414  008A5E  8CD2               	bsf	210,6,c	;volatile
  3415                           
  3416                           ;main.c: 71:     TMR0_SetInterruptHandler(Timer0Handler);
  3417  008A60  0E9A               	movlw	low _Timer0Handler
  3418  008A62  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  3419  008A64  0E7F               	movlw	high _Timer0Handler
  3420  008A66  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  3421  008A68  EC0C  F048         	call	_TMR0_SetInterruptHandler	;wreg free
  3422                           
  3423                           ;main.c: 73:     SYS_Init();
  3424  008A6C  ECE2  F047         	call	_SYS_Init	;wreg free
  3425                           
  3426                           ; BSR set to: 2
  3427                           ;main.c: 74:     bootLoadApplication();
  3428  008A70  EC0D  F010         	call	_bootLoadApplication	;wreg free
  3429  008A74  86BA               	bsf	186,3,c	;volatile
  3430  008A76                     l16846:
  3431                           
  3432                           ;main.c: 77:     {;main.c: 78:         SYS_TaskHandler();
  3433  008A76  ECD4  F047         	call	_SYS_TaskHandler	;wreg free
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;main.c: 79:         processATCommand();
  3437  008A7A  EC90  F01E         	call	_processATCommand	;wreg free
  3438  008A7E  D7FB               	goto	l16846
  3439  008A80                     __end_of_main:
  3440                           	opt callstack 0
  3441                           
  3442 ;; *************** function _processATCommand *****************
  3443 ;; Defined at:
  3444 ;;		line 1034 in file "../app/app_src/application.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;		None
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;  data            1   79[BANK0 ] unsigned char 
  3449 ;;  data            1   80[BANK0 ] unsigned char 
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      void 
  3452 ;; Registers used:
  3453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3454 ;; Tracked objects:
  3455 ;;		On entry : 3F/0
  3456 ;;		On exit  : 6/0
  3457 ;;		Unchanged: 0/0
  3458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3460 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3461 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3462 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3463 ;;Total ram usage:        4 bytes
  3464 ;; Hardware stack levels used:    1
  3465 ;; Hardware stack levels required when called:   19
  3466 ;; This function calls:
  3467 ;;		_UART1_Read
  3468 ;;		_UART1_is_rx_ready
  3469 ;;		_executeATCommand
  3470 ;;		_get_timer0base
  3471 ;;		_memset
  3472 ;;		_queue_serial_led_event
  3473 ;;		_set_timer0base
  3474 ;; This function is called by:
  3475 ;;		_main
  3476 ;; This function uses a non-reentrant model
  3477 ;;
  3478                           
  3479                           	psect	text1
  3480  003D20                     __ptext1:
  3481                           	opt callstack 0
  3482  003D20                     _processATCommand:
  3483                           	opt callstack 11
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;../app/app_src/application.c: 1037:     if(tx_done && U1ERRIRbits.TXMTIF){
  3487                           
  3488                           ;incstack = 0
  3489  003D20  51DA               	movf	_tx_done& (0+255),w,b	;volatile
  3490  003D22  B4D8               	btfsc	status,2,c
  3491  003D24  D006               	goto	l16610
  3492                           
  3493                           ; BSR set to: 0
  3494  003D26  013D               	movlb	61	; () banked
  3495  003D28  AFF9               	btfss	249,7,b	;volatile
  3496  003D2A  D003               	goto	l16610
  3497                           
  3498                           ; BSR set to: 61
  3499                           ;../app/app_src/application.c: 1039:        tx_done = 0;
  3500  003D2C  0E00               	movlw	0
  3501  003D2E  0100               	movlb	0	; () banked
  3502  003D30  6FDA               	movwf	_tx_done& (0+255),b	;volatile
  3503  003D32                     l16610:
  3504                           
  3505                           ;../app/app_src/application.c: 1042:     if(((atStateVar != lookingForA) || (atStateVar 
      +                          != processCommand)) &&
  3506  003D32  0100               	movlb	0	; () banked
  3507  003D34  05D8               	decf	_atStateVar& (0+255),w,b
  3508  003D36  A4D8               	btfss	status,2,c
  3509  003D38  D004               	goto	u16920
  3510                           
  3511                           ; BSR set to: 0
  3512  003D3A  0E05               	movlw	5
  3513  003D3C  19D8               	xorwf	_atStateVar& (0+255),w,b
  3514  003D3E  B4D8               	btfsc	status,2,c
  3515  003D40  D08B               	goto	l16680
  3516  003D42                     u16920:
  3517                           
  3518                           ; BSR set to: 0
  3519  003D42  0EFB               	movlw	low _ATTimeoutTimer
  3520  003D44  6E02               	movwf	get_timer0base@timer^0,c
  3521  003D46  EC68  F045         	call	_get_timer0base	;wreg free
  3522  003D4A  5002               	movf	?_get_timer0base^0,w,c
  3523  003D4C  1003               	iorwf	(?_get_timer0base+1)^0,w,c
  3524  003D4E  A4D8               	btfss	status,2,c
  3525  003D50  D083               	goto	l16680
  3526                           
  3527                           ; BSR set to: 57
  3528                           ;../app/app_src/application.c: 1043:             (!get_timer0base(&ATTimeoutTimer))) {;.
      +                          ./app/app_src/application.c: 1044:         atStateVar = resetATMachine;
  3529  003D52  0E06               	movlw	6
  3530  003D54  0100               	movlb	0	; () banked
  3531  003D56  6FD8               	movwf	_atStateVar& (0+255),b
  3532  003D58  D07F               	goto	l16680
  3533  003D5A                     l16618:
  3534                           
  3535                           ;../app/app_src/application.c: 1048:             atStateVar = resetATMachine;
  3536  003D5A  0E06               	movlw	6
  3537  003D5C  0100               	movlb	0	; () banked
  3538  003D5E  6FD8               	movwf	_atStateVar& (0+255),b
  3539                           
  3540                           ;../app/app_src/application.c: 1049:             break;
  3541  003D60  0012               	return	
  3542  003D62                     l16620:
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;../app/app_src/application.c: 1052:             if(UART1_is_rx_ready()){
  3546  003D62  ECCD  F047         	call	_UART1_is_rx_ready	;wreg free
  3547  003D66  0900               	iorlw	0
  3548  003D68  B4D8               	btfsc	status,2,c
  3549  003D6A  0012               	return	
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;../app/app_src/application.c: 1054:                 if(UART1_Read() == 'A')
  3553  003D6C  EC56  F041         	call	_UART1_Read	;wreg free
  3554  003D70  0A41               	xorlw	65
  3555  003D72  A4D8               	btfss	status,2,c
  3556  003D74  0012               	return	
  3557                           
  3558                           ; BSR set to: 57
  3559                           ;../app/app_src/application.c: 1055:                 {;../app/app_src/application.c: 105
      +                          7:                     atStateVar = lookingForT;
  3560  003D76  0E02               	movlw	2
  3561  003D78  0100               	movlb	0	; () banked
  3562  003D7A  6FD8               	movwf	_atStateVar& (0+255),b
  3563  003D7C                     l16626:
  3564                           
  3565                           ;../app/app_src/application.c: 1058:                     set_timer0base(&ATTimeoutTimer,
      +                           1000);
  3566  003D7C  0EFB               	movlw	low _ATTimeoutTimer
  3567  003D7E  6E02               	movwf	set_timer0base@timer^0,c
  3568  003D80  0E03               	movlw	3
  3569  003D82  6E04               	movwf	(set_timer0base@tval+1)^0,c
  3570  003D84  0EE8               	movlw	232
  3571  003D86  6E03               	movwf	set_timer0base@tval^0,c
  3572  003D88  ECD4  F046         	call	_set_timer0base	;wreg free
  3573  003D8C  0012               	return	
  3574  003D8E                     l16628:
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;../app/app_src/application.c: 1063:             if(UART1_is_rx_ready()){
  3578  003D8E  ECCD  F047         	call	_UART1_is_rx_ready	;wreg free
  3579  003D92  0900               	iorlw	0
  3580  003D94  B4D8               	btfsc	status,2,c
  3581  003D96  0012               	return	
  3582                           
  3583                           ; BSR set to: 0
  3584                           ;../app/app_src/application.c: 1065:                 if(UART1_Read() == 'T')
  3585  003D98  EC56  F041         	call	_UART1_Read	;wreg free
  3586  003D9C  0A54               	xorlw	84
  3587  003D9E  A4D8               	btfss	status,2,c
  3588  003DA0  D004               	goto	l16634
  3589                           
  3590                           ; BSR set to: 57
  3591                           ;../app/app_src/application.c: 1066:                 {;../app/app_src/application.c: 106
      +                          8:                     atStateVar = readingCommand;
  3592  003DA2  0E03               	movlw	3
  3593  003DA4  0100               	movlb	0	; () banked
  3594  003DA6  6FD8               	movwf	_atStateVar& (0+255),b
  3595                           
  3596                           ;../app/app_src/application.c: 1069:                 }
  3597  003DA8  0012               	return	
  3598  003DAA                     l16634:
  3599                           
  3600                           ; BSR set to: 57
  3601                           ;../app/app_src/application.c: 1071:                 {;../app/app_src/application.c: 107
      +                          2:                     atStateVar = lookingForA;
  3602  003DAA  0E01               	movlw	1
  3603  003DAC  0100               	movlb	0	; () banked
  3604  003DAE  6FD8               	movwf	_atStateVar& (0+255),b
  3605  003DB0  0012               	return	
  3606  003DB2                     l16636:
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;../app/app_src/application.c: 1078:             if(UART1_is_rx_ready())
  3610  003DB2  ECCD  F047         	call	_UART1_is_rx_ready	;wreg free
  3611  003DB6  0900               	iorlw	0
  3612  003DB8  B4D8               	btfsc	status,2,c
  3613  003DBA  0012               	return	
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;../app/app_src/application.c: 1079:             {;../app/app_src/application.c: 1080:  
      +                                         uint8_t data = UART1_Read();
  3617  003DBC  EC56  F041         	call	_UART1_Read	;wreg free
  3618  003DC0  0100               	movlb	0	; () banked
  3619  003DC2  6FB0               	movwf	processATCommand@data& (0+255),b
  3620                           
  3621                           ; BSR set to: 0
  3622                           ;../app/app_src/application.c: 1081:                 if(data == '\r')
  3623  003DC4  0E0D               	movlw	13
  3624  003DC6  19B0               	xorwf	processATCommand@data& (0+255),w,b
  3625  003DC8  A4D8               	btfss	status,2,c
  3626  003DCA  D00C               	goto	l16648
  3627                           
  3628                           ; BSR set to: 0
  3629                           ;../app/app_src/application.c: 1082:                 {;../app/app_src/application.c: 108
      +                          4:                     atStateVar = endingCommand;
  3630  003DCC  0E04               	movlw	4
  3631  003DCE  6FD8               	movwf	_atStateVar& (0+255),b
  3632                           
  3633                           ; BSR set to: 0
  3634                           ;../app/app_src/application.c: 1086:                     atCommand[commandByteCounter++]
      +                           = '\0';
  3635  003DD0  0E4B               	movlw	low _atCommand
  3636  003DD2  25D9               	addwf	_commandByteCounter& (0+255),w,b
  3637  003DD4  6ED9               	movwf	fsr2l,c
  3638  003DD6  6ADA               	clrf	fsr2h,c
  3639  003DD8  0E01               	movlw	high _atCommand
  3640  003DDA  22DA               	addwfc	fsr2h,f,c
  3641  003DDC  0E00               	movlw	0
  3642  003DDE  6EDF               	movwf	indf2,c
  3643                           
  3644                           ; BSR set to: 0
  3645  003DE0  2BD9               	incf	_commandByteCounter& (0+255),f,b
  3646                           
  3647                           ;../app/app_src/application.c: 1087:                 }
  3648  003DE2  0012               	return	
  3649  003DE4                     l16648:
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;../app/app_src/application.c: 1089:                 {;../app/app_src/application.c: 109
      +                          0:                     atCommand[commandByteCounter++] = data;
  3653  003DE4  0E4B               	movlw	low _atCommand
  3654  003DE6  25D9               	addwf	_commandByteCounter& (0+255),w,b
  3655  003DE8  6ED9               	movwf	fsr2l,c
  3656  003DEA  6ADA               	clrf	fsr2h,c
  3657  003DEC  0E01               	movlw	high _atCommand
  3658  003DEE  22DA               	addwfc	fsr2h,f,c
  3659  003DF0  0060  F2C3  FFDF   	movff	processATCommand@data,indf2
  3660                           
  3661                           ; BSR set to: 0
  3662  003DF6  2BD9               	incf	_commandByteCounter& (0+255),f,b
  3663                           
  3664                           ; BSR set to: 0
  3665                           ;../app/app_src/application.c: 1091:                     if(commandByteCounter >= 80)
  3666  003DF8  0E4F               	movlw	79
  3667  003DFA  65D9               	cpfsgt	_commandByteCounter& (0+255),b
  3668  003DFC  0012               	return	
  3669  003DFE  D7AD               	goto	l16618
  3670  003E00                     l16656:
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;../app/app_src/application.c: 1101:             if(UART1_is_rx_ready())
  3674  003E00  ECCD  F047         	call	_UART1_is_rx_ready	;wreg free
  3675  003E04  0900               	iorlw	0
  3676  003E06  B4D8               	btfsc	status,2,c
  3677  003E08  0012               	return	
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;../app/app_src/application.c: 1102:             {;../app/app_src/application.c: 1103:  
      +                                         uint8_t data = UART1_Read();
  3681  003E0A  EC56  F041         	call	_UART1_Read	;wreg free
  3682  003E0E  0100               	movlb	0	; () banked
  3683  003E10  6FAF               	movwf	processATCommand@data_930& (0+255),b
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;../app/app_src/application.c: 1104:                 if(data == '\n')
  3687  003E12  0E0A               	movlw	10
  3688  003E14  19AF               	xorwf	processATCommand@data_930& (0+255),w,b
  3689  003E16  A4D8               	btfss	status,2,c
  3690  003E18  D7A0               	goto	l16618
  3691                           
  3692                           ; BSR set to: 0
  3693                           ;../app/app_src/application.c: 1105:                 {;../app/app_src/application.c: 110
      +                          7:                     atStateVar = processCommand;
  3694  003E1A  0E05               	movlw	5
  3695  003E1C  6FD8               	movwf	_atStateVar& (0+255),b
  3696                           
  3697                           ;../app/app_src/application.c: 1108:                 }
  3698  003E1E  0012               	return	
  3699  003E20                     l16666:
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;../app/app_src/application.c: 1118:             executeATCommand(atCommand);
  3703  003E20  0E4B               	movlw	low _atCommand
  3704  003E22  6FA9               	movwf	executeATCommand@cmd& (0+255),b
  3705  003E24  0E01               	movlw	high _atCommand
  3706  003E26  6FAA               	movwf	(executeATCommand@cmd+1)& (0+255),b
  3707  003E28  EC59  F000         	call	_executeATCommand	;wreg free
  3708                           
  3709                           ;../app/app_src/application.c: 1119:             queue_serial_led_event();
  3710  003E2C  EC01  F03F         	call	_queue_serial_led_event	;wreg free
  3711  003E30  D794               	goto	l16618
  3712  003E32                     l16672:
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;../app/app_src/application.c: 1123:             atStateVar = lookingForA;
  3716  003E32  0E01               	movlw	1
  3717  003E34  6FD8               	movwf	_atStateVar& (0+255),b
  3718                           
  3719                           ;../app/app_src/application.c: 1124:             commandByteCounter = 0;
  3720  003E36  0E00               	movlw	0
  3721  003E38  6FD9               	movwf	_commandByteCounter& (0+255),b
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;../app/app_src/application.c: 1126:             memset(atCommand,0,sizeof(atCommand));
  3725  003E3A  0E4B               	movlw	low _atCommand
  3726  003E3C  6E02               	movwf	memset@dest^0,c
  3727  003E3E  0E01               	movlw	high _atCommand
  3728  003E40  6E03               	movwf	(memset@dest+1)^0,c
  3729  003E42  0E00               	movlw	0
  3730  003E44  6E05               	movwf	(memset@c+1)^0,c
  3731  003E46  0E00               	movlw	0
  3732  003E48  6E04               	movwf	memset@c^0,c
  3733  003E4A  0E00               	movlw	0
  3734  003E4C  6E07               	movwf	(memset@n+1)^0,c
  3735  003E4E  0E50               	movlw	80
  3736  003E50  6E06               	movwf	memset@n^0,c
  3737  003E52  EC10  F022         	call	_memset	;wreg free
  3738  003E56  D792               	goto	l16626
  3739  003E58                     l16680:
  3740  003E58  0100               	movlb	0	; () banked
  3741  003E5A  51D8               	movf	_atStateVar& (0+255),w,b
  3742  003E5C  6FAD               	movwf	??_processATCommand& (0+255),b
  3743  003E5E  6BAE               	clrf	(??_processATCommand+1)& (0+255),b
  3744                           
  3745                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3746                           ; Switch size 1, requested type "simple"
  3747                           ; Number of cases is 1, Range of values is 0 to 0
  3748                           ; switch strategies available:
  3749                           ; Name         Instructions Cycles
  3750                           ; simple_byte            4     3 (average)
  3751                           ;	Chosen strategy is simple_byte
  3752  003E60  51AE               	movf	(??_processATCommand+1)& (0+255),w,b
  3753  003E62  0A00               	xorlw	0	; case 0
  3754  003E64  A4D8               	btfss	status,2,c
  3755  003E66  D779               	goto	l16618
  3756                           
  3757                           ; BSR set to: 0
  3758                           ; Switch size 1, requested type "simple"
  3759                           ; Number of cases is 7, Range of values is 0 to 6
  3760                           ; switch strategies available:
  3761                           ; Name         Instructions Cycles
  3762                           ; simple_byte           22    12 (average)
  3763                           ;	Chosen strategy is simple_byte
  3764  003E68  51AD               	movf	??_processATCommand& (0+255),w,b
  3765  003E6A  0A00               	xorlw	0	; case 0
  3766  003E6C  B4D8               	btfsc	status,2,c
  3767  003E6E  D775               	goto	l16618
  3768  003E70  0A01               	xorlw	1	; case 1
  3769  003E72  B4D8               	btfsc	status,2,c
  3770  003E74  D776               	goto	l16620
  3771  003E76  0A03               	xorlw	3	; case 2
  3772  003E78  B4D8               	btfsc	status,2,c
  3773  003E7A  D789               	goto	l16628
  3774  003E7C  0A01               	xorlw	1	; case 3
  3775  003E7E  B4D8               	btfsc	status,2,c
  3776  003E80  D798               	goto	l16636
  3777  003E82  0A07               	xorlw	7	; case 4
  3778  003E84  B4D8               	btfsc	status,2,c
  3779  003E86  D7BC               	goto	l16656
  3780  003E88  0A01               	xorlw	1	; case 5
  3781  003E8A  B4D8               	btfsc	status,2,c
  3782  003E8C  D7C9               	goto	l16666
  3783  003E8E  0A03               	xorlw	3	; case 6
  3784  003E90  B4D8               	btfsc	status,2,c
  3785  003E92  D7CF               	goto	l16672
  3786  003E94  D762               	goto	l16618
  3787  003E96                     __end_of_processATCommand:
  3788                           	opt callstack 0
  3789                           
  3790 ;; *************** function _queue_serial_led_event *****************
  3791 ;; Defined at:
  3792 ;;		line 96 in file "../app/app_src/led.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;		None
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  i               1   33[COMRAM] unsigned char 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      void 
  3799 ;; Registers used:
  3800 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;Total ram usage:        1 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:   10
  3813 ;; This function calls:
  3814 ;;		_queueLedEvent
  3815 ;; This function is called by:
  3816 ;;		_processATCommand
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text2
  3821  007E02                     __ptext2:
  3822                           	opt callstack 0
  3823  007E02                     _queue_serial_led_event:
  3824                           	opt callstack 19
  3825                           
  3826                           ;../app/app_src/led.c: 98:     queueLedEvent(0,400);
  3827                           
  3828                           ;incstack = 0
  3829  007E02  0E01               	movlw	1
  3830  007E04  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3831  007E06  0E90               	movlw	144
  3832  007E08  6E1C               	movwf	queueLedEvent@duration^0,c
  3833  007E0A  0E00               	movlw	0
  3834  007E0C  EC0C  F043         	call	_queueLedEvent
  3835                           
  3836                           ;../app/app_src/led.c: 99:     for(uint8_t i = 0; i < 2; i++)
  3837  007E10  0E00               	movlw	0
  3838  007E12  6E22               	movwf	queue_serial_led_event@i^0,c
  3839  007E14                     l16516:
  3840                           
  3841                           ;../app/app_src/led.c: 100:     {;../app/app_src/led.c: 101:         queueLedEvent(1,100
      +                          );
  3842  007E14  0E00               	movlw	0
  3843  007E16  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3844  007E18  0E64               	movlw	100
  3845  007E1A  6E1C               	movwf	queueLedEvent@duration^0,c
  3846  007E1C  0E01               	movlw	1
  3847  007E1E  EC0C  F043         	call	_queueLedEvent
  3848                           
  3849                           ;../app/app_src/led.c: 102:         queueLedEvent(0,100);
  3850  007E22  0E00               	movlw	0
  3851  007E24  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3852  007E26  0E64               	movlw	100
  3853  007E28  6E1C               	movwf	queueLedEvent@duration^0,c
  3854  007E2A  0E00               	movlw	0
  3855  007E2C  EC0C  F043         	call	_queueLedEvent
  3856                           
  3857                           ;../app/app_src/led.c: 103:     }
  3858  007E30  2A22               	incf	queue_serial_led_event@i^0,f,c
  3859  007E32  0E01               	movlw	1
  3860  007E34  6422               	cpfsgt	queue_serial_led_event@i^0,c
  3861  007E36  D7EE               	goto	l16516
  3862                           
  3863                           ;../app/app_src/led.c: 104:     queueLedEvent(0,100);
  3864  007E38  0E00               	movlw	0
  3865  007E3A  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3866  007E3C  0E64               	movlw	100
  3867  007E3E  6E1C               	movwf	queueLedEvent@duration^0,c
  3868  007E40  0E00               	movlw	0
  3869  007E42  EC0C  F043         	call	_queueLedEvent
  3870                           
  3871                           ;../app/app_src/led.c: 105:     queueLedEvent(1,100);
  3872  007E46  0E00               	movlw	0
  3873  007E48  6E1D               	movwf	(queueLedEvent@duration+1)^0,c
  3874  007E4A  0E64               	movlw	100
  3875  007E4C  6E1C               	movwf	queueLedEvent@duration^0,c
  3876  007E4E  0E01               	movlw	1
  3877  007E50  EC0C  F043         	call	_queueLedEvent
  3878  007E54  0012               	return		;funcret
  3879  007E56                     __end_of_queue_serial_led_event:
  3880                           	opt callstack 0
  3881                           
  3882 ;; *************** function _queueLedEvent *****************
  3883 ;; Defined at:
  3884 ;;		line 53 in file "../app/app_src/led.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  LEDState        1    wreg     unsigned char 
  3887 ;;  duration        2   27[COMRAM] unsigned short 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  LEDState        1   29[COMRAM] unsigned char 
  3890 ;;  temp            3   30[COMRAM] struct ledEvent
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  1    wreg      char 
  3893 ;; Registers used:
  3894 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3901 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;Total ram usage:        6 bytes
  3905 ;; Hardware stack levels used:    1
  3906 ;; Hardware stack levels required when called:    9
  3907 ;; This function calls:
  3908 ;;		_CircularBufferPushBack
  3909 ;;		_CircularBufferSpace
  3910 ;; This function is called by:
  3911 ;;		_queue_serial_led_event
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text3
  3916  008618                     __ptext3:
  3917                           	opt callstack 0
  3918  008618                     _queueLedEvent:
  3919                           	opt callstack 19
  3920                           
  3921                           ;incstack = 0
  3922                           ;queueLedEvent@LEDState stored from wreg
  3923  008618  6E1E               	movwf	queueLedEvent@LEDState^0,c
  3924                           
  3925                           ;../app/app_src/led.c: 53: int8_t queueLedEvent(uint8_t LEDState,uint16_t duration);../a
      +                          pp/app_src/led.c: 54: {;../app/app_src/led.c: 55:     if(0 != CircularBufferSpace(&ledta
      +                          sksbuf))
  3926  00861A  0ECE               	movlw	low _ledtasksbuf
  3927  00861C  6E0A               	movwf	CircularBufferSpace@ctx^0,c
  3928  00861E  0E01               	movlw	high _ledtasksbuf
  3929  008620  6E0B               	movwf	(CircularBufferSpace@ctx+1)^0,c
  3930  008622  ECB7  F043         	call	_CircularBufferSpace	;wreg free
  3931  008626  500A               	movf	?_CircularBufferSpace^0,w,c
  3932  008628  100B               	iorwf	(?_CircularBufferSpace+1)^0,w,c
  3933  00862A  B4D8               	btfsc	status,2,c
  3934  00862C  0012               	return	
  3935                           
  3936                           ;../app/app_src/led.c: 56:     {;../app/app_src/led.c: 57:         struct ledEvent temp;
      +                          ;../app/app_src/led.c: 58:         temp.LEDCondition = LEDState;
  3937  00862E  0060  F078  F01F   	movff	queueLedEvent@LEDState,queueLedEvent@temp
  3938                           
  3939                           ;../app/app_src/led.c: 59:         temp.eventDuration = duration;
  3940  008634  0060  F070  F020   	movff	queueLedEvent@duration,queueLedEvent@temp+1
  3941  00863A  0060  F074  F021   	movff	queueLedEvent@duration+1,queueLedEvent@temp+2
  3942                           
  3943                           ;../app/app_src/led.c: 60:         CircularBufferPushBack(&ledtasksbuf,&temp);
  3944  008640  0ECE               	movlw	low _ledtasksbuf
  3945  008642  6E13               	movwf	CircularBufferPushBack@ctx^0,c
  3946  008644  0E01               	movlw	high _ledtasksbuf
  3947  008646  6E14               	movwf	(CircularBufferPushBack@ctx+1)^0,c
  3948  008648  0E1F               	movlw	low queueLedEvent@temp
  3949  00864A  6E15               	movwf	CircularBufferPushBack@val^0,c
  3950  00864C  EC67  F02A         	call	_CircularBufferPushBack	;wreg free
  3951  008650  0012               	return		;funcret
  3952  008652                     __end_of_queueLedEvent:
  3953                           	opt callstack 0
  3954                           
  3955 ;; *************** function _CircularBufferSpace *****************
  3956 ;; Defined at:
  3957 ;;		line 126 in file "../app/app_src/circular buffer.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;  ctx             2    9[COMRAM] PTR const struct .
  3960 ;;		 -> ledtasksbuf(10), 
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  2    9[COMRAM] unsigned int 
  3965 ;; Registers used:
  3966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3972 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3974 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3975 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3976 ;;Total ram usage:        4 bytes
  3977 ;; Hardware stack levels used:    1
  3978 ;; Hardware stack levels required when called:    8
  3979 ;; This function calls:
  3980 ;;		_CircularBufferSize
  3981 ;; This function is called by:
  3982 ;;		_queueLedEvent
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text4
  3987  00876E                     __ptext4:
  3988                           	opt callstack 0
  3989  00876E                     _CircularBufferSpace:
  3990                           	opt callstack 19
  3991                           
  3992                           ;../app/app_src/circular buffer.c: 128:     return (ctx->max_size - CircularBufferSize(c
      +                          tx));
  3993                           
  3994                           ;incstack = 0
  3995  00876E  0060  F028  F002   	movff	CircularBufferSpace@ctx,CircularBufferSize@ctx
  3996  008774  0060  F02C  F003   	movff	CircularBufferSpace@ctx+1,CircularBufferSize@ctx+1
  3997  00877A  ECC4  F03D         	call	_CircularBufferSize	;wreg free
  3998  00877E  EE20 F008          	lfsr	2,8
  3999  008782  500A               	movf	CircularBufferSpace@ctx^0,w,c
  4000  008784  26D9               	addwf	fsr2l,f,c
  4001  008786  500B               	movf	(CircularBufferSpace@ctx+1)^0,w,c
  4002  008788  22DA               	addwfc	fsr2h,f,c
  4003  00878A  006F FF78  F00C    	movff	postinc2,??_CircularBufferSpace
  4004  008790  006F FF74  F00D    	movff	postdec2,??_CircularBufferSpace+1
  4005  008796  5002               	movf	?_CircularBufferSize^0,w,c
  4006  008798  5C0C               	subwf	??_CircularBufferSpace^0,w,c
  4007  00879A  6E0A               	movwf	?_CircularBufferSpace^0,c
  4008  00879C  5003               	movf	(?_CircularBufferSize+1)^0,w,c
  4009  00879E  580D               	subwfb	(??_CircularBufferSpace+1)^0,w,c
  4010  0087A0  6E0B               	movwf	(?_CircularBufferSpace+1)^0,c
  4011  0087A2  0012               	return		;funcret
  4012  0087A4                     __end_of_CircularBufferSpace:
  4013                           	opt callstack 0
  4014                           
  4015 ;; *************** function _CircularBufferSize *****************
  4016 ;; Defined at:
  4017 ;;		line 122 in file "../app/app_src/circular buffer.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;  ctx             2    1[COMRAM] PTR const struct .
  4020 ;;		 -> ledtasksbuf(10), 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  2    1[COMRAM] unsigned int 
  4025 ;; Registers used:
  4026 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4034 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4035 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;Total ram usage:        8 bytes
  4037 ;; Hardware stack levels used:    1
  4038 ;; Hardware stack levels required when called:    7
  4039 ;; This function calls:
  4040 ;;		Nothing
  4041 ;; This function is called by:
  4042 ;;		_CircularBufferSpace
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text5
  4047  007B88                     __ptext5:
  4048                           	opt callstack 0
  4049  007B88                     _CircularBufferSize:
  4050                           	opt callstack 19
  4051                           
  4052                           ;../app/app_src/circular buffer.c: 123:     return ((ctx->write_pos - ctx->read_pos) & c
      +                          tx->max_size);
  4053                           
  4054                           ;incstack = 0
  4055  007B88  EE20 F008          	lfsr	2,8
  4056  007B8C  5002               	movf	CircularBufferSize@ctx^0,w,c
  4057  007B8E  26D9               	addwf	fsr2l,f,c
  4058  007B90  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4059  007B92  22DA               	addwfc	fsr2h,f,c
  4060  007B94  006F FF78  F004    	movff	postinc2,??_CircularBufferSize
  4061  007B9A  006F FF74  F005    	movff	postdec2,??_CircularBufferSize+1
  4062  007BA0  EE20 F004          	lfsr	2,4
  4063  007BA4  5002               	movf	CircularBufferSize@ctx^0,w,c
  4064  007BA6  26D9               	addwf	fsr2l,f,c
  4065  007BA8  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4066  007BAA  22DA               	addwfc	fsr2h,f,c
  4067  007BAC  006F FF78  F006    	movff	postinc2,??_CircularBufferSize+2
  4068  007BB2  006F FF74  F007    	movff	postdec2,??_CircularBufferSize+3
  4069  007BB8  EE20 F002          	lfsr	2,2
  4070  007BBC  5002               	movf	CircularBufferSize@ctx^0,w,c
  4071  007BBE  26D9               	addwf	fsr2l,f,c
  4072  007BC0  5003               	movf	(CircularBufferSize@ctx+1)^0,w,c
  4073  007BC2  22DA               	addwfc	fsr2h,f,c
  4074  007BC4  006F FF78  F008    	movff	postinc2,??_CircularBufferSize+4
  4075  007BCA  006F FF74  F009    	movff	postdec2,??_CircularBufferSize+5
  4076  007BD0  5006               	movf	(??_CircularBufferSize+2)^0,w,c
  4077  007BD2  5E08               	subwf	(??_CircularBufferSize+4)^0,f,c
  4078  007BD4  5007               	movf	(??_CircularBufferSize+3)^0,w,c
  4079  007BD6  5A09               	subwfb	(??_CircularBufferSize+5)^0,f,c
  4080  007BD8  5004               	movf	??_CircularBufferSize^0,w,c
  4081  007BDA  1408               	andwf	(??_CircularBufferSize+4)^0,w,c
  4082  007BDC  6E02               	movwf	?_CircularBufferSize^0,c
  4083  007BDE  5005               	movf	(??_CircularBufferSize+1)^0,w,c
  4084  007BE0  1409               	andwf	(??_CircularBufferSize+5)^0,w,c
  4085  007BE2  6E03               	movwf	(?_CircularBufferSize+1)^0,c
  4086  007BE4  0012               	return		;funcret
  4087  007BE6                     __end_of_CircularBufferSize:
  4088                           	opt callstack 0
  4089                           
  4090 ;; *************** function _executeATCommand *****************
  4091 ;; Defined at:
  4092 ;;		line 857 in file "../app/app_src/application.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  cmd             2   73[BANK0 ] PTR unsigned char 
  4095 ;;		 -> atCommand(80), 
  4096 ;; Auto vars:     Size  Location     Type
  4097 ;;  retcode         1    0        unsigned char 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      unsigned char 
  4100 ;; Registers used:
  4101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4102 ;; Tracked objects:
  4103 ;;		On entry : 3F/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4107 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4109 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4111 ;;Total ram usage:        5 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; Hardware stack levels required when called:   18
  4114 ;; This function calls:
  4115 ;;		_cmdAddr
  4116 ;;		_cmdBcast
  4117 ;;		_cmdBootLoad
  4118 ;;		_cmdGetCAD
  4119 ;;		_cmdGetCADRSSI
  4120 ;;		_cmdGetMode
  4121 ;;		_cmdGetRFCH
  4122 ;;		_cmdGetRxCnt
  4123 ;;		_cmdGetSF
  4124 ;;		_cmdGetTTL
  4125 ;;		_cmdGetTX
  4126 ;;		_cmdI
  4127 ;;		_cmdMac
  4128 ;;		_cmdNaddr
  4129 ;;		_cmdRecv
  4130 ;;		_cmdReset
  4131 ;;		_cmdRstCAD
  4132 ;;		_cmdSend
  4133 ;;		_cmdSendSink
  4134 ;;		_cmdSetAES
  4135 ;;		_cmdSetAddr
  4136 ;;		_cmdSetBaud
  4137 ;;		_cmdSetCADRSSI
  4138 ;;		_cmdSetNaddr
  4139 ;;		_cmdSetParity
  4140 ;;		_cmdSetRFCH
  4141 ;;		_cmdSetSF
  4142 ;;		_cmdSetSink
  4143 ;;		_cmdSetTTL
  4144 ;;		_cmdSetTX
  4145 ;;		_print_hop_table
  4146 ;;		_printf
  4147 ;;		_set_hop_table_ttl
  4148 ;;		_strstr
  4149 ;; This function is called by:
  4150 ;;		_processATCommand
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           	psect	text6
  4155  0000B2                     __ptext6:
  4156                           	opt callstack 0
  4157  0000B2                     _executeATCommand:
  4158                           	opt callstack 11
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;../app/app_src/application.c: 860:     switch(*(cmd+1))
  4162                           
  4163                           ;incstack = 0
  4164  0000B2  D28D               	goto	l16502
  4165  0000B4                     l16362:
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;../app/app_src/application.c: 863:          if(strstr(atCommand,"+SEND:")){
  4169  0000B4  0E4B               	movlw	low _atCommand
  4170  0000B6  6E0D               	movwf	strstr@h^0,c
  4171  0000B8  0E01               	movlw	high _atCommand
  4172  0000BA  6E0E               	movwf	(strstr@h+1)^0,c
  4173  0000BC  0E5A               	movlw	low STR_66
  4174  0000BE  6E0F               	movwf	strstr@n^0,c
  4175  0000C0  0EFF               	movlw	high STR_66
  4176  0000C2  6E10               	movwf	(strstr@n+1)^0,c
  4177  0000C4  EC72  F02E         	call	_strstr	;wreg free
  4178  0000C8  500D               	movf	?_strstr^0,w,c
  4179  0000CA  100E               	iorwf	(?_strstr+1)^0,w,c
  4180  0000CC  B4D8               	btfsc	status,2,c
  4181  0000CE  D009               	goto	l16366
  4182                           
  4183                           ;../app/app_src/application.c: 864:           cmdSend(cmd);
  4184  0000D0  0060  F2A4  F058   	movff	executeATCommand@cmd,cmdSend@cmd
  4185  0000D6  0060  F2A8  F059   	movff	executeATCommand@cmd+1,cmdSend@cmd+1
  4186  0000DC  EC02  F014         	call	_cmdSend	;wreg free
  4187                           
  4188                           ;../app/app_src/application.c: 865:          }
  4189  0000E0  0012               	return	
  4190  0000E2                     l16366:
  4191  0000E2  0E4B               	movlw	low _atCommand
  4192  0000E4  6E0D               	movwf	strstr@h^0,c
  4193  0000E6  0E01               	movlw	high _atCommand
  4194  0000E8  6E0E               	movwf	(strstr@h+1)^0,c
  4195  0000EA  0E29               	movlw	low STR_68
  4196  0000EC  6E0F               	movwf	strstr@n^0,c
  4197  0000EE  0EFF               	movlw	high STR_68
  4198  0000F0  6E10               	movwf	(strstr@n+1)^0,c
  4199  0000F2  EC72  F02E         	call	_strstr	;wreg free
  4200  0000F6  500D               	movf	?_strstr^0,w,c
  4201  0000F8  100E               	iorwf	(?_strstr+1)^0,w,c
  4202  0000FA  B4D8               	btfsc	status,2,c
  4203  0000FC  D003               	goto	l16370
  4204                           
  4205                           ;../app/app_src/application.c: 867:           cmdSetSink();
  4206  0000FE  ECA5  F047         	call	_cmdSetSink	;wreg free
  4207                           
  4208                           ;../app/app_src/application.c: 868:          }
  4209  000102  0012               	return	
  4210  000104                     l16370:
  4211  000104  0E4B               	movlw	low _atCommand
  4212  000106  6E0D               	movwf	strstr@h^0,c
  4213  000108  0E01               	movlw	high _atCommand
  4214  00010A  6E0E               	movwf	(strstr@h+1)^0,c
  4215  00010C  0EA0               	movlw	low STR_70
  4216  00010E  6E0F               	movwf	strstr@n^0,c
  4217  000110  0EFF               	movlw	high STR_70
  4218  000112  6E10               	movwf	(strstr@n+1)^0,c
  4219  000114  EC72  F02E         	call	_strstr	;wreg free
  4220  000118  500D               	movf	?_strstr^0,w,c
  4221  00011A  100E               	iorwf	(?_strstr+1)^0,w,c
  4222  00011C  B4D8               	btfsc	status,2,c
  4223  00011E  D007               	goto	l16374
  4224                           
  4225                           ;../app/app_src/application.c: 870:           cmdSendSink(atCommand);
  4226  000120  0E4B               	movlw	low _atCommand
  4227  000122  6E02               	movwf	cmdSendSink@cmd^0,c
  4228  000124  0E01               	movlw	high _atCommand
  4229  000126  6E03               	movwf	(cmdSendSink@cmd+1)^0,c
  4230  000128  EC4E  F048         	call	_cmdSendSink	;wreg free
  4231                           
  4232                           ;../app/app_src/application.c: 871:          }
  4233  00012C  0012               	return	
  4234  00012E                     l16374:
  4235  00012E  0E4B               	movlw	low _atCommand
  4236  000130  6E0D               	movwf	strstr@h^0,c
  4237  000132  0E01               	movlw	high _atCommand
  4238  000134  6E0E               	movwf	(strstr@h+1)^0,c
  4239  000136  0EE5               	movlw	low STR_72
  4240  000138  6E0F               	movwf	strstr@n^0,c
  4241  00013A  0EFF               	movlw	high STR_72
  4242  00013C  6E10               	movwf	(strstr@n+1)^0,c
  4243  00013E  EC72  F02E         	call	_strstr	;wreg free
  4244  000142  500D               	movf	?_strstr^0,w,c
  4245  000144  100E               	iorwf	(?_strstr+1)^0,w,c
  4246  000146  B4D8               	btfsc	status,2,c
  4247  000148  D003               	goto	l16378
  4248                           
  4249                           ;../app/app_src/application.c: 873:           cmdGetSF();
  4250  00014A  EC3A  F047         	call	_cmdGetSF	;wreg free
  4251                           
  4252                           ;../app/app_src/application.c: 874:          }
  4253  00014E  0012               	return	
  4254  000150                     l16378:
  4255  000150  0E4B               	movlw	low _atCommand
  4256  000152  6E0D               	movwf	strstr@h^0,c
  4257  000154  0E01               	movlw	high _atCommand
  4258  000156  6E0E               	movwf	(strstr@h+1)^0,c
  4259  000158  0EE0               	movlw	low STR_74
  4260  00015A  6E0F               	movwf	strstr@n^0,c
  4261  00015C  0EFF               	movlw	high STR_74
  4262  00015E  6E10               	movwf	(strstr@n+1)^0,c
  4263  000160  EC72  F02E         	call	_strstr	;wreg free
  4264  000164  500D               	movf	?_strstr^0,w,c
  4265  000166  100E               	iorwf	(?_strstr+1)^0,w,c
  4266  000168  B4D8               	btfsc	status,2,c
  4267  00016A  D007               	goto	l16382
  4268                           
  4269                           ;../app/app_src/application.c: 876:           cmdSetSF(atCommand);
  4270  00016C  0E4B               	movlw	low _atCommand
  4271  00016E  6E58               	movwf	cmdSetSF@atCommand^0,c
  4272  000170  0E01               	movlw	high _atCommand
  4273  000172  6E59               	movwf	(cmdSetSF@atCommand+1)^0,c
  4274  000174  EC9B  F034         	call	_cmdSetSF	;wreg free
  4275                           
  4276                           ;../app/app_src/application.c: 877:          }
  4277  000178  0012               	return	
  4278  00017A                     l16382:
  4279  00017A  0E4B               	movlw	low _atCommand
  4280  00017C  6E0D               	movwf	strstr@h^0,c
  4281  00017E  0E01               	movlw	high _atCommand
  4282  000180  6E0E               	movwf	(strstr@h+1)^0,c
  4283  000182  0ED1               	movlw	low STR_76
  4284  000184  6E0F               	movwf	strstr@n^0,c
  4285  000186  0EFE               	movlw	high STR_76
  4286  000188  6E10               	movwf	(strstr@n+1)^0,c
  4287  00018A  EC72  F02E         	call	_strstr	;wreg free
  4288  00018E  500D               	movf	?_strstr^0,w,c
  4289  000190  100E               	iorwf	(?_strstr+1)^0,w,c
  4290  000192  B4D8               	btfsc	status,2,c
  4291  000194  D210               	goto	l16498
  4292                           
  4293                           ;../app/app_src/application.c: 879:                 print_hop_table(atCommand);
  4294  000196  0E4B               	movlw	low _atCommand
  4295  000198  6E58               	movwf	print_hop_table@atCommand^0,c
  4296  00019A  0E01               	movlw	high _atCommand
  4297  00019C  6E59               	movwf	(print_hop_table@atCommand+1)^0,c
  4298  00019E  EC44  F02C         	call	_print_hop_table	;wreg free
  4299                           
  4300                           ;../app/app_src/application.c: 880:             }
  4301  0001A2  0012               	return	
  4302  0001A4                     l16386:
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;../app/app_src/application.c: 886:          if(strstr(atCommand,"+BCAST=")){
  4306  0001A4  0E4B               	movlw	low _atCommand
  4307  0001A6  6E0D               	movwf	strstr@h^0,c
  4308  0001A8  0E01               	movlw	high _atCommand
  4309  0001AA  6E0E               	movwf	(strstr@h+1)^0,c
  4310  0001AC  0E4A               	movlw	low STR_78
  4311  0001AE  6E0F               	movwf	strstr@n^0,c
  4312  0001B0  0EFF               	movlw	high STR_78
  4313  0001B2  6E10               	movwf	(strstr@n+1)^0,c
  4314  0001B4  EC72  F02E         	call	_strstr	;wreg free
  4315  0001B8  500D               	movf	?_strstr^0,w,c
  4316  0001BA  100E               	iorwf	(?_strstr+1)^0,w,c
  4317  0001BC  B4D8               	btfsc	status,2,c
  4318  0001BE  D009               	goto	l16390
  4319                           
  4320                           ;../app/app_src/application.c: 887:     cmdBcast(cmd);
  4321  0001C0  0060  F2A4  F058   	movff	executeATCommand@cmd,cmdBcast@cmd
  4322  0001C6  0060  F2A8  F059   	movff	executeATCommand@cmd+1,cmdBcast@cmd+1
  4323  0001CC  EC55  F019         	call	_cmdBcast	;wreg free
  4324                           
  4325                           ;../app/app_src/application.c: 888:    }
  4326  0001D0  0012               	return	
  4327  0001D2                     l16390:
  4328  0001D2  0E4B               	movlw	low _atCommand
  4329  0001D4  6E0D               	movwf	strstr@h^0,c
  4330  0001D6  0E01               	movlw	high _atCommand
  4331  0001D8  6E0E               	movwf	(strstr@h+1)^0,c
  4332  0001DA  0E61               	movlw	low STR_80
  4333  0001DC  6E0F               	movwf	strstr@n^0,c
  4334  0001DE  0EFF               	movlw	high STR_80
  4335  0001E0  6E10               	movwf	(strstr@n+1)^0,c
  4336  0001E2  EC72  F02E         	call	_strstr	;wreg free
  4337  0001E6  500D               	movf	?_strstr^0,w,c
  4338  0001E8  100E               	iorwf	(?_strstr+1)^0,w,c
  4339  0001EA  B4D8               	btfsc	status,2,c
  4340  0001EC  D007               	goto	l16394
  4341                           
  4342                           ;../app/app_src/application.c: 890:                 cmdSetBaud(atCommand);
  4343  0001EE  0E4B               	movlw	low _atCommand
  4344  0001F0  6E3A               	movwf	cmdSetBaud@atCommand^0,c
  4345  0001F2  0E01               	movlw	high _atCommand
  4346  0001F4  6E3B               	movwf	(cmdSetBaud@atCommand+1)^0,c
  4347  0001F6  EC66  F03B         	call	_cmdSetBaud	;wreg free
  4348                           
  4349                           ;../app/app_src/application.c: 891:             }
  4350  0001FA  0012               	return	
  4351  0001FC                     l16394:
  4352  0001FC  0E4B               	movlw	low _atCommand
  4353  0001FE  6E0D               	movwf	strstr@h^0,c
  4354  000200  0E01               	movlw	high _atCommand
  4355  000202  6E0E               	movwf	(strstr@h+1)^0,c
  4356  000204  0E04               	movlw	low STR_82
  4357  000206  6E0F               	movwf	strstr@n^0,c
  4358  000208  0EFF               	movlw	high STR_82
  4359  00020A  6E10               	movwf	(strstr@n+1)^0,c
  4360  00020C  EC72  F02E         	call	_strstr	;wreg free
  4361  000210  500D               	movf	?_strstr^0,w,c
  4362  000212  100E               	iorwf	(?_strstr+1)^0,w,c
  4363  000214  B4D8               	btfsc	status,2,c
  4364  000216  D1CF               	goto	l16498
  4365                           
  4366                           ;../app/app_src/application.c: 893:                 cmdBootLoad();
  4367  000218  EC29  F043         	call	_cmdBootLoad	;wreg free
  4368                           
  4369                           ;../app/app_src/application.c: 894:             }
  4370  00021C  0012               	return	
  4371  00021E                     l16398:
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;../app/app_src/application.c: 900:          if(strstr(atCommand,"+ADDR?")){
  4375  00021E  0E4B               	movlw	low _atCommand
  4376  000220  6E0D               	movwf	strstr@h^0,c
  4377  000222  0E01               	movlw	high _atCommand
  4378  000224  6E0E               	movwf	(strstr@h+1)^0,c
  4379  000226  0E8B               	movlw	low STR_84
  4380  000228  6E0F               	movwf	strstr@n^0,c
  4381  00022A  0EFF               	movlw	high STR_84
  4382  00022C  6E10               	movwf	(strstr@n+1)^0,c
  4383  00022E  EC72  F02E         	call	_strstr	;wreg free
  4384  000232  500D               	movf	?_strstr^0,w,c
  4385  000234  100E               	iorwf	(?_strstr+1)^0,w,c
  4386  000236  B4D8               	btfsc	status,2,c
  4387  000238  D003               	goto	l16402
  4388                           
  4389                           ;../app/app_src/application.c: 901:           cmdAddr();
  4390  00023A  EC3B  F046         	call	_cmdAddr	;wreg free
  4391                           
  4392                           ;../app/app_src/application.c: 902:          }
  4393  00023E  0012               	return	
  4394  000240                     l16402:
  4395  000240  0E4B               	movlw	low _atCommand
  4396  000242  6E0D               	movwf	strstr@h^0,c
  4397  000244  0E01               	movlw	high _atCommand
  4398  000246  6E0E               	movwf	(strstr@h+1)^0,c
  4399  000248  0E6F               	movlw	low STR_86
  4400  00024A  6E0F               	movwf	strstr@n^0,c
  4401  00024C  0EFF               	movlw	high STR_86
  4402  00024E  6E10               	movwf	(strstr@n+1)^0,c
  4403  000250  EC72  F02E         	call	_strstr	;wreg free
  4404  000254  500D               	movf	?_strstr^0,w,c
  4405  000256  100E               	iorwf	(?_strstr+1)^0,w,c
  4406  000258  B4D8               	btfsc	status,2,c
  4407  00025A  D007               	goto	l16406
  4408                           
  4409                           ;../app/app_src/application.c: 904:     cmdSetAddr(atCommand);
  4410  00025C  0E4B               	movlw	low _atCommand
  4411  00025E  6E58               	movwf	cmdSetAddr@cmd^0,c
  4412  000260  0E01               	movlw	high _atCommand
  4413  000262  6E59               	movwf	(cmdSetAddr@cmd+1)^0,c
  4414  000264  ECC8  F037         	call	_cmdSetAddr	;wreg free
  4415                           
  4416                           ;../app/app_src/application.c: 905:    }
  4417  000268  0012               	return	
  4418  00026A                     l16406:
  4419  00026A  0E4B               	movlw	low _atCommand
  4420  00026C  6E0D               	movwf	strstr@h^0,c
  4421  00026E  0E01               	movlw	high _atCommand
  4422  000270  6E0E               	movwf	(strstr@h+1)^0,c
  4423  000272  0E0E               	movlw	low STR_88
  4424  000274  6E0F               	movwf	strstr@n^0,c
  4425  000276  0EFF               	movlw	high STR_88
  4426  000278  6E10               	movwf	(strstr@n+1)^0,c
  4427  00027A  EC72  F02E         	call	_strstr	;wreg free
  4428  00027E  500D               	movf	?_strstr^0,w,c
  4429  000280  100E               	iorwf	(?_strstr+1)^0,w,c
  4430  000282  B4D8               	btfsc	status,2,c
  4431  000284  D198               	goto	l16498
  4432                           
  4433                           ;../app/app_src/application.c: 907:           cmdSetAES(atCommand);
  4434  000286  0E4B               	movlw	low _atCommand
  4435  000288  6E58               	movwf	cmdSetAES@cmd^0,c
  4436  00028A  0E01               	movlw	high _atCommand
  4437  00028C  6E59               	movwf	(cmdSetAES@cmd+1)^0,c
  4438  00028E  EC56  F017         	call	_cmdSetAES	;wreg free
  4439                           
  4440                           ;../app/app_src/application.c: 908:          }
  4441  000292  0012               	return	
  4442  000294                     l16410:
  4443                           
  4444                           ; BSR set to: 0
  4445                           ;../app/app_src/application.c: 914:          if(strstr(atCommand,"+CADCOUNTER?")){
  4446  000294  0E4B               	movlw	low _atCommand
  4447  000296  6E0D               	movwf	strstr@h^0,c
  4448  000298  0E01               	movlw	high _atCommand
  4449  00029A  6E0E               	movwf	(strstr@h+1)^0,c
  4450  00029C  0EAC               	movlw	low STR_90
  4451  00029E  6E0F               	movwf	strstr@n^0,c
  4452  0002A0  0EFE               	movlw	high STR_90
  4453  0002A2  6E10               	movwf	(strstr@n+1)^0,c
  4454  0002A4  EC72  F02E         	call	_strstr	;wreg free
  4455  0002A8  500D               	movf	?_strstr^0,w,c
  4456  0002AA  100E               	iorwf	(?_strstr+1)^0,w,c
  4457  0002AC  B4D8               	btfsc	status,2,c
  4458  0002AE  D003               	goto	l16414
  4459                           
  4460                           ;../app/app_src/application.c: 915:           cmdGetCAD();
  4461  0002B0  EC46  F047         	call	_cmdGetCAD	;wreg free
  4462                           
  4463                           ;../app/app_src/application.c: 916:          }
  4464  0002B4  0012               	return	
  4465  0002B6                     l16414:
  4466  0002B6  0E4B               	movlw	low _atCommand
  4467  0002B8  6E0D               	movwf	strstr@h^0,c
  4468  0002BA  0E01               	movlw	high _atCommand
  4469  0002BC  6E0E               	movwf	(strstr@h+1)^0,c
  4470  0002BE  0E5A               	movlw	low STR_92
  4471  0002C0  6E0F               	movwf	strstr@n^0,c
  4472  0002C2  0EFE               	movlw	high STR_92
  4473  0002C4  6E10               	movwf	(strstr@n+1)^0,c
  4474  0002C6  EC72  F02E         	call	_strstr	;wreg free
  4475  0002CA  500D               	movf	?_strstr^0,w,c
  4476  0002CC  100E               	iorwf	(?_strstr+1)^0,w,c
  4477  0002CE  B4D8               	btfsc	status,2,c
  4478  0002D0  D003               	goto	l16418
  4479                           
  4480                           ;../app/app_src/application.c: 918:           cmdRstCAD();
  4481  0002D2  EC81  F047         	call	_cmdRstCAD	;wreg free
  4482                           
  4483                           ;../app/app_src/application.c: 919:          }
  4484  0002D6  0012               	return	
  4485  0002D8                     l16418:
  4486  0002D8  0E4B               	movlw	low _atCommand
  4487  0002DA  6E0D               	movwf	strstr@h^0,c
  4488  0002DC  0E01               	movlw	high _atCommand
  4489  0002DE  6E0E               	movwf	(strstr@h+1)^0,c
  4490  0002E0  0EF0               	movlw	low STR_94
  4491  0002E2  6E0F               	movwf	strstr@n^0,c
  4492  0002E4  0EFE               	movlw	high STR_94
  4493  0002E6  6E10               	movwf	(strstr@n+1)^0,c
  4494  0002E8  EC72  F02E         	call	_strstr	;wreg free
  4495  0002EC  500D               	movf	?_strstr^0,w,c
  4496  0002EE  100E               	iorwf	(?_strstr+1)^0,w,c
  4497  0002F0  B4D8               	btfsc	status,2,c
  4498  0002F2  D003               	goto	l16422
  4499                           
  4500                           ;../app/app_src/application.c: 921:           cmdGetCADRSSI();
  4501  0002F4  ECC7  F046         	call	_cmdGetCADRSSI	;wreg free
  4502                           
  4503                           ;../app/app_src/application.c: 922:          }
  4504  0002F8  0012               	return	
  4505  0002FA                     l16422:
  4506  0002FA  0E4B               	movlw	low _atCommand
  4507  0002FC  6E0D               	movwf	strstr@h^0,c
  4508  0002FE  0E01               	movlw	high _atCommand
  4509  000300  6E0E               	movwf	(strstr@h+1)^0,c
  4510  000302  0EDC               	movlw	low STR_96
  4511  000304  6E0F               	movwf	strstr@n^0,c
  4512  000306  0EFE               	movlw	high STR_96
  4513  000308  6E10               	movwf	(strstr@n+1)^0,c
  4514  00030A  EC72  F02E         	call	_strstr	;wreg free
  4515  00030E  500D               	movf	?_strstr^0,w,c
  4516  000310  100E               	iorwf	(?_strstr+1)^0,w,c
  4517  000312  B4D8               	btfsc	status,2,c
  4518  000314  D150               	goto	l16498
  4519                           
  4520                           ;../app/app_src/application.c: 924:           cmdSetCADRSSI(atCommand);
  4521  000316  0E4B               	movlw	low _atCommand
  4522  000318  6E58               	movwf	cmdSetCADRSSI@atCommand^0,c
  4523  00031A  0E01               	movlw	high _atCommand
  4524  00031C  6E59               	movwf	(cmdSetCADRSSI@atCommand+1)^0,c
  4525  00031E  ECF2  F034         	call	_cmdSetCADRSSI	;wreg free
  4526                           
  4527                           ;../app/app_src/application.c: 925:          }
  4528  000322  0012               	return	
  4529  000324                     l16426:
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;../app/app_src/application.c: 931:             if(strstr(atCommand,"+HOPS?")){
  4533  000324  0E4B               	movlw	low _atCommand
  4534  000326  6E0D               	movwf	strstr@h^0,c
  4535  000328  0E01               	movlw	high _atCommand
  4536  00032A  6E0E               	movwf	(strstr@h+1)^0,c
  4537  00032C  0E92               	movlw	low STR_98
  4538  00032E  6E0F               	movwf	strstr@n^0,c
  4539  000330  0EFF               	movlw	high STR_98
  4540  000332  6E10               	movwf	(strstr@n+1)^0,c
  4541  000334  EC72  F02E         	call	_strstr	;wreg free
  4542  000338  500D               	movf	?_strstr^0,w,c
  4543  00033A  100E               	iorwf	(?_strstr+1)^0,w,c
  4544  00033C  B4D8               	btfsc	status,2,c
  4545  00033E  D003               	goto	l16430
  4546  000340                     u16620:
  4547                           
  4548                           ;../app/app_src/application.c: 932:                 cmdGetTTL();
  4549  000340  EC4F  F048         	call	_cmdGetTTL	;wreg free
  4550                           
  4551                           ;../app/app_src/application.c: 933:             }
  4552  000344  0012               	return	
  4553  000346                     l16430:
  4554  000346  0E4B               	movlw	low _atCommand
  4555  000348  6E0D               	movwf	strstr@h^0,c
  4556  00034A  0E01               	movlw	high _atCommand
  4557  00034C  6E0E               	movwf	(strstr@h+1)^0,c
  4558  00034E  0E76               	movlw	low STR_100
  4559  000350  6E0F               	movwf	strstr@n^0,c
  4560  000352  0EFF               	movlw	high STR_100
  4561  000354  6E10               	movwf	(strstr@n+1)^0,c
  4562  000356  EC72  F02E         	call	_strstr	;wreg free
  4563  00035A  500D               	movf	?_strstr^0,w,c
  4564  00035C  100E               	iorwf	(?_strstr+1)^0,w,c
  4565  00035E  B4D8               	btfsc	status,2,c
  4566  000360  D007               	goto	l16434
  4567  000362                     u16630:
  4568                           
  4569                           ;../app/app_src/application.c: 935:                 cmdSetTTL(atCommand);
  4570  000362  0E4B               	movlw	low _atCommand
  4571  000364  6E02               	movwf	cmdSetTTL@cmd^0,c
  4572  000366  0E01               	movlw	high _atCommand
  4573  000368  6E03               	movwf	(cmdSetTTL@cmd+1)^0,c
  4574  00036A  EC4D  F048         	call	_cmdSetTTL	;wreg free
  4575                           
  4576                           ;../app/app_src/application.c: 936:             }
  4577  00036E  0012               	return	
  4578  000370                     l16434:
  4579  000370  0E4B               	movlw	low _atCommand
  4580  000372  6E0D               	movwf	strstr@h^0,c
  4581  000374  0E01               	movlw	high _atCommand
  4582  000376  6E0E               	movwf	(strstr@h+1)^0,c
  4583  000378  0E17               	movlw	low STR_102
  4584  00037A  6E0F               	movwf	strstr@n^0,c
  4585  00037C  0EFF               	movlw	high STR_102
  4586  00037E  6E10               	movwf	(strstr@n+1)^0,c
  4587  000380  EC72  F02E         	call	_strstr	;wreg free
  4588  000384  500D               	movf	?_strstr^0,w,c
  4589  000386  100E               	iorwf	(?_strstr+1)^0,w,c
  4590  000388  B4D8               	btfsc	status,2,c
  4591  00038A  D115               	goto	l16498
  4592                           
  4593                           ;../app/app_src/application.c: 938:                 set_hop_table_ttl(atCommand);
  4594  00038C  0E4B               	movlw	low _atCommand
  4595  00038E  6E58               	movwf	set_hop_table_ttl@cmd^0,c
  4596  000390  0E01               	movlw	high _atCommand
  4597  000392  6E59               	movwf	(set_hop_table_ttl@cmd+1)^0,c
  4598  000394  EC9D  F047         	call	_set_hop_table_ttl	;wreg free
  4599                           
  4600                           ;../app/app_src/application.c: 939:             }
  4601  000398  0012               	return	
  4602  00039A                     l16438:
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;../app/app_src/application.c: 945:             if(strstr(cmd,"+I")){
  4606  00039A  0060  F2A4  F00D   	movff	executeATCommand@cmd,strstr@h
  4607  0003A0  0060  F2A8  F00E   	movff	executeATCommand@cmd+1,strstr@h+1
  4608  0003A6  0EF9               	movlw	low STR_104
  4609  0003A8  6E0F               	movwf	strstr@n^0,c
  4610  0003AA  0EFF               	movlw	high STR_104
  4611  0003AC  6E10               	movwf	(strstr@n+1)^0,c
  4612  0003AE  EC72  F02E         	call	_strstr	;wreg free
  4613  0003B2  500D               	movf	?_strstr^0,w,c
  4614  0003B4  100E               	iorwf	(?_strstr+1)^0,w,c
  4615  0003B6  B4D8               	btfsc	status,2,c
  4616  0003B8  D0FE               	goto	l16498
  4617                           
  4618                           ;../app/app_src/application.c: 946:                 cmdI();
  4619  0003BA  EC3F  F048         	call	_cmdI	;wreg free
  4620                           
  4621                           ;../app/app_src/application.c: 947:             }
  4622  0003BE  0012               	return	
  4623  0003C0                     l16442:
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;../app/app_src/application.c: 953:          if(strstr(atCommand,"+MAC?")){
  4627  0003C0  0E4B               	movlw	low _atCommand
  4628  0003C2  6E0D               	movwf	strstr@h^0,c
  4629  0003C4  0E01               	movlw	high _atCommand
  4630  0003C6  6E0E               	movwf	(strstr@h+1)^0,c
  4631  0003C8  0EB3               	movlw	low STR_106
  4632  0003CA  6E0F               	movwf	strstr@n^0,c
  4633  0003CC  0EFF               	movlw	high STR_106
  4634  0003CE  6E10               	movwf	(strstr@n+1)^0,c
  4635  0003D0  EC72  F02E         	call	_strstr	;wreg free
  4636  0003D4  500D               	movf	?_strstr^0,w,c
  4637  0003D6  100E               	iorwf	(?_strstr+1)^0,w,c
  4638  0003D8  B4D8               	btfsc	status,2,c
  4639  0003DA  D003               	goto	l16446
  4640                           
  4641                           ;../app/app_src/application.c: 954:           cmdMac();
  4642  0003DC  EC1A  F040         	call	_cmdMac	;wreg free
  4643                           
  4644                           ;../app/app_src/application.c: 955:          }
  4645  0003E0  0012               	return	
  4646  0003E2                     l16446:
  4647  0003E2  0E4B               	movlw	low _atCommand
  4648  0003E4  6E0D               	movwf	strstr@h^0,c
  4649  0003E6  0E01               	movlw	high _atCommand
  4650  0003E8  6E0E               	movwf	(strstr@h+1)^0,c
  4651  0003EA  0E7D               	movlw	low STR_108
  4652  0003EC  6E0F               	movwf	strstr@n^0,c
  4653  0003EE  0EFF               	movlw	high STR_108
  4654  0003F0  6E10               	movwf	(strstr@n+1)^0,c
  4655  0003F2  EC72  F02E         	call	_strstr	;wreg free
  4656  0003F6  500D               	movf	?_strstr^0,w,c
  4657  0003F8  100E               	iorwf	(?_strstr+1)^0,w,c
  4658  0003FA  B4D8               	btfsc	status,2,c
  4659  0003FC  D0DC               	goto	l16498
  4660                           
  4661                           ;../app/app_src/application.c: 957:           cmdGetMode();
  4662  0003FE  ECB5  F047         	call	_cmdGetMode	;wreg free
  4663                           
  4664                           ;../app/app_src/application.c: 958:          }
  4665  000402  0012               	return	
  4666  000404                     l16450:
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;../app/app_src/application.c: 964:          if(strstr(atCommand,"+NADDR?")){
  4670  000404  0E4B               	movlw	low _atCommand
  4671  000406  6E0D               	movwf	strstr@h^0,c
  4672  000408  0E01               	movlw	high _atCommand
  4673  00040A  6E0E               	movwf	(strstr@h+1)^0,c
  4674  00040C  0E52               	movlw	low STR_110
  4675  00040E  6E0F               	movwf	strstr@n^0,c
  4676  000410  0EFF               	movlw	high STR_110
  4677  000412  6E10               	movwf	(strstr@n+1)^0,c
  4678  000414  EC72  F02E         	call	_strstr	;wreg free
  4679  000418  500D               	movf	?_strstr^0,w,c
  4680  00041A  100E               	iorwf	(?_strstr+1)^0,w,c
  4681  00041C  B4D8               	btfsc	status,2,c
  4682  00041E  D003               	goto	l16454
  4683                           
  4684                           ;../app/app_src/application.c: 965:     cmdNaddr();
  4685  000420  EC22  F047         	call	_cmdNaddr	;wreg free
  4686                           
  4687                           ;../app/app_src/application.c: 966:    }
  4688  000424  0012               	return	
  4689  000426                     l16454:
  4690  000426  0E4B               	movlw	low _atCommand
  4691  000428  6E0D               	movwf	strstr@h^0,c
  4692  00042A  0E01               	movlw	high _atCommand
  4693  00042C  6E0E               	movwf	(strstr@h+1)^0,c
  4694  00042E  0E42               	movlw	low STR_112
  4695  000430  6E0F               	movwf	strstr@n^0,c
  4696  000432  0EFF               	movlw	high STR_112
  4697  000434  6E10               	movwf	(strstr@n+1)^0,c
  4698  000436  EC72  F02E         	call	_strstr	;wreg free
  4699  00043A  500D               	movf	?_strstr^0,w,c
  4700  00043C  100E               	iorwf	(?_strstr+1)^0,w,c
  4701  00043E  B4D8               	btfsc	status,2,c
  4702  000440  D0BA               	goto	l16498
  4703                           
  4704                           ;../app/app_src/application.c: 968:     cmdSetNaddr(atCommand);
  4705  000442  0E4B               	movlw	low _atCommand
  4706  000444  6E58               	movwf	cmdSetNaddr@cmd^0,c
  4707  000446  0E01               	movlw	high _atCommand
  4708  000448  6E59               	movwf	(cmdSetNaddr@cmd+1)^0,c
  4709  00044A  ECB8  F03A         	call	_cmdSetNaddr	;wreg free
  4710                           
  4711                           ;../app/app_src/application.c: 969:    }
  4712  00044E  0012               	return	
  4713  000450                     l16458:
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;../app/app_src/application.c: 975:             if(strstr(atCommand,"+PARITY=")){
  4717  000450  0E4B               	movlw	low _atCommand
  4718  000452  6E0D               	movwf	strstr@h^0,c
  4719  000454  0E01               	movlw	high _atCommand
  4720  000456  6E0E               	movwf	(strstr@h+1)^0,c
  4721  000458  0E20               	movlw	low STR_114
  4722  00045A  6E0F               	movwf	strstr@n^0,c
  4723  00045C  0EFF               	movlw	high STR_114
  4724  00045E  6E10               	movwf	(strstr@n+1)^0,c
  4725  000460  EC72  F02E         	call	_strstr	;wreg free
  4726  000464  500D               	movf	?_strstr^0,w,c
  4727  000466  100E               	iorwf	(?_strstr+1)^0,w,c
  4728  000468  B4D8               	btfsc	status,2,c
  4729  00046A  D0A5               	goto	l16498
  4730                           
  4731                           ;../app/app_src/application.c: 976:                 cmdSetParity(atCommand);
  4732  00046C  0E4B               	movlw	low _atCommand
  4733  00046E  6E58               	movwf	cmdSetParity@atCommand^0,c
  4734  000470  0E01               	movlw	high _atCommand
  4735  000472  6E59               	movwf	(cmdSetParity@atCommand+1)^0,c
  4736  000474  EC59  F038         	call	_cmdSetParity	;wreg free
  4737  000478                     l16462:
  4738                           
  4739                           ;../app/app_src/application.c: 982:          if(strstr(atCommand,"+RECV")){
  4740  000478  0E4B               	movlw	low _atCommand
  4741  00047A  6E0D               	movwf	strstr@h^0,c
  4742  00047C  0E01               	movlw	high _atCommand
  4743  00047E  6E0E               	movwf	(strstr@h+1)^0,c
  4744  000480  0ECB               	movlw	low STR_116
  4745  000482  6E0F               	movwf	strstr@n^0,c
  4746  000484  0EFF               	movlw	high STR_116
  4747  000486  6E10               	movwf	(strstr@n+1)^0,c
  4748  000488  EC72  F02E         	call	_strstr	;wreg free
  4749  00048C  500D               	movf	?_strstr^0,w,c
  4750  00048E  100E               	iorwf	(?_strstr+1)^0,w,c
  4751  000490  B4D8               	btfsc	status,2,c
  4752  000492  D003               	goto	l16466
  4753                           
  4754                           ;../app/app_src/application.c: 983:           cmdRecv();
  4755  000494  ECEB  F028         	call	_cmdRecv	;wreg free
  4756                           
  4757                           ;../app/app_src/application.c: 984:          }
  4758  000498  0012               	return	
  4759  00049A                     l16466:
  4760  00049A  0E4B               	movlw	low _atCommand
  4761  00049C  6E0D               	movwf	strstr@h^0,c
  4762  00049E  0E01               	movlw	high _atCommand
  4763  0004A0  6E0E               	movwf	(strstr@h+1)^0,c
  4764  0004A2  0E84               	movlw	low STR_118
  4765  0004A4  6E0F               	movwf	strstr@n^0,c
  4766  0004A6  0EFF               	movlw	high STR_118
  4767  0004A8  6E10               	movwf	(strstr@n+1)^0,c
  4768  0004AA  EC72  F02E         	call	_strstr	;wreg free
  4769  0004AE  500D               	movf	?_strstr^0,w,c
  4770  0004B0  100E               	iorwf	(?_strstr+1)^0,w,c
  4771  0004B2  B4D8               	btfsc	status,2,c
  4772  0004B4  D003               	goto	l16470
  4773                           
  4774                           ;../app/app_src/application.c: 986:           cmdGetRFCH();
  4775  0004B6  ECB9  F046         	call	_cmdGetRFCH	;wreg free
  4776                           
  4777                           ;../app/app_src/application.c: 987:          }
  4778  0004BA  0012               	return	
  4779  0004BC                     l16470:
  4780  0004BC  0E4B               	movlw	low _atCommand
  4781  0004BE  6E0D               	movwf	strstr@h^0,c
  4782  0004C0  0E01               	movlw	high _atCommand
  4783  0004C2  6E0E               	movwf	(strstr@h+1)^0,c
  4784  0004C4  0E68               	movlw	low STR_120
  4785  0004C6  6E0F               	movwf	strstr@n^0,c
  4786  0004C8  0EFF               	movlw	high STR_120
  4787  0004CA  6E10               	movwf	(strstr@n+1)^0,c
  4788  0004CC  EC72  F02E         	call	_strstr	;wreg free
  4789  0004D0  500D               	movf	?_strstr^0,w,c
  4790  0004D2  100E               	iorwf	(?_strstr+1)^0,w,c
  4791  0004D4  B4D8               	btfsc	status,2,c
  4792  0004D6  D007               	goto	l16474
  4793                           
  4794                           ;../app/app_src/application.c: 989:           cmdSetRFCH(atCommand);
  4795  0004D8  0E4B               	movlw	low _atCommand
  4796  0004DA  6E58               	movwf	cmdSetRFCH@cmd^0,c
  4797  0004DC  0E01               	movlw	high _atCommand
  4798  0004DE  6E59               	movwf	(cmdSetRFCH@cmd+1)^0,c
  4799  0004E0  EC45  F036         	call	_cmdSetRFCH	;wreg free
  4800                           
  4801                           ;../app/app_src/application.c: 990:          }
  4802  0004E4  0012               	return	
  4803  0004E6                     l16474:
  4804  0004E6  0E4B               	movlw	low _atCommand
  4805  0004E8  6E0D               	movwf	strstr@h^0,c
  4806  0004EA  0E01               	movlw	high _atCommand
  4807  0004EC  6E0E               	movwf	(strstr@h+1)^0,c
  4808  0004EE  0EEF               	movlw	low STR_122
  4809  0004F0  6E0F               	movwf	strstr@n^0,c
  4810  0004F2  0EFF               	movlw	high STR_122
  4811  0004F4  6E10               	movwf	(strstr@n+1)^0,c
  4812  0004F6  EC72  F02E         	call	_strstr	;wreg free
  4813  0004FA  500D               	movf	?_strstr^0,w,c
  4814  0004FC  100E               	iorwf	(?_strstr+1)^0,w,c
  4815  0004FE  B4D8               	btfsc	status,2,c
  4816  000500  D003               	goto	l16478
  4817                           
  4818                           ;../app/app_src/application.c: 992:           cmdReset();
  4819  000502  EC4B  F048         	call	_cmdReset	;wreg free
  4820                           
  4821                           ;../app/app_src/application.c: 993:          }
  4822  000506  0012               	return	
  4823  000508                     l16478:
  4824  000508  0E4B               	movlw	low _atCommand
  4825  00050A  6E0D               	movwf	strstr@h^0,c
  4826  00050C  0E01               	movlw	high _atCommand
  4827  00050E  6E0E               	movwf	(strstr@h+1)^0,c
  4828  000510  0E99               	movlw	low STR_124
  4829  000512  6E0F               	movwf	strstr@n^0,c
  4830  000514  0EFF               	movlw	high STR_124
  4831  000516  6E10               	movwf	(strstr@n+1)^0,c
  4832  000518  EC72  F02E         	call	_strstr	;wreg free
  4833  00051C  500D               	movf	?_strstr^0,w,c
  4834  00051E  100E               	iorwf	(?_strstr+1)^0,w,c
  4835  000520  B4D8               	btfsc	status,2,c
  4836  000522  D049               	goto	l16498
  4837                           
  4838                           ;../app/app_src/application.c: 995:           cmdGetRxCnt(atCommand);
  4839  000524  0E4B               	movlw	low _atCommand
  4840  000526  6E58               	movwf	cmdGetRxCnt@atCommand^0,c
  4841  000528  0E01               	movlw	high _atCommand
  4842  00052A  6E59               	movwf	(cmdGetRxCnt@atCommand+1)^0,c
  4843  00052C  EC3F  F040         	call	_cmdGetRxCnt	;wreg free
  4844                           
  4845                           ;../app/app_src/application.c: 996:          }
  4846  000530  0012               	return	
  4847  000532                     l16482:
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;../app/app_src/application.c: 1002:          if(strstr(atCommand,"+TTL?")){
  4851  000532  0E4B               	movlw	low _atCommand
  4852  000534  6E0D               	movwf	strstr@h^0,c
  4853  000536  0E01               	movlw	high _atCommand
  4854  000538  6E0E               	movwf	(strstr@h+1)^0,c
  4855  00053A  0EB9               	movlw	low STR_126
  4856  00053C  6E0F               	movwf	strstr@n^0,c
  4857  00053E  0EFF               	movlw	high STR_126
  4858  000540  6E10               	movwf	(strstr@n+1)^0,c
  4859  000542  EC72  F02E         	call	_strstr	;wreg free
  4860  000546  500D               	movf	?_strstr^0,w,c
  4861  000548  100E               	iorwf	(?_strstr+1)^0,w,c
  4862  00054A  A4D8               	btfss	status,2,c
  4863  00054C  D6F9               	goto	u16620
  4864  00054E  0E4B               	movlw	low _atCommand
  4865  000550  6E0D               	movwf	strstr@h^0,c
  4866  000552  0E01               	movlw	high _atCommand
  4867  000554  6E0E               	movwf	(strstr@h+1)^0,c
  4868  000556  0EAD               	movlw	low STR_128
  4869  000558  6E0F               	movwf	strstr@n^0,c
  4870  00055A  0EFF               	movlw	high STR_128
  4871  00055C  6E10               	movwf	(strstr@n+1)^0,c
  4872  00055E  EC72  F02E         	call	_strstr	;wreg free
  4873  000562  500D               	movf	?_strstr^0,w,c
  4874  000564  100E               	iorwf	(?_strstr+1)^0,w,c
  4875  000566  A4D8               	btfss	status,2,c
  4876  000568  D6FC               	goto	u16630
  4877  00056A  0E4B               	movlw	low _atCommand
  4878  00056C  6E0D               	movwf	strstr@h^0,c
  4879  00056E  0E01               	movlw	high _atCommand
  4880  000570  6E0E               	movwf	(strstr@h+1)^0,c
  4881  000572  0EFA               	movlw	low STR_130
  4882  000574  6E0F               	movwf	strstr@n^0,c
  4883  000576  0EFE               	movlw	high STR_130
  4884  000578  6E10               	movwf	(strstr@n+1)^0,c
  4885  00057A  EC72  F02E         	call	_strstr	;wreg free
  4886  00057E  500D               	movf	?_strstr^0,w,c
  4887  000580  100E               	iorwf	(?_strstr+1)^0,w,c
  4888  000582  B4D8               	btfsc	status,2,c
  4889  000584  D003               	goto	l16494
  4890                           
  4891                           ;../app/app_src/application.c: 1009:           cmdGetTX();
  4892  000586  EC2E  F047         	call	_cmdGetTX	;wreg free
  4893                           
  4894                           ;../app/app_src/application.c: 1010:          }
  4895  00058A  0012               	return	
  4896  00058C                     l16494:
  4897  00058C  0E4B               	movlw	low _atCommand
  4898  00058E  6E0D               	movwf	strstr@h^0,c
  4899  000590  0E01               	movlw	high _atCommand
  4900  000592  6E0E               	movwf	(strstr@h+1)^0,c
  4901  000594  0EE6               	movlw	low STR_132
  4902  000596  6E0F               	movwf	strstr@n^0,c
  4903  000598  0EFE               	movlw	high STR_132
  4904  00059A  6E10               	movwf	(strstr@n+1)^0,c
  4905  00059C  EC72  F02E         	call	_strstr	;wreg free
  4906  0005A0  500D               	movf	?_strstr^0,w,c
  4907  0005A2  100E               	iorwf	(?_strstr+1)^0,w,c
  4908  0005A4  B4D8               	btfsc	status,2,c
  4909  0005A6  D007               	goto	l16498
  4910                           
  4911                           ;../app/app_src/application.c: 1012:           cmdSetTX(atCommand);
  4912  0005A8  0E4B               	movlw	low _atCommand
  4913  0005AA  6E58               	movwf	cmdSetTX@cmd^0,c
  4914  0005AC  0E01               	movlw	high _atCommand
  4915  0005AE  6E59               	movwf	(cmdSetTX@cmd+1)^0,c
  4916  0005B0  ECB5  F02C         	call	_cmdSetTX	;wreg free
  4917                           
  4918                           ;../app/app_src/application.c: 1013:          }
  4919  0005B4  0012               	return	
  4920  0005B6                     l16498:
  4921                           
  4922                           ;../app/app_src/application.c: 1022:             printf("NOT OK:%u\r\n", (uint16_t)UNDEF
      +                          CMD);
  4923  0005B6  0EC5               	movlw	low STR_3
  4924  0005B8  0100               	movlb	0	; () banked
  4925  0005BA  6F75               	movwf	printf@fmt& (0+255),b
  4926  0005BC  0EFE               	movlw	high STR_3
  4927  0005BE  6F76               	movwf	(printf@fmt+1)& (0+255),b
  4928  0005C0  0E00               	movlw	0
  4929  0005C2  6F78               	movwf	(?_printf+3)& (0+255),b
  4930  0005C4  0E09               	movlw	9
  4931  0005C6  6F77               	movwf	(?_printf+2)& (0+255),b
  4932  0005C8  ECC4  F045         	call	_printf	;wreg free
  4933                           
  4934                           ;../app/app_src/application.c: 1023:             break;
  4935  0005CC  0012               	return	
  4936  0005CE                     l16502:
  4937                           
  4938                           ; BSR set to: 0
  4939  0005CE  EE20 F001          	lfsr	2,1
  4940  0005D2  51A9               	movf	executeATCommand@cmd& (0+255),w,b
  4941  0005D4  26D9               	addwf	fsr2l,f,c
  4942  0005D6  51AA               	movf	(executeATCommand@cmd+1)& (0+255),w,b
  4943  0005D8  22DA               	addwfc	fsr2h,f,c
  4944  0005DA  50DF               	movf	indf2,w,c
  4945  0005DC  6FAB               	movwf	??_executeATCommand& (0+255),b
  4946  0005DE  6BAC               	clrf	(??_executeATCommand+1)& (0+255),b
  4947                           
  4948                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4949                           ; Switch size 1, requested type "simple"
  4950                           ; Number of cases is 1, Range of values is 0 to 0
  4951                           ; switch strategies available:
  4952                           ; Name         Instructions Cycles
  4953                           ; simple_byte            4     3 (average)
  4954                           ;	Chosen strategy is simple_byte
  4955  0005E0  51AC               	movf	(??_executeATCommand+1)& (0+255),w,b
  4956  0005E2  0A00               	xorlw	0	; case 0
  4957  0005E4  A4D8               	btfss	status,2,c
  4958  0005E6  D7E7               	goto	l16498
  4959                           
  4960                           ; BSR set to: 0
  4961                           ; Switch size 1, requested type "simple"
  4962                           ; Number of cases is 11, Range of values is 65 to 84
  4963                           ; switch strategies available:
  4964                           ; Name         Instructions Cycles
  4965                           ; simple_byte           34    18 (average)
  4966                           ;	Chosen strategy is simple_byte
  4967  0005E8  51AB               	movf	??_executeATCommand& (0+255),w,b
  4968  0005EA  0A41               	xorlw	65	; case 65
  4969  0005EC  B4D8               	btfsc	status,2,c
  4970  0005EE  D617               	goto	l16398
  4971  0005F0  0A03               	xorlw	3	; case 66
  4972  0005F2  B4D8               	btfsc	status,2,c
  4973  0005F4  D5D7               	goto	l16386
  4974  0005F6  0A01               	xorlw	1	; case 67
  4975  0005F8  B4D8               	btfsc	status,2,c
  4976  0005FA  D64C               	goto	l16410
  4977  0005FC  0A0B               	xorlw	11	; case 72
  4978  0005FE  B4D8               	btfsc	status,2,c
  4979  000600  D691               	goto	l16426
  4980  000602  0A01               	xorlw	1	; case 73
  4981  000604  B4D8               	btfsc	status,2,c
  4982  000606  D6C9               	goto	l16438
  4983  000608  0A04               	xorlw	4	; case 77
  4984  00060A  B4D8               	btfsc	status,2,c
  4985  00060C  D6D9               	goto	l16442
  4986  00060E  0A03               	xorlw	3	; case 78
  4987  000610  B4D8               	btfsc	status,2,c
  4988  000612  D6F8               	goto	l16450
  4989  000614  0A1E               	xorlw	30	; case 80
  4990  000616  B4D8               	btfsc	status,2,c
  4991  000618  D71B               	goto	l16458
  4992  00061A  0A02               	xorlw	2	; case 82
  4993  00061C  B4D8               	btfsc	status,2,c
  4994  00061E  D72C               	goto	l16462
  4995  000620  0A01               	xorlw	1	; case 83
  4996  000622  B4D8               	btfsc	status,2,c
  4997  000624  D547               	goto	l16362
  4998  000626  0A07               	xorlw	7	; case 84
  4999  000628  B4D8               	btfsc	status,2,c
  5000  00062A  D783               	goto	l16482
  5001  00062C  D7C4               	goto	l16498
  5002  00062E                     __end_of_executeATCommand:
  5003                           	opt callstack 0
  5004                           
  5005 ;; *************** function _set_hop_table_ttl *****************
  5006 ;; Defined at:
  5007 ;;		line 835 in file "../app/app_src/application.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  5010 ;;		 -> atCommand(80), 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;		None
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  1    wreg      void 
  5015 ;; Registers used:
  5016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 3F/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5022 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5025 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5026 ;;Total ram usage:        2 bytes
  5027 ;; Hardware stack levels used:    1
  5028 ;; Hardware stack levels required when called:   16
  5029 ;; This function calls:
  5030 ;;		_printf
  5031 ;; This function is called by:
  5032 ;;		_executeATCommand
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           	psect	text7
  5037  008F3A                     __ptext7:
  5038                           	opt callstack 0
  5039  008F3A                     _set_hop_table_ttl:
  5040                           	opt callstack 12
  5041                           
  5042                           ;../app/app_src/application.c: 848:     printf("OK\r\n");
  5043                           
  5044                           ;incstack = 0
  5045  008F3A  0ED6               	movlw	low STR_12
  5046  008F3C  0100               	movlb	0	; () banked
  5047  008F3E  6F75               	movwf	printf@fmt& (0+255),b
  5048  008F40  0EFF               	movlw	high STR_12
  5049  008F42  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5050  008F44  ECC4  F045         	call	_printf	;wreg free
  5051                           
  5052                           ; BSR set to: 0
  5053  008F48  0012               	return		;funcret
  5054  008F4A                     __end_of_set_hop_table_ttl:
  5055                           	opt callstack 0
  5056                           
  5057 ;; *************** function _print_hop_table *****************
  5058 ;; Defined at:
  5059 ;;		line 821 in file "../app/app_src/application.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  atCommand       2   87[COMRAM] PTR unsigned char 
  5062 ;;		 -> atCommand(80), 
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;  i               1   91[COMRAM] unsigned char 
  5065 ;;  entry           2   89[COMRAM] PTR struct NWK_RouteTabl
  5066 ;;		 -> nwkRouteTable(70), 
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  1    wreg      void 
  5069 ;; Registers used:
  5070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 3F/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5076 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5078 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5079 ;;      Totals:         5      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5080 ;;Total ram usage:       15 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; Hardware stack levels required when called:   16
  5083 ;; This function calls:
  5084 ;;		_NWK_RouteTable
  5085 ;;		_printf
  5086 ;; This function is called by:
  5087 ;;		_executeATCommand
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           	psect	text8
  5092  005888                     __ptext8:
  5093                           	opt callstack 0
  5094  005888                     _print_hop_table:
  5095                           	opt callstack 12
  5096                           
  5097                           ;../app/app_src/application.c: 822:     NWK_RouteTableEntry_t *entry = NWK_RouteTable();
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;incstack = 0
  5101  005888  EC2A  F048         	call	_NWK_RouteTable	;wreg free
  5102  00588C  0060  F008  F05A   	movff	?_NWK_RouteTable,print_hop_table@entry
  5103  005892  0060  F00C  F05B   	movff	?_NWK_RouteTable+1,print_hop_table@entry+1
  5104                           
  5105                           ;../app/app_src/application.c: 823:     for(uint8_t i = 0; i < 10; i++){
  5106  005898  0E00               	movlw	0
  5107  00589A  6E5C               	movwf	print_hop_table@i^0,c
  5108  00589C                     l16176:
  5109                           
  5110                           ;../app/app_src/application.c: 824:         printf("DST:%04X NXT:%04X SCO:%u LQI:%u\r\n"
      +                          , (entry+i)->dstAddr,
  5111  00589C  0EB9               	movlw	low STR_64
  5112  00589E  0100               	movlb	0	; () banked
  5113  0058A0  6F75               	movwf	printf@fmt& (0+255),b
  5114  0058A2  0EFD               	movlw	high STR_64
  5115  0058A4  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5116  0058A6  505C               	movf	print_hop_table@i^0,w,c
  5117  0058A8  0D07               	mullw	7
  5118  0058AA  0060  F168  F07F   	movff	print_hop_table@entry,??_print_hop_table
  5119  0058B0  0060  F16C  F080   	movff	print_hop_table@entry+1,??_print_hop_table+1
  5120  0058B6  50F3               	movf	243,w,c
  5121  0058B8  277F               	addwf	??_print_hop_table& (0+255),f,b
  5122  0058BA  50F4               	movf	244,w,c
  5123  0058BC  2380               	addwfc	(??_print_hop_table+1)& (0+255),f,b
  5124  0058BE  0E01               	movlw	1
  5125  0058C0  257F               	addwf	??_print_hop_table& (0+255),w,b
  5126  0058C2  6ED9               	movwf	fsr2l,c
  5127  0058C4  0E00               	movlw	0
  5128  0058C6  2180               	addwfc	(??_print_hop_table+1)& (0+255),w,b
  5129  0058C8  6EDA               	movwf	fsr2h,c
  5130  0058CA  006F FF78  F077    	movff	postinc2,?_printf+2
  5131  0058D0  006F FF74  F078    	movff	postdec2,?_printf+3
  5132  0058D6  505C               	movf	print_hop_table@i^0,w,c
  5133  0058D8  0D07               	mullw	7
  5134  0058DA  0060  F168  F081   	movff	print_hop_table@entry,??_print_hop_table+2
  5135  0058E0  0060  F16C  F082   	movff	print_hop_table@entry+1,??_print_hop_table+3
  5136  0058E6  50F3               	movf	243,w,c
  5137  0058E8  2781               	addwf	(??_print_hop_table+2)& (0+255),f,b
  5138  0058EA  50F4               	movf	244,w,c
  5139  0058EC  2382               	addwfc	(??_print_hop_table+3)& (0+255),f,b
  5140  0058EE  0E03               	movlw	3
  5141  0058F0  2581               	addwf	(??_print_hop_table+2)& (0+255),w,b
  5142  0058F2  6ED9               	movwf	fsr2l,c
  5143  0058F4  0E00               	movlw	0
  5144  0058F6  2182               	addwfc	(??_print_hop_table+3)& (0+255),w,b
  5145  0058F8  6EDA               	movwf	fsr2h,c
  5146  0058FA  006F FF78  F079    	movff	postinc2,?_printf+4
  5147  005900  006F FF74  F07A    	movff	postdec2,?_printf+5
  5148  005906  505C               	movf	print_hop_table@i^0,w,c
  5149  005908  0D07               	mullw	7
  5150  00590A  006F FFCC  F083    	movff	prodl,??_print_hop_table+4
  5151  005910  006F FFD0  F084    	movff	prodh,??_print_hop_table+5
  5152  005916  5183               	movf	(??_print_hop_table+4)& (0+255),w,b
  5153  005918  245A               	addwf	print_hop_table@entry^0,w,c
  5154  00591A  6ED9               	movwf	fsr2l,c
  5155  00591C  5184               	movf	(??_print_hop_table+5)& (0+255),w,b
  5156  00591E  205B               	addwfc	(print_hop_table@entry+1)^0,w,c
  5157  005920  6EDA               	movwf	fsr2h,c
  5158  005922  38DF               	swapf	indf2,w,c
  5159  005924  0B0F               	andlw	15
  5160  005926  6F85               	movwf	(??_print_hop_table+6)& (0+255),b
  5161  005928  5185               	movf	(??_print_hop_table+6)& (0+255),w,b
  5162  00592A  6F7B               	movwf	(?_printf+6)& (0+255),b
  5163  00592C  6B7C               	clrf	(?_printf+7)& (0+255),b
  5164  00592E  505C               	movf	print_hop_table@i^0,w,c
  5165  005930  0D07               	mullw	7
  5166  005932  0060  F168  F086   	movff	print_hop_table@entry,??_print_hop_table+7
  5167  005938  0060  F16C  F087   	movff	print_hop_table@entry+1,??_print_hop_table+8
  5168  00593E  50F3               	movf	243,w,c
  5169  005940  2786               	addwf	(??_print_hop_table+7)& (0+255),f,b
  5170  005942  50F4               	movf	244,w,c
  5171  005944  2387               	addwfc	(??_print_hop_table+8)& (0+255),f,b
  5172  005946  0E06               	movlw	6
  5173  005948  2586               	addwf	(??_print_hop_table+7)& (0+255),w,b
  5174  00594A  6ED9               	movwf	fsr2l,c
  5175  00594C  0E00               	movlw	0
  5176  00594E  2187               	addwfc	(??_print_hop_table+8)& (0+255),w,b
  5177  005950  6EDA               	movwf	fsr2h,c
  5178  005952  50DF               	movf	indf2,w,c
  5179  005954  6F88               	movwf	(??_print_hop_table+9)& (0+255),b
  5180  005956  5188               	movf	(??_print_hop_table+9)& (0+255),w,b
  5181  005958  6F7D               	movwf	(?_printf+8)& (0+255),b
  5182  00595A  6B7E               	clrf	(?_printf+9)& (0+255),b
  5183  00595C  ECC4  F045         	call	_printf	;wreg free
  5184                           
  5185                           ; BSR set to: 0
  5186                           ;../app/app_src/application.c: 826:     }
  5187  005960  2A5C               	incf	print_hop_table@i^0,f,c
  5188                           
  5189                           ; BSR set to: 0
  5190  005962  0E09               	movlw	9
  5191  005964  645C               	cpfsgt	print_hop_table@i^0,c
  5192  005966  D79A               	goto	l16176
  5193  005968  0012               	return	
  5194  00596A                     __end_of_print_hop_table:
  5195                           	opt callstack 0
  5196                           
  5197 ;; *************** function _NWK_RouteTable *****************
  5198 ;; Defined at:
  5199 ;;		line 157 in file "../nwk/nwk_src/nwkRoute.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;		None
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
  5206 ;; Registers used:
  5207 ;;		wreg, status,2, status,0
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;Total ram usage:        2 bytes
  5218 ;; Hardware stack levels used:    1
  5219 ;; Hardware stack levels required when called:    7
  5220 ;; This function calls:
  5221 ;;		Nothing
  5222 ;; This function is called by:
  5223 ;;		_print_hop_table
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227                           	psect	text9
  5228  009054                     __ptext9:
  5229                           	opt callstack 0
  5230  009054                     _NWK_RouteTable:
  5231                           	opt callstack 20
  5232                           
  5233                           ;../nwk/nwk_src/nwkRoute.c: 159:   return nwkRouteTable;
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;incstack = 0
  5237  009054  0E44               	movlw	low _nwkRouteTable
  5238  009056  6E02               	movwf	?_NWK_RouteTable^0,c
  5239  009058  0E02               	movlw	high _nwkRouteTable
  5240  00905A  6E03               	movwf	(?_NWK_RouteTable+1)^0,c
  5241  00905C  0012               	return		;funcret
  5242  00905E                     __end_of_NWK_RouteTable:
  5243                           	opt callstack 0
  5244                           
  5245 ;; *************** function _cmdSetTX *****************
  5246 ;; Defined at:
  5247 ;;		line 639 in file "../app/app_src/application.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  5250 ;;		 -> atCommand(80), 
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;  CHstr           3   36[BANK0 ] unsigned char [3]
  5253 ;;  p1              2   33[BANK0 ] PTR unsigned char 
  5254 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  5255 ;;  p2              2   31[BANK0 ] PTR unsigned char 
  5256 ;;		 -> cmdSetSF@CHstr(3), STR_58(2), STR_57(2), cmdSetCADRSSI@CHstr(3), 
  5257 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5258 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5259 ;;  temp            1   35[BANK0 ] unsigned char 
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  1    wreg      void 
  5262 ;; Registers used:
  5263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 3F/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5270 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5272 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5273 ;;Total ram usage:       10 bytes
  5274 ;; Hardware stack levels used:    1
  5275 ;; Hardware stack levels required when called:   16
  5276 ;; This function calls:
  5277 ;;		_DATAEE_WriteByte_Platform
  5278 ;;		_initRadio
  5279 ;;		_memcpy
  5280 ;;		_memset
  5281 ;;		_printf
  5282 ;;		_strstr
  5283 ;;		_strtoul
  5284 ;; This function is called by:
  5285 ;;		_executeATCommand
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           	psect	text10
  5290  00596A                     __ptext10:
  5291                           	opt callstack 0
  5292  00596A                     _cmdSetTX:
  5293                           	opt callstack 12
  5294                           
  5295                           ;../app/app_src/application.c: 640:  char *p1,*p2;;../app/app_src/application.c: 641:  c
      +                          har CHstr[3];;../app/app_src/application.c: 642:  uint8_t temp;;../app/app_src/applicati
      +                          on.c: 643:  p1 = strstr(atCommand,"=") + 1;
  5296                           
  5297                           ;incstack = 0
  5298  00596A  0E4B               	movlw	low _atCommand
  5299  00596C  6E0D               	movwf	strstr@h^0,c
  5300  00596E  0E01               	movlw	high _atCommand
  5301  005970  6E0E               	movwf	(strstr@h+1)^0,c
  5302  005972  0EDE               	movlw	low (STR_21+3)
  5303  005974  6E0F               	movwf	strstr@n^0,c
  5304  005976  0EFF               	movlw	high (STR_21+3)
  5305  005978  6E10               	movwf	(strstr@n+1)^0,c
  5306  00597A  EC72  F02E         	call	_strstr	;wreg free
  5307  00597E  0E01               	movlw	1
  5308  005980  240D               	addwf	?_strstr^0,w,c
  5309  005982  0100               	movlb	0	; () banked
  5310  005984  6F81               	movwf	cmdSetTX@p1& (0+255),b
  5311  005986  0E00               	movlw	0
  5312  005988  200E               	addwfc	(?_strstr+1)^0,w,c
  5313  00598A  6F82               	movwf	(cmdSetTX@p1+1)& (0+255),b
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;../app/app_src/application.c: 644:     if(!p1){
  5317  00598C  5181               	movf	cmdSetTX@p1& (0+255),w,b
  5318  00598E  1182               	iorwf	(cmdSetTX@p1+1)& (0+255),w,b
  5319  005990  A4D8               	btfss	status,2,c
  5320  005992  D00A               	goto	l16064
  5321                           
  5322                           ; BSR set to: 0
  5323                           ;../app/app_src/application.c: 645:         printf("NOT OK:%u\r\n",(uint16_t)TXOUTOFBOUN
      +                          DS);
  5324  005994  0EC5               	movlw	low STR_3
  5325  005996  6F75               	movwf	printf@fmt& (0+255),b
  5326  005998  0EFE               	movlw	high STR_3
  5327  00599A  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5328  00599C  0E00               	movlw	0
  5329  00599E  6F78               	movwf	(?_printf+3)& (0+255),b
  5330  0059A0  0E0B               	movlw	11
  5331  0059A2  6F77               	movwf	(?_printf+2)& (0+255),b
  5332  0059A4  ECC4  F045         	call	_printf	;wreg free
  5333  0059A8                     l16064:
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;../app/app_src/application.c: 647:     memset(CHstr, 0 , sizeof(CHstr));
  5337  0059A8  0E84               	movlw	low cmdSetTX@CHstr
  5338  0059AA  6E02               	movwf	memset@dest^0,c
  5339  0059AC  6A03               	clrf	(memset@dest+1)^0,c
  5340  0059AE  0E00               	movlw	0
  5341  0059B0  6E05               	movwf	(memset@c+1)^0,c
  5342  0059B2  0E00               	movlw	0
  5343  0059B4  6E04               	movwf	memset@c^0,c
  5344  0059B6  0E00               	movlw	0
  5345  0059B8  6E07               	movwf	(memset@n+1)^0,c
  5346  0059BA  0E03               	movlw	3
  5347  0059BC  6E06               	movwf	memset@n^0,c
  5348  0059BE  EC10  F022         	call	_memset	;wreg free
  5349                           
  5350                           ;../app/app_src/application.c: 648:  memcpy(CHstr,p1,2);
  5351  0059C2  0E84               	movlw	low cmdSetTX@CHstr
  5352  0059C4  6E08               	movwf	memcpy@d1^0,c
  5353  0059C6  6A09               	clrf	(memcpy@d1+1)^0,c
  5354  0059C8  0060  F204  F00A   	movff	cmdSetTX@p1,memcpy@s1
  5355  0059CE  0060  F208  F00B   	movff	cmdSetTX@p1+1,memcpy@s1+1
  5356  0059D4  0E00               	movlw	0
  5357  0059D6  6E0D               	movwf	(memcpy@n+1)^0,c
  5358  0059D8  0E02               	movlw	2
  5359  0059DA  6E0C               	movwf	memcpy@n^0,c
  5360  0059DC  ECF6  F03A         	call	_memcpy	;wreg free
  5361                           
  5362                           ;../app/app_src/application.c: 649:  temp = (uint8_t)strtoul(CHstr,&p2,10);
  5363  0059E0  0E84               	movlw	low cmdSetTX@CHstr
  5364  0059E2  6E34               	movwf	strtoul@s^0,c
  5365  0059E4  6A35               	clrf	(strtoul@s+1)^0,c
  5366  0059E6  0E7F               	movlw	low cmdSetTX@p2
  5367  0059E8  6E36               	movwf	strtoul@endptr^0,c
  5368  0059EA  6A37               	clrf	(strtoul@endptr+1)^0,c
  5369  0059EC  0E00               	movlw	0
  5370  0059EE  6E39               	movwf	(strtoul@base+1)^0,c
  5371  0059F0  0E0A               	movlw	10
  5372  0059F2  6E38               	movwf	strtoul@base^0,c
  5373  0059F4  EC89  F040         	call	_strtoul	;wreg free
  5374  0059F8  5034               	movf	?_strtoul^0,w,c
  5375  0059FA  0100               	movlb	0	; () banked
  5376  0059FC  6F83               	movwf	cmdSetTX@temp& (0+255),b
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;../app/app_src/application.c: 650:  if((temp > 13) || (temp < 2)){
  5380  0059FE  0E0E               	movlw	14
  5381  005A00  6183               	cpfslt	cmdSetTX@temp& (0+255),b
  5382  005A02  D003               	goto	u16160
  5383                           
  5384                           ; BSR set to: 0
  5385  005A04  0E02               	movlw	2
  5386  005A06  6183               	cpfslt	cmdSetTX@temp& (0+255),b
  5387  005A08  D00B               	goto	l371
  5388  005A0A                     u16160:
  5389                           
  5390                           ; BSR set to: 0
  5391                           ;../app/app_src/application.c: 651:   printf("NOT OK:%u\r\n",(uint16_t)TXOUTOFBOUNDS);
  5392  005A0A  0EC5               	movlw	low STR_3
  5393  005A0C  6F75               	movwf	printf@fmt& (0+255),b
  5394  005A0E  0EFE               	movlw	high STR_3
  5395  005A10  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5396  005A12  0E00               	movlw	0
  5397  005A14  6F78               	movwf	(?_printf+3)& (0+255),b
  5398  005A16  0E0B               	movlw	11
  5399  005A18  6F77               	movwf	(?_printf+2)& (0+255),b
  5400  005A1A  ECC4  F045         	call	_printf	;wreg free
  5401                           
  5402                           ;../app/app_src/application.c: 652:  }
  5403  005A1E  0012               	return	
  5404  005A20                     l371:
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;../app/app_src/application.c: 654:   TXPower = temp;
  5408  005A20  0060  F20C  F0CC   	movff	cmdSetTX@temp,_TXPower
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;../app/app_src/application.c: 655:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1,TXPower);
  5412  005A26  0E00               	movlw	0
  5413  005A28  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5414  005A2A  0E1D               	movlw	29
  5415  005A2C  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5416  005A2E  0060  F330  F008   	movff	_TXPower,DATAEE_WriteByte_Platform@data
  5417  005A34  ECF1  F040         	call	_DATAEE_WriteByte_Platform	;wreg free
  5418                           
  5419                           ;../app/app_src/application.c: 656:   initRadio();
  5420  005A38  ECB5  F020         	call	_initRadio	;wreg free
  5421                           
  5422                           ; BSR set to: 0
  5423                           ;../app/app_src/application.c: 657:   printf("OK\r\n");
  5424  005A3C  0ED6               	movlw	low STR_12
  5425  005A3E  6F75               	movwf	printf@fmt& (0+255),b
  5426  005A40  0EFF               	movlw	high STR_12
  5427  005A42  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5428  005A44  ECC4  F045         	call	_printf	;wreg free
  5429                           
  5430                           ; BSR set to: 0
  5431  005A48  0012               	return		;funcret
  5432  005A4A                     __end_of_cmdSetTX:
  5433                           	opt callstack 0
  5434                           
  5435 ;; *************** function _cmdSetTTL *****************
  5436 ;; Defined at:
  5437 ;;		line 537 in file "../app/app_src/application.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;  cmd             2    1[COMRAM] PTR unsigned char 
  5440 ;;		 -> atCommand(80), 
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;		None
  5443 ;; Return value:  Size  Location     Type
  5444 ;;                  1    wreg      void 
  5445 ;; Registers used:
  5446 ;;		None
  5447 ;; Tracked objects:
  5448 ;;		On entry : 0/0
  5449 ;;		On exit  : 0/0
  5450 ;;		Unchanged: 0/0
  5451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5456 ;;Total ram usage:        2 bytes
  5457 ;; Hardware stack levels used:    1
  5458 ;; Hardware stack levels required when called:    7
  5459 ;; This function calls:
  5460 ;;		Nothing
  5461 ;; This function is called by:
  5462 ;;		_executeATCommand
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           
  5466                           	psect	text11
  5467  00909A                     __ptext11:
  5468                           	opt callstack 0
  5469  00909A                     _cmdSetTTL:
  5470                           	opt callstack 21
  5471                           
  5472                           ;../app/app_src/application.c: 544:  return;
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;incstack = 0
  5476  00909A  0012               	return		;funcret
  5477  00909C                     __end_of_cmdSetTTL:
  5478                           	opt callstack 0
  5479                           
  5480 ;; *************** function _cmdSetSink *****************
  5481 ;; Defined at:
  5482 ;;		line 426 in file "../app/app_src/application.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;		None
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;		None
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  1    wreg      void 
  5489 ;; Registers used:
  5490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 3F/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5500 ;;Total ram usage:        0 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:   16
  5503 ;; This function calls:
  5504 ;;		_printf
  5505 ;; This function is called by:
  5506 ;;		_executeATCommand
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text12
  5511  008F4A                     __ptext12:
  5512                           	opt callstack 0
  5513  008F4A                     _cmdSetSink:
  5514                           	opt callstack 12
  5515                           
  5516                           ;../app/app_src/application.c: 440:  printf("OK\r\n");
  5517                           
  5518                           ;incstack = 0
  5519  008F4A  0ED6               	movlw	low STR_12
  5520  008F4C  0100               	movlb	0	; () banked
  5521  008F4E  6F75               	movwf	printf@fmt& (0+255),b
  5522  008F50  0EFF               	movlw	high STR_12
  5523  008F52  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5524  008F54  ECC4  F045         	call	_printf	;wreg free
  5525                           
  5526                           ; BSR set to: 0
  5527  008F58  0012               	return		;funcret
  5528  008F5A                     __end_of_cmdSetSink:
  5529                           	opt callstack 0
  5530                           
  5531 ;; *************** function _cmdSetSF *****************
  5532 ;; Defined at:
  5533 ;;		line 780 in file "../app/app_src/application.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;  atCommand       2   87[COMRAM] PTR unsigned char 
  5536 ;;		 -> atCommand(80), 
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;  CHstr           3   33[BANK0 ] unsigned char [3]
  5539 ;;  p2              2   36[BANK0 ] PTR unsigned char 
  5540 ;;		 -> cmdSetSF@CHstr(3), STR_58(2), STR_57(2), cmdSetCADRSSI@CHstr(3), 
  5541 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5542 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5543 ;;  p1              2   31[BANK0 ] PTR unsigned char 
  5544 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  5545 ;;  temp            1   38[BANK0 ] char 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 3F/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5555 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5556 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5558 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;Total ram usage:       10 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:   16
  5562 ;; This function calls:
  5563 ;;		_DATAEE_WriteByte_Platform
  5564 ;;		_initRadio
  5565 ;;		_memcpy
  5566 ;;		_printf
  5567 ;;		_strstr
  5568 ;;		_strtol
  5569 ;; This function is called by:
  5570 ;;		_executeATCommand
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573                           
  5574                           	psect	text13
  5575  006936                     __ptext13:
  5576                           	opt callstack 0
  5577  006936                     _cmdSetSF:
  5578                           	opt callstack 12
  5579                           
  5580                           ;../app/app_src/application.c: 781:  char *p1,*p2;;../app/app_src/application.c: 782:  c
      +                          har CHstr[3];;../app/app_src/application.c: 783:  int8_t temp;;../app/app_src/applicatio
      +                          n.c: 784:  p1 = strstr(atCommand,"=") + 1;
  5581                           
  5582                           ; BSR set to: 0
  5583                           ;incstack = 0
  5584  006936  0060  F160  F00D   	movff	cmdSetSF@atCommand,strstr@h
  5585  00693C  0060  F164  F00E   	movff	cmdSetSF@atCommand+1,strstr@h+1
  5586  006942  0EDE               	movlw	low (STR_21+3)
  5587  006944  6E0F               	movwf	strstr@n^0,c
  5588  006946  0EFF               	movlw	high (STR_21+3)
  5589  006948  6E10               	movwf	(strstr@n+1)^0,c
  5590  00694A  EC72  F02E         	call	_strstr	;wreg free
  5591  00694E  0E01               	movlw	1
  5592  006950  240D               	addwf	?_strstr^0,w,c
  5593  006952  0100               	movlb	0	; () banked
  5594  006954  6F7F               	movwf	cmdSetSF@p1& (0+255),b
  5595  006956  0E00               	movlw	0
  5596  006958  200E               	addwfc	(?_strstr+1)^0,w,c
  5597  00695A  6F80               	movwf	(cmdSetSF@p1+1)& (0+255),b
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;../app/app_src/application.c: 785:  memcpy(CHstr,p1,2);
  5601  00695C  0E81               	movlw	low cmdSetSF@CHstr
  5602  00695E  6E08               	movwf	memcpy@d1^0,c
  5603  006960  6A09               	clrf	(memcpy@d1+1)^0,c
  5604  006962  0060  F1FC  F00A   	movff	cmdSetSF@p1,memcpy@s1
  5605  006968  0060  F200  F00B   	movff	cmdSetSF@p1+1,memcpy@s1+1
  5606  00696E  0E00               	movlw	0
  5607  006970  6E0D               	movwf	(memcpy@n+1)^0,c
  5608  006972  0E02               	movlw	2
  5609  006974  6E0C               	movwf	memcpy@n^0,c
  5610  006976  ECF6  F03A         	call	_memcpy	;wreg free
  5611                           
  5612                           ;../app/app_src/application.c: 786:  temp = (uint8_t)strtol(CHstr,&p2,16);
  5613  00697A  0E81               	movlw	low cmdSetSF@CHstr
  5614  00697C  6E34               	movwf	strtol@s^0,c
  5615  00697E  0E84               	movlw	low cmdSetSF@p2
  5616  006980  6E35               	movwf	strtol@endptr^0,c
  5617  006982  0E00               	movlw	0
  5618  006984  6E37               	movwf	(strtol@base+1)^0,c
  5619  006986  0E10               	movlw	16
  5620  006988  6E36               	movwf	strtol@base^0,c
  5621  00698A  ECF8  F041         	call	_strtol	;wreg free
  5622  00698E  5034               	movf	?_strtol^0,w,c
  5623  006990  0100               	movlb	0	; () banked
  5624  006992  6F86               	movwf	cmdSetSF@temp& (0+255),b
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;../app/app_src/application.c: 787:  if((temp > 12) || (temp < 7)){
  5628  006994  5186               	movf	cmdSetSF@temp& (0+255),w,b
  5629  006996  0A80               	xorlw	128
  5630  006998  0F73               	addlw	-141
  5631  00699A  B0D8               	btfsc	status,0,c
  5632  00699C  D005               	goto	u16230
  5633                           
  5634                           ; BSR set to: 0
  5635  00699E  5186               	movf	cmdSetSF@temp& (0+255),w,b
  5636  0069A0  0A80               	xorlw	128
  5637  0069A2  0F79               	addlw	-135
  5638  0069A4  B0D8               	btfsc	status,0,c
  5639  0069A6  D009               	goto	l412
  5640  0069A8                     u16230:
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;../app/app_src/application.c: 788:   printf("NOT OK:%u\r\n", ILLEGALPARAMETER);
  5644  0069A8  0EC5               	movlw	low STR_3
  5645  0069AA  6F75               	movwf	printf@fmt& (0+255),b
  5646  0069AC  0EFE               	movlw	high STR_3
  5647  0069AE  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5648  0069B0  0E0D               	movlw	13
  5649  0069B2  6F77               	movwf	(?_printf+2)& (0+255),b
  5650  0069B4  ECC4  F045         	call	_printf	;wreg free
  5651                           
  5652                           ;../app/app_src/application.c: 789:  }
  5653  0069B8  0012               	return	
  5654  0069BA                     l412:
  5655                           
  5656                           ; BSR set to: 0
  5657                           ;../app/app_src/application.c: 791:   current_sf = temp;
  5658  0069BA  0060  F218  F0CF   	movff	cmdSetSF@temp,_current_sf
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;../app/app_src/application.c: 792:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1,temp);
  5662  0069C0  0E00               	movlw	0
  5663  0069C2  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5664  0069C4  0E21               	movlw	33
  5665  0069C6  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5666  0069C8  0060  F218  F008   	movff	cmdSetSF@temp,DATAEE_WriteByte_Platform@data
  5667  0069CE  ECF1  F040         	call	_DATAEE_WriteByte_Platform	;wreg free
  5668                           
  5669                           ;../app/app_src/application.c: 793:   initRadio();
  5670  0069D2  ECB5  F020         	call	_initRadio	;wreg free
  5671                           
  5672                           ; BSR set to: 0
  5673                           ;../app/app_src/application.c: 794:   printf("OK\r\n");
  5674  0069D6  0ED6               	movlw	low STR_12
  5675  0069D8  6F75               	movwf	printf@fmt& (0+255),b
  5676  0069DA  0EFF               	movlw	high STR_12
  5677  0069DC  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5678  0069DE  ECC4  F045         	call	_printf	;wreg free
  5679                           
  5680                           ; BSR set to: 0
  5681  0069E2  0012               	return		;funcret
  5682  0069E4                     __end_of_cmdSetSF:
  5683                           	opt callstack 0
  5684                           
  5685 ;; *************** function _cmdSetRFCH *****************
  5686 ;; Defined at:
  5687 ;;		line 603 in file "../app/app_src/application.c"
  5688 ;; Parameters:    Size  Location     Type
  5689 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  5690 ;;		 -> atCommand(80), 
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;  CHstr           3   33[BANK0 ] unsigned char [3]
  5693 ;;  p2              2   36[BANK0 ] PTR unsigned char 
  5694 ;;		 -> cmdSetSF@CHstr(3), STR_58(2), STR_57(2), cmdSetCADRSSI@CHstr(3), 
  5695 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  5696 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  5697 ;;  p1              2   31[BANK0 ] PTR unsigned char 
  5698 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  5699 ;;  temp            1   38[BANK0 ] unsigned char 
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  1    wreg      void 
  5702 ;; Registers used:
  5703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 3F/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5710 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5712 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5713 ;;Total ram usage:       10 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; Hardware stack levels required when called:   16
  5716 ;; This function calls:
  5717 ;;		_DATAEE_WriteByte_Platform
  5718 ;;		_initRadio
  5719 ;;		_memcpy
  5720 ;;		_printf
  5721 ;;		_strstr
  5722 ;;		_strtoul
  5723 ;; This function is called by:
  5724 ;;		_executeATCommand
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text14
  5729  006C8A                     __ptext14:
  5730                           	opt callstack 0
  5731  006C8A                     _cmdSetRFCH:
  5732                           	opt callstack 12
  5733                           
  5734                           ;../app/app_src/application.c: 604:  char *p1,*p2;;../app/app_src/application.c: 605:  c
      +                          har CHstr[3];;../app/app_src/application.c: 606:  uint8_t temp;;../app/app_src/applicati
      +                          on.c: 607:  p1 = strstr(atCommand,"=") + 1;
  5735                           
  5736                           ; BSR set to: 0
  5737                           ;incstack = 0
  5738  006C8A  0E4B               	movlw	low _atCommand
  5739  006C8C  6E0D               	movwf	strstr@h^0,c
  5740  006C8E  0E01               	movlw	high _atCommand
  5741  006C90  6E0E               	movwf	(strstr@h+1)^0,c
  5742  006C92  0EDE               	movlw	low (STR_21+3)
  5743  006C94  6E0F               	movwf	strstr@n^0,c
  5744  006C96  0EFF               	movlw	high (STR_21+3)
  5745  006C98  6E10               	movwf	(strstr@n+1)^0,c
  5746  006C9A  EC72  F02E         	call	_strstr	;wreg free
  5747  006C9E  0E01               	movlw	1
  5748  006CA0  240D               	addwf	?_strstr^0,w,c
  5749  006CA2  0100               	movlb	0	; () banked
  5750  006CA4  6F7F               	movwf	cmdSetRFCH@p1& (0+255),b
  5751  006CA6  0E00               	movlw	0
  5752  006CA8  200E               	addwfc	(?_strstr+1)^0,w,c
  5753  006CAA  6F80               	movwf	(cmdSetRFCH@p1+1)& (0+255),b
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;../app/app_src/application.c: 608:  memcpy(CHstr,p1,2);
  5757  006CAC  0E81               	movlw	low cmdSetRFCH@CHstr
  5758  006CAE  6E08               	movwf	memcpy@d1^0,c
  5759  006CB0  6A09               	clrf	(memcpy@d1+1)^0,c
  5760  006CB2  0060  F1FC  F00A   	movff	cmdSetRFCH@p1,memcpy@s1
  5761  006CB8  0060  F200  F00B   	movff	cmdSetRFCH@p1+1,memcpy@s1+1
  5762  006CBE  0E00               	movlw	0
  5763  006CC0  6E0D               	movwf	(memcpy@n+1)^0,c
  5764  006CC2  0E02               	movlw	2
  5765  006CC4  6E0C               	movwf	memcpy@n^0,c
  5766  006CC6  ECF6  F03A         	call	_memcpy	;wreg free
  5767                           
  5768                           ;../app/app_src/application.c: 609:  temp = (uint8_t)strtoul(CHstr,&p2,16) - 1;
  5769  006CCA  0E81               	movlw	low cmdSetRFCH@CHstr
  5770  006CCC  6E34               	movwf	strtoul@s^0,c
  5771  006CCE  6A35               	clrf	(strtoul@s+1)^0,c
  5772  006CD0  0E84               	movlw	low cmdSetRFCH@p2
  5773  006CD2  6E36               	movwf	strtoul@endptr^0,c
  5774  006CD4  6A37               	clrf	(strtoul@endptr+1)^0,c
  5775  006CD6  0E00               	movlw	0
  5776  006CD8  6E39               	movwf	(strtoul@base+1)^0,c
  5777  006CDA  0E10               	movlw	16
  5778  006CDC  6E38               	movwf	strtoul@base^0,c
  5779  006CDE  EC89  F040         	call	_strtoul	;wreg free
  5780  006CE2  0434               	decf	?_strtoul^0,w,c
  5781  006CE4  0100               	movlb	0	; () banked
  5782  006CE6  6F86               	movwf	cmdSetRFCH@temp& (0+255),b
  5783                           
  5784                           ; BSR set to: 0
  5785                           ;../app/app_src/application.c: 610:  if(temp > sizeof(fhssList)){
  5786  006CE8  0EFC               	movlw	252
  5787  006CEA  6586               	cpfsgt	cmdSetRFCH@temp& (0+255),b
  5788  006CEC  D009               	goto	l362
  5789                           
  5790                           ; BSR set to: 0
  5791                           ;../app/app_src/application.c: 611:   printf("NOT OK:%u\r\n",CHOUTOFBOUNDS);
  5792  006CEE  0EC5               	movlw	low STR_3
  5793  006CF0  6F75               	movwf	printf@fmt& (0+255),b
  5794  006CF2  0EFE               	movlw	high STR_3
  5795  006CF4  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5796  006CF6  0E0A               	movlw	10
  5797  006CF8  6F77               	movwf	(?_printf+2)& (0+255),b
  5798  006CFA  ECC4  F045         	call	_printf	;wreg free
  5799                           
  5800                           ;../app/app_src/application.c: 612:  }
  5801  006CFE  0012               	return	
  5802  006D00                     l362:
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;../app/app_src/application.c: 614:   channel = temp;
  5806  006D00  0060  F218  F0CE   	movff	cmdSetRFCH@temp,_channel
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;../app/app_src/application.c: 615:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1,channel);
  5810  006D06  0E00               	movlw	0
  5811  006D08  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  5812  006D0A  0E1C               	movlw	28
  5813  006D0C  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  5814  006D0E  0060  F338  F008   	movff	_channel,DATAEE_WriteByte_Platform@data
  5815  006D14  ECF1  F040         	call	_DATAEE_WriteByte_Platform	;wreg free
  5816                           
  5817                           ;../app/app_src/application.c: 616:   initRadio();
  5818  006D18  ECB5  F020         	call	_initRadio	;wreg free
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;../app/app_src/application.c: 617:         printf("OK\r\n");
  5822  006D1C  0ED6               	movlw	low STR_12
  5823  006D1E  6F75               	movwf	printf@fmt& (0+255),b
  5824  006D20  0EFF               	movlw	high STR_12
  5825  006D22  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5826  006D24  ECC4  F045         	call	_printf	;wreg free
  5827                           
  5828                           ; BSR set to: 0
  5829  006D28  0012               	return		;funcret
  5830  006D2A                     __end_of_cmdSetRFCH:
  5831                           	opt callstack 0
  5832                           
  5833 ;; *************** function _cmdSetParity *****************
  5834 ;; Defined at:
  5835 ;;		line 715 in file "../app/app_src/application.c"
  5836 ;; Parameters:    Size  Location     Type
  5837 ;;  atCommand       2   87[COMRAM] PTR unsigned char 
  5838 ;;		 -> atCommand(80), 
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;		None
  5841 ;; Return value:  Size  Location     Type
  5842 ;;                  1    wreg      void 
  5843 ;; Registers used:
  5844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5853 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5854 ;;Total ram usage:        2 bytes
  5855 ;; Hardware stack levels used:    1
  5856 ;; Hardware stack levels required when called:   16
  5857 ;; This function calls:
  5858 ;;		_printf
  5859 ;;		_set_parity
  5860 ;;		_strstr
  5861 ;; This function is called by:
  5862 ;;		_executeATCommand
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           	psect	text15
  5867  0070B2                     __ptext15:
  5868                           	opt callstack 0
  5869  0070B2                     _cmdSetParity:
  5870                           	opt callstack 12
  5871                           
  5872                           ;../app/app_src/application.c: 716:     if(strstr(atCommand,"=ODD"))
  5873                           
  5874                           ; BSR set to: 0
  5875                           ;incstack = 0
  5876  0070B2  0060  F160  F00D   	movff	cmdSetParity@atCommand,strstr@h
  5877  0070B8  0060  F164  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  5878  0070BE  0EEA               	movlw	low STR_49
  5879  0070C0  6E0F               	movwf	strstr@n^0,c
  5880  0070C2  0EFF               	movlw	high STR_49
  5881  0070C4  6E10               	movwf	(strstr@n+1)^0,c
  5882  0070C6  EC72  F02E         	call	_strstr	;wreg free
  5883  0070CA  500D               	movf	?_strstr^0,w,c
  5884  0070CC  100E               	iorwf	(?_strstr+1)^0,w,c
  5885  0070CE  B4D8               	btfsc	status,2,c
  5886  0070D0  D004               	goto	l16114
  5887                           
  5888                           ;../app/app_src/application.c: 717:     {;../app/app_src/application.c: 718:         set
      +                          _parity(UART_9BIT_ODD_PARITY);
  5889  0070D2  0E02               	movlw	2
  5890  0070D4  EC94  F03D         	call	_set_parity
  5891                           
  5892                           ;../app/app_src/application.c: 719:     }
  5893  0070D8  0012               	return	
  5894  0070DA                     l16114:
  5895  0070DA  0060  F160  F00D   	movff	cmdSetParity@atCommand,strstr@h
  5896  0070E0  0060  F164  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  5897  0070E6  0EBF               	movlw	low STR_51
  5898  0070E8  6E0F               	movwf	strstr@n^0,c
  5899  0070EA  0EFF               	movlw	high STR_51
  5900  0070EC  6E10               	movwf	(strstr@n+1)^0,c
  5901  0070EE  EC72  F02E         	call	_strstr	;wreg free
  5902  0070F2  500D               	movf	?_strstr^0,w,c
  5903  0070F4  100E               	iorwf	(?_strstr+1)^0,w,c
  5904  0070F6  B4D8               	btfsc	status,2,c
  5905  0070F8  D004               	goto	l16118
  5906                           
  5907                           ;../app/app_src/application.c: 721:     {;../app/app_src/application.c: 722:         set
      +                          _parity(UART_8BIT_NO_PARITY);
  5908  0070FA  0E00               	movlw	0
  5909  0070FC  EC94  F03D         	call	_set_parity
  5910                           
  5911                           ;../app/app_src/application.c: 723:     }
  5912  007100  0012               	return	
  5913  007102                     l16118:
  5914  007102  0060  F160  F00D   	movff	cmdSetParity@atCommand,strstr@h
  5915  007108  0060  F164  F00E   	movff	cmdSetParity@atCommand+1,strstr@h+1
  5916  00710E  0EC5               	movlw	low STR_53
  5917  007110  6E0F               	movwf	strstr@n^0,c
  5918  007112  0EFF               	movlw	high STR_53
  5919  007114  6E10               	movwf	(strstr@n+1)^0,c
  5920  007116  EC72  F02E         	call	_strstr	;wreg free
  5921  00711A  500D               	movf	?_strstr^0,w,c
  5922  00711C  100E               	iorwf	(?_strstr+1)^0,w,c
  5923  00711E  B4D8               	btfsc	status,2,c
  5924  007120  D004               	goto	l16122
  5925                           
  5926                           ;../app/app_src/application.c: 725:     {;../app/app_src/application.c: 726:         set
      +                          _parity(UART_9BIT_EVEN_PARITY);
  5927  007122  0E03               	movlw	3
  5928  007124  EC94  F03D         	call	_set_parity
  5929                           
  5930                           ;../app/app_src/application.c: 727:     }
  5931  007128  0012               	return	
  5932  00712A                     l16122:
  5933                           
  5934                           ;../app/app_src/application.c: 729:     {;../app/app_src/application.c: 730:         pri
      +                          ntf("NOT OK:%u\r\n",ILLEGALPARAMETER);
  5935  00712A  0EC5               	movlw	low STR_3
  5936  00712C  0100               	movlb	0	; () banked
  5937  00712E  6F75               	movwf	printf@fmt& (0+255),b
  5938  007130  0EFE               	movlw	high STR_3
  5939  007132  6F76               	movwf	(printf@fmt+1)& (0+255),b
  5940  007134  0E0D               	movlw	13
  5941  007136  6F77               	movwf	(?_printf+2)& (0+255),b
  5942  007138  ECC4  F045         	call	_printf	;wreg free
  5943  00713C  0012               	return		;funcret
  5944  00713E                     __end_of_cmdSetParity:
  5945                           	opt callstack 0
  5946                           
  5947 ;; *************** function _cmdSetNaddr *****************
  5948 ;; Defined at:
  5949 ;;		line 358 in file "../app/app_src/application.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  5952 ;;		 -> atCommand(80), 
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;  p1              2   33[BANK0 ] PTR unsigned char 
  5955 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  5956 ;;  p2              2   31[BANK0 ] PTR unsigned char 
  5957 ;;  tempaddr        1   35[BANK0 ] unsigned char 
  5958 ;; Return value:  Size  Location     Type
  5959 ;;                  1    wreg      void 
  5960 ;; Registers used:
  5961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5962 ;; Tracked objects:
  5963 ;;		On entry : 0/0
  5964 ;;		On exit  : 3F/0
  5965 ;;		Unchanged: 0/0
  5966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5968 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5970 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;Total ram usage:        7 bytes
  5972 ;; Hardware stack levels used:    1
  5973 ;; Hardware stack levels required when called:   16
  5974 ;; This function calls:
  5975 ;;		_DATAEE_WriteByte_Platform
  5976 ;;		_initRadio
  5977 ;;		_printf
  5978 ;;		_setSyncWord
  5979 ;;		_strstr
  5980 ;;		_strtoul
  5981 ;; This function is called by:
  5982 ;;		_executeATCommand
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           	psect	text16
  5987  007570                     __ptext16:
  5988                           	opt callstack 0
  5989  007570                     _cmdSetNaddr:
  5990                           	opt callstack 12
  5991                           
  5992                           ;../app/app_src/application.c: 359:  uint8_t tempaddr;;../app/app_src/application.c: 360
      +                          :  char *p1,*p2;;../app/app_src/application.c: 361:  p1 = strstr(atCommand,"=") + 1;
  5993                           
  5994                           ;incstack = 0
  5995  007570  0E4B               	movlw	low _atCommand
  5996  007572  6E0D               	movwf	strstr@h^0,c
  5997  007574  0E01               	movlw	high _atCommand
  5998  007576  6E0E               	movwf	(strstr@h+1)^0,c
  5999  007578  0EDE               	movlw	low (STR_21+3)
  6000  00757A  6E0F               	movwf	strstr@n^0,c
  6001  00757C  0EFF               	movlw	high (STR_21+3)
  6002  00757E  6E10               	movwf	(strstr@n+1)^0,c
  6003  007580  EC72  F02E         	call	_strstr	;wreg free
  6004  007584  0E01               	movlw	1
  6005  007586  240D               	addwf	?_strstr^0,w,c
  6006  007588  0100               	movlb	0	; () banked
  6007  00758A  6F81               	movwf	cmdSetNaddr@p1& (0+255),b
  6008  00758C  0E00               	movlw	0
  6009  00758E  200E               	addwfc	(?_strstr+1)^0,w,c
  6010  007590  6F82               	movwf	(cmdSetNaddr@p1+1)& (0+255),b
  6011                           
  6012                           ; BSR set to: 0
  6013                           ;../app/app_src/application.c: 363:  tempaddr = strtoul(p1,p2,16);
  6014  007592  0060  F204  F034   	movff	cmdSetNaddr@p1,strtoul@s
  6015  007598  0060  F208  F035   	movff	cmdSetNaddr@p1+1,strtoul@s+1
  6016  00759E  0060  F1FC  F036   	movff	cmdSetNaddr@p2,strtoul@endptr
  6017  0075A4  0060  F200  F037   	movff	cmdSetNaddr@p2+1,strtoul@endptr+1
  6018  0075AA  0E00               	movlw	0
  6019  0075AC  6E39               	movwf	(strtoul@base+1)^0,c
  6020  0075AE  0E10               	movlw	16
  6021  0075B0  6E38               	movwf	strtoul@base^0,c
  6022  0075B2  EC89  F040         	call	_strtoul	;wreg free
  6023  0075B6  5034               	movf	?_strtoul^0,w,c
  6024  0075B8  0100               	movlb	0	; () banked
  6025  0075BA  6F83               	movwf	cmdSetNaddr@tempaddr& (0+255),b
  6026                           
  6027                           ; BSR set to: 0
  6028                           ;../app/app_src/application.c: 364:  currentNetID = tempaddr;
  6029  0075BC  0060  F20C  F0F8   	movff	cmdSetNaddr@tempaddr,_currentNetID
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;../app/app_src/application.c: 365:  setSyncWord(currentNetID);
  6033  0075C2  51F8               	movf	_currentNetID& (0+255),w,b
  6034  0075C4  ECAD  F047         	call	_setSyncWord
  6035                           
  6036                           ;../app/app_src/application.c: 367:  DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1,current
      +                          NetID);
  6037  0075C8  0E00               	movlw	0
  6038  0075CA  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  6039  0075CC  0E19               	movlw	25
  6040  0075CE  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  6041  0075D0  0060  F3E0  F008   	movff	_currentNetID,DATAEE_WriteByte_Platform@data
  6042  0075D6  ECF1  F040         	call	_DATAEE_WriteByte_Platform	;wreg free
  6043                           
  6044                           ;../app/app_src/application.c: 368:     initRadio();
  6045  0075DA  ECB5  F020         	call	_initRadio	;wreg free
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;../app/app_src/application.c: 369:  printf("OK\r\n");
  6049  0075DE  0ED6               	movlw	low STR_12
  6050  0075E0  6F75               	movwf	printf@fmt& (0+255),b
  6051  0075E2  0EFF               	movlw	high STR_12
  6052  0075E4  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6053  0075E6  ECC4  F045         	call	_printf	;wreg free
  6054                           
  6055                           ; BSR set to: 0
  6056  0075EA  0012               	return		;funcret
  6057  0075EC                     __end_of_cmdSetNaddr:
  6058                           	opt callstack 0
  6059                           
  6060 ;; *************** function _setSyncWord *****************
  6061 ;; Defined at:
  6062 ;;		line 329 in file "../phy/sx1216/phy_src/phy.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  sw              1    wreg     unsigned char 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  sw              1   16[COMRAM] unsigned char 
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  1    wreg      void 
  6069 ;; Registers used:
  6070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6071 ;; Tracked objects:
  6072 ;;		On entry : 3F/0
  6073 ;;		On exit  : 3F/3D
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6079 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6080 ;;Total ram usage:        1 bytes
  6081 ;; Hardware stack levels used:    1
  6082 ;; Hardware stack levels required when called:   11
  6083 ;; This function calls:
  6084 ;;		_SX1276Write
  6085 ;; This function is called by:
  6086 ;;		_cmdSetNaddr
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           	psect	text17
  6091  008F5A                     __ptext17:
  6092                           	opt callstack 0
  6093  008F5A                     _setSyncWord:
  6094                           	opt callstack 16
  6095                           
  6096                           ; BSR set to: 0
  6097                           ;incstack = 0
  6098                           ;setSyncWord@sw stored from wreg
  6099  008F5A  6E11               	movwf	setSyncWord@sw^0,c
  6100                           
  6101                           ;../phy/sx1216/phy_src/phy.c: 329: void setSyncWord(uint8_t sw);../phy/sx1216/phy_src/ph
      +                          y.c: 330: {;../phy/sx1216/phy_src/phy.c: 331:   SX1276Write(0x39, sw);
  6102  008F5C  0060  F044  F00F   	movff	setSyncWord@sw,SX1276Write@data
  6103  008F62  0E39               	movlw	57
  6104  008F64  EC94  F047         	call	_SX1276Write
  6105                           
  6106                           ; BSR set to: 61
  6107  008F68  0012               	return		;funcret
  6108  008F6A                     __end_of_setSyncWord:
  6109                           	opt callstack 0
  6110                           
  6111 ;; *************** function _cmdSetCADRSSI *****************
  6112 ;; Defined at:
  6113 ;;		line 679 in file "../app/app_src/application.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;  atCommand       2   87[COMRAM] PTR unsigned char 
  6116 ;;		 -> atCommand(80), 
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;  CHstr           3   33[BANK0 ] unsigned char [3]
  6119 ;;  p2              2   36[BANK0 ] PTR unsigned char 
  6120 ;;		 -> cmdSetSF@CHstr(3), STR_58(2), STR_57(2), cmdSetCADRSSI@CHstr(3), 
  6121 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  6122 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  6123 ;;  p1              2   31[BANK0 ] PTR unsigned char 
  6124 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  6125 ;;  temp            1   38[BANK0 ] char 
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  1    wreg      void 
  6128 ;; Registers used:
  6129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 3F/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6135 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6138 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6139 ;;Total ram usage:       10 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:   16
  6142 ;; This function calls:
  6143 ;;		_DATAEE_WriteByte_Platform
  6144 ;;		_initRadio
  6145 ;;		_memcpy
  6146 ;;		_printf
  6147 ;;		_strstr
  6148 ;;		_strtol
  6149 ;; This function is called by:
  6150 ;;		_executeATCommand
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           	psect	text18
  6155  0069E4                     __ptext18:
  6156                           	opt callstack 0
  6157  0069E4                     _cmdSetCADRSSI:
  6158                           	opt callstack 12
  6159                           
  6160                           ;../app/app_src/application.c: 680:  char *p1,*p2;;../app/app_src/application.c: 681:  c
      +                          har CHstr[3];;../app/app_src/application.c: 682:  int8_t temp;;../app/app_src/applicatio
      +                          n.c: 683:  p1 = strstr(atCommand,"=") + 1;
  6161                           
  6162                           ; BSR set to: 61
  6163                           ;incstack = 0
  6164  0069E4  0060  F160  F00D   	movff	cmdSetCADRSSI@atCommand,strstr@h
  6165  0069EA  0060  F164  F00E   	movff	cmdSetCADRSSI@atCommand+1,strstr@h+1
  6166  0069F0  0EDE               	movlw	low (STR_21+3)
  6167  0069F2  6E0F               	movwf	strstr@n^0,c
  6168  0069F4  0EFF               	movlw	high (STR_21+3)
  6169  0069F6  6E10               	movwf	(strstr@n+1)^0,c
  6170  0069F8  EC72  F02E         	call	_strstr	;wreg free
  6171  0069FC  0E01               	movlw	1
  6172  0069FE  240D               	addwf	?_strstr^0,w,c
  6173  006A00  0100               	movlb	0	; () banked
  6174  006A02  6F7F               	movwf	cmdSetCADRSSI@p1& (0+255),b
  6175  006A04  0E00               	movlw	0
  6176  006A06  200E               	addwfc	(?_strstr+1)^0,w,c
  6177  006A08  6F80               	movwf	(cmdSetCADRSSI@p1+1)& (0+255),b
  6178                           
  6179                           ; BSR set to: 0
  6180                           ;../app/app_src/application.c: 684:  memcpy(CHstr,p1,3);
  6181  006A0A  0E81               	movlw	low cmdSetCADRSSI@CHstr
  6182  006A0C  6E08               	movwf	memcpy@d1^0,c
  6183  006A0E  6A09               	clrf	(memcpy@d1+1)^0,c
  6184  006A10  0060  F1FC  F00A   	movff	cmdSetCADRSSI@p1,memcpy@s1
  6185  006A16  0060  F200  F00B   	movff	cmdSetCADRSSI@p1+1,memcpy@s1+1
  6186  006A1C  0E00               	movlw	0
  6187  006A1E  6E0D               	movwf	(memcpy@n+1)^0,c
  6188  006A20  0E03               	movlw	3
  6189  006A22  6E0C               	movwf	memcpy@n^0,c
  6190  006A24  ECF6  F03A         	call	_memcpy	;wreg free
  6191                           
  6192                           ;../app/app_src/application.c: 685:  temp = (uint8_t)strtol(CHstr,&p2,10);
  6193  006A28  0E81               	movlw	low cmdSetCADRSSI@CHstr
  6194  006A2A  6E34               	movwf	strtol@s^0,c
  6195  006A2C  0E84               	movlw	low cmdSetCADRSSI@p2
  6196  006A2E  6E35               	movwf	strtol@endptr^0,c
  6197  006A30  0E00               	movlw	0
  6198  006A32  6E37               	movwf	(strtol@base+1)^0,c
  6199  006A34  0E0A               	movlw	10
  6200  006A36  6E36               	movwf	strtol@base^0,c
  6201  006A38  ECF8  F041         	call	_strtol	;wreg free
  6202  006A3C  5034               	movf	?_strtol^0,w,c
  6203  006A3E  0100               	movlb	0	; () banked
  6204  006A40  6F86               	movwf	cmdSetCADRSSI@temp& (0+255),b
  6205                           
  6206                           ; BSR set to: 0
  6207                           ;../app/app_src/application.c: 686:  if((temp > 0) || (temp < -120)){
  6208  006A42  5186               	movf	cmdSetCADRSSI@temp& (0+255),w,b
  6209  006A44  0A80               	xorlw	128
  6210  006A46  0F7F               	addlw	-129
  6211  006A48  B0D8               	btfsc	status,0,c
  6212  006A4A  D005               	goto	u16180
  6213                           
  6214                           ; BSR set to: 0
  6215  006A4C  5186               	movf	cmdSetCADRSSI@temp& (0+255),w,b
  6216  006A4E  0A80               	xorlw	128
  6217  006A50  0FF8               	addlw	248
  6218  006A52  B0D8               	btfsc	status,0,c
  6219  006A54  D009               	goto	l381
  6220  006A56                     u16180:
  6221                           
  6222                           ; BSR set to: 0
  6223                           ;../app/app_src/application.c: 687:   printf("NOT OK:%u\r\n",TXOUTOFBOUNDS);
  6224  006A56  0EC5               	movlw	low STR_3
  6225  006A58  6F75               	movwf	printf@fmt& (0+255),b
  6226  006A5A  0EFE               	movlw	high STR_3
  6227  006A5C  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6228  006A5E  0E0B               	movlw	11
  6229  006A60  6F77               	movwf	(?_printf+2)& (0+255),b
  6230  006A62  ECC4  F045         	call	_printf	;wreg free
  6231                           
  6232                           ;../app/app_src/application.c: 688:  }
  6233  006A66  0012               	return	
  6234  006A68                     l381:
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;../app/app_src/application.c: 690:   RSSITarget = temp;
  6238  006A68  0060  F218  F0F7   	movff	cmdSetCADRSSI@temp,_RSSITarget
  6239                           
  6240                           ; BSR set to: 0
  6241                           ;../app/app_src/application.c: 691:   DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1,RSSITarget);
  6242  006A6E  0E00               	movlw	0
  6243  006A70  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  6244  006A72  0E1E               	movlw	30
  6245  006A74  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  6246  006A76  0060  F3DC  F008   	movff	_RSSITarget,DATAEE_WriteByte_Platform@data
  6247  006A7C  ECF1  F040         	call	_DATAEE_WriteByte_Platform	;wreg free
  6248                           
  6249                           ;../app/app_src/application.c: 692:   initRadio();
  6250  006A80  ECB5  F020         	call	_initRadio	;wreg free
  6251                           
  6252                           ; BSR set to: 0
  6253                           ;../app/app_src/application.c: 693:   printf("OK\r\n");
  6254  006A84  0ED6               	movlw	low STR_12
  6255  006A86  6F75               	movwf	printf@fmt& (0+255),b
  6256  006A88  0EFF               	movlw	high STR_12
  6257  006A8A  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6258  006A8C  ECC4  F045         	call	_printf	;wreg free
  6259                           
  6260                           ; BSR set to: 0
  6261  006A90  0012               	return		;funcret
  6262  006A92                     __end_of_cmdSetCADRSSI:
  6263                           	opt callstack 0
  6264                           
  6265 ;; *************** function _strtol *****************
  6266 ;; Defined at:
  6267 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtol.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;  s               1   51[COMRAM] PTR const unsigned char 
  6270 ;;		 -> cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), 
  6271 ;;  endptr          1   52[COMRAM] PTR PTR unsigned char 
  6272 ;;		 -> cmdSetSF@p2(2), cmdSetCADRSSI@p2(2), 
  6273 ;;  base            2   53[COMRAM] int 
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;		None
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  4   51[COMRAM] long 
  6278 ;; Registers used:
  6279 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6285 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6288 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;Total ram usage:        4 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; Hardware stack levels required when called:   10
  6292 ;; This function calls:
  6293 ;;		___strtoxl
  6294 ;; This function is called by:
  6295 ;;		_cmdSetCADRSSI
  6296 ;;		_cmdSetSF
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           	psect	text19
  6301  0083F0                     __ptext19:
  6302                           	opt callstack 0
  6303  0083F0                     _strtol:
  6304                           	opt callstack 17
  6305                           
  6306                           ; BSR set to: 0
  6307                           ;incstack = 0
  6308  0083F0  0060  F0D0  F010   	movff	strtol@s,___strtoxl@s
  6309  0083F6  6A11               	clrf	(___strtoxl@s+1)^0,c
  6310  0083F8  0060  F0D4  F012   	movff	strtol@endptr,___strtoxl@endptr
  6311  0083FE  6A13               	clrf	(___strtoxl@endptr+1)^0,c
  6312  008400  0060  F0D8  F014   	movff	strtol@base,___strtoxl@base
  6313  008406  0060  F0DC  F015   	movff	strtol@base+1,___strtoxl@base+1
  6314  00840C  0E01               	movlw	1
  6315  00840E  6E16               	movwf	___strtoxl@is_signed^0,c
  6316  008410  EC5D  F005         	call	___strtoxl	;wreg free
  6317  008414  0060  F040  F034   	movff	?___strtoxl,?_strtol
  6318  00841A  0060  F044  F035   	movff	?___strtoxl+1,?_strtol+1
  6319  008420  0060  F048  F036   	movff	?___strtoxl+2,?_strtol+2
  6320  008426  0060  F04C  F037   	movff	?___strtoxl+3,?_strtol+3
  6321  00842C  0012               	return		;funcret
  6322  00842E                     __end_of_strtol:
  6323                           	opt callstack 0
  6324                           
  6325 ;; *************** function _cmdSetBaud *****************
  6326 ;; Defined at:
  6327 ;;		line 754 in file "../app/app_src/application.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  atCommand       2   57[COMRAM] PTR unsigned char 
  6330 ;;		 -> atCommand(80), 
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;  ptr             2   60[COMRAM] PTR unsigned char 
  6333 ;;		 -> atCommand(80), NULL(0), 
  6334 ;;  tempbaud        1   59[COMRAM] unsigned char 
  6335 ;; Return value:  Size  Location     Type
  6336 ;;                  1    wreg      void 
  6337 ;; Registers used:
  6338 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6339 ;; Tracked objects:
  6340 ;;		On entry : 0/0
  6341 ;;		On exit  : 0/0
  6342 ;;		Unchanged: 0/0
  6343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6345 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6347 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6348 ;;Total ram usage:        5 bytes
  6349 ;; Hardware stack levels used:    1
  6350 ;; Hardware stack levels required when called:   11
  6351 ;; This function calls:
  6352 ;;		_strtok
  6353 ;;		_strtoul
  6354 ;; This function is called by:
  6355 ;;		_executeATCommand
  6356 ;; This function uses a non-reentrant model
  6357 ;;
  6358                           
  6359                           	psect	text20
  6360  0076CC                     __ptext20:
  6361                           	opt callstack 0
  6362  0076CC                     _cmdSetBaud:
  6363                           	opt callstack 17
  6364                           
  6365                           ;../app/app_src/application.c: 754: static void cmdSetBaud(char* atCommand);../app/app_s
      +                          rc/application.c: 755: {;../app/app_src/application.c: 756:     uint8_t tempbaud;;../app
      +                          /app_src/application.c: 757:     char *ptr;;../app/app_src/application.c: 758:     ptr =
      +                           strtok(atCommand,"=");
  6366                           
  6367                           ;incstack = 0
  6368  0076CC  0060  F0E8  F00F   	movff	cmdSetBaud@atCommand,strtok@s
  6369  0076D2  0060  F0EC  F010   	movff	cmdSetBaud@atCommand+1,strtok@s+1
  6370  0076D8  0EDE               	movlw	low (STR_21+3)
  6371  0076DA  6E11               	movwf	strtok@sep^0,c
  6372  0076DC  0EFF               	movlw	high (STR_21+3)
  6373  0076DE  6E12               	movwf	(strtok@sep+1)^0,c
  6374  0076E0  EC04  F02E         	call	_strtok	;wreg free
  6375  0076E4  0060  F03C  F03D   	movff	?_strtok,cmdSetBaud@ptr
  6376  0076EA  0060  F040  F03E   	movff	?_strtok+1,cmdSetBaud@ptr+1
  6377                           
  6378                           ;../app/app_src/application.c: 759:     ptr = strtok(((void*)0),"\r");
  6379  0076F0  0E00               	movlw	0
  6380  0076F2  6E0F               	movwf	strtok@s^0,c
  6381  0076F4  0E00               	movlw	0
  6382  0076F6  6E10               	movwf	(strtok@s+1)^0,c
  6383  0076F8  0EFC               	movlw	low STR_58
  6384  0076FA  6E11               	movwf	strtok@sep^0,c
  6385  0076FC  0EFF               	movlw	high STR_58
  6386  0076FE  6E12               	movwf	(strtok@sep+1)^0,c
  6387  007700  EC04  F02E         	call	_strtok	;wreg free
  6388  007704  0060  F03C  F03D   	movff	?_strtok,cmdSetBaud@ptr
  6389  00770A  0060  F040  F03E   	movff	?_strtok+1,cmdSetBaud@ptr+1
  6390                           
  6391                           ;../app/app_src/application.c: 760:     tempbaud = (uint8_t)strtoul(ptr,((void*)0),10);
  6392  007710  0060  F0F4  F034   	movff	cmdSetBaud@ptr,strtoul@s
  6393  007716  0060  F0F8  F035   	movff	cmdSetBaud@ptr+1,strtoul@s+1
  6394  00771C  0E00               	movlw	0
  6395  00771E  6E36               	movwf	strtoul@endptr^0,c
  6396  007720  0E00               	movlw	0
  6397  007722  6E37               	movwf	(strtoul@endptr+1)^0,c
  6398  007724  0E00               	movlw	0
  6399  007726  6E39               	movwf	(strtoul@base+1)^0,c
  6400  007728  0E0A               	movlw	10
  6401  00772A  6E38               	movwf	strtoul@base^0,c
  6402  00772C  EC89  F040         	call	_strtoul	;wreg free
  6403  007730  5034               	movf	?_strtoul^0,w,c
  6404  007732  6E3C               	movwf	cmdSetBaud@tempbaud^0,c
  6405                           
  6406                           ;../app/app_src/application.c: 761:     tempbaud++;
  6407  007734  2A3C               	incf	cmdSetBaud@tempbaud^0,f,c
  6408  007736  0012               	return		;funcret
  6409  007738                     __end_of_cmdSetBaud:
  6410                           	opt callstack 0
  6411                           
  6412 ;; *************** function _strtok *****************
  6413 ;; Defined at:
  6414 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtok.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;  s               2   14[COMRAM] PTR unsigned char 
  6417 ;;		 -> atCommand(80), NULL(0), 
  6418 ;;  sep             2   16[COMRAM] PTR const unsigned char 
  6419 ;;		 -> STR_58(2), STR_57(2), 
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;		None
  6422 ;; Return value:  Size  Location     Type
  6423 ;;                  2   14[COMRAM] PTR unsigned char 
  6424 ;; Registers used:
  6425 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6426 ;; Tracked objects:
  6427 ;;		On entry : 0/0
  6428 ;;		On exit  : 0/0
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6431 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6434 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6435 ;;Total ram usage:        4 bytes
  6436 ;; Hardware stack levels used:    1
  6437 ;; Hardware stack levels required when called:    9
  6438 ;; This function calls:
  6439 ;;		_strcspn
  6440 ;;		_strspn
  6441 ;; This function is called by:
  6442 ;;		_cmdSetBaud
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446                           	psect	text21
  6447  005C08                     __ptext21:
  6448                           	opt callstack 0
  6449  005C08                     _strtok:
  6450                           	opt callstack 18
  6451                           
  6452                           ;incstack = 0
  6453  005C08  500F               	movf	strtok@s^0,w,c
  6454  005C0A  1010               	iorwf	(strtok@s+1)^0,w,c
  6455  005C0C  A4D8               	btfss	status,2,c
  6456  005C0E  D00F               	goto	l15486
  6457  005C10  0060  F2C4  F00F   	movff	strtok@p,strtok@s
  6458  005C16  0060  F2C8  F010   	movff	strtok@p+1,strtok@s+1
  6459  005C1C  500F               	movf	strtok@s^0,w,c
  6460  005C1E  1010               	iorwf	(strtok@s+1)^0,w,c
  6461  005C20  A4D8               	btfss	status,2,c
  6462  005C22  D005               	goto	l15486
  6463  005C24  0E00               	movlw	0
  6464  005C26  6E0F               	movwf	?_strtok^0,c
  6465  005C28  0E00               	movlw	0
  6466  005C2A  6E10               	movwf	(?_strtok+1)^0,c
  6467  005C2C  0012               	return	
  6468  005C2E                     l15486:
  6469  005C2E  0060  F03C  F008   	movff	strtok@s,strspn@s
  6470  005C34  0060  F040  F009   	movff	strtok@s+1,strspn@s+1
  6471  005C3A  0060  F044  F00A   	movff	strtok@sep,strspn@c
  6472  005C40  0060  F048  F00B   	movff	strtok@sep+1,strspn@c+1
  6473  005C46  ECD4  F03C         	call	_strspn	;wreg free
  6474  005C4A  5008               	movf	?_strspn^0,w,c
  6475  005C4C  260F               	addwf	strtok@s^0,f,c
  6476  005C4E  5009               	movf	(?_strspn+1)^0,w,c
  6477  005C50  2210               	addwfc	(strtok@s+1)^0,f,c
  6478  005C52  0060  F03F  FFD9   	movff	strtok@s,fsr2l
  6479  005C58  0060  F043  FFDA   	movff	strtok@s+1,fsr2h
  6480  005C5E  50DF               	movf	indf2,w,c
  6481  005C60  A4D8               	btfss	status,2,c
  6482  005C62  D00C               	goto	l15494
  6483  005C64  0E00               	movlw	0
  6484  005C66  0100               	movlb	0	; () banked
  6485  005C68  6FB1               	movwf	strtok@p& (0+255),b
  6486  005C6A  0E00               	movlw	0
  6487  005C6C  6FB2               	movwf	(strtok@p+1)& (0+255),b
  6488  005C6E  0060  F2C4  F00F   	movff	strtok@p,?_strtok
  6489  005C74  0060  F2C8  F010   	movff	strtok@p+1,?_strtok+1
  6490  005C7A  0012               	return	
  6491  005C7C                     l15494:
  6492  005C7C  0060  F03C  F008   	movff	strtok@s,strcspn@s
  6493  005C82  0060  F040  F009   	movff	strtok@s+1,strcspn@s+1
  6494  005C88  0060  F044  F00A   	movff	strtok@sep,strcspn@c
  6495  005C8E  0060  F048  F00B   	movff	strtok@sep+1,strcspn@c+1
  6496  005C94  EC04  F03D         	call	_strcspn	;wreg free
  6497  005C98  5008               	movf	?_strcspn^0,w,c
  6498  005C9A  240F               	addwf	strtok@s^0,w,c
  6499  005C9C  0100               	movlb	0	; () banked
  6500  005C9E  6FB1               	movwf	strtok@p& (0+255),b
  6501  005CA0  5009               	movf	(?_strcspn+1)^0,w,c
  6502  005CA2  2010               	addwfc	(strtok@s+1)^0,w,c
  6503  005CA4  6FB2               	movwf	(strtok@p+1)& (0+255),b
  6504                           
  6505                           ; BSR set to: 0
  6506  005CA6  0060  F2C7  FFD9   	movff	strtok@p,fsr2l
  6507  005CAC  0060  F2CB  FFDA   	movff	strtok@p+1,fsr2h
  6508  005CB2  50DF               	movf	indf2,w,c
  6509  005CB4  B4D8               	btfsc	status,2,c
  6510  005CB6  D00B               	goto	l15502
  6511                           
  6512                           ; BSR set to: 0
  6513  005CB8  0060  F2C7  FFD9   	movff	strtok@p,fsr2l
  6514  005CBE  0060  F2CB  FFDA   	movff	strtok@p+1,fsr2h
  6515  005CC4  0E00               	movlw	0
  6516  005CC6  6EDF               	movwf	indf2,c
  6517                           
  6518                           ; BSR set to: 0
  6519  005CC8  4BB1               	infsnz	strtok@p& (0+255),f,b
  6520  005CCA  2BB2               	incf	(strtok@p+1)& (0+255),f,b
  6521  005CCC  D004               	goto	l4052
  6522  005CCE                     l15502:
  6523                           
  6524                           ; BSR set to: 0
  6525  005CCE  0E00               	movlw	0
  6526  005CD0  6FB1               	movwf	strtok@p& (0+255),b
  6527  005CD2  0E00               	movlw	0
  6528  005CD4  6FB2               	movwf	(strtok@p+1)& (0+255),b
  6529  005CD6                     l4052:
  6530                           
  6531                           ; BSR set to: 0
  6532  005CD6  0060  F03C  F00F   	movff	strtok@s,?_strtok
  6533  005CDC  0060  F040  F010   	movff	strtok@s+1,?_strtok+1
  6534  005CE2  0012               	return		;funcret
  6535  005CE4                     __end_of_strtok:
  6536                           	opt callstack 0
  6537                           
  6538 ;; *************** function _strspn *****************
  6539 ;; Defined at:
  6540 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strspn.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6543 ;;		 -> atCommand(80), NULL(0), 
  6544 ;;  c               2    9[COMRAM] PTR const unsigned char 
  6545 ;;		 -> STR_58(2), STR_57(2), 
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;  i               2   12[COMRAM] unsigned int 
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  2    7[COMRAM] unsigned int 
  6550 ;; Registers used:
  6551 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6557 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6560 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6561 ;;Total ram usage:        7 bytes
  6562 ;; Hardware stack levels used:    1
  6563 ;; Hardware stack levels required when called:    8
  6564 ;; This function calls:
  6565 ;;		_strchr
  6566 ;; This function is called by:
  6567 ;;		_strtok
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571                           	psect	text22
  6572  0079A8                     __ptext22:
  6573                           	opt callstack 0
  6574  0079A8                     _strspn:
  6575                           	opt callstack 18
  6576                           
  6577                           ;incstack = 0
  6578  0079A8  0E00               	movlw	0
  6579  0079AA  6E0E               	movwf	(strspn@i+1)^0,c
  6580  0079AC  0E00               	movlw	0
  6581  0079AE  6E0D               	movwf	strspn@i^0,c
  6582  0079B0  D004               	goto	l15182
  6583  0079B2                     l15180:
  6584  0079B2  4A08               	infsnz	strspn@s^0,f,c
  6585  0079B4  2A09               	incf	(strspn@s+1)^0,f,c
  6586  0079B6  4A0D               	infsnz	strspn@i^0,f,c
  6587  0079B8  2A0E               	incf	(strspn@i+1)^0,f,c
  6588  0079BA                     l15182:
  6589  0079BA  0060  F023  FFD9   	movff	strspn@s,fsr2l
  6590  0079C0  0060  F027  FFDA   	movff	strspn@s+1,fsr2h
  6591  0079C6  50DF               	movf	indf2,w,c
  6592  0079C8  B4D8               	btfsc	status,2,c
  6593  0079CA  D017               	goto	u14840
  6594  0079CC  0060  F028  F002   	movff	strspn@c,strchr@s
  6595  0079D2  0060  F02C  F003   	movff	strspn@c+1,strchr@s+1
  6596  0079D8  0060  F023  FFD9   	movff	strspn@s,fsr2l
  6597  0079DE  0060  F027  FFDA   	movff	strspn@s+1,fsr2h
  6598  0079E4  50DF               	movf	indf2,w,c
  6599  0079E6  6E0C               	movwf	??_strspn^0,c
  6600  0079E8  500C               	movf	??_strspn^0,w,c
  6601  0079EA  6E04               	movwf	strchr@c^0,c
  6602  0079EC  6A05               	clrf	(strchr@c+1)^0,c
  6603  0079EE  ECB3  F039         	call	_strchr	;wreg free
  6604  0079F2  5002               	movf	?_strchr^0,w,c
  6605  0079F4  1003               	iorwf	(?_strchr+1)^0,w,c
  6606  0079F6  A4D8               	btfss	status,2,c
  6607  0079F8  D7DC               	goto	l15180
  6608  0079FA                     u14840:
  6609  0079FA  0060  F034  F008   	movff	strspn@i,?_strspn
  6610  007A00  0060  F038  F009   	movff	strspn@i+1,?_strspn+1
  6611  007A06  0012               	return		;funcret
  6612  007A08                     __end_of_strspn:
  6613                           	opt callstack 0
  6614                           
  6615 ;; *************** function _strcspn *****************
  6616 ;; Defined at:
  6617 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcspn.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6620 ;;		 -> atCommand(80), NULL(0), 
  6621 ;;  c               2    9[COMRAM] PTR const unsigned char 
  6622 ;;		 -> STR_58(2), STR_57(2), 
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;  i               2   12[COMRAM] unsigned int 
  6625 ;; Return value:  Size  Location     Type
  6626 ;;                  2    7[COMRAM] unsigned int 
  6627 ;; Registers used:
  6628 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6629 ;; Tracked objects:
  6630 ;;		On entry : 0/0
  6631 ;;		On exit  : 0/0
  6632 ;;		Unchanged: 0/0
  6633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6634 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6636 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6637 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6638 ;;Total ram usage:        7 bytes
  6639 ;; Hardware stack levels used:    1
  6640 ;; Hardware stack levels required when called:    8
  6641 ;; This function calls:
  6642 ;;		_strchr
  6643 ;; This function is called by:
  6644 ;;		_strtok
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648                           	psect	text23
  6649  007A08                     __ptext23:
  6650                           	opt callstack 0
  6651  007A08                     _strcspn:
  6652                           	opt callstack 18
  6653                           
  6654                           ;incstack = 0
  6655  007A08  0E00               	movlw	0
  6656  007A0A  6E0E               	movwf	(strcspn@i+1)^0,c
  6657  007A0C  0E00               	movlw	0
  6658  007A0E  6E0D               	movwf	strcspn@i^0,c
  6659  007A10  D004               	goto	l15190
  6660  007A12                     l15188:
  6661  007A12  4A08               	infsnz	strcspn@s^0,f,c
  6662  007A14  2A09               	incf	(strcspn@s+1)^0,f,c
  6663  007A16  4A0D               	infsnz	strcspn@i^0,f,c
  6664  007A18  2A0E               	incf	(strcspn@i+1)^0,f,c
  6665  007A1A                     l15190:
  6666  007A1A  0060  F023  FFD9   	movff	strcspn@s,fsr2l
  6667  007A20  0060  F027  FFDA   	movff	strcspn@s+1,fsr2h
  6668  007A26  50DF               	movf	indf2,w,c
  6669  007A28  B4D8               	btfsc	status,2,c
  6670  007A2A  D017               	goto	u14860
  6671  007A2C  0060  F028  F002   	movff	strcspn@c,strchr@s
  6672  007A32  0060  F02C  F003   	movff	strcspn@c+1,strchr@s+1
  6673  007A38  0060  F023  FFD9   	movff	strcspn@s,fsr2l
  6674  007A3E  0060  F027  FFDA   	movff	strcspn@s+1,fsr2h
  6675  007A44  50DF               	movf	indf2,w,c
  6676  007A46  6E0C               	movwf	??_strcspn^0,c
  6677  007A48  500C               	movf	??_strcspn^0,w,c
  6678  007A4A  6E04               	movwf	strchr@c^0,c
  6679  007A4C  6A05               	clrf	(strchr@c+1)^0,c
  6680  007A4E  ECB3  F039         	call	_strchr	;wreg free
  6681  007A52  5002               	movf	?_strchr^0,w,c
  6682  007A54  1003               	iorwf	(?_strchr+1)^0,w,c
  6683  007A56  B4D8               	btfsc	status,2,c
  6684  007A58  D7DC               	goto	l15188
  6685  007A5A                     u14860:
  6686  007A5A  0060  F034  F008   	movff	strcspn@i,?_strcspn
  6687  007A60  0060  F038  F009   	movff	strcspn@i+1,?_strcspn+1
  6688  007A66  0012               	return		;funcret
  6689  007A68                     __end_of_strcspn:
  6690                           	opt callstack 0
  6691                           
  6692 ;; *************** function _cmdSetAddr *****************
  6693 ;; Defined at:
  6694 ;;		line 323 in file "../app/app_src/application.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  6697 ;;		 -> atCommand(80), 
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  tempaddr        2   35[BANK0 ] unsigned short 
  6700 ;;  p1              2   33[BANK0 ] PTR unsigned char 
  6701 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  6702 ;;  p2              2   31[BANK0 ] PTR unsigned char 
  6703 ;; Return value:  Size  Location     Type
  6704 ;;                  1    wreg      void 
  6705 ;; Registers used:
  6706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 3F/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6712 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6713 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6715 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6716 ;;Total ram usage:        8 bytes
  6717 ;; Hardware stack levels used:    1
  6718 ;; Hardware stack levels required when called:   16
  6719 ;; This function calls:
  6720 ;;		_printf
  6721 ;;		_strstr
  6722 ;;		_strtoul
  6723 ;; This function is called by:
  6724 ;;		_executeATCommand
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           	psect	text24
  6729  006F90                     __ptext24:
  6730                           	opt callstack 0
  6731  006F90                     _cmdSetAddr:
  6732                           	opt callstack 12
  6733                           
  6734                           ;../app/app_src/application.c: 324:  uint16_t tempaddr;;../app/app_src/application.c: 32
      +                          5:  char *p1,*p2;;../app/app_src/application.c: 326:  p1 = strstr(atCommand,"=") + 1;
  6735                           
  6736                           ;incstack = 0
  6737  006F90  0E4B               	movlw	low _atCommand
  6738  006F92  6E0D               	movwf	strstr@h^0,c
  6739  006F94  0E01               	movlw	high _atCommand
  6740  006F96  6E0E               	movwf	(strstr@h+1)^0,c
  6741  006F98  0EDE               	movlw	low (STR_21+3)
  6742  006F9A  6E0F               	movwf	strstr@n^0,c
  6743  006F9C  0EFF               	movlw	high (STR_21+3)
  6744  006F9E  6E10               	movwf	(strstr@n+1)^0,c
  6745  006FA0  EC72  F02E         	call	_strstr	;wreg free
  6746  006FA4  0E01               	movlw	1
  6747  006FA6  240D               	addwf	?_strstr^0,w,c
  6748  006FA8  0100               	movlb	0	; () banked
  6749  006FAA  6F81               	movwf	cmdSetAddr@p1& (0+255),b
  6750  006FAC  0E00               	movlw	0
  6751  006FAE  200E               	addwfc	(?_strstr+1)^0,w,c
  6752  006FB0  6F82               	movwf	(cmdSetAddr@p1+1)& (0+255),b
  6753                           
  6754                           ; BSR set to: 0
  6755                           ;../app/app_src/application.c: 328:  tempaddr = strtoul(p1,p2,16);
  6756  006FB2  0060  F204  F034   	movff	cmdSetAddr@p1,strtoul@s
  6757  006FB8  0060  F208  F035   	movff	cmdSetAddr@p1+1,strtoul@s+1
  6758  006FBE  0060  F1FC  F036   	movff	cmdSetAddr@p2,strtoul@endptr
  6759  006FC4  0060  F200  F037   	movff	cmdSetAddr@p2+1,strtoul@endptr+1
  6760  006FCA  0E00               	movlw	0
  6761  006FCC  6E39               	movwf	(strtoul@base+1)^0,c
  6762  006FCE  0E10               	movlw	16
  6763  006FD0  6E38               	movwf	strtoul@base^0,c
  6764  006FD2  EC89  F040         	call	_strtoul	;wreg free
  6765  006FD6  0060  F0D0  F083   	movff	?_strtoul,cmdSetAddr@tempaddr
  6766  006FDC  0060  F0D4  F084   	movff	?_strtoul+1,cmdSetAddr@tempaddr+1
  6767                           
  6768                           ;../app/app_src/application.c: 330:  if((tempaddr != 0x0000) && (tempaddr != 0xFFFF)){
  6769  006FE2  0100               	movlb	0	; () banked
  6770  006FE4  5183               	movf	cmdSetAddr@tempaddr& (0+255),w,b
  6771  006FE6  1184               	iorwf	(cmdSetAddr@tempaddr+1)& (0+255),w,b
  6772  006FE8  B4D8               	btfsc	status,2,c
  6773  006FEA  D012               	goto	l15872
  6774                           
  6775                           ; BSR set to: 0
  6776  006FEC  2983               	incf	cmdSetAddr@tempaddr& (0+255),w,b
  6777  006FEE  E103               	bnz	u16020
  6778  006FF0  2984               	incf	(cmdSetAddr@tempaddr+1)& (0+255),w,b
  6779  006FF2  B4D8               	btfsc	status,2,c
  6780  006FF4  D00D               	goto	l15872
  6781  006FF6                     u16020:
  6782                           
  6783                           ; BSR set to: 0
  6784                           ;../app/app_src/application.c: 331:   currentAddr0 = (uint8_t)(tempaddr >> 8);
  6785  006FF6  0060  F210  F0FA   	movff	cmdSetAddr@tempaddr+1,_currentAddr0
  6786                           
  6787                           ;../app/app_src/application.c: 332:   currentAddr1 = (uint8_t)(tempaddr & 0xFF);
  6788  006FFC  0060  F20C  F0F9   	movff	cmdSetAddr@tempaddr,_currentAddr1
  6789                           
  6790                           ; BSR set to: 0
  6791                           ;../app/app_src/application.c: 333:   printf("OK\r\n");
  6792  007002  0ED6               	movlw	low STR_12
  6793  007004  6F75               	movwf	printf@fmt& (0+255),b
  6794  007006  0EFF               	movlw	high STR_12
  6795  007008  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6796  00700A  ECC4  F045         	call	_printf	;wreg free
  6797                           
  6798                           ;../app/app_src/application.c: 334:  }
  6799  00700E  0012               	return	
  6800  007010                     l15872:
  6801                           
  6802                           ; BSR set to: 0
  6803                           ;../app/app_src/application.c: 336:   printf("NOT OK:%u\r\n", NOT_VADLID_ADDR);
  6804  007010  0EC5               	movlw	low STR_3
  6805  007012  6F75               	movwf	printf@fmt& (0+255),b
  6806  007014  0EFE               	movlw	high STR_3
  6807  007016  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6808  007018  0E05               	movlw	5
  6809  00701A  6F77               	movwf	(?_printf+2)& (0+255),b
  6810  00701C  ECC4  F045         	call	_printf	;wreg free
  6811                           
  6812                           ; BSR set to: 0
  6813  007020  0012               	return		;funcret
  6814  007022                     __end_of_cmdSetAddr:
  6815                           	opt callstack 0
  6816                           
  6817 ;; *************** function _cmdSetAES *****************
  6818 ;; Defined at:
  6819 ;;		line 472 in file "../app/app_src/application.c"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  6822 ;;		 -> atCommand(80), 
  6823 ;; Auto vars:     Size  Location     Type
  6824 ;;  temp            3   65[BANK0 ] unsigned char [3]
  6825 ;;  p2              2   63[BANK0 ] PTR unsigned char 
  6826 ;;		 -> cmdSetSF@CHstr(3), STR_58(2), STR_57(2), cmdSetCADRSSI@CHstr(3), 
  6827 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  6828 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  6829 ;;  byte            1   69[BANK0 ] unsigned char 
  6830 ;;  i               1   72[BANK0 ] unsigned char 
  6831 ;;  AESstr         32   31[BANK0 ] unsigned char [32]
  6832 ;;  p1              2   70[BANK0 ] PTR unsigned char 
  6833 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  6834 ;;  key_type        1   68[BANK0 ] unsigned char 
  6835 ;; Return value:  Size  Location     Type
  6836 ;;                  1    wreg      void 
  6837 ;; Registers used:
  6838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 3F/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6844 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6845 ;;      Locals:         0      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6846 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6847 ;;      Totals:         4      42       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6848 ;;Total ram usage:       46 bytes
  6849 ;; Hardware stack levels used:    1
  6850 ;; Hardware stack levels required when called:   16
  6851 ;; This function calls:
  6852 ;;		_DATAEE_WriteByte_Platform
  6853 ;;		_memcpy
  6854 ;;		_printf
  6855 ;;		_strlen
  6856 ;;		_strstr
  6857 ;;		_strtoul
  6858 ;; This function is called by:
  6859 ;;		_executeATCommand
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862                           
  6863                           	psect	text25
  6864  002EAC                     __ptext25:
  6865                           	opt callstack 0
  6866  002EAC                     _cmdSetAES:
  6867                           	opt callstack 12
  6868                           
  6869                           ;../app/app_src/application.c: 476:  p1 = strstr(atCommand,":") + 1;
  6870                           
  6871                           ; BSR set to: 0
  6872                           ;incstack = 0
  6873  002EAC  0E4B               	movlw	low _atCommand
  6874  002EAE  6E0D               	movwf	strstr@h^0,c
  6875  002EB0  0E01               	movlw	high _atCommand
  6876  002EB2  6E0E               	movwf	(strstr@h+1)^0,c
  6877  002EB4  0E5F               	movlw	low (STR_66+5)
  6878  002EB6  6E0F               	movwf	strstr@n^0,c
  6879  002EB8  0EFF               	movlw	high (STR_66+5)
  6880  002EBA  6E10               	movwf	(strstr@n+1)^0,c
  6881  002EBC  EC72  F02E         	call	_strstr	;wreg free
  6882  002EC0  0E01               	movlw	1
  6883  002EC2  240D               	addwf	?_strstr^0,w,c
  6884  002EC4  0100               	movlb	0	; () banked
  6885  002EC6  6FA6               	movwf	cmdSetAES@p1& (0+255),b
  6886  002EC8  0E00               	movlw	0
  6887  002ECA  200E               	addwfc	(?_strstr+1)^0,w,c
  6888  002ECC  6FA7               	movwf	(cmdSetAES@p1+1)& (0+255),b
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;../app/app_src/application.c: 477:     if(!p1){
  6892  002ECE  51A6               	movf	cmdSetAES@p1& (0+255),w,b
  6893  002ED0  11A7               	iorwf	(cmdSetAES@p1+1)& (0+255),w,b
  6894  002ED2  A4D8               	btfss	status,2,c
  6895  002ED4  D019               	goto	l15960
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;../app/app_src/application.c: 478:         printf("NOT OK:%u\r\n", UNDEFCMD);
  6899  002ED6  0EC5               	movlw	low STR_3
  6900  002ED8  6F75               	movwf	printf@fmt& (0+255),b
  6901  002EDA  0EFE               	movlw	high STR_3
  6902  002EDC  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6903  002EDE  0E09               	movlw	9
  6904  002EE0  6F77               	movwf	(?_printf+2)& (0+255),b
  6905  002EE2  ECC4  F045         	call	_printf	;wreg free
  6906  002EE6  0012               	return	
  6907  002EE8                     l15950:
  6908  002EE8  0E4E               	movlw	78
  6909  002EEA  D001               	goto	L1
  6910  002EEC                     l15952:
  6911  002EEC  0E41               	movlw	65
  6912  002EEE                     L1:
  6913  002EEE  0100               	movlb	0	; () banked
  6914  002EF0  6FA4               	movwf	cmdSetAES@key_type& (0+255),b
  6915  002EF2  D02D               	goto	l15962
  6916  002EF4                     l15954:
  6917                           
  6918                           ;../app/app_src/application.c: 485:             printf("NOT OK:%u\r\n", ILLEGALPARAMETER
      +                          );
  6919  002EF4  0EC5               	movlw	low STR_3
  6920  002EF6  0100               	movlb	0	; () banked
  6921  002EF8  6F75               	movwf	printf@fmt& (0+255),b
  6922  002EFA  0EFE               	movlw	high STR_3
  6923  002EFC  6F76               	movwf	(printf@fmt+1)& (0+255),b
  6924  002EFE  0E0D               	movlw	13
  6925  002F00  6F77               	movwf	(?_printf+2)& (0+255),b
  6926  002F02  ECC4  F045         	call	_printf	;wreg free
  6927  002F06  0012               	return	
  6928  002F08                     l15960:
  6929                           
  6930                           ; BSR set to: 0
  6931  002F08  0060  F29B  FFF6   	movff	cmdSetAES@p1,tblptrl
  6932  002F0E  0060  F29F  FFF7   	movff	cmdSetAES@p1+1,tblptrh
  6933  002F14  0E00               	movlw	low (__mediumconst shr (0+16))
  6934  002F16  6EF8               	movwf	tblptru,c
  6935  002F18  0E0F               	movlw	(high __ramtop+-1)
  6936  002F1A  64F7               	cpfsgt	tblptrh,c
  6937  002F1C  D003               	bra	u16087
  6938  002F1E  0008               	tblrd		*
  6939  002F20  50F5               	movf	tablat,w,c
  6940  002F22  D007               	bra	u16080
  6941  002F24                     u16087:
  6942  002F24  006F FFDB FFE9     	movff	tblptrl,fsr0l
  6943  002F2A  006F FFDF FFEA     	movff	tblptrh,fsr0h
  6944  002F30  50EF               	movf	indf0,w,c
  6945  002F32                     u16080:
  6946  002F32  6E5A               	movwf	??_cmdSetAES^0,c
  6947  002F34  6A5B               	clrf	(??_cmdSetAES+1)^0,c
  6948                           
  6949                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6950                           ; Switch size 1, requested type "simple"
  6951                           ; Number of cases is 1, Range of values is 0 to 0
  6952                           ; switch strategies available:
  6953                           ; Name         Instructions Cycles
  6954                           ; simple_byte            4     3 (average)
  6955                           ;	Chosen strategy is simple_byte
  6956  002F36  505B               	movf	(??_cmdSetAES+1)^0,w,c
  6957  002F38  0A00               	xorlw	0	; case 0
  6958  002F3A  A4D8               	btfss	status,2,c
  6959  002F3C  D7DB               	goto	l15954
  6960                           
  6961                           ; Switch size 1, requested type "simple"
  6962                           ; Number of cases is 2, Range of values is 65 to 78
  6963                           ; switch strategies available:
  6964                           ; Name         Instructions Cycles
  6965                           ; simple_byte            7     4 (average)
  6966                           ;	Chosen strategy is simple_byte
  6967  002F3E  505A               	movf	??_cmdSetAES^0,w,c
  6968  002F40  0A41               	xorlw	65	; case 65
  6969  002F42  B4D8               	btfsc	status,2,c
  6970  002F44  D7D3               	goto	l15952
  6971  002F46  0A0F               	xorlw	15	; case 78
  6972  002F48  B4D8               	btfsc	status,2,c
  6973  002F4A  D7CE               	goto	l15950
  6974  002F4C  D7D3               	goto	l15954
  6975  002F4E                     l15962:
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;../app/app_src/application.c: 488:     p1 = strstr(atCommand,"=") + 1;
  6979  002F4E  0E4B               	movlw	low _atCommand
  6980  002F50  6E0D               	movwf	strstr@h^0,c
  6981  002F52  0E01               	movlw	high _atCommand
  6982  002F54  6E0E               	movwf	(strstr@h+1)^0,c
  6983  002F56  0EDE               	movlw	low (STR_21+3)
  6984  002F58  6E0F               	movwf	strstr@n^0,c
  6985  002F5A  0EFF               	movlw	high (STR_21+3)
  6986  002F5C  6E10               	movwf	(strstr@n+1)^0,c
  6987  002F5E  EC72  F02E         	call	_strstr	;wreg free
  6988  002F62  0E01               	movlw	1
  6989  002F64  240D               	addwf	?_strstr^0,w,c
  6990  002F66  0100               	movlb	0	; () banked
  6991  002F68  6FA6               	movwf	cmdSetAES@p1& (0+255),b
  6992  002F6A  0E00               	movlw	0
  6993  002F6C  200E               	addwfc	(?_strstr+1)^0,w,c
  6994  002F6E  6FA7               	movwf	(cmdSetAES@p1+1)& (0+255),b
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;../app/app_src/application.c: 489:     if(!p1){
  6998  002F70  51A6               	movf	cmdSetAES@p1& (0+255),w,b
  6999  002F72  11A7               	iorwf	(cmdSetAES@p1+1)& (0+255),w,b
  7000  002F74  A4D8               	btfss	status,2,c
  7001  002F76  D009               	goto	l15970
  7002                           
  7003                           ; BSR set to: 0
  7004                           ;../app/app_src/application.c: 490:         printf("NOT OK:%u\r\n", UNDEFCMD);
  7005  002F78  0EC5               	movlw	low STR_3
  7006  002F7A  6F75               	movwf	printf@fmt& (0+255),b
  7007  002F7C  0EFE               	movlw	high STR_3
  7008  002F7E  6F76               	movwf	(printf@fmt+1)& (0+255),b
  7009  002F80  0E09               	movlw	9
  7010  002F82  6F77               	movwf	(?_printf+2)& (0+255),b
  7011  002F84  ECC4  F045         	call	_printf	;wreg free
  7012  002F88  0012               	return	
  7013  002F8A                     l15970:
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;../app/app_src/application.c: 494:  if(strlen(p1) != 32){
  7017  002F8A  0060  F298  F002   	movff	cmdSetAES@p1,strlen@s
  7018  002F90  0060  F29C  F003   	movff	cmdSetAES@p1+1,strlen@s+1
  7019  002F96  EC7E  F03F         	call	_strlen	;wreg free
  7020  002F9A  0E20               	movlw	32
  7021  002F9C  1802               	xorwf	?_strlen^0,w,c
  7022  002F9E  1003               	iorwf	(?_strlen+1)^0,w,c
  7023  002FA0  B4D8               	btfsc	status,2,c
  7024  002FA2  D00A               	goto	l15976
  7025                           
  7026                           ;../app/app_src/application.c: 495:   printf("NOT OK:%u\r\n",KEYLENERROR);
  7027  002FA4  0EC5               	movlw	low STR_3
  7028  002FA6  0100               	movlb	0	; () banked
  7029  002FA8  6F75               	movwf	printf@fmt& (0+255),b
  7030  002FAA  0EFE               	movlw	high STR_3
  7031  002FAC  6F76               	movwf	(printf@fmt+1)& (0+255),b
  7032  002FAE  0E08               	movlw	8
  7033  002FB0  6F77               	movwf	(?_printf+2)& (0+255),b
  7034  002FB2  ECC4  F045         	call	_printf	;wreg free
  7035  002FB6  0012               	return	
  7036  002FB8                     l15976:
  7037                           
  7038                           ;../app/app_src/application.c: 498:  memcpy(AESstr,p1,32);
  7039  002FB8  0E7F               	movlw	low cmdSetAES@AESstr
  7040  002FBA  6E08               	movwf	memcpy@d1^0,c
  7041  002FBC  6A09               	clrf	(memcpy@d1+1)^0,c
  7042  002FBE  0060  F298  F00A   	movff	cmdSetAES@p1,memcpy@s1
  7043  002FC4  0060  F29C  F00B   	movff	cmdSetAES@p1+1,memcpy@s1+1
  7044  002FCA  0E00               	movlw	0
  7045  002FCC  6E0D               	movwf	(memcpy@n+1)^0,c
  7046  002FCE  0E20               	movlw	32
  7047  002FD0  6E0C               	movwf	memcpy@n^0,c
  7048  002FD2  ECF6  F03A         	call	_memcpy	;wreg free
  7049                           
  7050                           ;../app/app_src/application.c: 500:  for(uint8_t i = 0; i < 16; i++){
  7051  002FD6  0E00               	movlw	0
  7052  002FD8  0100               	movlb	0	; () banked
  7053  002FDA  6FA8               	movwf	cmdSetAES@i& (0+255),b
  7054  002FDC                     l15984:
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;../app/app_src/application.c: 501:   char temp[3];;../app/app_src/application.c: 502:  
      +                           char *p2;;../app/app_src/application.c: 503:   uint8_t byte;;../app/app_src/application
      +                          .c: 504:   memcpy(temp,0,sizeof(temp));
  7058  002FDC  0EA1               	movlw	low cmdSetAES@temp
  7059  002FDE  6E08               	movwf	memcpy@d1^0,c
  7060  002FE0  6A09               	clrf	(memcpy@d1+1)^0,c
  7061  002FE2  0E00               	movlw	0
  7062  002FE4  6E0A               	movwf	memcpy@s1^0,c
  7063  002FE6  0E00               	movlw	0
  7064  002FE8  6E0B               	movwf	(memcpy@s1+1)^0,c
  7065  002FEA  0E00               	movlw	0
  7066  002FEC  6E0D               	movwf	(memcpy@n+1)^0,c
  7067  002FEE  0E03               	movlw	3
  7068  002FF0  6E0C               	movwf	memcpy@n^0,c
  7069  002FF2  ECF6  F03A         	call	_memcpy	;wreg free
  7070                           
  7071                           ;../app/app_src/application.c: 505:   memcpy(temp,(AESstr + i*2),2);
  7072  002FF6  0EA1               	movlw	low cmdSetAES@temp
  7073  002FF8  6E08               	movwf	memcpy@d1^0,c
  7074  002FFA  6A09               	clrf	(memcpy@d1+1)^0,c
  7075  002FFC  0100               	movlb	0	; () banked
  7076  002FFE  51A8               	movf	cmdSetAES@i& (0+255),w,b
  7077  003000  0D02               	mullw	2
  7078  003002  50F3               	movf	243,w,c
  7079  003004  0F7F               	addlw	low cmdSetAES@AESstr
  7080  003006  6E5A               	movwf	??_cmdSetAES^0,c
  7081  003008  0060  F168  F00A   	movff	??_cmdSetAES,memcpy@s1
  7082  00300E  6A0B               	clrf	(memcpy@s1+1)^0,c
  7083  003010  0E00               	movlw	0
  7084  003012  6E0D               	movwf	(memcpy@n+1)^0,c
  7085  003014  0E02               	movlw	2
  7086  003016  6E0C               	movwf	memcpy@n^0,c
  7087  003018  ECF6  F03A         	call	_memcpy	;wreg free
  7088                           
  7089                           ;../app/app_src/application.c: 506:   byte = (uint8_t)strtoul(temp,&p2,16);
  7090  00301C  0EA1               	movlw	low cmdSetAES@temp
  7091  00301E  6E34               	movwf	strtoul@s^0,c
  7092  003020  6A35               	clrf	(strtoul@s+1)^0,c
  7093  003022  0E9F               	movlw	low cmdSetAES@p2
  7094  003024  6E36               	movwf	strtoul@endptr^0,c
  7095  003026  6A37               	clrf	(strtoul@endptr+1)^0,c
  7096  003028  0E00               	movlw	0
  7097  00302A  6E39               	movwf	(strtoul@base+1)^0,c
  7098  00302C  0E10               	movlw	16
  7099  00302E  6E38               	movwf	strtoul@base^0,c
  7100  003030  EC89  F040         	call	_strtoul	;wreg free
  7101  003034  5034               	movf	?_strtoul^0,w,c
  7102  003036  0100               	movlb	0	; () banked
  7103  003038  6FA5               	movwf	cmdSetAES@byte& (0+255),b
  7104                           
  7105                           ; BSR set to: 0
  7106                           ;../app/app_src/application.c: 507:         if('A' == key_type){
  7107  00303A  0E41               	movlw	65
  7108  00303C  19A4               	xorwf	cmdSetAES@key_type& (0+255),w,b
  7109  00303E  A4D8               	btfss	status,2,c
  7110  003040  D015               	goto	l15996
  7111                           
  7112                           ; BSR set to: 0
  7113                           ;../app/app_src/application.c: 508:             aes_key[i] = byte;
  7114  003042  0E34               	movlw	low _aes_key
  7115  003044  25A8               	addwf	cmdSetAES@i& (0+255),w,b
  7116  003046  6ED9               	movwf	fsr2l,c
  7117  003048  6ADA               	clrf	fsr2h,c
  7118  00304A  0E02               	movlw	high _aes_key
  7119  00304C  22DA               	addwfc	fsr2h,f,c
  7120  00304E  0060  F297  FFDF   	movff	cmdSetAES@byte,indf2
  7121                           
  7122                           ; BSR set to: 0
  7123                           ;../app/app_src/application.c: 509:             DATAEE_WriteByte_Platform((0 + 0 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i),byte);
  7124  003054  0E09               	movlw	9
  7125  003056  25A8               	addwf	cmdSetAES@i& (0+255),w,b
  7126  003058  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  7127  00305A  6A07               	clrf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  7128  00305C  0E00               	movlw	0
  7129  00305E  2207               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,f,c
  7130  003060  0060  F294  F008   	movff	cmdSetAES@byte,DATAEE_WriteByte_Platform@data
  7131  003066  ECF1  F040         	call	_DATAEE_WriteByte_Platform	;wreg free
  7132                           
  7133                           ;../app/app_src/application.c: 510:         }
  7134  00306A  D014               	goto	l16000
  7135  00306C                     l15996:
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;../app/app_src/application.c: 512:             net_key[i] = byte;
  7139  00306C  0E24               	movlw	low _net_key
  7140  00306E  25A8               	addwf	cmdSetAES@i& (0+255),w,b
  7141  003070  6ED9               	movwf	fsr2l,c
  7142  003072  6ADA               	clrf	fsr2h,c
  7143  003074  0E02               	movlw	high _net_key
  7144  003076  22DA               	addwfc	fsr2h,f,c
  7145  003078  0060  F297  FFDF   	movff	cmdSetAES@byte,indf2
  7146                           
  7147                           ; BSR set to: 0
  7148                           ;../app/app_src/application.c: 513:             DATAEE_WriteByte_Platform((0 + 0 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i),byte);
  7149  00307E  0E23               	movlw	35
  7150  003080  25A8               	addwf	cmdSetAES@i& (0+255),w,b
  7151  003082  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  7152  003084  6A07               	clrf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  7153  003086  0E00               	movlw	0
  7154  003088  2207               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,f,c
  7155  00308A  0060  F294  F008   	movff	cmdSetAES@byte,DATAEE_WriteByte_Platform@data
  7156  003090  ECF1  F040         	call	_DATAEE_WriteByte_Platform	;wreg free
  7157  003094                     l16000:
  7158                           
  7159                           ;../app/app_src/application.c: 515:  }
  7160  003094  0100               	movlb	0	; () banked
  7161  003096  2BA8               	incf	cmdSetAES@i& (0+255),f,b
  7162                           
  7163                           ; BSR set to: 0
  7164  003098  0E0F               	movlw	15
  7165  00309A  65A8               	cpfsgt	cmdSetAES@i& (0+255),b
  7166  00309C  D79F               	goto	l15984
  7167                           
  7168                           ; BSR set to: 0
  7169                           ;../app/app_src/application.c: 516:  printf("OK\r\n");
  7170  00309E  0ED6               	movlw	low STR_12
  7171  0030A0  6F75               	movwf	printf@fmt& (0+255),b
  7172  0030A2  0EFF               	movlw	high STR_12
  7173  0030A4  6F76               	movwf	(printf@fmt+1)& (0+255),b
  7174  0030A6  ECC4  F045         	call	_printf	;wreg free
  7175                           
  7176                           ; BSR set to: 0
  7177  0030AA  0012               	return		;funcret
  7178  0030AC                     __end_of_cmdSetAES:
  7179                           	opt callstack 0
  7180                           
  7181 ;; *************** function _cmdSendSink *****************
  7182 ;; Defined at:
  7183 ;;		line 451 in file "../app/app_src/application.c"
  7184 ;; Parameters:    Size  Location     Type
  7185 ;;  cmd             2    1[COMRAM] PTR unsigned char 
  7186 ;;		 -> atCommand(80), 
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;		None
  7189 ;; Return value:  Size  Location     Type
  7190 ;;                  1    wreg      void 
  7191 ;; Registers used:
  7192 ;;		None
  7193 ;; Tracked objects:
  7194 ;;		On entry : 0/0
  7195 ;;		On exit  : 0/0
  7196 ;;		Unchanged: 0/0
  7197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7198 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7201 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7202 ;;Total ram usage:        2 bytes
  7203 ;; Hardware stack levels used:    1
  7204 ;; Hardware stack levels required when called:    7
  7205 ;; This function calls:
  7206 ;;		Nothing
  7207 ;; This function is called by:
  7208 ;;		_executeATCommand
  7209 ;; This function uses a non-reentrant model
  7210 ;;
  7211                           
  7212                           	psect	text26
  7213  00909C                     __ptext26:
  7214                           	opt callstack 0
  7215  00909C                     _cmdSendSink:
  7216                           	opt callstack 21
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;incstack = 0
  7220  00909C  0012               	return		;funcret
  7221  00909E                     __end_of_cmdSendSink:
  7222                           	opt callstack 0
  7223                           
  7224 ;; *************** function _cmdSend *****************
  7225 ;; Defined at:
  7226 ;;		line 234 in file "../app/app_src/application.c"
  7227 ;; Parameters:    Size  Location     Type
  7228 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  7229 ;;		 -> atCommand(80), 
  7230 ;; Auto vars:     Size  Location     Type
  7231 ;;  buf_id          1   42[BANK0 ] unsigned char 
  7232 ;;  destaddr        5   31[BANK0 ] unsigned char [5]
  7233 ;;  p1              2   40[BANK0 ] PTR unsigned char 
  7234 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  7235 ;;  p2              2   38[BANK0 ] PTR unsigned char 
  7236 ;;		 -> cmdSetSF@CHstr(3), STR_58(2), STR_57(2), cmdSetCADRSSI@CHstr(3), 
  7237 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7238 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7239 ;;  tempaddr        2   36[BANK0 ] unsigned short 
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  1    wreg      void 
  7242 ;; Registers used:
  7243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 3F/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7250 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7251 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7252 ;;      Totals:         4      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7253 ;;Total ram usage:       16 bytes
  7254 ;; Hardware stack levels used:    1
  7255 ;; Hardware stack levels required when called:   16
  7256 ;; This function calls:
  7257 ;;		_NWK_DataReq
  7258 ;;		_get_free_tx_buffer
  7259 ;;		_memcpy
  7260 ;;		_memset
  7261 ;;		_printf
  7262 ;;		_strlen
  7263 ;;		_strstr
  7264 ;;		_strtoul
  7265 ;; This function is called by:
  7266 ;;		_executeATCommand
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           	psect	text27
  7271  002804                     __ptext27:
  7272                           	opt callstack 0
  7273  002804                     _cmdSend:
  7274                           	opt callstack 12
  7275                           
  7276                           ;../app/app_src/application.c: 235:  uint16_t tempaddr;;../app/app_src/application.c: 23
      +                          6:  char *p1,*p2;;../app/app_src/application.c: 237:  char destaddr[5];;../app/app_src/a
      +                          pplication.c: 238:         destaddr[4] = 0;
  7277                           
  7278                           ;incstack = 0
  7279  002804  0E00               	movlw	0
  7280  002806  0100               	movlb	0	; () banked
  7281  002808  6F83               	movwf	(cmdSend@destaddr+4)& (0+255),b
  7282                           
  7283                           ; BSR set to: 0
  7284                           ;../app/app_src/application.c: 239:  p1 = strstr(cmd,":") + 1;
  7285  00280A  0060  F160  F00D   	movff	cmdSend@cmd,strstr@h
  7286  002810  0060  F164  F00E   	movff	cmdSend@cmd+1,strstr@h+1
  7287  002816  0E5F               	movlw	low (STR_66+5)
  7288  002818  6E0F               	movwf	strstr@n^0,c
  7289  00281A  0EFF               	movlw	high (STR_66+5)
  7290  00281C  6E10               	movwf	(strstr@n+1)^0,c
  7291  00281E  EC72  F02E         	call	_strstr	;wreg free
  7292  002822  0E01               	movlw	1
  7293  002824  240D               	addwf	?_strstr^0,w,c
  7294  002826  0100               	movlb	0	; () banked
  7295  002828  6F88               	movwf	cmdSend@p1& (0+255),b
  7296  00282A  0E00               	movlw	0
  7297  00282C  200E               	addwfc	(?_strstr+1)^0,w,c
  7298  00282E  6F89               	movwf	(cmdSend@p1+1)& (0+255),b
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;../app/app_src/application.c: 240:  memcpy(destaddr,p1,4);
  7302  002830  0E7F               	movlw	low cmdSend@destaddr
  7303  002832  6E08               	movwf	memcpy@d1^0,c
  7304  002834  6A09               	clrf	(memcpy@d1+1)^0,c
  7305  002836  0060  F220  F00A   	movff	cmdSend@p1,memcpy@s1
  7306  00283C  0060  F224  F00B   	movff	cmdSend@p1+1,memcpy@s1+1
  7307  002842  0E00               	movlw	0
  7308  002844  6E0D               	movwf	(memcpy@n+1)^0,c
  7309  002846  0E04               	movlw	4
  7310  002848  6E0C               	movwf	memcpy@n^0,c
  7311  00284A  ECF6  F03A         	call	_memcpy	;wreg free
  7312                           
  7313                           ;../app/app_src/application.c: 242:  tempaddr = strtoul(destaddr,&p2,16);
  7314  00284E  0E7F               	movlw	low cmdSend@destaddr
  7315  002850  6E34               	movwf	strtoul@s^0,c
  7316  002852  6A35               	clrf	(strtoul@s+1)^0,c
  7317  002854  0E86               	movlw	low cmdSend@p2
  7318  002856  6E36               	movwf	strtoul@endptr^0,c
  7319  002858  6A37               	clrf	(strtoul@endptr+1)^0,c
  7320  00285A  0E00               	movlw	0
  7321  00285C  6E39               	movwf	(strtoul@base+1)^0,c
  7322  00285E  0E10               	movlw	16
  7323  002860  6E38               	movwf	strtoul@base^0,c
  7324  002862  EC89  F040         	call	_strtoul	;wreg free
  7325  002866  0060  F0D0  F084   	movff	?_strtoul,cmdSend@tempaddr
  7326  00286C  0060  F0D4  F085   	movff	?_strtoul+1,cmdSend@tempaddr+1
  7327                           
  7328                           ;../app/app_src/application.c: 244:  p1 = strstr(cmd,"=") + 1;
  7329  002872  0060  F160  F00D   	movff	cmdSend@cmd,strstr@h
  7330  002878  0060  F164  F00E   	movff	cmdSend@cmd+1,strstr@h+1
  7331  00287E  0EDE               	movlw	low (STR_21+3)
  7332  002880  6E0F               	movwf	strstr@n^0,c
  7333  002882  0EFF               	movlw	high (STR_21+3)
  7334  002884  6E10               	movwf	(strstr@n+1)^0,c
  7335  002886  EC72  F02E         	call	_strstr	;wreg free
  7336  00288A  0E01               	movlw	1
  7337  00288C  240D               	addwf	?_strstr^0,w,c
  7338  00288E  0100               	movlb	0	; () banked
  7339  002890  6F88               	movwf	cmdSend@p1& (0+255),b
  7340  002892  0E00               	movlw	0
  7341  002894  200E               	addwfc	(?_strstr+1)^0,w,c
  7342  002896  6F89               	movwf	(cmdSend@p1+1)& (0+255),b
  7343                           
  7344                           ; BSR set to: 0
  7345                           ;../app/app_src/application.c: 245:  if(strlen(p1) > 64){
  7346  002898  0060  F220  F002   	movff	cmdSend@p1,strlen@s
  7347  00289E  0060  F224  F003   	movff	cmdSend@p1+1,strlen@s+1
  7348  0028A4  EC7E  F03F         	call	_strlen	;wreg free
  7349  0028A8  5003               	movf	(?_strlen+1)^0,w,c
  7350  0028AA  E104               	bnz	u15960
  7351  0028AC  0E41               	movlw	65
  7352  0028AE  5C02               	subwf	?_strlen^0,w,c
  7353  0028B0  A0D8               	btfss	status,0,c
  7354  0028B2  D00A               	goto	l15780
  7355  0028B4                     u15960:
  7356                           
  7357                           ;../app/app_src/application.c: 246:   printf("NOT OK:%u\r\n", MESSAGE_TOO_LONG);
  7358  0028B4  0EC5               	movlw	low STR_3
  7359  0028B6  0100               	movlb	0	; () banked
  7360  0028B8  6F75               	movwf	printf@fmt& (0+255),b
  7361  0028BA  0EFE               	movlw	high STR_3
  7362  0028BC  6F76               	movwf	(printf@fmt+1)& (0+255),b
  7363  0028BE  0E07               	movlw	7
  7364  0028C0  6F77               	movwf	(?_printf+2)& (0+255),b
  7365  0028C2  ECC4  F045         	call	_printf	;wreg free
  7366                           
  7367                           ;../app/app_src/application.c: 247:  }
  7368  0028C6  0012               	return	
  7369  0028C8                     l15780:
  7370                           
  7371                           ;../app/app_src/application.c: 249:         uint8_t buf_id;;../app/app_src/application.c
      +                          : 250:         if(!get_free_tx_buffer(&buf_id)){
  7372  0028C8  0E8A               	movlw	low cmdSend@buf_id
  7373  0028CA  6E02               	movwf	get_free_tx_buffer@buf_id^0,c
  7374  0028CC  EC72  F03C         	call	_get_free_tx_buffer	;wreg free
  7375  0028D0  0900               	iorlw	0
  7376  0028D2  A4D8               	btfss	status,2,c
  7377  0028D4  D00A               	goto	l15786
  7378                           
  7379                           ;../app/app_src/application.c: 251:             printf("NOT OK:%u\r\n", NO_FREE_BUF);
  7380  0028D6  0EC5               	movlw	low STR_3
  7381  0028D8  0100               	movlb	0	; () banked
  7382  0028DA  6F75               	movwf	printf@fmt& (0+255),b
  7383  0028DC  0EFE               	movlw	high STR_3
  7384  0028DE  6F76               	movwf	(printf@fmt+1)& (0+255),b
  7385  0028E0  0E11               	movlw	17
  7386  0028E2  6F77               	movwf	(?_printf+2)& (0+255),b
  7387  0028E4  ECC4  F045         	call	_printf	;wreg free
  7388  0028E8  0012               	return	
  7389  0028EA                     l15786:
  7390                           
  7391                           ;../app/app_src/application.c: 254:         memset(&tx_buffer[buf_id].payload, 0, (127 -
      +                           16 - 2 ));
  7392  0028EA  0100               	movlb	0	; () banked
  7393  0028EC  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7394  0028EE  0D83               	mullw	131
  7395  0028F0  0E80               	movlw	low (_tx_buffer+22)
  7396  0028F2  24F3               	addwf	243,w,c
  7397  0028F4  6E02               	movwf	memset@dest^0,c
  7398  0028F6  0E08               	movlw	high (_tx_buffer+22)
  7399  0028F8  20F4               	addwfc	prodh,w,c
  7400  0028FA  6E03               	movwf	(memset@dest+1)^0,c
  7401  0028FC  0E00               	movlw	0
  7402  0028FE  6E05               	movwf	(memset@c+1)^0,c
  7403  002900  0E00               	movlw	0
  7404  002902  6E04               	movwf	memset@c^0,c
  7405  002904  0E00               	movlw	0
  7406  002906  6E07               	movwf	(memset@n+1)^0,c
  7407  002908  0E6D               	movlw	109
  7408  00290A  6E06               	movwf	memset@n^0,c
  7409  00290C  EC10  F022         	call	_memset	;wreg free
  7410                           
  7411                           ;../app/app_src/application.c: 255:   memcpy(&tx_buffer[buf_id].payload,p1,strlen(p1));
  7412  002910  0100               	movlb	0	; () banked
  7413  002912  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7414  002914  0D83               	mullw	131
  7415  002916  0E80               	movlw	low (_tx_buffer+22)
  7416  002918  24F3               	addwf	243,w,c
  7417  00291A  6E08               	movwf	memcpy@d1^0,c
  7418  00291C  0E08               	movlw	high (_tx_buffer+22)
  7419  00291E  20F4               	addwfc	prodh,w,c
  7420  002920  6E09               	movwf	(memcpy@d1+1)^0,c
  7421  002922  0060  F220  F00A   	movff	cmdSend@p1,memcpy@s1
  7422  002928  0060  F224  F00B   	movff	cmdSend@p1+1,memcpy@s1+1
  7423  00292E  0060  F220  F002   	movff	cmdSend@p1,strlen@s
  7424  002934  0060  F224  F003   	movff	cmdSend@p1+1,strlen@s+1
  7425  00293A  EC7E  F03F         	call	_strlen	;wreg free
  7426  00293E  0060  F008  F00C   	movff	?_strlen,memcpy@n
  7427  002944  0060  F00C  F00D   	movff	?_strlen+1,memcpy@n+1
  7428  00294A  ECF6  F03A         	call	_memcpy	;wreg free
  7429                           
  7430                           ;../app/app_src/application.c: 256:   tx_buffer[buf_id].nwkDataReq.dstAddr = tempaddr;
  7431  00294E  0100               	movlb	0	; () banked
  7432  002950  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7433  002952  0D83               	mullw	131
  7434  002954  0E72               	movlw	low (_tx_buffer+8)
  7435  002956  24F3               	addwf	243,w,c
  7436  002958  6ED9               	movwf	fsr2l,c
  7437  00295A  0E08               	movlw	high (_tx_buffer+8)
  7438  00295C  20F4               	addwfc	prodh,w,c
  7439  00295E  6EDA               	movwf	fsr2h,c
  7440  002960  0060  F213  FFDE   	movff	cmdSend@tempaddr,postinc2
  7441  002966  0060  F217  FFDD   	movff	cmdSend@tempaddr+1,postdec2
  7442                           
  7443                           ; BSR set to: 0
  7444                           ;../app/app_src/application.c: 257:         tx_buffer[buf_id].nwkDataReq.dstEndpoint = A
      +                          SCII_EP;
  7445  00296C  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7446  00296E  0D83               	mullw	131
  7447  002970  0E74               	movlw	low (_tx_buffer+10)
  7448  002972  24F3               	addwf	243,w,c
  7449  002974  6ED9               	movwf	fsr2l,c
  7450  002976  0E08               	movlw	high (_tx_buffer+10)
  7451  002978  20F4               	addwfc	prodh,w,c
  7452  00297A  6EDA               	movwf	fsr2h,c
  7453  00297C  0E01               	movlw	1
  7454  00297E  6EDF               	movwf	indf2,c
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;../app/app_src/application.c: 258:         tx_buffer[buf_id].nwkDataReq.srcEndpoint = A
      +                          SCII_EP;
  7458  002980  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7459  002982  0D83               	mullw	131
  7460  002984  0E75               	movlw	low (_tx_buffer+11)
  7461  002986  24F3               	addwf	243,w,c
  7462  002988  6ED9               	movwf	fsr2l,c
  7463  00298A  0E08               	movlw	high (_tx_buffer+11)
  7464  00298C  20F4               	addwfc	prodh,w,c
  7465  00298E  6EDA               	movwf	fsr2h,c
  7466  002990  0E01               	movlw	1
  7467  002992  6EDF               	movwf	indf2,c
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;../app/app_src/application.c: 259:         tx_buffer[buf_id].nwkDataReq.options = NWK_O
      +                          PT_ACK_REQUEST;
  7471  002994  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7472  002996  0D83               	mullw	131
  7473  002998  0E76               	movlw	low (_tx_buffer+12)
  7474  00299A  24F3               	addwf	243,w,c
  7475  00299C  6ED9               	movwf	fsr2l,c
  7476  00299E  0E08               	movlw	high (_tx_buffer+12)
  7477  0029A0  20F4               	addwfc	prodh,w,c
  7478  0029A2  6EDA               	movwf	fsr2h,c
  7479  0029A4  0E01               	movlw	1
  7480  0029A6  6EDF               	movwf	indf2,c
  7481                           
  7482                           ; BSR set to: 0
  7483                           ;../app/app_src/application.c: 260:         tx_buffer[buf_id].nwkDataReq.data = &tx_buff
      +                          er[buf_id].payload;
  7484  0029A8  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7485  0029AA  0D83               	mullw	131
  7486  0029AC  0E80               	movlw	low (_tx_buffer+22)
  7487  0029AE  24F3               	addwf	243,w,c
  7488  0029B0  6E5A               	movwf	??_cmdSend^0,c
  7489  0029B2  0E08               	movlw	high (_tx_buffer+22)
  7490  0029B4  20F4               	addwfc	prodh,w,c
  7491  0029B6  6E5B               	movwf	(??_cmdSend+1)^0,c
  7492  0029B8  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7493  0029BA  0D83               	mullw	131
  7494  0029BC  0E79               	movlw	low (_tx_buffer+15)
  7495  0029BE  24F3               	addwf	243,w,c
  7496  0029C0  6ED9               	movwf	fsr2l,c
  7497  0029C2  0E08               	movlw	high (_tx_buffer+15)
  7498  0029C4  20F4               	addwfc	prodh,w,c
  7499  0029C6  6EDA               	movwf	fsr2h,c
  7500  0029C8  0060  F16B  FFDE   	movff	??_cmdSend,postinc2
  7501  0029CE  0060  F16F  FFDD   	movff	??_cmdSend+1,postdec2
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;../app/app_src/application.c: 261:         tx_buffer[buf_id].nwkDataReq.size = strlen(p
      +                          1);
  7505  0029D4  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7506  0029D6  0D83               	mullw	131
  7507  0029D8  0E7B               	movlw	low (_tx_buffer+17)
  7508  0029DA  24F3               	addwf	243,w,c
  7509  0029DC  6ED9               	movwf	fsr2l,c
  7510  0029DE  0E08               	movlw	high (_tx_buffer+17)
  7511  0029E0  20F4               	addwfc	prodh,w,c
  7512  0029E2  6EDA               	movwf	fsr2h,c
  7513  0029E4  0060  F220  F002   	movff	cmdSend@p1,strlen@s
  7514  0029EA  0060  F224  F003   	movff	cmdSend@p1+1,strlen@s+1
  7515  0029F0  EC7E  F03F         	call	_strlen	;wreg free
  7516  0029F4  5002               	movf	?_strlen^0,w,c
  7517  0029F6  6EDF               	movwf	indf2,c
  7518                           
  7519                           ;../app/app_src/application.c: 262:         tx_buffer[buf_id].nwkDataReq.confirm = appDa
      +                          taConf;
  7520  0029F8  0100               	movlb	0	; () banked
  7521  0029FA  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7522  0029FC  0D83               	mullw	131
  7523  0029FE  0E7C               	movlw	low (_tx_buffer+18)
  7524  002A00  24F3               	addwf	243,w,c
  7525  002A02  6ED9               	movwf	fsr2l,c
  7526  002A04  0E08               	movlw	high (_tx_buffer+18)
  7527  002A06  20F4               	addwfc	prodh,w,c
  7528  002A08  6EDA               	movwf	fsr2h,c
  7529  002A0A  0ECC               	movlw	low _appDataConf
  7530  002A0C  6EDE               	movwf	postinc2,c
  7531  002A0E  0E8B               	movlw	high _appDataConf
  7532  002A10  6EDD               	movwf	postdec2,c
  7533                           
  7534                           ; BSR set to: 0
  7535                           ;../app/app_src/application.c: 263:         tx_buffer[buf_id].msgid = msgIDCounter++;
  7536  002A12  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7537  002A14  0D83               	mullw	131
  7538  002A16  0E6C               	movlw	low (_tx_buffer+2)
  7539  002A18  24F3               	addwf	243,w,c
  7540  002A1A  6ED9               	movwf	fsr2l,c
  7541  002A1C  0E08               	movlw	high (_tx_buffer+2)
  7542  002A1E  20F4               	addwfc	prodh,w,c
  7543  002A20  6EDA               	movwf	fsr2h,c
  7544  002A22  0060  F36F  FFDF   	movff	_msgIDCounter,indf2
  7545                           
  7546                           ; BSR set to: 0
  7547  002A28  2BDB               	incf	_msgIDCounter& (0+255),f,b
  7548                           
  7549                           ; BSR set to: 0
  7550                           ;../app/app_src/application.c: 264:         NWK_DataReq(&tx_buffer[buf_id].nwkDataReq);
  7551  002A2A  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7552  002A2C  0D83               	mullw	131
  7553  002A2E  0E6D               	movlw	low (_tx_buffer+3)
  7554  002A30  24F3               	addwf	243,w,c
  7555  002A32  6E02               	movwf	NWK_DataReq@req^0,c
  7556  002A34  0E08               	movlw	high (_tx_buffer+3)
  7557  002A36  20F4               	addwfc	prodh,w,c
  7558  002A38  6E03               	movwf	(NWK_DataReq@req+1)^0,c
  7559  002A3A  EC78  F03A         	call	_NWK_DataReq	;wreg free
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;../app/app_src/application.c: 265:   printf("OK:%u\r\n", tx_buffer[buf_id].msgid);
  7563  002A3E  0EC9               	movlw	low (STR_3+4)
  7564  002A40  6F75               	movwf	printf@fmt& (0+255),b
  7565  002A42  0EFE               	movlw	high (STR_3+4)
  7566  002A44  6F76               	movwf	(printf@fmt+1)& (0+255),b
  7567  002A46  518A               	movf	cmdSend@buf_id& (0+255),w,b
  7568  002A48  0D83               	mullw	131
  7569  002A4A  0E6C               	movlw	low (_tx_buffer+2)
  7570  002A4C  24F3               	addwf	243,w,c
  7571  002A4E  6ED9               	movwf	fsr2l,c
  7572  002A50  0E08               	movlw	high (_tx_buffer+2)
  7573  002A52  20F4               	addwfc	prodh,w,c
  7574  002A54  6EDA               	movwf	fsr2h,c
  7575  002A56  50DF               	movf	indf2,w,c
  7576  002A58  6E5A               	movwf	??_cmdSend^0,c
  7577  002A5A  505A               	movf	??_cmdSend^0,w,c
  7578  002A5C  6F77               	movwf	(?_printf+2)& (0+255),b
  7579  002A5E  6B78               	clrf	(?_printf+3)& (0+255),b
  7580  002A60  ECC4  F045         	call	_printf	;wreg free
  7581                           
  7582                           ; BSR set to: 0
  7583  002A64  0012               	return		;funcret
  7584  002A66                     __end_of_cmdSend:
  7585                           	opt callstack 0
  7586                           
  7587 ;; *************** function _strtoul *****************
  7588 ;; Defined at:
  7589 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strtoul.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;  s               2   51[COMRAM] PTR const unsigned char 
  7592 ;;		 -> STR_58(2), STR_57(2), cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), 
  7593 ;;		 -> cmdSetAES@temp(3), atCommand(80), NULL(0), cmdSend@destaddr(5), 
  7594 ;;  endptr          2   53[COMRAM] PTR PTR unsigned char 
  7595 ;;		 -> cmdSetTX@p2(2), cmdSetRFCH@p2(2), cmdSetAES@p2(2), NULL(0), 
  7596 ;;		 -> cmdSend@p2(2), 
  7597 ;;  base            2   55[COMRAM] int 
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;		None
  7600 ;; Return value:  Size  Location     Type
  7601 ;;                  4   51[COMRAM] unsigned long 
  7602 ;; Registers used:
  7603 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7604 ;; Tracked objects:
  7605 ;;		On entry : 0/0
  7606 ;;		On exit  : 0/0
  7607 ;;		Unchanged: 0/0
  7608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7609 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7612 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7613 ;;Total ram usage:        6 bytes
  7614 ;; Hardware stack levels used:    1
  7615 ;; Hardware stack levels required when called:   10
  7616 ;; This function calls:
  7617 ;;		___strtoxl
  7618 ;; This function is called by:
  7619 ;;		_cmdSend
  7620 ;;		_cmdSetAddr
  7621 ;;		_cmdSetNaddr
  7622 ;;		_cmdSetAES
  7623 ;;		_cmdSetRFCH
  7624 ;;		_cmdSetTX
  7625 ;;		_cmdSetBaud
  7626 ;; This function uses a non-reentrant model
  7627 ;;
  7628                           
  7629                           	psect	text28
  7630  008112                     __ptext28:
  7631                           	opt callstack 0
  7632  008112                     _strtoul:
  7633                           	opt callstack 17
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;incstack = 0
  7637  008112  0060  F0D0  F010   	movff	strtoul@s,___strtoxl@s
  7638  008118  0060  F0D4  F011   	movff	strtoul@s+1,___strtoxl@s+1
  7639  00811E  0060  F0D8  F012   	movff	strtoul@endptr,___strtoxl@endptr
  7640  008124  0060  F0DC  F013   	movff	strtoul@endptr+1,___strtoxl@endptr+1
  7641  00812A  0060  F0E0  F014   	movff	strtoul@base,___strtoxl@base
  7642  008130  0060  F0E4  F015   	movff	strtoul@base+1,___strtoxl@base+1
  7643  008136  0E00               	movlw	0
  7644  008138  6E16               	movwf	___strtoxl@is_signed^0,c
  7645  00813A  EC5D  F005         	call	___strtoxl	;wreg free
  7646  00813E  0060  F040  F034   	movff	?___strtoxl,?_strtoul
  7647  008144  0060  F044  F035   	movff	?___strtoxl+1,?_strtoul+1
  7648  00814A  0060  F048  F036   	movff	?___strtoxl+2,?_strtoul+2
  7649  008150  0060  F04C  F037   	movff	?___strtoxl+3,?_strtoul+3
  7650  008156  0012               	return		;funcret
  7651  008158                     __end_of_strtoul:
  7652                           	opt callstack 0
  7653                           
  7654 ;; *************** function ___strtoxl *****************
  7655 ;; Defined at:
  7656 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__strtoxl.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  s               2   15[COMRAM] PTR const unsigned char 
  7659 ;;		 -> cmdSetSF@CHstr(3), STR_58(2), STR_57(2), cmdSetCADRSSI@CHstr(3), 
  7660 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7661 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7662 ;;  endptr          2   17[COMRAM] PTR PTR unsigned char 
  7663 ;;		 -> cmdSetSF@p2(2), cmdSetCADRSSI@p2(2), cmdSetTX@p2(2), cmdSetRFCH@p2(2), 
  7664 ;;		 -> cmdSetAES@p2(2), NULL(0), cmdSend@p2(2), 
  7665 ;;  base            2   19[COMRAM] int 
  7666 ;;  is_signed       1   21[COMRAM] unsigned char 
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;  a               4   44[COMRAM] unsigned long 
  7669 ;;  limit           4   38[COMRAM] unsigned long 
  7670 ;;  prev_a          4   26[COMRAM] unsigned long 
  7671 ;;  cp              2   48[COMRAM] PTR const unsigned char 
  7672 ;;		 -> cmdSetSF@CHstr(3), STR_58(2), STR_57(2), cmdSetCADRSSI@CHstr(3), 
  7673 ;;		 -> cmdSetTX@CHstr(3), cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), atCommand(80), 
  7674 ;;		 -> NULL(0), cmdSend@destaddr(5), 
  7675 ;;  c               1   50[COMRAM] unsigned char 
  7676 ;;  skip            1   43[COMRAM] unsigned char 
  7677 ;;  sign            1   42[COMRAM] unsigned char 
  7678 ;;  conv_done       1   37[COMRAM] unsigned char 
  7679 ;; Return value:  Size  Location     Type
  7680 ;;                  4   15[COMRAM] unsigned long 
  7681 ;; Registers used:
  7682 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7683 ;; Tracked objects:
  7684 ;;		On entry : 0/0
  7685 ;;		On exit  : 0/0
  7686 ;;		Unchanged: 0/0
  7687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7688 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7689 ;;      Locals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7690 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7691 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7692 ;;Total ram usage:       36 bytes
  7693 ;; Hardware stack levels used:    1
  7694 ;; Hardware stack levels required when called:    9
  7695 ;; This function calls:
  7696 ;;		___lmul
  7697 ;;		_isalpha
  7698 ;;		_isdigit
  7699 ;;		_isspace
  7700 ;;		_toupper
  7701 ;; This function is called by:
  7702 ;;		_strtol
  7703 ;;		_strtoul
  7704 ;; This function uses a non-reentrant model
  7705 ;;
  7706                           
  7707                           	psect	text29
  7708  000ABA                     __ptext29:
  7709                           	opt callstack 0
  7710  000ABA                     ___strtoxl:
  7711                           	opt callstack 17
  7712                           
  7713                           ;incstack = 0
  7714  000ABA  0E00               	movlw	0
  7715  000ABC  6E2D               	movwf	___strtoxl@a^0,c
  7716  000ABE  0E00               	movlw	0
  7717  000AC0  6E2E               	movwf	(___strtoxl@a+1)^0,c
  7718  000AC2  0E00               	movlw	0
  7719  000AC4  6E2F               	movwf	(___strtoxl@a+2)^0,c
  7720  000AC6  0E00               	movlw	0
  7721  000AC8  6E30               	movwf	(___strtoxl@a+3)^0,c
  7722  000ACA  0060  F040  F031   	movff	___strtoxl@s,___strtoxl@cp
  7723  000AD0  0060  F044  F032   	movff	___strtoxl@s+1,___strtoxl@cp+1
  7724  000AD6  5031               	movf	___strtoxl@cp^0,w,c
  7725  000AD8  1032               	iorwf	(___strtoxl@cp+1)^0,w,c
  7726  000ADA  B4D8               	btfsc	status,2,c
  7727  000ADC  D1DF               	goto	l15306
  7728  000ADE  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7729  000AE4  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7730  000AEA  0E00               	movlw	low (__mediumconst shr (0+16))
  7731  000AEC  6EF8               	movwf	tblptru,c
  7732  000AEE  0E0F               	movlw	(high __ramtop+-1)
  7733  000AF0  64F7               	cpfsgt	tblptrh,c
  7734  000AF2  D003               	bra	u14887
  7735  000AF4  0008               	tblrd		*
  7736  000AF6  50F5               	movf	tablat,w,c
  7737  000AF8  D007               	bra	u14880
  7738  000AFA                     u14887:
  7739  000AFA  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7740  000B00  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7741  000B06  50EF               	movf	indf0,w,c
  7742  000B08                     u14880:
  7743  000B08  0900               	iorlw	0
  7744  000B0A  B4D8               	btfsc	status,2,c
  7745  000B0C  D1C7               	goto	l15306
  7746  000B0E  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7747  000B14  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7748  000B1A  0E00               	movlw	low (__mediumconst shr (0+16))
  7749  000B1C  6EF8               	movwf	tblptru,c
  7750  000B1E  0E0F               	movlw	(high __ramtop+-1)
  7751  000B20  64F7               	cpfsgt	tblptrh,c
  7752  000B22  D003               	bra	u14907
  7753  000B24  0008               	tblrd		*
  7754  000B26  50F5               	movf	tablat,w,c
  7755  000B28  D007               	bra	u14900
  7756  000B2A                     u14907:
  7757  000B2A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7758  000B30  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7759  000B36  50EF               	movf	indf0,w,c
  7760  000B38                     u14900:
  7761  000B38  D017               	goto	u14910
  7762  000B3A                     l15204:
  7763  000B3A  4A31               	infsnz	___strtoxl@cp^0,f,c
  7764  000B3C  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7765  000B3E  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7766  000B44  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7767  000B4A  0E00               	movlw	low (__mediumconst shr (0+16))
  7768  000B4C  6EF8               	movwf	tblptru,c
  7769  000B4E  0E0F               	movlw	(high __ramtop+-1)
  7770  000B50  64F7               	cpfsgt	tblptrh,c
  7771  000B52  D003               	bra	u14917
  7772  000B54  0008               	tblrd		*
  7773  000B56  50F5               	movf	tablat,w,c
  7774  000B58  D007               	bra	u14910
  7775  000B5A                     u14917:
  7776  000B5A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7777  000B60  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7778  000B66  50EF               	movf	indf0,w,c
  7779  000B68                     u14910:
  7780  000B68  6E33               	movwf	___strtoxl@c^0,c
  7781  000B6A  0E01               	movlw	1
  7782  000B6C  6E25               	movwf	___strtoxl$8050^0,c
  7783  000B6E  0E20               	movlw	32
  7784  000B70  1833               	xorwf	___strtoxl@c^0,w,c
  7785  000B72  B4D8               	btfsc	status,2,c
  7786  000B74  D013               	goto	l15214
  7787  000B76  0EF7               	movlw	247
  7788  000B78  6E17               	movwf	??___strtoxl^0,c
  7789  000B7A  0EFF               	movlw	255
  7790  000B7C  6E18               	movwf	(??___strtoxl+1)^0,c
  7791  000B7E  5033               	movf	___strtoxl@c^0,w,c
  7792  000B80  6E19               	movwf	(??___strtoxl+2)^0,c
  7793  000B82  6A1A               	clrf	(??___strtoxl+3)^0,c
  7794  000B84  5017               	movf	??___strtoxl^0,w,c
  7795  000B86  2619               	addwf	(??___strtoxl+2)^0,f,c
  7796  000B88  5018               	movf	(??___strtoxl+1)^0,w,c
  7797  000B8A  221A               	addwfc	(??___strtoxl+3)^0,f,c
  7798  000B8C  501A               	movf	(??___strtoxl+3)^0,w,c
  7799  000B8E  E104               	bnz	u14930
  7800  000B90  0E05               	movlw	5
  7801  000B92  5C19               	subwf	(??___strtoxl+2)^0,w,c
  7802  000B94  A0D8               	btfss	status,0,c
  7803  000B96  D002               	goto	l15214
  7804  000B98                     u14930:
  7805  000B98  0E00               	movlw	0
  7806  000B9A  6E25               	movwf	___strtoxl$8050^0,c
  7807  000B9C                     l15214:
  7808  000B9C  0060  F094  F01F   	movff	___strtoxl$8050,___strtoxl$8049
  7809  000BA2  6A20               	clrf	(___strtoxl$8049+1)^0,c
  7810  000BA4  501F               	movf	___strtoxl$8049^0,w,c
  7811  000BA6  1020               	iorwf	(___strtoxl$8049+1)^0,w,c
  7812  000BA8  A4D8               	btfss	status,2,c
  7813  000BAA  D7C7               	goto	l15204
  7814  000BAC  0E00               	movlw	0
  7815  000BAE  6E2B               	movwf	___strtoxl@sign^0,c
  7816  000BB0  0E00               	movlw	0
  7817  000BB2  6E26               	movwf	___strtoxl@conv_done^0,c
  7818  000BB4  0E00               	movlw	0
  7819  000BB6  6E2C               	movwf	___strtoxl@skip^0,c
  7820  000BB8  0E2D               	movlw	45
  7821  000BBA  1833               	xorwf	___strtoxl@c^0,w,c
  7822  000BBC  A4D8               	btfss	status,2,c
  7823  000BBE  D01B               	goto	l15228
  7824  000BC0  0E01               	movlw	1
  7825  000BC2  6E2B               	movwf	___strtoxl@sign^0,c
  7826  000BC4                     l15226:
  7827  000BC4  4A31               	infsnz	___strtoxl@cp^0,f,c
  7828  000BC6  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7829  000BC8  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7830  000BCE  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7831  000BD4  0E00               	movlw	low (__mediumconst shr (0+16))
  7832  000BD6  6EF8               	movwf	tblptru,c
  7833  000BD8  0E0F               	movlw	(high __ramtop+-1)
  7834  000BDA  64F7               	cpfsgt	tblptrh,c
  7835  000BDC  D003               	bra	u14967
  7836  000BDE  0008               	tblrd		*
  7837  000BE0  50F5               	movf	tablat,w,c
  7838  000BE2  D007               	bra	u14960
  7839  000BE4                     u14967:
  7840  000BE4  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7841  000BEA  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7842  000BF0  50EF               	movf	indf0,w,c
  7843  000BF2                     u14960:
  7844  000BF2  6E33               	movwf	___strtoxl@c^0,c
  7845  000BF4  D004               	goto	l15232
  7846  000BF6                     l15228:
  7847  000BF6  0E2B               	movlw	43
  7848  000BF8  1833               	xorwf	___strtoxl@c^0,w,c
  7849  000BFA  B4D8               	btfsc	status,2,c
  7850  000BFC  D7E3               	goto	l15226
  7851  000BFE                     l15232:
  7852  000BFE  0E30               	movlw	48
  7853  000C00  1833               	xorwf	___strtoxl@c^0,w,c
  7854  000C02  A4D8               	btfss	status,2,c
  7855  000C04  D050               	goto	l15254
  7856  000C06  4A31               	infsnz	___strtoxl@cp^0,f,c
  7857  000C08  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7858  000C0A  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7859  000C10  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7860  000C16  0E00               	movlw	low (__mediumconst shr (0+16))
  7861  000C18  6EF8               	movwf	tblptru,c
  7862  000C1A  0E0F               	movlw	(high __ramtop+-1)
  7863  000C1C  64F7               	cpfsgt	tblptrh,c
  7864  000C1E  D003               	bra	u14997
  7865  000C20  0008               	tblrd		*
  7866  000C22  50F5               	movf	tablat,w,c
  7867  000C24  D007               	bra	u14990
  7868  000C26                     u14997:
  7869  000C26  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7870  000C2C  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7871  000C32  50EF               	movf	indf0,w,c
  7872  000C34                     u14990:
  7873  000C34  6E33               	movwf	___strtoxl@c^0,c
  7874  000C36  5014               	movf	___strtoxl@base^0,w,c
  7875  000C38  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7876  000C3A  B4D8               	btfsc	status,2,c
  7877  000C3C  D005               	goto	u15010
  7878  000C3E  0E10               	movlw	16
  7879  000C40  1814               	xorwf	___strtoxl@base^0,w,c
  7880  000C42  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7881  000C44  A4D8               	btfss	status,2,c
  7882  000C46  D025               	goto	l15248
  7883  000C48                     u15010:
  7884  000C48  0E78               	movlw	120
  7885  000C4A  1833               	xorwf	___strtoxl@c^0,w,c
  7886  000C4C  B4D8               	btfsc	status,2,c
  7887  000C4E  D004               	goto	u15030
  7888  000C50  0E58               	movlw	88
  7889  000C52  1833               	xorwf	___strtoxl@c^0,w,c
  7890  000C54  A4D8               	btfss	status,2,c
  7891  000C56  D01D               	goto	l15248
  7892  000C58                     u15030:
  7893  000C58  0E00               	movlw	0
  7894  000C5A  6E15               	movwf	(___strtoxl@base+1)^0,c
  7895  000C5C  0E10               	movlw	16
  7896  000C5E  6E14               	movwf	___strtoxl@base^0,c
  7897  000C60  4A31               	infsnz	___strtoxl@cp^0,f,c
  7898  000C62  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  7899  000C64  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  7900  000C6A  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  7901  000C70  0E00               	movlw	low (__mediumconst shr (0+16))
  7902  000C72  6EF8               	movwf	tblptru,c
  7903  000C74  0E0F               	movlw	(high __ramtop+-1)
  7904  000C76  64F7               	cpfsgt	tblptrh,c
  7905  000C78  D003               	bra	u15047
  7906  000C7A  0008               	tblrd		*
  7907  000C7C  50F5               	movf	tablat,w,c
  7908  000C7E  D007               	bra	u15040
  7909  000C80                     u15047:
  7910  000C80  006F FFDB FFE9     	movff	tblptrl,fsr0l
  7911  000C86  006F FFDF FFEA     	movff	tblptrh,fsr0h
  7912  000C8C  50EF               	movf	indf0,w,c
  7913  000C8E                     u15040:
  7914  000C8E  6E33               	movwf	___strtoxl@c^0,c
  7915  000C90  D00A               	goto	l15254
  7916  000C92                     l15248:
  7917  000C92  0E01               	movlw	1
  7918  000C94  6E26               	movwf	___strtoxl@conv_done^0,c
  7919  000C96  5014               	movf	___strtoxl@base^0,w,c
  7920  000C98  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7921  000C9A  A4D8               	btfss	status,2,c
  7922  000C9C  D004               	goto	l15254
  7923  000C9E  0E00               	movlw	0
  7924  000CA0  6E15               	movwf	(___strtoxl@base+1)^0,c
  7925  000CA2  0E08               	movlw	8
  7926  000CA4  6E14               	movwf	___strtoxl@base^0,c
  7927  000CA6                     l15254:
  7928  000CA6  5014               	movf	___strtoxl@base^0,w,c
  7929  000CA8  1015               	iorwf	(___strtoxl@base+1)^0,w,c
  7930  000CAA  A4D8               	btfss	status,2,c
  7931  000CAC  D004               	goto	l4112
  7932  000CAE  0E00               	movlw	0
  7933  000CB0  6E15               	movwf	(___strtoxl@base+1)^0,c
  7934  000CB2  0E0A               	movlw	10
  7935  000CB4  6E14               	movwf	___strtoxl@base^0,c
  7936  000CB6                     l4112:
  7937  000CB6  5016               	movf	___strtoxl@is_signed^0,w,c
  7938  000CB8  B4D8               	btfsc	status,2,c
  7939  000CBA  D014               	goto	l4113
  7940  000CBC  502B               	movf	___strtoxl@sign^0,w,c
  7941  000CBE  A4D8               	btfss	status,2,c
  7942  000CC0  D008               	goto	l15262
  7943  000CC2  0EFF               	movlw	255
  7944  000CC4  6E27               	movwf	___strtoxl@limit^0,c
  7945  000CC6  0EFF               	movlw	255
  7946  000CC8  6E28               	movwf	(___strtoxl@limit+1)^0,c
  7947  000CCA  0EFF               	movlw	255
  7948  000CCC  6E29               	movwf	(___strtoxl@limit+2)^0,c
  7949  000CCE  0E7F               	movlw	127
  7950  000CD0  D007               	goto	L2
  7951  000CD2                     l15262:
  7952  000CD2  0E00               	movlw	0
  7953  000CD4  6E27               	movwf	___strtoxl@limit^0,c
  7954  000CD6  0E00               	movlw	0
  7955  000CD8  6E28               	movwf	(___strtoxl@limit+1)^0,c
  7956  000CDA  0E00               	movlw	0
  7957  000CDC  6E29               	movwf	(___strtoxl@limit+2)^0,c
  7958  000CDE  0E80               	movlw	128
  7959  000CE0                     L2:
  7960  000CE0  6E2A               	movwf	(___strtoxl@limit+3)^0,c
  7961  000CE2  D004               	goto	l4119
  7962  000CE4                     l4113:
  7963  000CE4  6827               	setf	___strtoxl@limit^0,c
  7964  000CE6  6828               	setf	(___strtoxl@limit+1)^0,c
  7965  000CE8  6829               	setf	(___strtoxl@limit+2)^0,c
  7966  000CEA  682A               	setf	(___strtoxl@limit+3)^0,c
  7967  000CEC                     l4119:
  7968  000CEC  0060  F0B4  F01B   	movff	___strtoxl@a,___strtoxl@prev_a
  7969  000CF2  0060  F0B8  F01C   	movff	___strtoxl@a+1,___strtoxl@prev_a+1
  7970  000CF8  0060  F0BC  F01D   	movff	___strtoxl@a+2,___strtoxl@prev_a+2
  7971  000CFE  0060  F0C0  F01E   	movff	___strtoxl@a+3,___strtoxl@prev_a+3
  7972  000D04  0E9F               	movlw	159
  7973  000D06  6E17               	movwf	??___strtoxl^0,c
  7974  000D08  0EFF               	movlw	255
  7975  000D0A  6E18               	movwf	(??___strtoxl+1)^0,c
  7976  000D0C  5033               	movf	___strtoxl@c^0,w,c
  7977  000D0E  6E19               	movwf	(??___strtoxl+2)^0,c
  7978  000D10  6A1A               	clrf	(??___strtoxl+3)^0,c
  7979  000D12  0E20               	movlw	32
  7980  000D14  1219               	iorwf	(??___strtoxl+2)^0,f,c
  7981  000D16  0E00               	movlw	0
  7982  000D18  121A               	iorwf	(??___strtoxl+3)^0,f,c
  7983  000D1A  5017               	movf	??___strtoxl^0,w,c
  7984  000D1C  2619               	addwf	(??___strtoxl+2)^0,f,c
  7985  000D1E  5018               	movf	(??___strtoxl+1)^0,w,c
  7986  000D20  221A               	addwfc	(??___strtoxl+3)^0,f,c
  7987  000D22  501A               	movf	(??___strtoxl+3)^0,w,c
  7988  000D24  E106               	bnz	u15090
  7989  000D26  0E1A               	movlw	26
  7990  000D28  5C19               	subwf	(??___strtoxl+2)^0,w,c
  7991  000D2A  B0D8               	btfsc	status,0,c
  7992  000D2C  D002               	goto	u15090
  7993  000D2E  0E01               	movlw	1
  7994  000D30  D001               	goto	u15100
  7995  000D32                     u15090:
  7996  000D32  0E00               	movlw	0
  7997  000D34                     u15100:
  7998  000D34  6E21               	movwf	___strtoxl$8051^0,c
  7999  000D36  6A22               	clrf	(___strtoxl$8051+1)^0,c
  8000  000D38  5021               	movf	___strtoxl$8051^0,w,c
  8001  000D3A  1022               	iorwf	(___strtoxl$8051+1)^0,w,c
  8002  000D3C  B4D8               	btfsc	status,2,c
  8003  000D3E  D00A               	goto	l15272
  8004  000D40  0060  F0CC  F008   	movff	___strtoxl@c,toupper@c
  8005  000D46  6A09               	clrf	(toupper@c+1)^0,c
  8006  000D48  EC55  F03F         	call	_toupper	;wreg free
  8007  000D4C  5008               	movf	?_toupper^0,w,c
  8008  000D4E  0FC9               	addlw	201
  8009  000D50  6E33               	movwf	___strtoxl@c^0,c
  8010  000D52  D01C               	goto	l15280
  8011  000D54                     l15272:
  8012  000D54  0ED0               	movlw	208
  8013  000D56  6E17               	movwf	??___strtoxl^0,c
  8014  000D58  0EFF               	movlw	255
  8015  000D5A  6E18               	movwf	(??___strtoxl+1)^0,c
  8016  000D5C  5033               	movf	___strtoxl@c^0,w,c
  8017  000D5E  6E19               	movwf	(??___strtoxl+2)^0,c
  8018  000D60  6A1A               	clrf	(??___strtoxl+3)^0,c
  8019  000D62  5017               	movf	??___strtoxl^0,w,c
  8020  000D64  2619               	addwf	(??___strtoxl+2)^0,f,c
  8021  000D66  5018               	movf	(??___strtoxl+1)^0,w,c
  8022  000D68  221A               	addwfc	(??___strtoxl+3)^0,f,c
  8023  000D6A  501A               	movf	(??___strtoxl+3)^0,w,c
  8024  000D6C  E106               	bnz	u15120
  8025  000D6E  0E0A               	movlw	10
  8026  000D70  5C19               	subwf	(??___strtoxl+2)^0,w,c
  8027  000D72  B0D8               	btfsc	status,0,c
  8028  000D74  D002               	goto	u15120
  8029  000D76  0E01               	movlw	1
  8030  000D78  D001               	goto	u15130
  8031  000D7A                     u15120:
  8032  000D7A  0E00               	movlw	0
  8033  000D7C                     u15130:
  8034  000D7C  6E23               	movwf	___strtoxl$8052^0,c
  8035  000D7E  6A24               	clrf	(___strtoxl$8052+1)^0,c
  8036  000D80  5023               	movf	___strtoxl$8052^0,w,c
  8037  000D82  1024               	iorwf	(___strtoxl$8052+1)^0,w,c
  8038  000D84  B4D8               	btfsc	status,2,c
  8039  000D86  D07C               	goto	l15300
  8040  000D88  0E30               	movlw	48
  8041  000D8A  5E33               	subwf	___strtoxl@c^0,f,c
  8042  000D8C                     l15280:
  8043  000D8C  5033               	movf	___strtoxl@c^0,w,c
  8044  000D8E  6E17               	movwf	??___strtoxl^0,c
  8045  000D90  6A18               	clrf	(??___strtoxl+1)^0,c
  8046  000D92  5014               	movf	___strtoxl@base^0,w,c
  8047  000D94  5C17               	subwf	??___strtoxl^0,w,c
  8048  000D96  5018               	movf	(??___strtoxl+1)^0,w,c
  8049  000D98  0A80               	xorlw	128
  8050  000D9A  6E19               	movwf	(??___strtoxl+2)^0,c
  8051  000D9C  5015               	movf	(___strtoxl@base+1)^0,w,c
  8052  000D9E  0A80               	xorlw	128
  8053  000DA0  5819               	subwfb	(??___strtoxl+2)^0,w,c
  8054  000DA2  B0D8               	btfsc	status,0,c
  8055  000DA4  D06D               	goto	l15300
  8056  000DA6  502C               	movf	___strtoxl@skip^0,w,c
  8057  000DA8  A4D8               	btfss	status,2,c
  8058  000DAA  D04F               	goto	l15296
  8059  000DAC  0060  F050  F002   	movff	___strtoxl@base,___lmul@multiplier
  8060  000DB2  0060  F054  F003   	movff	___strtoxl@base+1,___lmul@multiplier+1
  8061  000DB8  0E00               	movlw	0
  8062  000DBA  BE03               	btfsc	(___lmul@multiplier+1)^0,7,c
  8063  000DBC  0EFF               	movlw	-1
  8064  000DBE  6E04               	movwf	(___lmul@multiplier+2)^0,c
  8065  000DC0  6E05               	movwf	(___lmul@multiplier+3)^0,c
  8066  000DC2  0060  F0B4  F006   	movff	___strtoxl@a,___lmul@multiplicand
  8067  000DC8  0060  F0B8  F007   	movff	___strtoxl@a+1,___lmul@multiplicand+1
  8068  000DCE  0060  F0BC  F008   	movff	___strtoxl@a+2,___lmul@multiplicand+2
  8069  000DD4  0060  F0C0  F009   	movff	___strtoxl@a+3,___lmul@multiplicand+3
  8070  000DDA  ECF3  F03D         	call	___lmul	;wreg free
  8071  000DDE  5033               	movf	___strtoxl@c^0,w,c
  8072  000DE0  2402               	addwf	?___lmul^0,w,c
  8073  000DE2  6E2D               	movwf	___strtoxl@a^0,c
  8074  000DE4  0E00               	movlw	0
  8075  000DE6  2003               	addwfc	(?___lmul+1)^0,w,c
  8076  000DE8  6E2E               	movwf	(___strtoxl@a+1)^0,c
  8077  000DEA  0E00               	movlw	0
  8078  000DEC  2004               	addwfc	(?___lmul+2)^0,w,c
  8079  000DEE  6E2F               	movwf	(___strtoxl@a+2)^0,c
  8080  000DF0  0E00               	movlw	0
  8081  000DF2  2005               	addwfc	(?___lmul+3)^0,w,c
  8082  000DF4  6E30               	movwf	(___strtoxl@a+3)^0,c
  8083  000DF6  501B               	movf	___strtoxl@prev_a^0,w,c
  8084  000DF8  5C2D               	subwf	___strtoxl@a^0,w,c
  8085  000DFA  501C               	movf	(___strtoxl@prev_a+1)^0,w,c
  8086  000DFC  582E               	subwfb	(___strtoxl@a+1)^0,w,c
  8087  000DFE  501D               	movf	(___strtoxl@prev_a+2)^0,w,c
  8088  000E00  582F               	subwfb	(___strtoxl@a+2)^0,w,c
  8089  000E02  501E               	movf	(___strtoxl@prev_a+3)^0,w,c
  8090  000E04  5830               	subwfb	(___strtoxl@a+3)^0,w,c
  8091  000E06  A0D8               	btfss	status,0,c
  8092  000E08  D00D               	goto	u15190
  8093  000E0A  5016               	movf	___strtoxl@is_signed^0,w,c
  8094  000E0C  B4D8               	btfsc	status,2,c
  8095  000E0E  D01D               	goto	l15296
  8096  000E10  502D               	movf	___strtoxl@a^0,w,c
  8097  000E12  5C27               	subwf	___strtoxl@limit^0,w,c
  8098  000E14  502E               	movf	(___strtoxl@a+1)^0,w,c
  8099  000E16  5828               	subwfb	(___strtoxl@limit+1)^0,w,c
  8100  000E18  502F               	movf	(___strtoxl@a+2)^0,w,c
  8101  000E1A  5829               	subwfb	(___strtoxl@limit+2)^0,w,c
  8102  000E1C  5030               	movf	(___strtoxl@a+3)^0,w,c
  8103  000E1E  582A               	subwfb	(___strtoxl@limit+3)^0,w,c
  8104  000E20  B0D8               	btfsc	status,0,c
  8105  000E22  D013               	goto	l15296
  8106  000E24                     u15190:
  8107  000E24  0060  F09C  F02D   	movff	___strtoxl@limit,___strtoxl@a
  8108  000E2A  0060  F0A0  F02E   	movff	___strtoxl@limit+1,___strtoxl@a+1
  8109  000E30  0060  F0A4  F02F   	movff	___strtoxl@limit+2,___strtoxl@a+2
  8110  000E36  0060  F0A8  F030   	movff	___strtoxl@limit+3,___strtoxl@a+3
  8111  000E3C  0E00               	movlw	0
  8112  000E3E  0101               	movlb	1	; () banked
  8113  000E40  6F46               	movwf	(_errno+1)& (0+255),b
  8114  000E42  0E22               	movlw	34
  8115  000E44  6F45               	movwf	_errno& (0+255),b
  8116  000E46  0E01               	movlw	1
  8117  000E48  6E2C               	movwf	___strtoxl@skip^0,c
  8118  000E4A                     l15296:
  8119  000E4A  4A31               	infsnz	___strtoxl@cp^0,f,c
  8120  000E4C  2A32               	incf	(___strtoxl@cp+1)^0,f,c
  8121  000E4E  0060  F0C7  FFF6   	movff	___strtoxl@cp,tblptrl
  8122  000E54  0060  F0CB  FFF7   	movff	___strtoxl@cp+1,tblptrh
  8123  000E5A  0E00               	movlw	low (__mediumconst shr (0+16))
  8124  000E5C  6EF8               	movwf	tblptru,c
  8125  000E5E  0E0F               	movlw	(high __ramtop+-1)
  8126  000E60  64F7               	cpfsgt	tblptrh,c
  8127  000E62  D003               	bra	u15207
  8128  000E64  0008               	tblrd		*
  8129  000E66  50F5               	movf	tablat,w,c
  8130  000E68  D007               	bra	u15200
  8131  000E6A                     u15207:
  8132  000E6A  006F FFDB FFE9     	movff	tblptrl,fsr0l
  8133  000E70  006F FFDF FFEA     	movff	tblptrh,fsr0h
  8134  000E76  50EF               	movf	indf0,w,c
  8135  000E78                     u15200:
  8136  000E78  6E33               	movwf	___strtoxl@c^0,c
  8137  000E7A  0E01               	movlw	1
  8138  000E7C  6E26               	movwf	___strtoxl@conv_done^0,c
  8139  000E7E  D736               	goto	l4119
  8140  000E80                     l15300:
  8141  000E80  502C               	movf	___strtoxl@skip^0,w,c
  8142  000E82  A4D8               	btfss	status,2,c
  8143  000E84  D00B               	goto	l15306
  8144  000E86  502B               	movf	___strtoxl@sign^0,w,c
  8145  000E88  B4D8               	btfsc	status,2,c
  8146  000E8A  D008               	goto	l15306
  8147  000E8C  1E30               	comf	(___strtoxl@a+3)^0,f,c
  8148  000E8E  1E2F               	comf	(___strtoxl@a+2)^0,f,c
  8149  000E90  1E2E               	comf	(___strtoxl@a+1)^0,f,c
  8150  000E92  6C2D               	negf	___strtoxl@a^0,c
  8151  000E94  0E00               	movlw	0
  8152  000E96  222E               	addwfc	(___strtoxl@a+1)^0,f,c
  8153  000E98  222F               	addwfc	(___strtoxl@a+2)^0,f,c
  8154  000E9A  2230               	addwfc	(___strtoxl@a+3)^0,f,c
  8155  000E9C                     l15306:
  8156  000E9C  5012               	movf	___strtoxl@endptr^0,w,c
  8157  000E9E  1013               	iorwf	(___strtoxl@endptr+1)^0,w,c
  8158  000EA0  B4D8               	btfsc	status,2,c
  8159  000EA2  D015               	goto	l15314
  8160  000EA4  5026               	movf	___strtoxl@conv_done^0,w,c
  8161  000EA6  A4D8               	btfss	status,2,c
  8162  000EA8  D006               	goto	l15312
  8163  000EAA  0060  F040  F031   	movff	___strtoxl@s,___strtoxl@cp
  8164  000EB0  0060  F044  F032   	movff	___strtoxl@s+1,___strtoxl@cp+1
  8165  000EB6                     l15312:
  8166  000EB6  0060  F04B  FFD9   	movff	___strtoxl@endptr,fsr2l
  8167  000EBC  0060  F04F  FFDA   	movff	___strtoxl@endptr+1,fsr2h
  8168  000EC2  0060  F0C7  FFDE   	movff	___strtoxl@cp,postinc2
  8169  000EC8  0060  F0CB  FFDD   	movff	___strtoxl@cp+1,postdec2
  8170  000ECE                     l15314:
  8171  000ECE  0060  F0B4  F010   	movff	___strtoxl@a,?___strtoxl
  8172  000ED4  0060  F0B8  F011   	movff	___strtoxl@a+1,?___strtoxl+1
  8173  000EDA  0060  F0BC  F012   	movff	___strtoxl@a+2,?___strtoxl+2
  8174  000EE0  0060  F0C0  F013   	movff	___strtoxl@a+3,?___strtoxl+3
  8175  000EE6  0012               	return		;funcret
  8176  000EE8                     __end_of___strtoxl:
  8177                           	opt callstack 0
  8178                           
  8179 ;; *************** function ___lmul *****************
  8180 ;; Defined at:
  8181 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  8182 ;; Parameters:    Size  Location     Type
  8183 ;;  multiplier      4    1[COMRAM] unsigned long 
  8184 ;;  multiplicand    4    5[COMRAM] unsigned long 
  8185 ;; Auto vars:     Size  Location     Type
  8186 ;;  product         4    9[COMRAM] unsigned long 
  8187 ;; Return value:  Size  Location     Type
  8188 ;;                  4    1[COMRAM] unsigned long 
  8189 ;; Registers used:
  8190 ;;		wreg, status,2, status,0
  8191 ;; Tracked objects:
  8192 ;;		On entry : 0/0
  8193 ;;		On exit  : 0/0
  8194 ;;		Unchanged: 0/0
  8195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8196 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8197 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8199 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8200 ;;Total ram usage:       12 bytes
  8201 ;; Hardware stack levels used:    1
  8202 ;; Hardware stack levels required when called:    7
  8203 ;; This function calls:
  8204 ;;		Nothing
  8205 ;; This function is called by:
  8206 ;;		___strtoxl
  8207 ;; This function uses a non-reentrant model
  8208 ;;
  8209                           
  8210                           	psect	text30
  8211  007BE6                     __ptext30:
  8212                           	opt callstack 0
  8213  007BE6                     ___lmul:
  8214                           	opt callstack 18
  8215                           
  8216                           ;incstack = 0
  8217  007BE6  0E00               	movlw	0
  8218  007BE8  6E0A               	movwf	___lmul@product^0,c
  8219  007BEA  0E00               	movlw	0
  8220  007BEC  6E0B               	movwf	(___lmul@product+1)^0,c
  8221  007BEE  0E00               	movlw	0
  8222  007BF0  6E0C               	movwf	(___lmul@product+2)^0,c
  8223  007BF2  0E00               	movlw	0
  8224  007BF4  6E0D               	movwf	(___lmul@product+3)^0,c
  8225  007BF6                     l14680:
  8226  007BF6  A002               	btfss	___lmul@multiplier^0,0,c
  8227  007BF8  D008               	goto	l14684
  8228  007BFA  5006               	movf	___lmul@multiplicand^0,w,c
  8229  007BFC  260A               	addwf	___lmul@product^0,f,c
  8230  007BFE  5007               	movf	(___lmul@multiplicand+1)^0,w,c
  8231  007C00  220B               	addwfc	(___lmul@product+1)^0,f,c
  8232  007C02  5008               	movf	(___lmul@multiplicand+2)^0,w,c
  8233  007C04  220C               	addwfc	(___lmul@product+2)^0,f,c
  8234  007C06  5009               	movf	(___lmul@multiplicand+3)^0,w,c
  8235  007C08  220D               	addwfc	(___lmul@product+3)^0,f,c
  8236  007C0A                     l14684:
  8237  007C0A  90D8               	bcf	status,0,c
  8238  007C0C  3606               	rlcf	___lmul@multiplicand^0,f,c
  8239  007C0E  3607               	rlcf	(___lmul@multiplicand+1)^0,f,c
  8240  007C10  3608               	rlcf	(___lmul@multiplicand+2)^0,f,c
  8241  007C12  3609               	rlcf	(___lmul@multiplicand+3)^0,f,c
  8242  007C14  90D8               	bcf	status,0,c
  8243  007C16  3205               	rrcf	(___lmul@multiplier+3)^0,f,c
  8244  007C18  3204               	rrcf	(___lmul@multiplier+2)^0,f,c
  8245  007C1A  3203               	rrcf	(___lmul@multiplier+1)^0,f,c
  8246  007C1C  3202               	rrcf	___lmul@multiplier^0,f,c
  8247  007C1E  5002               	movf	___lmul@multiplier^0,w,c
  8248  007C20  1003               	iorwf	(___lmul@multiplier+1)^0,w,c
  8249  007C22  1004               	iorwf	(___lmul@multiplier+2)^0,w,c
  8250  007C24  1005               	iorwf	(___lmul@multiplier+3)^0,w,c
  8251  007C26  A4D8               	btfss	status,2,c
  8252  007C28  D7E6               	goto	l14680
  8253  007C2A  0060  F028  F002   	movff	___lmul@product,?___lmul
  8254  007C30  0060  F02C  F003   	movff	___lmul@product+1,?___lmul+1
  8255  007C36  0060  F030  F004   	movff	___lmul@product+2,?___lmul+2
  8256  007C3C  0060  F034  F005   	movff	___lmul@product+3,?___lmul+3
  8257  007C42  0012               	return		;funcret
  8258  007C44                     __end_of___lmul:
  8259                           	opt callstack 0
  8260                           
  8261 ;; *************** function _cmdRstCAD *****************
  8262 ;; Defined at:
  8263 ;;		line 564 in file "../app/app_src/application.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;		None
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;		None
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  1    wreg      void 
  8270 ;; Registers used:
  8271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 3F/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8281 ;;Total ram usage:        0 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:   16
  8284 ;; This function calls:
  8285 ;;		_printf
  8286 ;; This function is called by:
  8287 ;;		_executeATCommand
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           	psect	text31
  8292  008F02                     __ptext31:
  8293                           	opt callstack 0
  8294  008F02                     _cmdRstCAD:
  8295                           	opt callstack 12
  8296                           
  8297                           ;../app/app_src/application.c: 565:  cadCounter = 0;
  8298                           
  8299                           ;incstack = 0
  8300  008F02  0E00               	movlw	0
  8301  008F04  0100               	movlb	0	; () banked
  8302  008F06  6FD4               	movwf	_cadCounter& (0+255),b
  8303                           
  8304                           ; BSR set to: 0
  8305                           ;../app/app_src/application.c: 566:  printf("OK\r\n");
  8306  008F08  0ED6               	movlw	low STR_12
  8307  008F0A  6F75               	movwf	printf@fmt& (0+255),b
  8308  008F0C  0EFF               	movlw	high STR_12
  8309  008F0E  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8310  008F10  ECC4  F045         	call	_printf	;wreg free
  8311                           
  8312                           ; BSR set to: 0
  8313  008F14  0012               	return		;funcret
  8314  008F16                     __end_of_cmdRstCAD:
  8315                           	opt callstack 0
  8316                           
  8317 ;; *************** function _cmdReset *****************
  8318 ;; Defined at:
  8319 ;;		line 704 in file "../app/app_src/application.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;		None
  8322 ;; Auto vars:     Size  Location     Type
  8323 ;;		None
  8324 ;; Return value:  Size  Location     Type
  8325 ;;                  1    wreg      void 
  8326 ;; Registers used:
  8327 ;;		None
  8328 ;; Tracked objects:
  8329 ;;		On entry : 0/0
  8330 ;;		On exit  : 0/0
  8331 ;;		Unchanged: 0/0
  8332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8337 ;;Total ram usage:        0 bytes
  8338 ;; Hardware stack levels used:    1
  8339 ;; Hardware stack levels required when called:    7
  8340 ;; This function calls:
  8341 ;;		Nothing
  8342 ;; This function is called by:
  8343 ;;		_executeATCommand
  8344 ;; This function uses a non-reentrant model
  8345 ;;
  8346                           
  8347                           	psect	text32
  8348  009096                     __ptext32:
  8349                           	opt callstack 0
  8350  009096                     _cmdReset:
  8351                           	opt callstack 21
  8352                           
  8353                           ; BSR set to: 0
  8354                           ;incstack = 0
  8355  009096  00FF               	reset		;# 
  8356  009098                     l388:
  8357  009098  D7FF               	goto	l388
  8358  00909A                     __end_of_cmdReset:
  8359                           	opt callstack 0
  8360                           
  8361 ;; *************** function _cmdRecv *****************
  8362 ;; Defined at:
  8363 ;;		line 379 in file "../app/app_src/application.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;		None
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;  i               1   89[COMRAM] unsigned char 
  8368 ;;  buf_id          1   90[COMRAM] unsigned char 
  8369 ;; Return value:  Size  Location     Type
  8370 ;;                  1    wreg      void 
  8371 ;; Registers used:
  8372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8373 ;; Tracked objects:
  8374 ;;		On entry : 0/0
  8375 ;;		On exit  : 3F/0
  8376 ;;		Unchanged: 0/0
  8377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8379 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8380 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8381 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8382 ;;Total ram usage:        4 bytes
  8383 ;; Hardware stack levels used:    1
  8384 ;; Hardware stack levels required when called:   16
  8385 ;; This function calls:
  8386 ;;		_CircularBufferEmpty
  8387 ;;		_CircularBufferPopFront
  8388 ;;		_printf
  8389 ;;		_putch
  8390 ;; This function is called by:
  8391 ;;		_executeATCommand
  8392 ;; This function uses a non-reentrant model
  8393 ;;
  8394                           
  8395                           	psect	text33
  8396  0051D6                     __ptext33:
  8397                           	opt callstack 0
  8398  0051D6                     _cmdRecv:
  8399                           	opt callstack 12
  8400                           
  8401                           ;../app/app_src/application.c: 381:     if(!CircularBufferEmpty(&rx_buffer_queue_context
      +                          )){
  8402                           
  8403                           ;incstack = 0
  8404  0051D6  0ED8               	movlw	low _rx_buffer_queue_context
  8405  0051D8  6E02               	movwf	CircularBufferEmpty@ctx^0,c
  8406  0051DA  0E01               	movlw	high _rx_buffer_queue_context
  8407  0051DC  6E03               	movwf	(CircularBufferEmpty@ctx+1)^0,c
  8408  0051DE  ECBF  F044         	call	_CircularBufferEmpty	;wreg free
  8409  0051E2  0900               	iorlw	0
  8410  0051E4  A4D8               	btfss	status,2,c
  8411  0051E6  D06B               	goto	l15916
  8412                           
  8413                           ;../app/app_src/application.c: 382:         uint8_t buf_id;;../app/app_src/application.c
      +                          : 383:         CircularBufferPopFront(&rx_buffer_queue_context, &buf_id);
  8414  0051E8  0ED8               	movlw	low _rx_buffer_queue_context
  8415  0051EA  6E13               	movwf	CircularBufferPopFront@ctx^0,c
  8416  0051EC  0E01               	movlw	high _rx_buffer_queue_context
  8417  0051EE  6E14               	movwf	(CircularBufferPopFront@ctx+1)^0,c
  8418  0051F0  0E5B               	movlw	low cmdRecv@buf_id
  8419  0051F2  6E15               	movwf	CircularBufferPopFront@val^0,c
  8420  0051F4  EC6B  F029         	call	_CircularBufferPopFront	;wreg free
  8421                           
  8422                           ;../app/app_src/application.c: 384:         if(!rx_buffer[buf_id].free){
  8423  0051F8  505B               	movf	cmdRecv@buf_id^0,w,c
  8424  0051FA  0D7A               	mullw	122
  8425  0051FC  0E76               	movlw	low _rx_buffer
  8426  0051FE  24F3               	addwf	243,w,c
  8427  005200  6ED9               	movwf	fsr2l,c
  8428  005202  0E0A               	movlw	high _rx_buffer
  8429  005204  20F4               	addwfc	prodh,w,c
  8430  005206  6EDA               	movwf	fsr2h,c
  8431  005208  B0DF               	btfsc	indf2,0,c
  8432  00520A  D04D               	goto	l15914
  8433                           
  8434                           ;../app/app_src/application.c: 385:             uint8_t i = 0;
  8435  00520C  0E00               	movlw	0
  8436  00520E  6E5A               	movwf	cmdRecv@i^0,c
  8437                           
  8438                           ;../app/app_src/application.c: 387:             printf("%04X:", rx_buffer[buf_id].rx_ind
      +                          .srcAddr);
  8439  005210  0EA7               	movlw	low STR_17
  8440  005212  0100               	movlb	0	; () banked
  8441  005214  6F75               	movwf	printf@fmt& (0+255),b
  8442  005216  0EFF               	movlw	high STR_17
  8443  005218  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8444  00521A  505B               	movf	cmdRecv@buf_id^0,w,c
  8445  00521C  0D7A               	mullw	122
  8446  00521E  0E77               	movlw	low (_rx_buffer+1)
  8447  005220  24F3               	addwf	243,w,c
  8448  005222  6ED9               	movwf	fsr2l,c
  8449  005224  0E0A               	movlw	high (_rx_buffer+1)
  8450  005226  20F4               	addwfc	prodh,w,c
  8451  005228  6EDA               	movwf	fsr2h,c
  8452  00522A  006F FF78  F077    	movff	postinc2,?_printf+2
  8453  005230  006F FF74  F078    	movff	postdec2,?_printf+3
  8454  005236  ECC4  F045         	call	_printf	;wreg free
  8455                           
  8456                           ;../app/app_src/application.c: 388:             while(rx_buffer[buf_id].rx_ind.size--){
  8457  00523A  D018               	goto	l15908
  8458  00523C                     l15904:
  8459                           
  8460                           ;../app/app_src/application.c: 389:                 putch(rx_buffer[buf_id].payload[i++]
      +                          );
  8461  00523C  505B               	movf	cmdRecv@buf_id^0,w,c
  8462  00523E  0D7A               	mullw	122
  8463  005240  0E76               	movlw	low _rx_buffer
  8464  005242  6E58               	movwf	??_cmdRecv^0,c
  8465  005244  0E0A               	movlw	high _rx_buffer
  8466  005246  6E59               	movwf	(??_cmdRecv+1)^0,c
  8467  005248  0E0D               	movlw	13
  8468  00524A  2658               	addwf	??_cmdRecv^0,f,c
  8469  00524C  0E00               	movlw	0
  8470  00524E  2259               	addwfc	(??_cmdRecv+1)^0,f,c
  8471  005250  50F3               	movf	243,w,c
  8472  005252  2658               	addwf	??_cmdRecv^0,f,c
  8473  005254  50F4               	movf	244,w,c
  8474  005256  2259               	addwfc	(??_cmdRecv+1)^0,f,c
  8475  005258  505A               	movf	cmdRecv@i^0,w,c
  8476  00525A  2458               	addwf	??_cmdRecv^0,w,c
  8477  00525C  6ED9               	movwf	fsr2l,c
  8478  00525E  0E00               	movlw	0
  8479  005260  2059               	addwfc	(??_cmdRecv+1)^0,w,c
  8480  005262  6EDA               	movwf	fsr2h,c
  8481  005264  50DF               	movf	indf2,w,c
  8482  005266  EC2F  F048         	call	_putch
  8483                           
  8484                           ; BSR set to: 57
  8485  00526A  2A5A               	incf	cmdRecv@i^0,f,c
  8486  00526C                     l15908:
  8487                           
  8488                           ;../app/app_src/application.c: 388:             while(rx_buffer[buf_id].rx_ind.size--){
  8489  00526C  505B               	movf	cmdRecv@buf_id^0,w,c
  8490  00526E  0D7A               	mullw	122
  8491  005270  0E80               	movlw	low (_rx_buffer+10)
  8492  005272  24F3               	addwf	243,w,c
  8493  005274  6ED9               	movwf	fsr2l,c
  8494  005276  0E0A               	movlw	high (_rx_buffer+10)
  8495  005278  20F4               	addwfc	prodh,w,c
  8496  00527A  6EDA               	movwf	fsr2h,c
  8497  00527C  06DF               	decf	indf2,f,c
  8498  00527E  28DE               	incf	postinc2,w,c
  8499  005280  A4D8               	btfss	status,2,c
  8500  005282  D7DC               	goto	l15904
  8501                           
  8502                           ;../app/app_src/application.c: 391:             rx_buffer[buf_id].free = 1;
  8503  005284  505B               	movf	cmdRecv@buf_id^0,w,c
  8504  005286  0D7A               	mullw	122
  8505  005288  0E76               	movlw	low _rx_buffer
  8506  00528A  24F3               	addwf	243,w,c
  8507  00528C  6ED9               	movwf	fsr2l,c
  8508  00528E  0E0A               	movlw	high _rx_buffer
  8509  005290  20F4               	addwfc	prodh,w,c
  8510  005292  6EDA               	movwf	fsr2h,c
  8511  005294  80DF               	bsf	indf2,0,c
  8512                           
  8513                           ;../app/app_src/application.c: 392:             printf("\r\n");
  8514  005296  0ED3               	movlw	low (STR_139+2)
  8515  005298  0100               	movlb	0	; () banked
  8516  00529A  6F75               	movwf	printf@fmt& (0+255),b
  8517  00529C  0EFF               	movlw	high (STR_139+2)
  8518  00529E  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8519  0052A0  ECC4  F045         	call	_printf	;wreg free
  8520                           
  8521                           ;../app/app_src/application.c: 393:         }
  8522  0052A4  0012               	return	
  8523  0052A6                     l15914:
  8524                           
  8525                           ;../app/app_src/application.c: 395:             printf("NOT OK:%u\r\n", (uint16_t)NO_RX_
      +                          MESSAGES);
  8526  0052A6  0EC5               	movlw	low STR_3
  8527  0052A8  0100               	movlb	0	; () banked
  8528  0052AA  6F75               	movwf	printf@fmt& (0+255),b
  8529  0052AC  0EFE               	movlw	high STR_3
  8530  0052AE  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8531  0052B0  0E00               	movlw	0
  8532  0052B2  6F78               	movwf	(?_printf+3)& (0+255),b
  8533  0052B4  0E10               	movlw	16
  8534  0052B6  6F77               	movwf	(?_printf+2)& (0+255),b
  8535  0052B8  ECC4  F045         	call	_printf	;wreg free
  8536  0052BC  0012               	return	
  8537  0052BE                     l15916:
  8538                           
  8539                           ;../app/app_src/application.c: 399:         printf("NOT OK:%u\r\n", (uint16_t)NO_RX_MESS
      +                          AGES);
  8540  0052BE  0EC5               	movlw	low STR_3
  8541  0052C0  0100               	movlb	0	; () banked
  8542  0052C2  6F75               	movwf	printf@fmt& (0+255),b
  8543  0052C4  0EFE               	movlw	high STR_3
  8544  0052C6  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8545  0052C8  0E00               	movlw	0
  8546  0052CA  6F78               	movwf	(?_printf+3)& (0+255),b
  8547  0052CC  0E10               	movlw	16
  8548  0052CE  6F77               	movwf	(?_printf+2)& (0+255),b
  8549  0052D0  ECC4  F045         	call	_printf	;wreg free
  8550                           
  8551                           ; BSR set to: 0
  8552  0052D4  0012               	return		;funcret
  8553  0052D6                     __end_of_cmdRecv:
  8554                           	opt callstack 0
  8555                           
  8556 ;; *************** function _CircularBufferPopFront *****************
  8557 ;; Defined at:
  8558 ;;		line 87 in file "../app/app_src/circular buffer.c"
  8559 ;; Parameters:    Size  Location     Type
  8560 ;;  ctx             2   18[COMRAM] PTR struct .
  8561 ;;		 -> ledtasksbuf(10), rx_buffer_queue_context(10), 
  8562 ;;  val             1   20[COMRAM] PTR void 
  8563 ;;		 -> handle_led_events@temp(3), cmdRecv@buf_id(1), 
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;		None
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  1    wreg      char 
  8568 ;; Registers used:
  8569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8575 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8577 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8578 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8579 ;;Total ram usage:        7 bytes
  8580 ;; Hardware stack levels used:    1
  8581 ;; Hardware stack levels required when called:    8
  8582 ;; This function calls:
  8583 ;;		___wmul
  8584 ;;		_memcpy
  8585 ;; This function is called by:
  8586 ;;		_cmdRecv
  8587 ;; This function uses a non-reentrant model
  8588 ;;
  8589                           
  8590                           	psect	text34
  8591  0052D6                     __ptext34:
  8592                           	opt callstack 0
  8593  0052D6                     _CircularBufferPopFront:
  8594                           	opt callstack 19
  8595                           
  8596                           ;../app/app_src/circular buffer.c: 89:     if (ctx->read_pos == ctx->write_pos) {
  8597                           
  8598                           ; BSR set to: 0
  8599                           ;incstack = 0
  8600  0052D6  EE20 F002          	lfsr	2,2
  8601  0052DA  5013               	movf	CircularBufferPopFront@ctx^0,w,c
  8602  0052DC  26D9               	addwf	fsr2l,f,c
  8603  0052DE  5014               	movf	(CircularBufferPopFront@ctx+1)^0,w,c
  8604  0052E0  22DA               	addwfc	fsr2h,f,c
  8605  0052E2  EE10 F004          	lfsr	1,4
  8606  0052E6  5013               	movf	CircularBufferPopFront@ctx^0,w,c
  8607  0052E8  26E1               	addwf	fsr1l,f,c
  8608  0052EA  5014               	movf	(CircularBufferPopFront@ctx+1)^0,w,c
  8609  0052EC  22E2               	addwfc	fsr1h,f,c
  8610  0052EE  50DE               	movf	postinc2,w,c
  8611  0052F0  18E6               	xorwf	postinc1,w,c
  8612  0052F2  E104               	bnz	l15468
  8613  0052F4  50DE               	movf	postinc2,w,c
  8614  0052F6  18E6               	xorwf	postinc1,w,c
  8615  0052F8  B4D8               	btfsc	status,2,c
  8616  0052FA  0012               	return	
  8617  0052FC                     l15468:
  8618                           
  8619                           ;../app/app_src/circular buffer.c: 93:     memcpy(val, &ctx->buf[ctx->read_pos * ctx->el
      +                          ement_size],
  8620  0052FC  0060  F054  F008   	movff	CircularBufferPopFront@val,memcpy@d1
  8621  005302  6A09               	clrf	(memcpy@d1+1)^0,c
  8622  005304  EE20 F004          	lfsr	2,4
  8623  005308  5013               	movf	CircularBufferPopFront@ctx^0,w,c
  8624  00530A  26D9               	addwf	fsr2l,f,c
  8625  00530C  5014               	movf	(CircularBufferPopFront@ctx+1)^0,w,c
  8626  00530E  22DA               	addwfc	fsr2h,f,c
  8627  005310  006F FF78  F002    	movff	postinc2,___wmul@multiplier
  8628  005316  006F FF74  F003    	movff	postdec2,___wmul@multiplier+1
  8629  00531C  EE20 F006          	lfsr	2,6
  8630  005320  5013               	movf	CircularBufferPopFront@ctx^0,w,c
  8631  005322  26D9               	addwf	fsr2l,f,c
  8632  005324  5014               	movf	(CircularBufferPopFront@ctx+1)^0,w,c
  8633  005326  22DA               	addwfc	fsr2h,f,c
  8634  005328  006F FF78  F004    	movff	postinc2,___wmul@multiplicand
  8635  00532E  006F FF74  F005    	movff	postdec2,___wmul@multiplicand+1
  8636  005334  ECD6  F044         	call	___wmul	;wreg free
  8637  005338  0060  F04F  FFD9   	movff	CircularBufferPopFront@ctx,fsr2l
  8638  00533E  0060  F053  FFDA   	movff	CircularBufferPopFront@ctx+1,fsr2h
  8639  005344  006F FF78  F016    	movff	postinc2,??_CircularBufferPopFront
  8640  00534A  006F FF74  F017    	movff	postdec2,??_CircularBufferPopFront+1
  8641  005350  5002               	movf	?___wmul^0,w,c
  8642  005352  2416               	addwf	??_CircularBufferPopFront^0,w,c
  8643  005354  6E0A               	movwf	memcpy@s1^0,c
  8644  005356  5003               	movf	(?___wmul+1)^0,w,c
  8645  005358  2017               	addwfc	(??_CircularBufferPopFront+1)^0,w,c
  8646  00535A  6E0B               	movwf	(memcpy@s1+1)^0,c
  8647  00535C  EE20 F006          	lfsr	2,6
  8648  005360  5013               	movf	CircularBufferPopFront@ctx^0,w,c
  8649  005362  26D9               	addwf	fsr2l,f,c
  8650  005364  5014               	movf	(CircularBufferPopFront@ctx+1)^0,w,c
  8651  005366  22DA               	addwfc	fsr2h,f,c
  8652  005368  006F FF78  F00C    	movff	postinc2,memcpy@n
  8653  00536E  006F FF74  F00D    	movff	postdec2,memcpy@n+1
  8654  005374  ECF6  F03A         	call	_memcpy	;wreg free
  8655                           
  8656                           ;../app/app_src/circular buffer.c: 96:     ctx->read_pos = (ctx->read_pos + 1) & ctx->ma
      +                          x_size;
  8657  005378  EE20 F008          	lfsr	2,8
  8658  00537C  5013               	movf	CircularBufferPopFront@ctx^0,w,c
  8659  00537E  26D9               	addwf	fsr2l,f,c
  8660  005380  5014               	movf	(CircularBufferPopFront@ctx+1)^0,w,c
  8661  005382  22DA               	addwfc	fsr2h,f,c
  8662  005384  006F FF78  F016    	movff	postinc2,??_CircularBufferPopFront
  8663  00538A  006F FF74  F017    	movff	postdec2,??_CircularBufferPopFront+1
  8664  005390  EE20 F004          	lfsr	2,4
  8665  005394  5013               	movf	CircularBufferPopFront@ctx^0,w,c
  8666  005396  26D9               	addwf	fsr2l,f,c
  8667  005398  5014               	movf	(CircularBufferPopFront@ctx+1)^0,w,c
  8668  00539A  22DA               	addwfc	fsr2h,f,c
  8669  00539C  006F FF78  F018    	movff	postinc2,??_CircularBufferPopFront+2
  8670  0053A2  006F FF74  F019    	movff	postdec2,??_CircularBufferPopFront+3
  8671  0053A8  0E01               	movlw	1
  8672  0053AA  2618               	addwf	(??_CircularBufferPopFront+2)^0,f,c
  8673  0053AC  0E00               	movlw	0
  8674  0053AE  2219               	addwfc	(??_CircularBufferPopFront+3)^0,f,c
  8675  0053B0  5016               	movf	??_CircularBufferPopFront^0,w,c
  8676  0053B2  1618               	andwf	(??_CircularBufferPopFront+2)^0,f,c
  8677  0053B4  5017               	movf	(??_CircularBufferPopFront+1)^0,w,c
  8678  0053B6  1619               	andwf	(??_CircularBufferPopFront+3)^0,f,c
  8679  0053B8  EE20 F004          	lfsr	2,4
  8680  0053BC  5013               	movf	CircularBufferPopFront@ctx^0,w,c
  8681  0053BE  26D9               	addwf	fsr2l,f,c
  8682  0053C0  5014               	movf	(CircularBufferPopFront@ctx+1)^0,w,c
  8683  0053C2  22DA               	addwfc	fsr2h,f,c
  8684  0053C4  0060  F063  FFDE   	movff	??_CircularBufferPopFront+2,postinc2
  8685  0053CA  0060  F067  FFDD   	movff	??_CircularBufferPopFront+3,postdec2
  8686  0053D0  0012               	return		;funcret
  8687  0053D2                     __end_of_CircularBufferPopFront:
  8688                           	opt callstack 0
  8689                           
  8690 ;; *************** function _CircularBufferEmpty *****************
  8691 ;; Defined at:
  8692 ;;		line 131 in file "../app/app_src/circular buffer.c"
  8693 ;; Parameters:    Size  Location     Type
  8694 ;;  ctx             2    1[COMRAM] PTR const struct .
  8695 ;;		 -> ledtasksbuf(10), rx_buffer_queue_context(10), 
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;		None
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  1    wreg      _Bool 
  8700 ;; Registers used:
  8701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8709 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8710 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8711 ;;Total ram usage:        6 bytes
  8712 ;; Hardware stack levels used:    1
  8713 ;; Hardware stack levels required when called:    7
  8714 ;; This function calls:
  8715 ;;		Nothing
  8716 ;; This function is called by:
  8717 ;;		_cmdRecv
  8718 ;; This function uses a non-reentrant model
  8719 ;;
  8720                           
  8721                           	psect	text35
  8722  00897E                     __ptext35:
  8723                           	opt callstack 0
  8724  00897E                     _CircularBufferEmpty:
  8725                           	opt callstack 20
  8726                           
  8727                           ;../app/app_src/circular buffer.c: 132:     return (ctx->read_pos == ctx->write_pos);
  8728                           
  8729                           ;incstack = 0
  8730  00897E  EE20 F002          	lfsr	2,2
  8731  008982  5002               	movf	CircularBufferEmpty@ctx^0,w,c
  8732  008984  26D9               	addwf	fsr2l,f,c
  8733  008986  5003               	movf	(CircularBufferEmpty@ctx+1)^0,w,c
  8734  008988  22DA               	addwfc	fsr2h,f,c
  8735  00898A  EE10 F004          	lfsr	1,4
  8736  00898E  5002               	movf	CircularBufferEmpty@ctx^0,w,c
  8737  008990  26E1               	addwf	fsr1l,f,c
  8738  008992  5003               	movf	(CircularBufferEmpty@ctx+1)^0,w,c
  8739  008994  22E2               	addwfc	fsr1h,f,c
  8740  008996  50DE               	movf	postinc2,w,c
  8741  008998  18E6               	xorwf	postinc1,w,c
  8742  00899A  E106               	bnz	u15350
  8743  00899C  50DE               	movf	postinc2,w,c
  8744  00899E  18E6               	xorwf	postinc1,w,c
  8745  0089A0  A4D8               	btfss	status,2,c
  8746  0089A2  D002               	goto	u15350
  8747  0089A4  0E01               	movlw	1
  8748  0089A6  0012               	return	
  8749  0089A8                     u15350:
  8750  0089A8  0E00               	movlw	0
  8751  0089AA  0012               	return		;funcret
  8752  0089AC                     __end_of_CircularBufferEmpty:
  8753                           	opt callstack 0
  8754                           
  8755 ;; *************** function _cmdNaddr *****************
  8756 ;; Defined at:
  8757 ;;		line 347 in file "../app/app_src/application.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;		None
  8760 ;; Auto vars:     Size  Location     Type
  8761 ;;		None
  8762 ;; Return value:  Size  Location     Type
  8763 ;;                  1    wreg      void 
  8764 ;; Registers used:
  8765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8766 ;; Tracked objects:
  8767 ;;		On entry : 0/0
  8768 ;;		On exit  : 3F/0
  8769 ;;		Unchanged: 0/0
  8770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8775 ;;Total ram usage:        0 bytes
  8776 ;; Hardware stack levels used:    1
  8777 ;; Hardware stack levels required when called:   16
  8778 ;; This function calls:
  8779 ;;		_printf
  8780 ;; This function is called by:
  8781 ;;		_executeATCommand
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785                           	psect	text36
  8786  008E44                     __ptext36:
  8787                           	opt callstack 0
  8788  008E44                     _cmdNaddr:
  8789                           	opt callstack 12
  8790                           
  8791                           ;../app/app_src/application.c: 348:  printf("NADDR=%02X\r\n",currentNetID);
  8792                           
  8793                           ;incstack = 0
  8794  008E44  0E85               	movlw	low STR_14
  8795  008E46  0100               	movlb	0	; () banked
  8796  008E48  6F75               	movwf	printf@fmt& (0+255),b
  8797  008E4A  0EFE               	movlw	high STR_14
  8798  008E4C  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8799  008E4E  0060  F3E0  F077   	movff	_currentNetID,?_printf+2
  8800  008E54  6B78               	clrf	(?_printf+3)& (0+255),b
  8801  008E56  ECC4  F045         	call	_printf	;wreg free
  8802                           
  8803                           ; BSR set to: 0
  8804  008E5A  0012               	return		;funcret
  8805  008E5C                     __end_of_cmdNaddr:
  8806                           	opt callstack 0
  8807                           
  8808 ;; *************** function _cmdMac *****************
  8809 ;; Defined at:
  8810 ;;		line 410 in file "../app/app_src/application.c"
  8811 ;; Parameters:    Size  Location     Type
  8812 ;;		None
  8813 ;; Auto vars:     Size  Location     Type
  8814 ;;  i               1   88[COMRAM] unsigned char 
  8815 ;; Return value:  Size  Location     Type
  8816 ;;                  1    wreg      void 
  8817 ;; Registers used:
  8818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8819 ;; Tracked objects:
  8820 ;;		On entry : 0/0
  8821 ;;		On exit  : 3F/0
  8822 ;;		Unchanged: 0/0
  8823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8828 ;;Total ram usage:        2 bytes
  8829 ;; Hardware stack levels used:    1
  8830 ;; Hardware stack levels required when called:   16
  8831 ;; This function calls:
  8832 ;;		_printf
  8833 ;; This function is called by:
  8834 ;;		_executeATCommand
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           	psect	text37
  8839  008034                     __ptext37:
  8840                           	opt callstack 0
  8841  008034                     _cmdMac:
  8842                           	opt callstack 12
  8843                           
  8844                           ;../app/app_src/application.c: 411:  printf("MAC=");
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;incstack = 0
  8848  008034  0EDB               	movlw	low STR_21
  8849  008036  0100               	movlb	0	; () banked
  8850  008038  6F75               	movwf	printf@fmt& (0+255),b
  8851  00803A  0EFF               	movlw	high STR_21
  8852  00803C  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8853  00803E  ECC4  F045         	call	_printf	;wreg free
  8854                           
  8855                           ; BSR set to: 0
  8856                           ;../app/app_src/application.c: 412:  for(uint8_t i = 0; i < sizeof(EUIDbyte); i++){
  8857  008042  0E00               	movlw	0
  8858  008044  6E59               	movwf	cmdMac@i^0,c
  8859  008046                     l15928:
  8860                           
  8861                           ; BSR set to: 0
  8862                           ;../app/app_src/application.c: 413:   printf("%02X", EUIDbyte[i]);
  8863  008046  0EF4               	movlw	low STR_22
  8864  008048  6F75               	movwf	printf@fmt& (0+255),b
  8865  00804A  0EFF               	movlw	high STR_22
  8866  00804C  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8867  00804E  0EC2               	movlw	low _EUIDbyte
  8868  008050  2459               	addwf	cmdMac@i^0,w,c
  8869  008052  6ED9               	movwf	fsr2l,c
  8870  008054  6ADA               	clrf	fsr2h,c
  8871  008056  0E01               	movlw	high _EUIDbyte
  8872  008058  22DA               	addwfc	fsr2h,f,c
  8873  00805A  50DF               	movf	indf2,w,c
  8874  00805C  6E58               	movwf	??_cmdMac^0,c
  8875  00805E  5058               	movf	??_cmdMac^0,w,c
  8876  008060  6F77               	movwf	(?_printf+2)& (0+255),b
  8877  008062  6B78               	clrf	(?_printf+3)& (0+255),b
  8878  008064  ECC4  F045         	call	_printf	;wreg free
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;../app/app_src/application.c: 414:  }
  8882  008068  2A59               	incf	cmdMac@i^0,f,c
  8883                           
  8884                           ; BSR set to: 0
  8885  00806A  0E0B               	movlw	11
  8886  00806C  6459               	cpfsgt	cmdMac@i^0,c
  8887  00806E  D7EB               	goto	l15928
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;../app/app_src/application.c: 415:  printf("\r\n");
  8891  008070  0ED3               	movlw	low (STR_139+2)
  8892  008072  6F75               	movwf	printf@fmt& (0+255),b
  8893  008074  0EFF               	movlw	high (STR_139+2)
  8894  008076  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8895  008078  ECC4  F045         	call	_printf	;wreg free
  8896                           
  8897                           ; BSR set to: 0
  8898  00807C  0012               	return		;funcret
  8899  00807E                     __end_of_cmdMac:
  8900                           	opt callstack 0
  8901                           
  8902 ;; *************** function _cmdI *****************
  8903 ;; Defined at:
  8904 ;;		line 222 in file "../app/app_src/application.c"
  8905 ;; Parameters:    Size  Location     Type
  8906 ;;		None
  8907 ;; Auto vars:     Size  Location     Type
  8908 ;;		None
  8909 ;; Return value:  Size  Location     Type
  8910 ;;                  1    wreg      void 
  8911 ;; Registers used:
  8912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8913 ;; Tracked objects:
  8914 ;;		On entry : 0/0
  8915 ;;		On exit  : 3F/0
  8916 ;;		Unchanged: 0/0
  8917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8922 ;;Total ram usage:        0 bytes
  8923 ;; Hardware stack levels used:    1
  8924 ;; Hardware stack levels required when called:   17
  8925 ;; This function calls:
  8926 ;;		_sendInfo
  8927 ;; This function is called by:
  8928 ;;		_executeATCommand
  8929 ;; This function uses a non-reentrant model
  8930 ;;
  8931                           
  8932                           	psect	text38
  8933  00907E                     __ptext38:
  8934                           	opt callstack 0
  8935  00907E                     _cmdI:
  8936                           	opt callstack 11
  8937                           
  8938                           ;../app/app_src/application.c: 224:     sendInfo();
  8939                           
  8940                           ; BSR set to: 0
  8941                           ;incstack = 0
  8942  00907E  EC34  F03D         	call	_sendInfo	;wreg free
  8943                           
  8944                           ; BSR set to: 0
  8945  009082  0012               	return		;funcret
  8946  009084                     __end_of_cmdI:
  8947                           	opt callstack 0
  8948                           
  8949 ;; *************** function _sendInfo *****************
  8950 ;; Defined at:
  8951 ;;		line 1172 in file "../app/app_src/application.c"
  8952 ;; Parameters:    Size  Location     Type
  8953 ;;		None
  8954 ;; Auto vars:     Size  Location     Type
  8955 ;;		None
  8956 ;; Return value:  Size  Location     Type
  8957 ;;                  1    wreg      void 
  8958 ;; Registers used:
  8959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8960 ;; Tracked objects:
  8961 ;;		On entry : 0/0
  8962 ;;		On exit  : 3F/0
  8963 ;;		Unchanged: 0/0
  8964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8969 ;;Total ram usage:        0 bytes
  8970 ;; Hardware stack levels used:    1
  8971 ;; Hardware stack levels required when called:   16
  8972 ;; This function calls:
  8973 ;;		_printf
  8974 ;; This function is called by:
  8975 ;;		_cmdI
  8976 ;; This function uses a non-reentrant model
  8977 ;;
  8978                           
  8979                           	psect	text39
  8980  007A68                     __ptext39:
  8981                           	opt callstack 0
  8982  007A68                     _sendInfo:
  8983                           	opt callstack 11
  8984                           
  8985                           ;../app/app_src/application.c: 1174:     printf("LoRa Mesh\r\n");
  8986                           
  8987                           ; BSR set to: 0
  8988                           ;incstack = 0
  8989  007A68  0EB9               	movlw	low STR_135
  8990  007A6A  0100               	movlb	0	; () banked
  8991  007A6C  6F75               	movwf	printf@fmt& (0+255),b
  8992  007A6E  0EFE               	movlw	high STR_135
  8993  007A70  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8994  007A72  ECC4  F045         	call	_printf	;wreg free
  8995  007A76  0EF7               	movlw	low STR_136
  8996  007A78  6F75               	movwf	printf@fmt& (0+255),b
  8997  007A7A  0EFD               	movlw	high STR_136
  8998  007A7C  6F76               	movwf	(printf@fmt+1)& (0+255),b
  8999  007A7E  0E00               	movlw	0
  9000  007A80  6F78               	movwf	(?_printf+3)& (0+255),b
  9001  007A82  0E01               	movlw	1
  9002  007A84  6F77               	movwf	(?_printf+2)& (0+255),b
  9003  007A86  0E00               	movlw	0
  9004  007A88  6F7A               	movwf	(?_printf+5)& (0+255),b
  9005  007A8A  0E00               	movlw	0
  9006  007A8C  6F79               	movwf	(?_printf+4)& (0+255),b
  9007  007A8E  ECC4  F045         	call	_printf	;wreg free
  9008  007A92  0EDB               	movlw	low STR_137
  9009  007A94  6F75               	movwf	printf@fmt& (0+255),b
  9010  007A96  0EFD               	movlw	high STR_137
  9011  007A98  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9012  007A9A  0E00               	movlw	0
  9013  007A9C  6F78               	movwf	(?_printf+3)& (0+255),b
  9014  007A9E  0E02               	movlw	2
  9015  007AA0  6F77               	movwf	(?_printf+2)& (0+255),b
  9016  007AA2  0E00               	movlw	0
  9017  007AA4  6F7A               	movwf	(?_printf+5)& (0+255),b
  9018  007AA6  0E01               	movlw	1
  9019  007AA8  6F79               	movwf	(?_printf+4)& (0+255),b
  9020  007AAA  ECC4  F045         	call	_printf	;wreg free
  9021                           
  9022                           ;../app/app_src/application.c: 1178:     printf("Region ");
  9023  007AAE  0E3A               	movlw	low STR_138
  9024  007AB0  6F75               	movwf	printf@fmt& (0+255),b
  9025  007AB2  0EFF               	movlw	high STR_138
  9026  007AB4  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9027  007AB6  ECC4  F045         	call	_printf	;wreg free
  9028                           
  9029                           ;../app/app_src/application.c: 1180:     printf("NA\r\n");
  9030  007ABA  0ED1               	movlw	low STR_139
  9031  007ABC  6F75               	movwf	printf@fmt& (0+255),b
  9032  007ABE  0EFF               	movlw	high STR_139
  9033  007AC0  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9034  007AC2  ECC4  F045         	call	_printf	;wreg free
  9035                           
  9036                           ; BSR set to: 0
  9037  007AC6  0012               	return		;funcret
  9038  007AC8                     __end_of_sendInfo:
  9039                           	opt callstack 0
  9040                           
  9041 ;; *************** function _cmdGetTX *****************
  9042 ;; Defined at:
  9043 ;;		line 628 in file "../app/app_src/application.c"
  9044 ;; Parameters:    Size  Location     Type
  9045 ;;		None
  9046 ;; Auto vars:     Size  Location     Type
  9047 ;;		None
  9048 ;; Return value:  Size  Location     Type
  9049 ;;                  1    wreg      void 
  9050 ;; Registers used:
  9051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9052 ;; Tracked objects:
  9053 ;;		On entry : 0/0
  9054 ;;		On exit  : 3F/0
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9061 ;;Total ram usage:        0 bytes
  9062 ;; Hardware stack levels used:    1
  9063 ;; Hardware stack levels required when called:   16
  9064 ;; This function calls:
  9065 ;;		_printf
  9066 ;; This function is called by:
  9067 ;;		_executeATCommand
  9068 ;; This function uses a non-reentrant model
  9069 ;;
  9070                           
  9071                           	psect	text40
  9072  008E5C                     __ptext40:
  9073                           	opt callstack 0
  9074  008E5C                     _cmdGetTX:
  9075                           	opt callstack 12
  9076                           
  9077                           ;../app/app_src/application.c: 629:  printf("TX POWER=%u\r\n",(uint16_t)TXPower);
  9078                           
  9079                           ; BSR set to: 0
  9080                           ;incstack = 0
  9081  008E5C  0E77               	movlw	low STR_40
  9082  008E5E  0100               	movlb	0	; () banked
  9083  008E60  6F75               	movwf	printf@fmt& (0+255),b
  9084  008E62  0EFE               	movlw	high STR_40
  9085  008E64  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9086  008E66  0060  F330  F077   	movff	_TXPower,?_printf+2
  9087  008E6C  6B78               	clrf	(?_printf+3)& (0+255),b
  9088  008E6E  ECC4  F045         	call	_printf	;wreg free
  9089                           
  9090                           ; BSR set to: 0
  9091  008E72  0012               	return		;funcret
  9092  008E74                     __end_of_cmdGetTX:
  9093                           	opt callstack 0
  9094                           
  9095 ;; *************** function _cmdGetTTL *****************
  9096 ;; Defined at:
  9097 ;;		line 526 in file "../app/app_src/application.c"
  9098 ;; Parameters:    Size  Location     Type
  9099 ;;		None
  9100 ;; Auto vars:     Size  Location     Type
  9101 ;;		None
  9102 ;; Return value:  Size  Location     Type
  9103 ;;                  1    wreg      void 
  9104 ;; Registers used:
  9105 ;;		None
  9106 ;; Tracked objects:
  9107 ;;		On entry : 0/0
  9108 ;;		On exit  : 0/0
  9109 ;;		Unchanged: 0/0
  9110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9115 ;;Total ram usage:        0 bytes
  9116 ;; Hardware stack levels used:    1
  9117 ;; Hardware stack levels required when called:    7
  9118 ;; This function calls:
  9119 ;;		Nothing
  9120 ;; This function is called by:
  9121 ;;		_executeATCommand
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125                           	psect	text41
  9126  00909E                     __ptext41:
  9127                           	opt callstack 0
  9128  00909E                     _cmdGetTTL:
  9129                           	opt callstack 21
  9130                           
  9131                           ;../app/app_src/application.c: 528:  return;
  9132                           
  9133                           ; BSR set to: 0
  9134                           ;incstack = 0
  9135  00909E  0012               	return		;funcret
  9136  0090A0                     __end_of_cmdGetTTL:
  9137                           	opt callstack 0
  9138                           
  9139 ;; *************** function _cmdGetSF *****************
  9140 ;; Defined at:
  9141 ;;		line 770 in file "../app/app_src/application.c"
  9142 ;; Parameters:    Size  Location     Type
  9143 ;;		None
  9144 ;; Auto vars:     Size  Location     Type
  9145 ;;		None
  9146 ;; Return value:  Size  Location     Type
  9147 ;;                  1    wreg      void 
  9148 ;; Registers used:
  9149 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9150 ;; Tracked objects:
  9151 ;;		On entry : 0/0
  9152 ;;		On exit  : 3F/0
  9153 ;;		Unchanged: 0/0
  9154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9159 ;;Total ram usage:        0 bytes
  9160 ;; Hardware stack levels used:    1
  9161 ;; Hardware stack levels required when called:   16
  9162 ;; This function calls:
  9163 ;;		_printf
  9164 ;; This function is called by:
  9165 ;;		_executeATCommand
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169                           	psect	text42
  9170  008E74                     __ptext42:
  9171                           	opt callstack 0
  9172  008E74                     _cmdGetSF:
  9173                           	opt callstack 12
  9174                           
  9175                           ;../app/app_src/application.c: 771:     printf("SF=%u\r\n", current_sf);
  9176                           
  9177                           ;incstack = 0
  9178  008E74  0E32               	movlw	low STR_59
  9179  008E76  0100               	movlb	0	; () banked
  9180  008E78  6F75               	movwf	printf@fmt& (0+255),b
  9181  008E7A  0EFF               	movlw	high STR_59
  9182  008E7C  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9183  008E7E  0060  F33C  F077   	movff	_current_sf,?_printf+2
  9184  008E84  6B78               	clrf	(?_printf+3)& (0+255),b
  9185  008E86  ECC4  F045         	call	_printf	;wreg free
  9186                           
  9187                           ; BSR set to: 0
  9188  008E8A  0012               	return		;funcret
  9189  008E8C                     __end_of_cmdGetSF:
  9190                           	opt callstack 0
  9191                           
  9192 ;; *************** function _cmdGetRxCnt *****************
  9193 ;; Defined at:
  9194 ;;		line 805 in file "../app/app_src/application.c"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;  atCommand       2   87[COMRAM] PTR unsigned char 
  9197 ;;		 -> atCommand(80), 
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;  buf_id          1   91[COMRAM] unsigned char 
  9200 ;;  count           1   90[COMRAM] unsigned char 
  9201 ;; Return value:  Size  Location     Type
  9202 ;;                  1    wreg      void 
  9203 ;; Registers used:
  9204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9205 ;; Tracked objects:
  9206 ;;		On entry : 0/0
  9207 ;;		On exit  : 3F/0
  9208 ;;		Unchanged: 0/0
  9209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9211 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9212 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9213 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9214 ;;Total ram usage:        5 bytes
  9215 ;; Hardware stack levels used:    1
  9216 ;; Hardware stack levels required when called:   16
  9217 ;; This function calls:
  9218 ;;		_printf
  9219 ;; This function is called by:
  9220 ;;		_executeATCommand
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           	psect	text43
  9225  00807E                     __ptext43:
  9226                           	opt callstack 0
  9227  00807E                     _cmdGetRxCnt:
  9228                           	opt callstack 12
  9229                           
  9230                           ;../app/app_src/application.c: 806:     uint8_t count = 0, buf_id = 0;
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;incstack = 0
  9234  00807E  0E00               	movlw	0
  9235  008080  6E5B               	movwf	cmdGetRxCnt@count^0,c
  9236  008082  0E00               	movlw	0
  9237  008084  6E5C               	movwf	cmdGetRxCnt@buf_id^0,c
  9238                           
  9239                           ;../app/app_src/application.c: 807:     while(buf_id++ < 4){
  9240  008086  D00A               	goto	l16164
  9241  008088                     l16160:
  9242                           
  9243                           ;../app/app_src/application.c: 808:         if(!rx_buffer[buf_id].free){
  9244  008088  505C               	movf	cmdGetRxCnt@buf_id^0,w,c
  9245  00808A  0D7A               	mullw	122
  9246  00808C  0E76               	movlw	low _rx_buffer
  9247  00808E  24F3               	addwf	243,w,c
  9248  008090  6ED9               	movwf	fsr2l,c
  9249  008092  0E0A               	movlw	high _rx_buffer
  9250  008094  20F4               	addwfc	prodh,w,c
  9251  008096  6EDA               	movwf	fsr2h,c
  9252  008098  A0DF               	btfss	indf2,0,c
  9253                           
  9254                           ;../app/app_src/application.c: 809:             count++;
  9255  00809A  2A5B               	incf	cmdGetRxCnt@count^0,f,c
  9256  00809C                     l16164:
  9257                           
  9258                           ;../app/app_src/application.c: 807:     while(buf_id++ < 4){
  9259  00809C  2A5C               	incf	cmdGetRxCnt@buf_id^0,f,c
  9260  00809E  045C               	decf	cmdGetRxCnt@buf_id^0,w,c
  9261  0080A0  6E5A               	movwf	??_cmdGetRxCnt^0,c
  9262  0080A2  0E03               	movlw	3
  9263  0080A4  645A               	cpfsgt	??_cmdGetRxCnt^0,c
  9264  0080A6  D7F0               	goto	l16160
  9265                           
  9266                           ;../app/app_src/application.c: 812:     printf("RXCNT=%u/%u\r\n", count, 4);
  9267  0080A8  0E69               	movlw	low STR_63
  9268  0080AA  0100               	movlb	0	; () banked
  9269  0080AC  6F75               	movwf	printf@fmt& (0+255),b
  9270  0080AE  0EFE               	movlw	high STR_63
  9271  0080B0  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9272  0080B2  0060  F16C  F077   	movff	cmdGetRxCnt@count,?_printf+2
  9273  0080B8  6B78               	clrf	(?_printf+3)& (0+255),b
  9274  0080BA  0E00               	movlw	0
  9275  0080BC  6F7A               	movwf	(?_printf+5)& (0+255),b
  9276  0080BE  0E04               	movlw	4
  9277  0080C0  6F79               	movwf	(?_printf+4)& (0+255),b
  9278  0080C2  ECC4  F045         	call	_printf	;wreg free
  9279                           
  9280                           ; BSR set to: 0
  9281  0080C6  0012               	return		;funcret
  9282  0080C8                     __end_of_cmdGetRxCnt:
  9283                           	opt callstack 0
  9284                           
  9285 ;; *************** function _cmdGetRFCH *****************
  9286 ;; Defined at:
  9287 ;;		line 592 in file "../app/app_src/application.c"
  9288 ;; Parameters:    Size  Location     Type
  9289 ;;		None
  9290 ;; Auto vars:     Size  Location     Type
  9291 ;;		None
  9292 ;; Return value:  Size  Location     Type
  9293 ;;                  1    wreg      void 
  9294 ;; Registers used:
  9295 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9296 ;; Tracked objects:
  9297 ;;		On entry : 0/0
  9298 ;;		On exit  : 3F/0
  9299 ;;		Unchanged: 0/0
  9300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9305 ;;Total ram usage:        0 bytes
  9306 ;; Hardware stack levels used:    1
  9307 ;; Hardware stack levels required when called:   16
  9308 ;; This function calls:
  9309 ;;		_printf
  9310 ;; This function is called by:
  9311 ;;		_executeATCommand
  9312 ;; This function uses a non-reentrant model
  9313 ;;
  9314                           
  9315                           	psect	text44
  9316  008D72                     __ptext44:
  9317                           	opt callstack 0
  9318  008D72                     _cmdGetRFCH:
  9319                           	opt callstack 12
  9320                           
  9321                           ;../app/app_src/application.c: 593:  printf("CHANNEL=%u\r\n",(channel + 1));
  9322                           
  9323                           ; BSR set to: 0
  9324                           ;incstack = 0
  9325  008D72  0E9F               	movlw	low STR_36
  9326  008D74  0100               	movlb	0	; () banked
  9327  008D76  6F75               	movwf	printf@fmt& (0+255),b
  9328  008D78  0EFE               	movlw	high STR_36
  9329  008D7A  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9330  008D7C  0E01               	movlw	1
  9331  008D7E  25CE               	addwf	_channel& (0+255),w,b
  9332  008D80  6F77               	movwf	(?_printf+2)& (0+255),b
  9333  008D82  6B78               	clrf	(?_printf+3)& (0+255),b
  9334  008D84  0E00               	movlw	0
  9335  008D86  2378               	addwfc	(?_printf+3)& (0+255),f,b
  9336  008D88  ECC4  F045         	call	_printf	;wreg free
  9337                           
  9338                           ; BSR set to: 0
  9339  008D8C  0012               	return		;funcret
  9340  008D8E                     __end_of_cmdGetRFCH:
  9341                           	opt callstack 0
  9342                           
  9343 ;; *************** function _cmdGetMode *****************
  9344 ;; Defined at:
  9345 ;;		line 576 in file "../app/app_src/application.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;		None
  9348 ;; Auto vars:     Size  Location     Type
  9349 ;;		None
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  1    wreg      void 
  9352 ;; Registers used:
  9353 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/0
  9356 ;;		On exit  : 3F/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9363 ;;Total ram usage:        0 bytes
  9364 ;; Hardware stack levels used:    1
  9365 ;; Hardware stack levels required when called:   16
  9366 ;; This function calls:
  9367 ;;		_printf
  9368 ;; This function is called by:
  9369 ;;		_executeATCommand
  9370 ;; This function uses a non-reentrant model
  9371 ;;
  9372                           
  9373                           	psect	text45
  9374  008F6A                     __ptext45:
  9375                           	opt callstack 0
  9376  008F6A                     _cmdGetMode:
  9377                           	opt callstack 12
  9378                           
  9379                           ;../app/app_src/application.c: 578:   printf("MODE = REPEATER\r\n");
  9380                           
  9381                           ; BSR set to: 0
  9382                           ;incstack = 0
  9383  008F6A  0E38               	movlw	low STR_34
  9384  008F6C  0100               	movlb	0	; () banked
  9385  008F6E  6F75               	movwf	printf@fmt& (0+255),b
  9386  008F70  0EFE               	movlw	high STR_34
  9387  008F72  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9388  008F74  ECC4  F045         	call	_printf	;wreg free
  9389                           
  9390                           ; BSR set to: 0
  9391                           
  9392                           ;../app/app_src/application.c: 579:  }
  9393  008F78  0012               	return		;funcret
  9394  008F7A                     __end_of_cmdGetMode:
  9395                           	opt callstack 0
  9396                           
  9397 ;; *************** function _cmdGetCADRSSI *****************
  9398 ;; Defined at:
  9399 ;;		line 668 in file "../app/app_src/application.c"
  9400 ;; Parameters:    Size  Location     Type
  9401 ;;		None
  9402 ;; Auto vars:     Size  Location     Type
  9403 ;;		None
  9404 ;; Return value:  Size  Location     Type
  9405 ;;                  1    wreg      void 
  9406 ;; Registers used:
  9407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9408 ;; Tracked objects:
  9409 ;;		On entry : 0/0
  9410 ;;		On exit  : 3F/0
  9411 ;;		Unchanged: 0/0
  9412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9417 ;;Total ram usage:        0 bytes
  9418 ;; Hardware stack levels used:    1
  9419 ;; Hardware stack levels required when called:   16
  9420 ;; This function calls:
  9421 ;;		_printf
  9422 ;; This function is called by:
  9423 ;;		_executeATCommand
  9424 ;; This function uses a non-reentrant model
  9425 ;;
  9426                           
  9427                           	psect	text46
  9428  008D8E                     __ptext46:
  9429                           	opt callstack 0
  9430  008D8E                     _cmdGetCADRSSI:
  9431                           	opt callstack 12
  9432                           
  9433                           ;../app/app_src/application.c: 669:  printf("CAD RSS=%i\r\n",RSSITarget);
  9434                           
  9435                           ; BSR set to: 0
  9436                           ;incstack = 0
  9437  008D8E  0E92               	movlw	low STR_45
  9438  008D90  0100               	movlb	0	; () banked
  9439  008D92  6F75               	movwf	printf@fmt& (0+255),b
  9440  008D94  0EFE               	movlw	high STR_45
  9441  008D96  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9442  008D98  51F7               	movf	_RSSITarget& (0+255),w,b
  9443  008D9A  6F77               	movwf	(?_printf+2)& (0+255),b
  9444  008D9C  6B78               	clrf	(?_printf+3)& (0+255),b
  9445  008D9E  BF77               	btfsc	(?_printf+2)& (0+255),7,b
  9446  008DA0  0778               	decf	(?_printf+3)& (0+255),f,b
  9447  008DA2  ECC4  F045         	call	_printf	;wreg free
  9448                           
  9449                           ; BSR set to: 0
  9450  008DA6  0012               	return		;funcret
  9451  008DA8                     __end_of_cmdGetCADRSSI:
  9452                           	opt callstack 0
  9453                           
  9454 ;; *************** function _cmdGetCAD *****************
  9455 ;; Defined at:
  9456 ;;		line 553 in file "../app/app_src/application.c"
  9457 ;; Parameters:    Size  Location     Type
  9458 ;;		None
  9459 ;; Auto vars:     Size  Location     Type
  9460 ;;		None
  9461 ;; Return value:  Size  Location     Type
  9462 ;;                  1    wreg      void 
  9463 ;; Registers used:
  9464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9465 ;; Tracked objects:
  9466 ;;		On entry : 0/0
  9467 ;;		On exit  : 3F/0
  9468 ;;		Unchanged: 0/0
  9469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9474 ;;Total ram usage:        0 bytes
  9475 ;; Hardware stack levels used:    1
  9476 ;; Hardware stack levels required when called:   16
  9477 ;; This function calls:
  9478 ;;		_printf
  9479 ;; This function is called by:
  9480 ;;		_executeATCommand
  9481 ;; This function uses a non-reentrant model
  9482 ;;
  9483                           
  9484                           	psect	text47
  9485  008E8C                     __ptext47:
  9486                           	opt callstack 0
  9487  008E8C                     _cmdGetCAD:
  9488                           	opt callstack 12
  9489                           
  9490                           ;../app/app_src/application.c: 554:  printf("CAD COUNTER = %02X\r\n",cadCounter);
  9491                           
  9492                           ; BSR set to: 0
  9493                           ;incstack = 0
  9494  008E8C  0E11               	movlw	low STR_32
  9495  008E8E  0100               	movlb	0	; () banked
  9496  008E90  6F75               	movwf	printf@fmt& (0+255),b
  9497  008E92  0EFE               	movlw	high STR_32
  9498  008E94  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9499  008E96  0060  F350  F077   	movff	_cadCounter,?_printf+2
  9500  008E9C  6B78               	clrf	(?_printf+3)& (0+255),b
  9501  008E9E  ECC4  F045         	call	_printf	;wreg free
  9502                           
  9503                           ; BSR set to: 0
  9504  008EA2  0012               	return		;funcret
  9505  008EA4                     __end_of_cmdGetCAD:
  9506                           	opt callstack 0
  9507                           
  9508 ;; *************** function _cmdBootLoad *****************
  9509 ;; Defined at:
  9510 ;;		line 741 in file "../app/app_src/application.c"
  9511 ;; Parameters:    Size  Location     Type
  9512 ;;		None
  9513 ;; Auto vars:     Size  Location     Type
  9514 ;;		None
  9515 ;; Return value:  Size  Location     Type
  9516 ;;                  1    wreg      void 
  9517 ;; Registers used:
  9518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9519 ;; Tracked objects:
  9520 ;;		On entry : 0/0
  9521 ;;		On exit  : 0/0
  9522 ;;		Unchanged: 0/0
  9523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9526 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9527 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9528 ;;Total ram usage:        2 bytes
  9529 ;; Hardware stack levels used:    1
  9530 ;; Hardware stack levels required when called:   16
  9531 ;; This function calls:
  9532 ;;		_DATAEE_WriteByte_Platform
  9533 ;;		_printf
  9534 ;; This function is called by:
  9535 ;;		_executeATCommand
  9536 ;; This function uses a non-reentrant model
  9537 ;;
  9538                           
  9539                           	psect	text48
  9540  008652                     __ptext48:
  9541                           	opt callstack 0
  9542  008652                     _cmdBootLoad:
  9543                           	opt callstack 12
  9544                           
  9545                           ;../app/app_src/application.c: 742:     DATAEE_WriteByte_Platform(0 + 0,0x00);
  9546                           
  9547                           ; BSR set to: 0
  9548                           ;incstack = 0
  9549  008652  0E00               	movlw	0
  9550  008654  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
  9551  008656  0E00               	movlw	0
  9552  008658  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
  9553  00865A  0E00               	movlw	0
  9554  00865C  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
  9555  00865E  ECF1  F040         	call	_DATAEE_WriteByte_Platform	;wreg free
  9556                           
  9557                           ;../app/app_src/application.c: 743:     printf("OK\r\n");
  9558  008662  0ED6               	movlw	low STR_12
  9559  008664  0100               	movlb	0	; () banked
  9560  008666  6F75               	movwf	printf@fmt& (0+255),b
  9561  008668  0EFF               	movlw	high STR_12
  9562  00866A  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9563  00866C  ECC4  F045         	call	_printf	;wreg free
  9564                           
  9565                           ; BSR set to: 0
  9566                           ;../app/app_src/application.c: 744:     _delay((unsigned long)((1000)*(64000000/4000.0))
      +                          );
  9567  008670  0E52               	movlw	82
  9568  008672  6E59               	movwf	(??_cmdBootLoad+1)^0,c
  9569  008674  0E2B               	movlw	43
  9570  008676  6E58               	movwf	??_cmdBootLoad^0,c
  9571  008678  0E00               	movlw	0
  9572  00867A                     u17187:
  9573  00867A  2EE8               	decfsz	wreg,f,c
  9574  00867C  D7FE               	bra	u17187
  9575  00867E  2E58               	decfsz	??_cmdBootLoad^0,f,c
  9576  008680  D7FC               	bra	u17187
  9577  008682  2E59               	decfsz	(??_cmdBootLoad+1)^0,f,c
  9578  008684  D7FA               	bra	u17187
  9579  008686  D000               	nop2	
  9580  008688  00FF               	reset		;# 
  9581  00868A  0012               	return		;funcret
  9582  00868C                     __end_of_cmdBootLoad:
  9583                           	opt callstack 0
  9584                           
  9585 ;; *************** function _cmdBcast *****************
  9586 ;; Defined at:
  9587 ;;		line 276 in file "../app/app_src/application.c"
  9588 ;; Parameters:    Size  Location     Type
  9589 ;;  cmd             2   87[COMRAM] PTR unsigned char 
  9590 ;;		 -> atCommand(80), 
  9591 ;; Auto vars:     Size  Location     Type
  9592 ;;  buf_id          1   33[BANK0 ] unsigned char 
  9593 ;;  p2              3    0        PTR unsigned char 
  9594 ;;  p1              2   31[BANK0 ] PTR unsigned char 
  9595 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  9596 ;; Return value:  Size  Location     Type
  9597 ;;                  1    wreg      void 
  9598 ;; Registers used:
  9599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9600 ;; Tracked objects:
  9601 ;;		On entry : 0/0
  9602 ;;		On exit  : 3F/0
  9603 ;;		Unchanged: 0/0
  9604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9605 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9606 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9607 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9608 ;;      Totals:         4       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9609 ;;Total ram usage:        7 bytes
  9610 ;; Hardware stack levels used:    1
  9611 ;; Hardware stack levels required when called:   16
  9612 ;; This function calls:
  9613 ;;		_NWK_DataReq
  9614 ;;		_get_free_tx_buffer
  9615 ;;		_memcpy
  9616 ;;		_memset
  9617 ;;		_printf
  9618 ;;		_strlen
  9619 ;;		_strstr
  9620 ;; This function is called by:
  9621 ;;		_executeATCommand
  9622 ;; This function uses a non-reentrant model
  9623 ;;
  9624                           
  9625                           	psect	text49
  9626  0032AA                     __ptext49:
  9627                           	opt callstack 0
  9628  0032AA                     _cmdBcast:
  9629                           	opt callstack 12
  9630                           
  9631                           ;../app/app_src/application.c: 277:  char *p1,*p2;;../app/app_src/application.c: 279:  p
      +                          1 = strstr(cmd,"=") + 1;
  9632                           
  9633                           ;incstack = 0
  9634  0032AA  0060  F160  F00D   	movff	cmdBcast@cmd,strstr@h
  9635  0032B0  0060  F164  F00E   	movff	cmdBcast@cmd+1,strstr@h+1
  9636  0032B6  0EDE               	movlw	low (STR_21+3)
  9637  0032B8  6E0F               	movwf	strstr@n^0,c
  9638  0032BA  0EFF               	movlw	high (STR_21+3)
  9639  0032BC  6E10               	movwf	(strstr@n+1)^0,c
  9640  0032BE  EC72  F02E         	call	_strstr	;wreg free
  9641  0032C2  0E01               	movlw	1
  9642  0032C4  240D               	addwf	?_strstr^0,w,c
  9643  0032C6  0100               	movlb	0	; () banked
  9644  0032C8  6F7F               	movwf	cmdBcast@p1& (0+255),b
  9645  0032CA  0E00               	movlw	0
  9646  0032CC  200E               	addwfc	(?_strstr+1)^0,w,c
  9647  0032CE  6F80               	movwf	(cmdBcast@p1+1)& (0+255),b
  9648                           
  9649                           ; BSR set to: 0
  9650                           ;../app/app_src/application.c: 281:  if((!p1) || (strlen(p1) > 64)){
  9651  0032D0  517F               	movf	cmdBcast@p1& (0+255),w,b
  9652  0032D2  1180               	iorwf	(cmdBcast@p1+1)& (0+255),w,b
  9653  0032D4  B4D8               	btfsc	status,2,c
  9654  0032D6  D00E               	goto	u15990
  9655                           
  9656                           ; BSR set to: 0
  9657  0032D8  0060  F1FC  F002   	movff	cmdBcast@p1,strlen@s
  9658  0032DE  0060  F200  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9659  0032E4  EC7E  F03F         	call	_strlen	;wreg free
  9660  0032E8  5003               	movf	(?_strlen+1)^0,w,c
  9661  0032EA  E104               	bnz	u15990
  9662  0032EC  0E41               	movlw	65
  9663  0032EE  5C02               	subwf	?_strlen^0,w,c
  9664  0032F0  A0D8               	btfss	status,0,c
  9665  0032F2  D00A               	goto	l15822
  9666  0032F4                     u15990:
  9667                           
  9668                           ;../app/app_src/application.c: 282:   printf("NOT OK:%u\r\n", MESSAGE_TOO_LONG);
  9669  0032F4  0EC5               	movlw	low STR_3
  9670  0032F6  0100               	movlb	0	; () banked
  9671  0032F8  6F75               	movwf	printf@fmt& (0+255),b
  9672  0032FA  0EFE               	movlw	high STR_3
  9673  0032FC  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9674  0032FE  0E07               	movlw	7
  9675  003300  6F77               	movwf	(?_printf+2)& (0+255),b
  9676  003302  ECC4  F045         	call	_printf	;wreg free
  9677                           
  9678                           ;../app/app_src/application.c: 283:  }
  9679  003306  0012               	return	
  9680  003308                     l15822:
  9681                           
  9682                           ;../app/app_src/application.c: 285:   uint8_t buf_id;;../app/app_src/application.c: 286:
      +                                   if(!get_free_tx_buffer(&buf_id)){
  9683  003308  0E81               	movlw	low cmdBcast@buf_id
  9684  00330A  6E02               	movwf	get_free_tx_buffer@buf_id^0,c
  9685  00330C  EC72  F03C         	call	_get_free_tx_buffer	;wreg free
  9686  003310  0900               	iorlw	0
  9687  003312  A4D8               	btfss	status,2,c
  9688  003314  D00A               	goto	l15828
  9689                           
  9690                           ;../app/app_src/application.c: 287:             printf("NOT OK:%u\r\n", NO_FREE_BUF);
  9691  003316  0EC5               	movlw	low STR_3
  9692  003318  0100               	movlb	0	; () banked
  9693  00331A  6F75               	movwf	printf@fmt& (0+255),b
  9694  00331C  0EFE               	movlw	high STR_3
  9695  00331E  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9696  003320  0E11               	movlw	17
  9697  003322  6F77               	movwf	(?_printf+2)& (0+255),b
  9698  003324  ECC4  F045         	call	_printf	;wreg free
  9699  003328  0012               	return	
  9700  00332A                     l15828:
  9701                           
  9702                           ;../app/app_src/application.c: 290:         memset(&tx_buffer[buf_id].payload, 0, (127 -
      +                           16 - 2 ));
  9703  00332A  0100               	movlb	0	; () banked
  9704  00332C  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9705  00332E  0D83               	mullw	131
  9706  003330  0E80               	movlw	low (_tx_buffer+22)
  9707  003332  24F3               	addwf	243,w,c
  9708  003334  6E02               	movwf	memset@dest^0,c
  9709  003336  0E08               	movlw	high (_tx_buffer+22)
  9710  003338  20F4               	addwfc	prodh,w,c
  9711  00333A  6E03               	movwf	(memset@dest+1)^0,c
  9712  00333C  0E00               	movlw	0
  9713  00333E  6E05               	movwf	(memset@c+1)^0,c
  9714  003340  0E00               	movlw	0
  9715  003342  6E04               	movwf	memset@c^0,c
  9716  003344  0E00               	movlw	0
  9717  003346  6E07               	movwf	(memset@n+1)^0,c
  9718  003348  0E6D               	movlw	109
  9719  00334A  6E06               	movwf	memset@n^0,c
  9720  00334C  EC10  F022         	call	_memset	;wreg free
  9721                           
  9722                           ;../app/app_src/application.c: 291:   memcpy(&tx_buffer[buf_id].payload,p1,strlen(p1));
  9723  003350  0100               	movlb	0	; () banked
  9724  003352  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9725  003354  0D83               	mullw	131
  9726  003356  0E80               	movlw	low (_tx_buffer+22)
  9727  003358  24F3               	addwf	243,w,c
  9728  00335A  6E08               	movwf	memcpy@d1^0,c
  9729  00335C  0E08               	movlw	high (_tx_buffer+22)
  9730  00335E  20F4               	addwfc	prodh,w,c
  9731  003360  6E09               	movwf	(memcpy@d1+1)^0,c
  9732  003362  0060  F1FC  F00A   	movff	cmdBcast@p1,memcpy@s1
  9733  003368  0060  F200  F00B   	movff	cmdBcast@p1+1,memcpy@s1+1
  9734  00336E  0060  F1FC  F002   	movff	cmdBcast@p1,strlen@s
  9735  003374  0060  F200  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9736  00337A  EC7E  F03F         	call	_strlen	;wreg free
  9737  00337E  0060  F008  F00C   	movff	?_strlen,memcpy@n
  9738  003384  0060  F00C  F00D   	movff	?_strlen+1,memcpy@n+1
  9739  00338A  ECF6  F03A         	call	_memcpy	;wreg free
  9740                           
  9741                           ;../app/app_src/application.c: 292:   tx_buffer[buf_id].nwkDataReq.dstAddr = 0xffff;
  9742  00338E  0100               	movlb	0	; () banked
  9743  003390  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9744  003392  0D83               	mullw	131
  9745  003394  0E72               	movlw	low (_tx_buffer+8)
  9746  003396  24F3               	addwf	243,w,c
  9747  003398  6ED9               	movwf	fsr2l,c
  9748  00339A  0E08               	movlw	high (_tx_buffer+8)
  9749  00339C  20F4               	addwfc	prodh,w,c
  9750  00339E  6EDA               	movwf	fsr2h,c
  9751  0033A0  0EFF               	movlw	255
  9752  0033A2  6EDE               	movwf	postinc2,c
  9753  0033A4  0EFF               	movlw	255
  9754  0033A6  6EDD               	movwf	postdec2,c
  9755                           
  9756                           ; BSR set to: 0
  9757                           ;../app/app_src/application.c: 293:         tx_buffer[buf_id].nwkDataReq.dstEndpoint = A
      +                          SCII_EP;
  9758  0033A8  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9759  0033AA  0D83               	mullw	131
  9760  0033AC  0E74               	movlw	low (_tx_buffer+10)
  9761  0033AE  24F3               	addwf	243,w,c
  9762  0033B0  6ED9               	movwf	fsr2l,c
  9763  0033B2  0E08               	movlw	high (_tx_buffer+10)
  9764  0033B4  20F4               	addwfc	prodh,w,c
  9765  0033B6  6EDA               	movwf	fsr2h,c
  9766  0033B8  0E01               	movlw	1
  9767  0033BA  6EDF               	movwf	indf2,c
  9768                           
  9769                           ; BSR set to: 0
  9770                           ;../app/app_src/application.c: 294:         tx_buffer[buf_id].nwkDataReq.srcEndpoint = A
      +                          SCII_EP;
  9771  0033BC  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9772  0033BE  0D83               	mullw	131
  9773  0033C0  0E75               	movlw	low (_tx_buffer+11)
  9774  0033C2  24F3               	addwf	243,w,c
  9775  0033C4  6ED9               	movwf	fsr2l,c
  9776  0033C6  0E08               	movlw	high (_tx_buffer+11)
  9777  0033C8  20F4               	addwfc	prodh,w,c
  9778  0033CA  6EDA               	movwf	fsr2h,c
  9779  0033CC  0E01               	movlw	1
  9780  0033CE  6EDF               	movwf	indf2,c
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;../app/app_src/application.c: 295:         tx_buffer[buf_id].nwkDataReq.options = 0;
  9784  0033D0  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9785  0033D2  0D83               	mullw	131
  9786  0033D4  0E76               	movlw	low (_tx_buffer+12)
  9787  0033D6  24F3               	addwf	243,w,c
  9788  0033D8  6ED9               	movwf	fsr2l,c
  9789  0033DA  0E08               	movlw	high (_tx_buffer+12)
  9790  0033DC  20F4               	addwfc	prodh,w,c
  9791  0033DE  6EDA               	movwf	fsr2h,c
  9792  0033E0  0E00               	movlw	0
  9793  0033E2  6EDF               	movwf	indf2,c
  9794                           
  9795                           ; BSR set to: 0
  9796                           ;../app/app_src/application.c: 296:         tx_buffer[buf_id].nwkDataReq.data = &tx_buff
      +                          er[buf_id].payload;
  9797  0033E4  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9798  0033E6  0D83               	mullw	131
  9799  0033E8  0E80               	movlw	low (_tx_buffer+22)
  9800  0033EA  24F3               	addwf	243,w,c
  9801  0033EC  6E5A               	movwf	??_cmdBcast^0,c
  9802  0033EE  0E08               	movlw	high (_tx_buffer+22)
  9803  0033F0  20F4               	addwfc	prodh,w,c
  9804  0033F2  6E5B               	movwf	(??_cmdBcast+1)^0,c
  9805  0033F4  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9806  0033F6  0D83               	mullw	131
  9807  0033F8  0E79               	movlw	low (_tx_buffer+15)
  9808  0033FA  24F3               	addwf	243,w,c
  9809  0033FC  6ED9               	movwf	fsr2l,c
  9810  0033FE  0E08               	movlw	high (_tx_buffer+15)
  9811  003400  20F4               	addwfc	prodh,w,c
  9812  003402  6EDA               	movwf	fsr2h,c
  9813  003404  0060  F16B  FFDE   	movff	??_cmdBcast,postinc2
  9814  00340A  0060  F16F  FFDD   	movff	??_cmdBcast+1,postdec2
  9815                           
  9816                           ; BSR set to: 0
  9817                           ;../app/app_src/application.c: 297:         tx_buffer[buf_id].nwkDataReq.size = strlen(p
      +                          1);
  9818  003410  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9819  003412  0D83               	mullw	131
  9820  003414  0E7B               	movlw	low (_tx_buffer+17)
  9821  003416  24F3               	addwf	243,w,c
  9822  003418  6ED9               	movwf	fsr2l,c
  9823  00341A  0E08               	movlw	high (_tx_buffer+17)
  9824  00341C  20F4               	addwfc	prodh,w,c
  9825  00341E  6EDA               	movwf	fsr2h,c
  9826  003420  0060  F1FC  F002   	movff	cmdBcast@p1,strlen@s
  9827  003426  0060  F200  F003   	movff	cmdBcast@p1+1,strlen@s+1
  9828  00342C  EC7E  F03F         	call	_strlen	;wreg free
  9829  003430  5002               	movf	?_strlen^0,w,c
  9830  003432  6EDF               	movwf	indf2,c
  9831                           
  9832                           ;../app/app_src/application.c: 298:         tx_buffer[buf_id].nwkDataReq.confirm = (void
      +                          *)&appDataConf;
  9833  003434  0100               	movlb	0	; () banked
  9834  003436  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9835  003438  0D83               	mullw	131
  9836  00343A  0E7C               	movlw	low (_tx_buffer+18)
  9837  00343C  24F3               	addwf	243,w,c
  9838  00343E  6ED9               	movwf	fsr2l,c
  9839  003440  0E08               	movlw	high (_tx_buffer+18)
  9840  003442  20F4               	addwfc	prodh,w,c
  9841  003444  6EDA               	movwf	fsr2h,c
  9842  003446  0ECC               	movlw	low _appDataConf
  9843  003448  6EDE               	movwf	postinc2,c
  9844  00344A  0E8B               	movlw	high _appDataConf
  9845  00344C  6EDD               	movwf	postdec2,c
  9846                           
  9847                           ; BSR set to: 0
  9848                           ;../app/app_src/application.c: 299:         tx_buffer[buf_id].msgid = msgIDCounter++;
  9849  00344E  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9850  003450  0D83               	mullw	131
  9851  003452  0E6C               	movlw	low (_tx_buffer+2)
  9852  003454  24F3               	addwf	243,w,c
  9853  003456  6ED9               	movwf	fsr2l,c
  9854  003458  0E08               	movlw	high (_tx_buffer+2)
  9855  00345A  20F4               	addwfc	prodh,w,c
  9856  00345C  6EDA               	movwf	fsr2h,c
  9857  00345E  0060  F36F  FFDF   	movff	_msgIDCounter,indf2
  9858                           
  9859                           ; BSR set to: 0
  9860  003464  2BDB               	incf	_msgIDCounter& (0+255),f,b
  9861                           
  9862                           ; BSR set to: 0
  9863                           ;../app/app_src/application.c: 300:         NWK_DataReq(&tx_buffer[buf_id].nwkDataReq);
  9864  003466  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9865  003468  0D83               	mullw	131
  9866  00346A  0E6D               	movlw	low (_tx_buffer+3)
  9867  00346C  24F3               	addwf	243,w,c
  9868  00346E  6E02               	movwf	NWK_DataReq@req^0,c
  9869  003470  0E08               	movlw	high (_tx_buffer+3)
  9870  003472  20F4               	addwfc	prodh,w,c
  9871  003474  6E03               	movwf	(NWK_DataReq@req+1)^0,c
  9872  003476  EC78  F03A         	call	_NWK_DataReq	;wreg free
  9873                           
  9874                           ; BSR set to: 0
  9875                           ;../app/app_src/application.c: 301:   printf("OK:%u\r\n", tx_buffer[buf_id].msgid);
  9876  00347A  0EC9               	movlw	low (STR_3+4)
  9877  00347C  6F75               	movwf	printf@fmt& (0+255),b
  9878  00347E  0EFE               	movlw	high (STR_3+4)
  9879  003480  6F76               	movwf	(printf@fmt+1)& (0+255),b
  9880  003482  5181               	movf	cmdBcast@buf_id& (0+255),w,b
  9881  003484  0D83               	mullw	131
  9882  003486  0E6C               	movlw	low (_tx_buffer+2)
  9883  003488  24F3               	addwf	243,w,c
  9884  00348A  6ED9               	movwf	fsr2l,c
  9885  00348C  0E08               	movlw	high (_tx_buffer+2)
  9886  00348E  20F4               	addwfc	prodh,w,c
  9887  003490  6EDA               	movwf	fsr2h,c
  9888  003492  50DF               	movf	indf2,w,c
  9889  003494  6E5A               	movwf	??_cmdBcast^0,c
  9890  003496  505A               	movf	??_cmdBcast^0,w,c
  9891  003498  6F77               	movwf	(?_printf+2)& (0+255),b
  9892  00349A  6B78               	clrf	(?_printf+3)& (0+255),b
  9893  00349C  ECC4  F045         	call	_printf	;wreg free
  9894                           
  9895                           ; BSR set to: 0
  9896  0034A0  0012               	return		;funcret
  9897  0034A2                     __end_of_cmdBcast:
  9898                           	opt callstack 0
  9899                           
  9900 ;; *************** function _strstr *****************
  9901 ;; Defined at:
  9902 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strstr.c"
  9903 ;; Parameters:    Size  Location     Type
  9904 ;;  h               2   12[COMRAM] PTR const unsigned char 
  9905 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
  9906 ;;  n               2   14[COMRAM] PTR const unsigned char 
  9907 ;;		 -> STR_133(10), STR_131(10), STR_129(6), STR_127(6), 
  9908 ;;		 -> STR_125(7), STR_123(5), STR_121(7), STR_119(7), 
  9909 ;;		 -> STR_117(6), STR_115(9), STR_113(8), STR_111(8), 
  9910 ;;		 -> STR_109(7), STR_107(6), STR_105(3), STR_103(9), 
  9911 ;;		 -> STR_101(7), STR_99(7), STR_97(10), STR_95(10), 
  9912 ;;		 -> STR_93(15), STR_91(13), STR_89(9), STR_87(7), 
  9913 ;;		 -> STR_85(7), STR_83(10), STR_81(7), STR_79(8), 
  9914 ;;		 -> STR_77(11), STR_75(5), STR_73(5), STR_71(7), 
  9915 ;;		 -> STR_69(9), STR_67(7), STR_60(2), STR_54(6), 
  9916 ;;		 -> STR_52(6), STR_50(5), STR_46(2), STR_41(2), 
  9917 ;;		 -> STR_37(2), STR_28(2), STR_25(2), STR_15(2), 
  9918 ;;		 -> STR_11(2), STR_6(2), STR_2(2), STR_1(2), 
  9919 ;; Auto vars:     Size  Location     Type
  9920 ;;  nl              2   16[COMRAM] unsigned int 
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  2   12[COMRAM] PTR unsigned char 
  9923 ;; Registers used:
  9924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9925 ;; Tracked objects:
  9926 ;;		On entry : 0/0
  9927 ;;		On exit  : 0/0
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9931 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9933 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9934 ;;Total ram usage:        6 bytes
  9935 ;; Hardware stack levels used:    1
  9936 ;; Hardware stack levels required when called:    8
  9937 ;; This function calls:
  9938 ;;		_strchr
  9939 ;;		_strlen
  9940 ;;		_strncmp
  9941 ;; This function is called by:
  9942 ;;		_cmdSend
  9943 ;;		_cmdBcast
  9944 ;;		_cmdSetAddr
  9945 ;;		_cmdSetNaddr
  9946 ;;		_cmdSetAES
  9947 ;;		_cmdSetRFCH
  9948 ;;		_cmdSetTX
  9949 ;;		_cmdSetCADRSSI
  9950 ;;		_cmdSetParity
  9951 ;;		_cmdSetSF
  9952 ;;		_executeATCommand
  9953 ;; This function uses a non-reentrant model
  9954 ;;
  9955                           
  9956                           	psect	text50
  9957  005CE4                     __ptext50:
  9958                           	opt callstack 0
  9959  005CE4                     _strstr:
  9960                           	opt callstack 20
  9961                           
  9962                           ; BSR set to: 0
  9963                           ;incstack = 0
  9964  005CE4  500F               	movf	strstr@n^0,w,c
  9965  005CE6  1010               	iorwf	(strstr@n+1)^0,w,c
  9966  005CE8  B4D8               	btfsc	status,2,c
  9967  005CEA  D063               	goto	u15330
  9968  005CEC  0060  F03C  F002   	movff	strstr@n,strlen@s
  9969  005CF2  0060  F040  F003   	movff	strstr@n+1,strlen@s+1
  9970  005CF8  EC7E  F03F         	call	_strlen	;wreg free
  9971  005CFC  0060  F008  F011   	movff	?_strlen,strstr@nl
  9972  005D02  0060  F00C  F012   	movff	?_strlen+1,strstr@nl+1
  9973  005D08  D038               	goto	l15376
  9974  005D0A                     l15368:
  9975  005D0A  0060  F034  F002   	movff	strstr@h,strncmp@_l
  9976  005D10  0060  F038  F003   	movff	strstr@h+1,strncmp@_l+1
  9977  005D16  0060  F03C  F004   	movff	strstr@n,strncmp@_r
  9978  005D1C  0060  F040  F005   	movff	strstr@n+1,strncmp@_r+1
  9979  005D22  0060  F044  F006   	movff	strstr@nl,strncmp@n
  9980  005D28  0060  F048  F007   	movff	strstr@nl+1,strncmp@n+1
  9981  005D2E  ECB2  F025         	call	_strncmp	;wreg free
  9982  005D32  5002               	movf	?_strncmp^0,w,c
  9983  005D34  1003               	iorwf	(?_strncmp+1)^0,w,c
  9984  005D36  A4D8               	btfss	status,2,c
  9985  005D38  D007               	goto	l15374
  9986  005D3A  0060  F034  F00D   	movff	strstr@h,?_strstr
  9987  005D40  0060  F038  F00E   	movff	strstr@h+1,?_strstr+1
  9988  005D46  0012               	return	
  9989  005D48                     l15374:
  9990  005D48  0E01               	movlw	1
  9991  005D4A  240D               	addwf	strstr@h^0,w,c
  9992  005D4C  6E02               	movwf	strchr@s^0,c
  9993  005D4E  0E00               	movlw	0
  9994  005D50  200E               	addwfc	(strstr@h+1)^0,w,c
  9995  005D52  6E03               	movwf	(strchr@s+1)^0,c
  9996  005D54  0060  F03F  FFF6   	movff	strstr@n,tblptrl
  9997  005D5A  0060  F043  FFF7   	movff	strstr@n+1,tblptrh
  9998  005D60                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9999  005D60  6AF8               	clrf	tblptru,c
 10000  005D62                     	endif
 10001  005D62                     	if	0	;tblptru may be non-zero
 10002  005D62                     	endif
 10003  005D62  0008               	tblrd		*
 10004  005D64  50F5               	movf	tablat,w,c
 10005  005D66  6E04               	movwf	strchr@c^0,c
 10006  005D68  6A05               	clrf	(strchr@c+1)^0,c
 10007  005D6A  ECB3  F039         	call	_strchr	;wreg free
 10008  005D6E  0060  F008  F00D   	movff	?_strchr,strstr@h
 10009  005D74  0060  F00C  F00E   	movff	?_strchr+1,strstr@h+1
 10010  005D7A                     l15376:
 10011  005D7A  500D               	movf	strstr@h^0,w,c
 10012  005D7C  100E               	iorwf	(strstr@h+1)^0,w,c
 10013  005D7E  B4D8               	btfsc	status,2,c
 10014  005D80  D018               	goto	u15330
 10015  005D82  0060  F037  FFF6   	movff	strstr@h,tblptrl
 10016  005D88  0060  F03B  FFF7   	movff	strstr@h+1,tblptrh
 10017  005D8E  0E00               	movlw	low (__mediumconst shr (0+16))
 10018  005D90  6EF8               	movwf	tblptru,c
 10019  005D92  0E0F               	movlw	(high __ramtop+-1)
 10020  005D94  64F7               	cpfsgt	tblptrh,c
 10021  005D96  D003               	bra	u15327
 10022  005D98  0008               	tblrd		*
 10023  005D9A  50F5               	movf	tablat,w,c
 10024  005D9C  D007               	bra	u15320
 10025  005D9E                     u15327:
 10026  005D9E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10027  005DA4  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10028  005DAA  50EF               	movf	indf0,w,c
 10029  005DAC                     u15320:
 10030  005DAC  0900               	iorlw	0
 10031  005DAE  A4D8               	btfss	status,2,c
 10032  005DB0  D7AC               	goto	l15368
 10033  005DB2                     u15330:
 10034  005DB2  0E00               	movlw	0
 10035  005DB4  6E0D               	movwf	?_strstr^0,c
 10036  005DB6  0E00               	movlw	0
 10037  005DB8  6E0E               	movwf	(?_strstr+1)^0,c
 10038  005DBA  0012               	return		;funcret
 10039  005DBC                     __end_of_strstr:
 10040                           	opt callstack 0
 10041                           
 10042 ;; *************** function _strncmp *****************
 10043 ;; Defined at:
 10044 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
 10045 ;; Parameters:    Size  Location     Type
 10046 ;;  _l              2    1[COMRAM] PTR const unsigned char 
 10047 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
 10048 ;;  _r              2    3[COMRAM] PTR const unsigned char 
 10049 ;;		 -> STR_133(10), STR_131(10), STR_129(6), STR_127(6), 
 10050 ;;		 -> STR_125(7), STR_123(5), STR_121(7), STR_119(7), 
 10051 ;;		 -> STR_117(6), STR_115(9), STR_113(8), STR_111(8), 
 10052 ;;		 -> STR_109(7), STR_107(6), STR_105(3), STR_103(9), 
 10053 ;;		 -> STR_101(7), STR_99(7), STR_97(10), STR_95(10), 
 10054 ;;		 -> STR_93(15), STR_91(13), STR_89(9), STR_87(7), 
 10055 ;;		 -> STR_85(7), STR_83(10), STR_81(7), STR_79(8), 
 10056 ;;		 -> STR_77(11), STR_75(5), STR_73(5), STR_71(7), 
 10057 ;;		 -> STR_69(9), STR_67(7), STR_60(2), STR_54(6), 
 10058 ;;		 -> STR_52(6), STR_50(5), STR_46(2), STR_41(2), 
 10059 ;;		 -> STR_37(2), STR_28(2), STR_25(2), STR_15(2), 
 10060 ;;		 -> STR_11(2), STR_6(2), STR_2(2), STR_1(2), 
 10061 ;;  n               2    5[COMRAM] unsigned int 
 10062 ;; Auto vars:     Size  Location     Type
 10063 ;;  r               2   10[COMRAM] PTR const unsigned char 
 10064 ;;		 -> STR_133(10), STR_131(10), STR_129(6), STR_127(6), 
 10065 ;;		 -> STR_125(7), STR_123(5), STR_121(7), STR_119(7), 
 10066 ;;		 -> STR_117(6), STR_115(9), STR_113(8), STR_111(8), 
 10067 ;;		 -> STR_109(7), STR_107(6), STR_105(3), STR_103(9), 
 10068 ;;		 -> STR_101(7), STR_99(7), STR_97(10), STR_95(10), 
 10069 ;;		 -> STR_93(15), STR_91(13), STR_89(9), STR_87(7), 
 10070 ;;		 -> STR_85(7), STR_83(10), STR_81(7), STR_79(8), 
 10071 ;;		 -> STR_77(11), STR_75(5), STR_73(5), STR_71(7), 
 10072 ;;		 -> STR_69(9), STR_67(7), STR_60(2), STR_54(6), 
 10073 ;;		 -> STR_52(6), STR_50(5), STR_46(2), STR_41(2), 
 10074 ;;		 -> STR_37(2), STR_28(2), STR_25(2), STR_15(2), 
 10075 ;;		 -> STR_11(2), STR_6(2), STR_2(2), STR_1(2), 
 10076 ;;  l               2    8[COMRAM] PTR const unsigned char 
 10077 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
 10078 ;; Return value:  Size  Location     Type
 10079 ;;                  2    1[COMRAM] int 
 10080 ;; Registers used:
 10081 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 10082 ;; Tracked objects:
 10083 ;;		On entry : 0/0
 10084 ;;		On exit  : 0/0
 10085 ;;		Unchanged: 0/0
 10086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10087 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10088 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10089 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10090 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10091 ;;Total ram usage:       11 bytes
 10092 ;; Hardware stack levels used:    1
 10093 ;; Hardware stack levels required when called:    7
 10094 ;; This function calls:
 10095 ;;		Nothing
 10096 ;; This function is called by:
 10097 ;;		_strstr
 10098 ;; This function uses a non-reentrant model
 10099 ;;
 10100                           
 10101                           	psect	text51
 10102  004B64                     __ptext51:
 10103                           	opt callstack 0
 10104  004B64                     _strncmp:
 10105                           	opt callstack 20
 10106                           
 10107                           ;incstack = 0
 10108  004B64  0060  F008  F009   	movff	strncmp@_l,strncmp@l
 10109  004B6A  0060  F00C  F00A   	movff	strncmp@_l+1,strncmp@l+1
 10110  004B70  0060  F010  F00B   	movff	strncmp@_r,strncmp@r
 10111  004B76  0060  F014  F00C   	movff	strncmp@_r+1,strncmp@r+1
 10112  004B7C  0606               	decf	strncmp@n^0,f,c
 10113  004B7E  A0D8               	btfss	status,0,c
 10114  004B80  0607               	decf	(strncmp@n+1)^0,f,c
 10115  004B82  2806               	incf	strncmp@n^0,w,c
 10116  004B84  E10F               	bnz	l15166
 10117  004B86  2807               	incf	(strncmp@n+1)^0,w,c
 10118  004B88  A4D8               	btfss	status,2,c
 10119  004B8A  D00C               	goto	l15166
 10120  004B8C  0E00               	movlw	0
 10121  004B8E  6E03               	movwf	(?_strncmp+1)^0,c
 10122  004B90  0E00               	movlw	0
 10123  004B92  6E02               	movwf	?_strncmp^0,c
 10124  004B94  0012               	return	
 10125  004B96                     l15164:
 10126  004B96  4A09               	infsnz	strncmp@l^0,f,c
 10127  004B98  2A0A               	incf	(strncmp@l+1)^0,f,c
 10128  004B9A  4A0B               	infsnz	strncmp@r^0,f,c
 10129  004B9C  2A0C               	incf	(strncmp@r+1)^0,f,c
 10130  004B9E  0606               	decf	strncmp@n^0,f,c
 10131  004BA0  A0D8               	btfss	status,0,c
 10132  004BA2  0607               	decf	(strncmp@n+1)^0,f,c
 10133  004BA4                     l15166:
 10134  004BA4  0060  F027  FFF6   	movff	strncmp@l,tblptrl
 10135  004BAA  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
 10136  004BB0  0E00               	movlw	low (__mediumconst shr (0+16))
 10137  004BB2  6EF8               	movwf	tblptru,c
 10138  004BB4  0E0F               	movlw	(high __ramtop+-1)
 10139  004BB6  64F7               	cpfsgt	tblptrh,c
 10140  004BB8  D003               	bra	u14777
 10141  004BBA  0008               	tblrd		*
 10142  004BBC  50F5               	movf	tablat,w,c
 10143  004BBE  D007               	bra	u14770
 10144  004BC0                     u14777:
 10145  004BC0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10146  004BC6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10147  004BCC  50EF               	movf	indf0,w,c
 10148  004BCE                     u14770:
 10149  004BCE  0900               	iorlw	0
 10150  004BD0  B4D8               	btfsc	status,2,c
 10151  004BD2  D033               	goto	u14810
 10152  004BD4  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
 10153  004BDA  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
 10154  004BE0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10155  004BE0  6AF8               	clrf	tblptru,c
 10156  004BE2                     	endif
 10157  004BE2                     	if	0	;tblptru may be non-zero
 10158  004BE2                     	endif
 10159  004BE2  0008               	tblrd		*
 10160  004BE4  50F5               	movf	tablat,w,c
 10161  004BE6  0900               	iorlw	0
 10162  004BE8  B4D8               	btfsc	status,2,c
 10163  004BEA  D027               	goto	u14810
 10164  004BEC  5006               	movf	strncmp@n^0,w,c
 10165  004BEE  1007               	iorwf	(strncmp@n+1)^0,w,c
 10166  004BF0  B4D8               	btfsc	status,2,c
 10167  004BF2  D023               	goto	u14810
 10168  004BF4  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
 10169  004BFA  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
 10170  004C00                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10171  004C00  6AF8               	clrf	tblptru,c
 10172  004C02                     	endif
 10173  004C02                     	if	0	;tblptru may be non-zero
 10174  004C02                     	endif
 10175  004C02  0008               	tblrd		*
 10176  004C04  006F FFD4  F008    	movff	tablat,??_strncmp
 10177  004C0A  0060  F027  FFF6   	movff	strncmp@l,tblptrl
 10178  004C10  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
 10179  004C16  0E00               	movlw	low (__mediumconst shr (0+16))
 10180  004C18  6EF8               	movwf	tblptru,c
 10181  004C1A  0E0F               	movlw	(high __ramtop+-1)
 10182  004C1C  64F7               	cpfsgt	tblptrh,c
 10183  004C1E  D003               	bra	u14817
 10184  004C20  0008               	tblrd		*
 10185  004C22  50F5               	movf	tablat,w,c
 10186  004C24  D007               	bra	u14815
 10187  004C26                     u14817:
 10188  004C26  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10189  004C2C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10190  004C32  50EF               	movf	indf0,w,c
 10191  004C34                     u14815:
 10192  004C34  1808               	xorwf	??_strncmp^0,w,c
 10193  004C36  B4D8               	btfsc	status,2,c
 10194  004C38  D7AE               	goto	l15164
 10195  004C3A                     u14810:
 10196  004C3A  0060  F027  FFF6   	movff	strncmp@l,tblptrl
 10197  004C40  0060  F02B  FFF7   	movff	strncmp@l+1,tblptrh
 10198  004C46  0E00               	movlw	low (__mediumconst shr (0+16))
 10199  004C48  6EF8               	movwf	tblptru,c
 10200  004C4A  0E0F               	movlw	(high __ramtop+-1)
 10201  004C4C  64F7               	cpfsgt	tblptrh,c
 10202  004C4E  D003               	bra	u14827
 10203  004C50  0008               	tblrd		*
 10204  004C52  50F5               	movf	tablat,w,c
 10205  004C54  D007               	bra	u14820
 10206  004C56                     u14827:
 10207  004C56  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10208  004C5C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10209  004C62  50EF               	movf	indf0,w,c
 10210  004C64                     u14820:
 10211  004C64  6E08               	movwf	??_strncmp^0,c
 10212  004C66  0060  F02F  FFF6   	movff	strncmp@r,tblptrl
 10213  004C6C  0060  F033  FFF7   	movff	strncmp@r+1,tblptrh
 10214  004C72                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10215  004C72  6AF8               	clrf	tblptru,c
 10216  004C74                     	endif
 10217  004C74                     	if	0	;tblptru may be non-zero
 10218  004C74                     	endif
 10219  004C74  0008               	tblrd		*
 10220  004C76  50F5               	movf	tablat,w,c
 10221  004C78  5C08               	subwf	??_strncmp^0,w,c
 10222  004C7A  6E02               	movwf	?_strncmp^0,c
 10223  004C7C  6A03               	clrf	(?_strncmp+1)^0,c
 10224  004C7E  A0D8               	btfss	status,0,c
 10225  004C80  0603               	decf	(?_strncmp+1)^0,f,c
 10226  004C82  0012               	return		;funcret
 10227  004C84                     __end_of_strncmp:
 10228                           	opt callstack 0
 10229                           
 10230 ;; *************** function _strchr *****************
 10231 ;; Defined at:
 10232 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strchr.c"
 10233 ;; Parameters:    Size  Location     Type
 10234 ;;  s               2    1[COMRAM] PTR const unsigned char 
 10235 ;;		 -> STR_58(2), STR_57(2), atCommand(80), NULL(0), 
 10236 ;;  c               2    3[COMRAM] int 
 10237 ;; Auto vars:     Size  Location     Type
 10238 ;;		None
 10239 ;; Return value:  Size  Location     Type
 10240 ;;                  2    1[COMRAM] PTR unsigned char 
 10241 ;; Registers used:
 10242 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 10243 ;; Tracked objects:
 10244 ;;		On entry : 0/0
 10245 ;;		On exit  : 0/0
 10246 ;;		Unchanged: 0/0
 10247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10248 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10250 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10251 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10252 ;;Total ram usage:        6 bytes
 10253 ;; Hardware stack levels used:    1
 10254 ;; Hardware stack levels required when called:    7
 10255 ;; This function calls:
 10256 ;;		Nothing
 10257 ;; This function is called by:
 10258 ;;		_strstr
 10259 ;;		_strcspn
 10260 ;;		_strspn
 10261 ;; This function uses a non-reentrant model
 10262 ;;
 10263                           
 10264                           	psect	text52
 10265  007366                     __ptext52:
 10266                           	opt callstack 0
 10267  007366                     _strchr:
 10268                           	opt callstack 20
 10269                           
 10270                           ;incstack = 0
 10271  007366  0060  F00B  FFF6   	movff	strchr@s,tblptrl
 10272  00736C  0060  F00F  FFF7   	movff	strchr@s+1,tblptrh
 10273  007372  0E00               	movlw	low (__mediumconst shr (0+16))
 10274  007374  6EF8               	movwf	tblptru,c
 10275  007376  0E0F               	movlw	(high __ramtop+-1)
 10276  007378  64F7               	cpfsgt	tblptrh,c
 10277  00737A  D003               	bra	u14337
 10278  00737C  0008               	tblrd		*
 10279  00737E  50F5               	movf	tablat,w,c
 10280  007380  D007               	bra	u14330
 10281  007382                     u14337:
 10282  007382  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10283  007388  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10284  00738E  50EF               	movf	indf0,w,c
 10285  007390                     u14330:
 10286  007390  1804               	xorwf	strchr@c^0,w,c
 10287  007392  A4D8               	btfss	status,2,c
 10288  007394  D007               	goto	l14800
 10289  007396  0060  F008  F002   	movff	strchr@s,?_strchr
 10290  00739C  0060  F00C  F003   	movff	strchr@s+1,?_strchr+1
 10291  0073A2  0012               	return	
 10292  0073A4                     l14800:
 10293  0073A4  5002               	movf	strchr@s^0,w,c
 10294  0073A6  6E06               	movwf	??_strchr^0,c
 10295  0073A8  5003               	movf	(strchr@s+1)^0,w,c
 10296  0073AA  6E07               	movwf	(??_strchr+1)^0,c
 10297  0073AC  4A02               	infsnz	strchr@s^0,f,c
 10298  0073AE  2A03               	incf	(strchr@s+1)^0,f,c
 10299  0073B0  0060  F01B  FFF6   	movff	??_strchr,tblptrl
 10300  0073B6  0060  F01F  FFF7   	movff	??_strchr+1,tblptrh
 10301  0073BC  0E00               	movlw	low (__mediumconst shr (0+16))
 10302  0073BE  6EF8               	movwf	tblptru,c
 10303  0073C0  0E0F               	movlw	(high __ramtop+-1)
 10304  0073C2  64F7               	cpfsgt	tblptrh,c
 10305  0073C4  D003               	bra	u14357
 10306  0073C6  0008               	tblrd		*
 10307  0073C8  50F5               	movf	tablat,w,c
 10308  0073CA  D007               	bra	u14350
 10309  0073CC                     u14357:
 10310  0073CC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10311  0073D2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10312  0073D8  50EF               	movf	indf0,w,c
 10313  0073DA                     u14350:
 10314  0073DA  0900               	iorlw	0
 10315  0073DC  A4D8               	btfss	status,2,c
 10316  0073DE  D7C3               	goto	_strchr
 10317  0073E0  0E00               	movlw	0
 10318  0073E2  6E02               	movwf	?_strchr^0,c
 10319  0073E4  0E00               	movlw	0
 10320  0073E6  6E03               	movwf	(?_strchr+1)^0,c
 10321  0073E8  0012               	return		;funcret
 10322  0073EA                     __end_of_strchr:
 10323                           	opt callstack 0
 10324                           
 10325 ;; *************** function _get_free_tx_buffer *****************
 10326 ;; Defined at:
 10327 ;;		line 61 in file "../app/app_src/application.c"
 10328 ;; Parameters:    Size  Location     Type
 10329 ;;  buf_id          1    1[COMRAM] PTR unsigned char 
 10330 ;;		 -> cmdBcast@buf_id(1), cmdSend@buf_id(1), 
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;		None
 10333 ;; Return value:  Size  Location     Type
 10334 ;;                  1    wreg      _Bool 
 10335 ;; Registers used:
 10336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10337 ;; Tracked objects:
 10338 ;;		On entry : 0/0
 10339 ;;		On exit  : 0/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10342 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10344 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10345 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10346 ;;Total ram usage:        2 bytes
 10347 ;; Hardware stack levels used:    1
 10348 ;; Hardware stack levels required when called:    7
 10349 ;; This function calls:
 10350 ;;		Nothing
 10351 ;; This function is called by:
 10352 ;;		_cmdSend
 10353 ;;		_cmdBcast
 10354 ;; This function uses a non-reentrant model
 10355 ;;
 10356                           
 10357                           	psect	text53
 10358  0078E4                     __ptext53:
 10359                           	opt callstack 0
 10360  0078E4                     _get_free_tx_buffer:
 10361                           	opt callstack 20
 10362                           
 10363                           ;../app/app_src/application.c: 62:     *buf_id = 0;
 10364                           
 10365                           ;incstack = 0
 10366  0078E4  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10367  0078E6  6ED9               	movwf	fsr2l,c
 10368  0078E8  6ADA               	clrf	fsr2h,c
 10369  0078EA  0E00               	movlw	0
 10370  0078EC  6EDF               	movwf	indf2,c
 10371                           
 10372                           ;../app/app_src/application.c: 63:     while(*buf_id < 4){
 10373  0078EE  D023               	goto	l225
 10374  0078F0                     l15320:
 10375                           
 10376                           ;../app/app_src/application.c: 64:         if(tx_buffer[*buf_id].free){
 10377  0078F0  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10378  0078F2  6ED9               	movwf	fsr2l,c
 10379  0078F4  6ADA               	clrf	fsr2h,c
 10380  0078F6  50DF               	movf	indf2,w,c
 10381  0078F8  6E03               	movwf	??_get_free_tx_buffer^0,c
 10382  0078FA  5003               	movf	??_get_free_tx_buffer^0,w,c
 10383  0078FC  0D83               	mullw	131
 10384  0078FE  0E6A               	movlw	low _tx_buffer
 10385  007900  24F3               	addwf	243,w,c
 10386  007902  6ED9               	movwf	fsr2l,c
 10387  007904  0E08               	movlw	high _tx_buffer
 10388  007906  20F4               	addwfc	prodh,w,c
 10389  007908  6EDA               	movwf	fsr2h,c
 10390  00790A  A4DF               	btfss	indf2,2,c
 10391  00790C  D010               	goto	l15328
 10392                           
 10393                           ;../app/app_src/application.c: 65:             tx_buffer[*buf_id].free = 0;
 10394  00790E  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10395  007910  6ED9               	movwf	fsr2l,c
 10396  007912  6ADA               	clrf	fsr2h,c
 10397  007914  50DF               	movf	indf2,w,c
 10398  007916  6E03               	movwf	??_get_free_tx_buffer^0,c
 10399  007918  5003               	movf	??_get_free_tx_buffer^0,w,c
 10400  00791A  0D83               	mullw	131
 10401  00791C  0E6A               	movlw	low _tx_buffer
 10402  00791E  24F3               	addwf	243,w,c
 10403  007920  6ED9               	movwf	fsr2l,c
 10404  007922  0E08               	movlw	high _tx_buffer
 10405  007924  20F4               	addwfc	prodh,w,c
 10406  007926  6EDA               	movwf	fsr2h,c
 10407  007928  94DF               	bcf	indf2,2,c
 10408                           
 10409                           ;../app/app_src/application.c: 66:             return 1;
 10410  00792A  0E01               	movlw	1
 10411  00792C  0012               	return	
 10412  00792E                     l15328:
 10413                           
 10414                           ;../app/app_src/application.c: 68:         (*buf_id)++;
 10415  00792E  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10416  007930  6ED9               	movwf	fsr2l,c
 10417  007932  6ADA               	clrf	fsr2h,c
 10418  007934  2ADF               	incf	indf2,f,c
 10419  007936                     l225:
 10420                           
 10421                           ;../app/app_src/application.c: 63:     while(*buf_id < 4){
 10422  007936  5002               	movf	get_free_tx_buffer@buf_id^0,w,c
 10423  007938  6ED9               	movwf	fsr2l,c
 10424  00793A  6ADA               	clrf	fsr2h,c
 10425  00793C  0E03               	movlw	3
 10426  00793E  64DF               	cpfsgt	indf2,c
 10427  007940  D7D7               	goto	l15320
 10428                           
 10429                           ;../app/app_src/application.c: 70:     return 0;
 10430  007942  0E00               	movlw	0
 10431  007944  0012               	return		;funcret
 10432  007946                     __end_of_get_free_tx_buffer:
 10433                           	opt callstack 0
 10434                           
 10435 ;; *************** function _NWK_DataReq *****************
 10436 ;; Defined at:
 10437 ;;		line 87 in file "../nwk/nwk_src/nwkDataReq.c"
 10438 ;; Parameters:    Size  Location     Type
 10439 ;;  req             2    1[COMRAM] PTR struct NWK_DataReq_t
 10440 ;;		 -> tx_buffer.nwkDataReq(22), tx_buffer(524), 
 10441 ;; Auto vars:     Size  Location     Type
 10442 ;;		None
 10443 ;; Return value:  Size  Location     Type
 10444 ;;                  1    wreg      void 
 10445 ;; Registers used:
 10446 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10447 ;; Tracked objects:
 10448 ;;		On entry : 3F/0
 10449 ;;		On exit  : 3F/0
 10450 ;;		Unchanged: 0/0
 10451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10455 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10456 ;;Total ram usage:        2 bytes
 10457 ;; Hardware stack levels used:    1
 10458 ;; Hardware stack levels required when called:    7
 10459 ;; This function calls:
 10460 ;;		Nothing
 10461 ;; This function is called by:
 10462 ;;		_cmdSend
 10463 ;;		_cmdBcast
 10464 ;; This function uses a non-reentrant model
 10465 ;;
 10466                           
 10467                           	psect	text54
 10468  0074F0                     __ptext54:
 10469                           	opt callstack 0
 10470  0074F0                     _NWK_DataReq:
 10471                           	opt callstack 20
 10472                           
 10473                           ; BSR set to: 0
 10474                           ;../nwk/nwk_src/nwkDataReq.c: 87: void NWK_DataReq(NWK_DataReq_t *req);../nwk/nwk_src/nw
      +                          kDataReq.c: 88: {;../nwk/nwk_src/nwkDataReq.c: 89:   req->state = NWK_DATA_REQ_STATE_INI
      +                          TIAL;
 10475                           
 10476                           ;incstack = 0
 10477  0074F0  EE20 F004          	lfsr	2,4
 10478  0074F4  5002               	movf	NWK_DataReq@req^0,w,c
 10479  0074F6  26D9               	addwf	fsr2l,f,c
 10480  0074F8  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10481  0074FA  22DA               	addwfc	fsr2h,f,c
 10482  0074FC  0E00               	movlw	0
 10483  0074FE  6EDF               	movwf	indf2,c
 10484                           
 10485                           ;../nwk/nwk_src/nwkDataReq.c: 90:   req->status = NWK_SUCCESS_STATUS;
 10486  007500  EE20 F011          	lfsr	2,17
 10487  007504  5002               	movf	NWK_DataReq@req^0,w,c
 10488  007506  26D9               	addwf	fsr2l,f,c
 10489  007508  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10490  00750A  22DA               	addwfc	fsr2h,f,c
 10491  00750C  0E00               	movlw	0
 10492  00750E  6EDF               	movwf	indf2,c
 10493                           
 10494                           ;../nwk/nwk_src/nwkDataReq.c: 91:   req->frame = ((void*)0);
 10495  007510  EE20 F002          	lfsr	2,2
 10496  007514  5002               	movf	NWK_DataReq@req^0,w,c
 10497  007516  26D9               	addwf	fsr2l,f,c
 10498  007518  5003               	movf	(NWK_DataReq@req+1)^0,w,c
 10499  00751A  22DA               	addwfc	fsr2h,f,c
 10500  00751C  0E00               	movlw	0
 10501  00751E  6EDE               	movwf	postinc2,c
 10502  007520  0E00               	movlw	0
 10503  007522  6EDD               	movwf	postdec2,c
 10504                           
 10505                           ; BSR set to: 0
 10506                           ;../nwk/nwk_src/nwkDataReq.c: 93:   nwkIb.lock++;
 10507  007524  0101               	movlb	1	; () banked
 10508  007526  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 10509  007528  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 10510                           
 10511                           ; BSR set to: 1
 10512                           ;../nwk/nwk_src/nwkDataReq.c: 95:   if (((void*)0) == nwkDataReqQueue)
 10513  00752A  0100               	movlb	0	; () banked
 10514  00752C  51BF               	movf	_nwkDataReqQueue& (0+255),w,b
 10515  00752E  11C0               	iorwf	(_nwkDataReqQueue+1)& (0+255),w,b
 10516  007530  A4D8               	btfss	status,2,c
 10517  007532  D011               	goto	l15398
 10518                           
 10519                           ; BSR set to: 0
 10520                           ;../nwk/nwk_src/nwkDataReq.c: 96:   {;../nwk/nwk_src/nwkDataReq.c: 97:     req->next = (
      +                          (void*)0);
 10521  007534  0060  F00B  FFD9   	movff	NWK_DataReq@req,fsr2l
 10522  00753A  0060  F00F  FFDA   	movff	NWK_DataReq@req+1,fsr2h
 10523  007540  0E00               	movlw	0
 10524  007542  6EDE               	movwf	postinc2,c
 10525  007544  0E00               	movlw	0
 10526  007546  6EDD               	movwf	postdec2,c
 10527  007548                     l15396:
 10528                           
 10529                           ; BSR set to: 0
 10530                           ;../nwk/nwk_src/nwkDataReq.c: 98:     nwkDataReqQueue = req;
 10531  007548  0060  F008  F0BF   	movff	NWK_DataReq@req,_nwkDataReqQueue
 10532  00754E  0060  F00C  F0C0   	movff	NWK_DataReq@req+1,_nwkDataReqQueue+1
 10533                           
 10534                           ;../nwk/nwk_src/nwkDataReq.c: 99:   }
 10535  007554  0012               	return	
 10536  007556                     l15398:
 10537                           
 10538                           ; BSR set to: 0
 10539                           ;../nwk/nwk_src/nwkDataReq.c: 101:   {;../nwk/nwk_src/nwkDataReq.c: 102:     req->next =
      +                           nwkDataReqQueue;
 10540  007556  0060  F00B  FFD9   	movff	NWK_DataReq@req,fsr2l
 10541  00755C  0060  F00F  FFDA   	movff	NWK_DataReq@req+1,fsr2h
 10542  007562  0060  F2FF  FFDE   	movff	_nwkDataReqQueue,postinc2
 10543  007568  0060  F303  FFDD   	movff	_nwkDataReqQueue+1,postdec2
 10544  00756E  D7EC               	goto	l15396
 10545  007570                     __end_of_NWK_DataReq:
 10546                           	opt callstack 0
 10547                           
 10548 ;; *************** function _cmdAddr *****************
 10549 ;; Defined at:
 10550 ;;		line 312 in file "../app/app_src/application.c"
 10551 ;; Parameters:    Size  Location     Type
 10552 ;;		None
 10553 ;; Auto vars:     Size  Location     Type
 10554 ;;		None
 10555 ;; Return value:  Size  Location     Type
 10556 ;;                  1    wreg      void 
 10557 ;; Registers used:
 10558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10559 ;; Tracked objects:
 10560 ;;		On entry : 0/0
 10561 ;;		On exit  : 3F/0
 10562 ;;		Unchanged: 0/0
 10563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10568 ;;Total ram usage:        0 bytes
 10569 ;; Hardware stack levels used:    1
 10570 ;; Hardware stack levels required when called:   16
 10571 ;; This function calls:
 10572 ;;		_printf
 10573 ;; This function is called by:
 10574 ;;		_executeATCommand
 10575 ;; This function uses a non-reentrant model
 10576 ;;
 10577                           
 10578                           	psect	text55
 10579  008C76                     __ptext55:
 10580                           	opt callstack 0
 10581  008C76                     _cmdAddr:
 10582                           	opt callstack 12
 10583                           
 10584                           ;../app/app_src/application.c: 313:  printf("ADDR=%02X%02X\r\n",currentAddr0,currentAddr
      +                          1);
 10585                           
 10586                           ; BSR set to: 0
 10587                           ;incstack = 0
 10588  008C76  0E4A               	movlw	low STR_10
 10589  008C78  0100               	movlb	0	; () banked
 10590  008C7A  6F75               	movwf	printf@fmt& (0+255),b
 10591  008C7C  0EFE               	movlw	high STR_10
 10592  008C7E  6F76               	movwf	(printf@fmt+1)& (0+255),b
 10593  008C80  0060  F3E8  F077   	movff	_currentAddr0,?_printf+2
 10594  008C86  6B78               	clrf	(?_printf+3)& (0+255),b
 10595  008C88  0060  F3E4  F079   	movff	_currentAddr1,?_printf+4
 10596  008C8E  6B7A               	clrf	(?_printf+5)& (0+255),b
 10597  008C90  ECC4  F045         	call	_printf	;wreg free
 10598                           
 10599                           ; BSR set to: 0
 10600  008C94  0012               	return		;funcret
 10601  008C96                     __end_of_cmdAddr:
 10602                           	opt callstack 0
 10603                           
 10604 ;; *************** function _printf *****************
 10605 ;; Defined at:
 10606 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
 10607 ;; Parameters:    Size  Location     Type
 10608 ;;  fmt             2   21[BANK0 ] PTR const unsigned char 
 10609 ;;		 -> STR_139(5), STR_138(8), STR_137(28), STR_136(26), 
 10610 ;;		 -> STR_135(12), STR_134(12), STR_65(5), STR_64(34), 
 10611 ;;		 -> STR_63(14), STR_62(5), STR_61(12), STR_59(8), 
 10612 ;;		 -> STR_56(5), STR_55(12), STR_48(5), STR_47(12), 
 10613 ;;		 -> STR_45(13), STR_44(5), STR_43(12), STR_42(12), 
 10614 ;;		 -> STR_40(14), STR_39(5), STR_38(12), STR_36(13), 
 10615 ;;		 -> STR_35(18), STR_34(18), STR_33(5), STR_32(21), 
 10616 ;;		 -> STR_31(5), STR_30(12), STR_29(12), STR_27(12), 
 10617 ;;		 -> STR_26(12), STR_24(5), STR_23(3), STR_22(5), 
 10618 ;;		 -> STR_21(5), STR_20(12), STR_19(12), STR_18(3), 
 10619 ;;		 -> STR_17(6), STR_16(5), STR_14(13), STR_13(12), 
 10620 ;;		 -> STR_12(5), STR_10(16), STR_9(8), STR_8(12), 
 10621 ;;		 -> STR_7(12), STR_5(8), STR_4(12), STR_3(12), 
 10622 ;; Auto vars:     Size  Location     Type
 10623 ;;  ret             2    0        int 
 10624 ;;  ap              1   86[COMRAM] PTR void [1]
 10625 ;;		 -> ?_printf(2), 
 10626 ;; Return value:  Size  Location     Type
 10627 ;;                  2   21[BANK0 ] int 
 10628 ;; Registers used:
 10629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10630 ;; Tracked objects:
 10631 ;;		On entry : 3F/0
 10632 ;;		On exit  : 3F/0
 10633 ;;		Unchanged: 0/0
 10634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10635 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10636 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10638 ;;      Totals:         3      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10639 ;;Total ram usage:       13 bytes
 10640 ;; Hardware stack levels used:    1
 10641 ;; Hardware stack levels required when called:   15
 10642 ;; This function calls:
 10643 ;;		_vfprintf
 10644 ;; This function is called by:
 10645 ;;		_cmdSend
 10646 ;;		_cmdBcast
 10647 ;;		_cmdAddr
 10648 ;;		_cmdSetAddr
 10649 ;;		_cmdNaddr
 10650 ;;		_cmdSetNaddr
 10651 ;;		_cmdRecv
 10652 ;;		_cmdMac
 10653 ;;		_cmdSetSink
 10654 ;;		_cmdSetAES
 10655 ;;		_cmdGetCAD
 10656 ;;		_cmdRstCAD
 10657 ;;		_cmdGetMode
 10658 ;;		_cmdGetRFCH
 10659 ;;		_cmdSetRFCH
 10660 ;;		_cmdGetTX
 10661 ;;		_cmdSetTX
 10662 ;;		_cmdGetCADRSSI
 10663 ;;		_cmdSetCADRSSI
 10664 ;;		_cmdSetParity
 10665 ;;		_cmdBootLoad
 10666 ;;		_cmdGetSF
 10667 ;;		_cmdSetSF
 10668 ;;		_cmdGetRxCnt
 10669 ;;		_print_hop_table
 10670 ;;		_set_hop_table_ttl
 10671 ;;		_executeATCommand
 10672 ;;		_sendInfo
 10673 ;; This function uses a non-reentrant model
 10674 ;;
 10675                           
 10676                           	psect	text56
 10677  008B88                     __ptext56:
 10678                           	opt callstack 0
 10679  008B88                     _printf:
 10680                           	opt callstack 12
 10681                           
 10682                           ; BSR set to: 0
 10683                           
 10684                           ; BSR set to: 0
 10685                           ;incstack = 0
 10686  008B88  0E77               	movlw	low (?_printf+2)
 10687  008B8A  6E57               	movwf	printf@ap^0,c
 10688                           
 10689                           ; BSR set to: 0
 10690  008B8C  0E00               	movlw	0
 10691  008B8E  6E4E               	movwf	vfprintf@fp^0,c
 10692  008B90  0E00               	movlw	0
 10693  008B92  6E4F               	movwf	(vfprintf@fp+1)^0,c
 10694  008B94  0060  F1D4  F050   	movff	printf@fmt,vfprintf@fmt
 10695  008B9A  0060  F1D8  F051   	movff	printf@fmt+1,vfprintf@fmt+1
 10696  008BA0  0E57               	movlw	low printf@ap
 10697  008BA2  6E52               	movwf	vfprintf@ap^0,c
 10698  008BA4  EC64  F03D         	call	_vfprintf	;wreg free
 10699                           
 10700                           ; BSR set to: 0
 10701  008BA8  0012               	return		;funcret
 10702  008BAA                     __end_of_printf:
 10703                           	opt callstack 0
 10704                           
 10705 ;; *************** function _vfprintf *****************
 10706 ;; Defined at:
 10707 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10708 ;; Parameters:    Size  Location     Type
 10709 ;;  fp              2   77[COMRAM] PTR struct _IO_FILE
 10710 ;;		 -> NULL(0), 
 10711 ;;  fmt             2   79[COMRAM] PTR const unsigned char 
 10712 ;;		 -> STR_139(5), STR_138(8), STR_137(28), STR_136(26), 
 10713 ;;		 -> STR_135(12), STR_134(12), STR_65(5), STR_64(34), 
 10714 ;;		 -> STR_63(14), STR_62(5), STR_61(12), STR_59(8), 
 10715 ;;		 -> STR_56(5), STR_55(12), STR_48(5), STR_47(12), 
 10716 ;;		 -> STR_45(13), STR_44(5), STR_43(12), STR_42(12), 
 10717 ;;		 -> STR_40(14), STR_39(5), STR_38(12), STR_36(13), 
 10718 ;;		 -> STR_35(18), STR_34(18), STR_33(5), STR_32(21), 
 10719 ;;		 -> STR_31(5), STR_30(12), STR_29(12), STR_27(12), 
 10720 ;;		 -> STR_26(12), STR_24(5), STR_23(3), STR_22(5), 
 10721 ;;		 -> STR_21(5), STR_20(12), STR_19(12), STR_18(3), 
 10722 ;;		 -> STR_17(6), STR_16(5), STR_14(13), STR_13(12), 
 10723 ;;		 -> STR_12(5), STR_10(16), STR_9(8), STR_8(12), 
 10724 ;;		 -> STR_7(12), STR_5(8), STR_4(12), STR_3(12), 
 10725 ;;  ap              1   81[COMRAM] PTR PTR void 
 10726 ;;		 -> printf@ap(1), 
 10727 ;; Auto vars:     Size  Location     Type
 10728 ;;  cfmt            2   82[COMRAM] PTR unsigned char 
 10729 ;;		 -> STR_139(5), STR_138(8), STR_137(28), STR_136(26), 
 10730 ;;		 -> STR_135(12), STR_134(12), STR_65(5), STR_64(34), 
 10731 ;;		 -> STR_63(14), STR_62(5), STR_61(12), STR_59(8), 
 10732 ;;		 -> STR_56(5), STR_55(12), STR_48(5), STR_47(12), 
 10733 ;;		 -> STR_45(13), STR_44(5), STR_43(12), STR_42(12), 
 10734 ;;		 -> STR_40(14), STR_39(5), STR_38(12), STR_36(13), 
 10735 ;;		 -> STR_35(18), STR_34(18), STR_33(5), STR_32(21), 
 10736 ;;		 -> STR_31(5), STR_30(12), STR_29(12), STR_27(12), 
 10737 ;;		 -> STR_26(12), STR_24(5), STR_23(3), STR_22(5), 
 10738 ;;		 -> STR_21(5), STR_20(12), STR_19(12), STR_18(3), 
 10739 ;;		 -> STR_17(6), STR_16(5), STR_14(13), STR_13(12), 
 10740 ;;		 -> STR_12(5), STR_10(16), STR_9(8), STR_8(12), 
 10741 ;;		 -> STR_7(12), STR_5(8), STR_4(12), STR_3(12), 
 10742 ;; Return value:  Size  Location     Type
 10743 ;;                  2   77[COMRAM] int 
 10744 ;; Registers used:
 10745 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10746 ;; Tracked objects:
 10747 ;;		On entry : 3F/0
 10748 ;;		On exit  : 3F/0
 10749 ;;		Unchanged: 0/0
 10750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10751 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10752 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10754 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10755 ;;Total ram usage:        7 bytes
 10756 ;; Hardware stack levels used:    1
 10757 ;; Hardware stack levels required when called:   14
 10758 ;; This function calls:
 10759 ;;		_vfpfcnvrt
 10760 ;; This function is called by:
 10761 ;;		_printf
 10762 ;; This function uses a non-reentrant model
 10763 ;;
 10764                           
 10765                           	psect	text57
 10766  007AC8                     __ptext57:
 10767                           	opt callstack 0
 10768  007AC8                     _vfprintf:
 10769                           	opt callstack 12
 10770                           
 10771                           ; BSR set to: 0
 10772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
 10773                           
 10774                           ; BSR set to: 0
 10775                           ;incstack = 0
 10776  007AC8  0060  F140  F053   	movff	vfprintf@fmt,vfprintf@cfmt
 10777  007ACE  0060  F144  F054   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 10778                           
 10779                           ; BSR set to: 0
 10780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
 10781  007AD4  0E00               	movlw	0
 10782  007AD6  6FB4               	movwf	(_nout+1)& (0+255),b
 10783  007AD8  0E00               	movlw	0
 10784  007ADA  6FB3               	movwf	_nout& (0+255),b
 10785                           
 10786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 10787  007ADC  D012               	goto	l14676
 10788  007ADE                     l14674:
 10789                           
 10790                           ; BSR set to: 0
 10791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
 10792  007ADE  0060  F138  F046   	movff	vfprintf@fp,vfpfcnvrt@fp
 10793  007AE4  0060  F13C  F047   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 10794  007AEA  0E53               	movlw	low vfprintf@cfmt
 10795  007AEC  6E48               	movwf	vfpfcnvrt@fmt^0,c
 10796  007AEE  0060  F148  F049   	movff	vfprintf@ap,vfpfcnvrt@ap
 10797  007AF4  EC17  F003         	call	_vfpfcnvrt	;wreg free
 10798  007AF8  5046               	movf	?_vfpfcnvrt^0,w,c
 10799  007AFA  0100               	movlb	0	; () banked
 10800  007AFC  27B3               	addwf	_nout& (0+255),f,b
 10801  007AFE  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
 10802  007B00  23B4               	addwfc	(_nout+1)& (0+255),f,b
 10803  007B02                     l14676:
 10804                           
 10805                           ; BSR set to: 0
 10806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
 10807  007B02  0060  F14F  FFF6   	movff	vfprintf@cfmt,tblptrl
 10808  007B08  0060  F153  FFF7   	movff	vfprintf@cfmt+1,tblptrh
 10809  007B0E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10810  007B0E  6AF8               	clrf	tblptru,c
 10811  007B10                     	endif
 10812  007B10                     	if	0	;tblptru may be non-zero
 10813  007B10                     	endif
 10814  007B10  0008               	tblrd		*
 10815  007B12  50F5               	movf	tablat,w,c
 10816  007B14  0900               	iorlw	0
 10817  007B16  A4D8               	btfss	status,2,c
 10818  007B18  D7E2               	goto	l14674
 10819                           
 10820                           ; BSR set to: 0
 10821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
 10822  007B1A  0060  F2CC  F04E   	movff	_nout,?_vfprintf
 10823  007B20  0060  F2D0  F04F   	movff	_nout+1,?_vfprintf+1
 10824                           
 10825                           ; BSR set to: 0
 10826  007B26  0012               	return		;funcret
 10827  007B28                     __end_of_vfprintf:
 10828                           	opt callstack 0
 10829                           
 10830 ;; *************** function _vfpfcnvrt *****************
 10831 ;; Defined at:
 10832 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 10833 ;; Parameters:    Size  Location     Type
 10834 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
 10835 ;;		 -> NULL(0), 
 10836 ;;  fmt             1   71[COMRAM] PTR PTR unsigned char 
 10837 ;;		 -> vfprintf@cfmt(2), 
 10838 ;;  ap              1   72[COMRAM] PTR PTR void 
 10839 ;;		 -> printf@ap(1), 
 10840 ;; Auto vars:     Size  Location     Type
 10841 ;;  llu             8   13[BANK0 ] unsigned long long 
 10842 ;;  ll              8    0[BANK0 ] long long 
 10843 ;;  f               4    0        long long 
 10844 ;;  vp              3    0        PTR void 
 10845 ;;  ct              3    0        unsigned char [3]
 10846 ;;  cp              3    0        PTR unsigned char 
 10847 ;;  done            2    9[BANK0 ] int 
 10848 ;;  i               2    0        int 
 10849 ;;  c               1    8[BANK0 ] unsigned char 
 10850 ;; Return value:  Size  Location     Type
 10851 ;;                  2   69[COMRAM] int 
 10852 ;; Registers used:
 10853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10854 ;; Tracked objects:
 10855 ;;		On entry : 3F/0
 10856 ;;		On exit  : 0/0
 10857 ;;		Unchanged: 0/0
 10858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10860 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10861 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10862 ;;      Totals:         8      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10863 ;;Total ram usage:       29 bytes
 10864 ;; Hardware stack levels used:    1
 10865 ;; Hardware stack levels required when called:   13
 10866 ;; This function calls:
 10867 ;;		_atoi
 10868 ;;		_dtoa
 10869 ;;		_fputc
 10870 ;;		_isdigit
 10871 ;;		_utoa
 10872 ;;		_xtoa
 10873 ;; This function is called by:
 10874 ;;		_vfprintf
 10875 ;; This function uses a non-reentrant model
 10876 ;;
 10877                           
 10878                           	psect	text58
 10879  00062E                     __ptext58:
 10880                           	opt callstack 0
 10881  00062E                     _vfpfcnvrt:
 10882                           	opt callstack 12
 10883                           
 10884                           ; BSR set to: 0
 10885                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
 10886                           
 10887                           ; BSR set to: 0
 10888                           ;incstack = 0
 10889  00062E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 10890  000630  6ED9               	movwf	fsr2l,c
 10891  000632  6ADA               	clrf	fsr2h,c
 10892  000634  006F FF7B FFF6     	movff	postinc2,tblptrl
 10893  00063A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10894  000640                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10895  000640  6AF8               	clrf	tblptru,c
 10896  000642                     	endif
 10897  000642                     	if	0	;tblptru may be non-zero
 10898  000642                     	endif
 10899  000642  0008               	tblrd		*
 10900  000644  50F5               	movf	tablat,w,c
 10901  000646  0A25               	xorlw	37
 10902  000648  A4D8               	btfss	status,2,c
 10903  00064A  D21A               	goto	l14546
 10904                           
 10905                           ; BSR set to: 0
 10906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
 10907  00064C  5048               	movf	vfpfcnvrt@fmt^0,w,c
 10908  00064E  6ED9               	movwf	fsr2l,c
 10909  000650  6ADA               	clrf	fsr2h,c
 10910  000652  2ADE               	incf	postinc2,f,c
 10911  000654  0E00               	movlw	0
 10912  000656  22DD               	addwfc	postdec2,f,c
 10913                           
 10914                           ; BSR set to: 0
 10915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
 10916  000658  0E00               	movlw	0
 10917  00065A  6FB6               	movwf	(_width+1)& (0+255),b
 10918  00065C  0E00               	movlw	0
 10919  00065E  6FB5               	movwf	_width& (0+255),b
 10920  000660  C0B5  F0B9         	movff	_width,_flags
 10921  000664  C0B6  F0BA         	movff	_width+1,_flags+1
 10922                           
 10923                           ; BSR set to: 0
 10924                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
 10925  000668  69B7               	setf	_prec& (0+255),b
 10926  00066A  69B8               	setf	(_prec+1)& (0+255),b
 10927                           
 10928                           ; BSR set to: 0
 10929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
 10930  00066C  0E00               	movlw	0
 10931  00066E  6F6A               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 10932  000670  0E00               	movlw	0
 10933  000672  D013               	goto	L3
 10934  000674                     l14444:
 10935                           
 10936                           ; BSR set to: 0
 10937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
 10938  000674  81B9               	bsf	_flags& (0+255),0,b
 10939  000676                     l14446:
 10940                           
 10941                           ; BSR set to: 0
 10942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
 10943  000676  5048               	movf	vfpfcnvrt@fmt^0,w,c
 10944  000678  6ED9               	movwf	fsr2l,c
 10945  00067A  6ADA               	clrf	fsr2h,c
 10946  00067C  2ADE               	incf	postinc2,f,c
 10947  00067E  0E00               	movlw	0
 10948  000680  22DD               	addwfc	postdec2,f,c
 10949                           
 10950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
 10951  000682  D030               	goto	l14470
 10952  000684                     l14448:
 10953                           
 10954                           ; BSR set to: 0
 10955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
 10956  000684  83B9               	bsf	_flags& (0+255),1,b
 10957  000686  D7F7               	goto	l14446
 10958  000688                     l14452:
 10959                           
 10960                           ; BSR set to: 0
 10961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
 10962  000688  85B9               	bsf	_flags& (0+255),2,b
 10963  00068A  D7F5               	goto	l14446
 10964  00068C                     l14456:
 10965                           
 10966                           ; BSR set to: 0
 10967                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
 10968  00068C  87B9               	bsf	_flags& (0+255),3,b
 10969  00068E  D7F3               	goto	l14446
 10970  000690                     l14460:
 10971                           
 10972                           ; BSR set to: 0
 10973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
 10974  000690  89B9               	bsf	_flags& (0+255),4,b
 10975  000692  D7F1               	goto	l14446
 10976  000694                     l14464:
 10977                           
 10978                           ; BSR set to: 0
 10979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
 10980  000694  0E00               	movlw	0
 10981  000696  6F6A               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 10982  000698  0E01               	movlw	1
 10983  00069A                     L3:
 10984  00069A  6F69               	movwf	vfpfcnvrt@done& (0+255),b
 10985                           
 10986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
 10987  00069C  D023               	goto	l14470
 10988  00069E                     l14468:
 10989                           
 10990                           ; BSR set to: 0
 10991  00069E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 10992  0006A0  6ED9               	movwf	fsr2l,c
 10993  0006A2  6ADA               	clrf	fsr2h,c
 10994  0006A4  006F FF7B FFF6     	movff	postinc2,tblptrl
 10995  0006AA  006F FF77 FFF7     	movff	postdec2,tblptrh
 10996  0006B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10997  0006B0  6AF8               	clrf	tblptru,c
 10998  0006B2                     	endif
 10999  0006B2                     	if	0	;tblptru may be non-zero
 11000  0006B2                     	endif
 11001  0006B2  0008               	tblrd		*
 11002  0006B4  50F5               	movf	tablat,w,c
 11003  0006B6  6E4A               	movwf	??_vfpfcnvrt^0,c
 11004  0006B8  6A4B               	clrf	(??_vfpfcnvrt+1)^0,c
 11005                           
 11006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11007                           ; Switch size 1, requested type "simple"
 11008                           ; Number of cases is 1, Range of values is 0 to 0
 11009                           ; switch strategies available:
 11010                           ; Name         Instructions Cycles
 11011                           ; simple_byte            4     3 (average)
 11012                           ;	Chosen strategy is simple_byte
 11013  0006BA  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
 11014  0006BC  0A00               	xorlw	0	; case 0
 11015  0006BE  A4D8               	btfss	status,2,c
 11016  0006C0  D7E9               	goto	l14464
 11017                           
 11018                           ; BSR set to: 0
 11019                           ; Switch size 1, requested type "simple"
 11020                           ; Number of cases is 5, Range of values is 32 to 48
 11021                           ; switch strategies available:
 11022                           ; Name         Instructions Cycles
 11023                           ; simple_byte           16     9 (average)
 11024                           ;	Chosen strategy is simple_byte
 11025  0006C2  504A               	movf	??_vfpfcnvrt^0,w,c
 11026  0006C4  0A20               	xorlw	32	; case 32
 11027  0006C6  B4D8               	btfsc	status,2,c
 11028  0006C8  D7E1               	goto	l14456
 11029  0006CA  0A03               	xorlw	3	; case 35
 11030  0006CC  B4D8               	btfsc	status,2,c
 11031  0006CE  D7E0               	goto	l14460
 11032  0006D0  0A08               	xorlw	8	; case 43
 11033  0006D2  B4D8               	btfsc	status,2,c
 11034  0006D4  D7D9               	goto	l14452
 11035  0006D6  0A06               	xorlw	6	; case 45
 11036  0006D8  B4D8               	btfsc	status,2,c
 11037  0006DA  D7CC               	goto	l14444
 11038  0006DC  0A1D               	xorlw	29	; case 48
 11039  0006DE  B4D8               	btfsc	status,2,c
 11040  0006E0  D7D1               	goto	l14448
 11041  0006E2  D7D8               	goto	l14464
 11042  0006E4                     l14470:
 11043                           
 11044                           ; BSR set to: 0
 11045                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
 11046  0006E4  5169               	movf	vfpfcnvrt@done& (0+255),w,b
 11047  0006E6  116A               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 11048  0006E8  B4D8               	btfsc	status,2,c
 11049  0006EA  D7D9               	goto	l14468
 11050                           
 11051                           ; BSR set to: 0
 11052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
 11053  0006EC  B1B9               	btfsc	_flags& (0+255),0,b
 11054                           
 11055                           ; BSR set to: 0
 11056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
 11057  0006EE  93B9               	bcf	_flags& (0+255),1,b
 11058                           
 11059                           ; BSR set to: 0
 11060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
 11061  0006F0  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11062  0006F2  6ED9               	movwf	fsr2l,c
 11063  0006F4  6ADA               	clrf	fsr2h,c
 11064  0006F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 11065  0006FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 11066  000702                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11067  000702  6AF8               	clrf	tblptru,c
 11068  000704                     	endif
 11069  000704                     	if	0	;tblptru may be non-zero
 11070  000704                     	endif
 11071  000704  0008               	tblrd		*
 11072  000706  50F5               	movf	tablat,w,c
 11073  000708  0A2A               	xorlw	42
 11074  00070A  A4D8               	btfss	status,2,c
 11075  00070C  D01C               	goto	l14484
 11076                           
 11077                           ; BSR set to: 0
 11078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
 11079  00070E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11080  000710  6ED9               	movwf	fsr2l,c
 11081  000712  6ADA               	clrf	fsr2h,c
 11082  000714  2ADE               	incf	postinc2,f,c
 11083  000716  0E00               	movlw	0
 11084  000718  22DD               	addwfc	postdec2,f,c
 11085                           
 11086                           ; BSR set to: 0
 11087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
 11088  00071A  5049               	movf	vfpfcnvrt@ap^0,w,c
 11089  00071C  6ED9               	movwf	fsr2l,c
 11090  00071E  6ADA               	clrf	fsr2h,c
 11091  000720  0E02               	movlw	2
 11092  000722  26DF               	addwf	indf2,f,c
 11093  000724  5CDF               	subwf	indf2,w,c
 11094  000726  6ED9               	movwf	fsr2l,c
 11095  000728  6ADA               	clrf	fsr2h,c
 11096  00072A  006F FF78  F0B5    	movff	postinc2,_width
 11097  000730  006F FF78  F0B6    	movff	postinc2,_width+1
 11098                           
 11099                           ; BSR set to: 0
 11100                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
 11101  000736  AFB6               	btfss	(_width+1)& (0+255),7,b
 11102  000738  D044               	goto	u13980
 11103                           
 11104                           ; BSR set to: 0
 11105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
 11106  00073A  81B9               	bsf	_flags& (0+255),0,b
 11107                           
 11108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
 11109  00073C  6DB5               	negf	_width& (0+255),b
 11110  00073E  1FB6               	comf	(_width+1)& (0+255),f,b
 11111  000740  B0D8               	btfsc	status,0,c
 11112  000742  2BB6               	incf	(_width+1)& (0+255),f,b
 11113  000744  D03E               	goto	u13980
 11114  000746                     l14484:
 11115                           
 11116                           ; BSR set to: 0
 11117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
 11118  000746  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11119  000748  6ED9               	movwf	fsr2l,c
 11120  00074A  6ADA               	clrf	fsr2h,c
 11121  00074C  006F FF78  F009    	movff	postinc2,atoi@s
 11122  000752  006F FF74  F00A    	movff	postdec2,atoi@s+1
 11123  000758  EC4B  F01F         	call	_atoi	;wreg free
 11124  00075C  0060  F024  F0B5   	movff	?_atoi,_width
 11125  000762  0060  F028  F0B6   	movff	?_atoi+1,_width+1
 11126                           
 11127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11128  000768  D006               	goto	l14488
 11129  00076A                     l14486:
 11130                           
 11131                           ; BSR set to: 0
 11132                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
 11133  00076A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11134  00076C  6ED9               	movwf	fsr2l,c
 11135  00076E  6ADA               	clrf	fsr2h,c
 11136  000770  2ADE               	incf	postinc2,f,c
 11137  000772  0E00               	movlw	0
 11138  000774  22DD               	addwfc	postdec2,f,c
 11139  000776                     l14488:
 11140  000776  0ED0               	movlw	208
 11141  000778  6E4A               	movwf	??_vfpfcnvrt^0,c
 11142  00077A  0EFF               	movlw	255
 11143  00077C  6E4B               	movwf	(??_vfpfcnvrt+1)^0,c
 11144  00077E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11145  000780  6ED9               	movwf	fsr2l,c
 11146  000782  6ADA               	clrf	fsr2h,c
 11147  000784  006F FF7B FFF6     	movff	postinc2,tblptrl
 11148  00078A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11149  000790                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11150  000790  6AF8               	clrf	tblptru,c
 11151  000792                     	endif
 11152  000792                     	if	0	;tblptru may be non-zero
 11153  000792                     	endif
 11154  000792  0008               	tblrd		*
 11155  000794  50F5               	movf	tablat,w,c
 11156  000796  6E4C               	movwf	(??_vfpfcnvrt+2)^0,c
 11157  000798  6A4D               	clrf	(??_vfpfcnvrt+3)^0,c
 11158  00079A  504A               	movf	??_vfpfcnvrt^0,w,c
 11159  00079C  264C               	addwf	(??_vfpfcnvrt+2)^0,f,c
 11160  00079E  504B               	movf	(??_vfpfcnvrt+1)^0,w,c
 11161  0007A0  224D               	addwfc	(??_vfpfcnvrt+3)^0,f,c
 11162  0007A2  504D               	movf	(??_vfpfcnvrt+3)^0,w,c
 11163  0007A4  E106               	bnz	u13960
 11164  0007A6  0E0A               	movlw	10
 11165  0007A8  5C4C               	subwf	(??_vfpfcnvrt+2)^0,w,c
 11166  0007AA  B0D8               	btfsc	status,0,c
 11167  0007AC  D002               	goto	u13960
 11168  0007AE  0E01               	movlw	1
 11169  0007B0  D001               	goto	u13970
 11170  0007B2                     u13960:
 11171  0007B2  0E00               	movlw	0
 11172  0007B4                     u13970:
 11173  0007B4  0100               	movlb	0	; () banked
 11174  0007B6  6F6B               	movwf	_vfpfcnvrt$7403& (0+255),b
 11175  0007B8  6B6C               	clrf	(_vfpfcnvrt$7403+1)& (0+255),b
 11176                           
 11177                           ; BSR set to: 0
 11178  0007BA  516B               	movf	_vfpfcnvrt$7403& (0+255),w,b
 11179  0007BC  116C               	iorwf	(_vfpfcnvrt$7403+1)& (0+255),w,b
 11180  0007BE  A4D8               	btfss	status,2,c
 11181  0007C0  D7D4               	goto	l14486
 11182  0007C2                     u13980:
 11183                           
 11184                           ; BSR set to: 0
 11185                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 11186  0007C2  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11187  0007C4  6ED9               	movwf	fsr2l,c
 11188  0007C6  6ADA               	clrf	fsr2h,c
 11189  0007C8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11190  0007CE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11191  0007D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11192  0007D4  6AF8               	clrf	tblptru,c
 11193  0007D6                     	endif
 11194  0007D6                     	if	0	;tblptru may be non-zero
 11195  0007D6                     	endif
 11196  0007D6  0008               	tblrd		*
 11197  0007D8  50F5               	movf	tablat,w,c
 11198  0007DA  0A64               	xorlw	100
 11199  0007DC  B4D8               	btfsc	status,2,c
 11200  0007DE  D00F               	goto	u14000
 11201                           
 11202                           ; BSR set to: 0
 11203  0007E0  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11204  0007E2  6ED9               	movwf	fsr2l,c
 11205  0007E4  6ADA               	clrf	fsr2h,c
 11206  0007E6  006F FF7B FFF6     	movff	postinc2,tblptrl
 11207  0007EC  006F FF77 FFF7     	movff	postdec2,tblptrh
 11208  0007F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11209  0007F2  6AF8               	clrf	tblptru,c
 11210  0007F4                     	endif
 11211  0007F4                     	if	0	;tblptru may be non-zero
 11212  0007F4                     	endif
 11213  0007F4  0008               	tblrd		*
 11214  0007F6  50F5               	movf	tablat,w,c
 11215  0007F8  0A69               	xorlw	105
 11216  0007FA  A4D8               	btfss	status,2,c
 11217  0007FC  D044               	goto	l14506
 11218  0007FE                     u14000:
 11219                           
 11220                           ; BSR set to: 0
 11221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 11222  0007FE  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11223  000800  6ED9               	movwf	fsr2l,c
 11224  000802  6ADA               	clrf	fsr2h,c
 11225  000804  2ADE               	incf	postinc2,f,c
 11226  000806  0E00               	movlw	0
 11227  000808  22DD               	addwfc	postdec2,f,c
 11228                           
 11229                           ; BSR set to: 0
 11230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 11231  00080A  5049               	movf	vfpfcnvrt@ap^0,w,c
 11232  00080C  6ED9               	movwf	fsr2l,c
 11233  00080E  6ADA               	clrf	fsr2h,c
 11234  000810  50DF               	movf	indf2,w,c
 11235  000812  2ADF               	incf	indf2,f,c
 11236  000814  2ADF               	incf	indf2,f,c
 11237  000816  6ED9               	movwf	fsr2l,c
 11238  000818  6ADA               	clrf	fsr2h,c
 11239  00081A  006F FF78  F060    	movff	postinc2,vfpfcnvrt@ll
 11240  000820  006F FF74  F061    	movff	postdec2,vfpfcnvrt@ll+1
 11241  000826  0E00               	movlw	0
 11242  000828  BF61               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 11243  00082A  0EFF               	movlw	-1
 11244  00082C  6F62               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 11245  00082E  6F63               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 11246  000830  6F64               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 11247  000832  6F65               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 11248  000834  6F66               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 11249  000836  6F67               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 11250                           
 11251                           ; BSR set to: 0
 11252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 11253  000838  0060  F118  F01F   	movff	vfpfcnvrt@fp,dtoa@fp
 11254  00083E  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 11255  000844  0060  F180  F021   	movff	vfpfcnvrt@ll,dtoa@d
 11256  00084A  0060  F184  F022   	movff	vfpfcnvrt@ll+1,dtoa@d+1
 11257  000850  0060  F188  F023   	movff	vfpfcnvrt@ll+2,dtoa@d+2
 11258  000856  0060  F18C  F024   	movff	vfpfcnvrt@ll+3,dtoa@d+3
 11259  00085C  0060  F190  F025   	movff	vfpfcnvrt@ll+4,dtoa@d+4
 11260  000862  0060  F194  F026   	movff	vfpfcnvrt@ll+5,dtoa@d+5
 11261  000868  0060  F198  F027   	movff	vfpfcnvrt@ll+6,dtoa@d+6
 11262  00086E  0060  F19C  F028   	movff	vfpfcnvrt@ll+7,dtoa@d+7
 11263  000874  EC6A  F011         	call	_dtoa	;wreg free
 11264  000878  0060  F07C  F046   	movff	?_dtoa,?_vfpfcnvrt
 11265  00087E  0060  F080  F047   	movff	?_dtoa+1,?_vfpfcnvrt+1
 11266  000884  0012               	return	
 11267  000886                     l14506:
 11268                           
 11269                           ; BSR set to: 0
 11270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 11271  000886  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11272  000888  6ED9               	movwf	fsr2l,c
 11273  00088A  6ADA               	clrf	fsr2h,c
 11274  00088C  006F FF7B FFF6     	movff	postinc2,tblptrl
 11275  000892  006F FF77 FFF7     	movff	postdec2,tblptrh
 11276  000898                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11277  000898  6AF8               	clrf	tblptru,c
 11278  00089A                     	endif
 11279  00089A                     	if	0	;tblptru may be non-zero
 11280  00089A                     	endif
 11281  00089A  0008               	tblrd		*
 11282  00089C  50F5               	movf	tablat,w,c
 11283  00089E  0A75               	xorlw	117
 11284  0008A0  A4D8               	btfss	status,2,c
 11285  0008A2  D047               	goto	l14516
 11286                           
 11287                           ; BSR set to: 0
 11288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 11289  0008A4  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11290  0008A6  6ED9               	movwf	fsr2l,c
 11291  0008A8  6ADA               	clrf	fsr2h,c
 11292  0008AA  2ADE               	incf	postinc2,f,c
 11293  0008AC  0E00               	movlw	0
 11294  0008AE  22DD               	addwfc	postdec2,f,c
 11295                           
 11296                           ; BSR set to: 0
 11297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 11298  0008B0  5049               	movf	vfpfcnvrt@ap^0,w,c
 11299  0008B2  6ED9               	movwf	fsr2l,c
 11300  0008B4  6ADA               	clrf	fsr2h,c
 11301  0008B6  50DF               	movf	indf2,w,c
 11302  0008B8  2ADF               	incf	indf2,f,c
 11303  0008BA  2ADF               	incf	indf2,f,c
 11304  0008BC  6ED9               	movwf	fsr2l,c
 11305  0008BE  6ADA               	clrf	fsr2h,c
 11306  0008C0  006F FF78  F04A    	movff	postinc2,??_vfpfcnvrt
 11307  0008C6  006F FF74  F04B    	movff	postdec2,??_vfpfcnvrt+1
 11308  0008CC  0060  F128  F06D   	movff	??_vfpfcnvrt,vfpfcnvrt@llu
 11309  0008D2  0060  F12C  F06E   	movff	??_vfpfcnvrt+1,vfpfcnvrt@llu+1
 11310  0008D8  6B6F               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 11311  0008DA  6B70               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 11312  0008DC  6B71               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 11313  0008DE  6B72               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 11314  0008E0  6B73               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 11315  0008E2  6B74               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 11316                           
 11317                           ; BSR set to: 0
 11318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 11319  0008E4  0060  F118  F01F   	movff	vfpfcnvrt@fp,utoa@fp
 11320  0008EA  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,utoa@fp+1
 11321  0008F0  0060  F1B4  F021   	movff	vfpfcnvrt@llu,utoa@d
 11322  0008F6  0060  F1B8  F022   	movff	vfpfcnvrt@llu+1,utoa@d+1
 11323  0008FC  0060  F1BC  F023   	movff	vfpfcnvrt@llu+2,utoa@d+2
 11324  000902  0060  F1C0  F024   	movff	vfpfcnvrt@llu+3,utoa@d+3
 11325  000908  0060  F1C4  F025   	movff	vfpfcnvrt@llu+4,utoa@d+4
 11326  00090E  0060  F1C8  F026   	movff	vfpfcnvrt@llu+5,utoa@d+5
 11327  000914  0060  F1CC  F027   	movff	vfpfcnvrt@llu+6,utoa@d+6
 11328  00091A  0060  F1D0  F028   	movff	vfpfcnvrt@llu+7,utoa@d+7
 11329  000920  EC4C  F016         	call	_utoa	;wreg free
 11330  000924  0060  F07C  F046   	movff	?_utoa,?_vfpfcnvrt
 11331  00092A  0060  F080  F047   	movff	?_utoa+1,?_vfpfcnvrt+1
 11332  000930  0012               	return	
 11333  000932                     l14516:
 11334                           
 11335                           ; BSR set to: 0
 11336                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 11337  000932  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11338  000934  6ED9               	movwf	fsr2l,c
 11339  000936  6ADA               	clrf	fsr2h,c
 11340  000938  006F FF7B FFF6     	movff	postinc2,tblptrl
 11341  00093E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11342  000944                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11343  000944  6AF8               	clrf	tblptru,c
 11344  000946                     	endif
 11345  000946                     	if	0	;tblptru may be non-zero
 11346  000946                     	endif
 11347  000946  0008               	tblrd		*
 11348  000948  50F5               	movf	tablat,w,c
 11349  00094A  0A78               	xorlw	120
 11350  00094C  B4D8               	btfsc	status,2,c
 11351  00094E  D00F               	goto	u14030
 11352                           
 11353                           ; BSR set to: 0
 11354  000950  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11355  000952  6ED9               	movwf	fsr2l,c
 11356  000954  6ADA               	clrf	fsr2h,c
 11357  000956  006F FF7B FFF6     	movff	postinc2,tblptrl
 11358  00095C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11359  000962                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11360  000962  6AF8               	clrf	tblptru,c
 11361  000964                     	endif
 11362  000964                     	if	0	;tblptru may be non-zero
 11363  000964                     	endif
 11364  000964  0008               	tblrd		*
 11365  000966  50F5               	movf	tablat,w,c
 11366  000968  0A58               	xorlw	88
 11367  00096A  A4D8               	btfss	status,2,c
 11368  00096C  D058               	goto	l14530
 11369  00096E                     u14030:
 11370                           
 11371                           ; BSR set to: 0
 11372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 11373  00096E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11374  000970  6ED9               	movwf	fsr2l,c
 11375  000972  6ADA               	clrf	fsr2h,c
 11376  000974  006F FF7B FFF6     	movff	postinc2,tblptrl
 11377  00097A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11378  000980                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11379  000980  6AF8               	clrf	tblptru,c
 11380  000982                     	endif
 11381  000982                     	if	0	;tblptru may be non-zero
 11382  000982                     	endif
 11383  000982  0008               	tblrd		*
 11384  000984  006F FFD4  F068    	movff	tablat,vfpfcnvrt@c
 11385                           
 11386                           ; BSR set to: 0
 11387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 11388  00098A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11389  00098C  6ED9               	movwf	fsr2l,c
 11390  00098E  6ADA               	clrf	fsr2h,c
 11391  000990  2ADE               	incf	postinc2,f,c
 11392  000992  0E00               	movlw	0
 11393  000994  22DD               	addwfc	postdec2,f,c
 11394                           
 11395                           ; BSR set to: 0
 11396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 11397  000996  5049               	movf	vfpfcnvrt@ap^0,w,c
 11398  000998  6ED9               	movwf	fsr2l,c
 11399  00099A  6ADA               	clrf	fsr2h,c
 11400  00099C  50DF               	movf	indf2,w,c
 11401  00099E  2ADF               	incf	indf2,f,c
 11402  0009A0  2ADF               	incf	indf2,f,c
 11403  0009A2  6ED9               	movwf	fsr2l,c
 11404  0009A4  6ADA               	clrf	fsr2h,c
 11405  0009A6  006F FF78  F04A    	movff	postinc2,??_vfpfcnvrt
 11406  0009AC  006F FF74  F04B    	movff	postdec2,??_vfpfcnvrt+1
 11407  0009B2  0060  F128  F06D   	movff	??_vfpfcnvrt,vfpfcnvrt@llu
 11408  0009B8  0060  F12C  F06E   	movff	??_vfpfcnvrt+1,vfpfcnvrt@llu+1
 11409  0009BE  6B6F               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 11410  0009C0  6B70               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 11411  0009C2  6B71               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 11412  0009C4  6B72               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 11413  0009C6  6B73               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 11414  0009C8  6B74               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 11415                           
 11416                           ; BSR set to: 0
 11417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 11418  0009CA  0060  F118  F01F   	movff	vfpfcnvrt@fp,xtoa@fp
 11419  0009D0  0060  F11C  F020   	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 11420  0009D6  0060  F1B4  F021   	movff	vfpfcnvrt@llu,xtoa@d
 11421  0009DC  0060  F1B8  F022   	movff	vfpfcnvrt@llu+1,xtoa@d+1
 11422  0009E2  0060  F1BC  F023   	movff	vfpfcnvrt@llu+2,xtoa@d+2
 11423  0009E8  0060  F1C0  F024   	movff	vfpfcnvrt@llu+3,xtoa@d+3
 11424  0009EE  0060  F1C4  F025   	movff	vfpfcnvrt@llu+4,xtoa@d+4
 11425  0009F4  0060  F1C8  F026   	movff	vfpfcnvrt@llu+5,xtoa@d+5
 11426  0009FA  0060  F1CC  F027   	movff	vfpfcnvrt@llu+6,xtoa@d+6
 11427  000A00  0060  F1D0  F028   	movff	vfpfcnvrt@llu+7,xtoa@d+7
 11428  000A06  0060  F1A0  F029   	movff	vfpfcnvrt@c,xtoa@x
 11429  000A0C  ECC2  F012         	call	_xtoa	;wreg free
 11430  000A10  0060  F07C  F046   	movff	?_xtoa,?_vfpfcnvrt
 11431  000A16  0060  F080  F047   	movff	?_xtoa+1,?_vfpfcnvrt+1
 11432  000A1C  0012               	return	
 11433  000A1E                     l14530:
 11434                           
 11435                           ; BSR set to: 0
 11436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 11437  000A1E  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11438  000A20  6ED9               	movwf	fsr2l,c
 11439  000A22  6ADA               	clrf	fsr2h,c
 11440  000A24  006F FF7B FFF6     	movff	postinc2,tblptrl
 11441  000A2A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11442  000A30                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11443  000A30  6AF8               	clrf	tblptru,c
 11444  000A32                     	endif
 11445  000A32                     	if	0	;tblptru may be non-zero
 11446  000A32                     	endif
 11447  000A32  0008               	tblrd		*
 11448  000A34  50F5               	movf	tablat,w,c
 11449  000A36  0A25               	xorlw	37
 11450  000A38  A4D8               	btfss	status,2,c
 11451  000A3A  D017               	goto	l14540
 11452                           
 11453                           ; BSR set to: 0
 11454                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 11455  000A3C  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11456  000A3E  6ED9               	movwf	fsr2l,c
 11457  000A40  6ADA               	clrf	fsr2h,c
 11458  000A42  2ADE               	incf	postinc2,f,c
 11459  000A44  0E00               	movlw	0
 11460  000A46  22DD               	addwfc	postdec2,f,c
 11461                           
 11462                           ; BSR set to: 0
 11463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 11464  000A48  0E00               	movlw	0
 11465  000A4A  6E05               	movwf	(fputc@c+1)^0,c
 11466  000A4C  0E25               	movlw	37
 11467  000A4E  6E04               	movwf	fputc@c^0,c
 11468  000A50  0060  F118  F006   	movff	vfpfcnvrt@fp,fputc@fp
 11469  000A56  0060  F11C  F007   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11470  000A5C  EC9C  F03B         	call	_fputc	;wreg free
 11471  000A60                     l14536:
 11472                           
 11473                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 11474  000A60  0E00               	movlw	0
 11475  000A62  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
 11476  000A64  0E01               	movlw	1
 11477  000A66  6E46               	movwf	?_vfpfcnvrt^0,c
 11478  000A68  0012               	return	
 11479  000A6A                     l14540:
 11480                           
 11481                           ; BSR set to: 0
 11482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 11483  000A6A  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11484  000A6C  6ED9               	movwf	fsr2l,c
 11485  000A6E  6ADA               	clrf	fsr2h,c
 11486  000A70  2ADE               	incf	postinc2,f,c
 11487  000A72  0E00               	movlw	0
 11488  000A74  22DD               	addwfc	postdec2,f,c
 11489                           
 11490                           ; BSR set to: 0
 11491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
 11492  000A76  0E00               	movlw	0
 11493  000A78  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
 11494  000A7A  0E00               	movlw	0
 11495  000A7C  6E46               	movwf	?_vfpfcnvrt^0,c
 11496  000A7E  0012               	return	
 11497  000A80                     l14546:
 11498                           
 11499                           ; BSR set to: 0
 11500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 11501  000A80  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11502  000A82  6ED9               	movwf	fsr2l,c
 11503  000A84  6ADA               	clrf	fsr2h,c
 11504  000A86  006F FF7B FFF6     	movff	postinc2,tblptrl
 11505  000A8C  006F FF77 FFF7     	movff	postdec2,tblptrh
 11506  000A92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11507  000A92  6AF8               	clrf	tblptru,c
 11508  000A94                     	endif
 11509  000A94                     	if	0	;tblptru may be non-zero
 11510  000A94                     	endif
 11511  000A94  0008               	tblrd		*
 11512  000A96  50F5               	movf	tablat,w,c
 11513  000A98  6E04               	movwf	fputc@c^0,c
 11514  000A9A  6A05               	clrf	(fputc@c+1)^0,c
 11515  000A9C  0060  F118  F006   	movff	vfpfcnvrt@fp,fputc@fp
 11516  000AA2  0060  F11C  F007   	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11517  000AA8  EC9C  F03B         	call	_fputc	;wreg free
 11518                           
 11519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 11520  000AAC  5048               	movf	vfpfcnvrt@fmt^0,w,c
 11521  000AAE  6ED9               	movwf	fsr2l,c
 11522  000AB0  6ADA               	clrf	fsr2h,c
 11523  000AB2  2ADE               	incf	postinc2,f,c
 11524  000AB4  0E00               	movlw	0
 11525  000AB6  22DD               	addwfc	postdec2,f,c
 11526  000AB8  D7D3               	goto	l14536
 11527  000ABA                     __end_of_vfpfcnvrt:
 11528                           	opt callstack 0
 11529                           
 11530 ;; *************** function _xtoa *****************
 11531 ;; Defined at:
 11532 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 11533 ;; Parameters:    Size  Location     Type
 11534 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 11535 ;;		 -> NULL(0), 
 11536 ;;  d               8   32[COMRAM] unsigned long long 
 11537 ;;  x               1   40[COMRAM] unsigned char 
 11538 ;; Auto vars:     Size  Location     Type
 11539 ;;  n               8   57[COMRAM] unsigned long long 
 11540 ;;  c               2   67[COMRAM] int 
 11541 ;;  i               2   65[COMRAM] int 
 11542 ;;  w               2   55[COMRAM] int 
 11543 ;;  p               2   53[COMRAM] int 
 11544 ;; Return value:  Size  Location     Type
 11545 ;;                  2   30[COMRAM] int 
 11546 ;; Registers used:
 11547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11548 ;; Tracked objects:
 11549 ;;		On entry : 3F/0
 11550 ;;		On exit  : 0/0
 11551 ;;		Unchanged: 0/0
 11552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11553 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11554 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11555 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11556 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11557 ;;Total ram usage:       39 bytes
 11558 ;; Hardware stack levels used:    1
 11559 ;; Hardware stack levels required when called:   12
 11560 ;; This function calls:
 11561 ;;		_isalpha
 11562 ;;		_isupper
 11563 ;;		_pad
 11564 ;;		_toupper
 11565 ;; This function is called by:
 11566 ;;		_vfpfcnvrt
 11567 ;; This function uses a non-reentrant model
 11568 ;;
 11569                           
 11570                           	psect	text59
 11571  002584                     __ptext59:
 11572                           	opt callstack 0
 11573  002584                     _xtoa:
 11574                           	opt callstack 12
 11575                           
 11576                           ; BSR set to: 0
 11577                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
 11578                           
 11579                           ;incstack = 0
 11580  002584  AFB8               	btfss	(_prec+1)& (0+255),7,b
 11581                           
 11582                           ; BSR set to: 0
 11583                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
 11584  002586  93B9               	bcf	_flags& (0+255),1,b
 11585                           
 11586                           ; BSR set to: 0
 11587                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
 11588  002588  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 11589  00258A  D005               	goto	u13620
 11590  00258C  51B8               	movf	(_prec+1)& (0+255),w,b
 11591  00258E  E108               	bnz	l3163
 11592  002590  05B7               	decf	_prec& (0+255),w,b
 11593  002592  B0D8               	btfsc	status,0,c
 11594  002594  D005               	goto	l3163
 11595  002596                     u13620:
 11596                           
 11597                           ; BSR set to: 0
 11598  002596  0E00               	movlw	0
 11599  002598  6E37               	movwf	(xtoa@p+1)^0,c
 11600  00259A  0E01               	movlw	1
 11601  00259C  6E36               	movwf	xtoa@p^0,c
 11602  00259E  D006               	goto	l3165
 11603  0025A0                     l3163:
 11604                           
 11605                           ; BSR set to: 0
 11606  0025A0  0060  F2DC  F036   	movff	_prec,xtoa@p
 11607  0025A6  0060  F2E0  F037   	movff	_prec+1,xtoa@p+1
 11608  0025AC                     l3165:
 11609                           
 11610                           ; BSR set to: 0
 11611                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
 11612  0025AC  0060  F2D4  F038   	movff	_width,xtoa@w
 11613  0025B2  0060  F2D8  F039   	movff	_width+1,xtoa@w+1
 11614                           
 11615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
 11616  0025B8  A9B9               	btfss	_flags& (0+255),4,b
 11617  0025BA  D004               	goto	l14284
 11618                           
 11619                           ; BSR set to: 0
 11620                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
 11621  0025BC  0EFE               	movlw	254
 11622  0025BE  2638               	addwf	xtoa@w^0,f,c
 11623  0025C0  0EFF               	movlw	255
 11624  0025C2  2239               	addwfc	(xtoa@w+1)^0,f,c
 11625  0025C4                     l14284:
 11626                           
 11627                           ; BSR set to: 0
 11628                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
 11629  0025C4  0060  F084  F03A   	movff	xtoa@d,xtoa@n
 11630  0025CA  0060  F088  F03B   	movff	xtoa@d+1,xtoa@n+1
 11631  0025D0  0060  F08C  F03C   	movff	xtoa@d+2,xtoa@n+2
 11632  0025D6  0060  F090  F03D   	movff	xtoa@d+3,xtoa@n+3
 11633  0025DC  0060  F094  F03E   	movff	xtoa@d+4,xtoa@n+4
 11634  0025E2  0060  F098  F03F   	movff	xtoa@d+5,xtoa@n+5
 11635  0025E8  0060  F09C  F040   	movff	xtoa@d+6,xtoa@n+6
 11636  0025EE  0060  F0A0  F041   	movff	xtoa@d+7,xtoa@n+7
 11637                           
 11638                           ; BSR set to: 0
 11639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
 11640  0025F4  0E00               	movlw	0
 11641  0025F6  6E43               	movwf	(xtoa@i+1)^0,c
 11642  0025F8  0E1F               	movlw	31
 11643  0025FA  6E42               	movwf	xtoa@i^0,c
 11644                           
 11645                           ; BSR set to: 0
 11646                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
 11647  0025FC  0E00               	movlw	0
 11648  0025FE  0102               	movlb	2	; () banked
 11649  002600  6FDB               	movwf	(_dbuf+31)& (0+255),b
 11650                           
 11651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11652  002602  D0A8               	goto	l14320
 11653  002604                     l14290:
 11654                           
 11655                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
 11656  002604  0642               	decf	xtoa@i^0,f,c
 11657  002606  A0D8               	btfss	status,0,c
 11658  002608  0643               	decf	(xtoa@i+1)^0,f,c
 11659                           
 11660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
 11661  00260A  0E0F               	movlw	15
 11662  00260C  143A               	andwf	xtoa@n^0,w,c
 11663  00260E  6E44               	movwf	xtoa@c^0,c
 11664  002610  6A45               	clrf	(xtoa@c+1)^0,c
 11665                           
 11666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
 11667  002612  BE45               	btfsc	(xtoa@c+1)^0,7,c
 11668  002614  D008               	goto	l14298
 11669  002616  5045               	movf	(xtoa@c+1)^0,w,c
 11670  002618  E104               	bnz	u13640
 11671  00261A  0E0A               	movlw	10
 11672  00261C  5C44               	subwf	xtoa@c^0,w,c
 11673  00261E  A0D8               	btfss	status,0,c
 11674  002620  D002               	goto	l14298
 11675  002622                     u13640:
 11676  002622  0E57               	movlw	87
 11677  002624  D001               	goto	L4
 11678  002626                     l14298:
 11679  002626  0E30               	movlw	48
 11680  002628                     L4:
 11681  002628  2444               	addwf	xtoa@c^0,w,c
 11682  00262A  6E44               	movwf	xtoa@c^0,c
 11683  00262C  0E00               	movlw	0
 11684  00262E  2045               	addwfc	(xtoa@c+1)^0,w,c
 11685  002630  6E45               	movwf	(xtoa@c+1)^0,c
 11686                           
 11687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 646:       
      +                            if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
      +                          gned)(c)|32)-'a') < 26)) {
 11688  002632  0EBF               	movlw	191
 11689  002634  6E2A               	movwf	??_xtoa^0,c
 11690  002636  0EFF               	movlw	255
 11691  002638  6E2B               	movwf	(??_xtoa+1)^0,c
 11692  00263A  5029               	movf	xtoa@x^0,w,c
 11693  00263C  6E2C               	movwf	(??_xtoa+2)^0,c
 11694  00263E  6A2D               	clrf	(??_xtoa+3)^0,c
 11695  002640  502A               	movf	??_xtoa^0,w,c
 11696  002642  262C               	addwf	(??_xtoa+2)^0,f,c
 11697  002644  502B               	movf	(??_xtoa+1)^0,w,c
 11698  002646  222D               	addwfc	(??_xtoa+3)^0,f,c
 11699  002648  502D               	movf	(??_xtoa+3)^0,w,c
 11700  00264A  E106               	bnz	u13650
 11701  00264C  0E1A               	movlw	26
 11702  00264E  5C2C               	subwf	(??_xtoa+2)^0,w,c
 11703  002650  B0D8               	btfsc	status,0,c
 11704  002652  D002               	goto	u13650
 11705  002654  0E01               	movlw	1
 11706  002656  D001               	goto	u13660
 11707  002658                     u13650:
 11708  002658  0E00               	movlw	0
 11709  00265A                     u13660:
 11710  00265A  6E32               	movwf	_xtoa$7388^0,c
 11711  00265C  6A33               	clrf	(_xtoa$7388+1)^0,c
 11712  00265E  5032               	movf	_xtoa$7388^0,w,c
 11713  002660  1033               	iorwf	(_xtoa$7388+1)^0,w,c
 11714  002662  B4D8               	btfsc	status,2,c
 11715  002664  D02B               	goto	l14312
 11716  002666  0E9F               	movlw	159
 11717  002668  6E2A               	movwf	??_xtoa^0,c
 11718  00266A  0EFF               	movlw	255
 11719  00266C  6E2B               	movwf	(??_xtoa+1)^0,c
 11720  00266E  0E20               	movlw	32
 11721  002670  1044               	iorwf	xtoa@c^0,w,c
 11722  002672  6E2C               	movwf	(??_xtoa+2)^0,c
 11723  002674  0E00               	movlw	0
 11724  002676  1045               	iorwf	(xtoa@c+1)^0,w,c
 11725  002678  6E2D               	movwf	(??_xtoa+3)^0,c
 11726  00267A  502A               	movf	??_xtoa^0,w,c
 11727  00267C  262C               	addwf	(??_xtoa+2)^0,f,c
 11728  00267E  502B               	movf	(??_xtoa+1)^0,w,c
 11729  002680  222D               	addwfc	(??_xtoa+3)^0,f,c
 11730  002682  502D               	movf	(??_xtoa+3)^0,w,c
 11731  002684  E106               	bnz	u13680
 11732  002686  0E1A               	movlw	26
 11733  002688  5C2C               	subwf	(??_xtoa+2)^0,w,c
 11734  00268A  B0D8               	btfsc	status,0,c
 11735  00268C  D002               	goto	u13680
 11736  00268E  0E01               	movlw	1
 11737  002690  D001               	goto	u13690
 11738  002692                     u13680:
 11739  002692  0E00               	movlw	0
 11740  002694                     u13690:
 11741  002694  6E34               	movwf	_xtoa$7389^0,c
 11742  002696  6A35               	clrf	(_xtoa$7389+1)^0,c
 11743  002698  5034               	movf	_xtoa$7389^0,w,c
 11744  00269A  1035               	iorwf	(_xtoa$7389+1)^0,w,c
 11745  00269C  B4D8               	btfsc	status,2,c
 11746  00269E  D00E               	goto	l14312
 11747                           
 11748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
 11749  0026A0  0060  F110  F008   	movff	xtoa@c,toupper@c
 11750  0026A6  0060  F114  F009   	movff	xtoa@c+1,toupper@c+1
 11751  0026AC  EC55  F03F         	call	_toupper	;wreg free
 11752  0026B0  0060  F020  F044   	movff	?_toupper,xtoa@c
 11753  0026B6  0060  F024  F045   	movff	?_toupper+1,xtoa@c+1
 11754  0026BC                     l14312:
 11755                           
 11756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
 11757  0026BC  0EBC               	movlw	low _dbuf
 11758  0026BE  2442               	addwf	xtoa@i^0,w,c
 11759  0026C0  6ED9               	movwf	fsr2l,c
 11760  0026C2  0E02               	movlw	high _dbuf
 11761  0026C4  2043               	addwfc	(xtoa@i+1)^0,w,c
 11762  0026C6  6EDA               	movwf	fsr2h,c
 11763  0026C8  0060  F113  FFDF   	movff	xtoa@c,indf2
 11764                           
 11765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
 11766  0026CE  0636               	decf	xtoa@p^0,f,c
 11767  0026D0  A0D8               	btfss	status,0,c
 11768  0026D2  0637               	decf	(xtoa@p+1)^0,f,c
 11769                           
 11770                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
 11771  0026D4  0638               	decf	xtoa@w^0,f,c
 11772  0026D6  A0D8               	btfss	status,0,c
 11773  0026D8  0639               	decf	(xtoa@w+1)^0,f,c
 11774                           
 11775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
 11776  0026DA  0060  F0E8  F02A   	movff	xtoa@n,??_xtoa
 11777  0026E0  0060  F0EC  F02B   	movff	xtoa@n+1,??_xtoa+1
 11778  0026E6  0060  F0F0  F02C   	movff	xtoa@n+2,??_xtoa+2
 11779  0026EC  0060  F0F4  F02D   	movff	xtoa@n+3,??_xtoa+3
 11780  0026F2  0060  F0F8  F02E   	movff	xtoa@n+4,??_xtoa+4
 11781  0026F8  0060  F0FC  F02F   	movff	xtoa@n+5,??_xtoa+5
 11782  0026FE  0060  F100  F030   	movff	xtoa@n+6,??_xtoa+6
 11783  002704  0060  F104  F031   	movff	xtoa@n+7,??_xtoa+7
 11784  00270A  0E05               	movlw	5
 11785  00270C  D009               	goto	u13710
 11786  00270E                     u13715:
 11787  00270E  90D8               	bcf	status,0,c
 11788  002710  3231               	rrcf	(??_xtoa+7)^0,f,c
 11789  002712  3230               	rrcf	(??_xtoa+6)^0,f,c
 11790  002714  322F               	rrcf	(??_xtoa+5)^0,f,c
 11791  002716  322E               	rrcf	(??_xtoa+4)^0,f,c
 11792  002718  322D               	rrcf	(??_xtoa+3)^0,f,c
 11793  00271A  322C               	rrcf	(??_xtoa+2)^0,f,c
 11794  00271C  322B               	rrcf	(??_xtoa+1)^0,f,c
 11795  00271E  322A               	rrcf	??_xtoa^0,f,c
 11796  002720                     u13710:
 11797  002720  2EE8               	decfsz	wreg,f,c
 11798  002722  D7F5               	goto	u13715
 11799  002724  0060  F0A8  F03A   	movff	??_xtoa,xtoa@n
 11800  00272A  0060  F0AC  F03B   	movff	??_xtoa+1,xtoa@n+1
 11801  002730  0060  F0B0  F03C   	movff	??_xtoa+2,xtoa@n+2
 11802  002736  0060  F0B4  F03D   	movff	??_xtoa+3,xtoa@n+3
 11803  00273C  0060  F0B8  F03E   	movff	??_xtoa+4,xtoa@n+4
 11804  002742  0060  F0BC  F03F   	movff	??_xtoa+5,xtoa@n+5
 11805  002748  0060  F0C0  F040   	movff	??_xtoa+6,xtoa@n+6
 11806  00274E  0060  F0C4  F041   	movff	??_xtoa+7,xtoa@n+7
 11807  002754                     l14320:
 11808                           
 11809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11810  002754  BE43               	btfsc	(xtoa@i+1)^0,7,c
 11811  002756  D021               	goto	u13760
 11812  002758  5043               	movf	(xtoa@i+1)^0,w,c
 11813  00275A  E104               	bnz	u13720
 11814  00275C  0E02               	movlw	2
 11815  00275E  5C42               	subwf	xtoa@i^0,w,c
 11816  002760  A0D8               	btfss	status,0,c
 11817  002762  D01B               	goto	u13760
 11818  002764                     u13720:
 11819  002764  503A               	movf	xtoa@n^0,w,c
 11820  002766  103B               	iorwf	(xtoa@n+1)^0,w,c
 11821  002768  103C               	iorwf	(xtoa@n+2)^0,w,c
 11822  00276A  103D               	iorwf	(xtoa@n+3)^0,w,c
 11823  00276C  103E               	iorwf	(xtoa@n+4)^0,w,c
 11824  00276E  103F               	iorwf	(xtoa@n+5)^0,w,c
 11825  002770  1040               	iorwf	(xtoa@n+6)^0,w,c
 11826  002772  1041               	iorwf	(xtoa@n+7)^0,w,c
 11827  002774  A4D8               	btfss	status,2,c
 11828  002776  D746               	goto	l14290
 11829  002778  BE37               	btfsc	(xtoa@p+1)^0,7,c
 11830  00277A  D005               	goto	u13740
 11831  00277C  5037               	movf	(xtoa@p+1)^0,w,c
 11832  00277E  E102               	bnz	u13741
 11833  002780  0436               	decf	xtoa@p^0,w,c
 11834  002782  B0D8               	btfsc	status,0,c
 11835  002784                     u13741:
 11836  002784  D73F               	goto	l14290
 11837  002786                     u13740:
 11838  002786  BE39               	btfsc	(xtoa@w+1)^0,7,c
 11839  002788  D008               	goto	u13760
 11840  00278A  5039               	movf	(xtoa@w+1)^0,w,c
 11841  00278C  E103               	bnz	u13750
 11842  00278E  0438               	decf	xtoa@w^0,w,c
 11843  002790  A0D8               	btfss	status,0,c
 11844  002792  D003               	goto	u13760
 11845  002794                     u13750:
 11846  002794  0100               	movlb	0	; () banked
 11847  002796  B3B9               	btfsc	_flags& (0+255),1,b
 11848  002798  D735               	goto	l14290
 11849  00279A                     u13760:
 11850                           
 11851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
 11852  00279A  0100               	movlb	0	; () banked
 11853  00279C  A9B9               	btfss	_flags& (0+255),4,b
 11854  00279E  D017               	goto	l14336
 11855                           
 11856                           ; BSR set to: 0
 11857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
 11858  0027A0  0642               	decf	xtoa@i^0,f,c
 11859  0027A2  A0D8               	btfss	status,0,c
 11860  0027A4  0643               	decf	(xtoa@i+1)^0,f,c
 11861                           
 11862                           ; BSR set to: 0
 11863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
 11864  0027A6  0EBC               	movlw	low _dbuf
 11865  0027A8  2442               	addwf	xtoa@i^0,w,c
 11866  0027AA  6ED9               	movwf	fsr2l,c
 11867  0027AC  0E02               	movlw	high _dbuf
 11868  0027AE  2043               	addwfc	(xtoa@i+1)^0,w,c
 11869  0027B0  6EDA               	movwf	fsr2h,c
 11870  0027B2  0060  F0A7  FFDF   	movff	xtoa@x,indf2
 11871                           
 11872                           ; BSR set to: 0
 11873                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
 11874  0027B8  0642               	decf	xtoa@i^0,f,c
 11875  0027BA  A0D8               	btfss	status,0,c
 11876  0027BC  0643               	decf	(xtoa@i+1)^0,f,c
 11877                           
 11878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
 11879  0027BE  0EBC               	movlw	low _dbuf
 11880  0027C0  2442               	addwf	xtoa@i^0,w,c
 11881  0027C2  6ED9               	movwf	fsr2l,c
 11882  0027C4  0E02               	movlw	high _dbuf
 11883  0027C6  2043               	addwfc	(xtoa@i+1)^0,w,c
 11884  0027C8  6EDA               	movwf	fsr2h,c
 11885  0027CA  0E30               	movlw	48
 11886  0027CC  6EDF               	movwf	indf2,c
 11887  0027CE                     l14336:
 11888                           
 11889                           ; BSR set to: 0
 11890                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
 11891  0027CE  0060  F07C  F014   	movff	xtoa@fp,pad@fp
 11892  0027D4  0060  F080  F015   	movff	xtoa@fp+1,pad@fp+1
 11893  0027DA  0EBC               	movlw	low _dbuf
 11894  0027DC  2442               	addwf	xtoa@i^0,w,c
 11895  0027DE  6E16               	movwf	pad@buf^0,c
 11896  0027E0  0E02               	movlw	high _dbuf
 11897  0027E2  2043               	addwfc	(xtoa@i+1)^0,w,c
 11898  0027E4  6E17               	movwf	(pad@buf+1)^0,c
 11899  0027E6  0060  F0E0  F018   	movff	xtoa@w,pad@p
 11900  0027EC  0060  F0E4  F019   	movff	xtoa@w+1,pad@p+1
 11901  0027F2  EC32  F033         	call	_pad	;wreg free
 11902  0027F6  0060  F050  F01F   	movff	?_pad,?_xtoa
 11903  0027FC  0060  F054  F020   	movff	?_pad+1,?_xtoa+1
 11904  002802  0012               	return		;funcret
 11905  002804                     __end_of_xtoa:
 11906                           	opt callstack 0
 11907                           
 11908 ;; *************** function _toupper *****************
 11909 ;; Defined at:
 11910 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
 11911 ;; Parameters:    Size  Location     Type
 11912 ;;  c               2    7[COMRAM] int 
 11913 ;; Auto vars:     Size  Location     Type
 11914 ;;		None
 11915 ;; Return value:  Size  Location     Type
 11916 ;;                  2    7[COMRAM] int 
 11917 ;; Registers used:
 11918 ;;		wreg, status,2, status,0
 11919 ;; Tracked objects:
 11920 ;;		On entry : 0/0
 11921 ;;		On exit  : 0/0
 11922 ;;		Unchanged: 0/0
 11923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11925 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11926 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11927 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11928 ;;Total ram usage:        8 bytes
 11929 ;; Hardware stack levels used:    1
 11930 ;; Hardware stack levels required when called:    8
 11931 ;; This function calls:
 11932 ;;		_islower
 11933 ;; This function is called by:
 11934 ;;		_xtoa
 11935 ;;		___strtoxl
 11936 ;; This function uses a non-reentrant model
 11937 ;;
 11938                           
 11939                           	psect	text60
 11940  007EAA                     __ptext60:
 11941                           	opt callstack 0
 11942  007EAA                     _toupper:
 11943                           	opt callstack 15
 11944                           
 11945                           ;incstack = 0
 11946  007EAA  0E9F               	movlw	159
 11947  007EAC  6E0A               	movwf	??_toupper^0,c
 11948  007EAE  0EFF               	movlw	255
 11949  007EB0  6E0B               	movwf	(??_toupper+1)^0,c
 11950  007EB2  0060  F020  F00C   	movff	toupper@c,??_toupper+2
 11951  007EB8  0060  F024  F00D   	movff	toupper@c+1,??_toupper+3
 11952  007EBE  500A               	movf	??_toupper^0,w,c
 11953  007EC0  260C               	addwf	(??_toupper+2)^0,f,c
 11954  007EC2  500B               	movf	(??_toupper+1)^0,w,c
 11955  007EC4  220D               	addwfc	(??_toupper+3)^0,f,c
 11956  007EC6  500D               	movf	(??_toupper+3)^0,w,c
 11957  007EC8  E106               	bnz	u13100
 11958  007ECA  0E1A               	movlw	26
 11959  007ECC  5C0C               	subwf	(??_toupper+2)^0,w,c
 11960  007ECE  B0D8               	btfsc	status,0,c
 11961  007ED0  D002               	goto	u13100
 11962  007ED2  0E01               	movlw	1
 11963  007ED4  D001               	goto	u13110
 11964  007ED6                     u13100:
 11965  007ED6  0E00               	movlw	0
 11966  007ED8                     u13110:
 11967  007ED8  6E0E               	movwf	_toupper$8027^0,c
 11968  007EDA  6A0F               	clrf	(_toupper$8027+1)^0,c
 11969  007EDC  500E               	movf	_toupper$8027^0,w,c
 11970  007EDE  100F               	iorwf	(_toupper$8027+1)^0,w,c
 11971  007EE0  B4D8               	btfsc	status,2,c
 11972  007EE2  D005               	goto	l4067
 11973  007EE4  0E5F               	movlw	95
 11974  007EE6  1408               	andwf	toupper@c^0,w,c
 11975  007EE8  6E08               	movwf	?_toupper^0,c
 11976  007EEA  6A09               	clrf	(?_toupper+1)^0,c
 11977  007EEC  0012               	return	
 11978  007EEE                     l4067:
 11979  007EEE  0060  F020  F008   	movff	toupper@c,?_toupper
 11980  007EF4  0060  F024  F009   	movff	toupper@c+1,?_toupper+1
 11981  007EFA  0012               	return		;funcret
 11982  007EFC                     __end_of_toupper:
 11983                           	opt callstack 0
 11984                           
 11985 ;; *************** function _islower *****************
 11986 ;; Defined at:
 11987 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
 11988 ;; Parameters:    Size  Location     Type
 11989 ;;  c               2    1[COMRAM] int 
 11990 ;; Auto vars:     Size  Location     Type
 11991 ;;		None
 11992 ;; Return value:  Size  Location     Type
 11993 ;;                  2    1[COMRAM] int 
 11994 ;; Registers used:
 11995 ;;		wreg, status,2, status,0
 11996 ;; Tracked objects:
 11997 ;;		On entry : 0/0
 11998 ;;		On exit  : 0/0
 11999 ;;		Unchanged: 0/0
 12000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12003 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12004 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12005 ;;Total ram usage:        6 bytes
 12006 ;; Hardware stack levels used:    1
 12007 ;; Hardware stack levels required when called:    7
 12008 ;; This function calls:
 12009 ;;		Nothing
 12010 ;; This function is called by:
 12011 ;;		_toupper
 12012 ;; This function uses a non-reentrant model
 12013 ;;
 12014                           
 12015                           	psect	text61
 12016  00887C                     __ptext61:
 12017                           	opt callstack 0
 12018  00887C                     _islower:
 12019                           	opt callstack 15
 12020                           
 12021                           ;incstack = 0
 12022  00887C  0E9F               	movlw	159
 12023  00887E  6E04               	movwf	??_islower^0,c
 12024  008880  0EFF               	movlw	255
 12025  008882  6E05               	movwf	(??_islower+1)^0,c
 12026  008884  0060  F008  F006   	movff	islower@c,??_islower+2
 12027  00888A  0060  F00C  F007   	movff	islower@c+1,??_islower+3
 12028  008890  5004               	movf	??_islower^0,w,c
 12029  008892  2606               	addwf	(??_islower+2)^0,f,c
 12030  008894  5005               	movf	(??_islower+1)^0,w,c
 12031  008896  2207               	addwfc	(??_islower+3)^0,f,c
 12032  008898  5007               	movf	(??_islower+3)^0,w,c
 12033  00889A  E106               	bnz	u12970
 12034  00889C  0E1A               	movlw	26
 12035  00889E  5C06               	subwf	(??_islower+2)^0,w,c
 12036  0088A0  B0D8               	btfsc	status,0,c
 12037  0088A2  D002               	goto	u12970
 12038  0088A4  0E01               	movlw	1
 12039  0088A6  D001               	goto	u12980
 12040  0088A8                     u12970:
 12041  0088A8  0E00               	movlw	0
 12042  0088AA                     u12980:
 12043  0088AA  6E02               	movwf	?_islower^0,c
 12044  0088AC  6A03               	clrf	(?_islower+1)^0,c
 12045  0088AE  0012               	return		;funcret
 12046  0088B0                     __end_of_islower:
 12047                           	opt callstack 0
 12048                           
 12049 ;; *************** function _isupper *****************
 12050 ;; Defined at:
 12051 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
 12052 ;; Parameters:    Size  Location     Type
 12053 ;;  c               2    1[COMRAM] int 
 12054 ;; Auto vars:     Size  Location     Type
 12055 ;;		None
 12056 ;; Return value:  Size  Location     Type
 12057 ;;                  2    1[COMRAM] int 
 12058 ;; Registers used:
 12059 ;;		wreg, status,2, status,0
 12060 ;; Tracked objects:
 12061 ;;		On entry : 0/0
 12062 ;;		On exit  : 0/0
 12063 ;;		Unchanged: 0/0
 12064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12065 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12067 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12068 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12069 ;;Total ram usage:        6 bytes
 12070 ;; Hardware stack levels used:    1
 12071 ;; Hardware stack levels required when called:    7
 12072 ;; This function calls:
 12073 ;;		Nothing
 12074 ;; This function is called by:
 12075 ;;		_xtoa
 12076 ;; This function uses a non-reentrant model
 12077 ;;
 12078                           
 12079                           	psect	text62
 12080  0088B0                     __ptext62:
 12081                           	opt callstack 0
 12082  0088B0                     _isupper:
 12083                           	opt callstack 16
 12084                           
 12085                           ;incstack = 0
 12086  0088B0  0EBF               	movlw	191
 12087  0088B2  6E04               	movwf	??_isupper^0,c
 12088  0088B4  0EFF               	movlw	255
 12089  0088B6  6E05               	movwf	(??_isupper+1)^0,c
 12090  0088B8  0060  F008  F006   	movff	isupper@c,??_isupper+2
 12091  0088BE  0060  F00C  F007   	movff	isupper@c+1,??_isupper+3
 12092  0088C4  5004               	movf	??_isupper^0,w,c
 12093  0088C6  2606               	addwf	(??_isupper+2)^0,f,c
 12094  0088C8  5005               	movf	(??_isupper+1)^0,w,c
 12095  0088CA  2207               	addwfc	(??_isupper+3)^0,f,c
 12096  0088CC  5007               	movf	(??_isupper+3)^0,w,c
 12097  0088CE  E106               	bnz	u13060
 12098  0088D0  0E1A               	movlw	26
 12099  0088D2  5C06               	subwf	(??_isupper+2)^0,w,c
 12100  0088D4  B0D8               	btfsc	status,0,c
 12101  0088D6  D002               	goto	u13060
 12102  0088D8  0E01               	movlw	1
 12103  0088DA  D001               	goto	u13070
 12104  0088DC                     u13060:
 12105  0088DC  0E00               	movlw	0
 12106  0088DE                     u13070:
 12107  0088DE  6E02               	movwf	?_isupper^0,c
 12108  0088E0  6A03               	clrf	(?_isupper+1)^0,c
 12109  0088E2  0012               	return		;funcret
 12110  0088E4                     __end_of_isupper:
 12111                           	opt callstack 0
 12112                           
 12113 ;; *************** function _isalpha *****************
 12114 ;; Defined at:
 12115 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
 12116 ;; Parameters:    Size  Location     Type
 12117 ;;  c               2    1[COMRAM] int 
 12118 ;; Auto vars:     Size  Location     Type
 12119 ;;		None
 12120 ;; Return value:  Size  Location     Type
 12121 ;;                  2    1[COMRAM] int 
 12122 ;; Registers used:
 12123 ;;		wreg, status,2, status,0
 12124 ;; Tracked objects:
 12125 ;;		On entry : 0/0
 12126 ;;		On exit  : 0/0
 12127 ;;		Unchanged: 0/0
 12128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12129 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12131 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12132 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12133 ;;Total ram usage:        6 bytes
 12134 ;; Hardware stack levels used:    1
 12135 ;; Hardware stack levels required when called:    7
 12136 ;; This function calls:
 12137 ;;		Nothing
 12138 ;; This function is called by:
 12139 ;;		_xtoa
 12140 ;;		___strtoxl
 12141 ;; This function uses a non-reentrant model
 12142 ;;
 12143                           
 12144                           	psect	text63
 12145  0088E4                     __ptext63:
 12146                           	opt callstack 0
 12147  0088E4                     _isalpha:
 12148                           	opt callstack 16
 12149                           
 12150                           ;incstack = 0
 12151  0088E4  0E9F               	movlw	159
 12152  0088E6  6E04               	movwf	??_isalpha^0,c
 12153  0088E8  0EFF               	movlw	255
 12154  0088EA  6E05               	movwf	(??_isalpha+1)^0,c
 12155  0088EC  0E20               	movlw	32
 12156  0088EE  1002               	iorwf	isalpha@c^0,w,c
 12157  0088F0  6E06               	movwf	(??_isalpha+2)^0,c
 12158  0088F2  0E00               	movlw	0
 12159  0088F4  1003               	iorwf	(isalpha@c+1)^0,w,c
 12160  0088F6  6E07               	movwf	(??_isalpha+3)^0,c
 12161  0088F8  5004               	movf	??_isalpha^0,w,c
 12162  0088FA  2606               	addwf	(??_isalpha+2)^0,f,c
 12163  0088FC  5005               	movf	(??_isalpha+1)^0,w,c
 12164  0088FE  2207               	addwfc	(??_isalpha+3)^0,f,c
 12165  008900  5007               	movf	(??_isalpha+3)^0,w,c
 12166  008902  E106               	bnz	u13080
 12167  008904  0E1A               	movlw	26
 12168  008906  5C06               	subwf	(??_isalpha+2)^0,w,c
 12169  008908  B0D8               	btfsc	status,0,c
 12170  00890A  D002               	goto	u13080
 12171  00890C  0E01               	movlw	1
 12172  00890E  D001               	goto	u13090
 12173  008910                     u13080:
 12174  008910  0E00               	movlw	0
 12175  008912                     u13090:
 12176  008912  6E02               	movwf	?_isalpha^0,c
 12177  008914  6A03               	clrf	(?_isalpha+1)^0,c
 12178  008916  0012               	return		;funcret
 12179  008918                     __end_of_isalpha:
 12180                           	opt callstack 0
 12181                           
 12182 ;; *************** function _utoa *****************
 12183 ;; Defined at:
 12184 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12185 ;; Parameters:    Size  Location     Type
 12186 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 12187 ;;		 -> NULL(0), 
 12188 ;;  d               8   32[COMRAM] unsigned long long 
 12189 ;; Auto vars:     Size  Location     Type
 12190 ;;  n               8   52[COMRAM] unsigned long long 
 12191 ;;  i               2   60[COMRAM] int 
 12192 ;;  w               2   50[COMRAM] int 
 12193 ;;  p               2   48[COMRAM] int 
 12194 ;; Return value:  Size  Location     Type
 12195 ;;                  2   30[COMRAM] int 
 12196 ;; Registers used:
 12197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12198 ;; Tracked objects:
 12199 ;;		On entry : 3F/0
 12200 ;;		On exit  : 0/0
 12201 ;;		Unchanged: 0/0
 12202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12203 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12204 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12205 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12206 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12207 ;;Total ram usage:       32 bytes
 12208 ;; Hardware stack levels used:    1
 12209 ;; Hardware stack levels required when called:   12
 12210 ;; This function calls:
 12211 ;;		___lodiv
 12212 ;;		___lomod
 12213 ;;		_pad
 12214 ;; This function is called by:
 12215 ;;		_vfpfcnvrt
 12216 ;; This function uses a non-reentrant model
 12217 ;;
 12218                           
 12219                           	psect	text64
 12220  002C98                     __ptext64:
 12221                           	opt callstack 0
 12222  002C98                     _utoa:
 12223                           	opt callstack 12
 12224                           
 12225                           ; BSR set to: 0
 12226                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 12227                           
 12228                           ;incstack = 0
 12229  002C98  AFB8               	btfss	(_prec+1)& (0+255),7,b
 12230                           
 12231                           ; BSR set to: 0
 12232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
 12233  002C9A  93B9               	bcf	_flags& (0+255),1,b
 12234                           
 12235                           ; BSR set to: 0
 12236                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
 12237  002C9C  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 12238  002C9E  D005               	goto	u13550
 12239  002CA0  51B8               	movf	(_prec+1)& (0+255),w,b
 12240  002CA2  E108               	bnz	l3148
 12241  002CA4  05B7               	decf	_prec& (0+255),w,b
 12242  002CA6  B0D8               	btfsc	status,0,c
 12243  002CA8  D005               	goto	l3148
 12244  002CAA                     u13550:
 12245                           
 12246                           ; BSR set to: 0
 12247  002CAA  0E00               	movlw	0
 12248  002CAC  6E32               	movwf	(utoa@p+1)^0,c
 12249  002CAE  0E01               	movlw	1
 12250  002CB0  6E31               	movwf	utoa@p^0,c
 12251  002CB2  D006               	goto	l3150
 12252  002CB4                     l3148:
 12253                           
 12254                           ; BSR set to: 0
 12255  002CB4  0060  F2DC  F031   	movff	_prec,utoa@p
 12256  002CBA  0060  F2E0  F032   	movff	_prec+1,utoa@p+1
 12257  002CC0                     l3150:
 12258                           
 12259                           ; BSR set to: 0
 12260                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
 12261  002CC0  0060  F2D4  F033   	movff	_width,utoa@w
 12262  002CC6  0060  F2D8  F034   	movff	_width+1,utoa@w+1
 12263                           
 12264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
 12265  002CCC  0060  F084  F035   	movff	utoa@d,utoa@n
 12266  002CD2  0060  F088  F036   	movff	utoa@d+1,utoa@n+1
 12267  002CD8  0060  F08C  F037   	movff	utoa@d+2,utoa@n+2
 12268  002CDE  0060  F090  F038   	movff	utoa@d+3,utoa@n+3
 12269  002CE4  0060  F094  F039   	movff	utoa@d+4,utoa@n+4
 12270  002CEA  0060  F098  F03A   	movff	utoa@d+5,utoa@n+5
 12271  002CF0  0060  F09C  F03B   	movff	utoa@d+6,utoa@n+6
 12272  002CF6  0060  F0A0  F03C   	movff	utoa@d+7,utoa@n+7
 12273                           
 12274                           ; BSR set to: 0
 12275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
 12276  002CFC  0E00               	movlw	0
 12277  002CFE  6E3E               	movwf	(utoa@i+1)^0,c
 12278  002D00  0E1F               	movlw	31
 12279  002D02  6E3D               	movwf	utoa@i^0,c
 12280                           
 12281                           ; BSR set to: 0
 12282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
 12283  002D04  0E00               	movlw	0
 12284  002D06  0102               	movlb	2	; () banked
 12285  002D08  6FDB               	movwf	(_dbuf+31)& (0+255),b
 12286                           
 12287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12288  002D0A  D096               	goto	l14260
 12289  002D0C                     l14250:
 12290                           
 12291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
 12292  002D0C  063D               	decf	utoa@i^0,f,c
 12293  002D0E  A0D8               	btfss	status,0,c
 12294  002D10  063E               	decf	(utoa@i+1)^0,f,c
 12295                           
 12296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
 12297  002D12  0EBC               	movlw	low _dbuf
 12298  002D14  243D               	addwf	utoa@i^0,w,c
 12299  002D16  6ED9               	movwf	fsr2l,c
 12300  002D18  0E02               	movlw	high _dbuf
 12301  002D1A  203E               	addwfc	(utoa@i+1)^0,w,c
 12302  002D1C  6EDA               	movwf	fsr2h,c
 12303  002D1E  0060  F0D4  F002   	movff	utoa@n,___lomod@dividend
 12304  002D24  0060  F0D8  F003   	movff	utoa@n+1,___lomod@dividend+1
 12305  002D2A  0060  F0DC  F004   	movff	utoa@n+2,___lomod@dividend+2
 12306  002D30  0060  F0E0  F005   	movff	utoa@n+3,___lomod@dividend+3
 12307  002D36  0060  F0E4  F006   	movff	utoa@n+4,___lomod@dividend+4
 12308  002D3C  0060  F0E8  F007   	movff	utoa@n+5,___lomod@dividend+5
 12309  002D42  0060  F0EC  F008   	movff	utoa@n+6,___lomod@dividend+6
 12310  002D48  0060  F0F0  F009   	movff	utoa@n+7,___lomod@dividend+7
 12311  002D4E  0E0A               	movlw	10
 12312  002D50  6E0A               	movwf	___lomod@divisor^0,c
 12313  002D52  0E00               	movlw	0
 12314  002D54  6E0B               	movwf	(___lomod@divisor+1)^0,c
 12315  002D56  0E00               	movlw	0
 12316  002D58  6E0C               	movwf	(___lomod@divisor+2)^0,c
 12317  002D5A  0E00               	movlw	0
 12318  002D5C  6E0D               	movwf	(___lomod@divisor+3)^0,c
 12319  002D5E  0E00               	movlw	0
 12320  002D60  6E0E               	movwf	(___lomod@divisor+4)^0,c
 12321  002D62  0E00               	movlw	0
 12322  002D64  6E0F               	movwf	(___lomod@divisor+5)^0,c
 12323  002D66  0E00               	movlw	0
 12324  002D68  6E10               	movwf	(___lomod@divisor+6)^0,c
 12325  002D6A  0E00               	movlw	0
 12326  002D6C  6E11               	movwf	(___lomod@divisor+7)^0,c
 12327  002D6E  EC76  F032         	call	___lomod	;wreg free
 12328  002D72  0060  F008  F029   	movff	?___lomod,??_utoa
 12329  002D78  0060  F00C  F02A   	movff	?___lomod+1,??_utoa+1
 12330  002D7E  0060  F010  F02B   	movff	?___lomod+2,??_utoa+2
 12331  002D84  0060  F014  F02C   	movff	?___lomod+3,??_utoa+3
 12332  002D8A  0060  F018  F02D   	movff	?___lomod+4,??_utoa+4
 12333  002D90  0060  F01C  F02E   	movff	?___lomod+5,??_utoa+5
 12334  002D96  0060  F020  F02F   	movff	?___lomod+6,??_utoa+6
 12335  002D9C  0060  F024  F030   	movff	?___lomod+7,??_utoa+7
 12336  002DA2  5029               	movf	??_utoa^0,w,c
 12337  002DA4  0F30               	addlw	48
 12338  002DA6  6EDF               	movwf	indf2,c
 12339                           
 12340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
 12341  002DA8  0631               	decf	utoa@p^0,f,c
 12342  002DAA  A0D8               	btfss	status,0,c
 12343  002DAC  0632               	decf	(utoa@p+1)^0,f,c
 12344                           
 12345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
 12346  002DAE  0633               	decf	utoa@w^0,f,c
 12347  002DB0  A0D8               	btfss	status,0,c
 12348  002DB2  0634               	decf	(utoa@w+1)^0,f,c
 12349                           
 12350                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
 12351  002DB4  0060  F0D4  F002   	movff	utoa@n,___lodiv@dividend
 12352  002DBA  0060  F0D8  F003   	movff	utoa@n+1,___lodiv@dividend+1
 12353  002DC0  0060  F0DC  F004   	movff	utoa@n+2,___lodiv@dividend+2
 12354  002DC6  0060  F0E0  F005   	movff	utoa@n+3,___lodiv@dividend+3
 12355  002DCC  0060  F0E4  F006   	movff	utoa@n+4,___lodiv@dividend+4
 12356  002DD2  0060  F0E8  F007   	movff	utoa@n+5,___lodiv@dividend+5
 12357  002DD8  0060  F0EC  F008   	movff	utoa@n+6,___lodiv@dividend+6
 12358  002DDE  0060  F0F0  F009   	movff	utoa@n+7,___lodiv@dividend+7
 12359  002DE4  0E0A               	movlw	10
 12360  002DE6  6E0A               	movwf	___lodiv@divisor^0,c
 12361  002DE8  0E00               	movlw	0
 12362  002DEA  6E0B               	movwf	(___lodiv@divisor+1)^0,c
 12363  002DEC  0E00               	movlw	0
 12364  002DEE  6E0C               	movwf	(___lodiv@divisor+2)^0,c
 12365  002DF0  0E00               	movlw	0
 12366  002DF2  6E0D               	movwf	(___lodiv@divisor+3)^0,c
 12367  002DF4  0E00               	movlw	0
 12368  002DF6  6E0E               	movwf	(___lodiv@divisor+4)^0,c
 12369  002DF8  0E00               	movlw	0
 12370  002DFA  6E0F               	movwf	(___lodiv@divisor+5)^0,c
 12371  002DFC  0E00               	movlw	0
 12372  002DFE  6E10               	movwf	(___lodiv@divisor+6)^0,c
 12373  002E00  0E00               	movlw	0
 12374  002E02  6E11               	movwf	(___lodiv@divisor+7)^0,c
 12375  002E04  EC95  F02D         	call	___lodiv	;wreg free
 12376  002E08  0060  F008  F035   	movff	?___lodiv,utoa@n
 12377  002E0E  0060  F00C  F036   	movff	?___lodiv+1,utoa@n+1
 12378  002E14  0060  F010  F037   	movff	?___lodiv+2,utoa@n+2
 12379  002E1A  0060  F014  F038   	movff	?___lodiv+3,utoa@n+3
 12380  002E20  0060  F018  F039   	movff	?___lodiv+4,utoa@n+4
 12381  002E26  0060  F01C  F03A   	movff	?___lodiv+5,utoa@n+5
 12382  002E2C  0060  F020  F03B   	movff	?___lodiv+6,utoa@n+6
 12383  002E32  0060  F024  F03C   	movff	?___lodiv+7,utoa@n+7
 12384  002E38                     l14260:
 12385                           
 12386                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12387  002E38  503D               	movf	utoa@i^0,w,c
 12388  002E3A  103E               	iorwf	(utoa@i+1)^0,w,c
 12389  002E3C  B4D8               	btfsc	status,2,c
 12390  002E3E  D01B               	goto	u13600
 12391  002E40  5035               	movf	utoa@n^0,w,c
 12392  002E42  1036               	iorwf	(utoa@n+1)^0,w,c
 12393  002E44  1037               	iorwf	(utoa@n+2)^0,w,c
 12394  002E46  1038               	iorwf	(utoa@n+3)^0,w,c
 12395  002E48  1039               	iorwf	(utoa@n+4)^0,w,c
 12396  002E4A  103A               	iorwf	(utoa@n+5)^0,w,c
 12397  002E4C  103B               	iorwf	(utoa@n+6)^0,w,c
 12398  002E4E  103C               	iorwf	(utoa@n+7)^0,w,c
 12399  002E50  A4D8               	btfss	status,2,c
 12400  002E52  D75C               	goto	l14250
 12401  002E54  BE32               	btfsc	(utoa@p+1)^0,7,c
 12402  002E56  D005               	goto	u13580
 12403  002E58  5032               	movf	(utoa@p+1)^0,w,c
 12404  002E5A  E102               	bnz	u13581
 12405  002E5C  0431               	decf	utoa@p^0,w,c
 12406  002E5E  B0D8               	btfsc	status,0,c
 12407  002E60                     u13581:
 12408  002E60  D755               	goto	l14250
 12409  002E62                     u13580:
 12410  002E62  BE34               	btfsc	(utoa@w+1)^0,7,c
 12411  002E64  D008               	goto	u13600
 12412  002E66  5034               	movf	(utoa@w+1)^0,w,c
 12413  002E68  E103               	bnz	u13590
 12414  002E6A  0433               	decf	utoa@w^0,w,c
 12415  002E6C  A0D8               	btfss	status,0,c
 12416  002E6E  D003               	goto	u13600
 12417  002E70                     u13590:
 12418  002E70  0100               	movlb	0	; () banked
 12419  002E72  B3B9               	btfsc	_flags& (0+255),1,b
 12420  002E74  D74B               	goto	l14250
 12421  002E76                     u13600:
 12422                           
 12423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
 12424  002E76  0060  F07C  F014   	movff	utoa@fp,pad@fp
 12425  002E7C  0060  F080  F015   	movff	utoa@fp+1,pad@fp+1
 12426  002E82  0EBC               	movlw	low _dbuf
 12427  002E84  243D               	addwf	utoa@i^0,w,c
 12428  002E86  6E16               	movwf	pad@buf^0,c
 12429  002E88  0E02               	movlw	high _dbuf
 12430  002E8A  203E               	addwfc	(utoa@i+1)^0,w,c
 12431  002E8C  6E17               	movwf	(pad@buf+1)^0,c
 12432  002E8E  0060  F0CC  F018   	movff	utoa@w,pad@p
 12433  002E94  0060  F0D0  F019   	movff	utoa@w+1,pad@p+1
 12434  002E9A  EC32  F033         	call	_pad	;wreg free
 12435  002E9E  0060  F050  F01F   	movff	?_pad,?_utoa
 12436  002EA4  0060  F054  F020   	movff	?_pad+1,?_utoa+1
 12437  002EAA  0012               	return		;funcret
 12438  002EAC                     __end_of_utoa:
 12439                           	opt callstack 0
 12440                           
 12441 ;; *************** function ___lomod *****************
 12442 ;; Defined at:
 12443 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
 12444 ;; Parameters:    Size  Location     Type
 12445 ;;  dividend        8    1[COMRAM] unsigned long long 
 12446 ;;  divisor         8    9[COMRAM] unsigned long long 
 12447 ;; Auto vars:     Size  Location     Type
 12448 ;;  counter         1   17[COMRAM] unsigned char 
 12449 ;; Return value:  Size  Location     Type
 12450 ;;                  8    1[COMRAM] unsigned long long 
 12451 ;; Registers used:
 12452 ;;		wreg, status,2, status,0
 12453 ;; Tracked objects:
 12454 ;;		On entry : 0/2
 12455 ;;		On exit  : 0/0
 12456 ;;		Unchanged: 0/0
 12457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12458 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12459 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12461 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12462 ;;Total ram usage:       17 bytes
 12463 ;; Hardware stack levels used:    1
 12464 ;; Hardware stack levels required when called:    7
 12465 ;; This function calls:
 12466 ;;		Nothing
 12467 ;; This function is called by:
 12468 ;;		_utoa
 12469 ;; This function uses a non-reentrant model
 12470 ;;
 12471                           
 12472                           	psect	text65
 12473  0064EC                     __ptext65:
 12474                           	opt callstack 0
 12475  0064EC                     ___lomod:
 12476                           	opt callstack 16
 12477                           
 12478                           ;incstack = 0
 12479  0064EC  500A               	movf	___lomod@divisor^0,w,c
 12480  0064EE  100B               	iorwf	(___lomod@divisor+1)^0,w,c
 12481  0064F0  100C               	iorwf	(___lomod@divisor+2)^0,w,c
 12482  0064F2  100D               	iorwf	(___lomod@divisor+3)^0,w,c
 12483  0064F4  100E               	iorwf	(___lomod@divisor+4)^0,w,c
 12484  0064F6  100F               	iorwf	(___lomod@divisor+5)^0,w,c
 12485  0064F8  1010               	iorwf	(___lomod@divisor+6)^0,w,c
 12486  0064FA  1011               	iorwf	(___lomod@divisor+7)^0,w,c
 12487  0064FC  B4D8               	btfsc	status,2,c
 12488  0064FE  D03C               	goto	l3679
 12489  006500  0E01               	movlw	1
 12490  006502  6E12               	movwf	___lomod@counter^0,c
 12491  006504  D00A               	goto	l14130
 12492  006506                     l14128:
 12493  006506  90D8               	bcf	status,0,c
 12494  006508  360A               	rlcf	___lomod@divisor^0,f,c
 12495  00650A  360B               	rlcf	(___lomod@divisor+1)^0,f,c
 12496  00650C  360C               	rlcf	(___lomod@divisor+2)^0,f,c
 12497  00650E  360D               	rlcf	(___lomod@divisor+3)^0,f,c
 12498  006510  360E               	rlcf	(___lomod@divisor+4)^0,f,c
 12499  006512  360F               	rlcf	(___lomod@divisor+5)^0,f,c
 12500  006514  3610               	rlcf	(___lomod@divisor+6)^0,f,c
 12501  006516  3611               	rlcf	(___lomod@divisor+7)^0,f,c
 12502  006518  2A12               	incf	___lomod@counter^0,f,c
 12503  00651A                     l14130:
 12504  00651A  AE11               	btfss	(___lomod@divisor+7)^0,7,c
 12505  00651C  D7F4               	goto	l14128
 12506  00651E                     u13330:
 12507  00651E  500A               	movf	___lomod@divisor^0,w,c
 12508  006520  5C02               	subwf	___lomod@dividend^0,w,c
 12509  006522  500B               	movf	(___lomod@divisor+1)^0,w,c
 12510  006524  5803               	subwfb	(___lomod@dividend+1)^0,w,c
 12511  006526  500C               	movf	(___lomod@divisor+2)^0,w,c
 12512  006528  5804               	subwfb	(___lomod@dividend+2)^0,w,c
 12513  00652A  500D               	movf	(___lomod@divisor+3)^0,w,c
 12514  00652C  5805               	subwfb	(___lomod@dividend+3)^0,w,c
 12515  00652E  500E               	movf	(___lomod@divisor+4)^0,w,c
 12516  006530  5806               	subwfb	(___lomod@dividend+4)^0,w,c
 12517  006532  500F               	movf	(___lomod@divisor+5)^0,w,c
 12518  006534  5807               	subwfb	(___lomod@dividend+5)^0,w,c
 12519  006536  5010               	movf	(___lomod@divisor+6)^0,w,c
 12520  006538  5808               	subwfb	(___lomod@dividend+6)^0,w,c
 12521  00653A  5011               	movf	(___lomod@divisor+7)^0,w,c
 12522  00653C  5809               	subwfb	(___lomod@dividend+7)^0,w,c
 12523  00653E  A0D8               	btfss	status,0,c
 12524  006540  D010               	goto	l14136
 12525  006542  500A               	movf	___lomod@divisor^0,w,c
 12526  006544  5E02               	subwf	___lomod@dividend^0,f,c
 12527  006546  500B               	movf	(___lomod@divisor+1)^0,w,c
 12528  006548  5A03               	subwfb	(___lomod@dividend+1)^0,f,c
 12529  00654A  500C               	movf	(___lomod@divisor+2)^0,w,c
 12530  00654C  5A04               	subwfb	(___lomod@dividend+2)^0,f,c
 12531  00654E  500D               	movf	(___lomod@divisor+3)^0,w,c
 12532  006550  5A05               	subwfb	(___lomod@dividend+3)^0,f,c
 12533  006552  500E               	movf	(___lomod@divisor+4)^0,w,c
 12534  006554  5A06               	subwfb	(___lomod@dividend+4)^0,f,c
 12535  006556  500F               	movf	(___lomod@divisor+5)^0,w,c
 12536  006558  5A07               	subwfb	(___lomod@dividend+5)^0,f,c
 12537  00655A  5010               	movf	(___lomod@divisor+6)^0,w,c
 12538  00655C  5A08               	subwfb	(___lomod@dividend+6)^0,f,c
 12539  00655E  5011               	movf	(___lomod@divisor+7)^0,w,c
 12540  006560  5A09               	subwfb	(___lomod@dividend+7)^0,f,c
 12541  006562                     l14136:
 12542  006562  90D8               	bcf	status,0,c
 12543  006564  3211               	rrcf	(___lomod@divisor+7)^0,f,c
 12544  006566  3210               	rrcf	(___lomod@divisor+6)^0,f,c
 12545  006568  320F               	rrcf	(___lomod@divisor+5)^0,f,c
 12546  00656A  320E               	rrcf	(___lomod@divisor+4)^0,f,c
 12547  00656C  320D               	rrcf	(___lomod@divisor+3)^0,f,c
 12548  00656E  320C               	rrcf	(___lomod@divisor+2)^0,f,c
 12549  006570  320B               	rrcf	(___lomod@divisor+1)^0,f,c
 12550  006572  320A               	rrcf	___lomod@divisor^0,f,c
 12551  006574  2E12               	decfsz	___lomod@counter^0,f,c
 12552  006576  D7D3               	goto	u13330
 12553  006578                     l3679:
 12554  006578  0060  F008  F002   	movff	___lomod@dividend,?___lomod
 12555  00657E  0060  F00C  F003   	movff	___lomod@dividend+1,?___lomod+1
 12556  006584  0060  F010  F004   	movff	___lomod@dividend+2,?___lomod+2
 12557  00658A  0060  F014  F005   	movff	___lomod@dividend+3,?___lomod+3
 12558  006590  0060  F018  F006   	movff	___lomod@dividend+4,?___lomod+4
 12559  006596  0060  F01C  F007   	movff	___lomod@dividend+5,?___lomod+5
 12560  00659C  0060  F020  F008   	movff	___lomod@dividend+6,?___lomod+6
 12561  0065A2  0060  F024  F009   	movff	___lomod@dividend+7,?___lomod+7
 12562  0065A8  0012               	return		;funcret
 12563  0065AA                     __end_of___lomod:
 12564                           	opt callstack 0
 12565                           
 12566 ;; *************** function ___lodiv *****************
 12567 ;; Defined at:
 12568 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
 12569 ;; Parameters:    Size  Location     Type
 12570 ;;  dividend        8    1[COMRAM] unsigned long long 
 12571 ;;  divisor         8    9[COMRAM] unsigned long long 
 12572 ;; Auto vars:     Size  Location     Type
 12573 ;;  quotient        8   17[COMRAM] unsigned long long 
 12574 ;;  counter         1   25[COMRAM] unsigned char 
 12575 ;; Return value:  Size  Location     Type
 12576 ;;                  8    1[COMRAM] unsigned long long 
 12577 ;; Registers used:
 12578 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12579 ;; Tracked objects:
 12580 ;;		On entry : 0/2
 12581 ;;		On exit  : 0/0
 12582 ;;		Unchanged: 0/0
 12583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12584 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12585 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12587 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12588 ;;Total ram usage:       25 bytes
 12589 ;; Hardware stack levels used:    1
 12590 ;; Hardware stack levels required when called:    7
 12591 ;; This function calls:
 12592 ;;		Nothing
 12593 ;; This function is called by:
 12594 ;;		_utoa
 12595 ;; This function uses a non-reentrant model
 12596 ;;
 12597                           
 12598                           	psect	text66
 12599  005B2A                     __ptext66:
 12600                           	opt callstack 0
 12601  005B2A                     ___lodiv:
 12602                           	opt callstack 16
 12603                           
 12604                           ;incstack = 0
 12605  005B2A  EE20  F012         	lfsr	2,___lodiv@quotient
 12606  005B2E  0E07               	movlw	7
 12607  005B30                     u13281:
 12608  005B30  6ADE               	clrf	postinc2,c
 12609  005B32  06E8               	decf	wreg,f,c
 12610  005B34  E2FD               	bc	u13281
 12611  005B36  500A               	movf	___lodiv@divisor^0,w,c
 12612  005B38  100B               	iorwf	(___lodiv@divisor+1)^0,w,c
 12613  005B3A  100C               	iorwf	(___lodiv@divisor+2)^0,w,c
 12614  005B3C  100D               	iorwf	(___lodiv@divisor+3)^0,w,c
 12615  005B3E  100E               	iorwf	(___lodiv@divisor+4)^0,w,c
 12616  005B40  100F               	iorwf	(___lodiv@divisor+5)^0,w,c
 12617  005B42  1010               	iorwf	(___lodiv@divisor+6)^0,w,c
 12618  005B44  1011               	iorwf	(___lodiv@divisor+7)^0,w,c
 12619  005B46  B4D8               	btfsc	status,2,c
 12620  005B48  D046               	goto	l3669
 12621  005B4A  0E01               	movlw	1
 12622  005B4C  6E1A               	movwf	___lodiv@counter^0,c
 12623  005B4E  D00A               	goto	l14110
 12624  005B50                     l14108:
 12625  005B50  90D8               	bcf	status,0,c
 12626  005B52  360A               	rlcf	___lodiv@divisor^0,f,c
 12627  005B54  360B               	rlcf	(___lodiv@divisor+1)^0,f,c
 12628  005B56  360C               	rlcf	(___lodiv@divisor+2)^0,f,c
 12629  005B58  360D               	rlcf	(___lodiv@divisor+3)^0,f,c
 12630  005B5A  360E               	rlcf	(___lodiv@divisor+4)^0,f,c
 12631  005B5C  360F               	rlcf	(___lodiv@divisor+5)^0,f,c
 12632  005B5E  3610               	rlcf	(___lodiv@divisor+6)^0,f,c
 12633  005B60  3611               	rlcf	(___lodiv@divisor+7)^0,f,c
 12634  005B62  2A1A               	incf	___lodiv@counter^0,f,c
 12635  005B64                     l14110:
 12636  005B64  AE11               	btfss	(___lodiv@divisor+7)^0,7,c
 12637  005B66  D7F4               	goto	l14108
 12638  005B68                     u13300:
 12639  005B68  90D8               	bcf	status,0,c
 12640  005B6A  3612               	rlcf	___lodiv@quotient^0,f,c
 12641  005B6C  3613               	rlcf	(___lodiv@quotient+1)^0,f,c
 12642  005B6E  3614               	rlcf	(___lodiv@quotient+2)^0,f,c
 12643  005B70  3615               	rlcf	(___lodiv@quotient+3)^0,f,c
 12644  005B72  3616               	rlcf	(___lodiv@quotient+4)^0,f,c
 12645  005B74  3617               	rlcf	(___lodiv@quotient+5)^0,f,c
 12646  005B76  3618               	rlcf	(___lodiv@quotient+6)^0,f,c
 12647  005B78  3619               	rlcf	(___lodiv@quotient+7)^0,f,c
 12648  005B7A  500A               	movf	___lodiv@divisor^0,w,c
 12649  005B7C  5C02               	subwf	___lodiv@dividend^0,w,c
 12650  005B7E  500B               	movf	(___lodiv@divisor+1)^0,w,c
 12651  005B80  5803               	subwfb	(___lodiv@dividend+1)^0,w,c
 12652  005B82  500C               	movf	(___lodiv@divisor+2)^0,w,c
 12653  005B84  5804               	subwfb	(___lodiv@dividend+2)^0,w,c
 12654  005B86  500D               	movf	(___lodiv@divisor+3)^0,w,c
 12655  005B88  5805               	subwfb	(___lodiv@dividend+3)^0,w,c
 12656  005B8A  500E               	movf	(___lodiv@divisor+4)^0,w,c
 12657  005B8C  5806               	subwfb	(___lodiv@dividend+4)^0,w,c
 12658  005B8E  500F               	movf	(___lodiv@divisor+5)^0,w,c
 12659  005B90  5807               	subwfb	(___lodiv@dividend+5)^0,w,c
 12660  005B92  5010               	movf	(___lodiv@divisor+6)^0,w,c
 12661  005B94  5808               	subwfb	(___lodiv@dividend+6)^0,w,c
 12662  005B96  5011               	movf	(___lodiv@divisor+7)^0,w,c
 12663  005B98  5809               	subwfb	(___lodiv@dividend+7)^0,w,c
 12664  005B9A  A0D8               	btfss	status,0,c
 12665  005B9C  D011               	goto	l14120
 12666  005B9E  500A               	movf	___lodiv@divisor^0,w,c
 12667  005BA0  5E02               	subwf	___lodiv@dividend^0,f,c
 12668  005BA2  500B               	movf	(___lodiv@divisor+1)^0,w,c
 12669  005BA4  5A03               	subwfb	(___lodiv@dividend+1)^0,f,c
 12670  005BA6  500C               	movf	(___lodiv@divisor+2)^0,w,c
 12671  005BA8  5A04               	subwfb	(___lodiv@dividend+2)^0,f,c
 12672  005BAA  500D               	movf	(___lodiv@divisor+3)^0,w,c
 12673  005BAC  5A05               	subwfb	(___lodiv@dividend+3)^0,f,c
 12674  005BAE  500E               	movf	(___lodiv@divisor+4)^0,w,c
 12675  005BB0  5A06               	subwfb	(___lodiv@dividend+4)^0,f,c
 12676  005BB2  500F               	movf	(___lodiv@divisor+5)^0,w,c
 12677  005BB4  5A07               	subwfb	(___lodiv@dividend+5)^0,f,c
 12678  005BB6  5010               	movf	(___lodiv@divisor+6)^0,w,c
 12679  005BB8  5A08               	subwfb	(___lodiv@dividend+6)^0,f,c
 12680  005BBA  5011               	movf	(___lodiv@divisor+7)^0,w,c
 12681  005BBC  5A09               	subwfb	(___lodiv@dividend+7)^0,f,c
 12682  005BBE  8012               	bsf	___lodiv@quotient^0,0,c
 12683  005BC0                     l14120:
 12684  005BC0  90D8               	bcf	status,0,c
 12685  005BC2  3211               	rrcf	(___lodiv@divisor+7)^0,f,c
 12686  005BC4  3210               	rrcf	(___lodiv@divisor+6)^0,f,c
 12687  005BC6  320F               	rrcf	(___lodiv@divisor+5)^0,f,c
 12688  005BC8  320E               	rrcf	(___lodiv@divisor+4)^0,f,c
 12689  005BCA  320D               	rrcf	(___lodiv@divisor+3)^0,f,c
 12690  005BCC  320C               	rrcf	(___lodiv@divisor+2)^0,f,c
 12691  005BCE  320B               	rrcf	(___lodiv@divisor+1)^0,f,c
 12692  005BD0  320A               	rrcf	___lodiv@divisor^0,f,c
 12693  005BD2  2E1A               	decfsz	___lodiv@counter^0,f,c
 12694  005BD4  D7C9               	goto	u13300
 12695  005BD6                     l3669:
 12696  005BD6  0060  F048  F002   	movff	___lodiv@quotient,?___lodiv
 12697  005BDC  0060  F04C  F003   	movff	___lodiv@quotient+1,?___lodiv+1
 12698  005BE2  0060  F050  F004   	movff	___lodiv@quotient+2,?___lodiv+2
 12699  005BE8  0060  F054  F005   	movff	___lodiv@quotient+3,?___lodiv+3
 12700  005BEE  0060  F058  F006   	movff	___lodiv@quotient+4,?___lodiv+4
 12701  005BF4  0060  F05C  F007   	movff	___lodiv@quotient+5,?___lodiv+5
 12702  005BFA  0060  F060  F008   	movff	___lodiv@quotient+6,?___lodiv+6
 12703  005C00  0060  F064  F009   	movff	___lodiv@quotient+7,?___lodiv+7
 12704  005C06  0012               	return		;funcret
 12705  005C08                     __end_of___lodiv:
 12706                           	opt callstack 0
 12707                           
 12708 ;; *************** function _dtoa *****************
 12709 ;; Defined at:
 12710 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 12711 ;; Parameters:    Size  Location     Type
 12712 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 12713 ;;		 -> NULL(0), 
 12714 ;;  d               8   32[COMRAM] long long 
 12715 ;; Auto vars:     Size  Location     Type
 12716 ;;  n               8   56[COMRAM] long long 
 12717 ;;  i               2   64[COMRAM] int 
 12718 ;;  s               2   54[COMRAM] int 
 12719 ;;  w               2   52[COMRAM] int 
 12720 ;;  p               2   50[COMRAM] int 
 12721 ;; Return value:  Size  Location     Type
 12722 ;;                  2   30[COMRAM] int 
 12723 ;; Registers used:
 12724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12725 ;; Tracked objects:
 12726 ;;		On entry : 3F/0
 12727 ;;		On exit  : 0/0
 12728 ;;		Unchanged: 0/0
 12729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12730 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12731 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12732 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12733 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12734 ;;Total ram usage:       36 bytes
 12735 ;; Hardware stack levels used:    1
 12736 ;; Hardware stack levels required when called:   12
 12737 ;; This function calls:
 12738 ;;		___aodiv
 12739 ;;		___aomod
 12740 ;;		_abs
 12741 ;;		_pad
 12742 ;; This function is called by:
 12743 ;;		_vfpfcnvrt
 12744 ;; This function uses a non-reentrant model
 12745 ;;
 12746                           
 12747                           	psect	text67
 12748  0022D4                     __ptext67:
 12749                           	opt callstack 0
 12750  0022D4                     _dtoa:
 12751                           	opt callstack 12
 12752                           
 12753                           ; BSR set to: 0
 12754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
 12755                           
 12756                           ;incstack = 0
 12757  0022D4  0060  F084  F039   	movff	dtoa@d,dtoa@n
 12758  0022DA  0060  F088  F03A   	movff	dtoa@d+1,dtoa@n+1
 12759  0022E0  0060  F08C  F03B   	movff	dtoa@d+2,dtoa@n+2
 12760  0022E6  0060  F090  F03C   	movff	dtoa@d+3,dtoa@n+3
 12761  0022EC  0060  F094  F03D   	movff	dtoa@d+4,dtoa@n+4
 12762  0022F2  0060  F098  F03E   	movff	dtoa@d+5,dtoa@n+5
 12763  0022F8  0060  F09C  F03F   	movff	dtoa@d+6,dtoa@n+6
 12764  0022FE  0060  F0A0  F040   	movff	dtoa@d+7,dtoa@n+7
 12765                           
 12766                           ; BSR set to: 0
 12767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 12768  002304  AE40               	btfss	(dtoa@n+7)^0,7,c
 12769  002306  D002               	goto	u13390
 12770  002308  0E01               	movlw	1
 12771  00230A  D001               	goto	u13400
 12772  00230C                     u13390:
 12773  00230C  0E00               	movlw	0
 12774  00230E                     u13400:
 12775  00230E  6E37               	movwf	dtoa@s^0,c
 12776  002310  6A38               	clrf	(dtoa@s+1)^0,c
 12777                           
 12778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 12779  002312  5037               	movf	dtoa@s^0,w,c
 12780  002314  1038               	iorwf	(dtoa@s+1)^0,w,c
 12781  002316  B4D8               	btfsc	status,2,c
 12782  002318  D010               	goto	l14182
 12783                           
 12784                           ; BSR set to: 0
 12785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 12786  00231A  1E40               	comf	(dtoa@n+7)^0,f,c
 12787  00231C  1E3F               	comf	(dtoa@n+6)^0,f,c
 12788  00231E  1E3E               	comf	(dtoa@n+5)^0,f,c
 12789  002320  1E3D               	comf	(dtoa@n+4)^0,f,c
 12790  002322  1E3C               	comf	(dtoa@n+3)^0,f,c
 12791  002324  1E3B               	comf	(dtoa@n+2)^0,f,c
 12792  002326  1E3A               	comf	(dtoa@n+1)^0,f,c
 12793  002328  6C39               	negf	dtoa@n^0,c
 12794  00232A  0E00               	movlw	0
 12795  00232C  223A               	addwfc	(dtoa@n+1)^0,f,c
 12796  00232E  223B               	addwfc	(dtoa@n+2)^0,f,c
 12797  002330  223C               	addwfc	(dtoa@n+3)^0,f,c
 12798  002332  223D               	addwfc	(dtoa@n+4)^0,f,c
 12799  002334  223E               	addwfc	(dtoa@n+5)^0,f,c
 12800  002336  223F               	addwfc	(dtoa@n+6)^0,f,c
 12801  002338  2240               	addwfc	(dtoa@n+7)^0,f,c
 12802  00233A                     l14182:
 12803                           
 12804                           ; BSR set to: 0
 12805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 12806  00233A  AFB8               	btfss	(_prec+1)& (0+255),7,b
 12807                           
 12808                           ; BSR set to: 0
 12809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 12810  00233C  93B9               	bcf	_flags& (0+255),1,b
 12811                           
 12812                           ; BSR set to: 0
 12813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 12814  00233E  BFB8               	btfsc	(_prec+1)& (0+255),7,b
 12815  002340  D005               	goto	u13430
 12816  002342  51B8               	movf	(_prec+1)& (0+255),w,b
 12817  002344  E108               	bnz	l3123
 12818  002346  05B7               	decf	_prec& (0+255),w,b
 12819  002348  B0D8               	btfsc	status,0,c
 12820  00234A  D005               	goto	l3123
 12821  00234C                     u13430:
 12822                           
 12823                           ; BSR set to: 0
 12824  00234C  0E00               	movlw	0
 12825  00234E  6E34               	movwf	(dtoa@p+1)^0,c
 12826  002350  0E01               	movlw	1
 12827  002352  6E33               	movwf	dtoa@p^0,c
 12828  002354  D006               	goto	l3125
 12829  002356                     l3123:
 12830                           
 12831                           ; BSR set to: 0
 12832  002356  0060  F2DC  F033   	movff	_prec,dtoa@p
 12833  00235C  0060  F2E0  F034   	movff	_prec+1,dtoa@p+1
 12834  002362                     l3125:
 12835                           
 12836                           ; BSR set to: 0
 12837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 12838  002362  0060  F2D4  F035   	movff	_width,dtoa@w
 12839  002368  0060  F2D8  F036   	movff	_width+1,dtoa@w+1
 12840                           
 12841                           ; BSR set to: 0
 12842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 12843  00236E  5037               	movf	dtoa@s^0,w,c
 12844  002370  1038               	iorwf	(dtoa@s+1)^0,w,c
 12845  002372  A4D8               	btfss	status,2,c
 12846  002374  D002               	goto	u13450
 12847                           
 12848                           ; BSR set to: 0
 12849  002376  A5B9               	btfss	_flags& (0+255),2,b
 12850  002378  D003               	goto	l14196
 12851  00237A                     u13450:
 12852                           
 12853                           ; BSR set to: 0
 12854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 12855  00237A  0635               	decf	dtoa@w^0,f,c
 12856  00237C  A0D8               	btfss	status,0,c
 12857  00237E  0636               	decf	(dtoa@w+1)^0,f,c
 12858  002380                     l14196:
 12859                           
 12860                           ; BSR set to: 0
 12861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 12862  002380  0E00               	movlw	0
 12863  002382  6E42               	movwf	(dtoa@i+1)^0,c
 12864  002384  0E1F               	movlw	31
 12865  002386  6E41               	movwf	dtoa@i^0,c
 12866                           
 12867                           ; BSR set to: 0
 12868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 12869  002388  0E00               	movlw	0
 12870  00238A  0102               	movlb	2	; () banked
 12871  00238C  6FDB               	movwf	(_dbuf+31)& (0+255),b
 12872                           
 12873                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12874  00238E  D09E               	goto	l14210
 12875  002390                     l14200:
 12876                           
 12877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 12878  002390  0641               	decf	dtoa@i^0,f,c
 12879  002392  A0D8               	btfss	status,0,c
 12880  002394  0642               	decf	(dtoa@i+1)^0,f,c
 12881                           
 12882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 12883  002396  0EBC               	movlw	low _dbuf
 12884  002398  2441               	addwf	dtoa@i^0,w,c
 12885  00239A  6ED9               	movwf	fsr2l,c
 12886  00239C  0E02               	movlw	high _dbuf
 12887  00239E  2042               	addwfc	(dtoa@i+1)^0,w,c
 12888  0023A0  6EDA               	movwf	fsr2h,c
 12889  0023A2  0060  F0E4  F002   	movff	dtoa@n,___aomod@dividend
 12890  0023A8  0060  F0E8  F003   	movff	dtoa@n+1,___aomod@dividend+1
 12891  0023AE  0060  F0EC  F004   	movff	dtoa@n+2,___aomod@dividend+2
 12892  0023B4  0060  F0F0  F005   	movff	dtoa@n+3,___aomod@dividend+3
 12893  0023BA  0060  F0F4  F006   	movff	dtoa@n+4,___aomod@dividend+4
 12894  0023C0  0060  F0F8  F007   	movff	dtoa@n+5,___aomod@dividend+5
 12895  0023C6  0060  F0FC  F008   	movff	dtoa@n+6,___aomod@dividend+6
 12896  0023CC  0060  F100  F009   	movff	dtoa@n+7,___aomod@dividend+7
 12897  0023D2  0E0A               	movlw	10
 12898  0023D4  6E0A               	movwf	___aomod@divisor^0,c
 12899  0023D6  0E00               	movlw	0
 12900  0023D8  6E0B               	movwf	(___aomod@divisor+1)^0,c
 12901  0023DA  0E00               	movlw	0
 12902  0023DC  6E0C               	movwf	(___aomod@divisor+2)^0,c
 12903  0023DE  0E00               	movlw	0
 12904  0023E0  6E0D               	movwf	(___aomod@divisor+3)^0,c
 12905  0023E2  0E00               	movlw	0
 12906  0023E4  6E0E               	movwf	(___aomod@divisor+4)^0,c
 12907  0023E6  0E00               	movlw	0
 12908  0023E8  6E0F               	movwf	(___aomod@divisor+5)^0,c
 12909  0023EA  0E00               	movlw	0
 12910  0023EC  6E10               	movwf	(___aomod@divisor+6)^0,c
 12911  0023EE  0E00               	movlw	0
 12912  0023F0  6E11               	movwf	(___aomod@divisor+7)^0,c
 12913  0023F2  EC5C  F023         	call	___aomod	;wreg free
 12914  0023F6  0060  F008  F029   	movff	?___aomod,??_dtoa
 12915  0023FC  0060  F00C  F02A   	movff	?___aomod+1,??_dtoa+1
 12916  002402  0060  F010  F02B   	movff	?___aomod+2,??_dtoa+2
 12917  002408  0060  F014  F02C   	movff	?___aomod+3,??_dtoa+3
 12918  00240E  0060  F018  F02D   	movff	?___aomod+4,??_dtoa+4
 12919  002414  0060  F01C  F02E   	movff	?___aomod+5,??_dtoa+5
 12920  00241A  0060  F020  F02F   	movff	?___aomod+6,??_dtoa+6
 12921  002420  0060  F024  F030   	movff	?___aomod+7,??_dtoa+7
 12922  002426  0060  F0A4  F014   	movff	??_dtoa,abs@a
 12923  00242C  0060  F0AC  F015   	movff	??_dtoa+2,abs@a+1
 12924  002432  EC36  F042         	call	_abs	;wreg free
 12925  002436  5014               	movf	?_abs^0,w,c
 12926  002438  0F30               	addlw	48
 12927  00243A  6EDF               	movwf	indf2,c
 12928                           
 12929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 12930  00243C  0633               	decf	dtoa@p^0,f,c
 12931  00243E  A0D8               	btfss	status,0,c
 12932  002440  0634               	decf	(dtoa@p+1)^0,f,c
 12933                           
 12934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 12935  002442  0635               	decf	dtoa@w^0,f,c
 12936  002444  A0D8               	btfss	status,0,c
 12937  002446  0636               	decf	(dtoa@w+1)^0,f,c
 12938                           
 12939                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 12940  002448  0060  F0E4  F002   	movff	dtoa@n,___aodiv@dividend
 12941  00244E  0060  F0E8  F003   	movff	dtoa@n+1,___aodiv@dividend+1
 12942  002454  0060  F0EC  F004   	movff	dtoa@n+2,___aodiv@dividend+2
 12943  00245A  0060  F0F0  F005   	movff	dtoa@n+3,___aodiv@dividend+3
 12944  002460  0060  F0F4  F006   	movff	dtoa@n+4,___aodiv@dividend+4
 12945  002466  0060  F0F8  F007   	movff	dtoa@n+5,___aodiv@dividend+5
 12946  00246C  0060  F0FC  F008   	movff	dtoa@n+6,___aodiv@dividend+6
 12947  002472  0060  F100  F009   	movff	dtoa@n+7,___aodiv@dividend+7
 12948  002478  0E0A               	movlw	10
 12949  00247A  6E0A               	movwf	___aodiv@divisor^0,c
 12950  00247C  0E00               	movlw	0
 12951  00247E  6E0B               	movwf	(___aodiv@divisor+1)^0,c
 12952  002480  0E00               	movlw	0
 12953  002482  6E0C               	movwf	(___aodiv@divisor+2)^0,c
 12954  002484  0E00               	movlw	0
 12955  002486  6E0D               	movwf	(___aodiv@divisor+3)^0,c
 12956  002488  0E00               	movlw	0
 12957  00248A  6E0E               	movwf	(___aodiv@divisor+4)^0,c
 12958  00248C  0E00               	movlw	0
 12959  00248E  6E0F               	movwf	(___aodiv@divisor+5)^0,c
 12960  002490  0E00               	movlw	0
 12961  002492  6E10               	movwf	(___aodiv@divisor+6)^0,c
 12962  002494  0E00               	movlw	0
 12963  002496  6E11               	movwf	(___aodiv@divisor+7)^0,c
 12964  002498  EC64  F021         	call	___aodiv	;wreg free
 12965  00249C  0060  F008  F039   	movff	?___aodiv,dtoa@n
 12966  0024A2  0060  F00C  F03A   	movff	?___aodiv+1,dtoa@n+1
 12967  0024A8  0060  F010  F03B   	movff	?___aodiv+2,dtoa@n+2
 12968  0024AE  0060  F014  F03C   	movff	?___aodiv+3,dtoa@n+3
 12969  0024B4  0060  F018  F03D   	movff	?___aodiv+4,dtoa@n+4
 12970  0024BA  0060  F01C  F03E   	movff	?___aodiv+5,dtoa@n+5
 12971  0024C0  0060  F020  F03F   	movff	?___aodiv+6,dtoa@n+6
 12972  0024C6  0060  F024  F040   	movff	?___aodiv+7,dtoa@n+7
 12973  0024CC                     l14210:
 12974                           
 12975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12976  0024CC  BE42               	btfsc	(dtoa@i+1)^0,7,c
 12977  0024CE  D020               	goto	u13500
 12978  0024D0  5042               	movf	(dtoa@i+1)^0,w,c
 12979  0024D2  E103               	bnz	u13460
 12980  0024D4  0441               	decf	dtoa@i^0,w,c
 12981  0024D6  A0D8               	btfss	status,0,c
 12982  0024D8  D01B               	goto	u13500
 12983  0024DA                     u13460:
 12984  0024DA  5039               	movf	dtoa@n^0,w,c
 12985  0024DC  103A               	iorwf	(dtoa@n+1)^0,w,c
 12986  0024DE  103B               	iorwf	(dtoa@n+2)^0,w,c
 12987  0024E0  103C               	iorwf	(dtoa@n+3)^0,w,c
 12988  0024E2  103D               	iorwf	(dtoa@n+4)^0,w,c
 12989  0024E4  103E               	iorwf	(dtoa@n+5)^0,w,c
 12990  0024E6  103F               	iorwf	(dtoa@n+6)^0,w,c
 12991  0024E8  1040               	iorwf	(dtoa@n+7)^0,w,c
 12992  0024EA  A4D8               	btfss	status,2,c
 12993  0024EC  D751               	goto	l14200
 12994  0024EE  BE34               	btfsc	(dtoa@p+1)^0,7,c
 12995  0024F0  D005               	goto	u13480
 12996  0024F2  5034               	movf	(dtoa@p+1)^0,w,c
 12997  0024F4  E102               	bnz	u13481
 12998  0024F6  0433               	decf	dtoa@p^0,w,c
 12999  0024F8  B0D8               	btfsc	status,0,c
 13000  0024FA                     u13481:
 13001  0024FA  D74A               	goto	l14200
 13002  0024FC                     u13480:
 13003  0024FC  BE36               	btfsc	(dtoa@w+1)^0,7,c
 13004  0024FE  D008               	goto	u13500
 13005  002500  5036               	movf	(dtoa@w+1)^0,w,c
 13006  002502  E103               	bnz	u13490
 13007  002504  0435               	decf	dtoa@w^0,w,c
 13008  002506  A0D8               	btfss	status,0,c
 13009  002508  D003               	goto	u13500
 13010  00250A                     u13490:
 13011  00250A  0100               	movlb	0	; () banked
 13012  00250C  B3B9               	btfsc	_flags& (0+255),1,b
 13013  00250E  D740               	goto	l14200
 13014  002510                     u13500:
 13015                           
 13016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13017  002510  5037               	movf	dtoa@s^0,w,c
 13018  002512  1038               	iorwf	(dtoa@s+1)^0,w,c
 13019  002514  A4D8               	btfss	status,2,c
 13020  002516  D003               	goto	u13520
 13021  002518  0100               	movlb	0	; () banked
 13022  00251A  A5B9               	btfss	_flags& (0+255),2,b
 13023  00251C  D018               	goto	l14234
 13024  00251E                     u13520:
 13025                           
 13026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13027  00251E  0641               	decf	dtoa@i^0,f,c
 13028  002520  A0D8               	btfss	status,0,c
 13029  002522  0642               	decf	(dtoa@i+1)^0,f,c
 13030                           
 13031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13032  002524  5037               	movf	dtoa@s^0,w,c
 13033  002526  1038               	iorwf	(dtoa@s+1)^0,w,c
 13034  002528  A4D8               	btfss	status,2,c
 13035  00252A  D004               	goto	l14230
 13036  00252C  0E00               	movlw	0
 13037  00252E  6E32               	movwf	(_dtoa$7370+1)^0,c
 13038  002530  0E2B               	movlw	43
 13039  002532  D003               	goto	L5
 13040  002534                     l14230:
 13041  002534  0E00               	movlw	0
 13042  002536  6E32               	movwf	(_dtoa$7370+1)^0,c
 13043  002538  0E2D               	movlw	45
 13044  00253A                     L5:
 13045  00253A  6E31               	movwf	_dtoa$7370^0,c
 13046  00253C  0EBC               	movlw	low _dbuf
 13047  00253E  2441               	addwf	dtoa@i^0,w,c
 13048  002540  6ED9               	movwf	fsr2l,c
 13049  002542  0E02               	movlw	high _dbuf
 13050  002544  2042               	addwfc	(dtoa@i+1)^0,w,c
 13051  002546  6EDA               	movwf	fsr2h,c
 13052  002548  0060  F0C7  FFDF   	movff	_dtoa$7370,indf2
 13053  00254E                     l14234:
 13054                           
 13055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13056  00254E  0060  F07C  F014   	movff	dtoa@fp,pad@fp
 13057  002554  0060  F080  F015   	movff	dtoa@fp+1,pad@fp+1
 13058  00255A  0EBC               	movlw	low _dbuf
 13059  00255C  2441               	addwf	dtoa@i^0,w,c
 13060  00255E  6E16               	movwf	pad@buf^0,c
 13061  002560  0E02               	movlw	high _dbuf
 13062  002562  2042               	addwfc	(dtoa@i+1)^0,w,c
 13063  002564  6E17               	movwf	(pad@buf+1)^0,c
 13064  002566  0060  F0D4  F018   	movff	dtoa@w,pad@p
 13065  00256C  0060  F0D8  F019   	movff	dtoa@w+1,pad@p+1
 13066  002572  EC32  F033         	call	_pad	;wreg free
 13067  002576  0060  F050  F01F   	movff	?_pad,?_dtoa
 13068  00257C  0060  F054  F020   	movff	?_pad+1,?_dtoa+1
 13069  002582  0012               	return		;funcret
 13070  002584                     __end_of_dtoa:
 13071                           	opt callstack 0
 13072                           
 13073 ;; *************** function _pad *****************
 13074 ;; Defined at:
 13075 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
 13076 ;; Parameters:    Size  Location     Type
 13077 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
 13078 ;;		 -> NULL(0), 
 13079 ;;  buf             2   21[COMRAM] PTR unsigned char 
 13080 ;;		 -> dbuf(32), 
 13081 ;;  p               2   23[COMRAM] int 
 13082 ;; Auto vars:     Size  Location     Type
 13083 ;;  w               2   28[COMRAM] int 
 13084 ;;  i               2   26[COMRAM] int 
 13085 ;; Return value:  Size  Location     Type
 13086 ;;                  2   19[COMRAM] int 
 13087 ;; Registers used:
 13088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13089 ;; Tracked objects:
 13090 ;;		On entry : 0/0
 13091 ;;		On exit  : 0/0
 13092 ;;		Unchanged: 0/0
 13093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13094 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13095 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13096 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13097 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13098 ;;Total ram usage:       11 bytes
 13099 ;; Hardware stack levels used:    1
 13100 ;; Hardware stack levels required when called:   11
 13101 ;; This function calls:
 13102 ;;		_fputc
 13103 ;;		_fputs
 13104 ;;		_strlen
 13105 ;; This function is called by:
 13106 ;;		_dtoa
 13107 ;;		_utoa
 13108 ;;		_xtoa
 13109 ;; This function uses a non-reentrant model
 13110 ;;
 13111                           
 13112                           	psect	text68
 13113  006664                     __ptext68:
 13114                           	opt callstack 0
 13115  006664                     _pad:
 13116                           	opt callstack 12
 13117                           
 13118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 13119                           
 13120                           ;incstack = 0
 13121  006664  0100               	movlb	0	; () banked
 13122  006666  A1B9               	btfss	_flags& (0+255),0,b
 13123  006668  D00E               	goto	l13972
 13124                           
 13125                           ; BSR set to: 0
 13126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 13127  00666A  0060  F058  F00D   	movff	pad@buf,fputs@s
 13128  006670  0060  F05C  F00E   	movff	pad@buf+1,fputs@s+1
 13129  006676  0060  F050  F00F   	movff	pad@fp,fputs@fp
 13130  00667C  0060  F054  F010   	movff	pad@fp+1,fputs@fp+1
 13131  006682  EC17  F042         	call	_fputs	;wreg free
 13132  006686                     l13972:
 13133                           
 13134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 13135  006686  BE19               	btfsc	(pad@p+1)^0,7,c
 13136  006688  D007               	goto	l13976
 13137  00668A  0060  F060  F01D   	movff	pad@p,pad@w
 13138  006690  0060  F064  F01E   	movff	pad@p+1,pad@w+1
 13139  006696  D004               	goto	l3112
 13140  006698                     l13976:
 13141  006698  0E00               	movlw	0
 13142  00669A  6E1E               	movwf	(pad@w+1)^0,c
 13143  00669C  0E00               	movlw	0
 13144  00669E  6E1D               	movwf	pad@w^0,c
 13145  0066A0                     l3112:
 13146                           
 13147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 13148  0066A0  0E00               	movlw	0
 13149  0066A2  6E1C               	movwf	(pad@i+1)^0,c
 13150  0066A4  0E00               	movlw	0
 13151  0066A6  6E1B               	movwf	pad@i^0,c
 13152                           
 13153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13154  0066A8  D00E               	goto	l13982
 13155  0066AA                     l13978:
 13156                           
 13157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 13158  0066AA  0E00               	movlw	0
 13159  0066AC  6E05               	movwf	(fputc@c+1)^0,c
 13160  0066AE  0E20               	movlw	32
 13161  0066B0  6E04               	movwf	fputc@c^0,c
 13162  0066B2  0060  F050  F006   	movff	pad@fp,fputc@fp
 13163  0066B8  0060  F054  F007   	movff	pad@fp+1,fputc@fp+1
 13164  0066BE  EC9C  F03B         	call	_fputc	;wreg free
 13165                           
 13166                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 13167  0066C2  4A1B               	infsnz	pad@i^0,f,c
 13168  0066C4  2A1C               	incf	(pad@i+1)^0,f,c
 13169  0066C6                     l13982:
 13170                           
 13171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 13172  0066C6  501D               	movf	pad@w^0,w,c
 13173  0066C8  5C1B               	subwf	pad@i^0,w,c
 13174  0066CA  501C               	movf	(pad@i+1)^0,w,c
 13175  0066CC  0A80               	xorlw	128
 13176  0066CE  6E1A               	movwf	??_pad^0,c
 13177  0066D0  501E               	movf	(pad@w+1)^0,w,c
 13178  0066D2  0A80               	xorlw	128
 13179  0066D4  581A               	subwfb	??_pad^0,w,c
 13180  0066D6  A0D8               	btfss	status,0,c
 13181  0066D8  D7E8               	goto	l13978
 13182                           
 13183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 13184  0066DA  0100               	movlb	0	; () banked
 13185  0066DC  B1B9               	btfsc	_flags& (0+255),0,b
 13186  0066DE  D00E               	goto	l13986
 13187                           
 13188                           ; BSR set to: 0
 13189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 13190  0066E0  0060  F058  F00D   	movff	pad@buf,fputs@s
 13191  0066E6  0060  F05C  F00E   	movff	pad@buf+1,fputs@s+1
 13192  0066EC  0060  F050  F00F   	movff	pad@fp,fputs@fp
 13193  0066F2  0060  F054  F010   	movff	pad@fp+1,fputs@fp+1
 13194  0066F8  EC17  F042         	call	_fputs	;wreg free
 13195  0066FC                     l13986:
 13196                           
 13197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 13198  0066FC  0060  F058  F002   	movff	pad@buf,strlen@s
 13199  006702  0060  F05C  F003   	movff	pad@buf+1,strlen@s+1
 13200  006708  EC7E  F03F         	call	_strlen	;wreg free
 13201  00670C  501D               	movf	pad@w^0,w,c
 13202  00670E  2402               	addwf	?_strlen^0,w,c
 13203  006710  6E14               	movwf	?_pad^0,c
 13204  006712  501E               	movf	(pad@w+1)^0,w,c
 13205  006714  2003               	addwfc	(?_strlen+1)^0,w,c
 13206  006716  6E15               	movwf	(?_pad+1)^0,c
 13207  006718  0012               	return		;funcret
 13208  00671A                     __end_of_pad:
 13209                           	opt callstack 0
 13210                           
 13211 ;; *************** function _strlen *****************
 13212 ;; Defined at:
 13213 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 13214 ;; Parameters:    Size  Location     Type
 13215 ;;  s               2    1[COMRAM] PTR const unsigned char 
 13216 ;;		 -> dbuf(32), STR_133(10), STR_131(10), STR_129(6), 
 13217 ;;		 -> STR_127(6), STR_125(7), STR_123(5), STR_121(7), 
 13218 ;;		 -> STR_119(7), STR_117(6), STR_115(9), STR_113(8), 
 13219 ;;		 -> STR_111(8), STR_109(7), STR_107(6), STR_105(3), 
 13220 ;;		 -> STR_103(9), STR_101(7), STR_99(7), STR_97(10), 
 13221 ;;		 -> STR_95(10), STR_93(15), STR_91(13), STR_89(9), 
 13222 ;;		 -> STR_87(7), STR_85(7), STR_83(10), STR_81(7), 
 13223 ;;		 -> STR_79(8), STR_77(11), STR_75(5), STR_73(5), 
 13224 ;;		 -> STR_71(7), STR_69(9), STR_67(7), STR_60(2), 
 13225 ;;		 -> STR_58(2), STR_57(2), STR_54(6), STR_52(6), 
 13226 ;;		 -> STR_50(5), STR_46(2), STR_41(2), STR_37(2), 
 13227 ;;		 -> STR_28(2), STR_25(2), STR_15(2), STR_11(2), 
 13228 ;;		 -> atCommand(80), NULL(0), STR_6(2), STR_2(2), 
 13229 ;;		 -> STR_1(2), 
 13230 ;; Auto vars:     Size  Location     Type
 13231 ;;  a               2    3[COMRAM] PTR const unsigned char 
 13232 ;;		 -> dbuf(32), STR_133(10), STR_131(10), STR_129(6), 
 13233 ;;		 -> STR_127(6), STR_125(7), STR_123(5), STR_121(7), 
 13234 ;;		 -> STR_119(7), STR_117(6), STR_115(9), STR_113(8), 
 13235 ;;		 -> STR_111(8), STR_109(7), STR_107(6), STR_105(3), 
 13236 ;;		 -> STR_103(9), STR_101(7), STR_99(7), STR_97(10), 
 13237 ;;		 -> STR_95(10), STR_93(15), STR_91(13), STR_89(9), 
 13238 ;;		 -> STR_87(7), STR_85(7), STR_83(10), STR_81(7), 
 13239 ;;		 -> STR_79(8), STR_77(11), STR_75(5), STR_73(5), 
 13240 ;;		 -> STR_71(7), STR_69(9), STR_67(7), STR_60(2), 
 13241 ;;		 -> STR_58(2), STR_57(2), STR_54(6), STR_52(6), 
 13242 ;;		 -> STR_50(5), STR_46(2), STR_41(2), STR_37(2), 
 13243 ;;		 -> STR_28(2), STR_25(2), STR_15(2), STR_11(2), 
 13244 ;;		 -> atCommand(80), NULL(0), STR_6(2), STR_2(2), 
 13245 ;;		 -> STR_1(2), 
 13246 ;; Return value:  Size  Location     Type
 13247 ;;                  2    1[COMRAM] unsigned int 
 13248 ;; Registers used:
 13249 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 13250 ;; Tracked objects:
 13251 ;;		On entry : 0/0
 13252 ;;		On exit  : 0/0
 13253 ;;		Unchanged: 0/0
 13254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13255 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13256 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13258 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13259 ;;Total ram usage:        4 bytes
 13260 ;; Hardware stack levels used:    1
 13261 ;; Hardware stack levels required when called:    7
 13262 ;; This function calls:
 13263 ;;		Nothing
 13264 ;; This function is called by:
 13265 ;;		_cmdSend
 13266 ;;		_cmdBcast
 13267 ;;		_cmdSetAES
 13268 ;;		_pad
 13269 ;;		_strstr
 13270 ;; This function uses a non-reentrant model
 13271 ;;
 13272                           
 13273                           	psect	text69
 13274  007EFC                     __ptext69:
 13275                           	opt callstack 0
 13276  007EFC                     _strlen:
 13277                           	opt callstack 20
 13278                           
 13279                           ;incstack = 0
 13280  007EFC  0060  F008  F004   	movff	strlen@s,strlen@a
 13281  007F02  0060  F00C  F005   	movff	strlen@s+1,strlen@a+1
 13282  007F08  D002               	goto	l13930
 13283  007F0A                     l13928:
 13284  007F0A  4A02               	infsnz	strlen@s^0,f,c
 13285  007F0C  2A03               	incf	(strlen@s+1)^0,f,c
 13286  007F0E                     l13930:
 13287  007F0E  0060  F00B  FFF6   	movff	strlen@s,tblptrl
 13288  007F14  0060  F00F  FFF7   	movff	strlen@s+1,tblptrh
 13289  007F1A  0E00               	movlw	low (__mediumconst shr (0+16))
 13290  007F1C  6EF8               	movwf	tblptru,c
 13291  007F1E  0E0F               	movlw	(high __ramtop+-1)
 13292  007F20  64F7               	cpfsgt	tblptrh,c
 13293  007F22  D003               	bra	u12937
 13294  007F24  0008               	tblrd		*
 13295  007F26  50F5               	movf	tablat,w,c
 13296  007F28  D007               	bra	u12930
 13297  007F2A                     u12937:
 13298  007F2A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13299  007F30  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13300  007F36  50EF               	movf	indf0,w,c
 13301  007F38                     u12930:
 13302  007F38  0900               	iorlw	0
 13303  007F3A  A4D8               	btfss	status,2,c
 13304  007F3C  D7E6               	goto	l13928
 13305  007F3E  5004               	movf	strlen@a^0,w,c
 13306  007F40  5C02               	subwf	strlen@s^0,w,c
 13307  007F42  6E02               	movwf	?_strlen^0,c
 13308  007F44  5005               	movf	(strlen@a+1)^0,w,c
 13309  007F46  5803               	subwfb	(strlen@s+1)^0,w,c
 13310  007F48  6E03               	movwf	(?_strlen+1)^0,c
 13311  007F4A  0012               	return		;funcret
 13312  007F4C                     __end_of_strlen:
 13313                           	opt callstack 0
 13314                           
 13315 ;; *************** function _fputs *****************
 13316 ;; Defined at:
 13317 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
 13318 ;; Parameters:    Size  Location     Type
 13319 ;;  s               2   12[COMRAM] PTR const unsigned char 
 13320 ;;		 -> dbuf(32), 
 13321 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
 13322 ;;		 -> NULL(0), 
 13323 ;; Auto vars:     Size  Location     Type
 13324 ;;  i               2   17[COMRAM] int 
 13325 ;;  c               1   16[COMRAM] unsigned char 
 13326 ;; Return value:  Size  Location     Type
 13327 ;;                  2   12[COMRAM] int 
 13328 ;; Registers used:
 13329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13330 ;; Tracked objects:
 13331 ;;		On entry : 3F/0
 13332 ;;		On exit  : 0/0
 13333 ;;		Unchanged: 0/0
 13334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13335 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13336 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13338 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13339 ;;Total ram usage:        7 bytes
 13340 ;; Hardware stack levels used:    1
 13341 ;; Hardware stack levels required when called:   10
 13342 ;; This function calls:
 13343 ;;		_fputc
 13344 ;; This function is called by:
 13345 ;;		_pad
 13346 ;; This function uses a non-reentrant model
 13347 ;;
 13348                           
 13349                           	psect	text70
 13350  00842E                     __ptext70:
 13351                           	opt callstack 0
 13352  00842E                     _fputs:
 13353                           	opt callstack 12
 13354                           
 13355                           ; BSR set to: 0
 13356                           
 13357                           ;incstack = 0
 13358  00842E  0E00               	movlw	0
 13359  008430  6E13               	movwf	(fputs@i+1)^0,c
 13360  008432  0E00               	movlw	0
 13361  008434  6E12               	movwf	fputs@i^0,c
 13362  008436  D00E               	goto	l13946
 13363  008438                     l13942:
 13364  008438  0060  F044  F004   	movff	fputs@c,fputc@c
 13365  00843E  6A05               	clrf	(fputc@c+1)^0,c
 13366  008440  0060  F03C  F006   	movff	fputs@fp,fputc@fp
 13367  008446  0060  F040  F007   	movff	fputs@fp+1,fputc@fp+1
 13368  00844C  EC9C  F03B         	call	_fputc	;wreg free
 13369  008450  4A12               	infsnz	fputs@i^0,f,c
 13370  008452  2A13               	incf	(fputs@i+1)^0,f,c
 13371  008454                     l13946:
 13372  008454  5012               	movf	fputs@i^0,w,c
 13373  008456  240D               	addwf	fputs@s^0,w,c
 13374  008458  6ED9               	movwf	fsr2l,c
 13375  00845A  5013               	movf	(fputs@i+1)^0,w,c
 13376  00845C  200E               	addwfc	(fputs@s+1)^0,w,c
 13377  00845E  6EDA               	movwf	fsr2h,c
 13378  008460  50DF               	movf	indf2,w,c
 13379  008462  6E11               	movwf	fputs@c^0,c
 13380  008464  5011               	movf	fputs@c^0,w,c
 13381  008466  B4D8               	btfsc	status,2,c
 13382  008468  0012               	return	
 13383  00846A  D7E6               	goto	l13942
 13384  00846C                     __end_of_fputs:
 13385                           	opt callstack 0
 13386                           
 13387 ;; *************** function _fputc *****************
 13388 ;; Defined at:
 13389 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
 13390 ;; Parameters:    Size  Location     Type
 13391 ;;  c               2    3[COMRAM] int 
 13392 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
 13393 ;;		 -> NULL(0), 
 13394 ;; Auto vars:     Size  Location     Type
 13395 ;;		None
 13396 ;; Return value:  Size  Location     Type
 13397 ;;                  2    3[COMRAM] int 
 13398 ;; Registers used:
 13399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13400 ;; Tracked objects:
 13401 ;;		On entry : 0/0
 13402 ;;		On exit  : 0/0
 13403 ;;		Unchanged: 0/0
 13404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13405 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13407 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13408 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13409 ;;Total ram usage:        9 bytes
 13410 ;; Hardware stack levels used:    1
 13411 ;; Hardware stack levels required when called:    9
 13412 ;; This function calls:
 13413 ;;		_putch
 13414 ;; This function is called by:
 13415 ;;		_pad
 13416 ;;		_vfpfcnvrt
 13417 ;;		_fputs
 13418 ;; This function uses a non-reentrant model
 13419 ;;
 13420                           
 13421                           	psect	text71
 13422  007738                     __ptext71:
 13423                           	opt callstack 0
 13424  007738                     _fputc:
 13425                           	opt callstack 12
 13426                           
 13427                           ;incstack = 0
 13428  007738  5006               	movf	fputc@fp^0,w,c
 13429  00773A  1007               	iorwf	(fputc@fp+1)^0,w,c
 13430  00773C  B4D8               	btfsc	status,2,c
 13431  00773E  D004               	goto	u12900
 13432  007740  5006               	movf	fputc@fp^0,w,c
 13433  007742  1007               	iorwf	(fputc@fp+1)^0,w,c
 13434  007744  A4D8               	btfss	status,2,c
 13435  007746  D004               	goto	l13918
 13436  007748                     u12900:
 13437  007748  5004               	movf	fputc@c^0,w,c
 13438  00774A  EC2F  F048         	call	_putch
 13439  00774E  0012               	return	
 13440  007750                     l13918:
 13441  007750  EE20 F004          	lfsr	2,4
 13442  007754  5006               	movf	fputc@fp^0,w,c
 13443  007756  26D9               	addwf	fsr2l,f,c
 13444  007758  5007               	movf	(fputc@fp+1)^0,w,c
 13445  00775A  22DA               	addwfc	fsr2h,f,c
 13446  00775C  50DE               	movf	postinc2,w,c
 13447  00775E  10DE               	iorwf	postinc2,w,c
 13448  007760  B4D8               	btfsc	status,2,c
 13449  007762  D016               	goto	u12920
 13450  007764  EE20 F004          	lfsr	2,4
 13451  007768  5006               	movf	fputc@fp^0,w,c
 13452  00776A  26D9               	addwf	fsr2l,f,c
 13453  00776C  5007               	movf	(fputc@fp+1)^0,w,c
 13454  00776E  22DA               	addwfc	fsr2h,f,c
 13455  007770  EE10 F002          	lfsr	1,2
 13456  007774  5006               	movf	fputc@fp^0,w,c
 13457  007776  26E1               	addwf	fsr1l,f,c
 13458  007778  5007               	movf	(fputc@fp+1)^0,w,c
 13459  00777A  22E2               	addwfc	fsr1h,f,c
 13460  00777C  50DE               	movf	postinc2,w,c
 13461  00777E  5CE6               	subwf	postinc1,w,c
 13462  007780  50E6               	movf	postinc1,w,c
 13463  007782  0A80               	xorlw	128
 13464  007784  6E0C               	movwf	(??_fputc+4)^0,c
 13465  007786  50DE               	movf	postinc2,w,c
 13466  007788  0A80               	xorlw	128
 13467  00778A  580C               	subwfb	(??_fputc+4)^0,w,c
 13468  00778C  B0D8               	btfsc	status,0,c
 13469  00778E  0012               	return	
 13470  007790                     u12920:
 13471  007790  EE20 F002          	lfsr	2,2
 13472  007794  5006               	movf	fputc@fp^0,w,c
 13473  007796  26D9               	addwf	fsr2l,f,c
 13474  007798  5007               	movf	(fputc@fp+1)^0,w,c
 13475  00779A  22DA               	addwfc	fsr2h,f,c
 13476  00779C  2ADE               	incf	postinc2,f,c
 13477  00779E  0E00               	movlw	0
 13478  0077A0  22DD               	addwfc	postdec2,f,c
 13479  0077A2  0012               	return		;funcret
 13480  0077A4                     __end_of_fputc:
 13481                           	opt callstack 0
 13482                           
 13483 ;; *************** function _putch *****************
 13484 ;; Defined at:
 13485 ;;		line 242 in file "mcc_generated_files/uart1.c"
 13486 ;; Parameters:    Size  Location     Type
 13487 ;;  txData          1    wreg     unsigned char 
 13488 ;; Auto vars:     Size  Location     Type
 13489 ;;  txData          1    2[COMRAM] unsigned char 
 13490 ;; Return value:  Size  Location     Type
 13491 ;;                  1    wreg      void 
 13492 ;; Registers used:
 13493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13494 ;; Tracked objects:
 13495 ;;		On entry : 0/0
 13496 ;;		On exit  : 3F/39
 13497 ;;		Unchanged: 0/0
 13498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13502 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13503 ;;Total ram usage:        1 bytes
 13504 ;; Hardware stack levels used:    1
 13505 ;; Hardware stack levels required when called:    8
 13506 ;; This function calls:
 13507 ;;		_UART1_Write
 13508 ;; This function is called by:
 13509 ;;		_cmdRecv
 13510 ;;		_fputc
 13511 ;; This function uses a non-reentrant model
 13512 ;;
 13513                           
 13514                           	psect	text72
 13515  00905E                     __ptext72:
 13516                           	opt callstack 0
 13517  00905E                     _putch:
 13518                           	opt callstack 12
 13519                           
 13520                           ;incstack = 0
 13521                           ;putch@txData stored from wreg
 13522  00905E  6E03               	movwf	putch@txData^0,c
 13523                           
 13524                           ;mcc_generated_files/uart1.c: 242: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          243: {;mcc_generated_files/uart1.c: 244:     UART1_Write(txData);
 13525  009060  5003               	movf	putch@txData^0,w,c
 13526  009062  EC35  F041         	call	_UART1_Write
 13527                           
 13528                           ; BSR set to: 57
 13529  009066  0012               	return		;funcret
 13530  009068                     __end_of_putch:
 13531                           	opt callstack 0
 13532                           
 13533 ;; *************** function _UART1_Write *****************
 13534 ;; Defined at:
 13535 ;;		line 210 in file "mcc_generated_files/uart1.c"
 13536 ;; Parameters:    Size  Location     Type
 13537 ;;  txData          1    wreg     unsigned char 
 13538 ;; Auto vars:     Size  Location     Type
 13539 ;;  txData          1    1[COMRAM] unsigned char 
 13540 ;; Return value:  Size  Location     Type
 13541 ;;                  1    wreg      void 
 13542 ;; Registers used:
 13543 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13544 ;; Tracked objects:
 13545 ;;		On entry : 0/0
 13546 ;;		On exit  : 3F/39
 13547 ;;		Unchanged: 0/0
 13548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13552 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13553 ;;Total ram usage:        1 bytes
 13554 ;; Hardware stack levels used:    1
 13555 ;; Hardware stack levels required when called:    7
 13556 ;; This function calls:
 13557 ;;		Nothing
 13558 ;; This function is called by:
 13559 ;;		_putch
 13560 ;; This function uses a non-reentrant model
 13561 ;;
 13562                           
 13563                           	psect	text73
 13564  00826A                     __ptext73:
 13565                           	opt callstack 0
 13566  00826A                     _UART1_Write:
 13567                           	opt callstack 12
 13568                           
 13569                           ; BSR set to: 57
 13570                           ;incstack = 0
 13571                           ;UART1_Write@txData stored from wreg
 13572  00826A  6E02               	movwf	UART1_Write@txData^0,c
 13573  00826C                     
 13574                           ;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 13575                           
 13576                           ;mcc_generated_files/uart1.c: 210: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 211: {;mcc_generated_files/uart1.c: 212:     while(0 == uart1TxBufferRemaining)
 13577  00826C  0100               	movlb	0	; () banked
 13578  00826E  51FF               	movf	_uart1TxBufferRemaining& (0+255),w,b	;volatile
 13579  008270  B4D8               	btfsc	status,2,c
 13580  008272  D7FC               	goto	l13892
 13581                           
 13582                           ; BSR set to: 0
 13583                           ;mcc_generated_files/uart1.c: 216:     if(0 == PIE3bits.U1TXIE)
 13584  008274  0139               	movlb	57	; () banked
 13585  008276  B993               	btfsc	147,4,b	;volatile
 13586  008278  D004               	goto	l1448
 13587                           
 13588                           ; BSR set to: 57
 13589                           ;mcc_generated_files/uart1.c: 217:     {;mcc_generated_files/uart1.c: 222:         U1TXB
      +                           = txData;
 13590  00827A  0060  F00B  FDEA   	movff	UART1_Write@txData,15850	;volatile
 13591                           
 13592                           ;mcc_generated_files/uart1.c: 223:     }
 13593  008280  D012               	goto	l13908
 13594  008282                     l1448:
 13595                           
 13596                           ; BSR set to: 57
 13597                           ;mcc_generated_files/uart1.c: 225:     {;mcc_generated_files/uart1.c: 226:         PIE3b
      +                          its.U1TXIE = 0;
 13598  008282  9993               	bcf	147,4,b	;volatile
 13599                           
 13600                           ; BSR set to: 57
 13601                           ;mcc_generated_files/uart1.c: 227:         uart1TxBuffer[uart1TxHead++] = txData;
 13602  008284  0E00               	movlw	low _uart1TxBuffer
 13603  008286  0100               	movlb	0	; () banked
 13604  008288  25C8               	addwf	_uart1TxHead& (0+255),w,b	;volatile
 13605  00828A  6ED9               	movwf	fsr2l,c
 13606  00828C  6ADA               	clrf	fsr2h,c
 13607  00828E  0E03               	movlw	high _uart1TxBuffer
 13608  008290  22DA               	addwfc	fsr2h,f,c
 13609  008292  0060  F00B  FFDF   	movff	UART1_Write@txData,indf2
 13610                           
 13611                           ; BSR set to: 0
 13612  008298  2BC8               	incf	_uart1TxHead& (0+255),f,b	;volatile
 13613                           
 13614                           ; BSR set to: 0
 13615                           ;mcc_generated_files/uart1.c: 228:         if(sizeof(uart1TxBuffer) <= uart1TxHead)
 13616  00829A  0E3F               	movlw	63
 13617  00829C  65C8               	cpfsgt	_uart1TxHead& (0+255),b
 13618  00829E  D002               	goto	l13906
 13619                           
 13620                           ; BSR set to: 0
 13621                           ;mcc_generated_files/uart1.c: 229:         {;mcc_generated_files/uart1.c: 230:          
      +                             uart1TxHead = 0;
 13622  0082A0  0E00               	movlw	0
 13623  0082A2  6FC8               	movwf	_uart1TxHead& (0+255),b	;volatile
 13624  0082A4                     l13906:
 13625                           
 13626                           ; BSR set to: 0
 13627                           ;mcc_generated_files/uart1.c: 232:         uart1TxBufferRemaining--;
 13628  0082A4  07FF               	decf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 13629  0082A6                     l13908:
 13630                           
 13631                           ;mcc_generated_files/uart1.c: 234:     PIE3bits.U1TXIE = 1;
 13632  0082A6  0139               	movlb	57	; () banked
 13633  0082A8  8993               	bsf	147,4,b	;volatile
 13634                           
 13635                           ; BSR set to: 57
 13636  0082AA  0012               	return		;funcret
 13637  0082AC                     __end_of_UART1_Write:
 13638                           	opt callstack 0
 13639                           
 13640 ;; *************** function _abs *****************
 13641 ;; Defined at:
 13642 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
 13643 ;; Parameters:    Size  Location     Type
 13644 ;;  a               2   19[COMRAM] int 
 13645 ;; Auto vars:     Size  Location     Type
 13646 ;;		None
 13647 ;; Return value:  Size  Location     Type
 13648 ;;                  2   19[COMRAM] int 
 13649 ;; Registers used:
 13650 ;;		wreg, status,2, status,0
 13651 ;; Tracked objects:
 13652 ;;		On entry : 0/2
 13653 ;;		On exit  : 0/0
 13654 ;;		Unchanged: 0/0
 13655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13658 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13659 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13660 ;;Total ram usage:        4 bytes
 13661 ;; Hardware stack levels used:    1
 13662 ;; Hardware stack levels required when called:    7
 13663 ;; This function calls:
 13664 ;;		Nothing
 13665 ;; This function is called by:
 13666 ;;		_dtoa
 13667 ;; This function uses a non-reentrant model
 13668 ;;
 13669                           
 13670                           	psect	text74
 13671  00846C                     __ptext74:
 13672                           	opt callstack 0
 13673  00846C                     _abs:
 13674                           	opt callstack 16
 13675                           
 13676                           ; BSR set to: 57
 13677                           ;incstack = 0
 13678  00846C  BE15               	btfsc	(abs@a+1)^0,7,c
 13679  00846E  D005               	goto	u13050
 13680  008470  5015               	movf	(abs@a+1)^0,w,c
 13681  008472  E114               	bnz	l3906
 13682  008474  0414               	decf	abs@a^0,w,c
 13683  008476  B0D8               	btfsc	status,0,c
 13684  008478  D011               	goto	l3906
 13685  00847A                     u13050:
 13686  00847A  0060  F050  F016   	movff	abs@a,??_abs
 13687  008480  0060  F054  F017   	movff	abs@a+1,??_abs+1
 13688  008486  1E16               	comf	??_abs^0,f,c
 13689  008488  1E17               	comf	(??_abs+1)^0,f,c
 13690  00848A  4A16               	infsnz	??_abs^0,f,c
 13691  00848C  2A17               	incf	(??_abs+1)^0,f,c
 13692  00848E  0060  F058  F014   	movff	??_abs,?_abs
 13693  008494  0060  F05C  F015   	movff	??_abs+1,?_abs+1
 13694  00849A  0012               	return	
 13695  00849C                     l3906:
 13696  00849C  0060  F050  F014   	movff	abs@a,?_abs
 13697  0084A2  0060  F054  F015   	movff	abs@a+1,?_abs+1
 13698  0084A8  0012               	return		;funcret
 13699  0084AA                     __end_of_abs:
 13700                           	opt callstack 0
 13701                           
 13702 ;; *************** function ___aomod *****************
 13703 ;; Defined at:
 13704 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
 13705 ;; Parameters:    Size  Location     Type
 13706 ;;  dividend        8    1[COMRAM] long long 
 13707 ;;  divisor         8    9[COMRAM] long long 
 13708 ;; Auto vars:     Size  Location     Type
 13709 ;;  sign            1   18[COMRAM] unsigned char 
 13710 ;;  counter         1   17[COMRAM] unsigned char 
 13711 ;; Return value:  Size  Location     Type
 13712 ;;                  8    1[COMRAM] long long 
 13713 ;; Registers used:
 13714 ;;		wreg, status,2, status,0
 13715 ;; Tracked objects:
 13716 ;;		On entry : 0/2
 13717 ;;		On exit  : 0/0
 13718 ;;		Unchanged: 0/0
 13719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13720 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13721 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13723 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13724 ;;Total ram usage:       18 bytes
 13725 ;; Hardware stack levels used:    1
 13726 ;; Hardware stack levels required when called:    7
 13727 ;; This function calls:
 13728 ;;		Nothing
 13729 ;; This function is called by:
 13730 ;;		_dtoa
 13731 ;; This function uses a non-reentrant model
 13732 ;;
 13733                           
 13734                           	psect	text75
 13735  0046B8                     __ptext75:
 13736                           	opt callstack 0
 13737  0046B8                     ___aomod:
 13738                           	opt callstack 16
 13739                           
 13740                           ;incstack = 0
 13741  0046B8  0E00               	movlw	0
 13742  0046BA  6E13               	movwf	___aomod@sign^0,c
 13743  0046BC  AE09               	btfss	(___aomod@dividend+7)^0,7,c
 13744  0046BE  D012               	goto	l14074
 13745  0046C0  1E09               	comf	(___aomod@dividend+7)^0,f,c
 13746  0046C2  1E08               	comf	(___aomod@dividend+6)^0,f,c
 13747  0046C4  1E07               	comf	(___aomod@dividend+5)^0,f,c
 13748  0046C6  1E06               	comf	(___aomod@dividend+4)^0,f,c
 13749  0046C8  1E05               	comf	(___aomod@dividend+3)^0,f,c
 13750  0046CA  1E04               	comf	(___aomod@dividend+2)^0,f,c
 13751  0046CC  1E03               	comf	(___aomod@dividend+1)^0,f,c
 13752  0046CE  6C02               	negf	___aomod@dividend^0,c
 13753  0046D0  0E00               	movlw	0
 13754  0046D2  2203               	addwfc	(___aomod@dividend+1)^0,f,c
 13755  0046D4  2204               	addwfc	(___aomod@dividend+2)^0,f,c
 13756  0046D6  2205               	addwfc	(___aomod@dividend+3)^0,f,c
 13757  0046D8  2206               	addwfc	(___aomod@dividend+4)^0,f,c
 13758  0046DA  2207               	addwfc	(___aomod@dividend+5)^0,f,c
 13759  0046DC  2208               	addwfc	(___aomod@dividend+6)^0,f,c
 13760  0046DE  2209               	addwfc	(___aomod@dividend+7)^0,f,c
 13761  0046E0  0E01               	movlw	1
 13762  0046E2  6E13               	movwf	___aomod@sign^0,c
 13763  0046E4                     l14074:
 13764  0046E4  AE11               	btfss	(___aomod@divisor+7)^0,7,c
 13765  0046E6  D010               	goto	l14078
 13766  0046E8  1E11               	comf	(___aomod@divisor+7)^0,f,c
 13767  0046EA  1E10               	comf	(___aomod@divisor+6)^0,f,c
 13768  0046EC  1E0F               	comf	(___aomod@divisor+5)^0,f,c
 13769  0046EE  1E0E               	comf	(___aomod@divisor+4)^0,f,c
 13770  0046F0  1E0D               	comf	(___aomod@divisor+3)^0,f,c
 13771  0046F2  1E0C               	comf	(___aomod@divisor+2)^0,f,c
 13772  0046F4  1E0B               	comf	(___aomod@divisor+1)^0,f,c
 13773  0046F6  6C0A               	negf	___aomod@divisor^0,c
 13774  0046F8  0E00               	movlw	0
 13775  0046FA  220B               	addwfc	(___aomod@divisor+1)^0,f,c
 13776  0046FC  220C               	addwfc	(___aomod@divisor+2)^0,f,c
 13777  0046FE  220D               	addwfc	(___aomod@divisor+3)^0,f,c
 13778  004700  220E               	addwfc	(___aomod@divisor+4)^0,f,c
 13779  004702  220F               	addwfc	(___aomod@divisor+5)^0,f,c
 13780  004704  2210               	addwfc	(___aomod@divisor+6)^0,f,c
 13781  004706  2211               	addwfc	(___aomod@divisor+7)^0,f,c
 13782  004708                     l14078:
 13783  004708  500A               	movf	___aomod@divisor^0,w,c
 13784  00470A  100B               	iorwf	(___aomod@divisor+1)^0,w,c
 13785  00470C  100C               	iorwf	(___aomod@divisor+2)^0,w,c
 13786  00470E  100D               	iorwf	(___aomod@divisor+3)^0,w,c
 13787  004710  100E               	iorwf	(___aomod@divisor+4)^0,w,c
 13788  004712  100F               	iorwf	(___aomod@divisor+5)^0,w,c
 13789  004714  1010               	iorwf	(___aomod@divisor+6)^0,w,c
 13790  004716  1011               	iorwf	(___aomod@divisor+7)^0,w,c
 13791  004718  B4D8               	btfsc	status,2,c
 13792  00471A  D03C               	goto	l14094
 13793  00471C  0E01               	movlw	1
 13794  00471E  6E12               	movwf	___aomod@counter^0,c
 13795  004720  D00A               	goto	l14084
 13796  004722                     l14082:
 13797  004722  90D8               	bcf	status,0,c
 13798  004724  360A               	rlcf	___aomod@divisor^0,f,c
 13799  004726  360B               	rlcf	(___aomod@divisor+1)^0,f,c
 13800  004728  360C               	rlcf	(___aomod@divisor+2)^0,f,c
 13801  00472A  360D               	rlcf	(___aomod@divisor+3)^0,f,c
 13802  00472C  360E               	rlcf	(___aomod@divisor+4)^0,f,c
 13803  00472E  360F               	rlcf	(___aomod@divisor+5)^0,f,c
 13804  004730  3610               	rlcf	(___aomod@divisor+6)^0,f,c
 13805  004732  3611               	rlcf	(___aomod@divisor+7)^0,f,c
 13806  004734  2A12               	incf	___aomod@counter^0,f,c
 13807  004736                     l14084:
 13808  004736  AE11               	btfss	(___aomod@divisor+7)^0,7,c
 13809  004738  D7F4               	goto	l14082
 13810  00473A                     u13250:
 13811  00473A  500A               	movf	___aomod@divisor^0,w,c
 13812  00473C  5C02               	subwf	___aomod@dividend^0,w,c
 13813  00473E  500B               	movf	(___aomod@divisor+1)^0,w,c
 13814  004740  5803               	subwfb	(___aomod@dividend+1)^0,w,c
 13815  004742  500C               	movf	(___aomod@divisor+2)^0,w,c
 13816  004744  5804               	subwfb	(___aomod@dividend+2)^0,w,c
 13817  004746  500D               	movf	(___aomod@divisor+3)^0,w,c
 13818  004748  5805               	subwfb	(___aomod@dividend+3)^0,w,c
 13819  00474A  500E               	movf	(___aomod@divisor+4)^0,w,c
 13820  00474C  5806               	subwfb	(___aomod@dividend+4)^0,w,c
 13821  00474E  500F               	movf	(___aomod@divisor+5)^0,w,c
 13822  004750  5807               	subwfb	(___aomod@dividend+5)^0,w,c
 13823  004752  5010               	movf	(___aomod@divisor+6)^0,w,c
 13824  004754  5808               	subwfb	(___aomod@dividend+6)^0,w,c
 13825  004756  5011               	movf	(___aomod@divisor+7)^0,w,c
 13826  004758  5809               	subwfb	(___aomod@dividend+7)^0,w,c
 13827  00475A  A0D8               	btfss	status,0,c
 13828  00475C  D010               	goto	l14090
 13829  00475E  500A               	movf	___aomod@divisor^0,w,c
 13830  004760  5E02               	subwf	___aomod@dividend^0,f,c
 13831  004762  500B               	movf	(___aomod@divisor+1)^0,w,c
 13832  004764  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
 13833  004766  500C               	movf	(___aomod@divisor+2)^0,w,c
 13834  004768  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
 13835  00476A  500D               	movf	(___aomod@divisor+3)^0,w,c
 13836  00476C  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
 13837  00476E  500E               	movf	(___aomod@divisor+4)^0,w,c
 13838  004770  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
 13839  004772  500F               	movf	(___aomod@divisor+5)^0,w,c
 13840  004774  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
 13841  004776  5010               	movf	(___aomod@divisor+6)^0,w,c
 13842  004778  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
 13843  00477A  5011               	movf	(___aomod@divisor+7)^0,w,c
 13844  00477C  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
 13845  00477E                     l14090:
 13846  00477E  90D8               	bcf	status,0,c
 13847  004780  3211               	rrcf	(___aomod@divisor+7)^0,f,c
 13848  004782  3210               	rrcf	(___aomod@divisor+6)^0,f,c
 13849  004784  320F               	rrcf	(___aomod@divisor+5)^0,f,c
 13850  004786  320E               	rrcf	(___aomod@divisor+4)^0,f,c
 13851  004788  320D               	rrcf	(___aomod@divisor+3)^0,f,c
 13852  00478A  320C               	rrcf	(___aomod@divisor+2)^0,f,c
 13853  00478C  320B               	rrcf	(___aomod@divisor+1)^0,f,c
 13854  00478E  320A               	rrcf	___aomod@divisor^0,f,c
 13855  004790  2E12               	decfsz	___aomod@counter^0,f,c
 13856  004792  D7D3               	goto	u13250
 13857  004794                     l14094:
 13858  004794  5013               	movf	___aomod@sign^0,w,c
 13859  004796  B4D8               	btfsc	status,2,c
 13860  004798  D010               	goto	l14098
 13861  00479A  1E09               	comf	(___aomod@dividend+7)^0,f,c
 13862  00479C  1E08               	comf	(___aomod@dividend+6)^0,f,c
 13863  00479E  1E07               	comf	(___aomod@dividend+5)^0,f,c
 13864  0047A0  1E06               	comf	(___aomod@dividend+4)^0,f,c
 13865  0047A2  1E05               	comf	(___aomod@dividend+3)^0,f,c
 13866  0047A4  1E04               	comf	(___aomod@dividend+2)^0,f,c
 13867  0047A6  1E03               	comf	(___aomod@dividend+1)^0,f,c
 13868  0047A8  6C02               	negf	___aomod@dividend^0,c
 13869  0047AA  0E00               	movlw	0
 13870  0047AC  2203               	addwfc	(___aomod@dividend+1)^0,f,c
 13871  0047AE  2204               	addwfc	(___aomod@dividend+2)^0,f,c
 13872  0047B0  2205               	addwfc	(___aomod@dividend+3)^0,f,c
 13873  0047B2  2206               	addwfc	(___aomod@dividend+4)^0,f,c
 13874  0047B4  2207               	addwfc	(___aomod@dividend+5)^0,f,c
 13875  0047B6  2208               	addwfc	(___aomod@dividend+6)^0,f,c
 13876  0047B8  2209               	addwfc	(___aomod@dividend+7)^0,f,c
 13877  0047BA                     l14098:
 13878  0047BA  0060  F008  F002   	movff	___aomod@dividend,?___aomod
 13879  0047C0  0060  F00C  F003   	movff	___aomod@dividend+1,?___aomod+1
 13880  0047C6  0060  F010  F004   	movff	___aomod@dividend+2,?___aomod+2
 13881  0047CC  0060  F014  F005   	movff	___aomod@dividend+3,?___aomod+3
 13882  0047D2  0060  F018  F006   	movff	___aomod@dividend+4,?___aomod+4
 13883  0047D8  0060  F01C  F007   	movff	___aomod@dividend+5,?___aomod+5
 13884  0047DE  0060  F020  F008   	movff	___aomod@dividend+6,?___aomod+6
 13885  0047E4  0060  F024  F009   	movff	___aomod@dividend+7,?___aomod+7
 13886  0047EA  0012               	return		;funcret
 13887  0047EC                     __end_of___aomod:
 13888                           	opt callstack 0
 13889                           
 13890 ;; *************** function ___aodiv *****************
 13891 ;; Defined at:
 13892 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
 13893 ;; Parameters:    Size  Location     Type
 13894 ;;  dividend        8    1[COMRAM] long long 
 13895 ;;  divisor         8    9[COMRAM] long long 
 13896 ;; Auto vars:     Size  Location     Type
 13897 ;;  quotient        8   19[COMRAM] long long 
 13898 ;;  sign            1   18[COMRAM] unsigned char 
 13899 ;;  counter         1   17[COMRAM] unsigned char 
 13900 ;; Return value:  Size  Location     Type
 13901 ;;                  8    1[COMRAM] long long 
 13902 ;; Registers used:
 13903 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13904 ;; Tracked objects:
 13905 ;;		On entry : 0/2
 13906 ;;		On exit  : 0/0
 13907 ;;		Unchanged: 0/0
 13908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13909 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13910 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13912 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13913 ;;Total ram usage:       26 bytes
 13914 ;; Hardware stack levels used:    1
 13915 ;; Hardware stack levels required when called:    7
 13916 ;; This function calls:
 13917 ;;		Nothing
 13918 ;; This function is called by:
 13919 ;;		_dtoa
 13920 ;; This function uses a non-reentrant model
 13921 ;;
 13922                           
 13923                           	psect	text76
 13924  0042C8                     __ptext76:
 13925                           	opt callstack 0
 13926  0042C8                     ___aodiv:
 13927                           	opt callstack 16
 13928                           
 13929                           ;incstack = 0
 13930  0042C8  0E00               	movlw	0
 13931  0042CA  6E13               	movwf	___aodiv@sign^0,c
 13932  0042CC  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
 13933  0042CE  D012               	goto	l14030
 13934  0042D0  1E11               	comf	(___aodiv@divisor+7)^0,f,c
 13935  0042D2  1E10               	comf	(___aodiv@divisor+6)^0,f,c
 13936  0042D4  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
 13937  0042D6  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
 13938  0042D8  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
 13939  0042DA  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
 13940  0042DC  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
 13941  0042DE  6C0A               	negf	___aodiv@divisor^0,c
 13942  0042E0  0E00               	movlw	0
 13943  0042E2  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
 13944  0042E4  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
 13945  0042E6  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
 13946  0042E8  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
 13947  0042EA  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
 13948  0042EC  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
 13949  0042EE  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
 13950  0042F0  0E01               	movlw	1
 13951  0042F2  6E13               	movwf	___aodiv@sign^0,c
 13952  0042F4                     l14030:
 13953  0042F4  AE09               	btfss	(___aodiv@dividend+7)^0,7,c
 13954  0042F6  D012               	goto	l14036
 13955  0042F8  1E09               	comf	(___aodiv@dividend+7)^0,f,c
 13956  0042FA  1E08               	comf	(___aodiv@dividend+6)^0,f,c
 13957  0042FC  1E07               	comf	(___aodiv@dividend+5)^0,f,c
 13958  0042FE  1E06               	comf	(___aodiv@dividend+4)^0,f,c
 13959  004300  1E05               	comf	(___aodiv@dividend+3)^0,f,c
 13960  004302  1E04               	comf	(___aodiv@dividend+2)^0,f,c
 13961  004304  1E03               	comf	(___aodiv@dividend+1)^0,f,c
 13962  004306  6C02               	negf	___aodiv@dividend^0,c
 13963  004308  0E00               	movlw	0
 13964  00430A  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
 13965  00430C  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
 13966  00430E  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
 13967  004310  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
 13968  004312  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
 13969  004314  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
 13970  004316  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
 13971  004318  0E01               	movlw	1
 13972  00431A  1A13               	xorwf	___aodiv@sign^0,f,c
 13973  00431C                     l14036:
 13974  00431C  EE20  F014         	lfsr	2,___aodiv@quotient
 13975  004320  0E07               	movlw	7
 13976  004322                     u13171:
 13977  004322  6ADE               	clrf	postinc2,c
 13978  004324  06E8               	decf	wreg,f,c
 13979  004326  E2FD               	bc	u13171
 13980  004328  500A               	movf	___aodiv@divisor^0,w,c
 13981  00432A  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
 13982  00432C  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
 13983  00432E  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
 13984  004330  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
 13985  004332  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
 13986  004334  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
 13987  004336  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
 13988  004338  B4D8               	btfsc	status,2,c
 13989  00433A  D046               	goto	l14058
 13990  00433C  0E01               	movlw	1
 13991  00433E  6E12               	movwf	___aodiv@counter^0,c
 13992  004340  D00A               	goto	l14044
 13993  004342                     l14042:
 13994  004342  90D8               	bcf	status,0,c
 13995  004344  360A               	rlcf	___aodiv@divisor^0,f,c
 13996  004346  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
 13997  004348  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
 13998  00434A  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
 13999  00434C  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
 14000  00434E  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
 14001  004350  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
 14002  004352  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
 14003  004354  2A12               	incf	___aodiv@counter^0,f,c
 14004  004356                     l14044:
 14005  004356  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
 14006  004358  D7F4               	goto	l14042
 14007  00435A                     u13190:
 14008  00435A  90D8               	bcf	status,0,c
 14009  00435C  3614               	rlcf	___aodiv@quotient^0,f,c
 14010  00435E  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
 14011  004360  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
 14012  004362  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
 14013  004364  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
 14014  004366  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
 14015  004368  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
 14016  00436A  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
 14017  00436C  500A               	movf	___aodiv@divisor^0,w,c
 14018  00436E  5C02               	subwf	___aodiv@dividend^0,w,c
 14019  004370  500B               	movf	(___aodiv@divisor+1)^0,w,c
 14020  004372  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
 14021  004374  500C               	movf	(___aodiv@divisor+2)^0,w,c
 14022  004376  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
 14023  004378  500D               	movf	(___aodiv@divisor+3)^0,w,c
 14024  00437A  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
 14025  00437C  500E               	movf	(___aodiv@divisor+4)^0,w,c
 14026  00437E  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
 14027  004380  500F               	movf	(___aodiv@divisor+5)^0,w,c
 14028  004382  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
 14029  004384  5010               	movf	(___aodiv@divisor+6)^0,w,c
 14030  004386  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
 14031  004388  5011               	movf	(___aodiv@divisor+7)^0,w,c
 14032  00438A  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
 14033  00438C  A0D8               	btfss	status,0,c
 14034  00438E  D011               	goto	l14054
 14035  004390  500A               	movf	___aodiv@divisor^0,w,c
 14036  004392  5E02               	subwf	___aodiv@dividend^0,f,c
 14037  004394  500B               	movf	(___aodiv@divisor+1)^0,w,c
 14038  004396  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
 14039  004398  500C               	movf	(___aodiv@divisor+2)^0,w,c
 14040  00439A  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
 14041  00439C  500D               	movf	(___aodiv@divisor+3)^0,w,c
 14042  00439E  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
 14043  0043A0  500E               	movf	(___aodiv@divisor+4)^0,w,c
 14044  0043A2  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
 14045  0043A4  500F               	movf	(___aodiv@divisor+5)^0,w,c
 14046  0043A6  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
 14047  0043A8  5010               	movf	(___aodiv@divisor+6)^0,w,c
 14048  0043AA  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
 14049  0043AC  5011               	movf	(___aodiv@divisor+7)^0,w,c
 14050  0043AE  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
 14051  0043B0  8014               	bsf	___aodiv@quotient^0,0,c
 14052  0043B2                     l14054:
 14053  0043B2  90D8               	bcf	status,0,c
 14054  0043B4  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
 14055  0043B6  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
 14056  0043B8  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
 14057  0043BA  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
 14058  0043BC  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
 14059  0043BE  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
 14060  0043C0  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
 14061  0043C2  320A               	rrcf	___aodiv@divisor^0,f,c
 14062  0043C4  2E12               	decfsz	___aodiv@counter^0,f,c
 14063  0043C6  D7C9               	goto	u13190
 14064  0043C8                     l14058:
 14065  0043C8  5013               	movf	___aodiv@sign^0,w,c
 14066  0043CA  B4D8               	btfsc	status,2,c
 14067  0043CC  D010               	goto	l14062
 14068  0043CE  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
 14069  0043D0  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
 14070  0043D2  1E19               	comf	(___aodiv@quotient+5)^0,f,c
 14071  0043D4  1E18               	comf	(___aodiv@quotient+4)^0,f,c
 14072  0043D6  1E17               	comf	(___aodiv@quotient+3)^0,f,c
 14073  0043D8  1E16               	comf	(___aodiv@quotient+2)^0,f,c
 14074  0043DA  1E15               	comf	(___aodiv@quotient+1)^0,f,c
 14075  0043DC  6C14               	negf	___aodiv@quotient^0,c
 14076  0043DE  0E00               	movlw	0
 14077  0043E0  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
 14078  0043E2  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
 14079  0043E4  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
 14080  0043E6  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
 14081  0043E8  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
 14082  0043EA  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
 14083  0043EC  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
 14084  0043EE                     l14062:
 14085  0043EE  0060  F050  F002   	movff	___aodiv@quotient,?___aodiv
 14086  0043F4  0060  F054  F003   	movff	___aodiv@quotient+1,?___aodiv+1
 14087  0043FA  0060  F058  F004   	movff	___aodiv@quotient+2,?___aodiv+2
 14088  004400  0060  F05C  F005   	movff	___aodiv@quotient+3,?___aodiv+3
 14089  004406  0060  F060  F006   	movff	___aodiv@quotient+4,?___aodiv+4
 14090  00440C  0060  F064  F007   	movff	___aodiv@quotient+5,?___aodiv+5
 14091  004412  0060  F068  F008   	movff	___aodiv@quotient+6,?___aodiv+6
 14092  004418  0060  F06C  F009   	movff	___aodiv@quotient+7,?___aodiv+7
 14093  00441E  0012               	return		;funcret
 14094  004420                     __end_of___aodiv:
 14095                           	opt callstack 0
 14096                           
 14097 ;; *************** function _atoi *****************
 14098 ;; Defined at:
 14099 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 14100 ;; Parameters:    Size  Location     Type
 14101 ;;  s               2    8[COMRAM] PTR const unsigned char 
 14102 ;;		 -> STR_139(5), STR_138(8), STR_137(28), STR_136(26), 
 14103 ;;		 -> STR_135(12), STR_134(12), STR_65(5), STR_64(34), 
 14104 ;;		 -> STR_63(14), STR_62(5), STR_61(12), STR_59(8), 
 14105 ;;		 -> STR_56(5), STR_55(12), STR_48(5), STR_47(12), 
 14106 ;;		 -> STR_45(13), STR_44(5), STR_43(12), STR_42(12), 
 14107 ;;		 -> STR_40(14), STR_39(5), STR_38(12), STR_36(13), 
 14108 ;;		 -> STR_35(18), STR_34(18), STR_33(5), STR_32(21), 
 14109 ;;		 -> STR_31(5), STR_30(12), STR_29(12), STR_27(12), 
 14110 ;;		 -> STR_26(12), STR_24(5), STR_23(3), STR_22(5), 
 14111 ;;		 -> STR_21(5), STR_20(12), STR_19(12), STR_18(3), 
 14112 ;;		 -> STR_17(6), STR_16(5), STR_14(13), STR_13(12), 
 14113 ;;		 -> STR_12(5), STR_10(16), STR_9(8), STR_8(12), 
 14114 ;;		 -> STR_7(12), STR_5(8), STR_4(12), STR_3(12), 
 14115 ;; Auto vars:     Size  Location     Type
 14116 ;;  n               2   21[COMRAM] int 
 14117 ;;  neg             2   14[COMRAM] int 
 14118 ;; Return value:  Size  Location     Type
 14119 ;;                  2    8[COMRAM] int 
 14120 ;; Registers used:
 14121 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14122 ;; Tracked objects:
 14123 ;;		On entry : 3F/0
 14124 ;;		On exit  : 0/0
 14125 ;;		Unchanged: 0/0
 14126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14127 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14128 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14129 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14130 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14131 ;;Total ram usage:       15 bytes
 14132 ;; Hardware stack levels used:    1
 14133 ;; Hardware stack levels required when called:    8
 14134 ;; This function calls:
 14135 ;;		___wmul
 14136 ;;		_isdigit
 14137 ;;		_isspace
 14138 ;; This function is called by:
 14139 ;;		_vfpfcnvrt
 14140 ;; This function uses a non-reentrant model
 14141 ;;
 14142                           
 14143                           	psect	text77
 14144  003E96                     __ptext77:
 14145                           	opt callstack 0
 14146  003E96                     _atoi:
 14147                           	opt callstack 16
 14148                           
 14149                           ; BSR set to: 0
 14150                           
 14151                           ;incstack = 0
 14152  003E96  0E00               	movlw	0
 14153  003E98  6E17               	movwf	(atoi@n+1)^0,c
 14154  003E9A  0E00               	movlw	0
 14155  003E9C  6E16               	movwf	atoi@n^0,c
 14156  003E9E  0E00               	movlw	0
 14157  003EA0  6E10               	movwf	(atoi@neg+1)^0,c
 14158  003EA2  0E00               	movlw	0
 14159  003EA4  6E0F               	movwf	atoi@neg^0,c
 14160  003EA6  D002               	goto	l14344
 14161  003EA8                     l14342:
 14162                           
 14163                           ; BSR set to: 0
 14164  003EA8  4A09               	infsnz	atoi@s^0,f,c
 14165  003EAA  2A0A               	incf	(atoi@s+1)^0,f,c
 14166  003EAC                     l14344:
 14167                           
 14168                           ; BSR set to: 0
 14169  003EAC  0E01               	movlw	1
 14170  003EAE  6E15               	movwf	_atoi$7863^0,c
 14171                           
 14172                           ; BSR set to: 0
 14173  003EB0  0060  F027  FFF6   	movff	atoi@s,tblptrl
 14174  003EB6  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 14175  003EBC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14176  003EBC  6AF8               	clrf	tblptru,c
 14177  003EBE                     	endif
 14178  003EBE                     	if	0	;tblptru may be non-zero
 14179  003EBE                     	endif
 14180  003EBE  0008               	tblrd		*
 14181  003EC0  50F5               	movf	tablat,w,c
 14182  003EC2  0A20               	xorlw	32
 14183  003EC4  B4D8               	btfsc	status,2,c
 14184  003EC6  D01B               	goto	l14352
 14185                           
 14186                           ; BSR set to: 0
 14187  003EC8  0EF7               	movlw	247
 14188  003ECA  6E0B               	movwf	??_atoi^0,c
 14189  003ECC  0EFF               	movlw	255
 14190  003ECE  6E0C               	movwf	(??_atoi+1)^0,c
 14191  003ED0  0060  F027  FFF6   	movff	atoi@s,tblptrl
 14192  003ED6  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 14193  003EDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14194  003EDC  6AF8               	clrf	tblptru,c
 14195  003EDE                     	endif
 14196  003EDE                     	if	0	;tblptru may be non-zero
 14197  003EDE                     	endif
 14198  003EDE  0008               	tblrd		*
 14199  003EE0  50F5               	movf	tablat,w,c
 14200  003EE2  6E0D               	movwf	(??_atoi+2)^0,c
 14201  003EE4  6A0E               	clrf	(??_atoi+3)^0,c
 14202  003EE6  500B               	movf	??_atoi^0,w,c
 14203  003EE8  260D               	addwf	(??_atoi+2)^0,f,c
 14204  003EEA  500C               	movf	(??_atoi+1)^0,w,c
 14205  003EEC  220E               	addwfc	(??_atoi+3)^0,f,c
 14206  003EEE  500E               	movf	(??_atoi+3)^0,w,c
 14207  003EF0  E104               	bnz	u13790
 14208  003EF2  0E05               	movlw	5
 14209  003EF4  5C0D               	subwf	(??_atoi+2)^0,w,c
 14210  003EF6  A0D8               	btfss	status,0,c
 14211  003EF8  D002               	goto	l14352
 14212  003EFA                     u13790:
 14213                           
 14214                           ; BSR set to: 0
 14215  003EFA  0E00               	movlw	0
 14216  003EFC  6E15               	movwf	_atoi$7863^0,c
 14217  003EFE                     l14352:
 14218                           
 14219                           ; BSR set to: 0
 14220  003EFE  0060  F054  F011   	movff	_atoi$7863,_atoi$7862
 14221  003F04  6A12               	clrf	(_atoi$7862+1)^0,c
 14222                           
 14223                           ; BSR set to: 0
 14224  003F06  5011               	movf	_atoi$7862^0,w,c
 14225  003F08  1012               	iorwf	(_atoi$7862+1)^0,w,c
 14226  003F0A  B4D8               	btfsc	status,2,c
 14227  003F0C  D008               	goto	l14362
 14228  003F0E  D7CC               	goto	l14342
 14229  003F10                     l14358:
 14230                           
 14231                           ; BSR set to: 0
 14232  003F10  0E00               	movlw	0
 14233  003F12  6E10               	movwf	(atoi@neg+1)^0,c
 14234  003F14  0E01               	movlw	1
 14235  003F16  6E0F               	movwf	atoi@neg^0,c
 14236  003F18                     l14360:
 14237  003F18  4A09               	infsnz	atoi@s^0,f,c
 14238  003F1A  2A0A               	incf	(atoi@s+1)^0,f,c
 14239  003F1C  D036               	goto	l14368
 14240  003F1E                     l14362:
 14241                           
 14242                           ; BSR set to: 0
 14243  003F1E  0060  F027  FFF6   	movff	atoi@s,tblptrl
 14244  003F24  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 14245  003F2A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14246  003F2A  6AF8               	clrf	tblptru,c
 14247  003F2C                     	endif
 14248  003F2C                     	if	0	;tblptru may be non-zero
 14249  003F2C                     	endif
 14250  003F2C  0008               	tblrd		*
 14251  003F2E  50F5               	movf	tablat,w,c
 14252  003F30  6E0B               	movwf	??_atoi^0,c
 14253  003F32  6A0C               	clrf	(??_atoi+1)^0,c
 14254                           
 14255                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14256                           ; Switch size 1, requested type "simple"
 14257                           ; Number of cases is 1, Range of values is 0 to 0
 14258                           ; switch strategies available:
 14259                           ; Name         Instructions Cycles
 14260                           ; simple_byte            4     3 (average)
 14261                           ;	Chosen strategy is simple_byte
 14262  003F34  500C               	movf	(??_atoi+1)^0,w,c
 14263  003F36  0A00               	xorlw	0	; case 0
 14264  003F38  A4D8               	btfss	status,2,c
 14265  003F3A  D027               	goto	l14368
 14266                           
 14267                           ; BSR set to: 0
 14268                           ; Switch size 1, requested type "simple"
 14269                           ; Number of cases is 2, Range of values is 43 to 45
 14270                           ; switch strategies available:
 14271                           ; Name         Instructions Cycles
 14272                           ; simple_byte            7     4 (average)
 14273                           ;	Chosen strategy is simple_byte
 14274  003F3C  500B               	movf	??_atoi^0,w,c
 14275  003F3E  0A2B               	xorlw	43	; case 43
 14276  003F40  B4D8               	btfsc	status,2,c
 14277  003F42  D7EA               	goto	l14360
 14278  003F44  0A06               	xorlw	6	; case 45
 14279  003F46  B4D8               	btfsc	status,2,c
 14280  003F48  D7E3               	goto	l14358
 14281  003F4A  D01F               	goto	l14368
 14282  003F4C                     l14364:
 14283  003F4C  0060  F058  F002   	movff	atoi@n,___wmul@multiplier
 14284  003F52  0060  F05C  F003   	movff	atoi@n+1,___wmul@multiplier+1
 14285  003F58  0E00               	movlw	0
 14286  003F5A  6E05               	movwf	(___wmul@multiplicand+1)^0,c
 14287  003F5C  0E0A               	movlw	10
 14288  003F5E  6E04               	movwf	___wmul@multiplicand^0,c
 14289  003F60  ECD6  F044         	call	___wmul	;wreg free
 14290  003F64  0060  F027  FFF6   	movff	atoi@s,tblptrl
 14291  003F6A  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 14292  003F70                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14293  003F70  6AF8               	clrf	tblptru,c
 14294  003F72                     	endif
 14295  003F72                     	if	0	;tblptru may be non-zero
 14296  003F72                     	endif
 14297  003F72  0008               	tblrd		*
 14298  003F74  50F5               	movf	tablat,w,c
 14299  003F76  5E02               	subwf	?___wmul^0,f,c
 14300  003F78  0E00               	movlw	0
 14301  003F7A  5A03               	subwfb	(?___wmul+1)^0,f,c
 14302  003F7C  0E30               	movlw	48
 14303  003F7E  2402               	addwf	?___wmul^0,w,c
 14304  003F80  6E16               	movwf	atoi@n^0,c
 14305  003F82  0E00               	movlw	0
 14306  003F84  2003               	addwfc	(?___wmul+1)^0,w,c
 14307  003F86  6E17               	movwf	(atoi@n+1)^0,c
 14308  003F88  D7C7               	goto	l14360
 14309  003F8A                     l14368:
 14310  003F8A  0ED0               	movlw	208
 14311  003F8C  6E0B               	movwf	??_atoi^0,c
 14312  003F8E  0EFF               	movlw	255
 14313  003F90  6E0C               	movwf	(??_atoi+1)^0,c
 14314  003F92  0060  F027  FFF6   	movff	atoi@s,tblptrl
 14315  003F98  0060  F02B  FFF7   	movff	atoi@s+1,tblptrh
 14316  003F9E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14317  003F9E  6AF8               	clrf	tblptru,c
 14318  003FA0                     	endif
 14319  003FA0                     	if	0	;tblptru may be non-zero
 14320  003FA0                     	endif
 14321  003FA0  0008               	tblrd		*
 14322  003FA2  50F5               	movf	tablat,w,c
 14323  003FA4  6E0D               	movwf	(??_atoi+2)^0,c
 14324  003FA6  6A0E               	clrf	(??_atoi+3)^0,c
 14325  003FA8  500B               	movf	??_atoi^0,w,c
 14326  003FAA  260D               	addwf	(??_atoi+2)^0,f,c
 14327  003FAC  500C               	movf	(??_atoi+1)^0,w,c
 14328  003FAE  220E               	addwfc	(??_atoi+3)^0,f,c
 14329  003FB0  500E               	movf	(??_atoi+3)^0,w,c
 14330  003FB2  E106               	bnz	u13810
 14331  003FB4  0E0A               	movlw	10
 14332  003FB6  5C0D               	subwf	(??_atoi+2)^0,w,c
 14333  003FB8  B0D8               	btfsc	status,0,c
 14334  003FBA  D002               	goto	u13810
 14335  003FBC  0E01               	movlw	1
 14336  003FBE  D001               	goto	u13820
 14337  003FC0                     u13810:
 14338  003FC0  0E00               	movlw	0
 14339  003FC2                     u13820:
 14340  003FC2  6E13               	movwf	_atoi$7864^0,c
 14341  003FC4  6A14               	clrf	(_atoi$7864+1)^0,c
 14342  003FC6  5013               	movf	_atoi$7864^0,w,c
 14343  003FC8  1014               	iorwf	(_atoi$7864+1)^0,w,c
 14344  003FCA  A4D8               	btfss	status,2,c
 14345  003FCC  D7BF               	goto	l14364
 14346  003FCE  500F               	movf	atoi@neg^0,w,c
 14347  003FD0  1010               	iorwf	(atoi@neg+1)^0,w,c
 14348  003FD2  A4D8               	btfss	status,2,c
 14349  003FD4  D011               	goto	l3937
 14350  003FD6  0060  F058  F00B   	movff	atoi@n,??_atoi
 14351  003FDC  0060  F05C  F00C   	movff	atoi@n+1,??_atoi+1
 14352  003FE2  1E0B               	comf	??_atoi^0,f,c
 14353  003FE4  1E0C               	comf	(??_atoi+1)^0,f,c
 14354  003FE6  4A0B               	infsnz	??_atoi^0,f,c
 14355  003FE8  2A0C               	incf	(??_atoi+1)^0,f,c
 14356  003FEA  0060  F02C  F009   	movff	??_atoi,?_atoi
 14357  003FF0  0060  F030  F00A   	movff	??_atoi+1,?_atoi+1
 14358  003FF6  0012               	return	
 14359  003FF8                     l3937:
 14360  003FF8  0060  F058  F009   	movff	atoi@n,?_atoi
 14361  003FFE  0060  F05C  F00A   	movff	atoi@n+1,?_atoi+1
 14362  004004  0012               	return		;funcret
 14363  004006                     __end_of_atoi:
 14364                           	opt callstack 0
 14365                           
 14366 ;; *************** function _isspace *****************
 14367 ;; Defined at:
 14368 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 14369 ;; Parameters:    Size  Location     Type
 14370 ;;  c               2    1[COMRAM] int 
 14371 ;; Auto vars:     Size  Location     Type
 14372 ;;		None
 14373 ;; Return value:  Size  Location     Type
 14374 ;;                  2    1[COMRAM] int 
 14375 ;; Registers used:
 14376 ;;		wreg, status,2, status,0
 14377 ;; Tracked objects:
 14378 ;;		On entry : 0/0
 14379 ;;		On exit  : 0/0
 14380 ;;		Unchanged: 0/0
 14381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14383 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14384 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14385 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14386 ;;Total ram usage:        7 bytes
 14387 ;; Hardware stack levels used:    1
 14388 ;; Hardware stack levels required when called:    7
 14389 ;; This function calls:
 14390 ;;		Nothing
 14391 ;; This function is called by:
 14392 ;;		_atoi
 14393 ;;		___strtoxl
 14394 ;; This function uses a non-reentrant model
 14395 ;;
 14396                           
 14397                           	psect	text78
 14398  00819E                     __ptext78:
 14399                           	opt callstack 0
 14400  00819E                     _isspace:
 14401                           	opt callstack 16
 14402                           
 14403                           ;incstack = 0
 14404  00819E  0E01               	movlw	1
 14405  0081A0  6E08               	movwf	_isspace$7889^0,c
 14406  0081A2  0E20               	movlw	32
 14407  0081A4  1802               	xorwf	isspace@c^0,w,c
 14408  0081A6  1003               	iorwf	(isspace@c+1)^0,w,c
 14409  0081A8  B4D8               	btfsc	status,2,c
 14410  0081AA  D016               	goto	l14148
 14411  0081AC  0EF7               	movlw	247
 14412  0081AE  6E04               	movwf	??_isspace^0,c
 14413  0081B0  0EFF               	movlw	255
 14414  0081B2  6E05               	movwf	(??_isspace+1)^0,c
 14415  0081B4  0060  F008  F006   	movff	isspace@c,??_isspace+2
 14416  0081BA  0060  F00C  F007   	movff	isspace@c+1,??_isspace+3
 14417  0081C0  5004               	movf	??_isspace^0,w,c
 14418  0081C2  2606               	addwf	(??_isspace+2)^0,f,c
 14419  0081C4  5005               	movf	(??_isspace+1)^0,w,c
 14420  0081C6  2207               	addwfc	(??_isspace+3)^0,f,c
 14421  0081C8  5007               	movf	(??_isspace+3)^0,w,c
 14422  0081CA  E104               	bnz	u13360
 14423  0081CC  0E05               	movlw	5
 14424  0081CE  5C06               	subwf	(??_isspace+2)^0,w,c
 14425  0081D0  A0D8               	btfss	status,0,c
 14426  0081D2  D002               	goto	l14148
 14427  0081D4                     u13360:
 14428  0081D4  0E00               	movlw	0
 14429  0081D6  6E08               	movwf	_isspace$7889^0,c
 14430  0081D8                     l14148:
 14431  0081D8  0060  F020  F002   	movff	_isspace$7889,?_isspace
 14432  0081DE  6A03               	clrf	(?_isspace+1)^0,c
 14433  0081E0  0012               	return		;funcret
 14434  0081E2                     __end_of_isspace:
 14435                           	opt callstack 0
 14436                           
 14437 ;; *************** function _isdigit *****************
 14438 ;; Defined at:
 14439 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 14440 ;; Parameters:    Size  Location     Type
 14441 ;;  c               2    1[COMRAM] int 
 14442 ;; Auto vars:     Size  Location     Type
 14443 ;;		None
 14444 ;; Return value:  Size  Location     Type
 14445 ;;                  2    1[COMRAM] int 
 14446 ;; Registers used:
 14447 ;;		wreg, status,2, status,0
 14448 ;; Tracked objects:
 14449 ;;		On entry : 0/0
 14450 ;;		On exit  : 0/0
 14451 ;;		Unchanged: 0/0
 14452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14455 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14456 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14457 ;;Total ram usage:        6 bytes
 14458 ;; Hardware stack levels used:    1
 14459 ;; Hardware stack levels required when called:    7
 14460 ;; This function calls:
 14461 ;;		Nothing
 14462 ;; This function is called by:
 14463 ;;		_vfpfcnvrt
 14464 ;;		_atoi
 14465 ;;		___strtoxl
 14466 ;; This function uses a non-reentrant model
 14467 ;;
 14468                           
 14469                           	psect	text79
 14470  008918                     __ptext79:
 14471                           	opt callstack 0
 14472  008918                     _isdigit:
 14473                           	opt callstack 17
 14474                           
 14475                           ;incstack = 0
 14476  008918  0ED0               	movlw	208
 14477  00891A  6E04               	movwf	??_isdigit^0,c
 14478  00891C  0EFF               	movlw	255
 14479  00891E  6E05               	movwf	(??_isdigit+1)^0,c
 14480  008920  0060  F008  F006   	movff	isdigit@c,??_isdigit+2
 14481  008926  0060  F00C  F007   	movff	isdigit@c+1,??_isdigit+3
 14482  00892C  5004               	movf	??_isdigit^0,w,c
 14483  00892E  2606               	addwf	(??_isdigit+2)^0,f,c
 14484  008930  5005               	movf	(??_isdigit+1)^0,w,c
 14485  008932  2207               	addwfc	(??_isdigit+3)^0,f,c
 14486  008934  5007               	movf	(??_isdigit+3)^0,w,c
 14487  008936  E106               	bnz	u13130
 14488  008938  0E0A               	movlw	10
 14489  00893A  5C06               	subwf	(??_isdigit+2)^0,w,c
 14490  00893C  B0D8               	btfsc	status,0,c
 14491  00893E  D002               	goto	u13130
 14492  008940  0E01               	movlw	1
 14493  008942  D001               	goto	u13140
 14494  008944                     u13130:
 14495  008944  0E00               	movlw	0
 14496  008946                     u13140:
 14497  008946  6E02               	movwf	?_isdigit^0,c
 14498  008948  6A03               	clrf	(?_isdigit+1)^0,c
 14499  00894A  0012               	return		;funcret
 14500  00894C                     __end_of_isdigit:
 14501                           	opt callstack 0
 14502                           
 14503 ;; *************** function _UART1_is_rx_ready *****************
 14504 ;; Defined at:
 14505 ;;		line 169 in file "mcc_generated_files/uart1.c"
 14506 ;; Parameters:    Size  Location     Type
 14507 ;;		None
 14508 ;; Auto vars:     Size  Location     Type
 14509 ;;		None
 14510 ;; Return value:  Size  Location     Type
 14511 ;;                  1    wreg      _Bool 
 14512 ;; Registers used:
 14513 ;;		wreg, status,2
 14514 ;; Tracked objects:
 14515 ;;		On entry : 3F/0
 14516 ;;		On exit  : 3F/0
 14517 ;;		Unchanged: 0/0
 14518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14523 ;;Total ram usage:        0 bytes
 14524 ;; Hardware stack levels used:    1
 14525 ;; Hardware stack levels required when called:    7
 14526 ;; This function calls:
 14527 ;;		Nothing
 14528 ;; This function is called by:
 14529 ;;		_processATCommand
 14530 ;; This function uses a non-reentrant model
 14531 ;;
 14532                           
 14533                           	psect	text80
 14534  008F9A                     __ptext80:
 14535                           	opt callstack 0
 14536  008F9A                     _UART1_is_rx_ready:
 14537                           	opt callstack 22
 14538                           
 14539                           ; BSR set to: 0
 14540                           ;mcc_generated_files/uart1.c: 171:     return (uart1RxCount ? 1 : 0);
 14541                           
 14542                           ;incstack = 0
 14543  008F9A  51C5               	movf	_uart1RxCount& (0+255),w,b	;volatile
 14544  008F9C  B4D8               	btfsc	status,2,c
 14545  008F9E  D002               	goto	u11820
 14546  008FA0  0E01               	movlw	1
 14547  008FA2  0012               	return	
 14548  008FA4                     u11820:
 14549  008FA4  0E00               	movlw	0
 14550                           
 14551                           ; BSR set to: 0
 14552  008FA6  0012               	return		;funcret
 14553  008FA8                     __end_of_UART1_is_rx_ready:
 14554                           	opt callstack 0
 14555                           
 14556 ;; *************** function _UART1_Read *****************
 14557 ;; Defined at:
 14558 ;;		line 188 in file "mcc_generated_files/uart1.c"
 14559 ;; Parameters:    Size  Location     Type
 14560 ;;		None
 14561 ;; Auto vars:     Size  Location     Type
 14562 ;;  readValue       1    1[COMRAM] unsigned char 
 14563 ;; Return value:  Size  Location     Type
 14564 ;;                  1    wreg      unsigned char 
 14565 ;; Registers used:
 14566 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14567 ;; Tracked objects:
 14568 ;;		On entry : 3F/0
 14569 ;;		On exit  : 3F/39
 14570 ;;		Unchanged: 0/0
 14571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14573 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14575 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14576 ;;Total ram usage:        1 bytes
 14577 ;; Hardware stack levels used:    1
 14578 ;; Hardware stack levels required when called:    7
 14579 ;; This function calls:
 14580 ;;		Nothing
 14581 ;; This function is called by:
 14582 ;;		_processATCommand
 14583 ;; This function uses a non-reentrant model
 14584 ;;
 14585                           
 14586                           	psect	text81
 14587  0082AC                     __ptext81:
 14588                           	opt callstack 0
 14589  0082AC                     _UART1_Read:
 14590                           	opt callstack 22
 14591                           
 14592                           ; BSR set to: 0
 14593                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 14594                           
 14595                           ; BSR set to: 0
 14596                           ;mcc_generated_files/uart1.c: 192:     while(0 == uart1RxCount)
 14597                           
 14598                           ; BSR set to: 0
 14599                           ;incstack = 0
 14600  0082AC  51C5               	movf	_uart1RxCount& (0+255),w,b	;volatile
 14601  0082AE  B4D8               	btfsc	status,2,c
 14602  0082B0  D7FD               	goto	_UART1_Read
 14603                           
 14604                           ; BSR set to: 0
 14605                           ;mcc_generated_files/uart1.c: 196:     uart1RxLastError = uart1RxStatusBuffer[uart1RxTai
      +                          l];
 14606  0082B2  0E28               	movlw	low _uart1RxStatusBuffer
 14607  0082B4  25C6               	addwf	_uart1RxTail& (0+255),w,b	;volatile
 14608  0082B6  6ED9               	movwf	fsr2l,c
 14609  0082B8  6ADA               	clrf	fsr2h,c
 14610  0082BA  0E01               	movlw	high _uart1RxStatusBuffer
 14611  0082BC  22DA               	addwfc	fsr2h,f,c
 14612  0082BE  50DF               	movf	indf2,w,c
 14613  0082C0  6FC4               	movwf	_uart1RxLastError& (0+255),b	;volatile
 14614                           
 14615                           ;mcc_generated_files/uart1.c: 198:     readValue = uart1RxBuffer[uart1RxTail++];
 14616  0082C2  0E14               	movlw	low _uart1RxBuffer
 14617  0082C4  25C6               	addwf	_uart1RxTail& (0+255),w,b	;volatile
 14618  0082C6  6ED9               	movwf	fsr2l,c
 14619  0082C8  6ADA               	clrf	fsr2h,c
 14620  0082CA  0E02               	movlw	high _uart1RxBuffer
 14621  0082CC  22DA               	addwfc	fsr2h,f,c
 14622  0082CE  50DF               	movf	indf2,w,c
 14623  0082D0  6E02               	movwf	UART1_Read@readValue^0,c
 14624                           
 14625                           ; BSR set to: 0
 14626  0082D2  2BC6               	incf	_uart1RxTail& (0+255),f,b	;volatile
 14627                           
 14628                           ; BSR set to: 0
 14629                           ;mcc_generated_files/uart1.c: 199:     if(sizeof(uart1RxBuffer) <= uart1RxTail)
 14630  0082D4  0E0F               	movlw	15
 14631  0082D6  65C6               	cpfsgt	_uart1RxTail& (0+255),b
 14632  0082D8  D002               	goto	l12734
 14633                           
 14634                           ; BSR set to: 0
 14635                           ;mcc_generated_files/uart1.c: 200:     {;mcc_generated_files/uart1.c: 201:         uart1
      +                          RxTail = 0;
 14636  0082DA  0E00               	movlw	0
 14637  0082DC  6FC6               	movwf	_uart1RxTail& (0+255),b	;volatile
 14638  0082DE                     l12734:
 14639                           
 14640                           ; BSR set to: 0
 14641                           ;mcc_generated_files/uart1.c: 203:     PIE3bits.U1RXIE = 0;
 14642  0082DE  0139               	movlb	57	; () banked
 14643  0082E0  9793               	bcf	147,3,b	;volatile
 14644                           
 14645                           ; BSR set to: 57
 14646                           ;mcc_generated_files/uart1.c: 204:     uart1RxCount--;
 14647  0082E2  0100               	movlb	0	; () banked
 14648  0082E4  07C5               	decf	_uart1RxCount& (0+255),f,b	;volatile
 14649                           
 14650                           ; BSR set to: 0
 14651                           ;mcc_generated_files/uart1.c: 205:     PIE3bits.U1RXIE = 1;
 14652  0082E6  0139               	movlb	57	; () banked
 14653  0082E8  8793               	bsf	147,3,b	;volatile
 14654                           
 14655                           ; BSR set to: 57
 14656                           ;mcc_generated_files/uart1.c: 207:     return readValue;
 14657  0082EA  5002               	movf	UART1_Read@readValue^0,w,c
 14658                           
 14659                           ; BSR set to: 57
 14660  0082EC  0012               	return		;funcret
 14661  0082EE                     __end_of_UART1_Read:
 14662                           	opt callstack 0
 14663                           
 14664 ;; *************** function _bootLoadApplication *****************
 14665 ;; Defined at:
 14666 ;;		line 1303 in file "../app/app_src/application.c"
 14667 ;; Parameters:    Size  Location     Type
 14668 ;;		None
 14669 ;; Auto vars:     Size  Location     Type
 14670 ;;  buf_id          1   50[COMRAM] unsigned char 
 14671 ;;  buf_id          1   49[COMRAM] unsigned char 
 14672 ;;  temp            2   51[COMRAM] unsigned short 
 14673 ;;  i               1   53[COMRAM] unsigned char 
 14674 ;; Return value:  Size  Location     Type
 14675 ;;                  1    wreg      void 
 14676 ;; Registers used:
 14677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14678 ;; Tracked objects:
 14679 ;;		On entry : 3F/2
 14680 ;;		On exit  : 0/0
 14681 ;;		Unchanged: 0/0
 14682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14684 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14686 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14687 ;;Total ram usage:        7 bytes
 14688 ;; Hardware stack levels used:    1
 14689 ;; Hardware stack levels required when called:   14
 14690 ;; This function calls:
 14691 ;;		_CircularBufferInit
 14692 ;;		_DATAEE_ReadByte_Platform
 14693 ;;		_DATAEE_WriteByte_Platform
 14694 ;;		_NWK_OpenEndpoint
 14695 ;;		_NWK_SetAddr
 14696 ;;		_NWK_SetPanId
 14697 ;;		_PHY_SetChannel
 14698 ;;		_PHY_SetRxState
 14699 ;;		_crc16_app
 14700 ;;		_loadMACAddr
 14701 ;;		_set_parity
 14702 ;;		_set_uart_baud
 14703 ;; This function is called by:
 14704 ;;		_main
 14705 ;; This function uses a non-reentrant model
 14706 ;;
 14707                           
 14708                           	psect	text82
 14709  00201A                     __ptext82:
 14710                           	opt callstack 0
 14711  00201A                     _bootLoadApplication:
 14712                           	opt callstack 16
 14713                           
 14714                           ; BSR set to: 2
 14715                           ;../app/app_src/application.c: 1305:     uint16_t temp;;../app/app_src/application.c: 13
      +                          06:     uint8_t i;;../app/app_src/application.c: 1311:     loadMACAddr();
 14716                           
 14717                           ; BSR set to: 57
 14718                           ;incstack = 0
 14719  00201A  ECB2  F042         	call	_loadMACAddr	;wreg free
 14720                           
 14721                           ;../app/app_src/application.c: 1313:     temp = crc16_app(&EUIDbyte[0], sizeof(EUIDbyte)
      +                          , 0);
 14722  00201E  0EC2               	movlw	low _EUIDbyte
 14723  002020  6E13               	movwf	crc16_app@dptr^0,c
 14724  002022  0E01               	movlw	high _EUIDbyte
 14725  002024  6E14               	movwf	(crc16_app@dptr+1)^0,c
 14726  002026  0E00               	movlw	0
 14727  002028  6E16               	movwf	(crc16_app@len+1)^0,c
 14728  00202A  0E0C               	movlw	12
 14729  00202C  6E15               	movwf	crc16_app@len^0,c
 14730  00202E  0E00               	movlw	0
 14731  002030  6E18               	movwf	(crc16_app@seed+1)^0,c
 14732  002032  0E00               	movlw	0
 14733  002034  6E17               	movwf	crc16_app@seed^0,c
 14734  002036  ECF5  F039         	call	_crc16_app	;wreg free
 14735  00203A  0060  F04C  F034   	movff	?_crc16_app,bootLoadApplication@temp
 14736  002040  0060  F050  F035   	movff	?_crc16_app+1,bootLoadApplication@temp+1
 14737                           
 14738                           ; BSR set to: 57
 14739                           ;../app/app_src/application.c: 1314:     currentAddr0 = (temp >> 8) & 0xFF;
 14740  002046  0060  F0D4  F0FA   	movff	bootLoadApplication@temp+1,_currentAddr0
 14741                           
 14742                           ; BSR set to: 57
 14743                           ;../app/app_src/application.c: 1315:     currentAddr1 = (temp) & 0xFF;
 14744  00204C  0060  F0D0  F0F9   	movff	bootLoadApplication@temp,_currentAddr1
 14745                           
 14746                           ; BSR set to: 57
 14747                           ;../app/app_src/application.c: 1318:     currentNetID = DATAEE_ReadByte_Platform(0 + 0 +
      +                           1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 +
      +                           1 + 1 + 1);
 14748  002052  0E00               	movlw	0
 14749  002054  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14750  002056  0E19               	movlw	25
 14751  002058  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14752  00205A  ECE1  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 14753  00205E  0100               	movlb	0	; () banked
 14754  002060  6FF8               	movwf	_currentNetID& (0+255),b
 14755                           
 14756                           ; BSR set to: 0
 14757                           ;../app/app_src/application.c: 1321:     for(i = 0; i < 16; i++){
 14758  002062  0E00               	movlw	0
 14759  002064  6E36               	movwf	bootLoadApplication@i^0,c
 14760  002066                     l16700:
 14761                           
 14762                           ;../app/app_src/application.c: 1322:         aes_key[i] = DATAEE_ReadByte_Platform(0 + 0
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i);
 14763  002066  0E34               	movlw	low _aes_key
 14764  002068  2436               	addwf	bootLoadApplication@i^0,w,c
 14765  00206A  6ED9               	movwf	fsr2l,c
 14766  00206C  6ADA               	clrf	fsr2h,c
 14767  00206E  0E02               	movlw	high _aes_key
 14768  002070  22DA               	addwfc	fsr2h,f,c
 14769  002072  0E09               	movlw	9
 14770  002074  2436               	addwf	bootLoadApplication@i^0,w,c
 14771  002076  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14772  002078  6A07               	clrf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14773  00207A  0E00               	movlw	0
 14774  00207C  2207               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,f,c
 14775  00207E  ECE1  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 14776  002082  6EDF               	movwf	indf2,c
 14777                           
 14778                           ;../app/app_src/application.c: 1323:     }
 14779  002084  2A36               	incf	bootLoadApplication@i^0,f,c
 14780  002086  0E0F               	movlw	15
 14781  002088  6436               	cpfsgt	bootLoadApplication@i^0,c
 14782  00208A  D7ED               	goto	l16700
 14783                           
 14784                           ;../app/app_src/application.c: 1324:     for(i = 0; i < 16; i++){
 14785  00208C  0E00               	movlw	0
 14786  00208E  6E36               	movwf	bootLoadApplication@i^0,c
 14787  002090                     l16712:
 14788                           
 14789                           ;../app/app_src/application.c: 1325:         net_key[i] = DATAEE_ReadByte_Platform(0 + 0
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + i);
 14790  002090  0E24               	movlw	low _net_key
 14791  002092  2436               	addwf	bootLoadApplication@i^0,w,c
 14792  002094  6ED9               	movwf	fsr2l,c
 14793  002096  6ADA               	clrf	fsr2h,c
 14794  002098  0E02               	movlw	high _net_key
 14795  00209A  22DA               	addwfc	fsr2h,f,c
 14796  00209C  0E23               	movlw	35
 14797  00209E  2436               	addwf	bootLoadApplication@i^0,w,c
 14798  0020A0  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14799  0020A2  6A07               	clrf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14800  0020A4  0E00               	movlw	0
 14801  0020A6  2207               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,f,c
 14802  0020A8  ECE1  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 14803  0020AC  6EDF               	movwf	indf2,c
 14804                           
 14805                           ;../app/app_src/application.c: 1326:     }
 14806  0020AE  2A36               	incf	bootLoadApplication@i^0,f,c
 14807  0020B0  0E0F               	movlw	15
 14808  0020B2  6436               	cpfsgt	bootLoadApplication@i^0,c
 14809  0020B4  D7ED               	goto	l16712
 14810                           
 14811                           ;../app/app_src/application.c: 1333:     sinkAddr0 = DATAEE_ReadByte_Platform(0 + 0 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1);
 14812  0020B6  0E00               	movlw	0
 14813  0020B8  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14814  0020BA  0E1A               	movlw	26
 14815  0020BC  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14816  0020BE  ECE1  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 14817  0020C2  0100               	movlb	0	; () banked
 14818  0020C4  6FDE               	movwf	_sinkAddr0& (0+255),b
 14819                           
 14820                           ;../app/app_src/application.c: 1334:     sinkAddr1 = DATAEE_ReadByte_Platform(0 + 0 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1);
 14821  0020C6  0E00               	movlw	0
 14822  0020C8  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14823  0020CA  0E1B               	movlw	27
 14824  0020CC  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14825  0020CE  ECE1  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 14826  0020D2  0100               	movlb	0	; () banked
 14827  0020D4  6FDD               	movwf	_sinkAddr1& (0+255),b
 14828                           
 14829                           ;../app/app_src/application.c: 1337:     channel = DATAEE_ReadByte_Platform(0 + 0 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1);
 14830  0020D6  0E00               	movlw	0
 14831  0020D8  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14832  0020DA  0E1C               	movlw	28
 14833  0020DC  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14834  0020DE  ECE1  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 14835  0020E2  0100               	movlb	0	; () banked
 14836  0020E4  6FCE               	movwf	_channel& (0+255),b
 14837                           
 14838                           ; BSR set to: 0
 14839                           ;../app/app_src/application.c: 1338:     if(channel > sizeof(fhssList)){
 14840  0020E6  0EFC               	movlw	252
 14841  0020E8  65CE               	cpfsgt	_channel& (0+255),b
 14842  0020EA  D00B               	goto	l16726
 14843                           
 14844                           ; BSR set to: 0
 14845                           ;../app/app_src/application.c: 1339:         channel = 0;
 14846  0020EC  0E00               	movlw	0
 14847  0020EE  6FCE               	movwf	_channel& (0+255),b
 14848                           
 14849                           ; BSR set to: 0
 14850                           ;../app/app_src/application.c: 1340:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1,channel);
 14851  0020F0  0E00               	movlw	0
 14852  0020F2  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 14853  0020F4  0E1C               	movlw	28
 14854  0020F6  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 14855  0020F8  0060  F338  F008   	movff	_channel,DATAEE_WriteByte_Platform@data
 14856  0020FE  ECF1  F040         	call	_DATAEE_WriteByte_Platform	;wreg free
 14857  002102                     l16726:
 14858                           
 14859                           ;../app/app_src/application.c: 1344:     TXPower = DATAEE_ReadByte_Platform(0 + 0 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 
      +                          1 + 1 + 1 + 1 + 1 + 1);
 14860  002102  0E00               	movlw	0
 14861  002104  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14862  002106  0E1D               	movlw	29
 14863  002108  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14864  00210A  ECE1  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 14865  00210E  0100               	movlb	0	; () banked
 14866  002110  6FCC               	movwf	_TXPower& (0+255),b
 14867                           
 14868                           ; BSR set to: 0
 14869                           ;../app/app_src/application.c: 1345:     if((TXPower < 2) || (TXPower > 13)){
 14870  002112  0E01               	movlw	1
 14871  002114  65CC               	cpfsgt	_TXPower& (0+255),b
 14872  002116  D003               	goto	u17070
 14873                           
 14874                           ; BSR set to: 0
 14875  002118  0E0D               	movlw	13
 14876  00211A  65CC               	cpfsgt	_TXPower& (0+255),b
 14877  00211C  D00B               	goto	l16736
 14878  00211E                     u17070:
 14879                           
 14880                           ; BSR set to: 0
 14881                           ;../app/app_src/application.c: 1346:         TXPower = 13;
 14882  00211E  0E0D               	movlw	13
 14883  002120  6FCC               	movwf	_TXPower& (0+255),b
 14884                           
 14885                           ; BSR set to: 0
 14886                           ;../app/app_src/application.c: 1347:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1,TXPower);
 14887  002122  0E00               	movlw	0
 14888  002124  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 14889  002126  0E1D               	movlw	29
 14890  002128  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 14891  00212A  0060  F330  F008   	movff	_TXPower,DATAEE_WriteByte_Platform@data
 14892  002130  ECF1  F040         	call	_DATAEE_WriteByte_Platform	;wreg free
 14893  002134                     l16736:
 14894                           
 14895                           ;../app/app_src/application.c: 1351:     current_sf = DATAEE_ReadByte_Platform(0 + 0 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 14896  002134  0E00               	movlw	0
 14897  002136  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14898  002138  0E21               	movlw	33
 14899  00213A  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14900  00213C  ECE1  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 14901  002140  0100               	movlb	0	; () banked
 14902  002142  6FCF               	movwf	_current_sf& (0+255),b
 14903                           
 14904                           ; BSR set to: 0
 14905                           ;../app/app_src/application.c: 1352:     if((current_sf < 7) || (current_sf > 12)){
 14906  002144  0E06               	movlw	6
 14907  002146  65CF               	cpfsgt	_current_sf& (0+255),b
 14908  002148  D003               	goto	u17090
 14909                           
 14910                           ; BSR set to: 0
 14911  00214A  0E0C               	movlw	12
 14912  00214C  65CF               	cpfsgt	_current_sf& (0+255),b
 14913  00214E  D00B               	goto	l16746
 14914  002150                     u17090:
 14915                           
 14916                           ; BSR set to: 0
 14917                           ;../app/app_src/application.c: 1353:         current_sf = 7;
 14918  002150  0E07               	movlw	7
 14919  002152  6FCF               	movwf	_current_sf& (0+255),b
 14920                           
 14921                           ; BSR set to: 0
 14922                           ;../app/app_src/application.c: 1354:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1, current_sf);
 14923  002154  0E00               	movlw	0
 14924  002156  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 14925  002158  0E21               	movlw	33
 14926  00215A  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 14927  00215C  0060  F33C  F008   	movff	_current_sf,DATAEE_WriteByte_Platform@data
 14928  002162  ECF1  F040         	call	_DATAEE_WriteByte_Platform	;wreg free
 14929  002166                     l16746:
 14930                           
 14931                           ;../app/app_src/application.c: 1358:     RSSITarget = DATAEE_ReadByte_Platform(0 + 0 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 14932  002166  0E00               	movlw	0
 14933  002168  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14934  00216A  0E1E               	movlw	30
 14935  00216C  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14936  00216E  ECE1  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 14937  002172  0100               	movlb	0	; () banked
 14938  002174  6FF7               	movwf	_RSSITarget& (0+255),b
 14939                           
 14940                           ; BSR set to: 0
 14941                           ;../app/app_src/application.c: 1359:     if((RSSITarget >= -30) || (RSSITarget < -120)){
 14942  002176  51F7               	movf	_RSSITarget& (0+255),w,b
 14943  002178  0A80               	xorlw	128
 14944  00217A  0F9E               	addlw	158
 14945  00217C  B0D8               	btfsc	status,0,c
 14946  00217E  D005               	goto	u17110
 14947                           
 14948                           ; BSR set to: 0
 14949  002180  51F7               	movf	_RSSITarget& (0+255),w,b
 14950  002182  0A80               	xorlw	128
 14951  002184  0FF8               	addlw	248
 14952  002186  B0D8               	btfsc	status,0,c
 14953  002188  D00B               	goto	l16756
 14954  00218A                     u17110:
 14955                           
 14956                           ; BSR set to: 0
 14957                           ;../app/app_src/application.c: 1360:         RSSITarget = -80;
 14958  00218A  0EB0               	movlw	176
 14959  00218C  6FF7               	movwf	_RSSITarget& (0+255),b
 14960                           
 14961                           ; BSR set to: 0
 14962                           ;../app/app_src/application.c: 1361:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1,RSSITarget);
 14963  00218E  0E00               	movlw	0
 14964  002190  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 14965  002192  0E1E               	movlw	30
 14966  002194  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 14967  002196  0060  F3DC  F008   	movff	_RSSITarget,DATAEE_WriteByte_Platform@data
 14968  00219C  ECF1  F040         	call	_DATAEE_WriteByte_Platform	;wreg free
 14969  0021A0                     l16756:
 14970                           
 14971                           ;../app/app_src/application.c: 1365:     i = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1);
 14972  0021A0  0E00               	movlw	0
 14973  0021A2  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 14974  0021A4  0E1F               	movlw	31
 14975  0021A6  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 14976  0021A8  ECE1  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 14977  0021AC  6E36               	movwf	bootLoadApplication@i^0,c
 14978                           
 14979                           ;../app/app_src/application.c: 1366:     if((i > UART_9BIT_EVEN_PARITY) | (UART_7BIT_MOD
      +                          E == i)){
 14980  0021AE  0E04               	movlw	4
 14981  0021B0  6036               	cpfslt	bootLoadApplication@i^0,c
 14982  0021B2  D003               	goto	u17130
 14983  0021B4  0436               	decf	bootLoadApplication@i^0,w,c
 14984  0021B6  A4D8               	btfss	status,2,c
 14985  0021B8  D00A               	goto	l16766
 14986  0021BA                     u17130:
 14987                           
 14988                           ;../app/app_src/application.c: 1367:         i = UART_9BIT_EVEN_PARITY;
 14989  0021BA  0E03               	movlw	3
 14990  0021BC  6E36               	movwf	bootLoadApplication@i^0,c
 14991                           
 14992                           ;../app/app_src/application.c: 1368:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1,UART_9BIT_EVEN_PARITY);
 14993  0021BE  0E00               	movlw	0
 14994  0021C0  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 14995  0021C2  0E1F               	movlw	31
 14996  0021C4  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 14997  0021C6  0E03               	movlw	3
 14998  0021C8  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
 14999  0021CA  ECF1  F040         	call	_DATAEE_WriteByte_Platform	;wreg free
 15000  0021CE                     l16766:
 15001                           
 15002                           ;../app/app_src/application.c: 1371:     set_parity(i);
 15003  0021CE  5036               	movf	bootLoadApplication@i^0,w,c
 15004  0021D0  EC94  F03D         	call	_set_parity
 15005                           
 15006                           ;../app/app_src/application.c: 1374:     i = DATAEE_ReadByte_Platform(0 + 0 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 
      +                          + 1 + 1 + 1 + 1 + 1 + 1 + 1);
 15007  0021D4  0E00               	movlw	0
 15008  0021D6  6E07               	movwf	(DATAEE_ReadByte_Platform@addr+1)^0,c
 15009  0021D8  0E20               	movlw	32
 15010  0021DA  6E06               	movwf	DATAEE_ReadByte_Platform@addr^0,c
 15011  0021DC  ECE1  F02A         	call	_DATAEE_ReadByte_Platform	;wreg free
 15012  0021E0  6E36               	movwf	bootLoadApplication@i^0,c
 15013                           
 15014                           ;../app/app_src/application.c: 1375:     if(i > UART_BAUD_19200){
 15015  0021E2  0E01               	movlw	1
 15016  0021E4  6436               	cpfsgt	bootLoadApplication@i^0,c
 15017  0021E6  D00A               	goto	l16776
 15018                           
 15019                           ;../app/app_src/application.c: 1376:         i = UART_BAUD_19200;
 15020  0021E8  0E01               	movlw	1
 15021  0021EA  6E36               	movwf	bootLoadApplication@i^0,c
 15022                           
 15023                           ;../app/app_src/application.c: 1377:         DATAEE_WriteByte_Platform(0 + 0 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1 + 1
      +                           + 1 + 1 + 1 + 1 + 1 + 1 + 1,UART_BAUD_19200);
 15024  0021EC  0E00               	movlw	0
 15025  0021EE  6E07               	movwf	(DATAEE_WriteByte_Platform@addr+1)^0,c
 15026  0021F0  0E20               	movlw	32
 15027  0021F2  6E06               	movwf	DATAEE_WriteByte_Platform@addr^0,c
 15028  0021F4  0E01               	movlw	1
 15029  0021F6  6E08               	movwf	DATAEE_WriteByte_Platform@data^0,c
 15030  0021F8  ECF1  F040         	call	_DATAEE_WriteByte_Platform	;wreg free
 15031  0021FC                     l16776:
 15032                           
 15033                           ;../app/app_src/application.c: 1379:     set_uart_baud(i);
 15034  0021FC  5036               	movf	bootLoadApplication@i^0,w,c
 15035  0021FE  EC84  F030         	call	_set_uart_baud
 15036                           
 15037                           ;../app/app_src/application.c: 1418:     for(uint8_t buf_id = 0; buf_id < 4; buf_id++){
 15038  002202  0E00               	movlw	0
 15039  002204  6E32               	movwf	bootLoadApplication@buf_id^0,c
 15040  002206                     l16782:
 15041                           
 15042                           ;../app/app_src/application.c: 1419:         tx_buffer[buf_id].free = 1;
 15043  002206  5032               	movf	bootLoadApplication@buf_id^0,w,c
 15044  002208  0D83               	mullw	131
 15045  00220A  0E6A               	movlw	low _tx_buffer
 15046  00220C  24F3               	addwf	243,w,c
 15047  00220E  6ED9               	movwf	fsr2l,c
 15048  002210  0E08               	movlw	high _tx_buffer
 15049  002212  20F4               	addwfc	prodh,w,c
 15050  002214  6EDA               	movwf	fsr2h,c
 15051  002216  84DF               	bsf	indf2,2,c
 15052                           
 15053                           ;../app/app_src/application.c: 1420:     }
 15054  002218  2A32               	incf	bootLoadApplication@buf_id^0,f,c
 15055  00221A  0E03               	movlw	3
 15056  00221C  6432               	cpfsgt	bootLoadApplication@buf_id^0,c
 15057  00221E  D7F3               	goto	l16782
 15058                           
 15059                           ;../app/app_src/application.c: 1421:     for(uint8_t buf_id = 0; buf_id < 4; buf_id++){
 15060  002220  0E00               	movlw	0
 15061  002222  6E33               	movwf	bootLoadApplication@buf_id_954^0,c
 15062  002224                     l16794:
 15063                           
 15064                           ;../app/app_src/application.c: 1422:         rx_buffer[buf_id].free = 1;
 15065  002224  5033               	movf	bootLoadApplication@buf_id_954^0,w,c
 15066  002226  0D7A               	mullw	122
 15067  002228  0E76               	movlw	low _rx_buffer
 15068  00222A  24F3               	addwf	243,w,c
 15069  00222C  6ED9               	movwf	fsr2l,c
 15070  00222E  0E0A               	movlw	high _rx_buffer
 15071  002230  20F4               	addwfc	prodh,w,c
 15072  002232  6EDA               	movwf	fsr2h,c
 15073  002234  80DF               	bsf	indf2,0,c
 15074                           
 15075                           ;../app/app_src/application.c: 1423:     }
 15076  002236  2A33               	incf	bootLoadApplication@buf_id_954^0,f,c
 15077  002238  0E03               	movlw	3
 15078  00223A  6433               	cpfsgt	bootLoadApplication@buf_id_954^0,c
 15079  00223C  D7F3               	goto	l16794
 15080                           
 15081                           ;../app/app_src/application.c: 1424:     CircularBufferInit(&rx_buffer_queue_context,&rx
      +                          _buffer_queue,
 15082  00223E  0ED8               	movlw	low _rx_buffer_queue_context
 15083  002240  6E09               	movwf	CircularBufferInit@ctx^0,c
 15084  002242  0E01               	movlw	high _rx_buffer_queue_context
 15085  002244  6E0A               	movwf	(CircularBufferInit@ctx+1)^0,c
 15086  002246  0EE2               	movlw	low _rx_buffer_queue
 15087  002248  6E0B               	movwf	CircularBufferInit@buf^0,c
 15088  00224A  0E01               	movlw	high _rx_buffer_queue
 15089  00224C  6E0C               	movwf	(CircularBufferInit@buf+1)^0,c
 15090  00224E  0E00               	movlw	0
 15091  002250  6E0E               	movwf	(CircularBufferInit@buf_size+1)^0,c
 15092  002252  0E04               	movlw	4
 15093  002254  6E0D               	movwf	CircularBufferInit@buf_size^0,c
 15094  002256  0E00               	movlw	0
 15095  002258  6E10               	movwf	(CircularBufferInit@element_size+1)^0,c
 15096  00225A  0E01               	movlw	1
 15097  00225C  6E0F               	movwf	CircularBufferInit@element_size^0,c
 15098  00225E  EC8D  F033         	call	_CircularBufferInit	;wreg free
 15099                           
 15100                           ;../app/app_src/application.c: 1426:     temp = (currentAddr0 << 8) | currentAddr1;
 15101  002262  0100               	movlb	0	; () banked
 15102  002264  51F9               	movf	_currentAddr1& (0+255),w,b
 15103  002266  0060  F3E8  F030   	movff	_currentAddr0,??_bootLoadApplication
 15104  00226C  6A31               	clrf	(??_bootLoadApplication+1)^0,c
 15105  00226E  0060  F0C0  F031   	movff	??_bootLoadApplication,??_bootLoadApplication+1
 15106  002274  6A30               	clrf	??_bootLoadApplication^0,c
 15107  002276  1030               	iorwf	??_bootLoadApplication^0,w,c
 15108  002278  6E34               	movwf	bootLoadApplication@temp^0,c
 15109  00227A  5031               	movf	(??_bootLoadApplication+1)^0,w,c
 15110  00227C  6E35               	movwf	(bootLoadApplication@temp+1)^0,c
 15111                           
 15112                           ; BSR set to: 0
 15113                           ;../app/app_src/application.c: 1427:     if(temp > 0x8000){
 15114  00227E  0434               	decf	bootLoadApplication@temp^0,w,c
 15115  002280  0E80               	movlw	128
 15116  002282  5835               	subwfb	(bootLoadApplication@temp+1)^0,w,c
 15117  002284  A0D8               	btfss	status,0,c
 15118  002286  D00A               	goto	l16812
 15119                           
 15120                           ; BSR set to: 0
 15121                           ;../app/app_src/application.c: 1428:         temp -= 0x8000;
 15122  002288  0E00               	movlw	0
 15123  00228A  5E34               	subwf	bootLoadApplication@temp^0,f,c
 15124  00228C  0E80               	movlw	128
 15125  00228E  5A35               	subwfb	(bootLoadApplication@temp+1)^0,f,c
 15126                           
 15127                           ; BSR set to: 0
 15128                           ;../app/app_src/application.c: 1429:         currentAddr0 = (temp >> 8) & 0xFF;
 15129  002290  0060  F0D4  F0FA   	movff	bootLoadApplication@temp+1,_currentAddr0
 15130                           
 15131                           ; BSR set to: 0
 15132                           ;../app/app_src/application.c: 1430:         currentAddr1 = temp & 0xFF;
 15133  002296  0060  F0D0  F0F9   	movff	bootLoadApplication@temp,_currentAddr1
 15134  00229C                     l16812:
 15135                           
 15136                           ; BSR set to: 0
 15137                           ;../app/app_src/application.c: 1432:     NWK_SetAddr(temp);
 15138  00229C  0060  F0D0  F004   	movff	bootLoadApplication@temp,NWK_SetAddr@addr
 15139  0022A2  0060  F0D4  F005   	movff	bootLoadApplication@temp+1,NWK_SetAddr@addr+1
 15140  0022A8  EC9B  F046         	call	_NWK_SetAddr	;wreg free
 15141                           
 15142                           ; BSR set to: 0
 15143                           ;../app/app_src/application.c: 1433:     NWK_SetPanId(0x1234);
 15144  0022AC  0E12               	movlw	18
 15145  0022AE  6E05               	movwf	(NWK_SetPanId@panId+1)^0,c
 15146  0022B0  0E34               	movlw	52
 15147  0022B2  6E04               	movwf	NWK_SetPanId@panId^0,c
 15148  0022B4  EC8C  F046         	call	_NWK_SetPanId	;wreg free
 15149                           
 15150                           ; BSR set to: 0
 15151                           ;../app/app_src/application.c: 1434:     PHY_SetChannel(0x00);
 15152  0022B8  0E00               	movlw	0
 15153  0022BA  EC55  F042         	call	_PHY_SetChannel
 15154                           
 15155                           ; BSR set to: 61
 15156                           ;../app/app_src/application.c: 1435:     PHY_SetRxState(1);
 15157  0022BE  0E01               	movlw	1
 15158  0022C0  EC34  F048         	call	_PHY_SetRxState
 15159                           
 15160                           ; BSR set to: 61
 15161                           ;../app/app_src/application.c: 1436:     NWK_OpenEndpoint(ASCII_EP, appDataInd);
 15162  0022C4  0E84               	movlw	low _appDataInd
 15163  0022C6  6E02               	movwf	NWK_OpenEndpoint@handler^0,c
 15164  0022C8  0E68               	movlw	high _appDataInd
 15165  0022CA  6E03               	movwf	(NWK_OpenEndpoint@handler+1)^0,c
 15166  0022CC  0E01               	movlw	1
 15167  0022CE  EC4B  F046         	call	_NWK_OpenEndpoint
 15168  0022D2  0012               	return		;funcret
 15169  0022D4                     __end_of_bootLoadApplication:
 15170                           	opt callstack 0
 15171                           
 15172 ;; *************** function _set_uart_baud *****************
 15173 ;; Defined at:
 15174 ;;		line 163 in file "../app/app_src/application.c"
 15175 ;; Parameters:    Size  Location     Type
 15176 ;;  i               1    wreg     unsigned char 
 15177 ;; Auto vars:     Size  Location     Type
 15178 ;;  i               1    3[COMRAM] unsigned char 
 15179 ;; Return value:  Size  Location     Type
 15180 ;;                  1    wreg      unsigned char 
 15181 ;; Registers used:
 15182 ;;		wreg, status,2, status,0
 15183 ;; Tracked objects:
 15184 ;;		On entry : 0/0
 15185 ;;		On exit  : 3F/3D
 15186 ;;		Unchanged: 0/0
 15187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15191 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15192 ;;Total ram usage:        3 bytes
 15193 ;; Hardware stack levels used:    1
 15194 ;; Hardware stack levels required when called:    7
 15195 ;; This function calls:
 15196 ;;		Nothing
 15197 ;; This function is called by:
 15198 ;;		_bootLoadApplication
 15199 ;; This function uses a non-reentrant model
 15200 ;;
 15201                           
 15202                           	psect	text83
 15203  006108                     __ptext83:
 15204                           	opt callstack 0
 15205  006108                     _set_uart_baud:
 15206                           	opt callstack 22
 15207                           
 15208                           ;incstack = 0
 15209                           ;set_uart_baud@i stored from wreg
 15210  006108  6E04               	movwf	set_uart_baud@i^0,c
 15211                           
 15212                           ;../app/app_src/application.c: 163: static uint8_t set_uart_baud(uint8_t i);../app/app_s
      +                          rc/application.c: 164: {;../app/app_src/application.c: 165:     U1CON1 &= ~(1<<7);
 15213  00610A  013D               	movlb	61	; () banked
 15214  00610C  9FF3               	bcf	243,7,b	;volatile
 15215                           
 15216                           ;../app/app_src/application.c: 166:     switch(i)
 15217  00610E  D048               	goto	l12802
 15218  006110                     l12750:
 15219                           
 15220                           ; BSR set to: 61
 15221                           ;../app/app_src/application.c: 170:             U1CON0 &=~ (1<<7);
 15222  006110  9FF2               	bcf	242,7,b	;volatile
 15223                           
 15224                           ; BSR set to: 61
 15225                           ;../app/app_src/application.c: 171:             U1BRGL = 0xA0;
 15226  006112  0EA0               	movlw	160
 15227  006114  6FF5               	movwf	245,b	;volatile
 15228                           
 15229                           ; BSR set to: 61
 15230                           ;../app/app_src/application.c: 172:             U1BRGH = 0x01;
 15231  006116  0E01               	movlw	1
 15232  006118  6FF6               	movwf	246,b	;volatile
 15233                           
 15234                           ; BSR set to: 61
 15235                           ;../app/app_src/application.c: 173:             current_baud_rate = 9600;
 15236  00611A  0E80               	movlw	128
 15237  00611C  0101               	movlb	1	; () banked
 15238  00611E  6F42               	movwf	_current_baud_rate& (0+255),b
 15239  006120  0E25               	movlw	37
 15240  006122  6F43               	movwf	(_current_baud_rate+1)& (0+255),b
 15241  006124  0E00               	movlw	0
 15242  006126  6F44               	movwf	(_current_baud_rate+2)& (0+255),b
 15243                           
 15244                           ; BSR set to: 1
 15245                           ;../app/app_src/application.c: 174:             uart_baud_rate = UART_BAUD_9600;
 15246  006128  0E00               	movlw	0
 15247  00612A  D037               	goto	L9
 15248  00612C                     l12760:
 15249                           
 15250                           ; BSR set to: 61
 15251                           ;../app/app_src/application.c: 178:             U1CON0 &=~ (1<<7);
 15252  00612C  9FF2               	bcf	242,7,b	;volatile
 15253                           
 15254                           ; BSR set to: 61
 15255                           ;../app/app_src/application.c: 179:             U1BRGL = 0xCF;
 15256  00612E  0ECF               	movlw	207
 15257  006130  6FF5               	movwf	245,b	;volatile
 15258                           
 15259                           ; BSR set to: 61
 15260                           ;../app/app_src/application.c: 180:             U1BRGH = 0x00;
 15261  006132  0E00               	movlw	0
 15262  006134  6FF6               	movwf	246,b	;volatile
 15263                           
 15264                           ; BSR set to: 61
 15265                           ;../app/app_src/application.c: 181:             current_baud_rate = 19200;
 15266  006136  0E00               	movlw	0
 15267  006138  0101               	movlb	1	; () banked
 15268  00613A  6F42               	movwf	_current_baud_rate& (0+255),b
 15269  00613C  0E4B               	movlw	75
 15270  00613E  6F43               	movwf	(_current_baud_rate+1)& (0+255),b
 15271  006140  0E00               	movlw	0
 15272  006142  6F44               	movwf	(_current_baud_rate+2)& (0+255),b
 15273                           
 15274                           ; BSR set to: 1
 15275                           ;../app/app_src/application.c: 182:             uart_baud_rate = UART_BAUD_19200;
 15276  006144  0E01               	movlw	1
 15277  006146  D029               	goto	L9
 15278  006148                     l12770:
 15279                           
 15280                           ; BSR set to: 61
 15281                           ;../app/app_src/application.c: 186:             U1CON0 &=~ (1<<7);
 15282  006148  9FF2               	bcf	242,7,b	;volatile
 15283                           
 15284                           ; BSR set to: 61
 15285                           ;../app/app_src/application.c: 187:             U1BRGL = 0x67;
 15286  00614A  0E67               	movlw	103
 15287  00614C  6FF5               	movwf	245,b	;volatile
 15288                           
 15289                           ; BSR set to: 61
 15290                           ;../app/app_src/application.c: 188:             U1BRGH = 0x00;
 15291  00614E  0E00               	movlw	0
 15292  006150  6FF6               	movwf	246,b	;volatile
 15293                           
 15294                           ; BSR set to: 61
 15295                           ;../app/app_src/application.c: 189:             current_baud_rate = 38400;
 15296  006152  0E00               	movlw	0
 15297  006154  0101               	movlb	1	; () banked
 15298  006156  6F42               	movwf	_current_baud_rate& (0+255),b
 15299  006158  0E96               	movlw	150
 15300  00615A  6F43               	movwf	(_current_baud_rate+1)& (0+255),b
 15301  00615C  0E00               	movlw	0
 15302  00615E  6F44               	movwf	(_current_baud_rate+2)& (0+255),b
 15303                           
 15304                           ; BSR set to: 1
 15305                           ;../app/app_src/application.c: 190:             uart_baud_rate = UART_BAUD_38400;
 15306  006160  0E02               	movlw	2
 15307  006162  D01B               	goto	L9
 15308  006164                     l12780:
 15309                           
 15310                           ; BSR set to: 61
 15311                           ;../app/app_src/application.c: 194:             U1CON0 |= (1<<7);
 15312  006164  8FF2               	bsf	242,7,b	;volatile
 15313                           
 15314                           ; BSR set to: 61
 15315                           ;../app/app_src/application.c: 195:             U1BRGL = 0x14;
 15316  006166  0E14               	movlw	20
 15317  006168  6FF5               	movwf	245,b	;volatile
 15318                           
 15319                           ; BSR set to: 61
 15320                           ;../app/app_src/application.c: 196:             U1BRGH = 0x01;
 15321  00616A  0E01               	movlw	1
 15322  00616C  6FF6               	movwf	246,b	;volatile
 15323                           
 15324                           ; BSR set to: 61
 15325                           ;../app/app_src/application.c: 197:             current_baud_rate = 57600;
 15326  00616E  0E00               	movlw	0
 15327  006170  0101               	movlb	1	; () banked
 15328  006172  6F42               	movwf	_current_baud_rate& (0+255),b
 15329  006174  0EE1               	movlw	225
 15330  006176  6F43               	movwf	(_current_baud_rate+1)& (0+255),b
 15331  006178  0E00               	movlw	0
 15332  00617A  6F44               	movwf	(_current_baud_rate+2)& (0+255),b
 15333                           
 15334                           ; BSR set to: 1
 15335                           ;../app/app_src/application.c: 198:             uart_baud_rate = UART_BAUD_57600;
 15336  00617C  0E03               	movlw	3
 15337  00617E  D00D               	goto	L9
 15338  006180                     l12790:
 15339                           
 15340                           ; BSR set to: 61
 15341                           ;../app/app_src/application.c: 202:             U1CON0 |= (1<<7);
 15342  006180  8FF2               	bsf	242,7,b	;volatile
 15343                           
 15344                           ; BSR set to: 61
 15345                           ;../app/app_src/application.c: 203:             U1BRGL = 0x89;
 15346  006182  0E89               	movlw	137
 15347  006184  6FF5               	movwf	245,b	;volatile
 15348                           
 15349                           ; BSR set to: 61
 15350                           ;../app/app_src/application.c: 204:             U1BRGH = 0x00;
 15351  006186  0E00               	movlw	0
 15352  006188  6FF6               	movwf	246,b	;volatile
 15353                           
 15354                           ; BSR set to: 61
 15355                           ;../app/app_src/application.c: 205:             current_baud_rate = 115200;
 15356  00618A  0E00               	movlw	0
 15357  00618C  0101               	movlb	1	; () banked
 15358  00618E  6F42               	movwf	_current_baud_rate& (0+255),b
 15359  006190  0EC2               	movlw	194
 15360  006192  6F43               	movwf	(_current_baud_rate+1)& (0+255),b
 15361  006194  0E01               	movlw	1
 15362  006196  6F44               	movwf	(_current_baud_rate+2)& (0+255),b
 15363                           
 15364                           ; BSR set to: 1
 15365                           ;../app/app_src/application.c: 206:             uart_baud_rate = UART_BAUD_115200;
 15366  006198  0E04               	movlw	4
 15367  00619A                     L9:
 15368  00619A  0100               	movlb	0	; () banked
 15369  00619C  6FE2               	movwf	_uart_baud_rate& (0+255),b
 15370                           
 15371                           ;../app/app_src/application.c: 207:             break;
 15372  00619E  D018               	goto	l12804
 15373  0061A0                     l12802:
 15374                           
 15375                           ; BSR set to: 61
 15376  0061A0  5004               	movf	set_uart_baud@i^0,w,c
 15377  0061A2  6E02               	movwf	??_set_uart_baud^0,c
 15378  0061A4  6A03               	clrf	(??_set_uart_baud+1)^0,c
 15379                           
 15380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15381                           ; Switch size 1, requested type "simple"
 15382                           ; Number of cases is 1, Range of values is 0 to 0
 15383                           ; switch strategies available:
 15384                           ; Name         Instructions Cycles
 15385                           ; simple_byte            4     3 (average)
 15386                           ;	Chosen strategy is simple_byte
 15387  0061A6  5003               	movf	(??_set_uart_baud+1)^0,w,c
 15388  0061A8  0A00               	xorlw	0	; case 0
 15389  0061AA  A4D8               	btfss	status,2,c
 15390  0061AC  0012               	return	
 15391                           
 15392                           ; BSR set to: 61
 15393                           ; Switch size 1, requested type "simple"
 15394                           ; Number of cases is 5, Range of values is 0 to 4
 15395                           ; switch strategies available:
 15396                           ; Name         Instructions Cycles
 15397                           ; simple_byte           16     9 (average)
 15398                           ;	Chosen strategy is simple_byte
 15399  0061AE  5002               	movf	??_set_uart_baud^0,w,c
 15400  0061B0  0A00               	xorlw	0	; case 0
 15401  0061B2  B4D8               	btfsc	status,2,c
 15402  0061B4  D7AD               	goto	l12750
 15403  0061B6  0A01               	xorlw	1	; case 1
 15404  0061B8  B4D8               	btfsc	status,2,c
 15405  0061BA  D7B8               	goto	l12760
 15406  0061BC  0A03               	xorlw	3	; case 2
 15407  0061BE  B4D8               	btfsc	status,2,c
 15408  0061C0  D7C3               	goto	l12770
 15409  0061C2  0A01               	xorlw	1	; case 3
 15410  0061C4  B4D8               	btfsc	status,2,c
 15411  0061C6  D7CE               	goto	l12780
 15412  0061C8  0A07               	xorlw	7	; case 4
 15413  0061CA  A4D8               	btfss	status,2,c
 15414  0061CC  0012               	return	
 15415  0061CE  D7D8               	goto	l12790
 15416  0061D0                     l12804:
 15417                           
 15418                           ; BSR set to: 0
 15419                           ;../app/app_src/application.c: 211:     U1CON1 |= (1<<7);
 15420  0061D0  013D               	movlb	61	; () banked
 15421  0061D2  8FF3               	bsf	243,7,b	;volatile
 15422                           
 15423                           ; BSR set to: 61
 15424  0061D4  0012               	return		;funcret
 15425  0061D6                     __end_of_set_uart_baud:
 15426                           	opt callstack 0
 15427                           
 15428 ;; *************** function _set_parity *****************
 15429 ;; Defined at:
 15430 ;;		line 119 in file "../app/app_src/application.c"
 15431 ;; Parameters:    Size  Location     Type
 15432 ;;  parity          1    wreg     unsigned char 
 15433 ;; Auto vars:     Size  Location     Type
 15434 ;;  parity          1    3[COMRAM] unsigned char 
 15435 ;; Return value:  Size  Location     Type
 15436 ;;                  1    wreg      unsigned char 
 15437 ;; Registers used:
 15438 ;;		wreg, status,2, status,0
 15439 ;; Tracked objects:
 15440 ;;		On entry : 0/0
 15441 ;;		On exit  : 0/0
 15442 ;;		Unchanged: 0/0
 15443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15445 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15446 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15447 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15448 ;;Total ram usage:        3 bytes
 15449 ;; Hardware stack levels used:    1
 15450 ;; Hardware stack levels required when called:    7
 15451 ;; This function calls:
 15452 ;;		Nothing
 15453 ;; This function is called by:
 15454 ;;		_cmdSetParity
 15455 ;;		_bootLoadApplication
 15456 ;; This function uses a non-reentrant model
 15457 ;;
 15458                           
 15459                           	psect	text84
 15460  007B28                     __ptext84:
 15461                           	opt callstack 0
 15462  007B28                     _set_parity:
 15463                           	opt callstack 20
 15464                           
 15465                           ; BSR set to: 61
 15466                           ;incstack = 0
 15467                           ;set_parity@parity stored from wreg
 15468  007B28  6E04               	movwf	set_parity@parity^0,c
 15469                           
 15470                           ;../app/app_src/application.c: 119: static uint8_t set_parity(uint8_t parity);../app/app
      +                          _src/application.c: 120: {;../app/app_src/application.c: 121:     if((parity >= UART_PAR
      +                          ITY_SENTINAL) || (UART_7BIT_MODE == parity)){
 15471  007B2A  0E04               	movlw	4
 15472  007B2C  6004               	cpfslt	set_parity@parity^0,c
 15473  007B2E  0012               	return	
 15474  007B30  0404               	decf	set_parity@parity^0,w,c
 15475  007B32  B4D8               	btfsc	status,2,c
 15476  007B34  0012               	return	
 15477                           
 15478                           ;../app/app_src/application.c: 124:     U1CON1 &= 0b01111111;
 15479  007B36  013D               	movlb	61	; () banked
 15480  007B38  9FF3               	bcf	243,7,b	;volatile
 15481                           
 15482                           ; BSR set to: 61
 15483                           ;../app/app_src/application.c: 125:     U1CON0 &= 0b11110000;
 15484  007B3A  0EF0               	movlw	240
 15485  007B3C  17F2               	andwf	242,f,b	;volatile
 15486                           
 15487                           ; BSR set to: 61
 15488                           ;../app/app_src/application.c: 126:     U1CON0 |= (parity & 0b00001111);
 15489  007B3E  5004               	movf	set_parity@parity^0,w,c
 15490  007B40  0B0F               	andlw	15
 15491  007B42  13F2               	iorwf	242,f,b	;volatile
 15492                           
 15493                           ; BSR set to: 61
 15494                           ;../app/app_src/application.c: 127:     U1CON2 &=~ (0b00110000);
 15495  007B44  0ECF               	movlw	207
 15496  007B46  17F4               	andwf	244,f,b	;volatile
 15497                           
 15498                           ; BSR set to: 61
 15499                           ;../app/app_src/application.c: 128:     U1CON1 |= 0b10000000;
 15500  007B48  8FF3               	bsf	243,7,b	;volatile
 15501                           
 15502                           ;../app/app_src/application.c: 129:     switch(parity){
 15503  007B4A  D00C               	goto	l15356
 15504  007B4C                     l15348:
 15505                           
 15506                           ; BSR set to: 61
 15507                           ;../app/app_src/application.c: 131:             uart_parity = UART_8BIT_NO_PARITY;
 15508  007B4C  0E00               	movlw	0
 15509  007B4E  0100               	movlb	0	; () banked
 15510  007B50  6FE1               	movwf	_uart_parity& (0+255),b
 15511                           
 15512                           ;../app/app_src/application.c: 135:             break;
 15513  007B52  0012               	return	
 15514  007B54                     l15350:
 15515                           
 15516                           ; BSR set to: 61
 15517                           ;../app/app_src/application.c: 137:             uart_parity = UART_9BIT_ODD_PARITY;
 15518  007B54  0E02               	movlw	2
 15519  007B56  0100               	movlb	0	; () banked
 15520  007B58  6FE1               	movwf	_uart_parity& (0+255),b
 15521                           
 15522                           ;../app/app_src/application.c: 141:             break;
 15523  007B5A  0012               	return	
 15524  007B5C                     l15352:
 15525                           
 15526                           ; BSR set to: 61
 15527                           ;../app/app_src/application.c: 143:             uart_parity = UART_9BIT_EVEN_PARITY;
 15528  007B5C  0E03               	movlw	3
 15529  007B5E  0100               	movlb	0	; () banked
 15530  007B60  6FE1               	movwf	_uart_parity& (0+255),b
 15531                           
 15532                           ;../app/app_src/application.c: 147:             break;
 15533  007B62  0012               	return	
 15534  007B64                     l15356:
 15535                           
 15536                           ; BSR set to: 61
 15537  007B64  5004               	movf	set_parity@parity^0,w,c
 15538  007B66  6E02               	movwf	??_set_parity^0,c
 15539  007B68  6A03               	clrf	(??_set_parity+1)^0,c
 15540                           
 15541                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15542                           ; Switch size 1, requested type "simple"
 15543                           ; Number of cases is 1, Range of values is 0 to 0
 15544                           ; switch strategies available:
 15545                           ; Name         Instructions Cycles
 15546                           ; simple_byte            4     3 (average)
 15547                           ;	Chosen strategy is simple_byte
 15548  007B6A  5003               	movf	(??_set_parity+1)^0,w,c
 15549  007B6C  0A00               	xorlw	0	; case 0
 15550  007B6E  A4D8               	btfss	status,2,c
 15551  007B70  D7ED               	goto	l15348
 15552                           
 15553                           ; BSR set to: 61
 15554                           ; Switch size 1, requested type "simple"
 15555                           ; Number of cases is 3, Range of values is 0 to 3
 15556                           ; switch strategies available:
 15557                           ; Name         Instructions Cycles
 15558                           ; simple_byte           10     6 (average)
 15559                           ;	Chosen strategy is simple_byte
 15560  007B72  5002               	movf	??_set_parity^0,w,c
 15561  007B74  0A00               	xorlw	0	; case 0
 15562  007B76  B4D8               	btfsc	status,2,c
 15563  007B78  D7E9               	goto	l15348
 15564  007B7A  0A02               	xorlw	2	; case 2
 15565  007B7C  B4D8               	btfsc	status,2,c
 15566  007B7E  D7EA               	goto	l15350
 15567  007B80  0A01               	xorlw	1	; case 3
 15568  007B82  B4D8               	btfsc	status,2,c
 15569  007B84  D7EB               	goto	l15352
 15570  007B86  D7E2               	goto	l15348
 15571  007B88                     __end_of_set_parity:
 15572                           	opt callstack 0
 15573                           
 15574 ;; *************** function _loadMACAddr *****************
 15575 ;; Defined at:
 15576 ;;		line 1284 in file "../app/app_src/application.c"
 15577 ;; Parameters:    Size  Location     Type
 15578 ;;		None
 15579 ;; Auto vars:     Size  Location     Type
 15580 ;;  i               1    5[COMRAM] unsigned char 
 15581 ;; Return value:  Size  Location     Type
 15582 ;;                  1    wreg      void 
 15583 ;; Registers used:
 15584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15585 ;; Tracked objects:
 15586 ;;		On entry : 3F/2
 15587 ;;		On exit  : 0/0
 15588 ;;		Unchanged: 0/0
 15589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15593 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15594 ;;Total ram usage:        1 bytes
 15595 ;; Hardware stack levels used:    1
 15596 ;; Hardware stack levels required when called:    8
 15597 ;; This function calls:
 15598 ;;		_DIA_ReadByte
 15599 ;; This function is called by:
 15600 ;;		_bootLoadApplication
 15601 ;; This function uses a non-reentrant model
 15602 ;;
 15603                           
 15604                           	psect	text85
 15605  008564                     __ptext85:
 15606                           	opt callstack 0
 15607  008564                     _loadMACAddr:
 15608                           	opt callstack 21
 15609                           
 15610                           ; BSR set to: 2
 15611                           ;../app/app_src/application.c: 1287:     for(uint8_t i = 0; i < sizeof(EUIDbyte);i++){
 15612                           
 15613                           ;incstack = 0
 15614  008564  0E00               	movlw	0
 15615  008566  6E06               	movwf	loadMACAddr@i^0,c
 15616  008568                     l12982:
 15617                           
 15618                           ;../app/app_src/application.c: 1288:         EUIDbyte[sizeof(EUIDbyte) - 1 - i] = (uint8
      +                          _t)DIA_ReadByte(0x3F0000 + i);
 15619  008568  5006               	movf	loadMACAddr@i^0,w,c
 15620  00856A  08CD               	sublw	low (_EUIDbyte+11)
 15621  00856C  6ED9               	movwf	fsr2l,c
 15622  00856E  0E00               	movlw	0
 15623  008570  A0D8               	btfss	status,0,c
 15624  008572  2AE8               	incf	wreg,f,c
 15625  008574  0801               	sublw	high (_EUIDbyte+11)
 15626  008576  6EDA               	movwf	fsr2h,c
 15627  008578  0E00               	movlw	0
 15628  00857A  2406               	addwf	loadMACAddr@i^0,w,c
 15629  00857C  6E02               	movwf	DIA_ReadByte@flashAddr^0,c
 15630  00857E  6A03               	clrf	(DIA_ReadByte@flashAddr+1)^0,c
 15631  008580  0E00               	movlw	0
 15632  008582  2203               	addwfc	(DIA_ReadByte@flashAddr+1)^0,f,c
 15633  008584  6A04               	clrf	(DIA_ReadByte@flashAddr+2)^0,c
 15634  008586  0E3F               	movlw	63
 15635  008588  2204               	addwfc	(DIA_ReadByte@flashAddr+2)^0,f,c
 15636  00858A  6A05               	clrf	(DIA_ReadByte@flashAddr+3)^0,c
 15637  00858C  0E00               	movlw	0
 15638  00858E  2205               	addwfc	(DIA_ReadByte@flashAddr+3)^0,f,c
 15639  008590  ECD5  F045         	call	_DIA_ReadByte	;wreg free
 15640  008594  6EDF               	movwf	indf2,c
 15641                           
 15642                           ;../app/app_src/application.c: 1289:     }
 15643  008596  2A06               	incf	loadMACAddr@i^0,f,c
 15644  008598  0E0B               	movlw	11
 15645  00859A  6406               	cpfsgt	loadMACAddr@i^0,c
 15646  00859C  D7E5               	goto	l12982
 15647  00859E  0012               	return	
 15648  0085A0                     __end_of_loadMACAddr:
 15649                           	opt callstack 0
 15650                           
 15651 ;; *************** function _DIA_ReadByte *****************
 15652 ;; Defined at:
 15653 ;;		line 212 in file "mcc_generated_files/memory.c"
 15654 ;; Parameters:    Size  Location     Type
 15655 ;;  flashAddr       4    1[COMRAM] unsigned long 
 15656 ;; Auto vars:     Size  Location     Type
 15657 ;;		None
 15658 ;; Return value:  Size  Location     Type
 15659 ;;                  1    wreg      unsigned char 
 15660 ;; Registers used:
 15661 ;;		wreg, status,2
 15662 ;; Tracked objects:
 15663 ;;		On entry : 0/2
 15664 ;;		On exit  : 0/0
 15665 ;;		Unchanged: 0/0
 15666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15667 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15670 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15671 ;;Total ram usage:        4 bytes
 15672 ;; Hardware stack levels used:    1
 15673 ;; Hardware stack levels required when called:    7
 15674 ;; This function calls:
 15675 ;;		Nothing
 15676 ;; This function is called by:
 15677 ;;		_loadMACAddr
 15678 ;; This function uses a non-reentrant model
 15679 ;;
 15680                           
 15681                           	psect	text86
 15682  008BAA                     __ptext86:
 15683                           	opt callstack 0
 15684  008BAA                     _DIA_ReadByte:
 15685                           	opt callstack 21
 15686                           
 15687                           ;mcc_generated_files/memory.c: 212: uint8_t DIA_ReadByte(uint32_t flashAddr);mcc_generat
      +                          ed_files/memory.c: 213: {;mcc_generated_files/memory.c: 214:  NVMCON1bits.NVMREG = 1;
 15688                           
 15689                           ;incstack = 0
 15690  008BAA  0139               	movlb	57	; () banked
 15691  008BAC  51E5               	movf	229,w,b	;volsfr
 15692  008BAE  0B3F               	andlw	-193
 15693  008BB0  0940               	iorlw	64
 15694  008BB2  6FE5               	movwf	229,b	;volsfr
 15695                           
 15696                           ; BSR set to: 57
 15697                           ;mcc_generated_files/memory.c: 215:     TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 
      +                          16);
 15698  008BB4  0060  F013  FFF8   	movff	DIA_ReadByte@flashAddr+2,tblptru	;volatile
 15699                           
 15700                           ; BSR set to: 57
 15701                           ;mcc_generated_files/memory.c: 216:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8
      +                          );
 15702  008BBA  0060  F00F  FFF7   	movff	DIA_ReadByte@flashAddr+1,tblptrh	;volatile
 15703                           
 15704                           ; BSR set to: 57
 15705                           ;mcc_generated_files/memory.c: 217:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 15706  008BC0  0060  F00B  FFF6   	movff	DIA_ReadByte@flashAddr,tblptrl	;volatile
 15707  008BC6  0008               	tblrd		*	;# 
 15708                           
 15709                           ;mcc_generated_files/memory.c: 221:     return (TABLAT);
 15710  008BC8  50F5               	movf	245,w,c	;volatile
 15711  008BCA  0012               	return		;funcret
 15712  008BCC                     __end_of_DIA_ReadByte:
 15713                           	opt callstack 0
 15714                           
 15715 ;; *************** function _crc16_app *****************
 15716 ;; Defined at:
 15717 ;;		line 4 in file "../app/app_src/crc.c"
 15718 ;; Parameters:    Size  Location     Type
 15719 ;;  dptr            2   18[COMRAM] PTR void 
 15720 ;;		 -> EUIDbyte(12), 
 15721 ;;  len             2   20[COMRAM] unsigned short 
 15722 ;;  seed            2   22[COMRAM] unsigned short 
 15723 ;; Auto vars:     Size  Location     Type
 15724 ;;  i               2   28[COMRAM] unsigned short 
 15725 ;;  ptr             2   26[COMRAM] PTR unsigned char 
 15726 ;;		 -> EUIDbyte(12), 
 15727 ;;  result          2   24[COMRAM] unsigned short 
 15728 ;; Return value:  Size  Location     Type
 15729 ;;                  2   18[COMRAM] unsigned short 
 15730 ;; Registers used:
 15731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15732 ;; Tracked objects:
 15733 ;;		On entry : 0/2
 15734 ;;		On exit  : 3F/39
 15735 ;;		Unchanged: 0/0
 15736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15737 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15738 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15740 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15741 ;;Total ram usage:       12 bytes
 15742 ;; Hardware stack levels used:    1
 15743 ;; Hardware stack levels required when called:    9
 15744 ;; This function calls:
 15745 ;;		_CRC_8BitDataWrite
 15746 ;;		_CRC_CalculatedResultGet
 15747 ;; This function is called by:
 15748 ;;		_bootLoadApplication
 15749 ;; This function uses a non-reentrant model
 15750 ;;
 15751                           
 15752                           	psect	text87
 15753  0073EA                     __ptext87:
 15754                           	opt callstack 0
 15755  0073EA                     _crc16_app:
 15756                           	opt callstack 20
 15757                           
 15758                           ;../app/app_src/crc.c: 5:     uint8_t* ptr = (uint8_t*)dptr;
 15759                           
 15760                           ;incstack = 0
 15761  0073EA  0060  F04C  F01B   	movff	crc16_app@dptr,crc16_app@ptr
 15762  0073F0  0060  F050  F01C   	movff	crc16_app@dptr+1,crc16_app@ptr+1
 15763                           
 15764                           ;../app/app_src/crc.c: 6:     uint16_t result;;../app/app_src/crc.c: 8:     CRCACCL = se
      +                          ed;
 15765  0073F6  0060  F05F  F962   	movff	crc16_app@seed,14690	;volatile
 15766                           
 15767                           ;../app/app_src/crc.c: 9:     CRCACCH = seed >> 8;
 15768  0073FC  0060  F063  F963   	movff	crc16_app@seed+1,14691	;volatile
 15769                           
 15770                           ;../app/app_src/crc.c: 12:     CRCCON0bits.EN = 1;
 15771  007402  0139               	movlb	57	; () banked
 15772  007404  8F68               	bsf	104,7,b	;volatile
 15773                           
 15774                           ; BSR set to: 57
 15775                           ;../app/app_src/crc.c: 13:     CRCCON0bits.CRCGO = 1;
 15776  007406  8D68               	bsf	104,6,b	;volatile
 15777                           
 15778                           ; BSR set to: 57
 15779                           ;../app/app_src/crc.c: 14:     for(uint16_t i = 0; i < len; i++ )
 15780  007408  0E00               	movlw	0
 15781  00740A  6E1E               	movwf	(crc16_app@i+1)^0,c
 15782  00740C  0E00               	movlw	0
 15783  00740E  6E1D               	movwf	crc16_app@i^0,c
 15784  007410  D00F               	goto	l13006
 15785  007412                     l647:
 15786                           
 15787                           ; BSR set to: 57
 15788  007412  B168               	btfsc	104,0,b	;volatile
 15789  007414  D7FE               	goto	l647
 15790                           
 15791                           ; BSR set to: 57
 15792                           ;../app/app_src/crc.c: 17:         CRC_8BitDataWrite(*ptr);
 15793  007416  0060  F06F  FFD9   	movff	crc16_app@ptr,fsr2l
 15794  00741C  0060  F073  FFDA   	movff	crc16_app@ptr+1,fsr2h
 15795  007422  50DF               	movf	indf2,w,c
 15796  007424  ECBD  F047         	call	_CRC_8BitDataWrite
 15797                           
 15798                           ; BSR set to: 57
 15799                           ;../app/app_src/crc.c: 18:         ptr++;
 15800  007428  4A1B               	infsnz	crc16_app@ptr^0,f,c
 15801  00742A  2A1C               	incf	(crc16_app@ptr+1)^0,f,c
 15802                           
 15803                           ; BSR set to: 57
 15804                           ;../app/app_src/crc.c: 19:     }
 15805  00742C  4A1D               	infsnz	crc16_app@i^0,f,c
 15806  00742E  2A1E               	incf	(crc16_app@i+1)^0,f,c
 15807  007430                     l13006:
 15808                           
 15809                           ; BSR set to: 57
 15810  007430  5015               	movf	crc16_app@len^0,w,c
 15811  007432  5C1D               	subwf	crc16_app@i^0,w,c
 15812  007434  5016               	movf	(crc16_app@len+1)^0,w,c
 15813  007436  581E               	subwfb	(crc16_app@i+1)^0,w,c
 15814  007438  A0D8               	btfss	status,0,c
 15815  00743A  D7EB               	goto	l647
 15816  00743C                     u12210:
 15817                           
 15818                           ; BSR set to: 57
 15819  00743C  BB68               	btfsc	104,5,b	;volatile
 15820  00743E  D7FE               	goto	u12210
 15821                           
 15822                           ; BSR set to: 57
 15823                           ;../app/app_src/crc.c: 22:     result = CRC_CalculatedResultGet(0,0);
 15824  007440  0E00               	movlw	0
 15825  007442  6E0A               	movwf	(CRC_CalculatedResultGet@xorValue+1)^0,c
 15826  007444  0E00               	movlw	0
 15827  007446  6E09               	movwf	CRC_CalculatedResultGet@xorValue^0,c
 15828  007448  0E00               	movlw	0
 15829  00744A  ECB4  F02F         	call	_CRC_CalculatedResultGet
 15830  00744E  0060  F024  F019   	movff	?_CRC_CalculatedResultGet,crc16_app@result
 15831  007454  0060  F028  F01A   	movff	?_CRC_CalculatedResultGet+1,crc16_app@result+1
 15832                           
 15833                           ;../app/app_src/crc.c: 23:     CRCCON0bits.CRCGO = 0;
 15834  00745A  0139               	movlb	57	; () banked
 15835  00745C  9D68               	bcf	104,6,b	;volatile
 15836                           
 15837                           ; BSR set to: 57
 15838                           ;../app/app_src/crc.c: 24:     CRCCON0bits.EN = 0;
 15839  00745E  9F68               	bcf	104,7,b	;volatile
 15840                           
 15841                           ; BSR set to: 57
 15842                           ;../app/app_src/crc.c: 25:     return(result);
 15843  007460  0060  F064  F013   	movff	crc16_app@result,?_crc16_app
 15844  007466  0060  F068  F014   	movff	crc16_app@result+1,?_crc16_app+1
 15845                           
 15846                           ; BSR set to: 57
 15847  00746C  0012               	return		;funcret
 15848  00746E                     __end_of_crc16_app:
 15849                           	opt callstack 0
 15850                           
 15851 ;; *************** function _CRC_CalculatedResultGet *****************
 15852 ;; Defined at:
 15853 ;;		line 159 in file "mcc_generated_files/crc.c"
 15854 ;; Parameters:    Size  Location     Type
 15855 ;;  reverse         1    wreg     _Bool 
 15856 ;;  xorValue        2    8[COMRAM] unsigned short 
 15857 ;; Auto vars:     Size  Location     Type
 15858 ;;  reverse         1   15[COMRAM] _Bool 
 15859 ;;  result          2   16[COMRAM] unsigned short 
 15860 ;;  mask            2   13[COMRAM] unsigned short 
 15861 ;; Return value:  Size  Location     Type
 15862 ;;                  2    8[COMRAM] unsigned short 
 15863 ;; Registers used:
 15864 ;;		wreg, status,2, status,0, cstack
 15865 ;; Tracked objects:
 15866 ;;		On entry : 3F/39
 15867 ;;		On exit  : 0/0
 15868 ;;		Unchanged: 0/0
 15869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15870 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15871 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15872 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15873 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15874 ;;Total ram usage:       10 bytes
 15875 ;; Hardware stack levels used:    1
 15876 ;; Hardware stack levels required when called:    8
 15877 ;; This function calls:
 15878 ;;		_CRC_ReverseValue
 15879 ;; This function is called by:
 15880 ;;		_crc16_app
 15881 ;; This function uses a non-reentrant model
 15882 ;;
 15883                           
 15884                           	psect	text88
 15885  005F68                     __ptext88:
 15886                           	opt callstack 0
 15887  005F68                     _CRC_CalculatedResultGet:
 15888                           	opt callstack 20
 15889                           
 15890                           ; BSR set to: 57
 15891                           ;incstack = 0
 15892                           ;CRC_CalculatedResultGet@reverse stored from wreg
 15893  005F68  6E10               	movwf	CRC_CalculatedResultGet@reverse^0,c
 15894                           
 15895                           ;mcc_generated_files/crc.c: 159: uint16_t CRC_CalculatedResultGet(_Bool reverse, uint16_
      +                          t xorValue);mcc_generated_files/crc.c: 160: {;mcc_generated_files/crc.c: 161:     uint16
      +                          _t result,mask;;mcc_generated_files/crc.c: 164:      CRCCON0bits.CRCGO = 0;
 15896  005F6A  0139               	movlb	57	; () banked
 15897  005F6C  9D68               	bcf	104,6,b	;volatile
 15898                           
 15899                           ;mcc_generated_files/crc.c: 165:      PIR0bits.CRCIF = 0;
 15900  005F6E  9DA0               	bcf	160,6,b	;volatile
 15901                           
 15902                           ; BSR set to: 57
 15903                           ;mcc_generated_files/crc.c: 166:      CRCCON1bits.DLEN= CRCCON1bits.PLEN;
 15904  005F70  5169               	movf	105,w,b	;volatile
 15905  005F72  0B0F               	andlw	15
 15906  005F74  6E0B               	movwf	??_CRC_CalculatedResultGet^0,c
 15907  005F76  3A0B               	swapf	??_CRC_CalculatedResultGet^0,f,c
 15908  005F78  5169               	movf	105,w,b	;volatile
 15909  005F7A  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 15910  005F7C  0B0F               	andlw	-241
 15911  005F7E  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 15912  005F80  6F69               	movwf	105,b	;volatile
 15913                           
 15914                           ;mcc_generated_files/crc.c: 168:      if(crcObj.polyWidth > 8)
 15915  005F82  0E08               	movlw	8
 15916  005F84  0100               	movlb	0	; () banked
 15917  005F86  65ED               	cpfsgt	(_crcObj+1)& (0+255),b
 15918  005F88  D005               	goto	l12346
 15919                           
 15920                           ; BSR set to: 0
 15921                           ;mcc_generated_files/crc.c: 169:      {;mcc_generated_files/crc.c: 170:          CRCDATH
      +                           = 0;
 15922  005F8A  0E00               	movlw	0
 15923  005F8C  0139               	movlb	57	; () banked
 15924  005F8E  6F61               	movwf	97,b	;volatile
 15925                           
 15926                           ;mcc_generated_files/crc.c: 171:          CRCDATL = 0;
 15927  005F90  0E00               	movlw	0
 15928  005F92  D002               	goto	L10
 15929  005F94                     l12346:
 15930                           
 15931                           ; BSR set to: 0
 15932                           ;mcc_generated_files/crc.c: 174:      {;mcc_generated_files/crc.c: 175:          CRCDATL
      +                           = 0;
 15933  005F94  0E00               	movlw	0
 15934  005F96  0139               	movlb	57	; () banked
 15935  005F98                     L10:
 15936  005F98  6F60               	movwf	96,b	;volatile
 15937                           
 15938                           ; BSR set to: 57
 15939                           ;mcc_generated_files/crc.c: 178:      CRCCON0bits.CRCGO = 1;
 15940  005F9A  8D68               	bsf	104,6,b	;volatile
 15941  005F9C                     l1653:
 15942                           
 15943                           ; BSR set to: 57
 15944  005F9C  ADA0               	btfss	160,6,b	;volatile
 15945  005F9E  D7FE               	goto	l1653
 15946                           
 15947                           ; BSR set to: 57
 15948                           ;mcc_generated_files/crc.c: 180:      PIR0bits.CRCIF = 0;
 15949  005FA0  9DA0               	bcf	160,6,b	;volatile
 15950                           
 15951                           ;mcc_generated_files/crc.c: 182:      CRCCON0bits.CRCGO = 0;
 15952  005FA2  9D68               	bcf	104,6,b	;volatile
 15953                           
 15954                           ; BSR set to: 57
 15955                           ;mcc_generated_files/crc.c: 183:      CRCCON1bits.DLEN = (uint8_t)(crcObj.dataWidth - 1)
      +                          ;
 15956  005FA4  0060  F3B0  F00B   	movff	_crcObj,??_CRC_CalculatedResultGet
 15957  005FAA  0EFF               	movlw	255
 15958  005FAC  260B               	addwf	??_CRC_CalculatedResultGet^0,f,c
 15959  005FAE  3A0B               	swapf	??_CRC_CalculatedResultGet^0,f,c
 15960  005FB0  5169               	movf	105,w,b	;volatile
 15961  005FB2  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 15962  005FB4  0B0F               	andlw	-241
 15963  005FB6  180B               	xorwf	??_CRC_CalculatedResultGet^0,w,c
 15964  005FB8  6F69               	movwf	105,b	;volatile
 15965                           
 15966                           ; BSR set to: 57
 15967                           ;mcc_generated_files/crc.c: 185:      result = ((uint16_t)CRCACCH << 8)|CRCACCL;
 15968  005FBA  5163               	movf	99,w,b	;volatile
 15969  005FBC  6E0B               	movwf	??_CRC_CalculatedResultGet^0,c
 15970  005FBE  5162               	movf	98,w,b	;volatile
 15971  005FC0  6E11               	movwf	CRC_CalculatedResultGet@result^0,c
 15972  005FC2  0060  F02C  F012   	movff	??_CRC_CalculatedResultGet,CRC_CalculatedResultGet@result+1
 15973                           
 15974                           ; BSR set to: 57
 15975                           ;mcc_generated_files/crc.c: 186:      if(crcObj.polyWidth < 16)
 15976  005FC8  0E10               	movlw	16
 15977  005FCA  0100               	movlb	0	; () banked
 15978  005FCC  61ED               	cpfslt	(_crcObj+1)& (0+255),b
 15979  005FCE  D018               	goto	l12358
 15980                           
 15981                           ; BSR set to: 0
 15982                           ;mcc_generated_files/crc.c: 187:      {;mcc_generated_files/crc.c: 189:         mask = (
      +                          uint16_t)((1 << crcObj.polyWidth) - 1);
 15983  005FD0  0060  F3B4  F00B   	movff	_crcObj+1,??_CRC_CalculatedResultGet
 15984  005FD6  0E01               	movlw	1
 15985  005FD8  6E0C               	movwf	(??_CRC_CalculatedResultGet+1)^0,c
 15986  005FDA  0E00               	movlw	0
 15987  005FDC  6E0D               	movwf	(??_CRC_CalculatedResultGet+2)^0,c
 15988  005FDE  2A0B               	incf	??_CRC_CalculatedResultGet^0,f,c
 15989  005FE0  D003               	goto	u11404
 15990  005FE2                     u11405:
 15991  005FE2  90D8               	bcf	status,0,c
 15992  005FE4  360C               	rlcf	(??_CRC_CalculatedResultGet+1)^0,f,c
 15993  005FE6  360D               	rlcf	(??_CRC_CalculatedResultGet+2)^0,f,c
 15994  005FE8                     u11404:
 15995  005FE8  2E0B               	decfsz	??_CRC_CalculatedResultGet^0,f,c
 15996  005FEA  D7FB               	goto	u11405
 15997  005FEC  0EFF               	movlw	255
 15998  005FEE  240C               	addwf	(??_CRC_CalculatedResultGet+1)^0,w,c
 15999  005FF0  6E0E               	movwf	CRC_CalculatedResultGet@mask^0,c
 16000  005FF2  0EFF               	movlw	255
 16001  005FF4  200D               	addwfc	(??_CRC_CalculatedResultGet+2)^0,w,c
 16002  005FF6  6E0F               	movwf	(CRC_CalculatedResultGet@mask+1)^0,c
 16003                           
 16004                           ;mcc_generated_files/crc.c: 190:         result &= mask;
 16005  005FF8  500E               	movf	CRC_CalculatedResultGet@mask^0,w,c
 16006  005FFA  1611               	andwf	CRC_CalculatedResultGet@result^0,f,c
 16007  005FFC  500F               	movf	(CRC_CalculatedResultGet@mask+1)^0,w,c
 16008  005FFE  1612               	andwf	(CRC_CalculatedResultGet@result+1)^0,f,c
 16009  006000                     l12358:
 16010                           
 16011                           ;mcc_generated_files/crc.c: 193:     if(reverse)
 16012  006000  5010               	movf	CRC_CalculatedResultGet@reverse^0,w,c
 16013  006002  B4D8               	btfsc	status,2,c
 16014  006004  D00E               	goto	l12362
 16015                           
 16016                           ;mcc_generated_files/crc.c: 194:         result = CRC_ReverseValue(result);
 16017  006006  0060  F044  F002   	movff	CRC_CalculatedResultGet@result,CRC_ReverseValue@crc
 16018  00600C  0060  F048  F003   	movff	CRC_CalculatedResultGet@result+1,CRC_ReverseValue@crc+1
 16019  006012  EC7E  F03E         	call	_CRC_ReverseValue	;wreg free
 16020  006016  0060  F008  F011   	movff	?_CRC_ReverseValue,CRC_CalculatedResultGet@result
 16021  00601C  0060  F00C  F012   	movff	?_CRC_ReverseValue+1,CRC_CalculatedResultGet@result+1
 16022  006022                     l12362:
 16023                           
 16024                           ;mcc_generated_files/crc.c: 196:     result ^= xorValue;
 16025  006022  5009               	movf	CRC_CalculatedResultGet@xorValue^0,w,c
 16026  006024  1A11               	xorwf	CRC_CalculatedResultGet@result^0,f,c
 16027  006026  500A               	movf	(CRC_CalculatedResultGet@xorValue+1)^0,w,c
 16028  006028  1A12               	xorwf	(CRC_CalculatedResultGet@result+1)^0,f,c
 16029                           
 16030                           ;mcc_generated_files/crc.c: 198:     return result;
 16031  00602A  0060  F044  F009   	movff	CRC_CalculatedResultGet@result,?_CRC_CalculatedResultGet
 16032  006030  0060  F048  F00A   	movff	CRC_CalculatedResultGet@result+1,?_CRC_CalculatedResultGet+1
 16033  006036  0012               	return		;funcret
 16034  006038                     __end_of_CRC_CalculatedResultGet:
 16035                           	opt callstack 0
 16036                           
 16037 ;; *************** function _CRC_ReverseValue *****************
 16038 ;; Defined at:
 16039 ;;		line 138 in file "mcc_generated_files/crc.c"
 16040 ;; Parameters:    Size  Location     Type
 16041 ;;  crc             2    1[COMRAM] unsigned short 
 16042 ;; Auto vars:     Size  Location     Type
 16043 ;;  mask            2    6[COMRAM] unsigned short 
 16044 ;;  reverse         2    4[COMRAM] unsigned short 
 16045 ;; Return value:  Size  Location     Type
 16046 ;;                  2    1[COMRAM] unsigned short 
 16047 ;; Registers used:
 16048 ;;		wreg, status,2, status,0
 16049 ;; Tracked objects:
 16050 ;;		On entry : 0/0
 16051 ;;		On exit  : 0/0
 16052 ;;		Unchanged: 0/0
 16053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16055 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16056 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16057 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16058 ;;Total ram usage:        7 bytes
 16059 ;; Hardware stack levels used:    1
 16060 ;; Hardware stack levels required when called:    7
 16061 ;; This function calls:
 16062 ;;		Nothing
 16063 ;; This function is called by:
 16064 ;;		_CRC_CalculatedResultGet
 16065 ;; This function uses a non-reentrant model
 16066 ;;
 16067                           
 16068                           	psect	text89
 16069  007CFC                     __ptext89:
 16070                           	opt callstack 0
 16071  007CFC                     _CRC_ReverseValue:
 16072                           	opt callstack 20
 16073                           
 16074                           ;mcc_generated_files/crc.c: 138: static uint16_t CRC_ReverseValue(uint16_t crc);mcc_gene
      +                          rated_files/crc.c: 139: {;mcc_generated_files/crc.c: 140:     uint16_t mask;;mcc_generat
      +                          ed_files/crc.c: 141:     uint16_t reverse;;mcc_generated_files/crc.c: 143:     mask = 1;
 16075                           
 16076                           ;incstack = 0
 16077  007CFC  0E00               	movlw	0
 16078  007CFE  6E08               	movwf	(CRC_ReverseValue@mask+1)^0,c
 16079  007D00  0E01               	movlw	1
 16080  007D02  6E07               	movwf	CRC_ReverseValue@mask^0,c
 16081                           
 16082                           ;mcc_generated_files/crc.c: 144:     mask <<= crcObj.polyWidth - 1;
 16083  007D04  0060  F3B4  F004   	movff	_crcObj+1,??_CRC_ReverseValue
 16084  007D0A  0EFF               	movlw	255
 16085  007D0C  2604               	addwf	??_CRC_ReverseValue^0,f,c
 16086  007D0E  2804               	incf	??_CRC_ReverseValue^0,w,c
 16087  007D10  D003               	goto	u10370
 16088  007D12                     u10375:
 16089  007D12  90D8               	bcf	status,0,c
 16090  007D14  3607               	rlcf	CRC_ReverseValue@mask^0,f,c
 16091  007D16  3608               	rlcf	(CRC_ReverseValue@mask+1)^0,f,c
 16092  007D18                     u10370:
 16093  007D18  2EE8               	decfsz	wreg,f,c
 16094  007D1A  D7FB               	goto	u10375
 16095                           
 16096                           ;mcc_generated_files/crc.c: 145:     reverse = 0;
 16097  007D1C  0E00               	movlw	0
 16098  007D1E  6E06               	movwf	(CRC_ReverseValue@reverse+1)^0,c
 16099  007D20  0E00               	movlw	0
 16100  007D22  6E05               	movwf	CRC_ReverseValue@reverse^0,c
 16101                           
 16102                           ;mcc_generated_files/crc.c: 147:     while(crc)
 16103  007D24  D00C               	goto	l1644
 16104  007D26                     l1645:
 16105                           
 16106                           ;mcc_generated_files/crc.c: 148:     {;mcc_generated_files/crc.c: 149:         if(crc & 
      +                          0x01)
 16107  007D26  A002               	btfss	CRC_ReverseValue@crc^0,0,c
 16108  007D28  D004               	goto	l11584
 16109                           
 16110                           ;mcc_generated_files/crc.c: 150:         {;mcc_generated_files/crc.c: 151:             r
      +                          everse |= mask;
 16111  007D2A  5007               	movf	CRC_ReverseValue@mask^0,w,c
 16112  007D2C  1205               	iorwf	CRC_ReverseValue@reverse^0,f,c
 16113  007D2E  5008               	movf	(CRC_ReverseValue@mask+1)^0,w,c
 16114  007D30  1206               	iorwf	(CRC_ReverseValue@reverse+1)^0,f,c
 16115  007D32                     l11584:
 16116                           
 16117                           ;mcc_generated_files/crc.c: 153:         mask >>= 1;
 16118  007D32  90D8               	bcf	status,0,c
 16119  007D34  3208               	rrcf	(CRC_ReverseValue@mask+1)^0,f,c
 16120  007D36  3207               	rrcf	CRC_ReverseValue@mask^0,f,c
 16121                           
 16122                           ;mcc_generated_files/crc.c: 154:         crc >>= 1;
 16123  007D38  90D8               	bcf	status,0,c
 16124  007D3A  3203               	rrcf	(CRC_ReverseValue@crc+1)^0,f,c
 16125  007D3C  3202               	rrcf	CRC_ReverseValue@crc^0,f,c
 16126  007D3E                     l1644:
 16127                           
 16128                           ;mcc_generated_files/crc.c: 147:     while(crc)
 16129  007D3E  5002               	movf	CRC_ReverseValue@crc^0,w,c
 16130  007D40  1003               	iorwf	(CRC_ReverseValue@crc+1)^0,w,c
 16131  007D42  A4D8               	btfss	status,2,c
 16132  007D44  D7F0               	goto	l1645
 16133                           
 16134                           ;mcc_generated_files/crc.c: 156:     return reverse;
 16135  007D46  0060  F014  F002   	movff	CRC_ReverseValue@reverse,?_CRC_ReverseValue
 16136  007D4C  0060  F018  F003   	movff	CRC_ReverseValue@reverse+1,?_CRC_ReverseValue+1
 16137  007D52  0012               	return		;funcret
 16138  007D54                     __end_of_CRC_ReverseValue:
 16139                           	opt callstack 0
 16140                           
 16141 ;; *************** function _CRC_8BitDataWrite *****************
 16142 ;; Defined at:
 16143 ;;		line 125 in file "mcc_generated_files/crc.c"
 16144 ;; Parameters:    Size  Location     Type
 16145 ;;  data            1    wreg     unsigned char 
 16146 ;; Auto vars:     Size  Location     Type
 16147 ;;  data            1    1[COMRAM] unsigned char 
 16148 ;; Return value:  Size  Location     Type
 16149 ;;                  1    wreg      _Bool 
 16150 ;; Registers used:
 16151 ;;		wreg
 16152 ;; Tracked objects:
 16153 ;;		On entry : 3F/39
 16154 ;;		On exit  : 3F/39
 16155 ;;		Unchanged: 0/0
 16156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16158 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16160 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16161 ;;Total ram usage:        1 bytes
 16162 ;; Hardware stack levels used:    1
 16163 ;; Hardware stack levels required when called:    7
 16164 ;; This function calls:
 16165 ;;		Nothing
 16166 ;; This function is called by:
 16167 ;;		_crc16_app
 16168 ;; This function uses a non-reentrant model
 16169 ;;
 16170                           
 16171                           	psect	text90
 16172  008F7A                     __ptext90:
 16173                           	opt callstack 0
 16174  008F7A                     _CRC_8BitDataWrite:
 16175                           	opt callstack 21
 16176                           
 16177                           ;incstack = 0
 16178                           ;CRC_8BitDataWrite@data stored from wreg
 16179  008F7A  6E02               	movwf	CRC_8BitDataWrite@data^0,c
 16180                           
 16181                           ;mcc_generated_files/crc.c: 125: _Bool CRC_8BitDataWrite(uint8_t data);mcc_generated_fil
      +                          es/crc.c: 126: {;mcc_generated_files/crc.c: 127:     if(!CRCCON0bits.FULL)
 16182  008F7C  0139               	movlb	57	; () banked
 16183  008F7E  B168               	btfsc	104,0,b	;volatile
 16184  008F80  0012               	return	
 16185                           
 16186                           ; BSR set to: 57
 16187                           ;mcc_generated_files/crc.c: 128:     {;mcc_generated_files/crc.c: 129:         CRCDATL =
      +                           data;
 16188  008F82  0060  F00B  F960   	movff	CRC_8BitDataWrite@data,14688	;volatile
 16189                           
 16190                           ; BSR set to: 57
 16191  008F88  0012               	return		;funcret
 16192  008F8A                     __end_of_CRC_8BitDataWrite:
 16193                           	opt callstack 0
 16194                           
 16195 ;; *************** function _PHY_SetRxState *****************
 16196 ;; Defined at:
 16197 ;;		line 814 in file "../phy/sx1216/phy_src/phy.c"
 16198 ;; Parameters:    Size  Location     Type
 16199 ;;  rx              1    wreg     _Bool 
 16200 ;; Auto vars:     Size  Location     Type
 16201 ;;  rx              1    0[COMRAM] _Bool 
 16202 ;; Return value:  Size  Location     Type
 16203 ;;                  1    wreg      void 
 16204 ;; Registers used:
 16205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16206 ;; Tracked objects:
 16207 ;;		On entry : 3F/3D
 16208 ;;		On exit  : 3F/3D
 16209 ;;		Unchanged: 0/0
 16210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16215 ;;Total ram usage:        0 bytes
 16216 ;; Hardware stack levels used:    1
 16217 ;; Hardware stack levels required when called:   13
 16218 ;; This function calls:
 16219 ;;		_receive
 16220 ;; This function is called by:
 16221 ;;		_bootLoadApplication
 16222 ;; This function uses a non-reentrant model
 16223 ;;
 16224                           
 16225                           	psect	text91
 16226  009068                     __ptext91:
 16227                           	opt callstack 0
 16228  009068                     _PHY_SetRxState:
 16229                           	opt callstack 16
 16230                           
 16231                           ; BSR set to: 61
 16232                           ;../phy/sx1216/phy_src/phy.c: 815:     receive(0);
 16233                           
 16234                           ; BSR set to: 57
 16235                           ;incstack = 0
 16236  009068  0E00               	movlw	0
 16237  00906A  EC74  F042         	call	_receive
 16238                           
 16239                           ; BSR set to: 61
 16240  00906E  0012               	return		;funcret
 16241  009070                     __end_of_PHY_SetRxState:
 16242                           	opt callstack 0
 16243                           
 16244 ;; *************** function _PHY_SetChannel *****************
 16245 ;; Defined at:
 16246 ;;		line 818 in file "../phy/sx1216/phy_src/phy.c"
 16247 ;; Parameters:    Size  Location     Type
 16248 ;;  channel         1    wreg     unsigned char 
 16249 ;; Auto vars:     Size  Location     Type
 16250 ;;  channel         1   46[COMRAM] unsigned char 
 16251 ;; Return value:  Size  Location     Type
 16252 ;;                  1    wreg      void 
 16253 ;; Registers used:
 16254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16255 ;; Tracked objects:
 16256 ;;		On entry : 3F/0
 16257 ;;		On exit  : 3F/3D
 16258 ;;		Unchanged: 0/0
 16259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16263 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16264 ;;Total ram usage:        1 bytes
 16265 ;; Hardware stack levels used:    1
 16266 ;; Hardware stack levels required when called:   12
 16267 ;; This function calls:
 16268 ;;		_setFrequency
 16269 ;; This function is called by:
 16270 ;;		_bootLoadApplication
 16271 ;; This function uses a non-reentrant model
 16272 ;;
 16273                           
 16274                           	psect	text92
 16275  0084AA                     __ptext92:
 16276                           	opt callstack 0
 16277  0084AA                     _PHY_SetChannel:
 16278                           	opt callstack 17
 16279                           
 16280                           ; BSR set to: 61
 16281                           ;incstack = 0
 16282                           ;PHY_SetChannel@channel stored from wreg
 16283  0084AA  6E2F               	movwf	PHY_SetChannel@channel^0,c
 16284                           
 16285                           ;../phy/sx1216/phy_src/phy.c: 819:     setFrequency(fhssList[channel]);
 16286  0084AC  502F               	movf	PHY_SetChannel@channel^0,w,c
 16287  0084AE  0D04               	mullw	4
 16288  0084B0  0EAB               	movlw	low _fhssList
 16289  0084B2  24F3               	addwf	243,w,c
 16290  0084B4  6EF6               	movwf	tblptrl,c
 16291  0084B6  0EFC               	movlw	high _fhssList
 16292  0084B8  20F4               	addwfc	244,w,c
 16293  0084BA  6EF7               	movwf	tblptrh,c
 16294  0084BC                     	if	1	;There are 3 active tblptr bytes
 16295  0084BC  6AF8               	clrf	tblptru,c
 16296  0084BE  0E00               	movlw	low (__mediumconst shr (0+16))
 16297  0084C0  22F8               	addwfc	tblptru,f,c
 16298  0084C2                     	endif
 16299  0084C2  0009               	tblrd		*+
 16300  0084C4  006F FFD4  F023    	movff	tablat,setFrequency@frequency
 16301  0084CA  0009               	tblrd		*+
 16302  0084CC  006F FFD4  F024    	movff	tablat,setFrequency@frequency+1
 16303  0084D2  0009               	tblrd		*+
 16304  0084D4  006F FFD4  F025    	movff	tablat,setFrequency@frequency+2
 16305  0084DA  000A               	tblrd		*-
 16306  0084DC  006F FFD4  F026    	movff	tablat,setFrequency@frequency+3
 16307  0084E2  EC8C  F024         	call	_setFrequency	;wreg free
 16308                           
 16309                           ; BSR set to: 61
 16310  0084E6  0012               	return		;funcret
 16311  0084E8                     __end_of_PHY_SetChannel:
 16312                           	opt callstack 0
 16313                           
 16314 ;; *************** function _NWK_SetPanId *****************
 16315 ;; Defined at:
 16316 ;;		line 116 in file "../nwk/nwk_src/nwk.c"
 16317 ;; Parameters:    Size  Location     Type
 16318 ;;  panId           2    3[COMRAM] unsigned short 
 16319 ;; Auto vars:     Size  Location     Type
 16320 ;;		None
 16321 ;; Return value:  Size  Location     Type
 16322 ;;                  1    wreg      void 
 16323 ;; Registers used:
 16324 ;;		cstack
 16325 ;; Tracked objects:
 16326 ;;		On entry : 3F/0
 16327 ;;		On exit  : 3F/0
 16328 ;;		Unchanged: 3F/0
 16329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16330 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16333 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16334 ;;Total ram usage:        2 bytes
 16335 ;; Hardware stack levels used:    1
 16336 ;; Hardware stack levels required when called:    8
 16337 ;; This function calls:
 16338 ;;		_PHY_SetPanId
 16339 ;; This function is called by:
 16340 ;;		_bootLoadApplication
 16341 ;; This function uses a non-reentrant model
 16342 ;;
 16343                           
 16344                           	psect	text93
 16345  008D18                     __ptext93:
 16346                           	opt callstack 0
 16347  008D18                     _NWK_SetPanId:
 16348                           	opt callstack 21
 16349                           
 16350                           ; BSR set to: 0
 16351                           ;../nwk/nwk_src/nwk.c: 116: void NWK_SetPanId(uint16_t panId);../nwk/nwk_src/nwk.c: 117:
      +                           {;../nwk/nwk_src/nwk.c: 118:   nwkIb.panId = panId;
 16352                           
 16353                           ; BSR set to: 61
 16354                           ;incstack = 0
 16355  008D18  0060  F010  F102   	movff	NWK_SetPanId@panId,_nwkIb+2
 16356  008D1E  0060  F014  F103   	movff	NWK_SetPanId@panId+1,_nwkIb+3
 16357                           
 16358                           ; BSR set to: 0
 16359                           ;../nwk/nwk_src/nwk.c: 119:   PHY_SetPanId(panId);
 16360  008D24  0060  F010  F002   	movff	NWK_SetPanId@panId,PHY_SetPanId@panId
 16361  008D2A  0060  F014  F003   	movff	NWK_SetPanId@panId+1,PHY_SetPanId@panId+1
 16362  008D30  EC50  F048         	call	_PHY_SetPanId	;wreg free
 16363                           
 16364                           ; BSR set to: 0
 16365  008D34  0012               	return		;funcret
 16366  008D36                     __end_of_NWK_SetPanId:
 16367                           	opt callstack 0
 16368                           
 16369 ;; *************** function _PHY_SetPanId *****************
 16370 ;; Defined at:
 16371 ;;		line 822 in file "../phy/sx1216/phy_src/phy.c"
 16372 ;; Parameters:    Size  Location     Type
 16373 ;;  panId           2    1[COMRAM] unsigned short 
 16374 ;; Auto vars:     Size  Location     Type
 16375 ;;		None
 16376 ;; Return value:  Size  Location     Type
 16377 ;;                  1    wreg      void 
 16378 ;; Registers used:
 16379 ;;		None
 16380 ;; Tracked objects:
 16381 ;;		On entry : 3F/0
 16382 ;;		On exit  : 3F/0
 16383 ;;		Unchanged: 3F/0
 16384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16385 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16389 ;;Total ram usage:        2 bytes
 16390 ;; Hardware stack levels used:    1
 16391 ;; Hardware stack levels required when called:    7
 16392 ;; This function calls:
 16393 ;;		Nothing
 16394 ;; This function is called by:
 16395 ;;		_NWK_SetPanId
 16396 ;; This function uses a non-reentrant model
 16397 ;;
 16398                           
 16399                           	psect	text94
 16400  0090A0                     __ptext94:
 16401                           	opt callstack 0
 16402  0090A0                     _PHY_SetPanId:
 16403                           	opt callstack 21
 16404                           
 16405                           ; BSR set to: 0
 16406                           
 16407                           ; BSR set to: 0
 16408                           ;incstack = 0
 16409  0090A0  0012               	return		;funcret
 16410  0090A2                     __end_of_PHY_SetPanId:
 16411                           	opt callstack 0
 16412                           
 16413 ;; *************** function _NWK_SetAddr *****************
 16414 ;; Defined at:
 16415 ;;		line 106 in file "../nwk/nwk_src/nwk.c"
 16416 ;; Parameters:    Size  Location     Type
 16417 ;;  addr            2    3[COMRAM] unsigned short 
 16418 ;; Auto vars:     Size  Location     Type
 16419 ;;		None
 16420 ;; Return value:  Size  Location     Type
 16421 ;;                  1    wreg      void 
 16422 ;; Registers used:
 16423 ;;		cstack
 16424 ;; Tracked objects:
 16425 ;;		On entry : 3F/0
 16426 ;;		On exit  : 3F/0
 16427 ;;		Unchanged: 3F/0
 16428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16433 ;;Total ram usage:        2 bytes
 16434 ;; Hardware stack levels used:    1
 16435 ;; Hardware stack levels required when called:    8
 16436 ;; This function calls:
 16437 ;;		_PHY_SetShortAddr
 16438 ;; This function is called by:
 16439 ;;		_bootLoadApplication
 16440 ;; This function uses a non-reentrant model
 16441 ;;
 16442                           
 16443                           	psect	text95
 16444  008D36                     __ptext95:
 16445                           	opt callstack 0
 16446  008D36                     _NWK_SetAddr:
 16447                           	opt callstack 21
 16448                           
 16449                           ; BSR set to: 0
 16450                           ;../nwk/nwk_src/nwk.c: 106: void NWK_SetAddr(uint16_t addr);../nwk/nwk_src/nwk.c: 107: {
      +                          ;../nwk/nwk_src/nwk.c: 108:   nwkIb.addr = addr;
 16451                           
 16452                           ; BSR set to: 0
 16453                           ;incstack = 0
 16454  008D36  0060  F010  F100   	movff	NWK_SetAddr@addr,_nwkIb
 16455  008D3C  0060  F014  F101   	movff	NWK_SetAddr@addr+1,_nwkIb+1
 16456                           
 16457                           ; BSR set to: 0
 16458                           ;../nwk/nwk_src/nwk.c: 109:   PHY_SetShortAddr(addr);
 16459  008D42  0060  F010  F002   	movff	NWK_SetAddr@addr,PHY_SetShortAddr@addr
 16460  008D48  0060  F014  F003   	movff	NWK_SetAddr@addr+1,PHY_SetShortAddr@addr+1
 16461  008D4E  EC51  F048         	call	_PHY_SetShortAddr	;wreg free
 16462                           
 16463                           ; BSR set to: 0
 16464  008D52  0012               	return		;funcret
 16465  008D54                     __end_of_NWK_SetAddr:
 16466                           	opt callstack 0
 16467                           
 16468 ;; *************** function _PHY_SetShortAddr *****************
 16469 ;; Defined at:
 16470 ;;		line 826 in file "../phy/sx1216/phy_src/phy.c"
 16471 ;; Parameters:    Size  Location     Type
 16472 ;;  addr            2    1[COMRAM] unsigned short 
 16473 ;; Auto vars:     Size  Location     Type
 16474 ;;		None
 16475 ;; Return value:  Size  Location     Type
 16476 ;;                  1    wreg      void 
 16477 ;; Registers used:
 16478 ;;		None
 16479 ;; Tracked objects:
 16480 ;;		On entry : 3F/0
 16481 ;;		On exit  : 3F/0
 16482 ;;		Unchanged: 3F/0
 16483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16484 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16487 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16488 ;;Total ram usage:        2 bytes
 16489 ;; Hardware stack levels used:    1
 16490 ;; Hardware stack levels required when called:    7
 16491 ;; This function calls:
 16492 ;;		Nothing
 16493 ;; This function is called by:
 16494 ;;		_NWK_SetAddr
 16495 ;; This function uses a non-reentrant model
 16496 ;;
 16497                           
 16498                           	psect	text96
 16499  0090A2                     __ptext96:
 16500                           	opt callstack 0
 16501  0090A2                     _PHY_SetShortAddr:
 16502                           	opt callstack 21
 16503                           
 16504                           ; BSR set to: 0
 16505                           
 16506                           ; BSR set to: 0
 16507                           ;incstack = 0
 16508  0090A2  0012               	return		;funcret
 16509  0090A4                     __end_of_PHY_SetShortAddr:
 16510                           	opt callstack 0
 16511                           
 16512 ;; *************** function _DATAEE_WriteByte_Platform *****************
 16513 ;; Defined at:
 16514 ;;		line 40 in file "../app/app_src/EEPROM.c"
 16515 ;; Parameters:    Size  Location     Type
 16516 ;;  addr            2    5[COMRAM] unsigned short 
 16517 ;;  data            1    7[COMRAM] unsigned char 
 16518 ;; Auto vars:     Size  Location     Type
 16519 ;;		None
 16520 ;; Return value:  Size  Location     Type
 16521 ;;                  1    wreg      void 
 16522 ;; Registers used:
 16523 ;;		wreg, status,2, status,0, cstack
 16524 ;; Tracked objects:
 16525 ;;		On entry : 0/0
 16526 ;;		On exit  : 0/0
 16527 ;;		Unchanged: 0/0
 16528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16529 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16532 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16533 ;;Total ram usage:        3 bytes
 16534 ;; Hardware stack levels used:    1
 16535 ;; Hardware stack levels required when called:    8
 16536 ;; This function calls:
 16537 ;;		_DATAEE_WriteByte
 16538 ;; This function is called by:
 16539 ;;		_cmdSetNaddr
 16540 ;;		_cmdSetAES
 16541 ;;		_cmdSetRFCH
 16542 ;;		_cmdSetTX
 16543 ;;		_cmdSetCADRSSI
 16544 ;;		_cmdBootLoad
 16545 ;;		_cmdSetSF
 16546 ;;		_bootLoadApplication
 16547 ;; This function uses a non-reentrant model
 16548 ;;
 16549                           
 16550                           	psect	text97
 16551  0081E2                     __ptext97:
 16552                           	opt callstack 0
 16553  0081E2                     _DATAEE_WriteByte_Platform:
 16554                           	opt callstack 19
 16555                           
 16556                           ;../app/app_src/EEPROM.c: 42:     DATAEE_WriteByte(addr, data);
 16557                           
 16558                           ; BSR set to: 0
 16559                           ;incstack = 0
 16560  0081E2  0060  F018  F002   	movff	DATAEE_WriteByte_Platform@addr,DATAEE_WriteByte@bAdd
 16561  0081E8  0060  F01C  F003   	movff	DATAEE_WriteByte_Platform@addr+1,DATAEE_WriteByte@bAdd+1
 16562  0081EE  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 16563  0081F4  EC98  F041         	call	_DATAEE_WriteByte	;wreg free
 16564                           
 16565                           ;../app/app_src/EEPROM.c: 43:     DATAEE_WriteByte(addr + 256, data);
 16566  0081F8  0E00               	movlw	0
 16567  0081FA  2406               	addwf	DATAEE_WriteByte_Platform@addr^0,w,c
 16568  0081FC  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 16569  0081FE  0E01               	movlw	1
 16570  008200  2007               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,w,c
 16571  008202  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 16572  008204  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 16573  00820A  EC98  F041         	call	_DATAEE_WriteByte	;wreg free
 16574                           
 16575                           ;../app/app_src/EEPROM.c: 44:     DATAEE_WriteByte(addr + 512, data);
 16576  00820E  0E00               	movlw	0
 16577  008210  2406               	addwf	DATAEE_WriteByte_Platform@addr^0,w,c
 16578  008212  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 16579  008214  0E02               	movlw	2
 16580  008216  2007               	addwfc	(DATAEE_WriteByte_Platform@addr+1)^0,w,c
 16581  008218  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 16582  00821A  0060  F020  F004   	movff	DATAEE_WriteByte_Platform@data,DATAEE_WriteByte@bData
 16583  008220  EC98  F041         	call	_DATAEE_WriteByte	;wreg free
 16584  008224  0012               	return		;funcret
 16585  008226                     __end_of_DATAEE_WriteByte_Platform:
 16586                           	opt callstack 0
 16587                           
 16588 ;; *************** function _DATAEE_ReadByte_Platform *****************
 16589 ;; Defined at:
 16590 ;;		line 6 in file "../app/app_src/EEPROM.c"
 16591 ;; Parameters:    Size  Location     Type
 16592 ;;  addr            2    5[COMRAM] unsigned short 
 16593 ;; Auto vars:     Size  Location     Type
 16594 ;;  copy1           1    9[COMRAM] unsigned char 
 16595 ;;  copy2           1    8[COMRAM] unsigned char 
 16596 ;;  copy3           1    7[COMRAM] unsigned char 
 16597 ;; Return value:  Size  Location     Type
 16598 ;;                  1    wreg      unsigned char 
 16599 ;; Registers used:
 16600 ;;		wreg, status,2, status,0, cstack
 16601 ;; Tracked objects:
 16602 ;;		On entry : 0/39
 16603 ;;		On exit  : 0/0
 16604 ;;		Unchanged: 0/0
 16605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16606 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16607 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16609 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16610 ;;Total ram usage:        5 bytes
 16611 ;; Hardware stack levels used:    1
 16612 ;; Hardware stack levels required when called:    8
 16613 ;; This function calls:
 16614 ;;		_DATAEE_ReadByte
 16615 ;;		_DATAEE_WriteByte
 16616 ;; This function is called by:
 16617 ;;		_bootLoadApplication
 16618 ;; This function uses a non-reentrant model
 16619 ;;
 16620                           
 16621                           	psect	text98
 16622  0055C2                     __ptext98:
 16623                           	opt callstack 0
 16624  0055C2                     _DATAEE_ReadByte_Platform:
 16625                           	opt callstack 21
 16626                           
 16627                           ;../app/app_src/EEPROM.c: 7:     uint8_t copy1, copy2, copy3;;../app/app_src/EEPROM.c: 8
      +                          :     copy1 = DATAEE_ReadByte(addr);
 16628                           
 16629                           ;incstack = 0
 16630  0055C2  0060  F018  F002   	movff	DATAEE_ReadByte_Platform@addr,DATAEE_ReadByte@bAdd
 16631  0055C8  0060  F01C  F003   	movff	DATAEE_ReadByte_Platform@addr+1,DATAEE_ReadByte@bAdd+1
 16632  0055CE  ECAA  F046         	call	_DATAEE_ReadByte	;wreg free
 16633  0055D2  6E0A               	movwf	DATAEE_ReadByte_Platform@copy1^0,c
 16634                           
 16635                           ;../app/app_src/EEPROM.c: 9:     copy2 = DATAEE_ReadByte(addr + 256);
 16636  0055D4  0E00               	movlw	0
 16637  0055D6  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 16638  0055D8  6E02               	movwf	DATAEE_ReadByte@bAdd^0,c
 16639  0055DA  0E01               	movlw	1
 16640  0055DC  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 16641  0055DE  6E03               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
 16642  0055E0  ECAA  F046         	call	_DATAEE_ReadByte	;wreg free
 16643  0055E4  6E09               	movwf	DATAEE_ReadByte_Platform@copy2^0,c
 16644                           
 16645                           ;../app/app_src/EEPROM.c: 10:     copy3 = DATAEE_ReadByte(addr + 512);
 16646  0055E6  0E00               	movlw	0
 16647  0055E8  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 16648  0055EA  6E02               	movwf	DATAEE_ReadByte@bAdd^0,c
 16649  0055EC  0E02               	movlw	2
 16650  0055EE  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 16651  0055F0  6E03               	movwf	(DATAEE_ReadByte@bAdd+1)^0,c
 16652  0055F2  ECAA  F046         	call	_DATAEE_ReadByte	;wreg free
 16653  0055F6  6E08               	movwf	DATAEE_ReadByte_Platform@copy3^0,c
 16654                           
 16655                           ; BSR set to: 57
 16656                           ;../app/app_src/EEPROM.c: 13:     if((copy1 == copy2) && (copy2 == copy3)){
 16657  0055F8  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16658  0055FA  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 16659  0055FC  A4D8               	btfss	status,2,c
 16660  0055FE  D006               	goto	l16536
 16661                           
 16662                           ; BSR set to: 57
 16663  005600  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 16664  005602  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16665  005604  A4D8               	btfss	status,2,c
 16666  005606  D002               	goto	l16536
 16667  005608                     u16820:
 16668                           
 16669                           ;../app/app_src/EEPROM.c: 14:         return copy1;
 16670  005608  500A               	movf	DATAEE_ReadByte_Platform@copy1^0,w,c
 16671  00560A  0012               	return	
 16672  00560C                     l16536:
 16673                           
 16674                           ; BSR set to: 57
 16675  00560C  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16676  00560E  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 16677  005610  A4D8               	btfss	status,2,c
 16678  005612  D010               	goto	l16548
 16679                           
 16680                           ; BSR set to: 57
 16681  005614  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 16682  005616  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16683  005618  B4D8               	btfsc	status,2,c
 16684  00561A  D00C               	goto	l16548
 16685                           
 16686                           ; BSR set to: 57
 16687                           ;../app/app_src/EEPROM.c: 18:         DATAEE_WriteByte(addr + 512, copy1);
 16688  00561C  0E00               	movlw	0
 16689  00561E  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 16690  005620  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 16691  005622  0E02               	movlw	2
 16692  005624  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 16693  005626  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 16694  005628  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 16695  00562E  EC98  F041         	call	_DATAEE_WriteByte	;wreg free
 16696  005632  D7EA               	goto	u16820
 16697  005634                     l16548:
 16698                           
 16699                           ; BSR set to: 57
 16700  005634  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16701  005636  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 16702  005638  B4D8               	btfsc	status,2,c
 16703  00563A  D011               	goto	l16560
 16704                           
 16705                           ; BSR set to: 57
 16706  00563C  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 16707  00563E  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16708  005640  A4D8               	btfss	status,2,c
 16709  005642  D00D               	goto	l16560
 16710                           
 16711                           ; BSR set to: 57
 16712                           ;../app/app_src/EEPROM.c: 23:         DATAEE_WriteByte(addr , copy2);
 16713  005644  0060  F018  F002   	movff	DATAEE_ReadByte_Platform@addr,DATAEE_WriteByte@bAdd
 16714  00564A  0060  F01C  F003   	movff	DATAEE_ReadByte_Platform@addr+1,DATAEE_WriteByte@bAdd+1
 16715  005650  0060  F024  F004   	movff	DATAEE_ReadByte_Platform@copy2,DATAEE_WriteByte@bData
 16716  005656  EC98  F041         	call	_DATAEE_WriteByte	;wreg free
 16717                           
 16718                           ;../app/app_src/EEPROM.c: 24:         return copy2;
 16719  00565A  5009               	movf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16720  00565C  0012               	return	
 16721  00565E                     l16560:
 16722                           
 16723                           ; BSR set to: 57
 16724  00565E  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 16725  005660  180A               	xorwf	DATAEE_ReadByte_Platform@copy1^0,w,c
 16726  005662  A4D8               	btfss	status,2,c
 16727  005664  D010               	goto	l16572
 16728                           
 16729                           ; BSR set to: 57
 16730  005666  5008               	movf	DATAEE_ReadByte_Platform@copy3^0,w,c
 16731  005668  1809               	xorwf	DATAEE_ReadByte_Platform@copy2^0,w,c
 16732  00566A  B4D8               	btfsc	status,2,c
 16733  00566C  D00C               	goto	l16572
 16734                           
 16735                           ; BSR set to: 57
 16736                           ;../app/app_src/EEPROM.c: 28:         DATAEE_WriteByte(addr + 256, copy1);
 16737  00566E  0E00               	movlw	0
 16738  005670  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 16739  005672  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 16740  005674  0E01               	movlw	1
 16741  005676  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 16742  005678  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 16743  00567A  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 16744  005680  EC98  F041         	call	_DATAEE_WriteByte	;wreg free
 16745  005684  D7C1               	goto	u16820
 16746  005686                     l16572:
 16747                           
 16748                           ; BSR set to: 57
 16749                           ;../app/app_src/EEPROM.c: 34:         DATAEE_WriteByte(addr + 256, copy1);
 16750  005686  0E00               	movlw	0
 16751  005688  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 16752  00568A  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 16753  00568C  0E01               	movlw	1
 16754  00568E  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 16755  005690  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 16756  005692  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 16757  005698  EC98  F041         	call	_DATAEE_WriteByte	;wreg free
 16758                           
 16759                           ;../app/app_src/EEPROM.c: 35:         DATAEE_WriteByte(addr + 512, copy1);
 16760  00569C  0E00               	movlw	0
 16761  00569E  2406               	addwf	DATAEE_ReadByte_Platform@addr^0,w,c
 16762  0056A0  6E02               	movwf	DATAEE_WriteByte@bAdd^0,c
 16763  0056A2  0E02               	movlw	2
 16764  0056A4  2007               	addwfc	(DATAEE_ReadByte_Platform@addr+1)^0,w,c
 16765  0056A6  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^0,c
 16766  0056A8  0060  F028  F004   	movff	DATAEE_ReadByte_Platform@copy1,DATAEE_WriteByte@bData
 16767  0056AE  EC98  F041         	call	_DATAEE_WriteByte	;wreg free
 16768  0056B2  D7AA               	goto	u16820
 16769  0056B4                     __end_of_DATAEE_ReadByte_Platform:
 16770                           	opt callstack 0
 16771                           
 16772 ;; *************** function _DATAEE_WriteByte *****************
 16773 ;; Defined at:
 16774 ;;		line 172 in file "mcc_generated_files/memory.c"
 16775 ;; Parameters:    Size  Location     Type
 16776 ;;  bAdd            2    1[COMRAM] unsigned short 
 16777 ;;  bData           1    3[COMRAM] unsigned char 
 16778 ;; Auto vars:     Size  Location     Type
 16779 ;;  GIEBitValue     1    4[COMRAM] unsigned char 
 16780 ;; Return value:  Size  Location     Type
 16781 ;;                  1    wreg      void 
 16782 ;; Registers used:
 16783 ;;		wreg, status,2, status,0
 16784 ;; Tracked objects:
 16785 ;;		On entry : 0/0
 16786 ;;		On exit  : 0/0
 16787 ;;		Unchanged: 0/0
 16788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16789 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16792 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16793 ;;Total ram usage:        4 bytes
 16794 ;; Hardware stack levels used:    1
 16795 ;; Hardware stack levels required when called:    7
 16796 ;; This function calls:
 16797 ;;		Nothing
 16798 ;; This function is called by:
 16799 ;;		_DATAEE_ReadByte_Platform
 16800 ;;		_DATAEE_WriteByte_Platform
 16801 ;; This function uses a non-reentrant model
 16802 ;;
 16803                           
 16804                           	psect	text99
 16805  008330                     __ptext99:
 16806                           	opt callstack 0
 16807  008330                     _DATAEE_WriteByte:
 16808                           	opt callstack 19
 16809                           
 16810                           ;mcc_generated_files/memory.c: 172: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 173: {;mcc_generated_files/memory.c: 174:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
 16811                           
 16812                           ;incstack = 0
 16813  008330  0E00               	movlw	0
 16814  008332  BED2               	btfsc	210,7,c	;volatile
 16815  008334  0E01               	movlw	1
 16816  008336  6E05               	movwf	DATAEE_WriteByte@GIEBitValue^0,c
 16817                           
 16818                           ;mcc_generated_files/memory.c: 176:     NVMADRH = (uint8_t)((bAdd >> 8) & 0x03);
 16819  008338  5003               	movf	(DATAEE_WriteByte@bAdd+1)^0,w,c
 16820  00833A  0B03               	andlw	3
 16821  00833C  0139               	movlb	57	; () banked
 16822  00833E  6FE1               	movwf	225,b	;volatile
 16823                           
 16824                           ; BSR set to: 57
 16825                           ;mcc_generated_files/memory.c: 177:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 16826  008340  0060  F00B  F9E0   	movff	DATAEE_WriteByte@bAdd,14816	;volatile
 16827                           
 16828                           ; BSR set to: 57
 16829                           ;mcc_generated_files/memory.c: 178:     NVMDAT = bData;
 16830  008346  0060  F013  F9E3   	movff	DATAEE_WriteByte@bData,14819	;volatile
 16831                           
 16832                           ; BSR set to: 57
 16833                           ;mcc_generated_files/memory.c: 179:     NVMCON1bits.NVMREG = 0;
 16834  00834C  0E3F               	movlw	-193
 16835  00834E  17E5               	andwf	229,f,b	;volsfr
 16836                           
 16837                           ; BSR set to: 57
 16838                           ;mcc_generated_files/memory.c: 180:     NVMCON1bits.WREN = 1;
 16839  008350  85E5               	bsf	229,2,b	;volsfr
 16840                           
 16841                           ; BSR set to: 57
 16842                           ;mcc_generated_files/memory.c: 181:     INTCON0bits.GIE = 0;
 16843  008352  9ED2               	bcf	210,7,c	;volatile
 16844                           
 16845                           ; BSR set to: 57
 16846                           ;mcc_generated_files/memory.c: 182:     NVMCON2 = 0x55;
 16847  008354  0E55               	movlw	85
 16848  008356  6FE6               	movwf	230,b	;volsfr
 16849                           
 16850                           ; BSR set to: 57
 16851                           ;mcc_generated_files/memory.c: 183:     NVMCON2 = 0xAA;
 16852  008358  0EAA               	movlw	170
 16853  00835A  6FE6               	movwf	230,b	;volsfr
 16854                           
 16855                           ; BSR set to: 57
 16856                           ;mcc_generated_files/memory.c: 184:     NVMCON1bits.WR = 1;
 16857  00835C  83E5               	bsf	229,1,b	;volsfr
 16858  00835E                     l1233:
 16859                           
 16860                           ; BSR set to: 57
 16861                           ;mcc_generated_files/memory.c: 186:     while (NVMCON1bits.WR)
 16862  00835E  B3E5               	btfsc	229,1,b	;volsfr
 16863  008360  D7FE               	goto	l1233
 16864                           
 16865                           ; BSR set to: 57
 16866                           ;mcc_generated_files/memory.c: 190:     NVMCON1bits.WREN = 0;
 16867  008362  95E5               	bcf	229,2,b	;volsfr
 16868                           
 16869                           ;mcc_generated_files/memory.c: 191:     INTCON0bits.GIE = GIEBitValue;
 16870  008364  B005               	btfsc	DATAEE_WriteByte@GIEBitValue^0,0,c
 16871  008366  D002               	bra	u14385
 16872  008368  9ED2               	bcf	210,7,c	;volatile
 16873  00836A  D001               	bra	u14386
 16874  00836C                     u14385:
 16875  00836C  8ED2               	bsf	210,7,c	;volatile
 16876  00836E                     u14386:
 16877  00836E  0012               	return		;funcret
 16878  008370                     __end_of_DATAEE_WriteByte:
 16879                           	opt callstack 0
 16880                           
 16881 ;; *************** function _DATAEE_ReadByte *****************
 16882 ;; Defined at:
 16883 ;;		line 194 in file "mcc_generated_files/memory.c"
 16884 ;; Parameters:    Size  Location     Type
 16885 ;;  bAdd            2    1[COMRAM] unsigned short 
 16886 ;; Auto vars:     Size  Location     Type
 16887 ;;		None
 16888 ;; Return value:  Size  Location     Type
 16889 ;;                  1    wreg      unsigned char 
 16890 ;; Registers used:
 16891 ;;		wreg, status,2, status,0
 16892 ;; Tracked objects:
 16893 ;;		On entry : 0/39
 16894 ;;		On exit  : 3F/39
 16895 ;;		Unchanged: 0/0
 16896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16900 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16901 ;;Total ram usage:        2 bytes
 16902 ;; Hardware stack levels used:    1
 16903 ;; Hardware stack levels required when called:    7
 16904 ;; This function calls:
 16905 ;;		Nothing
 16906 ;; This function is called by:
 16907 ;;		_DATAEE_ReadByte_Platform
 16908 ;; This function uses a non-reentrant model
 16909 ;;
 16910                           
 16911                           	psect	text100
 16912  008D54                     __ptext100:
 16913                           	opt callstack 0
 16914  008D54                     _DATAEE_ReadByte:
 16915                           	opt callstack 21
 16916                           
 16917                           ;mcc_generated_files/memory.c: 194: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 195: {;mcc_generated_files/memory.c: 196:     NVMADRH = (uint8_t)((bAdd
      +                           >> 8) & 0x03);
 16918                           
 16919                           ;incstack = 0
 16920  008D54  5003               	movf	(DATAEE_ReadByte@bAdd+1)^0,w,c
 16921  008D56  0B03               	andlw	3
 16922  008D58  0139               	movlb	57	; () banked
 16923  008D5A  6FE1               	movwf	225,b	;volatile
 16924                           
 16925                           ; BSR set to: 57
 16926                           ;mcc_generated_files/memory.c: 197:     NVMADRL = (uint8_t)(bAdd & 0xFF);
 16927  008D5C  0060  F00B  F9E0   	movff	DATAEE_ReadByte@bAdd,14816	;volatile
 16928                           
 16929                           ; BSR set to: 57
 16930                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.NVMREG = 0;
 16931  008D62  0E3F               	movlw	-193
 16932  008D64  17E5               	andwf	229,f,b	;volsfr
 16933                           
 16934                           ; BSR set to: 57
 16935                           ;mcc_generated_files/memory.c: 199:     NVMCON1bits.RD = 1;
 16936  008D66  81E5               	bsf	229,0,b	;volsfr
 16937                           
 16938                           ; BSR set to: 57
 16939                           ;mcc_generated_files/memory.c: 200:     __nop();
 16940  008D68  F000               	nop	
 16941                           
 16942                           ;mcc_generated_files/memory.c: 201:     __nop();
 16943  008D6A  F000               	nop	
 16944                           
 16945                           ;mcc_generated_files/memory.c: 203:     return (NVMDAT);
 16946  008D6C  0139               	movlb	57	; () banked
 16947  008D6E  51E3               	movf	227,w,b	;volatile
 16948                           
 16949                           ; BSR set to: 57
 16950  008D70  0012               	return		;funcret
 16951  008D72                     __end_of_DATAEE_ReadByte:
 16952                           	opt callstack 0
 16953                           
 16954 ;; *************** function _CircularBufferInit *****************
 16955 ;; Defined at:
 16956 ;;		line 56 in file "../app/app_src/circular buffer.c"
 16957 ;; Parameters:    Size  Location     Type
 16958 ;;  ctx             2    8[COMRAM] PTR struct .
 16959 ;;		 -> ledtasksbuf(10), rx_buffer_queue_context(10), 
 16960 ;;  buf             2   10[COMRAM] PTR void 
 16961 ;;		 -> ledqueue(96), rx_buffer_queue(4), 
 16962 ;;  buf_size        2   12[COMRAM] unsigned int 
 16963 ;;  element_size    2   14[COMRAM] unsigned int 
 16964 ;; Auto vars:     Size  Location     Type
 16965 ;;  size            2   20[COMRAM] unsigned int 
 16966 ;; Return value:  Size  Location     Type
 16967 ;;                  1    wreg      void 
 16968 ;; Registers used:
 16969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16970 ;; Tracked objects:
 16971 ;;		On entry : 0/3D
 16972 ;;		On exit  : 0/0
 16973 ;;		Unchanged: 0/0
 16974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16975 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16976 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16977 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16978 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16979 ;;Total ram usage:       14 bytes
 16980 ;; Hardware stack levels used:    1
 16981 ;; Hardware stack levels required when called:    8
 16982 ;; This function calls:
 16983 ;;		___lwdiv
 16984 ;; This function is called by:
 16985 ;;		_bootLoadApplication
 16986 ;; This function uses a non-reentrant model
 16987 ;;
 16988                           
 16989                           	psect	text101
 16990  00671A                     __ptext101:
 16991                           	opt callstack 0
 16992  00671A                     _CircularBufferInit:
 16993                           	opt callstack 21
 16994                           
 16995                           ;../app/app_src/circular buffer.c: 56: void CircularBufferInit(CircularBufferContext *ct
      +                          x, void *buf, size_t buf_size,;../app/app_src/circular buffer.c: 57:                    
      +                               size_t element_size) {;../app/app_src/circular buffer.c: 58:     size_t size = buf_
      +                          size / element_size;
 16996                           
 16997                           ; BSR set to: 57
 16998                           ;incstack = 0
 16999  00671A  0060  F034  F002   	movff	CircularBufferInit@buf_size,___lwdiv@dividend
 17000  006720  0060  F038  F003   	movff	CircularBufferInit@buf_size+1,___lwdiv@dividend+1
 17001  006726  0060  F03C  F004   	movff	CircularBufferInit@element_size,___lwdiv@divisor
 17002  00672C  0060  F040  F005   	movff	CircularBufferInit@element_size+1,___lwdiv@divisor+1
 17003  006732  ECD6  F03E         	call	___lwdiv	;wreg free
 17004  006736  0060  F008  F015   	movff	?___lwdiv,CircularBufferInit@size
 17005  00673C  0060  F00C  F016   	movff	?___lwdiv+1,CircularBufferInit@size+1
 17006                           
 17007                           ;../app/app_src/circular buffer.c: 59:     ctx->buf = buf;
 17008  006742  0060  F027  FFD9   	movff	CircularBufferInit@ctx,fsr2l
 17009  006748  0060  F02B  FFDA   	movff	CircularBufferInit@ctx+1,fsr2h
 17010  00674E  0060  F02F  FFDE   	movff	CircularBufferInit@buf,postinc2
 17011  006754  0060  F033  FFDD   	movff	CircularBufferInit@buf+1,postdec2
 17012                           
 17013                           ;../app/app_src/circular buffer.c: 60:     ctx->write_pos = 0u;
 17014  00675A  EE20 F002          	lfsr	2,2
 17015  00675E  5009               	movf	CircularBufferInit@ctx^0,w,c
 17016  006760  26D9               	addwf	fsr2l,f,c
 17017  006762  500A               	movf	(CircularBufferInit@ctx+1)^0,w,c
 17018  006764  22DA               	addwfc	fsr2h,f,c
 17019  006766  0E00               	movlw	0
 17020  006768  6EDE               	movwf	postinc2,c
 17021  00676A  0E00               	movlw	0
 17022  00676C  6EDD               	movwf	postdec2,c
 17023                           
 17024                           ;../app/app_src/circular buffer.c: 61:     ctx->read_pos = 0u;
 17025  00676E  EE20 F004          	lfsr	2,4
 17026  006772  5009               	movf	CircularBufferInit@ctx^0,w,c
 17027  006774  26D9               	addwf	fsr2l,f,c
 17028  006776  500A               	movf	(CircularBufferInit@ctx+1)^0,w,c
 17029  006778  22DA               	addwfc	fsr2h,f,c
 17030  00677A  0E00               	movlw	0
 17031  00677C  6EDE               	movwf	postinc2,c
 17032  00677E  0E00               	movlw	0
 17033  006780  6EDD               	movwf	postdec2,c
 17034                           
 17035                           ;../app/app_src/circular buffer.c: 62:     ctx->element_size = element_size;
 17036  006782  EE20 F006          	lfsr	2,6
 17037  006786  5009               	movf	CircularBufferInit@ctx^0,w,c
 17038  006788  26D9               	addwf	fsr2l,f,c
 17039  00678A  500A               	movf	(CircularBufferInit@ctx+1)^0,w,c
 17040  00678C  22DA               	addwfc	fsr2h,f,c
 17041  00678E  0060  F03F  FFDE   	movff	CircularBufferInit@element_size,postinc2
 17042  006794  0060  F043  FFDD   	movff	CircularBufferInit@element_size+1,postdec2
 17043                           
 17044                           ;../app/app_src/circular buffer.c: 63:     ctx->max_size = size - 1;
 17045  00679A  0EFF               	movlw	255
 17046  00679C  6E11               	movwf	??_CircularBufferInit^0,c
 17047  00679E  0EFF               	movlw	255
 17048  0067A0  6E12               	movwf	(??_CircularBufferInit+1)^0,c
 17049  0067A2  0060  F054  F013   	movff	CircularBufferInit@size,??_CircularBufferInit+2
 17050  0067A8  0060  F058  F014   	movff	CircularBufferInit@size+1,??_CircularBufferInit+3
 17051  0067AE  5011               	movf	??_CircularBufferInit^0,w,c
 17052  0067B0  2613               	addwf	(??_CircularBufferInit+2)^0,f,c
 17053  0067B2  5012               	movf	(??_CircularBufferInit+1)^0,w,c
 17054  0067B4  2214               	addwfc	(??_CircularBufferInit+3)^0,f,c
 17055  0067B6  EE20 F008          	lfsr	2,8
 17056  0067BA  5009               	movf	CircularBufferInit@ctx^0,w,c
 17057  0067BC  26D9               	addwf	fsr2l,f,c
 17058  0067BE  500A               	movf	(CircularBufferInit@ctx+1)^0,w,c
 17059  0067C0  22DA               	addwfc	fsr2h,f,c
 17060  0067C2  0060  F04F  FFDE   	movff	??_CircularBufferInit+2,postinc2
 17061  0067C8  0060  F053  FFDD   	movff	??_CircularBufferInit+3,postdec2
 17062  0067CE  0012               	return		;funcret
 17063  0067D0                     __end_of_CircularBufferInit:
 17064                           	opt callstack 0
 17065                           
 17066 ;; *************** function ___lwdiv *****************
 17067 ;; Defined at:
 17068 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lwdiv.c"
 17069 ;; Parameters:    Size  Location     Type
 17070 ;;  dividend        2    1[COMRAM] unsigned int 
 17071 ;;  divisor         2    3[COMRAM] unsigned int 
 17072 ;; Auto vars:     Size  Location     Type
 17073 ;;  quotient        2    5[COMRAM] unsigned int 
 17074 ;;  counter         1    7[COMRAM] unsigned char 
 17075 ;; Return value:  Size  Location     Type
 17076 ;;                  2    1[COMRAM] unsigned int 
 17077 ;; Registers used:
 17078 ;;		wreg, status,2, status,0
 17079 ;; Tracked objects:
 17080 ;;		On entry : 0/3D
 17081 ;;		On exit  : 0/0
 17082 ;;		Unchanged: 0/0
 17083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17084 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17085 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17087 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17088 ;;Total ram usage:        7 bytes
 17089 ;; Hardware stack levels used:    1
 17090 ;; Hardware stack levels required when called:    7
 17091 ;; This function calls:
 17092 ;;		Nothing
 17093 ;; This function is called by:
 17094 ;;		_CircularBufferInit
 17095 ;; This function uses a non-reentrant model
 17096 ;;
 17097                           
 17098                           	psect	text102
 17099  007DAC                     __ptext102:
 17100                           	opt callstack 0
 17101  007DAC                     ___lwdiv:
 17102                           	opt callstack 21
 17103                           
 17104                           ;incstack = 0
 17105  007DAC  0E00               	movlw	0
 17106  007DAE  6E07               	movwf	(___lwdiv@quotient+1)^0,c
 17107  007DB0  0E00               	movlw	0
 17108  007DB2  6E06               	movwf	___lwdiv@quotient^0,c
 17109  007DB4  5004               	movf	___lwdiv@divisor^0,w,c
 17110  007DB6  1005               	iorwf	(___lwdiv@divisor+1)^0,w,c
 17111  007DB8  B4D8               	btfsc	status,2,c
 17112  007DBA  D01C               	goto	l3722
 17113  007DBC  0E01               	movlw	1
 17114  007DBE  6E08               	movwf	___lwdiv@counter^0,c
 17115  007DC0  D004               	goto	l12708
 17116  007DC2                     l12706:
 17117  007DC2  90D8               	bcf	status,0,c
 17118  007DC4  3604               	rlcf	___lwdiv@divisor^0,f,c
 17119  007DC6  3605               	rlcf	(___lwdiv@divisor+1)^0,f,c
 17120  007DC8  2A08               	incf	___lwdiv@counter^0,f,c
 17121  007DCA                     l12708:
 17122  007DCA  AE05               	btfss	(___lwdiv@divisor+1)^0,7,c
 17123  007DCC  D7FA               	goto	l12706
 17124  007DCE                     u11780:
 17125  007DCE  90D8               	bcf	status,0,c
 17126  007DD0  3606               	rlcf	___lwdiv@quotient^0,f,c
 17127  007DD2  3607               	rlcf	(___lwdiv@quotient+1)^0,f,c
 17128  007DD4  5004               	movf	___lwdiv@divisor^0,w,c
 17129  007DD6  5C02               	subwf	___lwdiv@dividend^0,w,c
 17130  007DD8  5005               	movf	(___lwdiv@divisor+1)^0,w,c
 17131  007DDA  5803               	subwfb	(___lwdiv@dividend+1)^0,w,c
 17132  007DDC  A0D8               	btfss	status,0,c
 17133  007DDE  D005               	goto	l12718
 17134  007DE0  5004               	movf	___lwdiv@divisor^0,w,c
 17135  007DE2  5E02               	subwf	___lwdiv@dividend^0,f,c
 17136  007DE4  5005               	movf	(___lwdiv@divisor+1)^0,w,c
 17137  007DE6  5A03               	subwfb	(___lwdiv@dividend+1)^0,f,c
 17138  007DE8  8006               	bsf	___lwdiv@quotient^0,0,c
 17139  007DEA                     l12718:
 17140  007DEA  90D8               	bcf	status,0,c
 17141  007DEC  3205               	rrcf	(___lwdiv@divisor+1)^0,f,c
 17142  007DEE  3204               	rrcf	___lwdiv@divisor^0,f,c
 17143  007DF0  2E08               	decfsz	___lwdiv@counter^0,f,c
 17144  007DF2  D7ED               	goto	u11780
 17145  007DF4                     l3722:
 17146  007DF4  0060  F018  F002   	movff	___lwdiv@quotient,?___lwdiv
 17147  007DFA  0060  F01C  F003   	movff	___lwdiv@quotient+1,?___lwdiv+1
 17148  007E00  0012               	return		;funcret
 17149  007E02                     __end_of___lwdiv:
 17150                           	opt callstack 0
 17151                           
 17152 ;; *************** function _SYS_TaskHandler *****************
 17153 ;; Defined at:
 17154 ;;		line 67 in file "../sys/sys_src/sys.c"
 17155 ;; Parameters:    Size  Location     Type
 17156 ;;		None
 17157 ;; Auto vars:     Size  Location     Type
 17158 ;;		None
 17159 ;; Return value:  Size  Location     Type
 17160 ;;                  1    wreg      void 
 17161 ;; Registers used:
 17162 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 17163 ;; Tracked objects:
 17164 ;;		On entry : 0/2
 17165 ;;		On exit  : 3F/0
 17166 ;;		Unchanged: 0/0
 17167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17172 ;;Total ram usage:        0 bytes
 17173 ;; Hardware stack levels used:    1
 17174 ;; Hardware stack levels required when called:   16
 17175 ;; This function calls:
 17176 ;;		_NWK_TaskHandler
 17177 ;;		_PHY_TaskHandler
 17178 ;;		_SYS_TimerTaskHandler
 17179 ;; This function is called by:
 17180 ;;		_main
 17181 ;; This function uses a non-reentrant model
 17182 ;;
 17183                           
 17184                           	psect	text103
 17185  008FA8                     __ptext103:
 17186                           	opt callstack 0
 17187  008FA8                     _SYS_TaskHandler:
 17188                           	opt callstack 14
 17189                           
 17190                           ;../sys/sys_src/sys.c: 69:   PHY_TaskHandler();
 17191                           
 17192                           ;incstack = 0
 17193  008FA8  EC42  F048         	call	_PHY_TaskHandler	;wreg free
 17194                           
 17195                           ;../sys/sys_src/sys.c: 70:   NWK_TaskHandler();
 17196  008FAC  ECDB  F047         	call	_NWK_TaskHandler	;wreg free
 17197                           
 17198                           ;../sys/sys_src/sys.c: 71:   SYS_TimerTaskHandler();
 17199  008FB0  EC42  F026         	call	_SYS_TimerTaskHandler	;wreg free
 17200                           
 17201                           ; BSR set to: 0
 17202  008FB4  0012               	return		;funcret
 17203  008FB6                     __end_of_SYS_TaskHandler:
 17204                           	opt callstack 0
 17205                           
 17206 ;; *************** function _SYS_TimerTaskHandler *****************
 17207 ;; Defined at:
 17208 ;;		line 112 in file "../sys/sys_src/sysTimer.c"
 17209 ;; Parameters:    Size  Location     Type
 17210 ;;		None
 17211 ;; Auto vars:     Size  Location     Type
 17212 ;;  timer           2   33[COMRAM] PTR struct SYS_Timer_t
 17213 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17214 ;;  elapsed         4   29[COMRAM] unsigned long 
 17215 ;;  cnt             1   28[COMRAM] unsigned char 
 17216 ;; Return value:  Size  Location     Type
 17217 ;;                  1    wreg      void 
 17218 ;; Registers used:
 17219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 17220 ;; Tracked objects:
 17221 ;;		On entry : 0/0
 17222 ;;		On exit  : 3F/0
 17223 ;;		Unchanged: 0/0
 17224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17226 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17227 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17228 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17229 ;;Total ram usage:       11 bytes
 17230 ;; Hardware stack levels used:    1
 17231 ;; Hardware stack levels required when called:   10
 17232 ;; This function calls:
 17233 ;;		_nwkRxDuplicateRejectionTimerHandler
 17234 ;;		_nwkTxAckWaitTimerHandler
 17235 ;;		_nwkTxDelayTimerHandler
 17236 ;;		_placeTimer
 17237 ;; This function is called by:
 17238 ;;		_SYS_TaskHandler
 17239 ;; This function uses a non-reentrant model
 17240 ;;
 17241                           
 17242                           	psect	text104
 17243  004C84                     __ptext104:
 17244                           	opt callstack 0
 17245  004C84                     _SYS_TimerTaskHandler:
 17246                           	opt callstack 19
 17247                           
 17248                           ;../sys/sys_src/sysTimer.c: 114:     uint32_t elapsed;;../sys/sys_src/sysTimer.c: 115:  
      +                             uint8_t cnt;;../sys/sys_src/sysTimer.c: 117:     if (0 == halTimerIrqCount){
 17249                           
 17250                           ; BSR set to: 0
 17251                           ;incstack = 0
 17252  004C84  0100               	movlb	0	; () banked
 17253  004C86  51C1               	movf	_halTimerIrqCount& (0+255),w,b	;volatile
 17254  004C88  11C2               	iorwf	(_halTimerIrqCount+1)& (0+255),w,b	;volatile
 17255  004C8A  B4D8               	btfsc	status,2,c
 17256  004C8C  0012               	return	
 17257                           
 17258                           ; BSR set to: 0
 17259                           ;../sys/sys_src/sysTimer.c: 121:     PIE3bits.TMR0IE = 0;
 17260                           
 17261                           ;../sys/sys_src/sysTimer.c: 119:     }
 17262  004C8E  0139               	movlb	57	; () banked
 17263  004C90  9F93               	bcf	147,7,b	;volatile
 17264                           
 17265                           ;../sys/sys_src/sysTimer.c: 122:     cnt = halTimerIrqCount;
 17266  004C92  0060  F304  F01D   	movff	_halTimerIrqCount,SYS_TimerTaskHandler@cnt	;volatile
 17267                           
 17268                           ; BSR set to: 57
 17269                           ;../sys/sys_src/sysTimer.c: 123:     halTimerIrqCount = 0;
 17270  004C98  0E00               	movlw	0
 17271  004C9A  0100               	movlb	0	; () banked
 17272  004C9C  6FC2               	movwf	(_halTimerIrqCount+1)& (0+255),b	;volatile
 17273  004C9E  0E00               	movlw	0
 17274  004CA0  6FC1               	movwf	_halTimerIrqCount& (0+255),b	;volatile
 17275                           
 17276                           ; BSR set to: 0
 17277                           ;../sys/sys_src/sysTimer.c: 124:     PIE3bits.TMR0IE = 1;
 17278  004CA2  0139               	movlb	57	; () banked
 17279  004CA4  8F93               	bsf	147,7,b	;volatile
 17280                           
 17281                           ;../sys/sys_src/sysTimer.c: 126:     elapsed = cnt * 1ul;
 17282  004CA6  501D               	movf	SYS_TimerTaskHandler@cnt^0,w,c
 17283  004CA8  6E1E               	movwf	SYS_TimerTaskHandler@elapsed^0,c
 17284  004CAA  6A1F               	clrf	(SYS_TimerTaskHandler@elapsed+1)^0,c
 17285  004CAC  6A20               	clrf	(SYS_TimerTaskHandler@elapsed+2)^0,c
 17286  004CAE  6A21               	clrf	(SYS_TimerTaskHandler@elapsed+3)^0,c
 17287                           
 17288                           ;../sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
 17289  004CB0  D04E               	goto	u12399
 17290  004CB2                     l13234:
 17291                           
 17292                           ; BSR set to: 0
 17293                           ;../sys/sys_src/sysTimer.c: 129:     {;../sys/sys_src/sysTimer.c: 130:         SYS_Timer
      +                          _t *timer = timers;
 17294  004CB2  0060  F2EC  F022   	movff	_timers,SYS_TimerTaskHandler@timer
 17295  004CB8  0060  F2F0  F023   	movff	_timers+1,SYS_TimerTaskHandler@timer+1
 17296                           
 17297                           ; BSR set to: 0
 17298                           ;../sys/sys_src/sysTimer.c: 132:         elapsed -= timers->timeout;
 17299  004CBE  EE20 F002          	lfsr	2,2
 17300  004CC2  51BB               	movf	_timers& (0+255),w,b
 17301  004CC4  26D9               	addwf	fsr2l,f,c
 17302  004CC6  51BC               	movf	(_timers+1)& (0+255),w,b
 17303  004CC8  22DA               	addwfc	fsr2h,f,c
 17304  004CCA  50DE               	movf	postinc2,w,c
 17305  004CCC  5E1E               	subwf	SYS_TimerTaskHandler@elapsed^0,f,c
 17306  004CCE  50DE               	movf	postinc2,w,c
 17307  004CD0  5A1F               	subwfb	(SYS_TimerTaskHandler@elapsed+1)^0,f,c
 17308  004CD2  50DE               	movf	postinc2,w,c
 17309  004CD4  5A20               	subwfb	(SYS_TimerTaskHandler@elapsed+2)^0,f,c
 17310  004CD6  50DD               	movf	postdec2,w,c
 17311  004CD8  5A21               	subwfb	(SYS_TimerTaskHandler@elapsed+3)^0,f,c
 17312                           
 17313                           ;../sys/sys_src/sysTimer.c: 133:         timers = timers->next;
 17314  004CDA  0060  F2EF  FFD9   	movff	_timers,fsr2l
 17315  004CE0  0060  F2F3  FFDA   	movff	_timers+1,fsr2h
 17316  004CE6  006F FF78  F0BB    	movff	postinc2,_timers
 17317  004CEC  006F FF74  F0BC    	movff	postdec2,_timers+1
 17318                           
 17319                           ; BSR set to: 0
 17320                           ;../sys/sys_src/sysTimer.c: 134:         if (SYS_TIMER_PERIODIC_MODE == timer->mode)
 17321  004CF2  EE20 F00A          	lfsr	2,10
 17322  004CF6  5022               	movf	SYS_TimerTaskHandler@timer^0,w,c
 17323  004CF8  26D9               	addwf	fsr2l,f,c
 17324  004CFA  5023               	movf	(SYS_TimerTaskHandler@timer+1)^0,w,c
 17325  004CFC  22DA               	addwfc	fsr2h,f,c
 17326  004CFE  04DE               	decf	postinc2,w,c
 17327  004D00  A4D8               	btfss	status,2,c
 17328  004D02  D008               	goto	l13242
 17329                           
 17330                           ; BSR set to: 0
 17331                           ;../sys/sys_src/sysTimer.c: 135:           placeTimer(timer);
 17332  004D04  0060  F088  F002   	movff	SYS_TimerTaskHandler@timer,placeTimer@timer
 17333  004D0A  0060  F08C  F003   	movff	SYS_TimerTaskHandler@timer+1,placeTimer@timer+1
 17334  004D10  EC3B  F01C         	call	_placeTimer	;wreg free
 17335  004D14                     l13242:
 17336                           
 17337                           ;../sys/sys_src/sysTimer.c: 136:         timer->handler(timer);
 17338  004D14  0060  F088  F012   	movff	SYS_TimerTaskHandler@timer,nwkTxDelayTimerHandler@timer
 17339  004D1A  0060  F08C  F013   	movff	SYS_TimerTaskHandler@timer+1,nwkTxDelayTimerHandler@timer+1
 17340  004D20  EE20 F00B          	lfsr	2,11
 17341  004D24  5022               	movf	SYS_TimerTaskHandler@timer^0,w,c
 17342  004D26  26D9               	addwf	fsr2l,f,c
 17343  004D28  5023               	movf	(SYS_TimerTaskHandler@timer+1)^0,w,c
 17344  004D2A  22DA               	addwfc	fsr2h,f,c
 17345  004D2C  006F FF78  F019    	movff	postinc2,??_SYS_TimerTaskHandler
 17346  004D32  006F FF74  F01A    	movff	postdec2,??_SYS_TimerTaskHandler+1
 17347  004D38  D801               	call	u12398
 17348  004D3A  D009               	goto	u12399
 17349  004D3C                     u12398:
 17350  004D3C  0005               	push	
 17351  004D3E  6EFA               	movwf	pclath,c
 17352  004D40  5019               	movf	??_SYS_TimerTaskHandler^0,w,c
 17353  004D42  6EFD               	movwf	tosl,c
 17354  004D44  501A               	movf	(??_SYS_TimerTaskHandler+1)^0,w,c
 17355  004D46  6EFE               	movwf	tosh,c
 17356  004D48  6AFF               	clrf	tosu,c
 17357  004D4A  50FA               	movf	pclath,w,c
 17358  004D4C  0012               	return		;indir
 17359  004D4E                     u12399:
 17360                           
 17361                           ;../sys/sys_src/sysTimer.c: 128:     while (timers && (timers->timeout <= elapsed))
 17362  004D4E  0100               	movlb	0	; () banked
 17363  004D50  51BB               	movf	_timers& (0+255),w,b
 17364  004D52  11BC               	iorwf	(_timers+1)& (0+255),w,b
 17365  004D54  B4D8               	btfsc	status,2,c
 17366  004D56  D010               	goto	u12410
 17367                           
 17368                           ; BSR set to: 0
 17369  004D58  EE20 F002          	lfsr	2,2
 17370  004D5C  51BB               	movf	_timers& (0+255),w,b
 17371  004D5E  26D9               	addwf	fsr2l,f,c
 17372  004D60  51BC               	movf	(_timers+1)& (0+255),w,b
 17373  004D62  22DA               	addwfc	fsr2h,f,c
 17374  004D64  50DE               	movf	postinc2,w,c
 17375  004D66  5C1E               	subwf	SYS_TimerTaskHandler@elapsed^0,w,c
 17376  004D68  50DE               	movf	postinc2,w,c
 17377  004D6A  581F               	subwfb	(SYS_TimerTaskHandler@elapsed+1)^0,w,c
 17378  004D6C  50DE               	movf	postinc2,w,c
 17379  004D6E  5820               	subwfb	(SYS_TimerTaskHandler@elapsed+2)^0,w,c
 17380  004D70  50DE               	movf	postinc2,w,c
 17381  004D72  5821               	subwfb	(SYS_TimerTaskHandler@elapsed+3)^0,w,c
 17382  004D74  B0D8               	btfsc	status,0,c
 17383  004D76  D79D               	goto	l13234
 17384  004D78                     u12410:
 17385                           
 17386                           ; BSR set to: 0
 17387                           ;../sys/sys_src/sysTimer.c: 139:     if (timers){
 17388  004D78  51BB               	movf	_timers& (0+255),w,b
 17389  004D7A  11BC               	iorwf	(_timers+1)& (0+255),w,b
 17390  004D7C  B4D8               	btfsc	status,2,c
 17391  004D7E  0012               	return	
 17392                           
 17393                           ; BSR set to: 0
 17394                           ;../sys/sys_src/sysTimer.c: 140:         timers->timeout -= elapsed;
 17395  004D80  EE20 F002          	lfsr	2,2
 17396  004D84  51BB               	movf	_timers& (0+255),w,b
 17397  004D86  26D9               	addwf	fsr2l,f,c
 17398  004D88  51BC               	movf	(_timers+1)& (0+255),w,b
 17399  004D8A  22DA               	addwfc	fsr2h,f,c
 17400  004D8C  501E               	movf	SYS_TimerTaskHandler@elapsed^0,w,c
 17401  004D8E  5EDE               	subwf	postinc2,f,c
 17402  004D90  501F               	movf	(SYS_TimerTaskHandler@elapsed+1)^0,w,c
 17403  004D92  5ADE               	subwfb	postinc2,f,c
 17404  004D94  5020               	movf	(SYS_TimerTaskHandler@elapsed+2)^0,w,c
 17405  004D96  5ADE               	subwfb	postinc2,f,c
 17406  004D98  5021               	movf	(SYS_TimerTaskHandler@elapsed+3)^0,w,c
 17407  004D9A  5ADE               	subwfb	postinc2,f,c
 17408                           
 17409                           ; BSR set to: 0
 17410  004D9C  0012               	return		;funcret
 17411  004D9E                     __end_of_SYS_TimerTaskHandler:
 17412                           	opt callstack 0
 17413                           
 17414 ;; *************** function _nwkTxAckWaitTimerHandler *****************
 17415 ;; Defined at:
 17416 ;;		line 205 in file "../nwk/nwk_src/nwkTx.c"
 17417 ;; Parameters:    Size  Location     Type
 17418 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 17419 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17420 ;; Auto vars:     Size  Location     Type
 17421 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 17422 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17423 ;;  restart         1   21[COMRAM] _Bool 
 17424 ;; Return value:  Size  Location     Type
 17425 ;;                  1    wreg      void 
 17426 ;; Registers used:
 17427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17428 ;; Tracked objects:
 17429 ;;		On entry : 0/0
 17430 ;;		On exit  : 0/0
 17431 ;;		Unchanged: 0/0
 17432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17433 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17434 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17435 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17436 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17437 ;;Total ram usage:        7 bytes
 17438 ;; Hardware stack levels used:    1
 17439 ;; Hardware stack levels required when called:    9
 17440 ;; This function calls:
 17441 ;;		_SYS_TimerStart
 17442 ;;		_nwkFrameNext
 17443 ;;		_nwkTxConfirm
 17444 ;; This function is called by:
 17445 ;;		_nwkTxInit
 17446 ;;		_SYS_TimerTaskHandler
 17447 ;; This function uses a non-reentrant model
 17448 ;;
 17449                           
 17450                           	psect	text105
 17451  007022                     __ptext105:
 17452                           	opt callstack 0
 17453  007022                     _nwkTxAckWaitTimerHandler:
 17454                           	opt callstack 19
 17455                           
 17456                           ;../nwk/nwk_src/nwkTx.c: 205: static void nwkTxAckWaitTimerHandler(SYS_Timer_t *timer);.
      +                          ./nwk/nwk_src/nwkTx.c: 206: {;../nwk/nwk_src/nwkTx.c: 207:   NwkFrame_t *frame = ((void*
      +                          )0);
 17457                           
 17458                           ; BSR set to: 0
 17459                           ;incstack = 0
 17460  007022  0E00               	movlw	0
 17461  007024  6E17               	movwf	nwkTxAckWaitTimerHandler@frame^0,c
 17462  007026  0E00               	movlw	0
 17463  007028  6E18               	movwf	(nwkTxAckWaitTimerHandler@frame+1)^0,c
 17464                           
 17465                           ;../nwk/nwk_src/nwkTx.c: 208:   _Bool restart = 0;
 17466  00702A  0E00               	movlw	0
 17467  00702C  6E16               	movwf	nwkTxAckWaitTimerHandler@restart^0,c
 17468                           
 17469                           ;../nwk/nwk_src/nwkTx.c: 210:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 17470  00702E  D023               	goto	l2366
 17471  007030                     l12606:
 17472                           
 17473                           ;../nwk/nwk_src/nwkTx.c: 211:   {;../nwk/nwk_src/nwkTx.c: 212:     if (NWK_TX_STATE_WAIT
      +                          _ACK == frame->state)
 17474  007030  0060  F05F  FFD9   	movff	nwkTxAckWaitTimerHandler@frame,fsr2l
 17475  007036  0060  F063  FFDA   	movff	nwkTxAckWaitTimerHandler@frame+1,fsr2h
 17476  00703C  0E16               	movlw	22
 17477  00703E  18DE               	xorwf	postinc2,w,c
 17478  007040  A4D8               	btfss	status,2,c
 17479  007042  D019               	goto	l2366
 17480                           
 17481                           ;../nwk/nwk_src/nwkTx.c: 213:     {;../nwk/nwk_src/nwkTx.c: 214:       restart = 1;
 17482  007044  0E01               	movlw	1
 17483  007046  6E16               	movwf	nwkTxAckWaitTimerHandler@restart^0,c
 17484                           
 17485                           ;../nwk/nwk_src/nwkTx.c: 216:       if (0 == --frame->tx.timeout)
 17486  007048  EE20 F084          	lfsr	2,132
 17487  00704C  5017               	movf	nwkTxAckWaitTimerHandler@frame^0,w,c
 17488  00704E  26D9               	addwf	fsr2l,f,c
 17489  007050  5018               	movf	(nwkTxAckWaitTimerHandler@frame+1)^0,w,c
 17490  007052  22DA               	addwfc	fsr2h,f,c
 17491  007054  06DE               	decf	postinc2,f,c
 17492  007056  0E00               	movlw	0
 17493  007058  5ADD               	subwfb	postdec2,f,c
 17494  00705A  50DE               	movf	postinc2,w,c
 17495  00705C  10DE               	iorwf	postinc2,w,c
 17496  00705E  A4D8               	btfss	status,2,c
 17497  007060  D00A               	goto	l2366
 17498                           
 17499                           ;../nwk/nwk_src/nwkTx.c: 217:         nwkTxConfirm(frame, NWK_NO_ACK_STATUS);
 17500  007062  0060  F05C  F002   	movff	nwkTxAckWaitTimerHandler@frame,nwkTxConfirm@frame
 17501  007068  0060  F060  F003   	movff	nwkTxAckWaitTimerHandler@frame+1,nwkTxConfirm@frame+1
 17502  00706E  0E10               	movlw	16
 17503  007070  6E04               	movwf	nwkTxConfirm@status^0,c
 17504  007072  EC8E  F045         	call	_nwkTxConfirm	;wreg free
 17505  007076                     l2366:
 17506                           
 17507                           ;../nwk/nwk_src/nwkTx.c: 210:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 17508  007076  0060  F05C  F002   	movff	nwkTxAckWaitTimerHandler@frame,nwkFrameNext@frame
 17509  00707C  0060  F060  F003   	movff	nwkTxAckWaitTimerHandler@frame+1,nwkFrameNext@frame+1
 17510  007082  ECE5  F038         	call	_nwkFrameNext	;wreg free
 17511  007086  0060  F008  F017   	movff	?_nwkFrameNext,nwkTxAckWaitTimerHandler@frame
 17512  00708C  0060  F00C  F018   	movff	?_nwkFrameNext+1,nwkTxAckWaitTimerHandler@frame+1
 17513  007092  5017               	movf	nwkTxAckWaitTimerHandler@frame^0,w,c
 17514  007094  1018               	iorwf	(nwkTxAckWaitTimerHandler@frame+1)^0,w,c
 17515  007096  A4D8               	btfss	status,2,c
 17516  007098  D7CB               	goto	l12606
 17517                           
 17518                           ;../nwk/nwk_src/nwkTx.c: 221:   if (restart)
 17519  00709A  5016               	movf	nwkTxAckWaitTimerHandler@restart^0,w,c
 17520  00709C  B4D8               	btfsc	status,2,c
 17521  00709E  0012               	return	
 17522                           
 17523                           ;../nwk/nwk_src/nwkTx.c: 222:     SYS_TimerStart(timer);
 17524  0070A0  0060  F048  F010   	movff	nwkTxAckWaitTimerHandler@timer,SYS_TimerStart@timer
 17525  0070A6  0060  F04C  F011   	movff	nwkTxAckWaitTimerHandler@timer+1,SYS_TimerStart@timer+1
 17526  0070AC  EC40  F045         	call	_SYS_TimerStart	;wreg free
 17527  0070B0  0012               	return		;funcret
 17528  0070B2                     __end_of_nwkTxAckWaitTimerHandler:
 17529                           	opt callstack 0
 17530                           
 17531 ;; *************** function _nwkRxDuplicateRejectionTimerHandler *****************
 17532 ;; Defined at:
 17533 ;;		line 181 in file "../nwk/nwk_src/nwkRx.c"
 17534 ;; Parameters:    Size  Location     Type
 17535 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 17536 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17537 ;; Auto vars:     Size  Location     Type
 17538 ;;  i               1   20[COMRAM] unsigned char 
 17539 ;;  restart         1   19[COMRAM] _Bool 
 17540 ;; Return value:  Size  Location     Type
 17541 ;;                  1    wreg      void 
 17542 ;; Registers used:
 17543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17544 ;; Tracked objects:
 17545 ;;		On entry : 0/0
 17546 ;;		On exit  : 0/0
 17547 ;;		Unchanged: 0/0
 17548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17550 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17552 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17553 ;;Total ram usage:        4 bytes
 17554 ;; Hardware stack levels used:    1
 17555 ;; Hardware stack levels required when called:    9
 17556 ;; This function calls:
 17557 ;;		_SYS_TimerStart
 17558 ;; This function is called by:
 17559 ;;		_nwkRxInit
 17560 ;;		_SYS_TimerTaskHandler
 17561 ;; This function uses a non-reentrant model
 17562 ;;
 17563                           
 17564                           	psect	text106
 17565  007E56                     __ptext106:
 17566                           	opt callstack 0
 17567  007E56                     _nwkRxDuplicateRejectionTimerHandler:
 17568                           	opt callstack 19
 17569                           
 17570                           ;../nwk/nwk_src/nwkRx.c: 181: static void nwkRxDuplicateRejectionTimerHandler(SYS_Timer_
      +                          t *timer);../nwk/nwk_src/nwkRx.c: 182: {;../nwk/nwk_src/nwkRx.c: 183:   _Bool restart = 
      +                          0;
 17571                           
 17572                           ;incstack = 0
 17573  007E56  0E00               	movlw	0
 17574  007E58  6E14               	movwf	nwkRxDuplicateRejectionTimerHandler@restart^0,c
 17575                           
 17576                           ;../nwk/nwk_src/nwkRx.c: 185:   for (uint8_t i = 0; i < 10; i++)
 17577  007E5A  0E00               	movlw	0
 17578  007E5C  6E15               	movwf	nwkRxDuplicateRejectionTimerHandler@i^0,c
 17579  007E5E                     l12588:
 17580                           
 17581                           ;../nwk/nwk_src/nwkRx.c: 186:   {;../nwk/nwk_src/nwkRx.c: 187:     if (nwkRxDuplicateRej
      +                          ectionTable[i].ttl)
 17582  007E5E  5015               	movf	nwkRxDuplicateRejectionTimerHandler@i^0,w,c
 17583  007E60  0D05               	mullw	5
 17584  007E62  0E8E               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 17585  007E64  24F3               	addwf	243,w,c
 17586  007E66  6ED9               	movwf	fsr2l,c
 17587  007E68  0E02               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 17588  007E6A  20F4               	addwfc	prodh,w,c
 17589  007E6C  6EDA               	movwf	fsr2h,c
 17590  007E6E  50DF               	movf	indf2,w,c
 17591  007E70  B4D8               	btfsc	status,2,c
 17592  007E72  D00B               	goto	l12594
 17593                           
 17594                           ;../nwk/nwk_src/nwkRx.c: 188:     {;../nwk/nwk_src/nwkRx.c: 189:       nwkRxDuplicateRej
      +                          ectionTable[i].ttl--;
 17595  007E74  5015               	movf	nwkRxDuplicateRejectionTimerHandler@i^0,w,c
 17596  007E76  0D05               	mullw	5
 17597  007E78  0E8E               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 17598  007E7A  24F3               	addwf	243,w,c
 17599  007E7C  6ED9               	movwf	fsr2l,c
 17600  007E7E  0E02               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 17601  007E80  20F4               	addwfc	prodh,w,c
 17602  007E82  6EDA               	movwf	fsr2h,c
 17603  007E84  06DF               	decf	indf2,f,c
 17604                           
 17605                           ;../nwk/nwk_src/nwkRx.c: 190:       restart = 1;
 17606  007E86  0E01               	movlw	1
 17607  007E88  6E14               	movwf	nwkRxDuplicateRejectionTimerHandler@restart^0,c
 17608  007E8A                     l12594:
 17609                           
 17610                           ;../nwk/nwk_src/nwkRx.c: 192:   }
 17611  007E8A  2A15               	incf	nwkRxDuplicateRejectionTimerHandler@i^0,f,c
 17612  007E8C  0E09               	movlw	9
 17613  007E8E  6415               	cpfsgt	nwkRxDuplicateRejectionTimerHandler@i^0,c
 17614  007E90  D7E6               	goto	l12588
 17615                           
 17616                           ;../nwk/nwk_src/nwkRx.c: 194:   if (restart)
 17617  007E92  5014               	movf	nwkRxDuplicateRejectionTimerHandler@restart^0,w,c
 17618  007E94  B4D8               	btfsc	status,2,c
 17619  007E96  0012               	return	
 17620                           
 17621                           ;../nwk/nwk_src/nwkRx.c: 195:     SYS_TimerStart(timer);
 17622  007E98  0060  F048  F010   	movff	nwkRxDuplicateRejectionTimerHandler@timer,SYS_TimerStart@timer
 17623  007E9E  0060  F04C  F011   	movff	nwkRxDuplicateRejectionTimerHandler@timer+1,SYS_TimerStart@timer+1
 17624  007EA4  EC40  F045         	call	_SYS_TimerStart	;wreg free
 17625  007EA8  0012               	return		;funcret
 17626  007EAA                     __end_of_nwkRxDuplicateRejectionTimerHandler:
 17627                           	opt callstack 0
 17628                           
 17629 ;; *************** function _nwkTxDelayTimerHandler *****************
 17630 ;; Defined at:
 17631 ;;		line 244 in file "../nwk/nwk_src/nwkTx.c"
 17632 ;; Parameters:    Size  Location     Type
 17633 ;;  timer           2   17[COMRAM] PTR struct SYS_Timer_t
 17634 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 17635 ;; Auto vars:     Size  Location     Type
 17636 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 17637 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17638 ;;  restart         1   21[COMRAM] _Bool 
 17639 ;; Return value:  Size  Location     Type
 17640 ;;                  1    wreg      void 
 17641 ;; Registers used:
 17642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17643 ;; Tracked objects:
 17644 ;;		On entry : 0/0
 17645 ;;		On exit  : 0/0
 17646 ;;		Unchanged: 0/0
 17647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17649 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17650 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17651 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17652 ;;Total ram usage:        7 bytes
 17653 ;; Hardware stack levels used:    1
 17654 ;; Hardware stack levels required when called:    9
 17655 ;; This function calls:
 17656 ;;		_SYS_TimerStart
 17657 ;;		_nwkFrameNext
 17658 ;; This function is called by:
 17659 ;;		_nwkTxInit
 17660 ;;		_SYS_TimerTaskHandler
 17661 ;; This function uses a non-reentrant model
 17662 ;;
 17663                           
 17664                           	psect	text107
 17665  00713E                     __ptext107:
 17666                           	opt callstack 0
 17667  00713E                     _nwkTxDelayTimerHandler:
 17668                           	opt callstack 19
 17669                           
 17670                           ;../nwk/nwk_src/nwkTx.c: 244: static void nwkTxDelayTimerHandler(SYS_Timer_t *timer);../
      +                          nwk/nwk_src/nwkTx.c: 245: {;../nwk/nwk_src/nwkTx.c: 246:   NwkFrame_t *frame = ((void*)0
      +                          );
 17671                           
 17672                           ;incstack = 0
 17673  00713E  0E00               	movlw	0
 17674  007140  6E17               	movwf	nwkTxDelayTimerHandler@frame^0,c
 17675  007142  0E00               	movlw	0
 17676  007144  6E18               	movwf	(nwkTxDelayTimerHandler@frame+1)^0,c
 17677                           
 17678                           ;../nwk/nwk_src/nwkTx.c: 247:   _Bool restart = 0;
 17679  007146  0E00               	movlw	0
 17680  007148  6E16               	movwf	nwkTxDelayTimerHandler@restart^0,c
 17681                           
 17682                           ;../nwk/nwk_src/nwkTx.c: 249:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 17683  00714A  D021               	goto	l12630
 17684  00714C                     l12622:
 17685                           
 17686                           ;../nwk/nwk_src/nwkTx.c: 250:   {;../nwk/nwk_src/nwkTx.c: 251:     if (NWK_TX_STATE_WAIT
      +                          _DELAY == frame->state)
 17687  00714C  0060  F05F  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
 17688  007152  0060  F063  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
 17689  007158  0E11               	movlw	17
 17690  00715A  18DE               	xorwf	postinc2,w,c
 17691  00715C  A4D8               	btfss	status,2,c
 17692  00715E  D017               	goto	l12630
 17693                           
 17694                           ;../nwk/nwk_src/nwkTx.c: 252:     {;../nwk/nwk_src/nwkTx.c: 253:       restart = 1;
 17695  007160  0E01               	movlw	1
 17696  007162  6E16               	movwf	nwkTxDelayTimerHandler@restart^0,c
 17697                           
 17698                           ;../nwk/nwk_src/nwkTx.c: 255:       if (0 == --frame->tx.timeout)
 17699  007164  EE20 F084          	lfsr	2,132
 17700  007168  5017               	movf	nwkTxDelayTimerHandler@frame^0,w,c
 17701  00716A  26D9               	addwf	fsr2l,f,c
 17702  00716C  5018               	movf	(nwkTxDelayTimerHandler@frame+1)^0,w,c
 17703  00716E  22DA               	addwfc	fsr2h,f,c
 17704  007170  06DE               	decf	postinc2,f,c
 17705  007172  0E00               	movlw	0
 17706  007174  5ADD               	subwfb	postdec2,f,c
 17707  007176  50DE               	movf	postinc2,w,c
 17708  007178  10DE               	iorwf	postinc2,w,c
 17709  00717A  A4D8               	btfss	status,2,c
 17710  00717C  D008               	goto	l12630
 17711                           
 17712                           ;../nwk/nwk_src/nwkTx.c: 256:         frame->state = NWK_TX_STATE_SEND;
 17713  00717E  0060  F05F  FFD9   	movff	nwkTxDelayTimerHandler@frame,fsr2l
 17714  007184  0060  F063  FFDA   	movff	nwkTxDelayTimerHandler@frame+1,fsr2h
 17715  00718A  0E13               	movlw	19
 17716  00718C  6EDF               	movwf	indf2,c
 17717  00718E                     l12630:
 17718                           
 17719                           ;../nwk/nwk_src/nwkTx.c: 249:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 17720  00718E  0060  F05C  F002   	movff	nwkTxDelayTimerHandler@frame,nwkFrameNext@frame
 17721  007194  0060  F060  F003   	movff	nwkTxDelayTimerHandler@frame+1,nwkFrameNext@frame+1
 17722  00719A  ECE5  F038         	call	_nwkFrameNext	;wreg free
 17723  00719E  0060  F008  F017   	movff	?_nwkFrameNext,nwkTxDelayTimerHandler@frame
 17724  0071A4  0060  F00C  F018   	movff	?_nwkFrameNext+1,nwkTxDelayTimerHandler@frame+1
 17725  0071AA  5017               	movf	nwkTxDelayTimerHandler@frame^0,w,c
 17726  0071AC  1018               	iorwf	(nwkTxDelayTimerHandler@frame+1)^0,w,c
 17727  0071AE  A4D8               	btfss	status,2,c
 17728  0071B0  D7CD               	goto	l12622
 17729                           
 17730                           ;../nwk/nwk_src/nwkTx.c: 260:   if (restart)
 17731  0071B2  5016               	movf	nwkTxDelayTimerHandler@restart^0,w,c
 17732  0071B4  B4D8               	btfsc	status,2,c
 17733  0071B6  0012               	return	
 17734                           
 17735                           ;../nwk/nwk_src/nwkTx.c: 261:     SYS_TimerStart(timer);
 17736  0071B8  0060  F048  F010   	movff	nwkTxDelayTimerHandler@timer,SYS_TimerStart@timer
 17737  0071BE  0060  F04C  F011   	movff	nwkTxDelayTimerHandler@timer+1,SYS_TimerStart@timer+1
 17738  0071C4  EC40  F045         	call	_SYS_TimerStart	;wreg free
 17739  0071C8  0012               	return		;funcret
 17740  0071CA                     __end_of_nwkTxDelayTimerHandler:
 17741                           	opt callstack 0
 17742                           
 17743 ;; *************** function _nwkTxConfirm *****************
 17744 ;; Defined at:
 17745 ;;		line 227 in file "../nwk/nwk_src/nwkTx.c"
 17746 ;; Parameters:    Size  Location     Type
 17747 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 17748 ;;		 -> nwkFrameFrames(685), NULL(0), 
 17749 ;;  status          1    3[COMRAM] unsigned char 
 17750 ;; Auto vars:     Size  Location     Type
 17751 ;;		None
 17752 ;; Return value:  Size  Location     Type
 17753 ;;                  1    wreg      void 
 17754 ;; Registers used:
 17755 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17756 ;; Tracked objects:
 17757 ;;		On entry : 0/0
 17758 ;;		On exit  : 0/0
 17759 ;;		Unchanged: 0/0
 17760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17761 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17764 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17765 ;;Total ram usage:        3 bytes
 17766 ;; Hardware stack levels used:    1
 17767 ;; Hardware stack levels required when called:    7
 17768 ;; This function calls:
 17769 ;;		Nothing
 17770 ;; This function is called by:
 17771 ;;		_nwkTxAckWaitTimerHandler
 17772 ;; This function uses a non-reentrant model
 17773 ;;
 17774                           
 17775                           	psect	text108
 17776  008B1C                     __ptext108:
 17777                           	opt callstack 0
 17778  008B1C                     _nwkTxConfirm:
 17779                           	opt callstack 20
 17780                           
 17781                           ;../nwk/nwk_src/nwkTx.c: 227: void nwkTxConfirm(NwkFrame_t *frame, uint8_t status);../nw
      +                          k/nwk_src/nwkTx.c: 228: {;../nwk/nwk_src/nwkTx.c: 229:   frame->state = NWK_TX_STATE_CON
      +                          FIRM;
 17782                           
 17783                           ;incstack = 0
 17784  008B1C  0060  F00B  FFD9   	movff	nwkTxConfirm@frame,fsr2l
 17785  008B22  0060  F00F  FFDA   	movff	nwkTxConfirm@frame+1,fsr2h
 17786  008B28  0E17               	movlw	23
 17787  008B2A  6EDF               	movwf	indf2,c
 17788                           
 17789                           ;../nwk/nwk_src/nwkTx.c: 230:   frame->tx.status = status;
 17790  008B2C  EE20 F083          	lfsr	2,131
 17791  008B30  5002               	movf	nwkTxConfirm@frame^0,w,c
 17792  008B32  26D9               	addwf	fsr2l,f,c
 17793  008B34  5003               	movf	(nwkTxConfirm@frame+1)^0,w,c
 17794  008B36  22DA               	addwfc	fsr2h,f,c
 17795  008B38  0060  F013  FFDF   	movff	nwkTxConfirm@status,indf2
 17796  008B3E  0012               	return		;funcret
 17797  008B40                     __end_of_nwkTxConfirm:
 17798                           	opt callstack 0
 17799                           
 17800 ;; *************** function _PHY_TaskHandler *****************
 17801 ;; Defined at:
 17802 ;;		line 859 in file "../phy/sx1216/phy_src/phy.c"
 17803 ;; Parameters:    Size  Location     Type
 17804 ;;		None
 17805 ;; Auto vars:     Size  Location     Type
 17806 ;;		None
 17807 ;; Return value:  Size  Location     Type
 17808 ;;                  1    wreg      void 
 17809 ;; Registers used:
 17810 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17811 ;; Tracked objects:
 17812 ;;		On entry : 0/2
 17813 ;;		On exit  : 2/0
 17814 ;;		Unchanged: 0/0
 17815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17820 ;;Total ram usage:        0 bytes
 17821 ;; Hardware stack levels used:    1
 17822 ;; Hardware stack levels required when called:   15
 17823 ;; This function calls:
 17824 ;;		_radio_engine
 17825 ;; This function is called by:
 17826 ;;		_SYS_TaskHandler
 17827 ;; This function uses a non-reentrant model
 17828 ;;
 17829                           
 17830                           	psect	text109
 17831  009084                     __ptext109:
 17832                           	opt callstack 0
 17833  009084                     _PHY_TaskHandler:
 17834                           	opt callstack 14
 17835                           
 17836                           ;../phy/sx1216/phy_src/phy.c: 860:     radio_engine();
 17837                           
 17838                           ;incstack = 0
 17839  009084  ECCF  F026         	call	_radio_engine	;wreg free
 17840  009088  0012               	return		;funcret
 17841  00908A                     __end_of_PHY_TaskHandler:
 17842                           	opt callstack 0
 17843                           
 17844 ;; *************** function _radio_engine *****************
 17845 ;; Defined at:
 17846 ;;		line 742 in file "../phy/sx1216/phy_src/phy.c"
 17847 ;; Parameters:    Size  Location     Type
 17848 ;;		None
 17849 ;; Auto vars:     Size  Location     Type
 17850 ;;		None
 17851 ;; Return value:  Size  Location     Type
 17852 ;;                  1    wreg      void 
 17853 ;; Registers used:
 17854 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17855 ;; Tracked objects:
 17856 ;;		On entry : 0/2
 17857 ;;		On exit  : 2/0
 17858 ;;		Unchanged: 0/0
 17859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17862 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17863 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17864 ;;Total ram usage:        2 bytes
 17865 ;; Hardware stack levels used:    1
 17866 ;; Hardware stack levels required when called:   14
 17867 ;; This function calls:
 17868 ;;		_DIO0_Receive_ISR
 17869 ;;		_PHY_DataConf
 17870 ;;		_SX1276Read
 17871 ;;		_cad
 17872 ;;		_get_timer0base
 17873 ;;		_initRadio
 17874 ;;		_receive
 17875 ;;		_set_timer0base
 17876 ;; This function is called by:
 17877 ;;		_PHY_TaskHandler
 17878 ;; This function uses a non-reentrant model
 17879 ;;
 17880                           
 17881                           	psect	text110
 17882  004D9E                     __ptext110:
 17883                           	opt callstack 0
 17884  004D9E                     _radio_engine:
 17885                           	opt callstack 14
 17886                           
 17887                           ;../phy/sx1216/phy_src/phy.c: 743:     switch(radio_state_var){
 17888                           
 17889                           ;incstack = 0
 17890  004D9E  D06D               	goto	l16352
 17891  004DA0                     l16298:
 17892                           
 17893                           ; BSR set to: 0
 17894                           ;../phy/sx1216/phy_src/phy.c: 745:             initRadio();
 17895  004DA0  ECB5  F020         	call	_initRadio	;wreg free
 17896                           
 17897                           ; BSR set to: 0
 17898                           ;../phy/sx1216/phy_src/phy.c: 746:             radio_state_var = START_RX;
 17899  004DA4  0E01               	movlw	1
 17900  004DA6  6FCA               	movwf	_radio_state_var& (0+255),b
 17901                           
 17902                           ; BSR set to: 0
 17903                           ;../phy/sx1216/phy_src/phy.c: 747:             need_radio_reset = 0;
 17904  004DA8  0E00               	movlw	0
 17905  004DAA  6FD3               	movwf	_need_radio_reset& (0+255),b
 17906                           
 17907                           ;../phy/sx1216/phy_src/phy.c: 748:             break;
 17908  004DAC  0012               	return	
 17909  004DAE                     l16304:
 17910                           
 17911                           ; BSR set to: 0
 17912                           ;../phy/sx1216/phy_src/phy.c: 750:             if(need_radio_reset){
 17913  004DAE  51D3               	movf	_need_radio_reset& (0+255),w,b
 17914  004DB0  B4D8               	btfsc	status,2,c
 17915  004DB2  D003               	goto	l16308
 17916  004DB4                     u16380:
 17917                           
 17918                           ; BSR set to: 0
 17919                           ;../phy/sx1216/phy_src/phy.c: 751:                 radio_state_var = INIT_RADIO;
 17920  004DB4  0E00               	movlw	0
 17921  004DB6  6FCA               	movwf	_radio_state_var& (0+255),b
 17922                           
 17923                           ;../phy/sx1216/phy_src/phy.c: 752:                 break;
 17924  004DB8  0012               	return	
 17925  004DBA                     l16308:
 17926                           
 17927                           ; BSR set to: 0
 17928                           ;../phy/sx1216/phy_src/phy.c: 754:             receive(0);
 17929  004DBA  0E00               	movlw	0
 17930  004DBC  EC74  F042         	call	_receive
 17931                           
 17932                           ; BSR set to: 61
 17933                           ;../phy/sx1216/phy_src/phy.c: 755:             radio_state_var = WAIT_FOR_RX;
 17934  004DC0  0E02               	movlw	2
 17935  004DC2  0100               	movlb	0	; () banked
 17936  004DC4  6FCA               	movwf	_radio_state_var& (0+255),b
 17937                           
 17938                           ;../phy/sx1216/phy_src/phy.c: 756:             break;
 17939  004DC6  0012               	return	
 17940  004DC8                     l2694:
 17941                           
 17942                           ; BSR set to: 0
 17943                           ;../phy/sx1216/phy_src/phy.c: 758:             if(PORTBbits.RB4){
 17944  004DC8  A8CB               	btfss	203,4,c	;volatile
 17945  004DCA  0012               	return	
 17946                           
 17947                           ; BSR set to: 0
 17948                           ;../phy/sx1216/phy_src/phy.c: 759:                 radio_state_var = RX_MESSAGE;
 17949  004DCC  0E03               	movlw	3
 17950  004DCE  6FCA               	movwf	_radio_state_var& (0+255),b
 17951  004DD0  0012               	return	
 17952  004DD2                     l16314:
 17953                           
 17954                           ; BSR set to: 0
 17955                           ;../phy/sx1216/phy_src/phy.c: 763:             DIO0_Receive_ISR();
 17956  004DD2  EC7D  F037         	call	_DIO0_Receive_ISR	;wreg free
 17957  004DD6                     l16316:
 17958                           
 17959                           ;../phy/sx1216/phy_src/phy.c: 764:             radio_state_var = START_RX;
 17960  004DD6  0E01               	movlw	1
 17961  004DD8  0100               	movlb	0	; () banked
 17962  004DDA  6FCA               	movwf	_radio_state_var& (0+255),b
 17963                           
 17964                           ;../phy/sx1216/phy_src/phy.c: 765:             break;
 17965  004DDC  0012               	return	
 17966  004DDE                     l16318:
 17967                           
 17968                           ; BSR set to: 0
 17969                           ;../phy/sx1216/phy_src/phy.c: 767:             if(!get_timer0base(&_cadBackoffTimer)){
 17970  004DDE  0EF5               	movlw	low __cadBackoffTimer
 17971  004DE0  6E02               	movwf	get_timer0base@timer^0,c
 17972  004DE2  EC68  F045         	call	_get_timer0base	;wreg free
 17973  004DE6  5002               	movf	?_get_timer0base^0,w,c
 17974  004DE8  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 17975  004DEA  A4D8               	btfss	status,2,c
 17976  004DEC  D7F4               	goto	l16316
 17977                           
 17978                           ; BSR set to: 57
 17979                           ;../phy/sx1216/phy_src/phy.c: 768:                 if(cad()){
 17980  004DEE  ECD5  F032         	call	_cad	;wreg free
 17981  004DF2  0900               	iorlw	0
 17982  004DF4  B4D8               	btfsc	status,2,c
 17983  004DF6  D010               	goto	l16330
 17984                           
 17985                           ;../phy/sx1216/phy_src/phy.c: 770:                     set_timer0base(&_cadBackoffTimer,
      +                           2000);
 17986  004DF8  0EF5               	movlw	low __cadBackoffTimer
 17987  004DFA  6E02               	movwf	set_timer0base@timer^0,c
 17988  004DFC  0E07               	movlw	7
 17989  004DFE  6E04               	movwf	(set_timer0base@tval+1)^0,c
 17990  004E00  0ED0               	movlw	208
 17991  004E02  6E03               	movwf	set_timer0base@tval^0,c
 17992  004E04  ECD4  F046         	call	_set_timer0base	;wreg free
 17993                           
 17994                           ; BSR set to: 57
 17995                           ;../phy/sx1216/phy_src/phy.c: 772:                     radio_state_var = START_RX;
 17996  004E08  0E01               	movlw	1
 17997  004E0A  0100               	movlb	0	; () banked
 17998  004E0C  6FCA               	movwf	_radio_state_var& (0+255),b
 17999                           
 18000                           ; BSR set to: 0
 18001                           ;../phy/sx1216/phy_src/phy.c: 773:                     if(cadCounter < 10)
 18002  004E0E  0E0A               	movlw	10
 18003  004E10  61D4               	cpfslt	_cadCounter& (0+255),b
 18004  004E12  0012               	return	
 18005                           
 18006                           ; BSR set to: 0
 18007                           ;../phy/sx1216/phy_src/phy.c: 774:                     {;../phy/sx1216/phy_src/phy.c: 77
      +                          5:                         cadCounter++;
 18008  004E14  2BD4               	incf	_cadCounter& (0+255),f,b
 18009  004E16  0012               	return	
 18010  004E18                     l16330:
 18011                           
 18012                           ;../phy/sx1216/phy_src/phy.c: 780:                 radio_state_var = START_TX;
 18013  004E18  0E06               	movlw	6
 18014  004E1A  0100               	movlb	0	; () banked
 18015  004E1C  6FCA               	movwf	_radio_state_var& (0+255),b
 18016  004E1E  0012               	return	
 18017  004E20                     l16334:
 18018                           
 18019                           ; BSR set to: 0
 18020                           ;../phy/sx1216/phy_src/phy.c: 789:             set_timer0base(&txTimeOut, 1000);
 18021  004E20  0EF1               	movlw	low _txTimeOut
 18022  004E22  6E02               	movwf	set_timer0base@timer^0,c
 18023  004E24  0E03               	movlw	3
 18024  004E26  6E04               	movwf	(set_timer0base@tval+1)^0,c
 18025  004E28  0EE8               	movlw	232
 18026  004E2A  6E03               	movwf	set_timer0base@tval^0,c
 18027  004E2C  ECD4  F046         	call	_set_timer0base	;wreg free
 18028                           
 18029                           ; BSR set to: 57
 18030                           ;../phy/sx1216/phy_src/phy.c: 790:             radio_state_var = WAIT_FOR_TX;
 18031  004E30  0E07               	movlw	7
 18032  004E32  0100               	movlb	0	; () banked
 18033  004E34  6FCA               	movwf	_radio_state_var& (0+255),b
 18034                           
 18035                           ;../phy/sx1216/phy_src/phy.c: 791:             break;
 18036  004E36  0012               	return	
 18037  004E38                     l16338:
 18038                           
 18039                           ; BSR set to: 0
 18040                           ;../phy/sx1216/phy_src/phy.c: 793:             if((!get_timer0base(&txTimeOut)) || ((SX1
      +                          276Read(0x12) & 0x08))){
 18041  004E38  0EF1               	movlw	low _txTimeOut
 18042  004E3A  6E02               	movwf	get_timer0base@timer^0,c
 18043  004E3C  EC68  F045         	call	_get_timer0base	;wreg free
 18044  004E40  5002               	movf	?_get_timer0base^0,w,c
 18045  004E42  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 18046  004E44  B4D8               	btfsc	status,2,c
 18047  004E46  D006               	goto	u16440
 18048                           
 18049                           ; BSR set to: 57
 18050  004E48  0E12               	movlw	18
 18051  004E4A  EC76  F047         	call	_SX1276Read
 18052  004E4E  6E4B               	movwf	??_radio_engine^0,c
 18053  004E50  A64B               	btfss	??_radio_engine^0,3,c
 18054  004E52  0012               	return	
 18055  004E54                     u16440:
 18056                           
 18057                           ;../phy/sx1216/phy_src/phy.c: 794:                 radio_state_var = START_RX;
 18058  004E54  0E01               	movlw	1
 18059  004E56  0100               	movlb	0	; () banked
 18060  004E58  6FCA               	movwf	_radio_state_var& (0+255),b
 18061                           
 18062                           ; BSR set to: 0
 18063                           ;../phy/sx1216/phy_src/phy.c: 795:                 if(get_timer0base(&txTimeOut)){
 18064  004E5A  0EF1               	movlw	low _txTimeOut
 18065  004E5C  6E02               	movwf	get_timer0base@timer^0,c
 18066  004E5E  EC68  F045         	call	_get_timer0base	;wreg free
 18067  004E62  5002               	movf	?_get_timer0base^0,w,c
 18068  004E64  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 18069  004E66  B4D8               	btfsc	status,2,c
 18070  004E68  D004               	goto	l16348
 18071                           
 18072                           ; BSR set to: 57
 18073                           ;../phy/sx1216/phy_src/phy.c: 796:                     PHY_DataConf(PHY_STATUS_SUCCESS);
 18074  004E6A  0E00               	movlw	0
 18075  004E6C  ECD0  F042         	call	_PHY_DataConf
 18076                           
 18077                           ;../phy/sx1216/phy_src/phy.c: 797:                 }
 18078  004E70  0012               	return	
 18079  004E72                     l16348:
 18080                           
 18081                           ; BSR set to: 57
 18082                           ;../phy/sx1216/phy_src/phy.c: 799:                     PHY_DataConf(PHY_STATUS_NO_ACK);
 18083  004E72  0E02               	movlw	2
 18084  004E74  ECD0  F042         	call	_PHY_DataConf
 18085  004E78  0012               	return	
 18086  004E7A                     l16352:
 18087  004E7A  0100               	movlb	0	; () banked
 18088  004E7C  51CA               	movf	_radio_state_var& (0+255),w,b
 18089  004E7E  6E4B               	movwf	??_radio_engine^0,c
 18090  004E80  6A4C               	clrf	(??_radio_engine+1)^0,c
 18091                           
 18092                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18093                           ; Switch size 1, requested type "simple"
 18094                           ; Number of cases is 1, Range of values is 0 to 0
 18095                           ; switch strategies available:
 18096                           ; Name         Instructions Cycles
 18097                           ; simple_byte            4     3 (average)
 18098                           ;	Chosen strategy is simple_byte
 18099  004E82  504C               	movf	(??_radio_engine+1)^0,w,c
 18100  004E84  0A00               	xorlw	0	; case 0
 18101  004E86  A4D8               	btfss	status,2,c
 18102  004E88  D795               	goto	u16380
 18103                           
 18104                           ; BSR set to: 0
 18105                           ; Switch size 1, requested type "simple"
 18106                           ; Number of cases is 7, Range of values is 0 to 7
 18107                           ; switch strategies available:
 18108                           ; Name         Instructions Cycles
 18109                           ; simple_byte           22    12 (average)
 18110                           ;	Chosen strategy is simple_byte
 18111  004E8A  504B               	movf	??_radio_engine^0,w,c
 18112  004E8C  0A00               	xorlw	0	; case 0
 18113  004E8E  B4D8               	btfsc	status,2,c
 18114  004E90  D787               	goto	l16298
 18115  004E92  0A01               	xorlw	1	; case 1
 18116  004E94  B4D8               	btfsc	status,2,c
 18117  004E96  D78B               	goto	l16304
 18118  004E98  0A03               	xorlw	3	; case 2
 18119  004E9A  B4D8               	btfsc	status,2,c
 18120  004E9C  D795               	goto	l2694
 18121  004E9E  0A01               	xorlw	1	; case 3
 18122  004EA0  B4D8               	btfsc	status,2,c
 18123  004EA2  D797               	goto	l16314
 18124  004EA4  0A07               	xorlw	7	; case 4
 18125  004EA6  B4D8               	btfsc	status,2,c
 18126  004EA8  D79A               	goto	l16318
 18127  004EAA  0A02               	xorlw	2	; case 6
 18128  004EAC  B4D8               	btfsc	status,2,c
 18129  004EAE  D7B8               	goto	l16334
 18130  004EB0  0A01               	xorlw	1	; case 7
 18131  004EB2  B4D8               	btfsc	status,2,c
 18132  004EB4  D7C1               	goto	l16338
 18133  004EB6  D77E               	goto	u16380
 18134  004EB8                     __end_of_radio_engine:
 18135                           	opt callstack 0
 18136                           
 18137 ;; *************** function _cad *****************
 18138 ;; Defined at:
 18139 ;;		line 509 in file "../phy/sx1216/phy_src/phy.c"
 18140 ;; Parameters:    Size  Location     Type
 18141 ;;		None
 18142 ;; Auto vars:     Size  Location     Type
 18143 ;;  RSSI            2   17[COMRAM] short 
 18144 ;;  temp            1   19[COMRAM] unsigned char 
 18145 ;; Return value:  Size  Location     Type
 18146 ;;                  1    wreg      unsigned char 
 18147 ;; Registers used:
 18148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18149 ;; Tracked objects:
 18150 ;;		On entry : 3F/39
 18151 ;;		On exit  : 2/0
 18152 ;;		Unchanged: 0/0
 18153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18155 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18156 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18157 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18158 ;;Total ram usage:        4 bytes
 18159 ;; Hardware stack levels used:    1
 18160 ;; Hardware stack levels required when called:   13
 18161 ;; This function calls:
 18162 ;;		_SX1276Read
 18163 ;;		_SX1276Write
 18164 ;;		_get_timer0base
 18165 ;;		_set_timer0base
 18166 ;;		_start_radio_cad
 18167 ;; This function is called by:
 18168 ;;		_radio_engine
 18169 ;; This function uses a non-reentrant model
 18170 ;;
 18171                           
 18172                           	psect	text111
 18173  0065AA                     __ptext111:
 18174                           	opt callstack 0
 18175  0065AA                     _cad:
 18176                           	opt callstack 14
 18177                           
 18178                           ; BSR set to: 57
 18179                           ;../phy/sx1216/phy_src/phy.c: 511:     uint8_t temp;;../phy/sx1216/phy_src/phy.c: 513:  
      +                             temp = SX1276Read(0x18);
 18180                           
 18181                           ;incstack = 0
 18182  0065AA  0E18               	movlw	24
 18183  0065AC  EC76  F047         	call	_SX1276Read
 18184  0065B0  6E14               	movwf	cad@temp^0,c
 18185                           
 18186                           ; BSR set to: 61
 18187                           ;../phy/sx1216/phy_src/phy.c: 514:     if((temp & 0x01) | (temp & 0x02))
 18188  0065B2  0060  F050  F011   	movff	cad@temp,??_cad
 18189  0065B8  0E02               	movlw	2
 18190  0065BA  1611               	andwf	??_cad^0,f,c
 18191  0065BC  5014               	movf	cad@temp^0,w,c
 18192  0065BE  0B01               	andlw	1
 18193  0065C0  1011               	iorwf	??_cad^0,w,c
 18194  0065C2  0900               	iorlw	0
 18195  0065C4  B4D8               	btfsc	status,2,c
 18196  0065C6  D002               	goto	l15698
 18197  0065C8                     u15860:
 18198                           
 18199                           ;../phy/sx1216/phy_src/phy.c: 515:     {;../phy/sx1216/phy_src/phy.c: 516:         retur
      +                          n 1;
 18200  0065C8  0E01               	movlw	1
 18201  0065CA  0012               	return	
 18202  0065CC                     l15698:
 18203                           
 18204                           ; BSR set to: 61
 18205                           ;../phy/sx1216/phy_src/phy.c: 518:     start_radio_cad();
 18206  0065CC  ECC5  F047         	call	_start_radio_cad	;wreg free
 18207                           
 18208                           ; BSR set to: 61
 18209                           ;../phy/sx1216/phy_src/phy.c: 519:     cadDone = 0;
 18210  0065D0  0E00               	movlw	0
 18211  0065D2  0100               	movlb	0	; () banked
 18212  0065D4  6FD5               	movwf	_cadDone& (0+255),b
 18213                           
 18214                           ; BSR set to: 0
 18215                           ;../phy/sx1216/phy_src/phy.c: 520:     set_timer0base(&cadTimeOut, 2000);
 18216  0065D6  0EF3               	movlw	low _cadTimeOut
 18217  0065D8  6E02               	movwf	set_timer0base@timer^0,c
 18218  0065DA  0E07               	movlw	7
 18219  0065DC  6E04               	movwf	(set_timer0base@tval+1)^0,c
 18220  0065DE  0ED0               	movlw	208
 18221  0065E0  6E03               	movwf	set_timer0base@tval^0,c
 18222  0065E2  ECD4  F046         	call	_set_timer0base	;wreg free
 18223                           
 18224                           ;../phy/sx1216/phy_src/phy.c: 522:     while((cadDone == 0) && (get_timer0base(&cadTimeO
      +                          ut)))
 18225  0065E6  D029               	goto	l15732
 18226  0065E8                     l15704:
 18227                           
 18228                           ; BSR set to: 57
 18229                           ;../phy/sx1216/phy_src/phy.c: 523:     {;../phy/sx1216/phy_src/phy.c: 524:         temp 
      +                          = SX1276Read(0x12);
 18230  0065E8  0E12               	movlw	18
 18231  0065EA  EC76  F047         	call	_SX1276Read
 18232  0065EE  6E14               	movwf	cad@temp^0,c
 18233                           
 18234                           ;../phy/sx1216/phy_src/phy.c: 525:         SX1276Write(0x12,temp);
 18235  0065F0  0060  F050  F00F   	movff	cad@temp,SX1276Write@data
 18236  0065F6  0E12               	movlw	18
 18237  0065F8  EC94  F047         	call	_SX1276Write
 18238                           
 18239                           ; BSR set to: 61
 18240                           ;../phy/sx1216/phy_src/phy.c: 526:         if(temp & 0x04)
 18241  0065FC  A414               	btfss	cad@temp^0,2,c
 18242  0065FE  D01D               	goto	l15732
 18243                           
 18244                           ; BSR set to: 61
 18245                           ;../phy/sx1216/phy_src/phy.c: 527:         {;../phy/sx1216/phy_src/phy.c: 528:          
      +                             cadDone = 1;
 18246  006600  0E01               	movlw	1
 18247  006602  0100               	movlb	0	; () banked
 18248  006604  6FD5               	movwf	_cadDone& (0+255),b
 18249                           
 18250                           ; BSR set to: 0
 18251                           ;../phy/sx1216/phy_src/phy.c: 529:             if(temp & 0x01)
 18252  006606  B014               	btfsc	cad@temp^0,0,c
 18253  006608  D7DF               	goto	u15860
 18254                           
 18255                           ; BSR set to: 0
 18256                           ;../phy/sx1216/phy_src/phy.c: 534:             {;../phy/sx1216/phy_src/phy.c: 535:      
      +                                     int16_t RSSI;;../phy/sx1216/phy_src/phy.c: 536:                 RSSI = -157 +
      +                           SX1276Read(0x1B);
 18257  00660A  0E1B               	movlw	27
 18258  00660C  EC76  F047         	call	_SX1276Read
 18259  006610  6E11               	movwf	??_cad^0,c
 18260  006612  0E63               	movlw	99
 18261  006614  2411               	addwf	??_cad^0,w,c
 18262  006616  6E12               	movwf	cad@RSSI^0,c
 18263  006618  6A13               	clrf	(cad@RSSI+1)^0,c
 18264  00661A  0EFF               	movlw	255
 18265  00661C  2213               	addwfc	(cad@RSSI+1)^0,f,c
 18266                           
 18267                           ; BSR set to: 61
 18268                           ;../phy/sx1216/phy_src/phy.c: 538:                 if(RSSI < RSSITarget)
 18269  00661E  5013               	movf	(cad@RSSI+1)^0,w,c
 18270  006620  0A80               	xorlw	128
 18271  006622  6E11               	movwf	??_cad^0,c
 18272  006624  0100               	movlb	0	; () banked
 18273  006626  51F7               	movf	_RSSITarget& (0+255),w,b
 18274  006628  5C12               	subwf	cad@RSSI^0,w,c
 18275  00662A  0E80               	movlw	128
 18276  00662C  BFF7               	btfsc	_RSSITarget& (0+255),7,b
 18277  00662E  0E7F               	movlw	127
 18278  006630  5811               	subwfb	??_cad^0,w,c
 18279  006632  B0D8               	btfsc	status,0,c
 18280  006634  D7C9               	goto	u15860
 18281                           
 18282                           ; BSR set to: 0
 18283                           ;../phy/sx1216/phy_src/phy.c: 539:                 {;../phy/sx1216/phy_src/phy.c: 540:  
      +                                             return 0;
 18284  006636  0E00               	movlw	0
 18285  006638  0012               	return	
 18286  00663A                     l15732:
 18287                           
 18288                           ;../phy/sx1216/phy_src/phy.c: 522:     while((cadDone == 0) && (get_timer0base(&cadTimeO
      +                          ut)))
 18289  00663A  0100               	movlb	0	; () banked
 18290  00663C  51D5               	movf	_cadDone& (0+255),w,b
 18291  00663E  A4D8               	btfss	status,2,c
 18292  006640  D008               	goto	u15910
 18293                           
 18294                           ; BSR set to: 0
 18295  006642  0EF3               	movlw	low _cadTimeOut
 18296  006644  6E02               	movwf	get_timer0base@timer^0,c
 18297  006646  EC68  F045         	call	_get_timer0base	;wreg free
 18298  00664A  5002               	movf	?_get_timer0base^0,w,c
 18299  00664C  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 18300  00664E  A4D8               	btfss	status,2,c
 18301  006650  D7CB               	goto	l15704
 18302  006652                     u15910:
 18303                           
 18304                           ;../phy/sx1216/phy_src/phy.c: 549:     if(!get_timer0base(&cadTimeOut))
 18305  006652  0EF3               	movlw	low _cadTimeOut
 18306  006654  6E02               	movwf	get_timer0base@timer^0,c
 18307  006656  EC68  F045         	call	_get_timer0base	;wreg free
 18308  00665A  5002               	movf	?_get_timer0base^0,w,c
 18309  00665C  1003               	iorwf	(?_get_timer0base+1)^0,w,c
 18310  00665E  A4D8               	btfss	status,2,c
 18311  006660  0012               	return	
 18312  006662  D7B2               	goto	u15860
 18313  006664                     __end_of_cad:
 18314                           	opt callstack 0
 18315                           
 18316 ;; *************** function _start_radio_cad *****************
 18317 ;; Defined at:
 18318 ;;		line 562 in file "../phy/sx1216/phy_src/phy.c"
 18319 ;; Parameters:    Size  Location     Type
 18320 ;;		None
 18321 ;; Auto vars:     Size  Location     Type
 18322 ;;		None
 18323 ;; Return value:  Size  Location     Type
 18324 ;;                  1    wreg      void 
 18325 ;; Registers used:
 18326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18327 ;; Tracked objects:
 18328 ;;		On entry : 3F/3D
 18329 ;;		On exit  : 3F/3D
 18330 ;;		Unchanged: 0/0
 18331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18336 ;;Total ram usage:        0 bytes
 18337 ;; Hardware stack levels used:    1
 18338 ;; Hardware stack levels required when called:   12
 18339 ;; This function calls:
 18340 ;;		_SX1276Write
 18341 ;;		_idle
 18342 ;; This function is called by:
 18343 ;;		_cad
 18344 ;; This function uses a non-reentrant model
 18345 ;;
 18346                           
 18347                           	psect	text112
 18348  008F8A                     __ptext112:
 18349                           	opt callstack 0
 18350  008F8A                     _start_radio_cad:
 18351                           	opt callstack 14
 18352                           
 18353                           ; BSR set to: 61
 18354                           ;../phy/sx1216/phy_src/phy.c: 564:     idle();
 18355                           
 18356                           ;incstack = 0
 18357  008F8A  EC13  F048         	call	_idle	;wreg free
 18358                           
 18359                           ;../phy/sx1216/phy_src/phy.c: 565:     SX1276Write(0x01,0x80 | 0x07);
 18360  008F8E  0E87               	movlw	135
 18361  008F90  6E0F               	movwf	SX1276Write@data^0,c
 18362  008F92  0E01               	movlw	1
 18363  008F94  EC94  F047         	call	_SX1276Write
 18364                           
 18365                           ; BSR set to: 61
 18366  008F98  0012               	return		;funcret
 18367  008F9A                     __end_of_start_radio_cad:
 18368                           	opt callstack 0
 18369                           
 18370 ;; *************** function _set_timer0base *****************
 18371 ;; Defined at:
 18372 ;;		line 35 in file "../hal/hal_src/Timers.c"
 18373 ;; Parameters:    Size  Location     Type
 18374 ;;  timer           1    1[COMRAM] PTR unsigned short 
 18375 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), ledtimer(2), 
 18376 ;;		 -> ATTimeoutTimer(2), 
 18377 ;;  tval            2    2[COMRAM] unsigned short 
 18378 ;; Auto vars:     Size  Location     Type
 18379 ;;		None
 18380 ;; Return value:  Size  Location     Type
 18381 ;;                  1    wreg      void 
 18382 ;; Registers used:
 18383 ;;		wreg, fsr2l, fsr2h, status,2
 18384 ;; Tracked objects:
 18385 ;;		On entry : 0/0
 18386 ;;		On exit  : 3F/39
 18387 ;;		Unchanged: 0/0
 18388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18389 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18392 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18393 ;;Total ram usage:        3 bytes
 18394 ;; Hardware stack levels used:    1
 18395 ;; Hardware stack levels required when called:    7
 18396 ;; This function calls:
 18397 ;;		Nothing
 18398 ;; This function is called by:
 18399 ;;		_processATCommand
 18400 ;;		_cad
 18401 ;;		_radio_engine
 18402 ;; This function uses a non-reentrant model
 18403 ;;
 18404                           
 18405                           	psect	text113
 18406  008DA8                     __ptext113:
 18407                           	opt callstack 0
 18408  008DA8                     _set_timer0base:
 18409                           	opt callstack 22
 18410                           
 18411                           ;../hal/hal_src/Timers.c: 36:     PIE3bits.TMR0IE = 0;;
 18412                           
 18413                           ; BSR set to: 61
 18414                           ;incstack = 0
 18415  008DA8  0139               	movlb	57	; () banked
 18416  008DAA  9F93               	bcf	147,7,b	;volatile
 18417                           
 18418                           ; BSR set to: 57
 18419                           ;../hal/hal_src/Timers.c: 37:     *timer = tval;
 18420  008DAC  5002               	movf	set_timer0base@timer^0,w,c
 18421  008DAE  6ED9               	movwf	fsr2l,c
 18422  008DB0  6ADA               	clrf	fsr2h,c
 18423  008DB2  0060  F00F  FFDE   	movff	set_timer0base@tval,postinc2
 18424  008DB8  0060  F013  FFDD   	movff	set_timer0base@tval+1,postdec2
 18425                           
 18426                           ; BSR set to: 57
 18427                           ;../hal/hal_src/Timers.c: 38:     PIE3bits.TMR0IE = 1;;
 18428  008DBE  8F93               	bsf	147,7,b	;volatile
 18429                           
 18430                           ; BSR set to: 57
 18431  008DC0  0012               	return		;funcret
 18432  008DC2                     __end_of_set_timer0base:
 18433                           	opt callstack 0
 18434                           
 18435 ;; *************** function _get_timer0base *****************
 18436 ;; Defined at:
 18437 ;;		line 27 in file "../hal/hal_src/Timers.c"
 18438 ;; Parameters:    Size  Location     Type
 18439 ;;  timer           1    1[COMRAM] PTR unsigned short 
 18440 ;;		 -> _cadBackoffTimer(2), cadTimeOut(2), txTimeOut(2), ledtimer(2), 
 18441 ;;		 -> ATTimeoutTimer(2), 
 18442 ;; Auto vars:     Size  Location     Type
 18443 ;;  tval            2    3[COMRAM] unsigned short 
 18444 ;; Return value:  Size  Location     Type
 18445 ;;                  2    1[COMRAM] unsigned short 
 18446 ;; Registers used:
 18447 ;;		wreg, fsr2l, fsr2h, status,2
 18448 ;; Tracked objects:
 18449 ;;		On entry : 0/0
 18450 ;;		On exit  : 3F/39
 18451 ;;		Unchanged: 0/0
 18452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18456 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18457 ;;Total ram usage:        4 bytes
 18458 ;; Hardware stack levels used:    1
 18459 ;; Hardware stack levels required when called:    7
 18460 ;; This function calls:
 18461 ;;		Nothing
 18462 ;; This function is called by:
 18463 ;;		_processATCommand
 18464 ;;		_cad
 18465 ;;		_radio_engine
 18466 ;; This function uses a non-reentrant model
 18467 ;;
 18468                           
 18469                           	psect	text114
 18470  008AD0                     __ptext114:
 18471                           	opt callstack 0
 18472  008AD0                     _get_timer0base:
 18473                           	opt callstack 22
 18474                           
 18475                           ;../hal/hal_src/Timers.c: 28:     uint16_t tval;;../hal/hal_src/Timers.c: 29:     PIE3bi
      +                          ts.TMR0IE = 0;;
 18476                           
 18477                           ; BSR set to: 57
 18478                           ;incstack = 0
 18479  008AD0  0139               	movlb	57	; () banked
 18480  008AD2  9F93               	bcf	147,7,b	;volatile
 18481                           
 18482                           ; BSR set to: 57
 18483                           ;../hal/hal_src/Timers.c: 30:     tval = *timer;
 18484  008AD4  5002               	movf	get_timer0base@timer^0,w,c
 18485  008AD6  6ED9               	movwf	fsr2l,c
 18486  008AD8  6ADA               	clrf	fsr2h,c
 18487  008ADA  006F FF78  F004    	movff	postinc2,get_timer0base@tval
 18488  008AE0  006F FF74  F005    	movff	postdec2,get_timer0base@tval+1
 18489                           
 18490                           ; BSR set to: 57
 18491                           ;../hal/hal_src/Timers.c: 31:     PIE3bits.TMR0IE = 1;;
 18492  008AE6  8F93               	bsf	147,7,b	;volatile
 18493                           
 18494                           ; BSR set to: 57
 18495                           ;../hal/hal_src/Timers.c: 32:     return tval;
 18496  008AE8  0060  F010  F002   	movff	get_timer0base@tval,?_get_timer0base
 18497  008AEE  0060  F014  F003   	movff	get_timer0base@tval+1,?_get_timer0base+1
 18498                           
 18499                           ; BSR set to: 57
 18500  008AF4  0012               	return		;funcret
 18501  008AF6                     __end_of_get_timer0base:
 18502                           	opt callstack 0
 18503                           
 18504 ;; *************** function _PHY_DataConf *****************
 18505 ;; Defined at:
 18506 ;;		line 286 in file "../nwk/nwk_src/nwkTx.c"
 18507 ;; Parameters:    Size  Location     Type
 18508 ;;  status          1    wreg     unsigned char 
 18509 ;; Auto vars:     Size  Location     Type
 18510 ;;  status          1    4[COMRAM] unsigned char 
 18511 ;; Return value:  Size  Location     Type
 18512 ;;                  1    wreg      void 
 18513 ;; Registers used:
 18514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18515 ;; Tracked objects:
 18516 ;;		On entry : 3F/39
 18517 ;;		On exit  : 3F/1
 18518 ;;		Unchanged: 0/0
 18519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18524 ;;Total ram usage:        1 bytes
 18525 ;; Hardware stack levels used:    1
 18526 ;; Hardware stack levels required when called:    8
 18527 ;; This function calls:
 18528 ;;		_nwkTxConvertPhyStatus
 18529 ;; This function is called by:
 18530 ;;		_radio_engine
 18531 ;; This function uses a non-reentrant model
 18532 ;;
 18533                           
 18534                           	psect	text115
 18535  0085A0                     __ptext115:
 18536                           	opt callstack 0
 18537  0085A0                     _PHY_DataConf:
 18538                           	opt callstack 19
 18539                           
 18540                           ; BSR set to: 57
 18541                           ;incstack = 0
 18542                           ;PHY_DataConf@status stored from wreg
 18543  0085A0  6E05               	movwf	PHY_DataConf@status^0,c
 18544                           
 18545                           ;../nwk/nwk_src/nwkTx.c: 286: void PHY_DataConf(uint8_t status);../nwk/nwk_src/nwkTx.c: 
      +                          287: {;../nwk/nwk_src/nwkTx.c: 288:   nwkTxPhyActiveFrame->tx.status = nwkTxConvertPhySt
      +                          atus(status);
 18546  0085A2  0100               	movlb	0	; () banked
 18547  0085A4  EE20 F083          	lfsr	2,131
 18548  0085A8  51BD               	movf	_nwkTxPhyActiveFrame& (0+255),w,b
 18549  0085AA  26D9               	addwf	fsr2l,f,c
 18550  0085AC  51BE               	movf	(_nwkTxPhyActiveFrame+1)& (0+255),w,b
 18551  0085AE  22DA               	addwfc	fsr2h,f,c
 18552  0085B0  5005               	movf	PHY_DataConf@status^0,w,c
 18553  0085B2  EC63  F043         	call	_nwkTxConvertPhyStatus
 18554  0085B6  6EDF               	movwf	indf2,c
 18555                           
 18556                           ;../nwk/nwk_src/nwkTx.c: 289:   nwkTxPhyActiveFrame->state = NWK_TX_STATE_SENT;
 18557  0085B8  0060  F2F7  FFD9   	movff	_nwkTxPhyActiveFrame,fsr2l
 18558  0085BE  0060  F2FB  FFDA   	movff	_nwkTxPhyActiveFrame+1,fsr2h
 18559  0085C4  0E15               	movlw	21
 18560  0085C6  6EDF               	movwf	indf2,c
 18561                           
 18562                           ;../nwk/nwk_src/nwkTx.c: 290:   nwkTxPhyActiveFrame = ((void*)0);
 18563  0085C8  0E00               	movlw	0
 18564  0085CA  0100               	movlb	0	; () banked
 18565  0085CC  6FBD               	movwf	_nwkTxPhyActiveFrame& (0+255),b
 18566  0085CE  0E00               	movlw	0
 18567  0085D0  6FBE               	movwf	(_nwkTxPhyActiveFrame+1)& (0+255),b
 18568                           
 18569                           ; BSR set to: 0
 18570                           ;../nwk/nwk_src/nwkTx.c: 291:   nwkIb.lock--;
 18571  0085D2  0101               	movlb	1	; () banked
 18572  0085D4  0726               	decf	(_nwkIb+38)& (0+255),f,b
 18573  0085D6  A0D8               	btfss	status,0,c
 18574  0085D8  0727               	decf	(_nwkIb+39)& (0+255),f,b
 18575                           
 18576                           ; BSR set to: 1
 18577  0085DA  0012               	return		;funcret
 18578  0085DC                     __end_of_PHY_DataConf:
 18579                           	opt callstack 0
 18580                           
 18581 ;; *************** function _nwkTxConvertPhyStatus *****************
 18582 ;; Defined at:
 18583 ;;		line 266 in file "../nwk/nwk_src/nwkTx.c"
 18584 ;; Parameters:    Size  Location     Type
 18585 ;;  status          1    wreg     unsigned char 
 18586 ;; Auto vars:     Size  Location     Type
 18587 ;;  status          1    3[COMRAM] unsigned char 
 18588 ;; Return value:  Size  Location     Type
 18589 ;;                  1    wreg      unsigned char 
 18590 ;; Registers used:
 18591 ;;		wreg, status,2, status,0
 18592 ;; Tracked objects:
 18593 ;;		On entry : 3F/0
 18594 ;;		On exit  : 0/0
 18595 ;;		Unchanged: 0/0
 18596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18598 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18599 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18600 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18601 ;;Total ram usage:        3 bytes
 18602 ;; Hardware stack levels used:    1
 18603 ;; Hardware stack levels required when called:    7
 18604 ;; This function calls:
 18605 ;;		Nothing
 18606 ;; This function is called by:
 18607 ;;		_PHY_DataConf
 18608 ;; This function uses a non-reentrant model
 18609 ;;
 18610                           
 18611                           	psect	text116
 18612  0086C6                     __ptext116:
 18613                           	opt callstack 0
 18614  0086C6                     _nwkTxConvertPhyStatus:
 18615                           	opt callstack 19
 18616                           
 18617                           ; BSR set to: 1
 18618                           ;incstack = 0
 18619                           ;nwkTxConvertPhyStatus@status stored from wreg
 18620  0086C6  6E04               	movwf	nwkTxConvertPhyStatus@status^0,c
 18621                           
 18622                           ;../nwk/nwk_src/nwkTx.c: 266: static uint8_t nwkTxConvertPhyStatus(uint8_t status);../nw
      +                          k/nwk_src/nwkTx.c: 267: {;../nwk/nwk_src/nwkTx.c: 268:   switch (status)
 18623  0086C8  D008               	goto	l11050
 18624  0086CA                     l11032:
 18625                           
 18626                           ;../nwk/nwk_src/nwkTx.c: 271:       return NWK_SUCCESS_STATUS;
 18627  0086CA  0E00               	movlw	0
 18628  0086CC  0012               	return	
 18629  0086CE                     l11036:
 18630                           
 18631                           ;../nwk/nwk_src/nwkTx.c: 274:       return NWK_PHY_CHANNEL_ACCESS_FAILURE_STATUS;
 18632  0086CE  0E20               	movlw	32
 18633  0086D0  0012               	return	
 18634  0086D2                     l11040:
 18635                           
 18636                           ;../nwk/nwk_src/nwkTx.c: 277:       return NWK_PHY_NO_ACK_STATUS;
 18637  0086D2  0E21               	movlw	33
 18638  0086D4  0012               	return	
 18639  0086D6                     l11044:
 18640                           
 18641                           ;../nwk/nwk_src/nwkTx.c: 280:       return NWK_ERROR_STATUS;
 18642  0086D6  0E01               	movlw	1
 18643  0086D8  0012               	return	
 18644  0086DA                     l11050:
 18645  0086DA  5004               	movf	nwkTxConvertPhyStatus@status^0,w,c
 18646  0086DC  6E02               	movwf	??_nwkTxConvertPhyStatus^0,c
 18647  0086DE  6A03               	clrf	(??_nwkTxConvertPhyStatus+1)^0,c
 18648                           
 18649                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18650                           ; Switch size 1, requested type "simple"
 18651                           ; Number of cases is 1, Range of values is 0 to 0
 18652                           ; switch strategies available:
 18653                           ; Name         Instructions Cycles
 18654                           ; simple_byte            4     3 (average)
 18655                           ;	Chosen strategy is simple_byte
 18656  0086E0  5003               	movf	(??_nwkTxConvertPhyStatus+1)^0,w,c
 18657  0086E2  0A00               	xorlw	0	; case 0
 18658  0086E4  A4D8               	btfss	status,2,c
 18659  0086E6  D7F7               	goto	l11044
 18660                           
 18661                           ; Switch size 1, requested type "simple"
 18662                           ; Number of cases is 3, Range of values is 0 to 2
 18663                           ; switch strategies available:
 18664                           ; Name         Instructions Cycles
 18665                           ; simple_byte           10     6 (average)
 18666                           ;	Chosen strategy is simple_byte
 18667  0086E8  5002               	movf	??_nwkTxConvertPhyStatus^0,w,c
 18668  0086EA  0A00               	xorlw	0	; case 0
 18669  0086EC  B4D8               	btfsc	status,2,c
 18670  0086EE  D7ED               	goto	l11032
 18671  0086F0  0A01               	xorlw	1	; case 1
 18672  0086F2  B4D8               	btfsc	status,2,c
 18673  0086F4  D7EC               	goto	l11036
 18674  0086F6  0A03               	xorlw	3	; case 2
 18675  0086F8  B4D8               	btfsc	status,2,c
 18676  0086FA  D7EB               	goto	l11040
 18677  0086FC  D7EC               	goto	l11044
 18678  0086FE                     __end_of_nwkTxConvertPhyStatus:
 18679                           	opt callstack 0
 18680                           
 18681 ;; *************** function _DIO0_Receive_ISR *****************
 18682 ;; Defined at:
 18683 ;;		line 642 in file "../phy/sx1216/phy_src/phy.c"
 18684 ;; Parameters:    Size  Location     Type
 18685 ;;		None
 18686 ;; Auto vars:     Size  Location     Type
 18687 ;;  ind             5   69[COMRAM] struct PHY_DataInd_t
 18688 ;;  packetLength    1   67[COMRAM] unsigned char 
 18689 ;;  irqFlags        1   68[COMRAM] unsigned char 
 18690 ;; Return value:  Size  Location     Type
 18691 ;;                  1    wreg      void 
 18692 ;; Registers used:
 18693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18694 ;; Tracked objects:
 18695 ;;		On entry : 0/0
 18696 ;;		On exit  : 3F/3D
 18697 ;;		Unchanged: 0/0
 18698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18700 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18702 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18703 ;;Total ram usage:        7 bytes
 18704 ;; Hardware stack levels used:    1
 18705 ;; Hardware stack levels required when called:   13
 18706 ;; This function calls:
 18707 ;;		_PHY_DataInd
 18708 ;;		_SX1276Read
 18709 ;;		_SX1276ReadBuffer
 18710 ;;		_SX1276Write
 18711 ;;		_get_lqi
 18712 ;;		_get_rssi
 18713 ;;		_receive
 18714 ;; This function is called by:
 18715 ;;		_radio_engine
 18716 ;; This function uses a non-reentrant model
 18717 ;;
 18718                           
 18719                           	psect	text117
 18720  006EFA                     __ptext117:
 18721                           	opt callstack 0
 18722  006EFA                     _DIO0_Receive_ISR:
 18723                           	opt callstack 14
 18724                           
 18725                           ;../phy/sx1216/phy_src/phy.c: 644:     uint8_t irqFlags = SX1276Read(0x12);
 18726                           
 18727                           ;incstack = 0
 18728  006EFA  0E12               	movlw	18
 18729  006EFC  EC76  F047         	call	_SX1276Read
 18730  006F00  6E45               	movwf	DIO0_Receive_ISR@irqFlags^0,c
 18731                           
 18732                           ;../phy/sx1216/phy_src/phy.c: 647:     SX1276Write(0x12, irqFlags);
 18733  006F02  0060  F114  F00F   	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
 18734  006F08  0E12               	movlw	18
 18735  006F0A  EC94  F047         	call	_SX1276Write
 18736                           
 18737                           ;../phy/sx1216/phy_src/phy.c: 648:     SX1276Write(0x12, irqFlags);
 18738  006F0E  0060  F114  F00F   	movff	DIO0_Receive_ISR@irqFlags,SX1276Write@data
 18739  006F14  0E12               	movlw	18
 18740  006F16  EC94  F047         	call	_SX1276Write
 18741                           
 18742                           ; BSR set to: 61
 18743                           ;../phy/sx1216/phy_src/phy.c: 650:     if (((irqFlags & 0x20) == 0) && (irqFlags & 0x40)
      +                           && ((irqFlags & 0x80) == 0))
 18744  006F1A  AA45               	btfss	DIO0_Receive_ISR@irqFlags^0,5,c
 18745                           
 18746                           ; BSR set to: 61
 18747  006F1C  AC45               	btfss	DIO0_Receive_ISR@irqFlags^0,6,c
 18748  006F1E  D034               	goto	l15762
 18749                           
 18750                           ; BSR set to: 61
 18751  006F20  BE45               	btfsc	DIO0_Receive_ISR@irqFlags^0,7,c
 18752  006F22  D032               	goto	l15762
 18753                           
 18754                           ; BSR set to: 61
 18755                           ;../phy/sx1216/phy_src/phy.c: 651:     {;../phy/sx1216/phy_src/phy.c: 652:         PHY_D
      +                          ataInd_t ind;;../phy/sx1216/phy_src/phy.c: 653:         uint8_t packetLength;;../phy/sx1
      +                          216/phy_src/phy.c: 656:         packetLength = SX1276Read(0x13);
 18756  006F24  0E13               	movlw	19
 18757  006F26  EC76  F047         	call	_SX1276Read
 18758  006F2A  6E44               	movwf	DIO0_Receive_ISR@packetLength^0,c
 18759                           
 18760                           ;../phy/sx1216/phy_src/phy.c: 659:         SX1276Write(0x0D, SX1276Read(0x10));
 18761  006F2C  0E10               	movlw	16
 18762  006F2E  EC76  F047         	call	_SX1276Read
 18763  006F32  6E0F               	movwf	SX1276Write@data^0,c
 18764  006F34  0E0D               	movlw	13
 18765  006F36  EC94  F047         	call	_SX1276Write
 18766                           
 18767                           ;../phy/sx1216/phy_src/phy.c: 660:         SX1276ReadBuffer(0x00, &phyRxBuffer, packetLe
      +                          ngth);
 18768  006F3A  0E40               	movlw	low _phyRxBuffer
 18769  006F3C  6E09               	movwf	SX1276ReadBuffer@buffer^0,c
 18770  006F3E  0E03               	movlw	high _phyRxBuffer
 18771  006F40  6E0A               	movwf	(SX1276ReadBuffer@buffer+1)^0,c
 18772  006F42  0060  F110  F00B   	movff	DIO0_Receive_ISR@packetLength,SX1276ReadBuffer@size
 18773  006F48  0E00               	movlw	0
 18774  006F4A  EC54  F045         	call	_SX1276ReadBuffer
 18775                           
 18776                           ;../phy/sx1216/phy_src/phy.c: 662:         SNR = SX1276Read(0x19);
 18777  006F4E  0E19               	movlw	25
 18778  006F50  EC76  F047         	call	_SX1276Read
 18779  006F54  0100               	movlb	0	; () banked
 18780  006F56  6FD0               	movwf	_SNR& (0+255),b
 18781                           
 18782                           ;../phy/sx1216/phy_src/phy.c: 663:         packetRSSI = SX1276Read(0x1A);
 18783  006F58  0E1A               	movlw	26
 18784  006F5A  EC76  F047         	call	_SX1276Read
 18785  006F5E  0100               	movlb	0	; () banked
 18786  006F60  6FD1               	movwf	_packetRSSI& (0+255),b
 18787                           
 18788                           ; BSR set to: 0
 18789                           ;../phy/sx1216/phy_src/phy.c: 664:         ind.data = phyRxBuffer;
 18790  006F62  0E40               	movlw	low _phyRxBuffer
 18791  006F64  6E46               	movwf	DIO0_Receive_ISR@ind^0,c
 18792  006F66  0E03               	movlw	high _phyRxBuffer
 18793  006F68  6E47               	movwf	(DIO0_Receive_ISR@ind+1)^0,c
 18794                           
 18795                           ; BSR set to: 0
 18796                           ;../phy/sx1216/phy_src/phy.c: 665:         ind.size = packetLength;
 18797  006F6A  0060  F110  F048   	movff	DIO0_Receive_ISR@packetLength,DIO0_Receive_ISR@ind+2
 18798                           
 18799                           ; BSR set to: 0
 18800                           ;../phy/sx1216/phy_src/phy.c: 666:         ind.rssi = get_rssi(packetRSSI);
 18801  006F70  51D1               	movf	_packetRSSI& (0+255),w,b
 18802  006F72  ECED  F044         	call	_get_rssi
 18803  006F76  6E4A               	movwf	(DIO0_Receive_ISR@ind+4)^0,c
 18804                           
 18805                           ;../phy/sx1216/phy_src/phy.c: 667:         ind.lqi = get_lqi(ind.rssi);
 18806  006F78  504A               	movf	(DIO0_Receive_ISR@ind+4)^0,w,c
 18807  006F7A  EC95  F036         	call	_get_lqi
 18808  006F7E  6E49               	movwf	(DIO0_Receive_ISR@ind+3)^0,c
 18809                           
 18810                           ;../phy/sx1216/phy_src/phy.c: 668:         PHY_DataInd(&ind);
 18811  006F80  0E46               	movlw	low DIO0_Receive_ISR@ind
 18812  006F82  6E13               	movwf	PHY_DataInd@ind^0,c
 18813  006F84  ECF6  F023         	call	_PHY_DataInd	;wreg free
 18814  006F88                     l15762:
 18815                           
 18816                           ;../phy/sx1216/phy_src/phy.c: 671:     receive(0);
 18817  006F88  0E00               	movlw	0
 18818  006F8A  EC74  F042         	call	_receive
 18819                           
 18820                           ; BSR set to: 61
 18821  006F8E  0012               	return		;funcret
 18822  006F90                     __end_of_DIO0_Receive_ISR:
 18823                           	opt callstack 0
 18824                           
 18825 ;; *************** function _get_rssi *****************
 18826 ;; Defined at:
 18827 ;;		line 615 in file "../phy/sx1216/phy_src/phy.c"
 18828 ;; Parameters:    Size  Location     Type
 18829 ;;  rssi_reg        1    wreg     unsigned char 
 18830 ;; Auto vars:     Size  Location     Type
 18831 ;;  rssi_reg        1    1[COMRAM] unsigned char 
 18832 ;;  temp_rssi       2    2[COMRAM] short 
 18833 ;; Return value:  Size  Location     Type
 18834 ;;                  1    wreg      char 
 18835 ;; Registers used:
 18836 ;;		wreg, status,2, status,0
 18837 ;; Tracked objects:
 18838 ;;		On entry : 3F/0
 18839 ;;		On exit  : 0/0
 18840 ;;		Unchanged: 0/0
 18841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18843 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18845 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18846 ;;Total ram usage:        3 bytes
 18847 ;; Hardware stack levels used:    1
 18848 ;; Hardware stack levels required when called:    7
 18849 ;; This function calls:
 18850 ;;		Nothing
 18851 ;; This function is called by:
 18852 ;;		_DIO0_Receive_ISR
 18853 ;; This function uses a non-reentrant model
 18854 ;;
 18855                           
 18856                           	psect	text118
 18857  0089DA                     __ptext118:
 18858                           	opt callstack 0
 18859  0089DA                     _get_rssi:
 18860                           	opt callstack 19
 18861                           
 18862                           ; BSR set to: 61
 18863                           ;incstack = 0
 18864                           ;get_rssi@rssi_reg stored from wreg
 18865  0089DA  6E02               	movwf	get_rssi@rssi_reg^0,c
 18866                           
 18867                           ;../phy/sx1216/phy_src/phy.c: 616:     int16_t temp_rssi = -157 + rssi_reg;
 18868  0089DC  0E63               	movlw	99
 18869  0089DE  2402               	addwf	get_rssi@rssi_reg^0,w,c
 18870  0089E0  6E03               	movwf	get_rssi@temp_rssi^0,c
 18871  0089E2  6A04               	clrf	(get_rssi@temp_rssi+1)^0,c
 18872  0089E4  0EFF               	movlw	255
 18873  0089E6  2204               	addwfc	(get_rssi@temp_rssi+1)^0,f,c
 18874                           
 18875                           ;../phy/sx1216/phy_src/phy.c: 617:     if(temp_rssi < -127){
 18876  0089E8  AE04               	btfss	(get_rssi@temp_rssi+1)^0,7,c
 18877  0089EA  D00A               	goto	l2668
 18878  0089EC  0E81               	movlw	129
 18879  0089EE  5C03               	subwf	get_rssi@temp_rssi^0,w,c
 18880  0089F0  0EFF               	movlw	255
 18881  0089F2  5804               	subwfb	(get_rssi@temp_rssi+1)^0,w,c
 18882  0089F4  B0D8               	btfsc	status,0,c
 18883  0089F6  D004               	goto	l2668
 18884                           
 18885                           ;../phy/sx1216/phy_src/phy.c: 618:         temp_rssi = -127;
 18886  0089F8  0EFF               	movlw	255
 18887  0089FA  6E04               	movwf	(get_rssi@temp_rssi+1)^0,c
 18888  0089FC  0E81               	movlw	129
 18889  0089FE  6E03               	movwf	get_rssi@temp_rssi^0,c
 18890  008A00                     l2668:
 18891                           
 18892                           ;../phy/sx1216/phy_src/phy.c: 620:     return (temp_rssi);
 18893  008A00  5003               	movf	get_rssi@temp_rssi^0,w,c
 18894  008A02  0012               	return		;funcret
 18895  008A04                     __end_of_get_rssi:
 18896                           	opt callstack 0
 18897                           
 18898 ;; *************** function _get_lqi *****************
 18899 ;; Defined at:
 18900 ;;		line 629 in file "../phy/sx1216/phy_src/phy.c"
 18901 ;; Parameters:    Size  Location     Type
 18902 ;;  rssi            1    wreg     char 
 18903 ;; Auto vars:     Size  Location     Type
 18904 ;;  rssi            1   66[COMRAM] char 
 18905 ;; Return value:  Size  Location     Type
 18906 ;;                  1    wreg      unsigned char 
 18907 ;; Registers used:
 18908 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18909 ;; Tracked objects:
 18910 ;;		On entry : 0/0
 18911 ;;		On exit  : 0/0
 18912 ;;		Unchanged: 0/0
 18913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18917 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18918 ;;Total ram usage:        1 bytes
 18919 ;; Hardware stack levels used:    1
 18920 ;; Hardware stack levels required when called:    8
 18921 ;; This function calls:
 18922 ;;		___fladd
 18923 ;;		___flmul
 18924 ;;		___fltol
 18925 ;;		___xxtofl
 18926 ;; This function is called by:
 18927 ;;		_DIO0_Receive_ISR
 18928 ;; This function uses a non-reentrant model
 18929 ;;
 18930                           
 18931                           	psect	text119
 18932  006D2A                     __ptext119:
 18933                           	opt callstack 0
 18934  006D2A                     _get_lqi:
 18935                           	opt callstack 18
 18936                           
 18937                           ;incstack = 0
 18938                           ;get_lqi@rssi stored from wreg
 18939  006D2A  6E43               	movwf	get_lqi@rssi^0,c
 18940                           
 18941                           ;../phy/sx1216/phy_src/phy.c: 630:     if(rssi > -10){
 18942  006D2C  5043               	movf	get_lqi@rssi^0,w,c
 18943  006D2E  0A80               	xorlw	128
 18944  006D30  0F89               	addlw	137
 18945  006D32  A0D8               	btfss	status,0,c
 18946  006D34  D002               	goto	l15154
 18947                           
 18948                           ;../phy/sx1216/phy_src/phy.c: 631:         return 255;
 18949  006D36  0EFF               	movlw	255
 18950  006D38  0012               	return	
 18951  006D3A                     l15154:
 18952                           
 18953                           ;../phy/sx1216/phy_src/phy.c: 633:     return ((2.18*(int16_t)rssi) + 10795);
 18954  006D3A  0E00               	movlw	0
 18955  006D3C  6E2D               	movwf	___fladd@a^0,c
 18956  006D3E  0EAC               	movlw	172
 18957  006D40  6E2E               	movwf	(___fladd@a+1)^0,c
 18958  006D42  0E28               	movlw	40
 18959  006D44  6E2F               	movwf	(___fladd@a+2)^0,c
 18960  006D46  0E46               	movlw	70
 18961  006D48  6E30               	movwf	(___fladd@a+3)^0,c
 18962  006D4A  0E1F               	movlw	31
 18963  006D4C  6E14               	movwf	___flmul@a^0,c
 18964  006D4E  0E85               	movlw	133
 18965  006D50  6E15               	movwf	(___flmul@a+1)^0,c
 18966  006D52  0E0B               	movlw	11
 18967  006D54  6E16               	movwf	(___flmul@a+2)^0,c
 18968  006D56  0E40               	movlw	64
 18969  006D58  6E17               	movwf	(___flmul@a+3)^0,c
 18970  006D5A  5043               	movf	get_lqi@rssi^0,w,c
 18971  006D5C  6E02               	movwf	___xxtofl@val^0,c
 18972  006D5E  0E00               	movlw	0
 18973  006D60  BE02               	btfsc	___xxtofl@val^0,7,c
 18974  006D62  0EFF               	movlw	-1
 18975  006D64  6E03               	movwf	(___xxtofl@val+1)^0,c
 18976  006D66  6E04               	movwf	(___xxtofl@val+2)^0,c
 18977  006D68  6E05               	movwf	(___xxtofl@val+3)^0,c
 18978  006D6A  0E01               	movlw	1
 18979  006D6C  EC03  F020         	call	___xxtofl
 18980  006D70  0060  F008  F010   	movff	?___xxtofl,___flmul@b
 18981  006D76  0060  F00C  F011   	movff	?___xxtofl+1,___flmul@b+1
 18982  006D7C  0060  F010  F012   	movff	?___xxtofl+2,___flmul@b+2
 18983  006D82  0060  F014  F013   	movff	?___xxtofl+3,___flmul@b+3
 18984  006D88  EC57  F009         	call	___flmul	;wreg free
 18985  006D8C  0060  F040  F029   	movff	?___flmul,___fladd@b
 18986  006D92  0060  F044  F02A   	movff	?___flmul+1,___fladd@b+1
 18987  006D98  0060  F048  F02B   	movff	?___flmul+2,___fladd@b+2
 18988  006D9E  0060  F04C  F02C   	movff	?___flmul+3,___fladd@b+3
 18989  006DA4  ECD0  F00C         	call	___fladd	;wreg free
 18990  006DA8  0060  F0A4  F039   	movff	?___fladd,___fltol@f1
 18991  006DAE  0060  F0A8  F03A   	movff	?___fladd+1,___fltol@f1+1
 18992  006DB4  0060  F0AC  F03B   	movff	?___fladd+2,___fltol@f1+2
 18993  006DBA  0060  F0B0  F03C   	movff	?___fladd+3,___fltol@f1+3
 18994  006DC0  ECEB  F030         	call	___fltol	;wreg free
 18995  006DC4  5039               	movf	?___fltol^0,w,c
 18996  006DC6  0012               	return		;funcret
 18997  006DC8                     __end_of_get_lqi:
 18998                           	opt callstack 0
 18999                           
 19000 ;; *************** function ___fltol *****************
 19001 ;; Defined at:
 19002 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
 19003 ;; Parameters:    Size  Location     Type
 19004 ;;  f1              4   56[COMRAM] unsigned char 
 19005 ;; Auto vars:     Size  Location     Type
 19006 ;;  exp1            1   65[COMRAM] unsigned char 
 19007 ;;  sign1           1   64[COMRAM] unsigned char 
 19008 ;; Return value:  Size  Location     Type
 19009 ;;                  4   56[COMRAM] long 
 19010 ;; Registers used:
 19011 ;;		wreg, status,2, status,0
 19012 ;; Tracked objects:
 19013 ;;		On entry : 0/0
 19014 ;;		On exit  : 0/0
 19015 ;;		Unchanged: 0/0
 19016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19017 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19019 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19020 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19021 ;;Total ram usage:       10 bytes
 19022 ;; Hardware stack levels used:    1
 19023 ;; Hardware stack levels required when called:    7
 19024 ;; This function calls:
 19025 ;;		Nothing
 19026 ;; This function is called by:
 19027 ;;		_get_lqi
 19028 ;; This function uses a non-reentrant model
 19029 ;;
 19030                           
 19031                           	psect	text120
 19032  0061D6                     __ptext120:
 19033                           	opt callstack 0
 19034  0061D6                     ___fltol:
 19035                           	opt callstack 18
 19036                           
 19037                           ;incstack = 0
 19038  0061D6  343B               	rlcf	(___fltol@f1+2)^0,w,c
 19039  0061D8  343C               	rlcf	(___fltol@f1+3)^0,w,c
 19040  0061DA  6E42               	movwf	___fltol@exp1^0,c
 19041  0061DC  5042               	movf	___fltol@exp1^0,w,c
 19042  0061DE  A4D8               	btfss	status,2,c
 19043  0061E0  D009               	goto	l10568
 19044  0061E2                     u8830:
 19045  0061E2  0E00               	movlw	0
 19046  0061E4  6E39               	movwf	?___fltol^0,c
 19047  0061E6  0E00               	movlw	0
 19048  0061E8  6E3A               	movwf	(?___fltol+1)^0,c
 19049  0061EA  0E00               	movlw	0
 19050  0061EC  6E3B               	movwf	(?___fltol+2)^0,c
 19051  0061EE  0E00               	movlw	0
 19052  0061F0  6E3C               	movwf	(?___fltol+3)^0,c
 19053  0061F2  0012               	return	
 19054  0061F4                     l10568:
 19055  0061F4  0060  F0E4  F03D   	movff	___fltol@f1,??___fltol
 19056  0061FA  0060  F0E8  F03E   	movff	___fltol@f1+1,??___fltol+1
 19057  006200  0060  F0EC  F03F   	movff	___fltol@f1+2,??___fltol+2
 19058  006206  0060  F0F0  F040   	movff	___fltol@f1+3,??___fltol+3
 19059  00620C  0E20               	movlw	32
 19060  00620E  D005               	goto	u8840
 19061  006210                     u8845:
 19062  006210  90D8               	bcf	status,0,c
 19063  006212  3240               	rrcf	(??___fltol+3)^0,f,c
 19064  006214  323F               	rrcf	(??___fltol+2)^0,f,c
 19065  006216  323E               	rrcf	(??___fltol+1)^0,f,c
 19066  006218  323D               	rrcf	??___fltol^0,f,c
 19067  00621A                     u8840:
 19068  00621A  2EE8               	decfsz	wreg,f,c
 19069  00621C  D7F9               	goto	u8845
 19070  00621E  503D               	movf	??___fltol^0,w,c
 19071  006220  6E41               	movwf	___fltol@sign1^0,c
 19072  006222  8E3B               	bsf	(___fltol@f1+2)^0,7,c
 19073  006224  0EFF               	movlw	255
 19074  006226  1639               	andwf	___fltol@f1^0,f,c
 19075  006228  0EFF               	movlw	255
 19076  00622A  163A               	andwf	(___fltol@f1+1)^0,f,c
 19077  00622C  0EFF               	movlw	255
 19078  00622E  163B               	andwf	(___fltol@f1+2)^0,f,c
 19079  006230  0E00               	movlw	0
 19080  006232  163C               	andwf	(___fltol@f1+3)^0,f,c
 19081  006234  0E96               	movlw	150
 19082  006236  5E42               	subwf	___fltol@exp1^0,f,c
 19083  006238  AE42               	btfss	___fltol@exp1^0,7,c
 19084  00623A  D00D               	goto	l10588
 19085  00623C  5042               	movf	___fltol@exp1^0,w,c
 19086  00623E  0A80               	xorlw	128
 19087  006240  0F97               	addlw	151
 19088  006242  A0D8               	btfss	status,0,c
 19089  006244  D7CE               	goto	u8830
 19090  006246                     l10584:
 19091  006246  90D8               	bcf	status,0,c
 19092  006248  323C               	rrcf	(___fltol@f1+3)^0,f,c
 19093  00624A  323B               	rrcf	(___fltol@f1+2)^0,f,c
 19094  00624C  323A               	rrcf	(___fltol@f1+1)^0,f,c
 19095  00624E  3239               	rrcf	___fltol@f1^0,f,c
 19096  006250  3E42               	incfsz	___fltol@exp1^0,f,c
 19097  006252  D7F9               	goto	l10584
 19098  006254  D00D               	goto	u8880
 19099  006256                     l10588:
 19100  006256  0E1F               	movlw	31
 19101  006258  6442               	cpfsgt	___fltol@exp1^0,c
 19102  00625A  D007               	goto	l10596
 19103  00625C  D7C2               	goto	u8830
 19104  00625E                     l10594:
 19105  00625E  90D8               	bcf	status,0,c
 19106  006260  3639               	rlcf	___fltol@f1^0,f,c
 19107  006262  363A               	rlcf	(___fltol@f1+1)^0,f,c
 19108  006264  363B               	rlcf	(___fltol@f1+2)^0,f,c
 19109  006266  363C               	rlcf	(___fltol@f1+3)^0,f,c
 19110  006268  0642               	decf	___fltol@exp1^0,f,c
 19111  00626A                     l10596:
 19112  00626A  5042               	movf	___fltol@exp1^0,w,c
 19113  00626C  A4D8               	btfss	status,2,c
 19114  00626E  D7F7               	goto	l10594
 19115  006270                     u8880:
 19116  006270  5041               	movf	___fltol@sign1^0,w,c
 19117  006272  B4D8               	btfsc	status,2,c
 19118  006274  D008               	goto	l10602
 19119  006276  1E3C               	comf	(___fltol@f1+3)^0,f,c
 19120  006278  1E3B               	comf	(___fltol@f1+2)^0,f,c
 19121  00627A  1E3A               	comf	(___fltol@f1+1)^0,f,c
 19122  00627C  6C39               	negf	___fltol@f1^0,c
 19123  00627E  0E00               	movlw	0
 19124  006280  223A               	addwfc	(___fltol@f1+1)^0,f,c
 19125  006282  223B               	addwfc	(___fltol@f1+2)^0,f,c
 19126  006284  223C               	addwfc	(___fltol@f1+3)^0,f,c
 19127  006286                     l10602:
 19128  006286  0060  F0E4  F039   	movff	___fltol@f1,?___fltol
 19129  00628C  0060  F0E8  F03A   	movff	___fltol@f1+1,?___fltol+1
 19130  006292  0060  F0EC  F03B   	movff	___fltol@f1+2,?___fltol+2
 19131  006298  0060  F0F0  F03C   	movff	___fltol@f1+3,?___fltol+3
 19132  00629E  0012               	return		;funcret
 19133  0062A0                     __end_of___fltol:
 19134                           	opt callstack 0
 19135                           
 19136 ;; *************** function ___flmul *****************
 19137 ;; Defined at:
 19138 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
 19139 ;; Parameters:    Size  Location     Type
 19140 ;;  b               4   15[COMRAM] long 
 19141 ;;  a               4   19[COMRAM] long 
 19142 ;; Auto vars:     Size  Location     Type
 19143 ;;  prod            4   34[COMRAM] struct .
 19144 ;;  grs             4   29[COMRAM] unsigned long 
 19145 ;;  temp            2   38[COMRAM] struct .
 19146 ;;  bexp            1   33[COMRAM] unsigned char 
 19147 ;;  aexp            1   28[COMRAM] unsigned char 
 19148 ;;  sign            1   27[COMRAM] unsigned char 
 19149 ;; Return value:  Size  Location     Type
 19150 ;;                  4   15[COMRAM] unsigned char 
 19151 ;; Registers used:
 19152 ;;		wreg, status,2, status,0, prodl, prodh
 19153 ;; Tracked objects:
 19154 ;;		On entry : 0/0
 19155 ;;		On exit  : 0/0
 19156 ;;		Unchanged: 0/0
 19157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19158 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19159 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19160 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19161 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19162 ;;Total ram usage:       25 bytes
 19163 ;; Hardware stack levels used:    1
 19164 ;; Hardware stack levels required when called:    7
 19165 ;; This function calls:
 19166 ;;		Nothing
 19167 ;; This function is called by:
 19168 ;;		_get_lqi
 19169 ;; This function uses a non-reentrant model
 19170 ;;
 19171                           
 19172                           	psect	text121
 19173  0012AE                     __ptext121:
 19174                           	opt callstack 0
 19175  0012AE                     ___flmul:
 19176                           	opt callstack 18
 19177                           
 19178                           ;incstack = 0
 19179  0012AE  5013               	movf	(___flmul@b+3)^0,w,c
 19180  0012B0  0B80               	andlw	128
 19181  0012B2  6E1C               	movwf	___flmul@sign^0,c
 19182  0012B4  5013               	movf	(___flmul@b+3)^0,w,c
 19183  0012B6  2413               	addwf	(___flmul@b+3)^0,w,c
 19184  0012B8  6E22               	movwf	___flmul@bexp^0,c
 19185  0012BA  BE12               	btfsc	(___flmul@b+2)^0,7,c
 19186  0012BC  8022               	bsf	___flmul@bexp^0,0,c
 19187  0012BE  5022               	movf	___flmul@bexp^0,w,c
 19188  0012C0  B4D8               	btfsc	status,2,c
 19189  0012C2  D00D               	goto	l10424
 19190  0012C4  2822               	incf	___flmul@bexp^0,w,c
 19191  0012C6  A4D8               	btfss	status,2,c
 19192  0012C8  D008               	goto	l10422
 19193  0012CA  0E00               	movlw	0
 19194  0012CC  6E10               	movwf	___flmul@b^0,c
 19195  0012CE  0E00               	movlw	0
 19196  0012D0  6E11               	movwf	(___flmul@b+1)^0,c
 19197  0012D2  0E00               	movlw	0
 19198  0012D4  6E12               	movwf	(___flmul@b+2)^0,c
 19199  0012D6  0E00               	movlw	0
 19200  0012D8  6E13               	movwf	(___flmul@b+3)^0,c
 19201  0012DA                     l10422:
 19202  0012DA  8E12               	bsf	(___flmul@b+2)^0,7,c
 19203  0012DC  D008               	goto	l10426
 19204  0012DE                     l10424:
 19205  0012DE  0E00               	movlw	0
 19206  0012E0  6E10               	movwf	___flmul@b^0,c
 19207  0012E2  0E00               	movlw	0
 19208  0012E4  6E11               	movwf	(___flmul@b+1)^0,c
 19209  0012E6  0E00               	movlw	0
 19210  0012E8  6E12               	movwf	(___flmul@b+2)^0,c
 19211  0012EA  0E00               	movlw	0
 19212  0012EC  6E13               	movwf	(___flmul@b+3)^0,c
 19213  0012EE                     l10426:
 19214  0012EE  5017               	movf	(___flmul@a+3)^0,w,c
 19215  0012F0  0B80               	andlw	128
 19216  0012F2  1A1C               	xorwf	___flmul@sign^0,f,c
 19217  0012F4  5017               	movf	(___flmul@a+3)^0,w,c
 19218  0012F6  2417               	addwf	(___flmul@a+3)^0,w,c
 19219  0012F8  6E1D               	movwf	___flmul@aexp^0,c
 19220  0012FA  BE16               	btfsc	(___flmul@a+2)^0,7,c
 19221  0012FC  801D               	bsf	___flmul@aexp^0,0,c
 19222  0012FE  501D               	movf	___flmul@aexp^0,w,c
 19223  001300  B4D8               	btfsc	status,2,c
 19224  001302  D00D               	goto	l10442
 19225  001304  281D               	incf	___flmul@aexp^0,w,c
 19226  001306  A4D8               	btfss	status,2,c
 19227  001308  D008               	goto	l10440
 19228  00130A  0E00               	movlw	0
 19229  00130C  6E14               	movwf	___flmul@a^0,c
 19230  00130E  0E00               	movlw	0
 19231  001310  6E15               	movwf	(___flmul@a+1)^0,c
 19232  001312  0E00               	movlw	0
 19233  001314  6E16               	movwf	(___flmul@a+2)^0,c
 19234  001316  0E00               	movlw	0
 19235  001318  6E17               	movwf	(___flmul@a+3)^0,c
 19236  00131A                     l10440:
 19237  00131A  8E16               	bsf	(___flmul@a+2)^0,7,c
 19238  00131C  D008               	goto	l3845
 19239  00131E                     l10442:
 19240  00131E  0E00               	movlw	0
 19241  001320  6E14               	movwf	___flmul@a^0,c
 19242  001322  0E00               	movlw	0
 19243  001324  6E15               	movwf	(___flmul@a+1)^0,c
 19244  001326  0E00               	movlw	0
 19245  001328  6E16               	movwf	(___flmul@a+2)^0,c
 19246  00132A  0E00               	movlw	0
 19247  00132C  6E17               	movwf	(___flmul@a+3)^0,c
 19248  00132E                     l3845:
 19249  00132E  501D               	movf	___flmul@aexp^0,w,c
 19250  001330  B4D8               	btfsc	status,2,c
 19251  001332  D003               	goto	u8670
 19252  001334  5022               	movf	___flmul@bexp^0,w,c
 19253  001336  A4D8               	btfss	status,2,c
 19254  001338  D009               	goto	l10450
 19255  00133A                     u8670:
 19256  00133A  0E00               	movlw	0
 19257  00133C  6E10               	movwf	?___flmul^0,c
 19258  00133E  0E00               	movlw	0
 19259  001340  6E11               	movwf	(?___flmul+1)^0,c
 19260  001342  0E00               	movlw	0
 19261  001344  6E12               	movwf	(?___flmul+2)^0,c
 19262  001346  0E00               	movlw	0
 19263  001348  6E13               	movwf	(?___flmul+3)^0,c
 19264  00134A  0012               	return	
 19265  00134C                     l10450:
 19266  00134C  5016               	movf	(___flmul@a+2)^0,w,c
 19267  00134E  0210               	mulwf	___flmul@b^0,c
 19268  001350  006F FFCC  F027    	movff	prodl,___flmul@temp
 19269  001356  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19270  00135C  5027               	movf	___flmul@temp^0,w,c
 19271  00135E  6E1E               	movwf	___flmul@grs^0,c
 19272  001360  6A1F               	clrf	(___flmul@grs+1)^0,c
 19273  001362  6A20               	clrf	(___flmul@grs+2)^0,c
 19274  001364  6A21               	clrf	(___flmul@grs+3)^0,c
 19275  001366  5028               	movf	(___flmul@temp+1)^0,w,c
 19276  001368  6E23               	movwf	___flmul@prod^0,c
 19277  00136A  6A24               	clrf	(___flmul@prod+1)^0,c
 19278  00136C  6A25               	clrf	(___flmul@prod+2)^0,c
 19279  00136E  6A26               	clrf	(___flmul@prod+3)^0,c
 19280  001370  5015               	movf	(___flmul@a+1)^0,w,c
 19281  001372  0211               	mulwf	(___flmul@b+1)^0,c
 19282  001374  006F FFCC  F027    	movff	prodl,___flmul@temp
 19283  00137A  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19284  001380  5027               	movf	___flmul@temp^0,w,c
 19285  001382  261E               	addwf	___flmul@grs^0,f,c
 19286  001384  0E00               	movlw	0
 19287  001386  221F               	addwfc	(___flmul@grs+1)^0,f,c
 19288  001388  2220               	addwfc	(___flmul@grs+2)^0,f,c
 19289  00138A  2221               	addwfc	(___flmul@grs+3)^0,f,c
 19290  00138C  5028               	movf	(___flmul@temp+1)^0,w,c
 19291  00138E  2623               	addwf	___flmul@prod^0,f,c
 19292  001390  0E00               	movlw	0
 19293  001392  2224               	addwfc	(___flmul@prod+1)^0,f,c
 19294  001394  2225               	addwfc	(___flmul@prod+2)^0,f,c
 19295  001396  2226               	addwfc	(___flmul@prod+3)^0,f,c
 19296  001398  5014               	movf	___flmul@a^0,w,c
 19297  00139A  0212               	mulwf	(___flmul@b+2)^0,c
 19298  00139C  006F FFCC  F027    	movff	prodl,___flmul@temp
 19299  0013A2  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19300  0013A8  5027               	movf	___flmul@temp^0,w,c
 19301  0013AA  261E               	addwf	___flmul@grs^0,f,c
 19302  0013AC  0E00               	movlw	0
 19303  0013AE  221F               	addwfc	(___flmul@grs+1)^0,f,c
 19304  0013B0  2220               	addwfc	(___flmul@grs+2)^0,f,c
 19305  0013B2  2221               	addwfc	(___flmul@grs+3)^0,f,c
 19306  0013B4  5028               	movf	(___flmul@temp+1)^0,w,c
 19307  0013B6  2623               	addwf	___flmul@prod^0,f,c
 19308  0013B8  0E00               	movlw	0
 19309  0013BA  2224               	addwfc	(___flmul@prod+1)^0,f,c
 19310  0013BC  2225               	addwfc	(___flmul@prod+2)^0,f,c
 19311  0013BE  2226               	addwfc	(___flmul@prod+3)^0,f,c
 19312  0013C0  0060  F080  F021   	movff	___flmul@grs+2,___flmul@grs+3
 19313  0013C6  0060  F07C  F020   	movff	___flmul@grs+1,___flmul@grs+2
 19314  0013CC  0060  F078  F01F   	movff	___flmul@grs,___flmul@grs+1
 19315  0013D2  6A1E               	clrf	___flmul@grs^0,c
 19316  0013D4  5014               	movf	___flmul@a^0,w,c
 19317  0013D6  0211               	mulwf	(___flmul@b+1)^0,c
 19318  0013D8  006F FFCC  F027    	movff	prodl,___flmul@temp
 19319  0013DE  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19320  0013E4  5027               	movf	___flmul@temp^0,w,c
 19321  0013E6  261E               	addwf	___flmul@grs^0,f,c
 19322  0013E8  5028               	movf	(___flmul@temp+1)^0,w,c
 19323  0013EA  221F               	addwfc	(___flmul@grs+1)^0,f,c
 19324  0013EC  0E00               	movlw	0
 19325  0013EE  2220               	addwfc	(___flmul@grs+2)^0,f,c
 19326  0013F0  0E00               	movlw	0
 19327  0013F2  2221               	addwfc	(___flmul@grs+3)^0,f,c
 19328  0013F4  5015               	movf	(___flmul@a+1)^0,w,c
 19329  0013F6  0210               	mulwf	___flmul@b^0,c
 19330  0013F8  006F FFCC  F027    	movff	prodl,___flmul@temp
 19331  0013FE  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19332  001404  5027               	movf	___flmul@temp^0,w,c
 19333  001406  261E               	addwf	___flmul@grs^0,f,c
 19334  001408  5028               	movf	(___flmul@temp+1)^0,w,c
 19335  00140A  221F               	addwfc	(___flmul@grs+1)^0,f,c
 19336  00140C  0E00               	movlw	0
 19337  00140E  2220               	addwfc	(___flmul@grs+2)^0,f,c
 19338  001410  0E00               	movlw	0
 19339  001412  2221               	addwfc	(___flmul@grs+3)^0,f,c
 19340  001414  0060  F080  F021   	movff	___flmul@grs+2,___flmul@grs+3
 19341  00141A  0060  F07C  F020   	movff	___flmul@grs+1,___flmul@grs+2
 19342  001420  0060  F078  F01F   	movff	___flmul@grs,___flmul@grs+1
 19343  001426  6A1E               	clrf	___flmul@grs^0,c
 19344  001428  5014               	movf	___flmul@a^0,w,c
 19345  00142A  0210               	mulwf	___flmul@b^0,c
 19346  00142C  006F FFCC  F027    	movff	prodl,___flmul@temp
 19347  001432  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19348  001438  5027               	movf	___flmul@temp^0,w,c
 19349  00143A  261E               	addwf	___flmul@grs^0,f,c
 19350  00143C  5028               	movf	(___flmul@temp+1)^0,w,c
 19351  00143E  221F               	addwfc	(___flmul@grs+1)^0,f,c
 19352  001440  0E00               	movlw	0
 19353  001442  2220               	addwfc	(___flmul@grs+2)^0,f,c
 19354  001444  0E00               	movlw	0
 19355  001446  2221               	addwfc	(___flmul@grs+3)^0,f,c
 19356  001448  5016               	movf	(___flmul@a+2)^0,w,c
 19357  00144A  0211               	mulwf	(___flmul@b+1)^0,c
 19358  00144C  006F FFCC  F027    	movff	prodl,___flmul@temp
 19359  001452  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19360  001458  5027               	movf	___flmul@temp^0,w,c
 19361  00145A  2623               	addwf	___flmul@prod^0,f,c
 19362  00145C  5028               	movf	(___flmul@temp+1)^0,w,c
 19363  00145E  2224               	addwfc	(___flmul@prod+1)^0,f,c
 19364  001460  0E00               	movlw	0
 19365  001462  2225               	addwfc	(___flmul@prod+2)^0,f,c
 19366  001464  0E00               	movlw	0
 19367  001466  2226               	addwfc	(___flmul@prod+3)^0,f,c
 19368  001468  5015               	movf	(___flmul@a+1)^0,w,c
 19369  00146A  0212               	mulwf	(___flmul@b+2)^0,c
 19370  00146C  006F FFCC  F027    	movff	prodl,___flmul@temp
 19371  001472  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19372  001478  5027               	movf	___flmul@temp^0,w,c
 19373  00147A  2623               	addwf	___flmul@prod^0,f,c
 19374  00147C  5028               	movf	(___flmul@temp+1)^0,w,c
 19375  00147E  2224               	addwfc	(___flmul@prod+1)^0,f,c
 19376  001480  0E00               	movlw	0
 19377  001482  2225               	addwfc	(___flmul@prod+2)^0,f,c
 19378  001484  0E00               	movlw	0
 19379  001486  2226               	addwfc	(___flmul@prod+3)^0,f,c
 19380  001488  5016               	movf	(___flmul@a+2)^0,w,c
 19381  00148A  0212               	mulwf	(___flmul@b+2)^0,c
 19382  00148C  006F FFCC  F027    	movff	prodl,___flmul@temp
 19383  001492  006F FFD0  F028    	movff	prodh,___flmul@temp+1
 19384  001498  5027               	movf	___flmul@temp^0,w,c
 19385  00149A  6E18               	movwf	??___flmul^0,c
 19386  00149C  5028               	movf	(___flmul@temp+1)^0,w,c
 19387  00149E  6E19               	movwf	(??___flmul+1)^0,c
 19388  0014A0  6A1A               	clrf	(??___flmul+2)^0,c
 19389  0014A2  6A1B               	clrf	(??___flmul+3)^0,c
 19390  0014A4  0060  F068  F01B   	movff	??___flmul+2,??___flmul+3
 19391  0014AA  0060  F064  F01A   	movff	??___flmul+1,??___flmul+2
 19392  0014B0  0060  F060  F019   	movff	??___flmul,??___flmul+1
 19393  0014B6  6A18               	clrf	??___flmul^0,c
 19394  0014B8  5018               	movf	??___flmul^0,w,c
 19395  0014BA  2623               	addwf	___flmul@prod^0,f,c
 19396  0014BC  5019               	movf	(??___flmul+1)^0,w,c
 19397  0014BE  2224               	addwfc	(___flmul@prod+1)^0,f,c
 19398  0014C0  501A               	movf	(??___flmul+2)^0,w,c
 19399  0014C2  2225               	addwfc	(___flmul@prod+2)^0,f,c
 19400  0014C4  501B               	movf	(??___flmul+3)^0,w,c
 19401  0014C6  2226               	addwfc	(___flmul@prod+3)^0,f,c
 19402  0014C8  5021               	movf	(___flmul@grs+3)^0,w,c
 19403  0014CA  2623               	addwf	___flmul@prod^0,f,c
 19404  0014CC  0E00               	movlw	0
 19405  0014CE  2224               	addwfc	(___flmul@prod+1)^0,f,c
 19406  0014D0  2225               	addwfc	(___flmul@prod+2)^0,f,c
 19407  0014D2  2226               	addwfc	(___flmul@prod+3)^0,f,c
 19408  0014D4  0060  F080  F021   	movff	___flmul@grs+2,___flmul@grs+3
 19409  0014DA  0060  F07C  F020   	movff	___flmul@grs+1,___flmul@grs+2
 19410  0014E0  0060  F078  F01F   	movff	___flmul@grs,___flmul@grs+1
 19411  0014E6  6A1E               	clrf	___flmul@grs^0,c
 19412  0014E8  501D               	movf	___flmul@aexp^0,w,c
 19413  0014EA  0060  F088  F018   	movff	___flmul@bexp,??___flmul
 19414  0014F0  6A19               	clrf	(??___flmul+1)^0,c
 19415  0014F2  2618               	addwf	??___flmul^0,f,c
 19416  0014F4  0E00               	movlw	0
 19417  0014F6  2219               	addwfc	(??___flmul+1)^0,f,c
 19418  0014F8  0E82               	movlw	130
 19419  0014FA  2418               	addwf	??___flmul^0,w,c
 19420  0014FC  6E27               	movwf	___flmul@temp^0,c
 19421  0014FE  0EFF               	movlw	255
 19422  001500  2019               	addwfc	(??___flmul+1)^0,w,c
 19423  001502  6E28               	movwf	(___flmul@temp+1)^0,c
 19424  001504  D00F               	goto	l10498
 19425  001506                     l10492:
 19426  001506  90D8               	bcf	status,0,c
 19427  001508  3623               	rlcf	___flmul@prod^0,f,c
 19428  00150A  3624               	rlcf	(___flmul@prod+1)^0,f,c
 19429  00150C  3625               	rlcf	(___flmul@prod+2)^0,f,c
 19430  00150E  3626               	rlcf	(___flmul@prod+3)^0,f,c
 19431  001510  BE21               	btfsc	(___flmul@grs+3)^0,7,c
 19432  001512  8023               	bsf	___flmul@prod^0,0,c
 19433  001514  90D8               	bcf	status,0,c
 19434  001516  361E               	rlcf	___flmul@grs^0,f,c
 19435  001518  361F               	rlcf	(___flmul@grs+1)^0,f,c
 19436  00151A  3620               	rlcf	(___flmul@grs+2)^0,f,c
 19437  00151C  3621               	rlcf	(___flmul@grs+3)^0,f,c
 19438  00151E  0627               	decf	___flmul@temp^0,f,c
 19439  001520  A0D8               	btfss	status,0,c
 19440  001522  0628               	decf	(___flmul@temp+1)^0,f,c
 19441  001524                     l10498:
 19442  001524  AE25               	btfss	(___flmul@prod+2)^0,7,c
 19443  001526  D7EF               	goto	l10492
 19444  001528  0E00               	movlw	0
 19445  00152A  6E1D               	movwf	___flmul@aexp^0,c
 19446  00152C  AE21               	btfss	(___flmul@grs+3)^0,7,c
 19447  00152E  D017               	goto	l3854
 19448  001530  0EFF               	movlw	255
 19449  001532  141E               	andwf	___flmul@grs^0,w,c
 19450  001534  6E18               	movwf	??___flmul^0,c
 19451  001536  0EFF               	movlw	255
 19452  001538  141F               	andwf	(___flmul@grs+1)^0,w,c
 19453  00153A  6E19               	movwf	(??___flmul+1)^0,c
 19454  00153C  0EFF               	movlw	255
 19455  00153E  1420               	andwf	(___flmul@grs+2)^0,w,c
 19456  001540  6E1A               	movwf	(??___flmul+2)^0,c
 19457  001542  0E7F               	movlw	127
 19458  001544  1421               	andwf	(___flmul@grs+3)^0,w,c
 19459  001546  6E1B               	movwf	(??___flmul+3)^0,c
 19460  001548  5018               	movf	??___flmul^0,w,c
 19461  00154A  1019               	iorwf	(??___flmul+1)^0,w,c
 19462  00154C  101A               	iorwf	(??___flmul+2)^0,w,c
 19463  00154E  101B               	iorwf	(??___flmul+3)^0,w,c
 19464  001550  B4D8               	btfsc	status,2,c
 19465  001552  D003               	goto	l3855
 19466  001554                     u8710:
 19467  001554  0E01               	movlw	1
 19468  001556  6E1D               	movwf	___flmul@aexp^0,c
 19469  001558  D002               	goto	l3854
 19470  00155A                     l3855:
 19471  00155A  B023               	btfsc	___flmul@prod^0,0,c
 19472  00155C  D7FB               	goto	u8710
 19473  00155E                     l3854:
 19474  00155E  501D               	movf	___flmul@aexp^0,w,c
 19475  001560  B4D8               	btfsc	status,2,c
 19476  001562  D027               	goto	l10518
 19477  001564  0E01               	movlw	1
 19478  001566  2623               	addwf	___flmul@prod^0,f,c
 19479  001568  0E00               	movlw	0
 19480  00156A  2224               	addwfc	(___flmul@prod+1)^0,f,c
 19481  00156C  2225               	addwfc	(___flmul@prod+2)^0,f,c
 19482  00156E  2226               	addwfc	(___flmul@prod+3)^0,f,c
 19483  001570  A026               	btfss	(___flmul@prod+3)^0,0,c
 19484  001572  D01F               	goto	l10518
 19485  001574  0060  F08C  F018   	movff	___flmul@prod,??___flmul
 19486  00157A  0060  F090  F019   	movff	___flmul@prod+1,??___flmul+1
 19487  001580  0060  F094  F01A   	movff	___flmul@prod+2,??___flmul+2
 19488  001586  0060  F098  F01B   	movff	___flmul@prod+3,??___flmul+3
 19489  00158C  341B               	rlcf	(??___flmul+3)^0,w,c
 19490  00158E  321B               	rrcf	(??___flmul+3)^0,f,c
 19491  001590  321A               	rrcf	(??___flmul+2)^0,f,c
 19492  001592  3219               	rrcf	(??___flmul+1)^0,f,c
 19493  001594  3218               	rrcf	??___flmul^0,f,c
 19494  001596  0060  F060  F023   	movff	??___flmul,___flmul@prod
 19495  00159C  0060  F064  F024   	movff	??___flmul+1,___flmul@prod+1
 19496  0015A2  0060  F068  F025   	movff	??___flmul+2,___flmul@prod+2
 19497  0015A8  0060  F06C  F026   	movff	??___flmul+3,___flmul@prod+3
 19498  0015AE  4A27               	infsnz	___flmul@temp^0,f,c
 19499  0015B0  2A28               	incf	(___flmul@temp+1)^0,f,c
 19500  0015B2                     l10518:
 19501  0015B2  BE28               	btfsc	(___flmul@temp+1)^0,7,c
 19502  0015B4  D00D               	goto	l10522
 19503  0015B6  5028               	movf	(___flmul@temp+1)^0,w,c
 19504  0015B8  E103               	bnz	u8750
 19505  0015BA  2827               	incf	___flmul@temp^0,w,c
 19506  0015BC  A0D8               	btfss	status,0,c
 19507  0015BE  D008               	goto	l10522
 19508  0015C0                     u8750:
 19509  0015C0  0E00               	movlw	0
 19510  0015C2  6E23               	movwf	___flmul@prod^0,c
 19511  0015C4  0E00               	movlw	0
 19512  0015C6  6E24               	movwf	(___flmul@prod+1)^0,c
 19513  0015C8  0E80               	movlw	128
 19514  0015CA  6E25               	movwf	(___flmul@prod+2)^0,c
 19515  0015CC  0E7F               	movlw	127
 19516  0015CE  D021               	goto	L11
 19517  0015D0                     l10522:
 19518  0015D0  BE28               	btfsc	(___flmul@temp+1)^0,7,c
 19519  0015D2  D005               	goto	u8760
 19520  0015D4  5028               	movf	(___flmul@temp+1)^0,w,c
 19521  0015D6  E10E               	bnz	l3862
 19522  0015D8  0427               	decf	___flmul@temp^0,w,c
 19523  0015DA  B0D8               	btfsc	status,0,c
 19524  0015DC  D00B               	goto	l3862
 19525  0015DE                     u8760:
 19526  0015DE  0E00               	movlw	0
 19527  0015E0  6E23               	movwf	___flmul@prod^0,c
 19528  0015E2  0E00               	movlw	0
 19529  0015E4  6E24               	movwf	(___flmul@prod+1)^0,c
 19530  0015E6  0E00               	movlw	0
 19531  0015E8  6E25               	movwf	(___flmul@prod+2)^0,c
 19532  0015EA  0E00               	movlw	0
 19533  0015EC  6E26               	movwf	(___flmul@prod+3)^0,c
 19534  0015EE  0E00               	movlw	0
 19535  0015F0  6E1C               	movwf	___flmul@sign^0,c
 19536  0015F2  D010               	goto	l10534
 19537  0015F4                     l3862:
 19538  0015F4  0060  F09C  F022   	movff	___flmul@temp,___flmul@bexp
 19539  0015FA  0EFF               	movlw	255
 19540  0015FC  1623               	andwf	___flmul@prod^0,f,c
 19541  0015FE  0EFF               	movlw	255
 19542  001600  1624               	andwf	(___flmul@prod+1)^0,f,c
 19543  001602  0E7F               	movlw	127
 19544  001604  1625               	andwf	(___flmul@prod+2)^0,f,c
 19545  001606  0E00               	movlw	0
 19546  001608  1626               	andwf	(___flmul@prod+3)^0,f,c
 19547  00160A  B022               	btfsc	___flmul@bexp^0,0,c
 19548  00160C  8E25               	bsf	(___flmul@prod+2)^0,7,c
 19549  00160E  90D8               	bcf	status,0,c
 19550  001610  3022               	rrcf	___flmul@bexp^0,w,c
 19551  001612                     L11:
 19552  001612  6E26               	movwf	(___flmul@prod+3)^0,c
 19553  001614                     l10534:
 19554  001614  501C               	movf	___flmul@sign^0,w,c
 19555  001616  1226               	iorwf	(___flmul@prod+3)^0,f,c
 19556  001618  0060  F08C  F010   	movff	___flmul@prod,?___flmul
 19557  00161E  0060  F090  F011   	movff	___flmul@prod+1,?___flmul+1
 19558  001624  0060  F094  F012   	movff	___flmul@prod+2,?___flmul+2
 19559  00162A  0060  F098  F013   	movff	___flmul@prod+3,?___flmul+3
 19560  001630  0012               	return		;funcret
 19561  001632                     __end_of___flmul:
 19562                           	opt callstack 0
 19563                           
 19564 ;; *************** function ___fladd *****************
 19565 ;; Defined at:
 19566 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
 19567 ;; Parameters:    Size  Location     Type
 19568 ;;  b               4   40[COMRAM] unsigned char 
 19569 ;;  a               4   44[COMRAM] unsigned char 
 19570 ;; Auto vars:     Size  Location     Type
 19571 ;;  grs             1   55[COMRAM] unsigned char 
 19572 ;;  bexp            1   54[COMRAM] unsigned char 
 19573 ;;  aexp            1   53[COMRAM] unsigned char 
 19574 ;;  signs           1   52[COMRAM] unsigned char 
 19575 ;; Return value:  Size  Location     Type
 19576 ;;                  4   40[COMRAM] unsigned char 
 19577 ;; Registers used:
 19578 ;;		wreg, status,2, status,0
 19579 ;; Tracked objects:
 19580 ;;		On entry : 0/0
 19581 ;;		On exit  : 0/0
 19582 ;;		Unchanged: 0/0
 19583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19584 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19585 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19586 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19587 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19588 ;;Total ram usage:       16 bytes
 19589 ;; Hardware stack levels used:    1
 19590 ;; Hardware stack levels required when called:    7
 19591 ;; This function calls:
 19592 ;;		Nothing
 19593 ;; This function is called by:
 19594 ;;		_get_lqi
 19595 ;; This function uses a non-reentrant model
 19596 ;;
 19597                           
 19598                           	psect	text122
 19599  0019A0                     __ptext122:
 19600                           	opt callstack 0
 19601  0019A0                     ___fladd:
 19602                           	opt callstack 18
 19603                           
 19604                           ;incstack = 0
 19605  0019A0  502C               	movf	(___fladd@b+3)^0,w,c
 19606  0019A2  0B80               	andlw	128
 19607  0019A4  6E35               	movwf	___fladd@signs^0,c
 19608  0019A6  502C               	movf	(___fladd@b+3)^0,w,c
 19609  0019A8  242C               	addwf	(___fladd@b+3)^0,w,c
 19610  0019AA  6E37               	movwf	___fladd@bexp^0,c
 19611  0019AC  BE2B               	btfsc	(___fladd@b+2)^0,7,c
 19612  0019AE  8037               	bsf	___fladd@bexp^0,0,c
 19613  0019B0  5037               	movf	___fladd@bexp^0,w,c
 19614  0019B2  B4D8               	btfsc	status,2,c
 19615  0019B4  D00D               	goto	l10224
 19616  0019B6  2837               	incf	___fladd@bexp^0,w,c
 19617  0019B8  A4D8               	btfss	status,2,c
 19618  0019BA  D008               	goto	l10220
 19619  0019BC  0E00               	movlw	0
 19620  0019BE  6E29               	movwf	___fladd@b^0,c
 19621  0019C0  0E00               	movlw	0
 19622  0019C2  6E2A               	movwf	(___fladd@b+1)^0,c
 19623  0019C4  0E00               	movlw	0
 19624  0019C6  6E2B               	movwf	(___fladd@b+2)^0,c
 19625  0019C8  0E00               	movlw	0
 19626  0019CA  6E2C               	movwf	(___fladd@b+3)^0,c
 19627  0019CC                     l10220:
 19628  0019CC  8E2B               	bsf	(___fladd@b+2)^0,7,c
 19629  0019CE  D006               	goto	L12
 19630  0019D0                     l10224:
 19631  0019D0  0E00               	movlw	0
 19632  0019D2  6E29               	movwf	___fladd@b^0,c
 19633  0019D4  0E00               	movlw	0
 19634  0019D6  6E2A               	movwf	(___fladd@b+1)^0,c
 19635  0019D8  0E00               	movlw	0
 19636  0019DA  6E2B               	movwf	(___fladd@b+2)^0,c
 19637  0019DC                     L12:
 19638  0019DC  0E00               	movlw	0
 19639  0019DE  6E2C               	movwf	(___fladd@b+3)^0,c
 19640  0019E0  5030               	movf	(___fladd@a+3)^0,w,c
 19641  0019E2  0B80               	andlw	128
 19642  0019E4  6E36               	movwf	___fladd@aexp^0,c
 19643  0019E6  5035               	movf	___fladd@signs^0,w,c
 19644  0019E8  1836               	xorwf	___fladd@aexp^0,w,c
 19645  0019EA  A4D8               	btfss	status,2,c
 19646  0019EC  8C35               	bsf	___fladd@signs^0,6,c
 19647  0019EE  5030               	movf	(___fladd@a+3)^0,w,c
 19648  0019F0  2430               	addwf	(___fladd@a+3)^0,w,c
 19649  0019F2  6E36               	movwf	___fladd@aexp^0,c
 19650  0019F4  BE2F               	btfsc	(___fladd@a+2)^0,7,c
 19651  0019F6  8036               	bsf	___fladd@aexp^0,0,c
 19652  0019F8  5036               	movf	___fladd@aexp^0,w,c
 19653  0019FA  B4D8               	btfsc	status,2,c
 19654  0019FC  D00D               	goto	l10248
 19655  0019FE  2836               	incf	___fladd@aexp^0,w,c
 19656  001A00  A4D8               	btfss	status,2,c
 19657  001A02  D008               	goto	l10244
 19658  001A04  0E00               	movlw	0
 19659  001A06  6E2D               	movwf	___fladd@a^0,c
 19660  001A08  0E00               	movlw	0
 19661  001A0A  6E2E               	movwf	(___fladd@a+1)^0,c
 19662  001A0C  0E00               	movlw	0
 19663  001A0E  6E2F               	movwf	(___fladd@a+2)^0,c
 19664  001A10  0E00               	movlw	0
 19665  001A12  6E30               	movwf	(___fladd@a+3)^0,c
 19666  001A14                     l10244:
 19667  001A14  8E2F               	bsf	(___fladd@a+2)^0,7,c
 19668  001A16  D006               	goto	L13
 19669  001A18                     l10248:
 19670  001A18  0E00               	movlw	0
 19671  001A1A  6E2D               	movwf	___fladd@a^0,c
 19672  001A1C  0E00               	movlw	0
 19673  001A1E  6E2E               	movwf	(___fladd@a+1)^0,c
 19674  001A20  0E00               	movlw	0
 19675  001A22  6E2F               	movwf	(___fladd@a+2)^0,c
 19676  001A24                     L13:
 19677  001A24  0E00               	movlw	0
 19678  001A26  6E30               	movwf	(___fladd@a+3)^0,c
 19679  001A28  5037               	movf	___fladd@bexp^0,w,c
 19680  001A2A  5C36               	subwf	___fladd@aexp^0,w,c
 19681  001A2C  B0D8               	btfsc	status,0,c
 19682  001A2E  D031               	goto	l10286
 19683  001A30  AC35               	btfss	___fladd@signs^0,6,c
 19684  001A32  D002               	goto	l10256
 19685  001A34  0E80               	movlw	128
 19686  001A36  1A35               	xorwf	___fladd@signs^0,f,c
 19687  001A38                     l10256:
 19688  001A38  0060  F0DC  F038   	movff	___fladd@bexp,___fladd@grs
 19689  001A3E  0060  F0D8  F037   	movff	___fladd@aexp,___fladd@bexp
 19690  001A44  0060  F0E0  F036   	movff	___fladd@grs,___fladd@aexp
 19691  001A4A  0060  F0A4  F038   	movff	___fladd@b,___fladd@grs
 19692  001A50  0060  F0B4  F029   	movff	___fladd@a,___fladd@b
 19693  001A56  0060  F0E0  F02D   	movff	___fladd@grs,___fladd@a
 19694  001A5C  0060  F0A8  F038   	movff	___fladd@b+1,___fladd@grs
 19695  001A62  0060  F0B8  F02A   	movff	___fladd@a+1,___fladd@b+1
 19696  001A68  0060  F0E0  F02E   	movff	___fladd@grs,___fladd@a+1
 19697  001A6E  0060  F0AC  F038   	movff	___fladd@b+2,___fladd@grs
 19698  001A74  0060  F0BC  F02B   	movff	___fladd@a+2,___fladd@b+2
 19699  001A7A  0060  F0E0  F02F   	movff	___fladd@grs,___fladd@a+2
 19700  001A80  0060  F0B0  F038   	movff	___fladd@b+3,___fladd@grs
 19701  001A86  0060  F0C0  F02C   	movff	___fladd@a+3,___fladd@b+3
 19702  001A8C  0060  F0E0  F030   	movff	___fladd@grs,___fladd@a+3
 19703  001A92                     l10286:
 19704  001A92  0E00               	movlw	0
 19705  001A94  6E38               	movwf	___fladd@grs^0,c
 19706  001A96  5037               	movf	___fladd@bexp^0,w,c
 19707  001A98  0060  F0D8  F031   	movff	___fladd@aexp,??___fladd
 19708  001A9E  6A32               	clrf	(??___fladd+1)^0,c
 19709  001AA0  5E31               	subwf	??___fladd^0,f,c
 19710  001AA2  0E00               	movlw	0
 19711  001AA4  5A32               	subwfb	(??___fladd+1)^0,f,c
 19712  001AA6  BE32               	btfsc	(??___fladd+1)^0,7,c
 19713  001AA8  D02D               	goto	l3760
 19714  001AAA  5032               	movf	(??___fladd+1)^0,w,c
 19715  001AAC  E104               	bnz	u8300
 19716  001AAE  0E1A               	movlw	26
 19717  001AB0  5C31               	subwf	??___fladd^0,w,c
 19718  001AB2  A0D8               	btfss	status,0,c
 19719  001AB4  D027               	goto	l3760
 19720  001AB6                     u8300:
 19721  001AB6  5029               	movf	___fladd@b^0,w,c
 19722  001AB8  102A               	iorwf	(___fladd@b+1)^0,w,c
 19723  001ABA  102B               	iorwf	(___fladd@b+2)^0,w,c
 19724  001ABC  102C               	iorwf	(___fladd@b+3)^0,w,c
 19725  001ABE  B4D8               	btfsc	status,2,c
 19726  001AC0  D002               	goto	u8310
 19727  001AC2  0E01               	movlw	1
 19728  001AC4  D001               	goto	u8320
 19729  001AC6                     u8310:
 19730  001AC6  0E00               	movlw	0
 19731  001AC8                     u8320:
 19732  001AC8  6E38               	movwf	___fladd@grs^0,c
 19733  001ACA  0E00               	movlw	0
 19734  001ACC  6E29               	movwf	___fladd@b^0,c
 19735  001ACE  0E00               	movlw	0
 19736  001AD0  6E2A               	movwf	(___fladd@b+1)^0,c
 19737  001AD2  0E00               	movlw	0
 19738  001AD4  6E2B               	movwf	(___fladd@b+2)^0,c
 19739  001AD6  0E00               	movlw	0
 19740  001AD8  6E2C               	movwf	(___fladd@b+3)^0,c
 19741  001ADA  0060  F0D8  F037   	movff	___fladd@aexp,___fladd@bexp
 19742  001AE0  D015               	goto	u8350
 19743  001AE2                     l3761:
 19744  001AE2  A038               	btfss	___fladd@grs^0,0,c
 19745  001AE4  D005               	goto	l10298
 19746  001AE6  90D8               	bcf	status,0,c
 19747  001AE8  3038               	rrcf	___fladd@grs^0,w,c
 19748  001AEA  0901               	iorlw	1
 19749  001AEC  6E38               	movwf	___fladd@grs^0,c
 19750  001AEE  D002               	goto	l10300
 19751  001AF0                     l10298:
 19752  001AF0  90D8               	bcf	status,0,c
 19753  001AF2  3238               	rrcf	___fladd@grs^0,f,c
 19754  001AF4                     l10300:
 19755  001AF4  B029               	btfsc	___fladd@b^0,0,c
 19756  001AF6  8E38               	bsf	___fladd@grs^0,7,c
 19757  001AF8  342C               	rlcf	(___fladd@b+3)^0,w,c
 19758  001AFA  322C               	rrcf	(___fladd@b+3)^0,f,c
 19759  001AFC  322B               	rrcf	(___fladd@b+2)^0,f,c
 19760  001AFE  322A               	rrcf	(___fladd@b+1)^0,f,c
 19761  001B00  3229               	rrcf	___fladd@b^0,f,c
 19762  001B02  2A37               	incf	___fladd@bexp^0,f,c
 19763  001B04                     l3760:
 19764  001B04  5036               	movf	___fladd@aexp^0,w,c
 19765  001B06  5C37               	subwf	___fladd@bexp^0,w,c
 19766  001B08  A0D8               	btfss	status,0,c
 19767  001B0A  D7EB               	goto	l3761
 19768  001B0C                     u8350:
 19769  001B0C  BC35               	btfsc	___fladd@signs^0,6,c
 19770  001B0E  D028               	goto	l10332
 19771  001B10  5037               	movf	___fladd@bexp^0,w,c
 19772  001B12  A4D8               	btfss	status,2,c
 19773  001B14  D009               	goto	l10314
 19774  001B16  0E00               	movlw	0
 19775  001B18  6E29               	movwf	?___fladd^0,c
 19776  001B1A  0E00               	movlw	0
 19777  001B1C  6E2A               	movwf	(?___fladd+1)^0,c
 19778  001B1E  0E00               	movlw	0
 19779  001B20  6E2B               	movwf	(?___fladd+2)^0,c
 19780  001B22  0E00               	movlw	0
 19781  001B24  6E2C               	movwf	(?___fladd+3)^0,c
 19782  001B26  0012               	return	
 19783  001B28                     l10314:
 19784  001B28  502D               	movf	___fladd@a^0,w,c
 19785  001B2A  2629               	addwf	___fladd@b^0,f,c
 19786  001B2C  502E               	movf	(___fladd@a+1)^0,w,c
 19787  001B2E  222A               	addwfc	(___fladd@b+1)^0,f,c
 19788  001B30  502F               	movf	(___fladd@a+2)^0,w,c
 19789  001B32  222B               	addwfc	(___fladd@b+2)^0,f,c
 19790  001B34  5030               	movf	(___fladd@a+3)^0,w,c
 19791  001B36  222C               	addwfc	(___fladd@b+3)^0,f,c
 19792  001B38  A02C               	btfss	(___fladd@b+3)^0,0,c
 19793  001B3A  D071               	goto	u8480
 19794  001B3C  A038               	btfss	___fladd@grs^0,0,c
 19795  001B3E  D005               	goto	l10322
 19796  001B40  90D8               	bcf	status,0,c
 19797  001B42  3038               	rrcf	___fladd@grs^0,w,c
 19798  001B44  0901               	iorlw	1
 19799  001B46  6E38               	movwf	___fladd@grs^0,c
 19800  001B48  D002               	goto	l10324
 19801  001B4A                     l10322:
 19802  001B4A  90D8               	bcf	status,0,c
 19803  001B4C  3238               	rrcf	___fladd@grs^0,f,c
 19804  001B4E                     l10324:
 19805  001B4E  B029               	btfsc	___fladd@b^0,0,c
 19806  001B50  8E38               	bsf	___fladd@grs^0,7,c
 19807  001B52  342C               	rlcf	(___fladd@b+3)^0,w,c
 19808  001B54  322C               	rrcf	(___fladd@b+3)^0,f,c
 19809  001B56  322B               	rrcf	(___fladd@b+2)^0,f,c
 19810  001B58  322A               	rrcf	(___fladd@b+1)^0,f,c
 19811  001B5A  3229               	rrcf	___fladd@b^0,f,c
 19812  001B5C  2A37               	incf	___fladd@bexp^0,f,c
 19813  001B5E  D05F               	goto	u8480
 19814  001B60                     l10332:
 19815  001B60  502D               	movf	___fladd@a^0,w,c
 19816  001B62  5C29               	subwf	___fladd@b^0,w,c
 19817  001B64  502E               	movf	(___fladd@a+1)^0,w,c
 19818  001B66  582A               	subwfb	(___fladd@b+1)^0,w,c
 19819  001B68  502F               	movf	(___fladd@a+2)^0,w,c
 19820  001B6A  582B               	subwfb	(___fladd@b+2)^0,w,c
 19821  001B6C  502C               	movf	(___fladd@b+3)^0,w,c
 19822  001B6E  0A80               	xorlw	128
 19823  001B70  6E31               	movwf	??___fladd^0,c
 19824  001B72  5030               	movf	(___fladd@a+3)^0,w,c
 19825  001B74  0A80               	xorlw	128
 19826  001B76  5831               	subwfb	??___fladd^0,w,c
 19827  001B78  B0D8               	btfsc	status,0,c
 19828  001B7A  D025               	goto	l10342
 19829  001B7C  5029               	movf	___fladd@b^0,w,c
 19830  001B7E  5C2D               	subwf	___fladd@a^0,w,c
 19831  001B80  6E31               	movwf	??___fladd^0,c
 19832  001B82  502A               	movf	(___fladd@b+1)^0,w,c
 19833  001B84  582E               	subwfb	(___fladd@a+1)^0,w,c
 19834  001B86  6E32               	movwf	(??___fladd+1)^0,c
 19835  001B88  502B               	movf	(___fladd@b+2)^0,w,c
 19836  001B8A  582F               	subwfb	(___fladd@a+2)^0,w,c
 19837  001B8C  6E33               	movwf	(??___fladd+2)^0,c
 19838  001B8E  502C               	movf	(___fladd@b+3)^0,w,c
 19839  001B90  5830               	subwfb	(___fladd@a+3)^0,w,c
 19840  001B92  6E34               	movwf	(??___fladd+3)^0,c
 19841  001B94  0EFF               	movlw	255
 19842  001B96  2431               	addwf	??___fladd^0,w,c
 19843  001B98  6E29               	movwf	___fladd@b^0,c
 19844  001B9A  0EFF               	movlw	255
 19845  001B9C  2032               	addwfc	(??___fladd+1)^0,w,c
 19846  001B9E  6E2A               	movwf	(___fladd@b+1)^0,c
 19847  001BA0  0EFF               	movlw	255
 19848  001BA2  2033               	addwfc	(??___fladd+2)^0,w,c
 19849  001BA4  6E2B               	movwf	(___fladd@b+2)^0,c
 19850  001BA6  0EFF               	movlw	255
 19851  001BA8  2034               	addwfc	(??___fladd+3)^0,w,c
 19852  001BAA  6E2C               	movwf	(___fladd@b+3)^0,c
 19853  001BAC  0E80               	movlw	128
 19854  001BAE  1A35               	xorwf	___fladd@signs^0,f,c
 19855  001BB0  6C38               	negf	___fladd@grs^0,c
 19856  001BB2  5038               	movf	___fladd@grs^0,w,c
 19857  001BB4  A4D8               	btfss	status,2,c
 19858  001BB6  D00F               	goto	l3776
 19859  001BB8  0E01               	movlw	1
 19860  001BBA  2629               	addwf	___fladd@b^0,f,c
 19861  001BBC  0E00               	movlw	0
 19862  001BBE  222A               	addwfc	(___fladd@b+1)^0,f,c
 19863  001BC0  222B               	addwfc	(___fladd@b+2)^0,f,c
 19864  001BC2  222C               	addwfc	(___fladd@b+3)^0,f,c
 19865  001BC4  D008               	goto	l3776
 19866  001BC6                     l10342:
 19867  001BC6  502D               	movf	___fladd@a^0,w,c
 19868  001BC8  5E29               	subwf	___fladd@b^0,f,c
 19869  001BCA  502E               	movf	(___fladd@a+1)^0,w,c
 19870  001BCC  5A2A               	subwfb	(___fladd@b+1)^0,f,c
 19871  001BCE  502F               	movf	(___fladd@a+2)^0,w,c
 19872  001BD0  5A2B               	subwfb	(___fladd@b+2)^0,f,c
 19873  001BD2  5030               	movf	(___fladd@a+3)^0,w,c
 19874  001BD4  5A2C               	subwfb	(___fladd@b+3)^0,f,c
 19875  001BD6                     l3776:
 19876  001BD6  5029               	movf	___fladd@b^0,w,c
 19877  001BD8  102A               	iorwf	(___fladd@b+1)^0,w,c
 19878  001BDA  102B               	iorwf	(___fladd@b+2)^0,w,c
 19879  001BDC  102C               	iorwf	(___fladd@b+3)^0,w,c
 19880  001BDE  A4D8               	btfss	status,2,c
 19881  001BE0  D01C               	goto	l10366
 19882  001BE2  5038               	movf	___fladd@grs^0,w,c
 19883  001BE4  A4D8               	btfss	status,2,c
 19884  001BE6  D019               	goto	l10366
 19885  001BE8  0E00               	movlw	0
 19886  001BEA  6E29               	movwf	?___fladd^0,c
 19887  001BEC  0E00               	movlw	0
 19888  001BEE  6E2A               	movwf	(?___fladd+1)^0,c
 19889  001BF0  0E00               	movlw	0
 19890  001BF2  6E2B               	movwf	(?___fladd+2)^0,c
 19891  001BF4  0E00               	movlw	0
 19892  001BF6  6E2C               	movwf	(?___fladd+3)^0,c
 19893  001BF8  0012               	return	
 19894  001BFA                     l10350:
 19895  001BFA  90D8               	bcf	status,0,c
 19896  001BFC  3629               	rlcf	___fladd@b^0,f,c
 19897  001BFE  362A               	rlcf	(___fladd@b+1)^0,f,c
 19898  001C00  362B               	rlcf	(___fladd@b+2)^0,f,c
 19899  001C02  362C               	rlcf	(___fladd@b+3)^0,f,c
 19900  001C04  BE38               	btfsc	___fladd@grs^0,7,c
 19901  001C06  8029               	bsf	___fladd@b^0,0,c
 19902  001C08  A038               	btfss	___fladd@grs^0,0,c
 19903  001C0A  D002               	goto	l10360
 19904  001C0C  80D8               	bsf	status,0,c
 19905  001C0E  D001               	goto	L14
 19906  001C10                     l10360:
 19907  001C10  90D8               	bcf	status,0,c
 19908  001C12                     L14:
 19909  001C12  3638               	rlcf	___fladd@grs^0,f,c
 19910  001C14  5037               	movf	___fladd@bexp^0,w,c
 19911  001C16  A4D8               	btfss	status,2,c
 19912  001C18  0637               	decf	___fladd@bexp^0,f,c
 19913  001C1A                     l10366:
 19914  001C1A  AE2B               	btfss	(___fladd@b+2)^0,7,c
 19915  001C1C  D7EE               	goto	l10350
 19916  001C1E                     u8480:
 19917  001C1E  0E00               	movlw	0
 19918  001C20  6E36               	movwf	___fladd@aexp^0,c
 19919  001C22  AE38               	btfss	___fladd@grs^0,7,c
 19920  001C24  D00C               	goto	l3785
 19921  001C26  0060  F0E0  F031   	movff	___fladd@grs,??___fladd
 19922  001C2C  0E7F               	movlw	127
 19923  001C2E  1631               	andwf	??___fladd^0,f,c
 19924  001C30  B4D8               	btfsc	status,2,c
 19925  001C32  D003               	goto	l3786
 19926  001C34                     u8500:
 19927  001C34  0E01               	movlw	1
 19928  001C36  6E36               	movwf	___fladd@aexp^0,c
 19929  001C38  D002               	goto	l3785
 19930  001C3A                     l3786:
 19931  001C3A  B029               	btfsc	___fladd@b^0,0,c
 19932  001C3C  D7FB               	goto	u8500
 19933  001C3E                     l3785:
 19934  001C3E  5036               	movf	___fladd@aexp^0,w,c
 19935  001C40  B4D8               	btfsc	status,2,c
 19936  001C42  D028               	goto	l10386
 19937  001C44  0E01               	movlw	1
 19938  001C46  2629               	addwf	___fladd@b^0,f,c
 19939  001C48  0E00               	movlw	0
 19940  001C4A  222A               	addwfc	(___fladd@b+1)^0,f,c
 19941  001C4C  222B               	addwfc	(___fladd@b+2)^0,f,c
 19942  001C4E  222C               	addwfc	(___fladd@b+3)^0,f,c
 19943  001C50  A02C               	btfss	(___fladd@b+3)^0,0,c
 19944  001C52  D020               	goto	l10386
 19945  001C54  0060  F0A4  F031   	movff	___fladd@b,??___fladd
 19946  001C5A  0060  F0A8  F032   	movff	___fladd@b+1,??___fladd+1
 19947  001C60  0060  F0AC  F033   	movff	___fladd@b+2,??___fladd+2
 19948  001C66  0060  F0B0  F034   	movff	___fladd@b+3,??___fladd+3
 19949  001C6C  3434               	rlcf	(??___fladd+3)^0,w,c
 19950  001C6E  3234               	rrcf	(??___fladd+3)^0,f,c
 19951  001C70  3233               	rrcf	(??___fladd+2)^0,f,c
 19952  001C72  3232               	rrcf	(??___fladd+1)^0,f,c
 19953  001C74  3231               	rrcf	??___fladd^0,f,c
 19954  001C76  0060  F0C4  F029   	movff	??___fladd,___fladd@b
 19955  001C7C  0060  F0C8  F02A   	movff	??___fladd+1,___fladd@b+1
 19956  001C82  0060  F0CC  F02B   	movff	??___fladd+2,___fladd@b+2
 19957  001C88  0060  F0D0  F02C   	movff	??___fladd+3,___fladd@b+3
 19958  001C8E  2837               	incf	___fladd@bexp^0,w,c
 19959  001C90  A4D8               	btfss	status,2,c
 19960  001C92  2A37               	incf	___fladd@bexp^0,f,c
 19961  001C94                     l10386:
 19962  001C94  2837               	incf	___fladd@bexp^0,w,c
 19963  001C96  B4D8               	btfsc	status,2,c
 19964  001C98  D003               	goto	u8560
 19965  001C9A  5037               	movf	___fladd@bexp^0,w,c
 19966  001C9C  A4D8               	btfss	status,2,c
 19967  001C9E  D00D               	goto	l10394
 19968  001CA0                     u8560:
 19969  001CA0  0E00               	movlw	0
 19970  001CA2  6E29               	movwf	___fladd@b^0,c
 19971  001CA4  0E00               	movlw	0
 19972  001CA6  6E2A               	movwf	(___fladd@b+1)^0,c
 19973  001CA8  0E00               	movlw	0
 19974  001CAA  6E2B               	movwf	(___fladd@b+2)^0,c
 19975  001CAC  0E00               	movlw	0
 19976  001CAE  6E2C               	movwf	(___fladd@b+3)^0,c
 19977  001CB0  5037               	movf	___fladd@bexp^0,w,c
 19978  001CB2  A4D8               	btfss	status,2,c
 19979  001CB4  D002               	goto	l10394
 19980  001CB6  0E00               	movlw	0
 19981  001CB8  6E35               	movwf	___fladd@signs^0,c
 19982  001CBA                     l10394:
 19983  001CBA  A037               	btfss	___fladd@bexp^0,0,c
 19984  001CBC  D002               	goto	l10398
 19985  001CBE  8E2B               	bsf	(___fladd@b+2)^0,7,c
 19986  001CC0  D001               	goto	l10400
 19987  001CC2                     l10398:
 19988  001CC2  9E2B               	bcf	(___fladd@b+2)^0,7,c
 19989  001CC4                     l10400:
 19990  001CC4  90D8               	bcf	status,0,c
 19991  001CC6  3037               	rrcf	___fladd@bexp^0,w,c
 19992  001CC8  6E2C               	movwf	(___fladd@b+3)^0,c
 19993  001CCA  BE35               	btfsc	___fladd@signs^0,7,c
 19994  001CCC  8E2C               	bsf	(___fladd@b+3)^0,7,c
 19995  001CCE  0060  F0A4  F029   	movff	___fladd@b,?___fladd
 19996  001CD4  0060  F0A8  F02A   	movff	___fladd@b+1,?___fladd+1
 19997  001CDA  0060  F0AC  F02B   	movff	___fladd@b+2,?___fladd+2
 19998  001CE0  0060  F0B0  F02C   	movff	___fladd@b+3,?___fladd+3
 19999  001CE6  0012               	return		;funcret
 20000  001CE8                     __end_of___fladd:
 20001                           	opt callstack 0
 20002                           
 20003 ;; *************** function _PHY_DataInd *****************
 20004 ;; Defined at:
 20005 ;;		line 116 in file "../nwk/nwk_src/nwkRx.c"
 20006 ;; Parameters:    Size  Location     Type
 20007 ;;  ind             1   18[COMRAM] PTR struct PHY_DataInd_t
 20008 ;;		 -> DIO0_Receive_ISR@ind(5), 
 20009 ;; Auto vars:     Size  Location     Type
 20010 ;;  frame           2   22[COMRAM] PTR struct NwkFrame_t
 20011 ;;		 -> nwkFrameFrames(685), NULL(0), 
 20012 ;; Return value:  Size  Location     Type
 20013 ;;                  1    wreg      void 
 20014 ;; Registers used:
 20015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20016 ;; Tracked objects:
 20017 ;;		On entry : 0/0
 20018 ;;		On exit  : 0/0
 20019 ;;		Unchanged: 0/0
 20020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20021 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20022 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20023 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20024 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20025 ;;Total ram usage:        6 bytes
 20026 ;; Hardware stack levels used:    1
 20027 ;; Hardware stack levels required when called:    9
 20028 ;; This function calls:
 20029 ;;		_memcpy
 20030 ;;		_nwkFrameAlloc
 20031 ;; This function is called by:
 20032 ;;		_DIO0_Receive_ISR
 20033 ;; This function uses a non-reentrant model
 20034 ;;
 20035                           
 20036                           	psect	text123
 20037  0047EC                     __ptext123:
 20038                           	opt callstack 0
 20039  0047EC                     _PHY_DataInd:
 20040                           	opt callstack 17
 20041                           
 20042                           ;../nwk/nwk_src/nwkRx.c: 116: void PHY_DataInd(PHY_DataInd_t *ind);../nwk/nwk_src/nwkRx.
      +                          c: 117: {;../nwk/nwk_src/nwkRx.c: 118:   NwkFrame_t *frame;;../nwk/nwk_src/nwkRx.c: 120:
      +                             if (0x88 != ind->data[1] || (0x61 != ind->data[0] && 0x41 != ind->data[0]) ||
 20043                           
 20044                           ;incstack = 0
 20045  0047EC  5013               	movf	PHY_DataInd@ind^0,w,c
 20046  0047EE  6ED9               	movwf	fsr2l,c
 20047  0047F0  6ADA               	clrf	fsr2h,c
 20048  0047F2  EE10 F001          	lfsr	1,1
 20049  0047F6  50DE               	movf	postinc2,w,c
 20050  0047F8  26E1               	addwf	fsr1l,f,c
 20051  0047FA  50DD               	movf	postdec2,w,c
 20052  0047FC  22E2               	addwfc	fsr1h,f,c
 20053  0047FE  0E88               	movlw	136
 20054  004800  18E6               	xorwf	postinc1,w,c
 20055  004802  A4D8               	btfss	status,2,c
 20056  004804  0012               	return	
 20057  004806  5013               	movf	PHY_DataInd@ind^0,w,c
 20058  004808  6ED9               	movwf	fsr2l,c
 20059  00480A  6ADA               	clrf	fsr2h,c
 20060  00480C  006F FF78  F014    	movff	postinc2,??_PHY_DataInd
 20061  004812  006F FF74  F015    	movff	postdec2,??_PHY_DataInd+1
 20062  004818  0060  F053  FFD9   	movff	??_PHY_DataInd,fsr2l
 20063  00481E  0060  F057  FFDA   	movff	??_PHY_DataInd+1,fsr2h
 20064  004824  0E61               	movlw	97
 20065  004826  18DE               	xorwf	postinc2,w,c
 20066  004828  B4D8               	btfsc	status,2,c
 20067  00482A  D013               	goto	u14420
 20068  00482C  5013               	movf	PHY_DataInd@ind^0,w,c
 20069  00482E  6ED9               	movwf	fsr2l,c
 20070  004830  6ADA               	clrf	fsr2h,c
 20071  004832  006F FF78  F014    	movff	postinc2,??_PHY_DataInd
 20072  004838  006F FF74  F015    	movff	postdec2,??_PHY_DataInd+1
 20073  00483E  0060  F053  FFD9   	movff	??_PHY_DataInd,fsr2l
 20074  004844  0060  F057  FFDA   	movff	??_PHY_DataInd+1,fsr2h
 20075  00484A  0E41               	movlw	65
 20076  00484C  18DE               	xorwf	postinc2,w,c
 20077  00484E  A4D8               	btfss	status,2,c
 20078  004850  0012               	return	
 20079  004852                     u14420:
 20080  004852  5013               	movf	PHY_DataInd@ind^0,w,c
 20081  004854  6ED9               	movwf	fsr2l,c
 20082  004856  6ADA               	clrf	fsr2h,c
 20083  004858  0E02               	movlw	2
 20084  00485A  26D9               	addwf	fsr2l,f,c
 20085  00485C  0E10               	movlw	16
 20086  00485E  60DF               	cpfslt	indf2,c
 20087  004860  D001               	goto	l14868
 20088  004862  0012               	return	
 20089  004864                     l14868:
 20090                           
 20091                           ;../nwk/nwk_src/nwkRx.c: 124:   if (((void*)0) == (frame = nwkFrameAlloc()))
 20092  004864  ECE8  F033         	call	_nwkFrameAlloc	;wreg free
 20093  004868  0060  F038  F017   	movff	?_nwkFrameAlloc,PHY_DataInd@frame
 20094  00486E  0060  F03C  F018   	movff	?_nwkFrameAlloc+1,PHY_DataInd@frame+1
 20095  004874  5017               	movf	PHY_DataInd@frame^0,w,c
 20096  004876  1018               	iorwf	(PHY_DataInd@frame+1)^0,w,c
 20097  004878  B4D8               	btfsc	status,2,c
 20098  00487A  0012               	return	
 20099                           
 20100                           ;../nwk/nwk_src/nwkRx.c: 127:   frame->state = NWK_RX_STATE_RECEIVED;
 20101  00487C  0060  F05F  FFD9   	movff	PHY_DataInd@frame,fsr2l
 20102  004882  0060  F063  FFDA   	movff	PHY_DataInd@frame+1,fsr2h
 20103  004888  0E20               	movlw	32
 20104  00488A  6EDF               	movwf	indf2,c
 20105                           
 20106                           ;../nwk/nwk_src/nwkRx.c: 128:   frame->size = ind->size;
 20107  00488C  5013               	movf	PHY_DataInd@ind^0,w,c
 20108  00488E  6ED9               	movwf	fsr2l,c
 20109  004890  6ADA               	clrf	fsr2h,c
 20110  004892  0E02               	movlw	2
 20111  004894  26D9               	addwf	fsr2l,f,c
 20112  004896  EE10 F001          	lfsr	1,1
 20113  00489A  5017               	movf	PHY_DataInd@frame^0,w,c
 20114  00489C  26E1               	addwf	fsr1l,f,c
 20115  00489E  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 20116  0048A0  22E2               	addwfc	fsr1h,f,c
 20117  0048A2  006F FF7F FFE7     	movff	indf2,indf1
 20118                           
 20119                           ;../nwk/nwk_src/nwkRx.c: 129:   frame->rx.lqi = ind->lqi;
 20120  0048A8  5013               	movf	PHY_DataInd@ind^0,w,c
 20121  0048AA  6ED9               	movwf	fsr2l,c
 20122  0048AC  6ADA               	clrf	fsr2h,c
 20123  0048AE  0E03               	movlw	3
 20124  0048B0  26D9               	addwf	fsr2l,f,c
 20125  0048B2  EE10 F083          	lfsr	1,131
 20126  0048B6  5017               	movf	PHY_DataInd@frame^0,w,c
 20127  0048B8  26E1               	addwf	fsr1l,f,c
 20128  0048BA  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 20129  0048BC  22E2               	addwfc	fsr1h,f,c
 20130  0048BE  006F FF7F FFE7     	movff	indf2,indf1
 20131                           
 20132                           ;../nwk/nwk_src/nwkRx.c: 130:   frame->rx.rssi = ind->rssi;
 20133  0048C4  5013               	movf	PHY_DataInd@ind^0,w,c
 20134  0048C6  6ED9               	movwf	fsr2l,c
 20135  0048C8  6ADA               	clrf	fsr2h,c
 20136  0048CA  0E04               	movlw	4
 20137  0048CC  26D9               	addwf	fsr2l,f,c
 20138  0048CE  EE10 F084          	lfsr	1,132
 20139  0048D2  5017               	movf	PHY_DataInd@frame^0,w,c
 20140  0048D4  26E1               	addwf	fsr1l,f,c
 20141  0048D6  5018               	movf	(PHY_DataInd@frame+1)^0,w,c
 20142  0048D8  22E2               	addwfc	fsr1h,f,c
 20143  0048DA  006F FF7F FFE7     	movff	indf2,indf1
 20144                           
 20145                           ;../nwk/nwk_src/nwkRx.c: 131:   memcpy(frame->data, ind->data, ind->size);
 20146  0048E0  0E02               	movlw	2
 20147  0048E2  2417               	addwf	PHY_DataInd@frame^0,w,c
 20148  0048E4  6E08               	movwf	memcpy@d1^0,c
 20149  0048E6  0E00               	movlw	0
 20150  0048E8  2018               	addwfc	(PHY_DataInd@frame+1)^0,w,c
 20151  0048EA  6E09               	movwf	(memcpy@d1+1)^0,c
 20152  0048EC  5013               	movf	PHY_DataInd@ind^0,w,c
 20153  0048EE  6ED9               	movwf	fsr2l,c
 20154  0048F0  6ADA               	clrf	fsr2h,c
 20155  0048F2  006F FF78  F00A    	movff	postinc2,memcpy@s1
 20156  0048F8  006F FF74  F00B    	movff	postdec2,memcpy@s1+1
 20157  0048FE  5013               	movf	PHY_DataInd@ind^0,w,c
 20158  004900  6ED9               	movwf	fsr2l,c
 20159  004902  6ADA               	clrf	fsr2h,c
 20160  004904  0E02               	movlw	2
 20161  004906  26D9               	addwf	fsr2l,f,c
 20162  004908  50DF               	movf	indf2,w,c
 20163  00490A  6E14               	movwf	??_PHY_DataInd^0,c
 20164  00490C  5014               	movf	??_PHY_DataInd^0,w,c
 20165  00490E  6E0C               	movwf	memcpy@n^0,c
 20166  004910  6A0D               	clrf	(memcpy@n+1)^0,c
 20167  004912  ECF6  F03A         	call	_memcpy	;wreg free
 20168  004916  0012               	return		;funcret
 20169  004918                     __end_of_PHY_DataInd:
 20170                           	opt callstack 0
 20171                           
 20172 ;; *************** function _NWK_TaskHandler *****************
 20173 ;; Defined at:
 20174 ;;		line 196 in file "../nwk/nwk_src/nwk.c"
 20175 ;; Parameters:    Size  Location     Type
 20176 ;;		None
 20177 ;; Auto vars:     Size  Location     Type
 20178 ;;		None
 20179 ;; Return value:  Size  Location     Type
 20180 ;;                  1    wreg      void 
 20181 ;; Registers used:
 20182 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 20183 ;; Tracked objects:
 20184 ;;		On entry : 2/0
 20185 ;;		On exit  : 0/0
 20186 ;;		Unchanged: 0/0
 20187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20192 ;;Total ram usage:        0 bytes
 20193 ;; Hardware stack levels used:    1
 20194 ;; Hardware stack levels required when called:   14
 20195 ;; This function calls:
 20196 ;;		_nwkDataReqTaskHandler
 20197 ;;		_nwkRxTaskHandler
 20198 ;;		_nwkTxTaskHandler
 20199 ;; This function is called by:
 20200 ;;		_SYS_TaskHandler
 20201 ;; This function uses a non-reentrant model
 20202 ;;
 20203                           
 20204                           	psect	text124
 20205  008FB6                     __ptext124:
 20206                           	opt callstack 0
 20207  008FB6                     _NWK_TaskHandler:
 20208                           	opt callstack 15
 20209                           
 20210                           ;../nwk/nwk_src/nwk.c: 198:   nwkRxTaskHandler();
 20211                           
 20212                           ;incstack = 0
 20213  008FB6  EC49  F035         	call	_nwkRxTaskHandler	;wreg free
 20214                           
 20215                           ;../nwk/nwk_src/nwk.c: 199:   nwkTxTaskHandler();
 20216  008FBA  EC51  F01A         	call	_nwkTxTaskHandler	;wreg free
 20217                           
 20218                           ;../nwk/nwk_src/nwk.c: 200:   nwkDataReqTaskHandler();
 20219  008FBE  EC37  F03A         	call	_nwkDataReqTaskHandler	;wreg free
 20220  008FC2  0012               	return		;funcret
 20221  008FC4                     __end_of_NWK_TaskHandler:
 20222                           	opt callstack 0
 20223                           
 20224 ;; *************** function _nwkTxTaskHandler *****************
 20225 ;; Defined at:
 20226 ;;		line 297 in file "../nwk/nwk_src/nwkTx.c"
 20227 ;; Parameters:    Size  Location     Type
 20228 ;;		None
 20229 ;; Auto vars:     Size  Location     Type
 20230 ;;  frame           2   21[COMRAM] PTR struct NwkFrame_t
 20231 ;;		 -> nwkFrameFrames(685), NULL(0), 
 20232 ;; Return value:  Size  Location     Type
 20233 ;;                  1    wreg      void 
 20234 ;; Registers used:
 20235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, b
      +temp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, btemp+14, btemp+15
      +, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, btemp+26, btemp+27
      +, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 20236 ;; Tracked objects:
 20237 ;;		On entry : 0/0
 20238 ;;		On exit  : 0/0
 20239 ;;		Unchanged: 0/0
 20240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20242 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20243 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20244 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20245 ;;Total ram usage:        4 bytes
 20246 ;; Hardware stack levels used:    1
 20247 ;; Hardware stack levels required when called:   13
 20248 ;; This function calls:
 20249 ;;		_PHY_DataReq
 20250 ;;		_SYS_TimerStart
 20251 ;;		_nwkDataReqTxConf
 20252 ;;		_nwkFrameFree
 20253 ;;		_nwkFrameNext
 20254 ;;		_nwkRouteFrameSent
 20255 ;; This function is called by:
 20256 ;;		_NWK_TaskHandler
 20257 ;; This function uses a non-reentrant model
 20258 ;;
 20259                           
 20260                           	psect	text125
 20261  0034A2                     __ptext125:
 20262                           	opt callstack 0
 20263  0034A2                     _nwkTxTaskHandler:
 20264                           	opt callstack 15
 20265                           
 20266                           ;../nwk/nwk_src/nwkTx.c: 299:   NwkFrame_t *frame = ((void*)0);
 20267                           
 20268                           ;incstack = 0
 20269  0034A2  0E00               	movlw	0
 20270  0034A4  6E16               	movwf	nwkTxTaskHandler@frame^0,c
 20271  0034A6  0E00               	movlw	0
 20272  0034A8  6E17               	movwf	(nwkTxTaskHandler@frame+1)^0,c
 20273                           
 20274                           ;../nwk/nwk_src/nwkTx.c: 301:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 20275  0034AA  D0E1               	goto	l16264
 20276  0034AC                     l16218:
 20277                           
 20278                           ;../nwk/nwk_src/nwkTx.c: 313:       {;../nwk/nwk_src/nwkTx.c: 314:         if (frame->tx
      +                          .timeout > 0)
 20279  0034AC  EE20 F084          	lfsr	2,132
 20280  0034B0  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20281  0034B2  26D9               	addwf	fsr2l,f,c
 20282  0034B4  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20283  0034B6  22DA               	addwfc	fsr2h,f,c
 20284  0034B8  50DE               	movf	postinc2,w,c
 20285  0034BA  10DE               	iorwf	postinc2,w,c
 20286  0034BC  B4D8               	btfsc	status,2,c
 20287  0034BE  D00F               	goto	l16224
 20288                           
 20289                           ;../nwk/nwk_src/nwkTx.c: 315:         {;../nwk/nwk_src/nwkTx.c: 316:           frame->st
      +                          ate = NWK_TX_STATE_WAIT_DELAY;
 20290  0034C0  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 20291  0034C6  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 20292  0034CC  0E11               	movlw	17
 20293  0034CE  6EDF               	movwf	indf2,c
 20294                           
 20295                           ;../nwk/nwk_src/nwkTx.c: 317:           SYS_TimerStart(&nwkTxDelayTimer);
 20296  0034D0  0E9B               	movlw	low _nwkTxDelayTimer
 20297  0034D2  6E10               	movwf	SYS_TimerStart@timer^0,c
 20298  0034D4  0E01               	movlw	high _nwkTxDelayTimer
 20299  0034D6  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 20300  0034D8  EC40  F045         	call	_SYS_TimerStart	;wreg free
 20301                           
 20302                           ;../nwk/nwk_src/nwkTx.c: 318:         }
 20303  0034DC  D0C8               	goto	l16264
 20304  0034DE                     l16224:
 20305                           
 20306                           ;../nwk/nwk_src/nwkTx.c: 320:         {;../nwk/nwk_src/nwkTx.c: 321:           frame->st
      +                          ate = NWK_TX_STATE_SEND;
 20307  0034DE  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 20308  0034E4  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 20309  0034EA  0E13               	movlw	19
 20310  0034EC  D066               	goto	L16
 20311  0034EE                     l16226:
 20312                           
 20313                           ;../nwk/nwk_src/nwkTx.c: 326:       {;../nwk/nwk_src/nwkTx.c: 327:         if (((void*)0
      +                          ) == nwkTxPhyActiveFrame)
 20314  0034EE  0100               	movlb	0	; () banked
 20315  0034F0  51BD               	movf	_nwkTxPhyActiveFrame& (0+255),w,b
 20316  0034F2  11BE               	iorwf	(_nwkTxPhyActiveFrame+1)& (0+255),w,b
 20317  0034F4  A4D8               	btfss	status,2,c
 20318  0034F6  D0BB               	goto	l16264
 20319                           
 20320                           ; BSR set to: 0
 20321                           ;../nwk/nwk_src/nwkTx.c: 328:         {;../nwk/nwk_src/nwkTx.c: 329:           nwkTxPhyA
      +                          ctiveFrame = frame;
 20322  0034F8  0060  F058  F0BD   	movff	nwkTxTaskHandler@frame,_nwkTxPhyActiveFrame
 20323  0034FE  0060  F05C  F0BE   	movff	nwkTxTaskHandler@frame+1,_nwkTxPhyActiveFrame+1
 20324                           
 20325                           ; BSR set to: 0
 20326                           ;../nwk/nwk_src/nwkTx.c: 330:           frame->state = NWK_TX_STATE_WAIT_CONF;
 20327  003504  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 20328  00350A  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 20329  003510  0E14               	movlw	20
 20330  003512  6EDF               	movwf	indf2,c
 20331                           
 20332                           ; BSR set to: 0
 20333                           ;../nwk/nwk_src/nwkTx.c: 331:           PHY_DataReq(frame->data, frame->size);
 20334  003514  0E02               	movlw	2
 20335  003516  2416               	addwf	nwkTxTaskHandler@frame^0,w,c
 20336  003518  6E11               	movwf	PHY_DataReq@data^0,c
 20337  00351A  0E00               	movlw	0
 20338  00351C  2017               	addwfc	(nwkTxTaskHandler@frame+1)^0,w,c
 20339  00351E  6E12               	movwf	(PHY_DataReq@data+1)^0,c
 20340  003520  EE20 F001          	lfsr	2,1
 20341  003524  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20342  003526  26D9               	addwf	fsr2l,f,c
 20343  003528  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20344  00352A  22DA               	addwfc	fsr2h,f,c
 20345  00352C  50DF               	movf	indf2,w,c
 20346  00352E  6E13               	movwf	PHY_DataReq@size^0,c
 20347  003530  EC22  F03E         	call	_PHY_DataReq	;wreg free
 20348                           
 20349                           ; BSR set to: 0
 20350                           ;../nwk/nwk_src/nwkTx.c: 332:           nwkIb.lock++;
 20351  003534  0101               	movlb	1	; () banked
 20352  003536  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 20353  003538  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 20354  00353A  D099               	goto	l16264
 20355  00353C                     l16236:
 20356                           
 20357                           ;../nwk/nwk_src/nwkTx.c: 340:       {;../nwk/nwk_src/nwkTx.c: 341:         if (NWK_SUCCE
      +                          SS_STATUS == frame->tx.status)
 20358  00353C  EE20 F083          	lfsr	2,131
 20359  003540  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20360  003542  26D9               	addwf	fsr2l,f,c
 20361  003544  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20362  003546  22DA               	addwfc	fsr2h,f,c
 20363  003548  50DF               	movf	indf2,w,c
 20364  00354A  A4D8               	btfss	status,2,c
 20365  00354C  D02F               	goto	l16248
 20366                           
 20367                           ;../nwk/nwk_src/nwkTx.c: 342:         {;../nwk/nwk_src/nwkTx.c: 343:           if (frame
      +                          ->header.nwkSrcAddr == nwkIb.addr && frame->header.nwkFcf.ackRequest)
 20368  00354E  EE20 F00D          	lfsr	2,13
 20369  003552  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20370  003554  26D9               	addwf	fsr2l,f,c
 20371  003556  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20372  003558  22DA               	addwfc	fsr2h,f,c
 20373  00355A  0101               	movlb	1	; () banked
 20374  00355C  5100               	movf	_nwkIb& (0+255),w,b
 20375  00355E  18DE               	xorwf	postinc2,w,c
 20376  003560  E125               	bnz	l16250
 20377  003562  5101               	movf	(_nwkIb+1)& (0+255),w,b
 20378  003564  18DE               	xorwf	postinc2,w,c
 20379  003566  A4D8               	btfss	status,2,c
 20380  003568  D021               	goto	l16248
 20381                           
 20382                           ; BSR set to: 1
 20383  00356A  EE20 F00B          	lfsr	2,11
 20384  00356E  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20385  003570  26D9               	addwf	fsr2l,f,c
 20386  003572  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20387  003574  22DA               	addwfc	fsr2h,f,c
 20388  003576  A0DF               	btfss	indf2,0,c
 20389  003578  D019               	goto	l16248
 20390                           
 20391                           ; BSR set to: 1
 20392                           ;../nwk/nwk_src/nwkTx.c: 344:           {;../nwk/nwk_src/nwkTx.c: 345:             frame
      +                          ->state = NWK_TX_STATE_WAIT_ACK;
 20393  00357A  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 20394  003580  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 20395  003586  0E16               	movlw	22
 20396  003588  6EDF               	movwf	indf2,c
 20397                           
 20398                           ; BSR set to: 1
 20399                           ;../nwk/nwk_src/nwkTx.c: 346:             frame->tx.timeout = 1000 / 200 + 1;
 20400  00358A  EE20 F084          	lfsr	2,132
 20401  00358E  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20402  003590  26D9               	addwf	fsr2l,f,c
 20403  003592  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20404  003594  22DA               	addwfc	fsr2h,f,c
 20405  003596  0E06               	movlw	6
 20406  003598  6EDE               	movwf	postinc2,c
 20407  00359A  0E00               	movlw	0
 20408  00359C  6EDD               	movwf	postdec2,c
 20409                           
 20410                           ; BSR set to: 1
 20411                           ;../nwk/nwk_src/nwkTx.c: 347:             SYS_TimerStart(&nwkTxAckWaitTimer);
 20412  00359E  0EA8               	movlw	low _nwkTxAckWaitTimer
 20413  0035A0  6E10               	movwf	SYS_TimerStart@timer^0,c
 20414  0035A2  0E01               	movlw	high _nwkTxAckWaitTimer
 20415  0035A4  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 20416  0035A6  EC40  F045         	call	_SYS_TimerStart	;wreg free
 20417                           
 20418                           ;../nwk/nwk_src/nwkTx.c: 348:           }
 20419  0035AA  D061               	goto	l16264
 20420  0035AC                     l16248:
 20421  0035AC                     l16250:
 20422                           
 20423                           ;../nwk/nwk_src/nwkTx.c: 355:         {;../nwk/nwk_src/nwkTx.c: 356:           frame->st
      +                          ate = NWK_TX_STATE_CONFIRM;
 20424  0035AC  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 20425  0035B2  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 20426  0035B8  0E17               	movlw	23
 20427  0035BA                     L16:
 20428  0035BA  6EDF               	movwf	indf2,c
 20429  0035BC  D058               	goto	l16264
 20430  0035BE                     l16252:
 20431                           
 20432                           ;../nwk/nwk_src/nwkTx.c: 364:       {;../nwk/nwk_src/nwkTx.c: 366:         nwkRouteFrame
      +                          Sent(frame);
 20433  0035BE  0060  F058  F008   	movff	nwkTxTaskHandler@frame,nwkRouteFrameSent@frame
 20434  0035C4  0060  F05C  F009   	movff	nwkTxTaskHandler@frame+1,nwkRouteFrameSent@frame+1
 20435  0035CA  EC5A  F02B         	call	_nwkRouteFrameSent	;wreg free
 20436                           
 20437                           ;../nwk/nwk_src/nwkTx.c: 368:         if (((void*)0) == frame->tx.confirm)
 20438  0035CE  EE20 F087          	lfsr	2,135
 20439  0035D2  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20440  0035D4  26D9               	addwf	fsr2l,f,c
 20441  0035D6  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20442  0035D8  22DA               	addwfc	fsr2h,f,c
 20443  0035DA  50DE               	movf	postinc2,w,c
 20444  0035DC  10DE               	iorwf	postinc2,w,c
 20445  0035DE  A4D8               	btfss	status,2,c
 20446  0035E0  D009               	goto	l16258
 20447                           
 20448                           ;../nwk/nwk_src/nwkTx.c: 369:           nwkFrameFree(frame);
 20449  0035E2  0060  F058  F002   	movff	nwkTxTaskHandler@frame,nwkFrameFree@frame
 20450  0035E8  0060  F05C  F003   	movff	nwkTxTaskHandler@frame+1,nwkFrameFree@frame+1
 20451  0035EE  ECE1  F046         	call	_nwkFrameFree	;wreg free
 20452  0035F2  D03D               	goto	l16264
 20453  0035F4                     l16258:
 20454                           
 20455                           ;../nwk/nwk_src/nwkTx.c: 371:           frame->tx.confirm(frame);
 20456  0035F4  0060  F058  F004   	movff	nwkTxTaskHandler@frame,nwkDataReqTxConf@frame
 20457  0035FA  0060  F05C  F005   	movff	nwkTxTaskHandler@frame+1,nwkDataReqTxConf@frame+1
 20458  003600  EE20 F087          	lfsr	2,135
 20459  003604  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20460  003606  26D9               	addwf	fsr2l,f,c
 20461  003608  5017               	movf	(nwkTxTaskHandler@frame+1)^0,w,c
 20462  00360A  22DA               	addwfc	fsr2h,f,c
 20463  00360C  006F FF78  F014    	movff	postinc2,??_nwkTxTaskHandler
 20464  003612  006F FF74  F015    	movff	postdec2,??_nwkTxTaskHandler+1
 20465  003618  D801               	call	u16358
 20466  00361A  D029               	goto	l16264
 20467  00361C                     u16358:
 20468  00361C  0005               	push	
 20469  00361E  6EFA               	movwf	pclath,c
 20470  003620  5014               	movf	??_nwkTxTaskHandler^0,w,c
 20471  003622  6EFD               	movwf	tosl,c
 20472  003624  5015               	movf	(??_nwkTxTaskHandler+1)^0,w,c
 20473  003626  6EFE               	movwf	tosh,c
 20474  003628  6AFF               	clrf	tosu,c
 20475  00362A  50FA               	movf	pclath,w,c
 20476  00362C  0012               	return		;indir
 20477  00362E                     l16262:
 20478  00362E  0060  F05B  FFD9   	movff	nwkTxTaskHandler@frame,fsr2l
 20479  003634  0060  F05F  FFDA   	movff	nwkTxTaskHandler@frame+1,fsr2h
 20480  00363A  50DF               	movf	indf2,w,c
 20481  00363C  6E14               	movwf	??_nwkTxTaskHandler^0,c
 20482  00363E  6A15               	clrf	(??_nwkTxTaskHandler+1)^0,c
 20483                           
 20484                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20485                           ; Switch size 1, requested type "simple"
 20486                           ; Number of cases is 1, Range of values is 0 to 0
 20487                           ; switch strategies available:
 20488                           ; Name         Instructions Cycles
 20489                           ; simple_byte            4     3 (average)
 20490                           ;	Chosen strategy is simple_byte
 20491  003640  5015               	movf	(??_nwkTxTaskHandler+1)^0,w,c
 20492  003642  0A00               	xorlw	0	; case 0
 20493  003644  A4D8               	btfss	status,2,c
 20494  003646  D013               	goto	l16264
 20495                           
 20496                           ; Switch size 1, requested type "simple"
 20497                           ; Number of cases is 6, Range of values is 18 to 23
 20498                           ; switch strategies available:
 20499                           ; Name         Instructions Cycles
 20500                           ; simple_byte           19    10 (average)
 20501                           ;	Chosen strategy is simple_byte
 20502  003648  5014               	movf	??_nwkTxTaskHandler^0,w,c
 20503  00364A  0A12               	xorlw	18	; case 18
 20504  00364C  B4D8               	btfsc	status,2,c
 20505  00364E  D72E               	goto	l16218
 20506  003650  0A01               	xorlw	1	; case 19
 20507  003652  B4D8               	btfsc	status,2,c
 20508  003654  D74C               	goto	l16226
 20509  003656  0A07               	xorlw	7	; case 20
 20510  003658  B4D8               	btfsc	status,2,c
 20511  00365A  D009               	goto	l16264
 20512  00365C  0A01               	xorlw	1	; case 21
 20513  00365E  B4D8               	btfsc	status,2,c
 20514  003660  D76D               	goto	l16236
 20515  003662  0A03               	xorlw	3	; case 22
 20516  003664  B4D8               	btfsc	status,2,c
 20517  003666  D003               	goto	l16264
 20518  003668  0A01               	xorlw	1	; case 23
 20519  00366A  B4D8               	btfsc	status,2,c
 20520  00366C  D7A8               	goto	l16252
 20521  00366E                     l16264:
 20522                           
 20523                           ;../nwk/nwk_src/nwkTx.c: 301:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 20524  00366E  0060  F058  F002   	movff	nwkTxTaskHandler@frame,nwkFrameNext@frame
 20525  003674  0060  F05C  F003   	movff	nwkTxTaskHandler@frame+1,nwkFrameNext@frame+1
 20526  00367A  ECE5  F038         	call	_nwkFrameNext	;wreg free
 20527  00367E  0060  F008  F016   	movff	?_nwkFrameNext,nwkTxTaskHandler@frame
 20528  003684  0060  F00C  F017   	movff	?_nwkFrameNext+1,nwkTxTaskHandler@frame+1
 20529  00368A  5016               	movf	nwkTxTaskHandler@frame^0,w,c
 20530  00368C  1017               	iorwf	(nwkTxTaskHandler@frame+1)^0,w,c
 20531  00368E  B4D8               	btfsc	status,2,c
 20532  003690  0012               	return	
 20533  003692  D7CD               	goto	l16262
 20534  003694                     __end_of_nwkTxTaskHandler:
 20535                           	opt callstack 0
 20536                           
 20537 ;; *************** function _nwkRouteFrameSent *****************
 20538 ;; Defined at:
 20539 ;;		line 236 in file "../nwk/nwk_src/nwkRoute.c"
 20540 ;; Parameters:    Size  Location     Type
 20541 ;;  frame           2    7[COMRAM] PTR struct NwkFrame_t
 20542 ;;		 -> nwkFrameFrames(685), NULL(0), 
 20543 ;; Auto vars:     Size  Location     Type
 20544 ;;  entry           2   11[COMRAM] PTR struct NWK_RouteTabl
 20545 ;;		 -> nwkRouteTable(70), NULL(0), 
 20546 ;; Return value:  Size  Location     Type
 20547 ;;                  1    wreg      void 
 20548 ;; Registers used:
 20549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20550 ;; Tracked objects:
 20551 ;;		On entry : 0/0
 20552 ;;		On exit  : 0/0
 20553 ;;		Unchanged: 0/0
 20554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20555 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20556 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20557 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20558 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20559 ;;Total ram usage:        6 bytes
 20560 ;; Hardware stack levels used:    1
 20561 ;; Hardware stack levels required when called:    8
 20562 ;; This function calls:
 20563 ;;		_NWK_RouteFindEntry
 20564 ;;		_NWK_RouteFreeEntry
 20565 ;;		_nwkRouteNormalizeRanks
 20566 ;; This function is called by:
 20567 ;;		_nwkTxTaskHandler
 20568 ;; This function uses a non-reentrant model
 20569 ;;
 20570                           
 20571                           	psect	text126
 20572  0056B4                     __ptext126:
 20573                           	opt callstack 0
 20574  0056B4                     _nwkRouteFrameSent:
 20575                           	opt callstack 19
 20576                           
 20577                           ;../nwk/nwk_src/nwkRoute.c: 236: void nwkRouteFrameSent(NwkFrame_t *frame);../nwk/nwk_sr
      +                          c/nwkRoute.c: 237: {;../nwk/nwk_src/nwkRoute.c: 238:   NWK_RouteTableEntry_t *entry;;../
      +                          nwk/nwk_src/nwkRoute.c: 240:   if (0xffff == frame->header.nwkDstAddr)
 20578                           
 20579                           ;incstack = 0
 20580  0056B4  EE20 F00F          	lfsr	2,15
 20581  0056B8  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 20582  0056BA  26D9               	addwf	fsr2l,f,c
 20583  0056BC  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 20584  0056BE  22DA               	addwfc	fsr2h,f,c
 20585  0056C0  28DE               	incf	postinc2,w,c
 20586  0056C2  E103               	bnz	l11654
 20587  0056C4  28DE               	incf	postinc2,w,c
 20588  0056C6  B4D8               	btfsc	status,2,c
 20589  0056C8  0012               	return	
 20590  0056CA                     l11654:
 20591                           
 20592                           ;../nwk/nwk_src/nwkRoute.c: 243:   entry = NWK_RouteFindEntry(frame->header.nwkDstAddr, 
      +                          frame->header.nwkFcf.multicast);
 20593  0056CA  EE20 F00F          	lfsr	2,15
 20594  0056CE  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 20595  0056D0  26D9               	addwf	fsr2l,f,c
 20596  0056D2  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 20597  0056D4  22DA               	addwfc	fsr2h,f,c
 20598  0056D6  006F FF78  F002    	movff	postinc2,NWK_RouteFindEntry@dst
 20599  0056DC  006F FF74  F003    	movff	postdec2,NWK_RouteFindEntry@dst+1
 20600  0056E2  EE20 F00B          	lfsr	2,11
 20601  0056E6  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 20602  0056E8  26D9               	addwf	fsr2l,f,c
 20603  0056EA  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 20604  0056EC  22DA               	addwfc	fsr2h,f,c
 20605  0056EE  0E00               	movlw	0
 20606  0056F0  B6DF               	btfsc	indf2,3,c
 20607  0056F2  0E01               	movlw	1
 20608  0056F4  6E04               	movwf	NWK_RouteFindEntry@multicast^0,c
 20609  0056F6  EC3E  F03C         	call	_NWK_RouteFindEntry	;wreg free
 20610  0056FA  0060  F008  F00C   	movff	?_NWK_RouteFindEntry,nwkRouteFrameSent@entry
 20611  005700  0060  F00C  F00D   	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameSent@entry+1
 20612                           
 20613                           ;../nwk/nwk_src/nwkRoute.c: 245:   if (((void*)0) == entry || entry->fixed)
 20614  005706  500C               	movf	nwkRouteFrameSent@entry^0,w,c
 20615  005708  100D               	iorwf	(nwkRouteFrameSent@entry+1)^0,w,c
 20616  00570A  B4D8               	btfsc	status,2,c
 20617  00570C  0012               	return	
 20618  00570E  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 20619  005714  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 20620  00571A  B0DF               	btfsc	indf2,0,c
 20621  00571C  0012               	return	
 20622                           
 20623                           ;../nwk/nwk_src/nwkRoute.c: 248:   if (NWK_SUCCESS_STATUS == frame->tx.status)
 20624  00571E  EE20 F083          	lfsr	2,131
 20625  005722  5008               	movf	nwkRouteFrameSent@frame^0,w,c
 20626  005724  26D9               	addwf	fsr2l,f,c
 20627  005726  5009               	movf	(nwkRouteFrameSent@frame+1)^0,w,c
 20628  005728  22DA               	addwfc	fsr2h,f,c
 20629  00572A  50DF               	movf	indf2,w,c
 20630  00572C  A4D8               	btfss	status,2,c
 20631  00572E  D017               	goto	l11668
 20632                           
 20633                           ;../nwk/nwk_src/nwkRoute.c: 249:   {;../nwk/nwk_src/nwkRoute.c: 250:     entry->score = 
      +                          3;
 20634  005730  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 20635  005736  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 20636  00573C  50DF               	movf	indf2,w,c
 20637  00573E  0B0F               	andlw	-241
 20638  005740  0930               	iorlw	48
 20639  005742  6EDF               	movwf	indf2,c
 20640                           
 20641                           ;../nwk/nwk_src/nwkRoute.c: 252:     if (255 == ++entry->rank)
 20642  005744  EE20 F005          	lfsr	2,5
 20643  005748  500C               	movf	nwkRouteFrameSent@entry^0,w,c
 20644  00574A  26D9               	addwf	fsr2l,f,c
 20645  00574C  500D               	movf	(nwkRouteFrameSent@entry+1)^0,w,c
 20646  00574E  22DA               	addwfc	fsr2h,f,c
 20647  005750  2ADF               	incf	indf2,f,c
 20648  005752  28DE               	incf	postinc2,w,c
 20649  005754  A4D8               	btfss	status,2,c
 20650  005756  0012               	return	
 20651                           
 20652                           ;../nwk/nwk_src/nwkRoute.c: 253:       nwkRouteNormalizeRanks();
 20653  005758  EC46  F043         	call	_nwkRouteNormalizeRanks	;wreg free
 20654  00575C  0012               	return	
 20655  00575E                     l11668:
 20656                           
 20657                           ;../nwk/nwk_src/nwkRoute.c: 256:   {;../nwk/nwk_src/nwkRoute.c: 257:     if (0 == --entr
      +                          y->score)
 20658  00575E  0E01               	movlw	1
 20659  005760  6E0A               	movwf	??_nwkRouteFrameSent^0,c
 20660  005762  0060  F033  FFD9   	movff	nwkRouteFrameSent@entry,fsr2l
 20661  005768  0060  F037  FFDA   	movff	nwkRouteFrameSent@entry+1,fsr2h
 20662  00576E  38DF               	swapf	indf2,w,c
 20663  005770  0B0F               	andlw	15
 20664  005772  6E0B               	movwf	(??_nwkRouteFrameSent+1)^0,c
 20665  005774  500A               	movf	??_nwkRouteFrameSent^0,w,c
 20666  005776  5E0B               	subwf	(??_nwkRouteFrameSent+1)^0,f,c
 20667  005778  3A0B               	swapf	(??_nwkRouteFrameSent+1)^0,f,c
 20668  00577A  50DF               	movf	indf2,w,c
 20669  00577C  180B               	xorwf	(??_nwkRouteFrameSent+1)^0,w,c
 20670  00577E  0B0F               	andlw	-241
 20671  005780  180B               	xorwf	(??_nwkRouteFrameSent+1)^0,w,c
 20672  005782  6EDF               	movwf	indf2,c
 20673  005784  38DF               	swapf	indf2,w,c
 20674  005786  0B0F               	andlw	15
 20675  005788  0900               	iorlw	0
 20676  00578A  A4D8               	btfss	status,2,c
 20677  00578C  0012               	return	
 20678                           
 20679                           ;../nwk/nwk_src/nwkRoute.c: 258:       NWK_RouteFreeEntry(entry);
 20680  00578E  0060  F030  F002   	movff	nwkRouteFrameSent@entry,NWK_RouteFreeEntry@entry
 20681  005794  0060  F034  F003   	movff	nwkRouteFrameSent@entry+1,NWK_RouteFreeEntry@entry+1
 20682  00579A  ECD2  F043         	call	_NWK_RouteFreeEntry	;wreg free
 20683  00579E  0012               	return		;funcret
 20684  0057A0                     __end_of_nwkRouteFrameSent:
 20685                           	opt callstack 0
 20686                           
 20687 ;; *************** function _nwkRouteNormalizeRanks *****************
 20688 ;; Defined at:
 20689 ;;		line 358 in file "../nwk/nwk_src/nwkRoute.c"
 20690 ;; Parameters:    Size  Location     Type
 20691 ;;		None
 20692 ;; Auto vars:     Size  Location     Type
 20693 ;;  i               1    2[COMRAM] unsigned char 
 20694 ;; Return value:  Size  Location     Type
 20695 ;;                  1    wreg      void 
 20696 ;; Registers used:
 20697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20698 ;; Tracked objects:
 20699 ;;		On entry : 0/0
 20700 ;;		On exit  : 0/0
 20701 ;;		Unchanged: 0/0
 20702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20705 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20706 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20707 ;;Total ram usage:        2 bytes
 20708 ;; Hardware stack levels used:    1
 20709 ;; Hardware stack levels required when called:    7
 20710 ;; This function calls:
 20711 ;;		Nothing
 20712 ;; This function is called by:
 20713 ;;		_nwkRouteFrameSent
 20714 ;; This function uses a non-reentrant model
 20715 ;;
 20716                           
 20717                           	psect	text127
 20718  00868C                     __ptext127:
 20719                           	opt callstack 0
 20720  00868C                     _nwkRouteNormalizeRanks:
 20721                           	opt callstack 19
 20722                           
 20723                           ;../nwk/nwk_src/nwkRoute.c: 360:   for (uint8_t i = 0; i < 10; i++)
 20724                           
 20725                           ;incstack = 0
 20726  00868C  0E00               	movlw	0
 20727  00868E  6E03               	movwf	nwkRouteNormalizeRanks@i^0,c
 20728  008690                     l10784:
 20729                           
 20730                           ;../nwk/nwk_src/nwkRoute.c: 361:     nwkRouteTable[i].rank = (nwkRouteTable[i].rank >> 1
      +                          ) + 1;
 20731  008690  5003               	movf	nwkRouteNormalizeRanks@i^0,w,c
 20732  008692  0D07               	mullw	7
 20733  008694  0E49               	movlw	low (_nwkRouteTable+5)
 20734  008696  24F3               	addwf	243,w,c
 20735  008698  6ED9               	movwf	fsr2l,c
 20736  00869A  0E02               	movlw	high (_nwkRouteTable+5)
 20737  00869C  20F4               	addwfc	prodh,w,c
 20738  00869E  6EDA               	movwf	fsr2h,c
 20739  0086A0  5003               	movf	nwkRouteNormalizeRanks@i^0,w,c
 20740  0086A2  0D07               	mullw	7
 20741  0086A4  0E49               	movlw	low (_nwkRouteTable+5)
 20742  0086A6  24F3               	addwf	243,w,c
 20743  0086A8  6EE1               	movwf	fsr1l,c
 20744  0086AA  0E02               	movlw	high (_nwkRouteTable+5)
 20745  0086AC  20F4               	addwfc	prodh,w,c
 20746  0086AE  6EE2               	movwf	fsr1h,c
 20747  0086B0  50E7               	movf	indf1,w,c
 20748  0086B2  6E02               	movwf	??_nwkRouteNormalizeRanks^0,c
 20749  0086B4  90D8               	bcf	status,0,c
 20750  0086B6  3202               	rrcf	??_nwkRouteNormalizeRanks^0,f,c
 20751  0086B8  2802               	incf	??_nwkRouteNormalizeRanks^0,w,c
 20752  0086BA  6EDF               	movwf	indf2,c
 20753  0086BC  2A03               	incf	nwkRouteNormalizeRanks@i^0,f,c
 20754  0086BE  0E09               	movlw	9
 20755  0086C0  6403               	cpfsgt	nwkRouteNormalizeRanks@i^0,c
 20756  0086C2  D7E6               	goto	l10784
 20757  0086C4  0012               	return	
 20758  0086C6                     __end_of_nwkRouteNormalizeRanks:
 20759                           	opt callstack 0
 20760                           
 20761 ;; *************** function _nwkDataReqTxConf *****************
 20762 ;; Defined at:
 20763 ;;		line 168 in file "../nwk/nwk_src/nwkDataReq.c"
 20764 ;; Parameters:    Size  Location     Type
 20765 ;;  frame           2    3[COMRAM] PTR struct NwkFrame_t
 20766 ;;		 -> nwkFrameFrames(685), NULL(0), 
 20767 ;; Auto vars:     Size  Location     Type
 20768 ;;  req             2    7[COMRAM] PTR struct NWK_DataReq_t
 20769 ;;		 -> NULL(0), tx_buffer.nwkDataReq(22), tx_buffer(524), 
 20770 ;; Return value:  Size  Location     Type
 20771 ;;                  1    wreg      void 
 20772 ;; Registers used:
 20773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20774 ;; Tracked objects:
 20775 ;;		On entry : 0/0
 20776 ;;		On exit  : 3F/1
 20777 ;;		Unchanged: 0/0
 20778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20780 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20781 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20782 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20783 ;;Total ram usage:        6 bytes
 20784 ;; Hardware stack levels used:    1
 20785 ;; Hardware stack levels required when called:    8
 20786 ;; This function calls:
 20787 ;;		_nwkFrameFree
 20788 ;; This function is called by:
 20789 ;;		_nwkDataReqSendFrame
 20790 ;;		_nwkTxTaskHandler
 20791 ;; This function uses a non-reentrant model
 20792 ;;
 20793                           
 20794                           	psect	text128
 20795  006B3E                     __ptext128:
 20796                           	opt callstack 0
 20797  006B3E                     _nwkDataReqTxConf:
 20798                           	opt callstack 19
 20799                           
 20800                           ;../nwk/nwk_src/nwkDataReq.c: 168: static void nwkDataReqTxConf(NwkFrame_t *frame);../nw
      +                          k/nwk_src/nwkDataReq.c: 169: {;../nwk/nwk_src/nwkDataReq.c: 170:   for (NWK_DataReq_t *r
      +                          eq = nwkDataReqQueue; req; req = req->next)
 20801                           
 20802                           ;incstack = 0
 20803  006B3E  0060  F2FC  F008   	movff	_nwkDataReqQueue,nwkDataReqTxConf@req
 20804  006B44  0060  F300  F009   	movff	_nwkDataReqQueue+1,nwkDataReqTxConf@req+1
 20805  006B4A  D040               	goto	l11630
 20806  006B4C                     l11622:
 20807                           
 20808                           ;../nwk/nwk_src/nwkDataReq.c: 171:   {;../nwk/nwk_src/nwkDataReq.c: 172:     if (req->fr
      +                          ame == frame)
 20809  006B4C  EE20 F002          	lfsr	2,2
 20810  006B50  5008               	movf	nwkDataReqTxConf@req^0,w,c
 20811  006B52  26D9               	addwf	fsr2l,f,c
 20812  006B54  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 20813  006B56  22DA               	addwfc	fsr2h,f,c
 20814  006B58  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 20815  006B5A  18DE               	xorwf	postinc2,w,c
 20816  006B5C  E12B               	bnz	l11628
 20817  006B5E  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 20818  006B60  18DE               	xorwf	postinc2,w,c
 20819  006B62  A4D8               	btfss	status,2,c
 20820  006B64  D027               	goto	l11628
 20821                           
 20822                           ;../nwk/nwk_src/nwkDataReq.c: 173:     {;../nwk/nwk_src/nwkDataReq.c: 174:       req->st
      +                          atus = frame->tx.status;
 20823  006B66  EE20 F083          	lfsr	2,131
 20824  006B6A  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 20825  006B6C  26D9               	addwf	fsr2l,f,c
 20826  006B6E  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 20827  006B70  22DA               	addwfc	fsr2h,f,c
 20828  006B72  EE10 F011          	lfsr	1,17
 20829  006B76  5008               	movf	nwkDataReqTxConf@req^0,w,c
 20830  006B78  26E1               	addwf	fsr1l,f,c
 20831  006B7A  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 20832  006B7C  22E2               	addwfc	fsr1h,f,c
 20833  006B7E  006F FF7F FFE7     	movff	indf2,indf1
 20834                           
 20835                           ;../nwk/nwk_src/nwkDataReq.c: 175:       req->control = frame->tx.control;
 20836  006B84  EE20 F086          	lfsr	2,134
 20837  006B88  5004               	movf	nwkDataReqTxConf@frame^0,w,c
 20838  006B8A  26D9               	addwf	fsr2l,f,c
 20839  006B8C  5005               	movf	(nwkDataReqTxConf@frame+1)^0,w,c
 20840  006B8E  22DA               	addwfc	fsr2h,f,c
 20841  006B90  EE10 F012          	lfsr	1,18
 20842  006B94  5008               	movf	nwkDataReqTxConf@req^0,w,c
 20843  006B96  26E1               	addwf	fsr1l,f,c
 20844  006B98  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 20845  006B9A  22E2               	addwfc	fsr1h,f,c
 20846  006B9C  006F FF7F FFE7     	movff	indf2,indf1
 20847                           
 20848                           ;../nwk/nwk_src/nwkDataReq.c: 176:       req->state = NWK_DATA_REQ_STATE_CONFIRM;
 20849  006BA2  EE20 F004          	lfsr	2,4
 20850  006BA6  5008               	movf	nwkDataReqTxConf@req^0,w,c
 20851  006BA8  26D9               	addwf	fsr2l,f,c
 20852  006BAA  5009               	movf	(nwkDataReqTxConf@req+1)^0,w,c
 20853  006BAC  22DA               	addwfc	fsr2h,f,c
 20854  006BAE  0E02               	movlw	2
 20855  006BB0  6EDF               	movwf	indf2,c
 20856                           
 20857                           ;../nwk/nwk_src/nwkDataReq.c: 177:       break;
 20858  006BB2  D010               	goto	u10510
 20859  006BB4                     l11628:
 20860                           
 20861                           ;../nwk/nwk_src/nwkDataReq.c: 179:   }
 20862  006BB4  0060  F023  FFD9   	movff	nwkDataReqTxConf@req,fsr2l
 20863  006BBA  0060  F027  FFDA   	movff	nwkDataReqTxConf@req+1,fsr2h
 20864  006BC0  006F FF78  F008    	movff	postinc2,nwkDataReqTxConf@req
 20865  006BC6  006F FF74  F009    	movff	postdec2,nwkDataReqTxConf@req+1
 20866  006BCC                     l11630:
 20867  006BCC  5008               	movf	nwkDataReqTxConf@req^0,w,c
 20868  006BCE  1009               	iorwf	(nwkDataReqTxConf@req+1)^0,w,c
 20869  006BD0  A4D8               	btfss	status,2,c
 20870  006BD2  D7BC               	goto	l11622
 20871  006BD4                     u10510:
 20872                           
 20873                           ;../nwk/nwk_src/nwkDataReq.c: 181:   nwkFrameFree(frame);
 20874  006BD4  0060  F010  F002   	movff	nwkDataReqTxConf@frame,nwkFrameFree@frame
 20875  006BDA  0060  F014  F003   	movff	nwkDataReqTxConf@frame+1,nwkFrameFree@frame+1
 20876  006BE0  ECE1  F046         	call	_nwkFrameFree	;wreg free
 20877                           
 20878                           ; BSR set to: 1
 20879  006BE4  0012               	return		;funcret
 20880  006BE6                     __end_of_nwkDataReqTxConf:
 20881                           	opt callstack 0
 20882                           
 20883 ;; *************** function _PHY_DataReq *****************
 20884 ;; Defined at:
 20885 ;;		line 842 in file "../phy/sx1216/phy_src/phy.c"
 20886 ;; Parameters:    Size  Location     Type
 20887 ;;  data            2   16[COMRAM] PTR unsigned char 
 20888 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 20889 ;;  size            1   18[COMRAM] unsigned char 
 20890 ;; Auto vars:     Size  Location     Type
 20891 ;;		None
 20892 ;; Return value:  Size  Location     Type
 20893 ;;                  1    wreg      void 
 20894 ;; Registers used:
 20895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20896 ;; Tracked objects:
 20897 ;;		On entry : 3F/0
 20898 ;;		On exit  : 3F/0
 20899 ;;		Unchanged: 0/0
 20900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20901 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20904 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20905 ;;Total ram usage:        3 bytes
 20906 ;; Hardware stack levels used:    1
 20907 ;; Hardware stack levels required when called:   12
 20908 ;; This function calls:
 20909 ;;		_SPI1_ExchangeByte
 20910 ;;		_SPI1_WriteBlock
 20911 ;;		_SX1276Write
 20912 ;;		_explicitHeaderMode
 20913 ;;		_idle
 20914 ;; This function is called by:
 20915 ;;		_nwkTxTaskHandler
 20916 ;; This function uses a non-reentrant model
 20917 ;;
 20918                           
 20919                           	psect	text129
 20920  007C44                     __ptext129:
 20921                           	opt callstack 0
 20922  007C44                     _PHY_DataReq:
 20923                           	opt callstack 15
 20924                           
 20925                           ; BSR set to: 0
 20926                           ;../phy/sx1216/phy_src/phy.c: 843:     idle();
 20927                           
 20928                           ; BSR set to: 1
 20929                           ;incstack = 0
 20930  007C44  EC13  F048         	call	_idle	;wreg free
 20931                           
 20932                           ;../phy/sx1216/phy_src/phy.c: 844:     explicitHeaderMode();
 20933  007C48  EC5E  F047         	call	_explicitHeaderMode	;wreg free
 20934                           
 20935                           ;../phy/sx1216/phy_src/phy.c: 846:     SX1276Write(0x0E, 0x0);
 20936  007C4C  0E00               	movlw	0
 20937  007C4E  6E0F               	movwf	SX1276Write@data^0,c
 20938  007C50  0E0E               	movlw	14
 20939  007C52  EC94  F047         	call	_SX1276Write
 20940                           
 20941                           ;../phy/sx1216/phy_src/phy.c: 847:     SX1276Write(0x0D, 0x00);
 20942  007C56  0E00               	movlw	0
 20943  007C58  6E0F               	movwf	SX1276Write@data^0,c
 20944  007C5A  0E0D               	movlw	13
 20945  007C5C  EC94  F047         	call	_SX1276Write
 20946                           
 20947                           ;../phy/sx1216/phy_src/phy.c: 848:     SX1276Write(0x22, size);
 20948  007C60  0060  F04C  F00F   	movff	PHY_DataReq@size,SX1276Write@data
 20949  007C66  0E22               	movlw	34
 20950  007C68  EC94  F047         	call	_SX1276Write
 20951                           
 20952                           ; BSR set to: 61
 20953  007C6C  9CBC               	bcf	188,6,c	;volatile
 20954                           
 20955                           ; BSR set to: 61
 20956                           ;../phy/sx1216/phy_src/phy.c: 851:     SPI1_ExchangeByte(0x00 | 0x80);
 20957  007C6E  0E80               	movlw	128
 20958  007C70  EC08  F047         	call	_SPI1_ExchangeByte
 20959                           
 20960                           ; BSR set to: 61
 20961                           ;../phy/sx1216/phy_src/phy.c: 852:     SPI1_WriteBlock(data,size);
 20962  007C74  0060  F044  F003   	movff	PHY_DataReq@data,SPI1_WriteBlock@block
 20963  007C7A  0060  F048  F004   	movff	PHY_DataReq@data+1,SPI1_WriteBlock@block+1
 20964  007C80  0060  F04C  F005   	movff	PHY_DataReq@size,SPI1_WriteBlock@blockSize
 20965  007C86  6A06               	clrf	(SPI1_WriteBlock@blockSize+1)^0,c
 20966  007C88  EC08  F044         	call	_SPI1_WriteBlock	;wreg free
 20967                           
 20968                           ; BSR set to: 61
 20969  007C8C  8CBC               	bsf	188,6,c	;volatile
 20970                           
 20971                           ; BSR set to: 61
 20972                           ;../phy/sx1216/phy_src/phy.c: 854:     SX1276Write(0x01,
 20973  007C8E  0E83               	movlw	131
 20974  007C90  6E0F               	movwf	SX1276Write@data^0,c
 20975  007C92  0E01               	movlw	1
 20976  007C94  EC94  F047         	call	_SX1276Write
 20977                           
 20978                           ; BSR set to: 61
 20979                           ;../phy/sx1216/phy_src/phy.c: 856:     radio_state_var = START_TX;
 20980  007C98  0E06               	movlw	6
 20981  007C9A  0100               	movlb	0	; () banked
 20982  007C9C  6FCA               	movwf	_radio_state_var& (0+255),b
 20983                           
 20984                           ; BSR set to: 0
 20985  007C9E  0012               	return		;funcret
 20986  007CA0                     __end_of_PHY_DataReq:
 20987                           	opt callstack 0
 20988                           
 20989 ;; *************** function _idle *****************
 20990 ;; Defined at:
 20991 ;;		line 116 in file "../phy/sx1216/phy_src/phy.c"
 20992 ;; Parameters:    Size  Location     Type
 20993 ;;		None
 20994 ;; Auto vars:     Size  Location     Type
 20995 ;;		None
 20996 ;; Return value:  Size  Location     Type
 20997 ;;                  1    wreg      void 
 20998 ;; Registers used:
 20999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21000 ;; Tracked objects:
 21001 ;;		On entry : 2/3D
 21002 ;;		On exit  : 3F/3D
 21003 ;;		Unchanged: 0/0
 21004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21009 ;;Total ram usage:        0 bytes
 21010 ;; Hardware stack levels used:    1
 21011 ;; Hardware stack levels required when called:   11
 21012 ;; This function calls:
 21013 ;;		_SX1276Write
 21014 ;; This function is called by:
 21015 ;;		_start_radio_cad
 21016 ;;		_PHY_DataReq
 21017 ;; This function uses a non-reentrant model
 21018 ;;
 21019                           
 21020                           	psect	text130
 21021  009026                     __ptext130:
 21022                           	opt callstack 0
 21023  009026                     _idle:
 21024                           	opt callstack 14
 21025                           
 21026                           ;../phy/sx1216/phy_src/phy.c: 118:     SX1276Write(0x01,0x80 | 0x01);
 21027                           
 21028                           ; BSR set to: 0
 21029                           ;incstack = 0
 21030  009026  0E81               	movlw	129
 21031  009028  6E0F               	movwf	SX1276Write@data^0,c
 21032  00902A  0E01               	movlw	1
 21033  00902C  EC94  F047         	call	_SX1276Write
 21034                           
 21035                           ; BSR set to: 61
 21036  009030  0012               	return		;funcret
 21037  009032                     __end_of_idle:
 21038                           	opt callstack 0
 21039                           
 21040 ;; *************** function _nwkRxTaskHandler *****************
 21041 ;; Defined at:
 21042 ;;		line 483 in file "../nwk/nwk_src/nwkRx.c"
 21043 ;; Parameters:    Size  Location     Type
 21044 ;;		None
 21045 ;; Auto vars:     Size  Location     Type
 21046 ;;  frame           2   65[COMRAM] PTR struct NwkFrame_t
 21047 ;;		 -> nwkFrameFrames(685), NULL(0), 
 21048 ;; Return value:  Size  Location     Type
 21049 ;;                  1    wreg      void 
 21050 ;; Registers used:
 21051 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 21052 ;; Tracked objects:
 21053 ;;		On entry : 2/0
 21054 ;;		On exit  : 0/0
 21055 ;;		Unchanged: 0/0
 21056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21058 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21059 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21060 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21061 ;;Total ram usage:        4 bytes
 21062 ;; Hardware stack levels used:    1
 21063 ;; Hardware stack levels required when called:   13
 21064 ;; This function calls:
 21065 ;;		_nwkFrameFree
 21066 ;;		_nwkFrameNext
 21067 ;;		_nwkRouteFrame
 21068 ;;		_nwkRxHandleIndication
 21069 ;;		_nwkRxHandleReceivedFrame
 21070 ;; This function is called by:
 21071 ;;		_NWK_TaskHandler
 21072 ;; This function uses a non-reentrant model
 21073 ;;
 21074                           
 21075                           	psect	text131
 21076  006A92                     __ptext131:
 21077                           	opt callstack 0
 21078  006A92                     _nwkRxTaskHandler:
 21079                           	opt callstack 15
 21080                           
 21081                           ;../nwk/nwk_src/nwkRx.c: 485:   NwkFrame_t *frame = ((void*)0);
 21082                           
 21083                           ; BSR set to: 61
 21084                           ;incstack = 0
 21085  006A92  0E00               	movlw	0
 21086  006A94  6E42               	movwf	nwkRxTaskHandler@frame^0,c
 21087  006A96  0E00               	movlw	0
 21088  006A98  6E43               	movwf	(nwkRxTaskHandler@frame+1)^0,c
 21089                           
 21090                           ;../nwk/nwk_src/nwkRx.c: 487:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 21091  006A9A  D03E               	goto	l16208
 21092  006A9C                     l16196:
 21093                           
 21094                           ;../nwk/nwk_src/nwkRx.c: 492:       {;../nwk/nwk_src/nwkRx.c: 493:         nwkRxHandleRe
      +                          ceivedFrame(frame);
 21095  006A9C  0060  F108  F029   	movff	nwkRxTaskHandler@frame,nwkRxHandleReceivedFrame@frame
 21096  006AA2  0060  F10C  F02A   	movff	nwkRxTaskHandler@frame+1,nwkRxHandleReceivedFrame@frame+1
 21097  006AA8  EC19  F00B         	call	_nwkRxHandleReceivedFrame	;wreg free
 21098                           
 21099                           ;../nwk/nwk_src/nwkRx.c: 494:       } break;
 21100  006AAC  D035               	goto	l16208
 21101  006AAE                     l16198:
 21102                           
 21103                           ;../nwk/nwk_src/nwkRx.c: 504:       {;../nwk/nwk_src/nwkRx.c: 505:         nwkRxHandleIn
      +                          dication(frame);
 21104  006AAE  0060  F108  F03B   	movff	nwkRxTaskHandler@frame,nwkRxHandleIndication@frame
 21105  006AB4  0060  F10C  F03C   	movff	nwkRxTaskHandler@frame+1,nwkRxHandleIndication@frame+1
 21106  006ABA  ECB4  F031         	call	_nwkRxHandleIndication	;wreg free
 21107                           
 21108                           ;../nwk/nwk_src/nwkRx.c: 506:       } break;
 21109  006ABE  D02C               	goto	l16208
 21110  006AC0                     l16200:
 21111                           
 21112                           ;../nwk/nwk_src/nwkRx.c: 510:       {;../nwk/nwk_src/nwkRx.c: 511:         nwkRouteFrame
      +                          (frame);
 21113  006AC0  0060  F108  F033   	movff	nwkRxTaskHandler@frame,nwkRouteFrame@frame
 21114  006AC6  0060  F10C  F034   	movff	nwkRxTaskHandler@frame+1,nwkRouteFrame@frame+1
 21115  006ACC  EC49  F02F         	call	_nwkRouteFrame	;wreg free
 21116                           
 21117                           ;../nwk/nwk_src/nwkRx.c: 512:       } break;
 21118  006AD0  D023               	goto	l16208
 21119  006AD2                     l16202:
 21120                           
 21121                           ;../nwk/nwk_src/nwkRx.c: 516:       {;../nwk/nwk_src/nwkRx.c: 517:         nwkFrameFree(
      +                          frame);
 21122  006AD2  0060  F108  F002   	movff	nwkRxTaskHandler@frame,nwkFrameFree@frame
 21123  006AD8  0060  F10C  F003   	movff	nwkRxTaskHandler@frame+1,nwkFrameFree@frame+1
 21124  006ADE  ECE1  F046         	call	_nwkFrameFree	;wreg free
 21125                           
 21126                           ;../nwk/nwk_src/nwkRx.c: 518:       } break;
 21127  006AE2  D01A               	goto	l16208
 21128  006AE4                     l16206:
 21129  006AE4  0060  F10B  FFD9   	movff	nwkRxTaskHandler@frame,fsr2l
 21130  006AEA  0060  F10F  FFDA   	movff	nwkRxTaskHandler@frame+1,fsr2h
 21131  006AF0  50DF               	movf	indf2,w,c
 21132  006AF2  6E40               	movwf	??_nwkRxTaskHandler^0,c
 21133  006AF4  6A41               	clrf	(??_nwkRxTaskHandler+1)^0,c
 21134                           
 21135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21136                           ; Switch size 1, requested type "simple"
 21137                           ; Number of cases is 1, Range of values is 0 to 0
 21138                           ; switch strategies available:
 21139                           ; Name         Instructions Cycles
 21140                           ; simple_byte            4     3 (average)
 21141                           ;	Chosen strategy is simple_byte
 21142  006AF6  5041               	movf	(??_nwkRxTaskHandler+1)^0,w,c
 21143  006AF8  0A00               	xorlw	0	; case 0
 21144  006AFA  A4D8               	btfss	status,2,c
 21145  006AFC  D00D               	goto	l16208
 21146                           
 21147                           ; Switch size 1, requested type "simple"
 21148                           ; Number of cases is 4, Range of values is 32 to 36
 21149                           ; switch strategies available:
 21150                           ; Name         Instructions Cycles
 21151                           ; simple_byte           13     7 (average)
 21152                           ;	Chosen strategy is simple_byte
 21153  006AFE  5040               	movf	??_nwkRxTaskHandler^0,w,c
 21154  006B00  0A20               	xorlw	32	; case 32
 21155  006B02  B4D8               	btfsc	status,2,c
 21156  006B04  D7CB               	goto	l16196
 21157  006B06  0A02               	xorlw	2	; case 34
 21158  006B08  B4D8               	btfsc	status,2,c
 21159  006B0A  D7D1               	goto	l16198
 21160  006B0C  0A01               	xorlw	1	; case 35
 21161  006B0E  B4D8               	btfsc	status,2,c
 21162  006B10  D7D7               	goto	l16200
 21163  006B12  0A07               	xorlw	7	; case 36
 21164  006B14  B4D8               	btfsc	status,2,c
 21165  006B16  D7DD               	goto	l16202
 21166  006B18                     l16208:
 21167                           
 21168                           ;../nwk/nwk_src/nwkRx.c: 487:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 21169  006B18  0060  F108  F002   	movff	nwkRxTaskHandler@frame,nwkFrameNext@frame
 21170  006B1E  0060  F10C  F003   	movff	nwkRxTaskHandler@frame+1,nwkFrameNext@frame+1
 21171  006B24  ECE5  F038         	call	_nwkFrameNext	;wreg free
 21172  006B28  0060  F008  F042   	movff	?_nwkFrameNext,nwkRxTaskHandler@frame
 21173  006B2E  0060  F00C  F043   	movff	?_nwkFrameNext+1,nwkRxTaskHandler@frame+1
 21174  006B34  5042               	movf	nwkRxTaskHandler@frame^0,w,c
 21175  006B36  1043               	iorwf	(nwkRxTaskHandler@frame+1)^0,w,c
 21176  006B38  B4D8               	btfsc	status,2,c
 21177  006B3A  0012               	return	
 21178  006B3C  D7D3               	goto	l16206
 21179  006B3E                     __end_of_nwkRxTaskHandler:
 21180                           	opt callstack 0
 21181                           
 21182 ;; *************** function _nwkRxHandleReceivedFrame *****************
 21183 ;; Defined at:
 21184 ;;		line 292 in file "../nwk/nwk_src/nwkRx.c"
 21185 ;; Parameters:    Size  Location     Type
 21186 ;;  frame           2   40[COMRAM] PTR struct NwkFrame_t
 21187 ;;		 -> nwkFrameFrames(685), NULL(0), 
 21188 ;; Auto vars:     Size  Location     Type
 21189 ;;  mcHeader        2   46[COMRAM] PTR __pack struct NwkFra
 21190 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 21191 ;;  member          1   45[COMRAM] _Bool 
 21192 ;;  broadcast       1   44[COMRAM] _Bool 
 21193 ;;  header          2   48[COMRAM] PTR __pack struct NwkFra
 21194 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 21195 ;; Return value:  Size  Location     Type
 21196 ;;                  1    wreg      void 
 21197 ;; Registers used:
 21198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21199 ;; Tracked objects:
 21200 ;;		On entry : 0/0
 21201 ;;		On exit  : 0/0
 21202 ;;		Unchanged: 0/0
 21203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21205 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21207 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21208 ;;Total ram usage:       10 bytes
 21209 ;; Hardware stack levels used:    1
 21210 ;; Hardware stack levels required when called:   10
 21211 ;; This function calls:
 21212 ;;		_NWK_GroupIsMember
 21213 ;;		_nwkRouteFrameReceived
 21214 ;;		_nwkRxRejectDuplicate
 21215 ;;		_nwkTxBroadcastFrame
 21216 ;; This function is called by:
 21217 ;;		_nwkRxTaskHandler
 21218 ;; This function uses a non-reentrant model
 21219 ;;
 21220                           
 21221                           	psect	text132
 21222  001632                     __ptext132:
 21223                           	opt callstack 0
 21224  001632                     _nwkRxHandleReceivedFrame:
 21225                           	opt callstack 17
 21226                           
 21227                           ;../nwk/nwk_src/nwkRx.c: 292: static void nwkRxHandleReceivedFrame(NwkFrame_t *frame);..
      +                          /nwk/nwk_src/nwkRx.c: 293: {;../nwk/nwk_src/nwkRx.c: 294:   NwkFrameHeader_t *header = &
      +                          frame->header;
 21228                           
 21229                           ;incstack = 0
 21230  001632  0E02               	movlw	2
 21231  001634  2429               	addwf	nwkRxHandleReceivedFrame@frame^0,w,c
 21232  001636  6E31               	movwf	nwkRxHandleReceivedFrame@header^0,c
 21233  001638  0E00               	movlw	0
 21234  00163A  202A               	addwfc	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 21235  00163C  6E32               	movwf	(nwkRxHandleReceivedFrame@header+1)^0,c
 21236                           
 21237                           ;../nwk/nwk_src/nwkRx.c: 296:   frame->state = NWK_RX_STATE_FINISH;
 21238  00163E  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 21239  001644  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 21240  00164A  0E24               	movlw	36
 21241  00164C  6EDF               	movwf	indf2,c
 21242                           
 21243                           ;../nwk/nwk_src/nwkRx.c: 299:   if (header->nwkFcf.security)
 21244  00164E  EE20 F009          	lfsr	2,9
 21245  001652  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21246  001654  26D9               	addwf	fsr2l,f,c
 21247  001656  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21248  001658  22DA               	addwfc	fsr2h,f,c
 21249  00165A  B2DF               	btfsc	indf2,1,c
 21250  00165C  0012               	return	
 21251                           
 21252                           ;../nwk/nwk_src/nwkRx.c: 304:   if (header->nwkFcf.multicast && header->nwkFcf.ackReques
      +                          t)
 21253  00165E  EE20 F009          	lfsr	2,9
 21254  001662  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21255  001664  26D9               	addwf	fsr2l,f,c
 21256  001666  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21257  001668  22DA               	addwfc	fsr2h,f,c
 21258  00166A  A6DF               	btfss	indf2,3,c
 21259  00166C  D008               	goto	l15572
 21260  00166E  EE20 F009          	lfsr	2,9
 21261  001672  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21262  001674  26D9               	addwf	fsr2l,f,c
 21263  001676  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21264  001678  22DA               	addwfc	fsr2h,f,c
 21265  00167A  B0DF               	btfsc	indf2,0,c
 21266  00167C  0012               	return	
 21267  00167E                     l15572:
 21268                           
 21269                           ;../nwk/nwk_src/nwkRx.c: 311:   if (0xffff == header->macDstPanId)
 21270  00167E  EE20 F003          	lfsr	2,3
 21271  001682  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21272  001684  26D9               	addwf	fsr2l,f,c
 21273  001686  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21274  001688  22DA               	addwfc	fsr2h,f,c
 21275  00168A  28DE               	incf	postinc2,w,c
 21276  00168C  E125               	bnz	l15582
 21277  00168E  28DE               	incf	postinc2,w,c
 21278  001690  A4D8               	btfss	status,2,c
 21279  001692  D022               	goto	l15582
 21280                           
 21281                           ;../nwk/nwk_src/nwkRx.c: 312:   {;../nwk/nwk_src/nwkRx.c: 313:     if (nwkIb.addr == hea
      +                          der->nwkDstAddr || 0xffff == header->nwkDstAddr)
 21282  001694  EE20 F00D          	lfsr	2,13
 21283  001698  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21284  00169A  26D9               	addwf	fsr2l,f,c
 21285  00169C  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21286  00169E  22DA               	addwfc	fsr2h,f,c
 21287  0016A0  0101               	movlb	1	; () banked
 21288  0016A2  5100               	movf	_nwkIb& (0+255),w,b
 21289  0016A4  18DE               	xorwf	postinc2,w,c
 21290  0016A6  E104               	bnz	u15570
 21291  0016A8  5101               	movf	(_nwkIb+1)& (0+255),w,b
 21292  0016AA  18DE               	xorwf	postinc2,w,c
 21293  0016AC  B4D8               	btfsc	status,2,c
 21294  0016AE  D00B               	goto	u15580
 21295  0016B0                     u15570:
 21296                           
 21297                           ; BSR set to: 1
 21298  0016B0  EE20 F00D          	lfsr	2,13
 21299  0016B4  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21300  0016B6  26D9               	addwf	fsr2l,f,c
 21301  0016B8  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21302  0016BA  22DA               	addwfc	fsr2h,f,c
 21303  0016BC  28DE               	incf	postinc2,w,c
 21304  0016BE  E102               	bnz	u15581
 21305  0016C0  28DE               	incf	postinc2,w,c
 21306  0016C2  A4D8               	btfss	status,2,c
 21307  0016C4                     u15581:
 21308  0016C4  0012               	return	
 21309  0016C6                     u15580:
 21310                           
 21311                           ; BSR set to: 1
 21312                           ;../nwk/nwk_src/nwkRx.c: 314:     {;../nwk/nwk_src/nwkRx.c: 320:         frame->state = 
      +                          NWK_RX_STATE_INDICATE;
 21313  0016C6  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 21314  0016CC  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 21315  0016D2  0E22               	movlw	34
 21316  0016D4  6EDF               	movwf	indf2,c
 21317  0016D6  0012               	return	
 21318  0016D8                     l15582:
 21319                           
 21320                           ;../nwk/nwk_src/nwkRx.c: 330:   if (0xffff == header->nwkDstAddr && header->nwkFcf.ackRe
      +                          quest)
 21321  0016D8  EE20 F00D          	lfsr	2,13
 21322  0016DC  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21323  0016DE  26D9               	addwf	fsr2l,f,c
 21324  0016E0  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21325  0016E2  22DA               	addwfc	fsr2h,f,c
 21326  0016E4  28DE               	incf	postinc2,w,c
 21327  0016E6  E10B               	bnz	l15588
 21328  0016E8  28DE               	incf	postinc2,w,c
 21329  0016EA  A4D8               	btfss	status,2,c
 21330  0016EC  D008               	goto	l15588
 21331  0016EE  EE20 F009          	lfsr	2,9
 21332  0016F2  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21333  0016F4  26D9               	addwf	fsr2l,f,c
 21334  0016F6  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21335  0016F8  22DA               	addwfc	fsr2h,f,c
 21336  0016FA  B0DF               	btfsc	indf2,0,c
 21337  0016FC  0012               	return	
 21338  0016FE                     l15588:
 21339                           
 21340                           ;../nwk/nwk_src/nwkRx.c: 333:   if (nwkIb.addr == header->nwkSrcAddr)
 21341  0016FE  EE20 F00B          	lfsr	2,11
 21342  001702  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21343  001704  26D9               	addwf	fsr2l,f,c
 21344  001706  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21345  001708  22DA               	addwfc	fsr2h,f,c
 21346  00170A  0101               	movlb	1	; () banked
 21347  00170C  5100               	movf	_nwkIb& (0+255),w,b
 21348  00170E  18DE               	xorwf	postinc2,w,c
 21349  001710  E104               	bnz	l15592
 21350  001712  5101               	movf	(_nwkIb+1)& (0+255),w,b
 21351  001714  18DE               	xorwf	postinc2,w,c
 21352  001716  B4D8               	btfsc	status,2,c
 21353  001718  0012               	return	
 21354  00171A                     l15592:
 21355                           
 21356                           ; BSR set to: 1
 21357                           ;../nwk/nwk_src/nwkRx.c: 337:   nwkRouteFrameReceived(frame);
 21358  00171A  0060  F0A4  F00B   	movff	nwkRxHandleReceivedFrame@frame,nwkRouteFrameReceived@frame
 21359  001720  0060  F0A8  F00C   	movff	nwkRxHandleReceivedFrame@frame+1,nwkRouteFrameReceived@frame+1
 21360  001726  EC4A  F01B         	call	_nwkRouteFrameReceived	;wreg free
 21361                           
 21362                           ;../nwk/nwk_src/nwkRx.c: 340:   if (nwkRxRejectDuplicate(header))
 21363  00172A  0060  F0C4  F012   	movff	nwkRxHandleReceivedFrame@header,nwkRxRejectDuplicate@header
 21364  001730  0060  F0C8  F013   	movff	nwkRxHandleReceivedFrame@header+1,nwkRxRejectDuplicate@header+1
 21365  001736  EC33  F015         	call	_nwkRxRejectDuplicate	;wreg free
 21366  00173A  0900               	iorlw	0
 21367  00173C  A4D8               	btfss	status,2,c
 21368  00173E  0012               	return	
 21369                           
 21370                           ;../nwk/nwk_src/nwkRx.c: 344:   if (header->nwkFcf.multicast)
 21371  001740  EE20 F009          	lfsr	2,9
 21372  001744  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21373  001746  26D9               	addwf	fsr2l,f,c
 21374  001748  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21375  00174A  22DA               	addwfc	fsr2h,f,c
 21376  00174C  A6DF               	btfss	indf2,3,c
 21377  00174E  D0C7               	goto	l15630
 21378                           
 21379                           ;../nwk/nwk_src/nwkRx.c: 345:   {;../nwk/nwk_src/nwkRx.c: 346:     NwkFrameMulticastHead
      +                          er_t *mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
 21380  001750  EE20 F081          	lfsr	2,129
 21381  001754  5029               	movf	nwkRxHandleReceivedFrame@frame^0,w,c
 21382  001756  26D9               	addwf	fsr2l,f,c
 21383  001758  502A               	movf	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 21384  00175A  22DA               	addwfc	fsr2h,f,c
 21385  00175C  006F FF78  F02F    	movff	postinc2,nwkRxHandleReceivedFrame@mcHeader
 21386  001762  006F FF74  F030    	movff	postdec2,nwkRxHandleReceivedFrame@mcHeader+1
 21387                           
 21388                           ;../nwk/nwk_src/nwkRx.c: 347:     _Bool member = NWK_GroupIsMember(header->nwkDstAddr);
 21389  001768  EE20 F00D          	lfsr	2,13
 21390  00176C  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21391  00176E  26D9               	addwf	fsr2l,f,c
 21392  001770  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21393  001772  22DA               	addwfc	fsr2h,f,c
 21394  001774  006F FF78  F002    	movff	postinc2,NWK_GroupIsMember@group
 21395  00177A  006F FF74  F003    	movff	postdec2,NWK_GroupIsMember@group+1
 21396  001780  ECA6  F044         	call	_NWK_GroupIsMember	;wreg free
 21397  001784  6E2E               	movwf	nwkRxHandleReceivedFrame@member^0,c
 21398                           
 21399                           ;../nwk/nwk_src/nwkRx.c: 348:     _Bool broadcast = 0;
 21400  001786  0E00               	movlw	0
 21401  001788  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 21402                           
 21403                           ;../nwk/nwk_src/nwkRx.c: 350:     if (0xffff == header->macDstAddr)
 21404  00178A  EE20 F005          	lfsr	2,5
 21405  00178E  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21406  001790  26D9               	addwf	fsr2l,f,c
 21407  001792  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21408  001794  22DA               	addwfc	fsr2h,f,c
 21409  001796  28DE               	incf	postinc2,w,c
 21410  001798  E16C               	bnz	l15612
 21411  00179A  28DE               	incf	postinc2,w,c
 21412  00179C  A4D8               	btfss	status,2,c
 21413  00179E  D069               	goto	l15612
 21414                           
 21415                           ;../nwk/nwk_src/nwkRx.c: 351:     {;../nwk/nwk_src/nwkRx.c: 352:       if (member)
 21416  0017A0  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 21417  0017A2  B4D8               	btfsc	status,2,c
 21418  0017A4  D031               	goto	l15610
 21419                           
 21420                           ;../nwk/nwk_src/nwkRx.c: 353:       {;../nwk/nwk_src/nwkRx.c: 354:         broadcast = m
      +                          cHeader->memberRadius > 0;
 21421  0017A6  EE20 F001          	lfsr	2,1
 21422  0017AA  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 21423  0017AC  26D9               	addwf	fsr2l,f,c
 21424  0017AE  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 21425  0017B0  22DA               	addwfc	fsr2h,f,c
 21426  0017B2  50DF               	movf	indf2,w,c
 21427  0017B4  0B0F               	andlw	15
 21428  0017B6  0900               	iorlw	0
 21429  0017B8  B4D8               	btfsc	status,2,c
 21430  0017BA  D002               	goto	u15660
 21431  0017BC  0E01               	movlw	1
 21432  0017BE  D001               	goto	u15670
 21433  0017C0                     u15660:
 21434  0017C0  0E00               	movlw	0
 21435  0017C2                     u15670:
 21436  0017C2  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 21437                           
 21438                           ;../nwk/nwk_src/nwkRx.c: 355:         mcHeader->memberRadius--;
 21439  0017C4  0E01               	movlw	1
 21440  0017C6  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 21441  0017C8  EE20 F001          	lfsr	2,1
 21442  0017CC  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 21443  0017CE  26D9               	addwf	fsr2l,f,c
 21444  0017D0  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 21445  0017D2  22DA               	addwfc	fsr2h,f,c
 21446  0017D4  50DF               	movf	indf2,w,c
 21447  0017D6  0B0F               	andlw	15
 21448  0017D8  6E2C               	movwf	(??_nwkRxHandleReceivedFrame+1)^0,c
 21449  0017DA  502B               	movf	??_nwkRxHandleReceivedFrame^0,w,c
 21450  0017DC  5E2C               	subwf	(??_nwkRxHandleReceivedFrame+1)^0,f,c
 21451  0017DE  50DF               	movf	indf2,w,c
 21452  0017E0  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 21453  0017E2  0BF0               	andlw	-16
 21454  0017E4  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 21455  0017E6  6EDF               	movwf	indf2,c
 21456                           
 21457                           ;../nwk/nwk_src/nwkRx.c: 356:         mcHeader->nonMemberRadius = mcHeader->maxNonMember
      +                          Radius;
 21458  0017E8  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 21459  0017EE  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 21460  0017F4  38DF               	swapf	indf2,w,c
 21461  0017F6  0B0F               	andlw	15
 21462  0017F8  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 21463  0017FA  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 21464  001800  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 21465  001806  D030               	goto	L18
 21466  001808                     l15610:
 21467                           
 21468                           ;../nwk/nwk_src/nwkRx.c: 359:       {;../nwk/nwk_src/nwkRx.c: 360:         broadcast = m
      +                          cHeader->nonMemberRadius > 0;
 21469  001808  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 21470  00180E  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 21471  001814  50DF               	movf	indf2,w,c
 21472  001816  0B0F               	andlw	15
 21473  001818  0900               	iorlw	0
 21474  00181A  B4D8               	btfsc	status,2,c
 21475  00181C  D002               	goto	u15680
 21476  00181E  0E01               	movlw	1
 21477  001820  D001               	goto	u15690
 21478  001822                     u15680:
 21479  001822  0E00               	movlw	0
 21480  001824                     u15690:
 21481  001824  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 21482                           
 21483                           ;../nwk/nwk_src/nwkRx.c: 361:         mcHeader->nonMemberRadius--;
 21484  001826  0E01               	movlw	1
 21485  001828  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 21486  00182A  0060  F0BF  FFD9   	movff	nwkRxHandleReceivedFrame@mcHeader,fsr2l
 21487  001830  0060  F0C3  FFDA   	movff	nwkRxHandleReceivedFrame@mcHeader+1,fsr2h
 21488  001836  50DF               	movf	indf2,w,c
 21489  001838  0B0F               	andlw	15
 21490  00183A  6E2C               	movwf	(??_nwkRxHandleReceivedFrame+1)^0,c
 21491  00183C  502B               	movf	??_nwkRxHandleReceivedFrame^0,w,c
 21492  00183E  5E2C               	subwf	(??_nwkRxHandleReceivedFrame+1)^0,f,c
 21493  001840  50DF               	movf	indf2,w,c
 21494  001842  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 21495  001844  0BF0               	andlw	-16
 21496  001846  182C               	xorwf	(??_nwkRxHandleReceivedFrame+1)^0,w,c
 21497  001848  6EDF               	movwf	indf2,c
 21498                           
 21499                           ;../nwk/nwk_src/nwkRx.c: 362:         mcHeader->memberRadius = mcHeader->maxMemberRadius
      +                          ;
 21500  00184A  EE20 F001          	lfsr	2,1
 21501  00184E  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 21502  001850  26D9               	addwf	fsr2l,f,c
 21503  001852  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 21504  001854  22DA               	addwfc	fsr2h,f,c
 21505  001856  38DF               	swapf	indf2,w,c
 21506  001858  0B0F               	andlw	15
 21507  00185A  6E2B               	movwf	??_nwkRxHandleReceivedFrame^0,c
 21508  00185C  EE20 F001          	lfsr	2,1
 21509  001860  502F               	movf	nwkRxHandleReceivedFrame@mcHeader^0,w,c
 21510  001862  26D9               	addwf	fsr2l,f,c
 21511  001864  5030               	movf	(nwkRxHandleReceivedFrame@mcHeader+1)^0,w,c
 21512  001866  22DA               	addwfc	fsr2h,f,c
 21513  001868                     L18:
 21514  001868  50DF               	movf	indf2,w,c
 21515  00186A  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
 21516  00186C  0BF0               	andlw	-16
 21517  00186E  182B               	xorwf	??_nwkRxHandleReceivedFrame^0,w,c
 21518  001870  D014               	goto	L17
 21519  001872                     l15612:
 21520                           
 21521                           ;../nwk/nwk_src/nwkRx.c: 366:     {;../nwk/nwk_src/nwkRx.c: 367:       if (member)
 21522  001872  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 21523  001874  B4D8               	btfsc	status,2,c
 21524  001876  D00A               	goto	l15618
 21525                           
 21526                           ;../nwk/nwk_src/nwkRx.c: 368:       {;../nwk/nwk_src/nwkRx.c: 369:         broadcast = 1
      +                          ;
 21527  001878  0E01               	movlw	1
 21528  00187A  6E2D               	movwf	nwkRxHandleReceivedFrame@broadcast^0,c
 21529                           
 21530                           ;../nwk/nwk_src/nwkRx.c: 370:         header->nwkFcf.linkLocal = 1;
 21531  00187C  EE20 F009          	lfsr	2,9
 21532  001880  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21533  001882  26D9               	addwf	fsr2l,f,c
 21534  001884  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21535  001886  22DA               	addwfc	fsr2h,f,c
 21536  001888  84DF               	bsf	indf2,2,c
 21537                           
 21538                           ;../nwk/nwk_src/nwkRx.c: 371:       }
 21539  00188A  D008               	goto	l15620
 21540  00188C                     l15618:
 21541                           
 21542                           ;../nwk/nwk_src/nwkRx.c: 374:       {;../nwk/nwk_src/nwkRx.c: 375:         frame->state 
      +                          = NWK_RX_STATE_ROUTE;
 21543  00188C  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 21544  001892  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 21545  001898  0E23               	movlw	35
 21546  00189A                     L17:
 21547  00189A  6EDF               	movwf	indf2,c
 21548  00189C                     l15620:
 21549                           
 21550                           ;../nwk/nwk_src/nwkRx.c: 380:     if (broadcast)
 21551  00189C  502D               	movf	nwkRxHandleReceivedFrame@broadcast^0,w,c
 21552  00189E  B4D8               	btfsc	status,2,c
 21553  0018A0  D008               	goto	l15624
 21554                           
 21555                           ;../nwk/nwk_src/nwkRx.c: 381:       nwkTxBroadcastFrame(frame);
 21556  0018A2  0060  F0A4  F024   	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
 21557  0018A8  0060  F0A8  F025   	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
 21558  0018AE  ECBA  F022         	call	_nwkTxBroadcastFrame	;wreg free
 21559  0018B2                     l15624:
 21560                           
 21561                           ;../nwk/nwk_src/nwkRx.c: 383:     if (member)
 21562  0018B2  502E               	movf	nwkRxHandleReceivedFrame@member^0,w,c
 21563  0018B4  B4D8               	btfsc	status,2,c
 21564  0018B6  0012               	return	
 21565                           
 21566                           ;../nwk/nwk_src/nwkRx.c: 384:     {;../nwk/nwk_src/nwkRx.c: 385:       frame->payload +=
      +                           sizeof(NwkFrameMulticastHeader_t);
 21567  0018B8  EE20 F081          	lfsr	2,129
 21568  0018BC  5029               	movf	nwkRxHandleReceivedFrame@frame^0,w,c
 21569  0018BE  26D9               	addwf	fsr2l,f,c
 21570  0018C0  502A               	movf	(nwkRxHandleReceivedFrame@frame+1)^0,w,c
 21571  0018C2  22DA               	addwfc	fsr2h,f,c
 21572  0018C4  0E02               	movlw	2
 21573  0018C6  26DE               	addwf	postinc2,f,c
 21574  0018C8  0E00               	movlw	0
 21575  0018CA  22DD               	addwfc	postdec2,f,c
 21576                           
 21577                           ;../nwk/nwk_src/nwkRx.c: 392:         frame->state = NWK_RX_STATE_INDICATE;
 21578  0018CC  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 21579  0018D2  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 21580  0018D8  0E22               	movlw	34
 21581  0018DA  6EDF               	movwf	indf2,c
 21582  0018DC  0012               	return	
 21583  0018DE                     l15630:
 21584                           
 21585                           ;../nwk/nwk_src/nwkRx.c: 397:   {;../nwk/nwk_src/nwkRx.c: 398:     if (0xffff == header-
      +                          >macDstAddr && nwkIb.addr != header->nwkDstAddr &&
 21586  0018DE  EE20 F005          	lfsr	2,5
 21587  0018E2  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21588  0018E4  26D9               	addwf	fsr2l,f,c
 21589  0018E6  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21590  0018E8  22DA               	addwfc	fsr2h,f,c
 21591  0018EA  28DE               	incf	postinc2,w,c
 21592  0018EC  E121               	bnz	l15638
 21593  0018EE  28DE               	incf	postinc2,w,c
 21594  0018F0  A4D8               	btfss	status,2,c
 21595  0018F2  D01E               	goto	l15638
 21596  0018F4  EE20 F00D          	lfsr	2,13
 21597  0018F8  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21598  0018FA  26D9               	addwf	fsr2l,f,c
 21599  0018FC  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21600  0018FE  22DA               	addwfc	fsr2h,f,c
 21601  001900  0101               	movlb	1	; () banked
 21602  001902  5100               	movf	_nwkIb& (0+255),w,b
 21603  001904  18DE               	xorwf	postinc2,w,c
 21604  001906  E104               	bnz	u15740
 21605  001908  5101               	movf	(_nwkIb+1)& (0+255),w,b
 21606  00190A  18DE               	xorwf	postinc2,w,c
 21607  00190C  B4D8               	btfsc	status,2,c
 21608  00190E  D010               	goto	l15638
 21609  001910                     u15740:
 21610                           
 21611                           ; BSR set to: 1
 21612  001910  EE20 F009          	lfsr	2,9
 21613  001914  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21614  001916  26D9               	addwf	fsr2l,f,c
 21615  001918  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21616  00191A  22DA               	addwfc	fsr2h,f,c
 21617  00191C  B4DF               	btfsc	indf2,2,c
 21618  00191E  D008               	goto	l15638
 21619                           
 21620                           ; BSR set to: 1
 21621                           ;../nwk/nwk_src/nwkRx.c: 400:       nwkTxBroadcastFrame(frame);
 21622  001920  0060  F0A4  F024   	movff	nwkRxHandleReceivedFrame@frame,nwkTxBroadcastFrame@frame
 21623  001926  0060  F0A8  F025   	movff	nwkRxHandleReceivedFrame@frame+1,nwkTxBroadcastFrame@frame+1
 21624  00192C  ECBA  F022         	call	_nwkTxBroadcastFrame	;wreg free
 21625  001930                     l15638:
 21626                           
 21627                           ;../nwk/nwk_src/nwkRx.c: 402:     if (nwkIb.addr == header->nwkDstAddr || 0xffff == head
      +                          er->nwkDstAddr)
 21628  001930  EE20 F00D          	lfsr	2,13
 21629  001934  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21630  001936  26D9               	addwf	fsr2l,f,c
 21631  001938  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21632  00193A  22DA               	addwfc	fsr2h,f,c
 21633  00193C  0101               	movlb	1	; () banked
 21634  00193E  5100               	movf	_nwkIb& (0+255),w,b
 21635  001940  18DE               	xorwf	postinc2,w,c
 21636  001942  E104               	bnz	u15760
 21637  001944  5101               	movf	(_nwkIb+1)& (0+255),w,b
 21638  001946  18DE               	xorwf	postinc2,w,c
 21639  001948  B4D8               	btfsc	status,2,c
 21640  00194A  D00B               	goto	u15770
 21641  00194C                     u15760:
 21642                           
 21643                           ; BSR set to: 1
 21644  00194C  EE20 F00D          	lfsr	2,13
 21645  001950  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21646  001952  26D9               	addwf	fsr2l,f,c
 21647  001954  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21648  001956  22DA               	addwfc	fsr2h,f,c
 21649  001958  28DE               	incf	postinc2,w,c
 21650  00195A  E10C               	bnz	l15644
 21651  00195C  28DE               	incf	postinc2,w,c
 21652  00195E  A4D8               	btfss	status,2,c
 21653  001960  D009               	goto	l15644
 21654  001962                     u15770:
 21655                           
 21656                           ; BSR set to: 1
 21657                           ;../nwk/nwk_src/nwkRx.c: 403:     {;../nwk/nwk_src/nwkRx.c: 409:         frame->state = 
      +                          NWK_RX_STATE_INDICATE;
 21658  001962  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 21659  001968  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 21660  00196E  0E22               	movlw	34
 21661  001970  6EDF               	movwf	indf2,c
 21662                           
 21663                           ;../nwk/nwk_src/nwkRx.c: 410:     }
 21664  001972  0012               	return	
 21665  001974                     l15644:
 21666                           
 21667                           ; BSR set to: 1
 21668  001974  EE20 F005          	lfsr	2,5
 21669  001978  5031               	movf	nwkRxHandleReceivedFrame@header^0,w,c
 21670  00197A  26D9               	addwf	fsr2l,f,c
 21671  00197C  5032               	movf	(nwkRxHandleReceivedFrame@header+1)^0,w,c
 21672  00197E  22DA               	addwfc	fsr2h,f,c
 21673  001980  5100               	movf	_nwkIb& (0+255),w,b
 21674  001982  18DE               	xorwf	postinc2,w,c
 21675  001984  E10C               	bnz	l2179
 21676  001986  5101               	movf	(_nwkIb+1)& (0+255),w,b
 21677  001988  18DE               	xorwf	postinc2,w,c
 21678  00198A  A4D8               	btfss	status,2,c
 21679  00198C  0012               	return	
 21680                           
 21681                           ; BSR set to: 1
 21682                           ;../nwk/nwk_src/nwkRx.c: 414:     {;../nwk/nwk_src/nwkRx.c: 415:       frame->state = NW
      +                          K_RX_STATE_ROUTE;
 21683  00198E  0060  F0A7  FFD9   	movff	nwkRxHandleReceivedFrame@frame,fsr2l
 21684  001994  0060  F0AB  FFDA   	movff	nwkRxHandleReceivedFrame@frame+1,fsr2h
 21685  00199A  0E23               	movlw	35
 21686  00199C  6EDF               	movwf	indf2,c
 21687  00199E                     l2179:
 21688  00199E  0012               	return		;funcret
 21689  0019A0                     __end_of_nwkRxHandleReceivedFrame:
 21690                           	opt callstack 0
 21691                           
 21692 ;; *************** function _nwkTxBroadcastFrame *****************
 21693 ;; Defined at:
 21694 ;;		line 159 in file "../nwk/nwk_src/nwkTx.c"
 21695 ;; Parameters:    Size  Location     Type
 21696 ;;  frame           2   35[COMRAM] PTR struct NwkFrame_t
 21697 ;;		 -> nwkFrameFrames(685), NULL(0), 
 21698 ;; Auto vars:     Size  Location     Type
 21699 ;;  newFrame        2   38[COMRAM] PTR struct NwkFrame_t
 21700 ;;		 -> nwkFrameFrames(685), NULL(0), 
 21701 ;; Return value:  Size  Location     Type
 21702 ;;                  1    wreg      void 
 21703 ;; Registers used:
 21704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21705 ;; Tracked objects:
 21706 ;;		On entry : 0/1
 21707 ;;		On exit  : 0/0
 21708 ;;		Unchanged: 0/0
 21709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21711 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21712 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21713 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21714 ;;Total ram usage:        5 bytes
 21715 ;; Hardware stack levels used:    1
 21716 ;; Hardware stack levels required when called:    9
 21717 ;; This function calls:
 21718 ;;		_memcpy
 21719 ;;		_nwkFrameAlloc
 21720 ;;		_rand
 21721 ;; This function is called by:
 21722 ;;		_nwkRxHandleReceivedFrame
 21723 ;; This function uses a non-reentrant model
 21724 ;;
 21725                           
 21726                           	psect	text133
 21727  004574                     __ptext133:
 21728                           	opt callstack 0
 21729  004574                     _nwkTxBroadcastFrame:
 21730                           	opt callstack 17
 21731                           
 21732                           ;../nwk/nwk_src/nwkTx.c: 159: void nwkTxBroadcastFrame(NwkFrame_t *frame);../nwk/nwk_src
      +                          /nwkTx.c: 160: {;../nwk/nwk_src/nwkTx.c: 161:   NwkFrame_t *newFrame;;../nwk/nwk_src/nwk
      +                          Tx.c: 163:   if (((void*)0) == (newFrame = nwkFrameAlloc()))
 21733                           
 21734                           ;incstack = 0
 21735  004574  ECE8  F033         	call	_nwkFrameAlloc	;wreg free
 21736  004578  0060  F038  F027   	movff	?_nwkFrameAlloc,nwkTxBroadcastFrame@newFrame
 21737  00457E  0060  F03C  F028   	movff	?_nwkFrameAlloc+1,nwkTxBroadcastFrame@newFrame+1
 21738  004584  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21739  004586  1028               	iorwf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21740  004588  B4D8               	btfsc	status,2,c
 21741  00458A  0012               	return	
 21742                           
 21743                           ;../nwk/nwk_src/nwkTx.c: 166:   newFrame->state = NWK_TX_STATE_DELAY;
 21744  00458C  0060  F09F  FFD9   	movff	nwkTxBroadcastFrame@newFrame,fsr2l
 21745  004592  0060  F0A3  FFDA   	movff	nwkTxBroadcastFrame@newFrame+1,fsr2h
 21746  004598  0E12               	movlw	18
 21747  00459A  6EDF               	movwf	indf2,c
 21748                           
 21749                           ;../nwk/nwk_src/nwkTx.c: 167:   newFrame->size = frame->size;
 21750  00459C  EE20 F001          	lfsr	2,1
 21751  0045A0  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 21752  0045A2  26D9               	addwf	fsr2l,f,c
 21753  0045A4  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 21754  0045A6  22DA               	addwfc	fsr2h,f,c
 21755  0045A8  EE10 F001          	lfsr	1,1
 21756  0045AC  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21757  0045AE  26E1               	addwf	fsr1l,f,c
 21758  0045B0  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21759  0045B2  22E2               	addwfc	fsr1h,f,c
 21760  0045B4  006F FF7F FFE7     	movff	indf2,indf1
 21761                           
 21762                           ;../nwk/nwk_src/nwkTx.c: 168:   newFrame->tx.status = NWK_SUCCESS_STATUS;
 21763  0045BA  EE20 F083          	lfsr	2,131
 21764  0045BE  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21765  0045C0  26D9               	addwf	fsr2l,f,c
 21766  0045C2  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21767  0045C4  22DA               	addwfc	fsr2h,f,c
 21768  0045C6  0E00               	movlw	0
 21769  0045C8  6EDF               	movwf	indf2,c
 21770                           
 21771                           ;../nwk/nwk_src/nwkTx.c: 169:   newFrame->tx.timeout = (rand() & 0x07) + 1;
 21772  0045CA  EC5C  F027         	call	_rand	;wreg free
 21773  0045CE  0E07               	movlw	7
 21774  0045D0  161A               	andwf	?_rand^0,f,c
 21775  0045D2  0E00               	movlw	0
 21776  0045D4  161B               	andwf	(?_rand+1)^0,f,c
 21777  0045D6  0E01               	movlw	1
 21778  0045D8  261A               	addwf	?_rand^0,f,c
 21779  0045DA  0E00               	movlw	0
 21780  0045DC  221B               	addwfc	(?_rand+1)^0,f,c
 21781  0045DE  EE20 F084          	lfsr	2,132
 21782  0045E2  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21783  0045E4  26D9               	addwf	fsr2l,f,c
 21784  0045E6  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21785  0045E8  22DA               	addwfc	fsr2h,f,c
 21786  0045EA  0060  F06B  FFDE   	movff	?_rand,postinc2
 21787  0045F0  0060  F06F  FFDD   	movff	?_rand+1,postdec2
 21788                           
 21789                           ; BSR set to: 0
 21790                           ;../nwk/nwk_src/nwkTx.c: 170:   newFrame->tx.confirm = ((void*)0);
 21791  0045F6  EE20 F087          	lfsr	2,135
 21792  0045FA  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21793  0045FC  26D9               	addwf	fsr2l,f,c
 21794  0045FE  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21795  004600  22DA               	addwfc	fsr2h,f,c
 21796  004602  0E00               	movlw	0
 21797  004604  6EDE               	movwf	postinc2,c
 21798  004606  0E00               	movlw	0
 21799  004608  6EDD               	movwf	postdec2,c
 21800                           
 21801                           ; BSR set to: 0
 21802                           ;../nwk/nwk_src/nwkTx.c: 171:   memcpy(newFrame->data, frame->data, frame->size);
 21803  00460A  0E02               	movlw	2
 21804  00460C  2427               	addwf	nwkTxBroadcastFrame@newFrame^0,w,c
 21805  00460E  6E08               	movwf	memcpy@d1^0,c
 21806  004610  0E00               	movlw	0
 21807  004612  2028               	addwfc	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21808  004614  6E09               	movwf	(memcpy@d1+1)^0,c
 21809  004616  0E02               	movlw	2
 21810  004618  2424               	addwf	nwkTxBroadcastFrame@frame^0,w,c
 21811  00461A  6E0A               	movwf	memcpy@s1^0,c
 21812  00461C  0E00               	movlw	0
 21813  00461E  2025               	addwfc	(nwkTxBroadcastFrame@frame+1)^0,w,c
 21814  004620  6E0B               	movwf	(memcpy@s1+1)^0,c
 21815  004622  EE20 F001          	lfsr	2,1
 21816  004626  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 21817  004628  26D9               	addwf	fsr2l,f,c
 21818  00462A  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 21819  00462C  22DA               	addwfc	fsr2h,f,c
 21820  00462E  50DF               	movf	indf2,w,c
 21821  004630  6E26               	movwf	??_nwkTxBroadcastFrame^0,c
 21822  004632  5026               	movf	??_nwkTxBroadcastFrame^0,w,c
 21823  004634  6E0C               	movwf	memcpy@n^0,c
 21824  004636  6A0D               	clrf	(memcpy@n+1)^0,c
 21825  004638  ECF6  F03A         	call	_memcpy	;wreg free
 21826                           
 21827                           ;../nwk/nwk_src/nwkTx.c: 173:   newFrame->header.macFcf = 0x8841;
 21828  00463C  EE20 F002          	lfsr	2,2
 21829  004640  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21830  004642  26D9               	addwf	fsr2l,f,c
 21831  004644  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21832  004646  22DA               	addwfc	fsr2h,f,c
 21833  004648  0E41               	movlw	65
 21834  00464A  6EDE               	movwf	postinc2,c
 21835  00464C  0E88               	movlw	136
 21836  00464E  6EDD               	movwf	postdec2,c
 21837                           
 21838                           ;../nwk/nwk_src/nwkTx.c: 174:   newFrame->header.macDstAddr = 0xffff;
 21839  004650  EE20 F007          	lfsr	2,7
 21840  004654  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21841  004656  26D9               	addwf	fsr2l,f,c
 21842  004658  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21843  00465A  22DA               	addwfc	fsr2h,f,c
 21844  00465C  0EFF               	movlw	255
 21845  00465E  6EDE               	movwf	postinc2,c
 21846  004660  0EFF               	movlw	255
 21847  004662  6EDD               	movwf	postdec2,c
 21848                           
 21849                           ;../nwk/nwk_src/nwkTx.c: 175:   newFrame->header.macDstPanId = frame->header.macDstPanId
      +                          ;
 21850  004664  EE20 F005          	lfsr	2,5
 21851  004668  5024               	movf	nwkTxBroadcastFrame@frame^0,w,c
 21852  00466A  26D9               	addwf	fsr2l,f,c
 21853  00466C  5025               	movf	(nwkTxBroadcastFrame@frame+1)^0,w,c
 21854  00466E  22DA               	addwfc	fsr2h,f,c
 21855  004670  EE10 F005          	lfsr	1,5
 21856  004674  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21857  004676  26E1               	addwf	fsr1l,f,c
 21858  004678  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21859  00467A  22E2               	addwfc	fsr1h,f,c
 21860  00467C  006F FF7B FFE6     	movff	postinc2,postinc1
 21861  004682  006F FF77 FFE5     	movff	postdec2,postdec1
 21862                           
 21863                           ;../nwk/nwk_src/nwkTx.c: 176:   newFrame->header.macSrcAddr = nwkIb.addr;
 21864  004688  EE20 F009          	lfsr	2,9
 21865  00468C  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21866  00468E  26D9               	addwf	fsr2l,f,c
 21867  004690  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21868  004692  22DA               	addwfc	fsr2h,f,c
 21869  004694  0060  F403  FFDE   	movff	_nwkIb,postinc2
 21870  00469A  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 21871                           
 21872                           ;../nwk/nwk_src/nwkTx.c: 177:   newFrame->header.macSeq = ++nwkIb.macSeqNum;
 21873  0046A0  0101               	movlb	1	; () banked
 21874  0046A2  2B05               	incf	(_nwkIb+5)& (0+255),f,b
 21875  0046A4  EE20 F004          	lfsr	2,4
 21876  0046A8  5027               	movf	nwkTxBroadcastFrame@newFrame^0,w,c
 21877  0046AA  26D9               	addwf	fsr2l,f,c
 21878  0046AC  5028               	movf	(nwkTxBroadcastFrame@newFrame+1)^0,w,c
 21879  0046AE  22DA               	addwfc	fsr2h,f,c
 21880  0046B0  0060  F417  FFDF   	movff	_nwkIb+5,indf2
 21881  0046B6  0012               	return		;funcret
 21882  0046B8                     __end_of_nwkTxBroadcastFrame:
 21883                           	opt callstack 0
 21884                           
 21885 ;; *************** function _nwkRxRejectDuplicate *****************
 21886 ;; Defined at:
 21887 ;;		line 200 in file "../nwk/nwk_src/nwkRx.c"
 21888 ;; Parameters:    Size  Location     Type
 21889 ;;  header          2   17[COMRAM] PTR __pack struct NwkFra
 21890 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 21891 ;; Auto vars:     Size  Location     Type
 21892 ;;  shift           1   23[COMRAM] unsigned char 
 21893 ;;  diff            1   25[COMRAM] unsigned char 
 21894 ;;  i               1   24[COMRAM] unsigned char 
 21895 ;;  entry           2   28[COMRAM] PTR struct NwkDuplicateR
 21896 ;;		 -> nwkRxDuplicateRejectionTable(50), 
 21897 ;;  freeEntry       2   26[COMRAM] PTR struct NwkDuplicateR
 21898 ;;		 -> nwkRxDuplicateRejectionTable(50), NULL(0), 
 21899 ;; Return value:  Size  Location     Type
 21900 ;;                  1    wreg      _Bool 
 21901 ;; Registers used:
 21902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21903 ;; Tracked objects:
 21904 ;;		On entry : 0/1
 21905 ;;		On exit  : 0/0
 21906 ;;		Unchanged: 0/0
 21907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21909 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21910 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21911 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21912 ;;Total ram usage:       13 bytes
 21913 ;; Hardware stack levels used:    1
 21914 ;; Hardware stack levels required when called:    9
 21915 ;; This function calls:
 21916 ;;		_SYS_TimerStart
 21917 ;;		_nwkRouteRemove
 21918 ;; This function is called by:
 21919 ;;		_nwkRxHandleReceivedFrame
 21920 ;; This function uses a non-reentrant model
 21921 ;;
 21922                           
 21923                           	psect	text134
 21924  002A66                     __ptext134:
 21925                           	opt callstack 0
 21926  002A66                     _nwkRxRejectDuplicate:
 21927                           	opt callstack 17
 21928                           
 21929                           ;../nwk/nwk_src/nwkRx.c: 200: static _Bool nwkRxRejectDuplicate(NwkFrameHeader_t *header
      +                          );../nwk/nwk_src/nwkRx.c: 201: {;../nwk/nwk_src/nwkRx.c: 202:   NwkDuplicateRejectionEnt
      +                          ry_t *entry;;../nwk/nwk_src/nwkRx.c: 203:   NwkDuplicateRejectionEntry_t *freeEntry = ((
      +                          void*)0);
 21930                           
 21931                           ;incstack = 0
 21932  002A66  0E00               	movlw	0
 21933  002A68  6E1B               	movwf	nwkRxRejectDuplicate@freeEntry^0,c
 21934  002A6A  0E00               	movlw	0
 21935  002A6C  6E1C               	movwf	(nwkRxRejectDuplicate@freeEntry+1)^0,c
 21936                           
 21937                           ;../nwk/nwk_src/nwkRx.c: 205:   for (uint8_t i = 0; i < 10; i++)
 21938  002A6E  0E00               	movlw	0
 21939  002A70  6E19               	movwf	nwkRxRejectDuplicate@i^0,c
 21940  002A72                     l10868:
 21941                           
 21942                           ;../nwk/nwk_src/nwkRx.c: 206:   {;../nwk/nwk_src/nwkRx.c: 207:     entry = &nwkRxDuplica
      +                          teRejectionTable[i];
 21943  002A72  5019               	movf	nwkRxRejectDuplicate@i^0,w,c
 21944  002A74  0D05               	mullw	5
 21945  002A76  0E8A               	movlw	low _nwkRxDuplicateRejectionTable
 21946  002A78  24F3               	addwf	243,w,c
 21947  002A7A  6E1D               	movwf	nwkRxRejectDuplicate@entry^0,c
 21948  002A7C  0E02               	movlw	high _nwkRxDuplicateRejectionTable
 21949  002A7E  20F4               	addwfc	prodh,w,c
 21950  002A80  6E1E               	movwf	(nwkRxRejectDuplicate@entry+1)^0,c
 21951                           
 21952                           ;../nwk/nwk_src/nwkRx.c: 209:     if (entry->ttl && header->nwkSrcAddr == entry->src)
 21953  002A82  EE20 F004          	lfsr	2,4
 21954  002A86  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 21955  002A88  26D9               	addwf	fsr2l,f,c
 21956  002A8A  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 21957  002A8C  22DA               	addwfc	fsr2h,f,c
 21958  002A8E  50DF               	movf	indf2,w,c
 21959  002A90  B4D8               	btfsc	status,2,c
 21960  002A92  D0B3               	goto	l10908
 21961  002A94  0060  F077  FFD9   	movff	nwkRxRejectDuplicate@entry,fsr2l
 21962  002A9A  0060  F07B  FFDA   	movff	nwkRxRejectDuplicate@entry+1,fsr2h
 21963  002AA0  EE10 F00B          	lfsr	1,11
 21964  002AA4  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 21965  002AA6  26E1               	addwf	fsr1l,f,c
 21966  002AA8  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 21967  002AAA  22E2               	addwfc	fsr1h,f,c
 21968  002AAC  50DE               	movf	postinc2,w,c
 21969  002AAE  18E6               	xorwf	postinc1,w,c
 21970  002AB0  E103               	bnz	u9311
 21971  002AB2  50DE               	movf	postinc2,w,c
 21972  002AB4  18E6               	xorwf	postinc1,w,c
 21973  002AB6  A4D8               	btfss	status,2,c
 21974  002AB8                     u9311:
 21975  002AB8  D0A0               	goto	l10908
 21976                           
 21977                           ;../nwk/nwk_src/nwkRx.c: 210:     {;../nwk/nwk_src/nwkRx.c: 211:       uint8_t diff = (i
      +                          nt8_t)entry->seq - header->nwkSeq;
 21978  002ABA  EE20 F00A          	lfsr	2,10
 21979  002ABE  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 21980  002AC0  26D9               	addwf	fsr2l,f,c
 21981  002AC2  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 21982  002AC4  22DA               	addwfc	fsr2h,f,c
 21983  002AC6  50DF               	movf	indf2,w,c
 21984  002AC8  6E14               	movwf	??_nwkRxRejectDuplicate^0,c
 21985  002ACA  EE20 F002          	lfsr	2,2
 21986  002ACE  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 21987  002AD0  26D9               	addwf	fsr2l,f,c
 21988  002AD2  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 21989  002AD4  22DA               	addwfc	fsr2h,f,c
 21990  002AD6  50DF               	movf	indf2,w,c
 21991  002AD8  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 21992  002ADA  5014               	movf	??_nwkRxRejectDuplicate^0,w,c
 21993  002ADC  5C15               	subwf	(??_nwkRxRejectDuplicate+1)^0,w,c
 21994  002ADE  6E1A               	movwf	nwkRxRejectDuplicate@diff^0,c
 21995                           
 21996                           ;../nwk/nwk_src/nwkRx.c: 213:       if (diff < 8)
 21997  002AE0  0E08               	movlw	8
 21998  002AE2  601A               	cpfslt	nwkRxRejectDuplicate@diff^0,c
 21999  002AE4  D055               	goto	l10896
 22000                           
 22001                           ;../nwk/nwk_src/nwkRx.c: 214:       {;../nwk/nwk_src/nwkRx.c: 215:         if (entry->ma
      +                          sk & (1 << diff))
 22002  002AE6  EE20 F003          	lfsr	2,3
 22003  002AEA  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 22004  002AEC  26D9               	addwf	fsr2l,f,c
 22005  002AEE  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 22006  002AF0  22DA               	addwfc	fsr2h,f,c
 22007  002AF2  50DF               	movf	indf2,w,c
 22008  002AF4  6E14               	movwf	??_nwkRxRejectDuplicate^0,c
 22009  002AF6  0060  F068  F015   	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate+1
 22010  002AFC  0E01               	movlw	1
 22011  002AFE  6E16               	movwf	(??_nwkRxRejectDuplicate+2)^0,c
 22012  002B00  2A15               	incf	(??_nwkRxRejectDuplicate+1)^0,f,c
 22013  002B02  D002               	goto	u9334
 22014  002B04                     u9335:
 22015  002B04  90D8               	bcf	status,0,c
 22016  002B06  3616               	rlcf	(??_nwkRxRejectDuplicate+2)^0,f,c
 22017  002B08                     u9334:
 22018  002B08  2E15               	decfsz	(??_nwkRxRejectDuplicate+1)^0,f,c
 22019  002B0A  D7FC               	goto	u9335
 22020  002B0C  5016               	movf	(??_nwkRxRejectDuplicate+2)^0,w,c
 22021  002B0E  1414               	andwf	??_nwkRxRejectDuplicate^0,w,c
 22022  002B10  0900               	iorlw	0
 22023  002B12  B4D8               	btfsc	status,2,c
 22024  002B14  D028               	goto	l10888
 22025                           
 22026                           ;../nwk/nwk_src/nwkRx.c: 216:         {;../nwk/nwk_src/nwkRx.c: 218:           if (nwkIb
      +                          .addr == header->macDstAddr)
 22027  002B16  EE20 F005          	lfsr	2,5
 22028  002B1A  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 22029  002B1C  26D9               	addwf	fsr2l,f,c
 22030  002B1E  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 22031  002B20  22DA               	addwfc	fsr2h,f,c
 22032  002B22  0101               	movlb	1	; () banked
 22033  002B24  5100               	movf	_nwkIb& (0+255),w,b
 22034  002B26  18DE               	xorwf	postinc2,w,c
 22035  002B28  E11C               	bnz	l10884
 22036  002B2A  5101               	movf	(_nwkIb+1)& (0+255),w,b
 22037  002B2C  18DE               	xorwf	postinc2,w,c
 22038  002B2E  A4D8               	btfss	status,2,c
 22039  002B30  D018               	goto	l10884
 22040                           
 22041                           ; BSR set to: 1
 22042                           ;../nwk/nwk_src/nwkRx.c: 219:             nwkRouteRemove(header->nwkDstAddr, header->nwk
      +                          Fcf.multicast);
 22043  002B32  EE20 F00D          	lfsr	2,13
 22044  002B36  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 22045  002B38  26D9               	addwf	fsr2l,f,c
 22046  002B3A  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 22047  002B3C  22DA               	addwfc	fsr2h,f,c
 22048  002B3E  006F FF78  F008    	movff	postinc2,nwkRouteRemove@dst
 22049  002B44  006F FF74  F009    	movff	postdec2,nwkRouteRemove@dst+1
 22050  002B4A  EE20 F009          	lfsr	2,9
 22051  002B4E  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 22052  002B50  26D9               	addwf	fsr2l,f,c
 22053  002B52  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 22054  002B54  22DA               	addwfc	fsr2h,f,c
 22055  002B56  0E00               	movlw	0
 22056  002B58  B6DF               	btfsc	indf2,3,c
 22057  002B5A  0E01               	movlw	1
 22058  002B5C  6E0A               	movwf	nwkRouteRemove@multicast^0,c
 22059  002B5E  ECEE  F042         	call	_nwkRouteRemove	;wreg free
 22060  002B62                     l10884:
 22061                           
 22062                           ;../nwk/nwk_src/nwkRx.c: 221:           return 1;
 22063  002B62  0E01               	movlw	1
 22064  002B64  0012               	return	
 22065  002B66                     l10888:
 22066                           
 22067                           ;../nwk/nwk_src/nwkRx.c: 224:         entry->mask |= (1 << diff);
 22068  002B66  0060  F068  F014   	movff	nwkRxRejectDuplicate@diff,??_nwkRxRejectDuplicate
 22069  002B6C  0E01               	movlw	1
 22070  002B6E  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 22071  002B70  2A14               	incf	??_nwkRxRejectDuplicate^0,f,c
 22072  002B72  D002               	goto	u9364
 22073  002B74                     u9365:
 22074  002B74  90D8               	bcf	status,0,c
 22075  002B76  3615               	rlcf	(??_nwkRxRejectDuplicate+1)^0,f,c
 22076  002B78                     u9364:
 22077  002B78  2E14               	decfsz	??_nwkRxRejectDuplicate^0,f,c
 22078  002B7A  D7FC               	goto	u9365
 22079  002B7C  EE20 F003          	lfsr	2,3
 22080  002B80  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 22081  002B82  26D9               	addwf	fsr2l,f,c
 22082  002B84  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 22083  002B86  22DA               	addwfc	fsr2h,f,c
 22084  002B88  5015               	movf	(??_nwkRxRejectDuplicate+1)^0,w,c
 22085  002B8A  12DF               	iorwf	indf2,f,c
 22086  002B8C                     l10890:
 22087                           
 22088                           ;../nwk/nwk_src/nwkRx.c: 225:         return 0;
 22089  002B8C  0E00               	movlw	0
 22090  002B8E  0012               	return	
 22091  002B90                     l10896:
 22092                           
 22093                           ;../nwk/nwk_src/nwkRx.c: 228:       {;../nwk/nwk_src/nwkRx.c: 229:         uint8_t shift
      +                           = -(int8_t)diff;
 22094  002B90  501A               	movf	nwkRxRejectDuplicate@diff^0,w,c
 22095  002B92  0800               	sublw	0
 22096  002B94  6E18               	movwf	nwkRxRejectDuplicate@shift^0,c
 22097                           
 22098                           ;../nwk/nwk_src/nwkRx.c: 231:         entry->seq = header->nwkSeq;
 22099  002B96  EE20 F00A          	lfsr	2,10
 22100  002B9A  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 22101  002B9C  26D9               	addwf	fsr2l,f,c
 22102  002B9E  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 22103  002BA0  22DA               	addwfc	fsr2h,f,c
 22104  002BA2  EE10 F002          	lfsr	1,2
 22105  002BA6  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 22106  002BA8  26E1               	addwf	fsr1l,f,c
 22107  002BAA  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 22108  002BAC  22E2               	addwfc	fsr1h,f,c
 22109  002BAE  006F FF7F FFE7     	movff	indf2,indf1
 22110                           
 22111                           ;../nwk/nwk_src/nwkRx.c: 232:         entry->mask = (entry->mask << shift) | 1;
 22112  002BB4  EE20 F003          	lfsr	2,3
 22113  002BB8  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 22114  002BBA  26D9               	addwf	fsr2l,f,c
 22115  002BBC  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 22116  002BBE  22DA               	addwfc	fsr2h,f,c
 22117  002BC0  0060  F060  F014   	movff	nwkRxRejectDuplicate@shift,??_nwkRxRejectDuplicate
 22118  002BC6  EE10 F003          	lfsr	1,3
 22119  002BCA  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 22120  002BCC  26E1               	addwf	fsr1l,f,c
 22121  002BCE  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 22122  002BD0  22E2               	addwfc	fsr1h,f,c
 22123  002BD2  50E7               	movf	indf1,w,c
 22124  002BD4  6E15               	movwf	(??_nwkRxRejectDuplicate+1)^0,c
 22125  002BD6  2A14               	incf	??_nwkRxRejectDuplicate^0,f,c
 22126  002BD8  D002               	goto	u9374
 22127  002BDA                     u9375:
 22128  002BDA  90D8               	bcf	status,0,c
 22129  002BDC  3615               	rlcf	(??_nwkRxRejectDuplicate+1)^0,f,c
 22130  002BDE                     u9374:
 22131  002BDE  2E14               	decfsz	??_nwkRxRejectDuplicate^0,f,c
 22132  002BE0  D7FC               	goto	u9375
 22133  002BE2  5015               	movf	(??_nwkRxRejectDuplicate+1)^0,w,c
 22134  002BE4  0901               	iorlw	1
 22135  002BE6  6EDF               	movwf	indf2,c
 22136                           
 22137                           ;../nwk/nwk_src/nwkRx.c: 233:         entry->ttl = ((1000 / 5000) + 1);
 22138  002BE8  EE20 F004          	lfsr	2,4
 22139  002BEC  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 22140  002BEE  26D9               	addwf	fsr2l,f,c
 22141  002BF0  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 22142  002BF2  22DA               	addwfc	fsr2h,f,c
 22143  002BF4  0E01               	movlw	1
 22144  002BF6  6EDF               	movwf	indf2,c
 22145  002BF8  D7C9               	goto	l10890
 22146  002BFA                     l10908:
 22147                           
 22148                           ;../nwk/nwk_src/nwkRx.c: 238:     if (0 == entry->ttl)
 22149  002BFA  EE20 F004          	lfsr	2,4
 22150  002BFE  501D               	movf	nwkRxRejectDuplicate@entry^0,w,c
 22151  002C00  26D9               	addwf	fsr2l,f,c
 22152  002C02  501E               	movf	(nwkRxRejectDuplicate@entry+1)^0,w,c
 22153  002C04  22DA               	addwfc	fsr2h,f,c
 22154  002C06  50DF               	movf	indf2,w,c
 22155  002C08  A4D8               	btfss	status,2,c
 22156  002C0A  D006               	goto	l10912
 22157                           
 22158                           ;../nwk/nwk_src/nwkRx.c: 239:       freeEntry = entry;
 22159  002C0C  0060  F074  F01B   	movff	nwkRxRejectDuplicate@entry,nwkRxRejectDuplicate@freeEntry
 22160  002C12  0060  F078  F01C   	movff	nwkRxRejectDuplicate@entry+1,nwkRxRejectDuplicate@freeEntry+1
 22161  002C18                     l10912:
 22162                           
 22163                           ;../nwk/nwk_src/nwkRx.c: 240:   }
 22164  002C18  2A19               	incf	nwkRxRejectDuplicate@i^0,f,c
 22165  002C1A  0E09               	movlw	9
 22166  002C1C  6419               	cpfsgt	nwkRxRejectDuplicate@i^0,c
 22167  002C1E  D729               	goto	l10868
 22168                           
 22169                           ;../nwk/nwk_src/nwkRx.c: 242:   if (((void*)0) == freeEntry)
 22170  002C20  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 22171  002C22  101C               	iorwf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 22172  002C24  B4D8               	btfsc	status,2,c
 22173  002C26  D79D               	goto	l10884
 22174                           
 22175                           ;../nwk/nwk_src/nwkRx.c: 245:   freeEntry->src = header->nwkSrcAddr;
 22176  002C28  EE20 F00B          	lfsr	2,11
 22177  002C2C  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 22178  002C2E  26D9               	addwf	fsr2l,f,c
 22179  002C30  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 22180  002C32  22DA               	addwfc	fsr2h,f,c
 22181  002C34  0060  F06F  FFE1   	movff	nwkRxRejectDuplicate@freeEntry,fsr1l
 22182  002C3A  0060  F073  FFE2   	movff	nwkRxRejectDuplicate@freeEntry+1,fsr1h
 22183  002C40  006F FF7B FFE6     	movff	postinc2,postinc1
 22184  002C46  006F FF77 FFE5     	movff	postdec2,postdec1
 22185                           
 22186                           ;../nwk/nwk_src/nwkRx.c: 246:   freeEntry->seq = header->nwkSeq;
 22187  002C4C  EE20 F00A          	lfsr	2,10
 22188  002C50  5012               	movf	nwkRxRejectDuplicate@header^0,w,c
 22189  002C52  26D9               	addwf	fsr2l,f,c
 22190  002C54  5013               	movf	(nwkRxRejectDuplicate@header+1)^0,w,c
 22191  002C56  22DA               	addwfc	fsr2h,f,c
 22192  002C58  EE10 F002          	lfsr	1,2
 22193  002C5C  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 22194  002C5E  26E1               	addwf	fsr1l,f,c
 22195  002C60  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 22196  002C62  22E2               	addwfc	fsr1h,f,c
 22197  002C64  006F FF7F FFE7     	movff	indf2,indf1
 22198                           
 22199                           ;../nwk/nwk_src/nwkRx.c: 247:   freeEntry->mask = 1;
 22200  002C6A  EE20 F003          	lfsr	2,3
 22201  002C6E  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 22202  002C70  26D9               	addwf	fsr2l,f,c
 22203  002C72  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 22204  002C74  22DA               	addwfc	fsr2h,f,c
 22205  002C76  0E01               	movlw	1
 22206  002C78  6EDF               	movwf	indf2,c
 22207                           
 22208                           ;../nwk/nwk_src/nwkRx.c: 248:   freeEntry->ttl = ((1000 / 5000) + 1);
 22209  002C7A  EE20 F004          	lfsr	2,4
 22210  002C7E  501B               	movf	nwkRxRejectDuplicate@freeEntry^0,w,c
 22211  002C80  26D9               	addwf	fsr2l,f,c
 22212  002C82  501C               	movf	(nwkRxRejectDuplicate@freeEntry+1)^0,w,c
 22213  002C84  22DA               	addwfc	fsr2h,f,c
 22214  002C86  0E01               	movlw	1
 22215  002C88  6EDF               	movwf	indf2,c
 22216                           
 22217                           ;../nwk/nwk_src/nwkRx.c: 250:   SYS_TimerStart(&nwkRxDuplicateRejectionTimer);
 22218  002C8A  0EB5               	movlw	low _nwkRxDuplicateRejectionTimer
 22219  002C8C  6E10               	movwf	SYS_TimerStart@timer^0,c
 22220  002C8E  0E01               	movlw	high _nwkRxDuplicateRejectionTimer
 22221  002C90  6E11               	movwf	(SYS_TimerStart@timer+1)^0,c
 22222  002C92  EC40  F045         	call	_SYS_TimerStart	;wreg free
 22223  002C96  D77A               	goto	l10890
 22224  002C98                     __end_of_nwkRxRejectDuplicate:
 22225                           	opt callstack 0
 22226                           
 22227 ;; *************** function _SYS_TimerStart *****************
 22228 ;; Defined at:
 22229 ;;		line 70 in file "../sys/sys_src/sysTimer.c"
 22230 ;; Parameters:    Size  Location     Type
 22231 ;;  timer           2   15[COMRAM] PTR struct SYS_Timer_t
 22232 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 22233 ;; Auto vars:     Size  Location     Type
 22234 ;;		None
 22235 ;; Return value:  Size  Location     Type
 22236 ;;                  1    wreg      void 
 22237 ;; Registers used:
 22238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22239 ;; Tracked objects:
 22240 ;;		On entry : 0/0
 22241 ;;		On exit  : 0/0
 22242 ;;		Unchanged: 0/0
 22243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22244 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22247 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22248 ;;Total ram usage:        2 bytes
 22249 ;; Hardware stack levels used:    1
 22250 ;; Hardware stack levels required when called:    8
 22251 ;; This function calls:
 22252 ;;		_SYS_TimerStarted
 22253 ;;		_placeTimer
 22254 ;; This function is called by:
 22255 ;;		_nwkRxDuplicateRejectionTimerHandler
 22256 ;;		_nwkRxRejectDuplicate
 22257 ;;		_nwkTxAckWaitTimerHandler
 22258 ;;		_nwkTxDelayTimerHandler
 22259 ;;		_nwkTxTaskHandler
 22260 ;; This function uses a non-reentrant model
 22261 ;;
 22262                           
 22263                           	psect	text135
 22264  008A80                     __ptext135:
 22265                           	opt callstack 0
 22266  008A80                     _SYS_TimerStart:
 22267                           	opt callstack 19
 22268                           
 22269                           ;../sys/sys_src/sysTimer.c: 70: void SYS_TimerStart(SYS_Timer_t *timer);../sys/sys_src/s
      +                          ysTimer.c: 71: {;../sys/sys_src/sysTimer.c: 72:   if (!SYS_TimerStarted(timer))
 22270                           
 22271                           ;incstack = 0
 22272  008A80  0060  F040  F002   	movff	SYS_TimerStart@timer,SYS_TimerStarted@timer
 22273  008A86  0060  F044  F003   	movff	SYS_TimerStart@timer+1,SYS_TimerStarted@timer+1
 22274  008A8C  EC13  F041         	call	_SYS_TimerStarted	;wreg free
 22275  008A90  0900               	iorlw	0
 22276  008A92  A4D8               	btfss	status,2,c
 22277  008A94  0012               	return	
 22278                           
 22279                           ;../sys/sys_src/sysTimer.c: 73:     placeTimer(timer);
 22280  008A96  0060  F040  F002   	movff	SYS_TimerStart@timer,placeTimer@timer
 22281  008A9C  0060  F044  F003   	movff	SYS_TimerStart@timer+1,placeTimer@timer+1
 22282  008AA2  EC3B  F01C         	call	_placeTimer	;wreg free
 22283  008AA6  0012               	return		;funcret
 22284  008AA8                     __end_of_SYS_TimerStart:
 22285                           	opt callstack 0
 22286                           
 22287 ;; *************** function _placeTimer *****************
 22288 ;; Defined at:
 22289 ;;		line 146 in file "../sys/sys_src/sysTimer.c"
 22290 ;; Parameters:    Size  Location     Type
 22291 ;;  timer           2    1[COMRAM] PTR struct SYS_Timer_t
 22292 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 22293 ;; Auto vars:     Size  Location     Type
 22294 ;;  t               2   13[COMRAM] PTR struct SYS_Timer_t
 22295 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 22296 ;;  timeout         4    7[COMRAM] unsigned long 
 22297 ;;  prev            2   11[COMRAM] PTR struct SYS_Timer_t
 22298 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 22299 ;; Return value:  Size  Location     Type
 22300 ;;                  1    wreg      void 
 22301 ;; Registers used:
 22302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 22303 ;; Tracked objects:
 22304 ;;		On entry : 0/0
 22305 ;;		On exit  : 0/0
 22306 ;;		Unchanged: 0/0
 22307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22309 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22310 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22311 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22312 ;;Total ram usage:       14 bytes
 22313 ;; Hardware stack levels used:    1
 22314 ;; Hardware stack levels required when called:    7
 22315 ;; This function calls:
 22316 ;;		Nothing
 22317 ;; This function is called by:
 22318 ;;		_SYS_TimerStart
 22319 ;;		_SYS_TimerTaskHandler
 22320 ;; This function uses a non-reentrant model
 22321 ;;
 22322                           
 22323                           	psect	text136
 22324  003876                     __ptext136:
 22325                           	opt callstack 0
 22326  003876                     _placeTimer:
 22327                           	opt callstack 21
 22328                           
 22329                           ;../sys/sys_src/sysTimer.c: 146: static void placeTimer(SYS_Timer_t *timer);../sys/sys_s
      +                          rc/sysTimer.c: 147: {;../sys/sys_src/sysTimer.c: 148:   if (timers)
 22330                           
 22331                           ;incstack = 0
 22332  003876  0100               	movlb	0	; () banked
 22333  003878  51BB               	movf	_timers& (0+255),w,b
 22334  00387A  11BC               	iorwf	(_timers+1)& (0+255),w,b
 22335  00387C  B4D8               	btfsc	status,2,c
 22336  00387E  D0A8               	goto	l9802
 22337                           
 22338                           ; BSR set to: 0
 22339                           ;../sys/sys_src/sysTimer.c: 149:   {;../sys/sys_src/sysTimer.c: 150:     SYS_Timer_t *pr
      +                          ev = ((void*)0);
 22340  003880  0E00               	movlw	0
 22341  003882  6E0C               	movwf	placeTimer@prev^0,c
 22342  003884  0E00               	movlw	0
 22343  003886  6E0D               	movwf	(placeTimer@prev+1)^0,c
 22344                           
 22345                           ; BSR set to: 0
 22346                           ;../sys/sys_src/sysTimer.c: 151:     uint32_t timeout = timer->interval;
 22347  003888  EE20 F006          	lfsr	2,6
 22348  00388C  5002               	movf	placeTimer@timer^0,w,c
 22349  00388E  26D9               	addwf	fsr2l,f,c
 22350  003890  5003               	movf	(placeTimer@timer+1)^0,w,c
 22351  003892  22DA               	addwfc	fsr2h,f,c
 22352  003894  006F FF78  F008    	movff	postinc2,placeTimer@timeout
 22353  00389A  006F FF78  F009    	movff	postinc2,placeTimer@timeout+1
 22354  0038A0  006F FF78  F00A    	movff	postinc2,placeTimer@timeout+2
 22355  0038A6  006F FF78  F00B    	movff	postinc2,placeTimer@timeout+3
 22356                           
 22357                           ; BSR set to: 0
 22358                           ;../sys/sys_src/sysTimer.c: 153:     for (SYS_Timer_t *t = timers; t; t = t->next)
 22359  0038AC  0060  F2EC  F00E   	movff	_timers,placeTimer@t
 22360  0038B2  0060  F2F0  F00F   	movff	_timers+1,placeTimer@t+1
 22361  0038B8  D03F               	goto	l9788
 22362  0038BA                     l9778:
 22363                           
 22364                           ;../sys/sys_src/sysTimer.c: 154:     {;../sys/sys_src/sysTimer.c: 155:       if (timeout
      +                           < t->timeout)
 22365  0038BA  EE20 F002          	lfsr	2,2
 22366  0038BE  500E               	movf	placeTimer@t^0,w,c
 22367  0038C0  26D9               	addwf	fsr2l,f,c
 22368  0038C2  500F               	movf	(placeTimer@t+1)^0,w,c
 22369  0038C4  22DA               	addwfc	fsr2h,f,c
 22370  0038C6  50DE               	movf	postinc2,w,c
 22371  0038C8  5C08               	subwf	placeTimer@timeout^0,w,c
 22372  0038CA  50DE               	movf	postinc2,w,c
 22373  0038CC  5809               	subwfb	(placeTimer@timeout+1)^0,w,c
 22374  0038CE  50DE               	movf	postinc2,w,c
 22375  0038D0  580A               	subwfb	(placeTimer@timeout+2)^0,w,c
 22376  0038D2  50DE               	movf	postinc2,w,c
 22377  0038D4  580B               	subwfb	(placeTimer@timeout+3)^0,w,c
 22378  0038D6  B0D8               	btfsc	status,0,c
 22379  0038D8  D00F               	goto	l9784
 22380                           
 22381                           ;../sys/sys_src/sysTimer.c: 156:       {;../sys/sys_src/sysTimer.c: 157:          t->tim
      +                          eout -= timeout;
 22382  0038DA  EE20 F002          	lfsr	2,2
 22383  0038DE  500E               	movf	placeTimer@t^0,w,c
 22384  0038E0  26D9               	addwf	fsr2l,f,c
 22385  0038E2  500F               	movf	(placeTimer@t+1)^0,w,c
 22386  0038E4  22DA               	addwfc	fsr2h,f,c
 22387  0038E6  5008               	movf	placeTimer@timeout^0,w,c
 22388  0038E8  5EDE               	subwf	postinc2,f,c
 22389  0038EA  5009               	movf	(placeTimer@timeout+1)^0,w,c
 22390  0038EC  5ADE               	subwfb	postinc2,f,c
 22391  0038EE  500A               	movf	(placeTimer@timeout+2)^0,w,c
 22392  0038F0  5ADE               	subwfb	postinc2,f,c
 22393  0038F2  500B               	movf	(placeTimer@timeout+3)^0,w,c
 22394  0038F4  5ADE               	subwfb	postinc2,f,c
 22395                           
 22396                           ;../sys/sys_src/sysTimer.c: 158:          break;
 22397  0038F6  D024               	goto	u7810
 22398  0038F8                     l9784:
 22399                           
 22400                           ;../sys/sys_src/sysTimer.c: 161:         timeout -= t->timeout;
 22401  0038F8  EE20 F002          	lfsr	2,2
 22402  0038FC  500E               	movf	placeTimer@t^0,w,c
 22403  0038FE  26D9               	addwf	fsr2l,f,c
 22404  003900  500F               	movf	(placeTimer@t+1)^0,w,c
 22405  003902  22DA               	addwfc	fsr2h,f,c
 22406  003904  50DE               	movf	postinc2,w,c
 22407  003906  5E08               	subwf	placeTimer@timeout^0,f,c
 22408  003908  50DE               	movf	postinc2,w,c
 22409  00390A  5A09               	subwfb	(placeTimer@timeout+1)^0,f,c
 22410  00390C  50DE               	movf	postinc2,w,c
 22411  00390E  5A0A               	subwfb	(placeTimer@timeout+2)^0,f,c
 22412  003910  50DD               	movf	postdec2,w,c
 22413  003912  5A0B               	subwfb	(placeTimer@timeout+3)^0,f,c
 22414                           
 22415                           ;../sys/sys_src/sysTimer.c: 163:       prev = t;
 22416  003914  0060  F038  F00C   	movff	placeTimer@t,placeTimer@prev
 22417  00391A  0060  F03C  F00D   	movff	placeTimer@t+1,placeTimer@prev+1
 22418                           
 22419                           ;../sys/sys_src/sysTimer.c: 164:     }
 22420  003920  0060  F03B  FFD9   	movff	placeTimer@t,fsr2l
 22421  003926  0060  F03F  FFDA   	movff	placeTimer@t+1,fsr2h
 22422  00392C  006F FF78  F00E    	movff	postinc2,placeTimer@t
 22423  003932  006F FF74  F00F    	movff	postdec2,placeTimer@t+1
 22424  003938                     l9788:
 22425  003938  500E               	movf	placeTimer@t^0,w,c
 22426  00393A  100F               	iorwf	(placeTimer@t+1)^0,w,c
 22427  00393C  A4D8               	btfss	status,2,c
 22428  00393E  D7BD               	goto	l9778
 22429  003940                     u7810:
 22430                           
 22431                           ;../sys/sys_src/sysTimer.c: 166:     timer->timeout = timeout;
 22432  003940  EE20 F002          	lfsr	2,2
 22433  003944  5002               	movf	placeTimer@timer^0,w,c
 22434  003946  26D9               	addwf	fsr2l,f,c
 22435  003948  5003               	movf	(placeTimer@timer+1)^0,w,c
 22436  00394A  22DA               	addwfc	fsr2h,f,c
 22437  00394C  0060  F023  FFDE   	movff	placeTimer@timeout,postinc2
 22438  003952  0060  F027  FFDE   	movff	placeTimer@timeout+1,postinc2
 22439  003958  0060  F02B  FFDE   	movff	placeTimer@timeout+2,postinc2
 22440  00395E  0060  F02F  FFDE   	movff	placeTimer@timeout+3,postinc2
 22441                           
 22442                           ;../sys/sys_src/sysTimer.c: 168:     if (prev)
 22443  003964  500C               	movf	placeTimer@prev^0,w,c
 22444  003966  100D               	iorwf	(placeTimer@prev+1)^0,w,c
 22445  003968  B4D8               	btfsc	status,2,c
 22446  00396A  D01F               	goto	l9798
 22447                           
 22448                           ;../sys/sys_src/sysTimer.c: 169:     {;../sys/sys_src/sysTimer.c: 170:       timer->next
      +                           = prev->next;
 22449  00396C  0060  F033  FFD9   	movff	placeTimer@prev,fsr2l
 22450  003972  0060  F037  FFDA   	movff	placeTimer@prev+1,fsr2h
 22451  003978  0060  F00B  FFE1   	movff	placeTimer@timer,fsr1l
 22452  00397E  0060  F00F  FFE2   	movff	placeTimer@timer+1,fsr1h
 22453  003984  006F FF7B FFE6     	movff	postinc2,postinc1
 22454  00398A  006F FF77 FFE5     	movff	postdec2,postdec1
 22455                           
 22456                           ;../sys/sys_src/sysTimer.c: 171:       prev->next = timer;
 22457  003990  0060  F033  FFD9   	movff	placeTimer@prev,fsr2l
 22458  003996  0060  F037  FFDA   	movff	placeTimer@prev+1,fsr2h
 22459  00399C  0060  F00B  FFDE   	movff	placeTimer@timer,postinc2
 22460  0039A2  0060  F00F  FFDD   	movff	placeTimer@timer+1,postdec2
 22461                           
 22462                           ;../sys/sys_src/sysTimer.c: 172:     }
 22463  0039A8  0012               	return	
 22464  0039AA                     l9798:
 22465                           
 22466                           ;../sys/sys_src/sysTimer.c: 174:     {;../sys/sys_src/sysTimer.c: 175:       timer->next
      +                           = timers;
 22467  0039AA  0060  F00B  FFD9   	movff	placeTimer@timer,fsr2l
 22468  0039B0  0060  F00F  FFDA   	movff	placeTimer@timer+1,fsr2h
 22469  0039B6  0060  F2EF  FFDE   	movff	_timers,postinc2
 22470  0039BC  0060  F2F3  FFDD   	movff	_timers+1,postdec2
 22471  0039C2                     l9800:
 22472                           
 22473                           ;../sys/sys_src/sysTimer.c: 176:       timers = timer;
 22474  0039C2  0060  F008  F0BB   	movff	placeTimer@timer,_timers
 22475  0039C8  0060  F00C  F0BC   	movff	placeTimer@timer+1,_timers+1
 22476  0039CE  0012               	return	
 22477  0039D0                     l9802:
 22478                           
 22479                           ; BSR set to: 0
 22480                           ;../sys/sys_src/sysTimer.c: 180:   {;../sys/sys_src/sysTimer.c: 181:     timer->next = (
      +                          (void*)0);
 22481  0039D0  0060  F00B  FFD9   	movff	placeTimer@timer,fsr2l
 22482  0039D6  0060  F00F  FFDA   	movff	placeTimer@timer+1,fsr2h
 22483  0039DC  0E00               	movlw	0
 22484  0039DE  6EDE               	movwf	postinc2,c
 22485  0039E0  0E00               	movlw	0
 22486  0039E2  6EDD               	movwf	postdec2,c
 22487                           
 22488                           ; BSR set to: 0
 22489                           ;../sys/sys_src/sysTimer.c: 182:     timer->timeout = timer->interval;
 22490  0039E4  EE20 F006          	lfsr	2,6
 22491  0039E8  5002               	movf	placeTimer@timer^0,w,c
 22492  0039EA  26D9               	addwf	fsr2l,f,c
 22493  0039EC  5003               	movf	(placeTimer@timer+1)^0,w,c
 22494  0039EE  22DA               	addwfc	fsr2h,f,c
 22495  0039F0  EE10 F002          	lfsr	1,2
 22496  0039F4  5002               	movf	placeTimer@timer^0,w,c
 22497  0039F6  26E1               	addwf	fsr1l,f,c
 22498  0039F8  5003               	movf	(placeTimer@timer+1)^0,w,c
 22499  0039FA  22E2               	addwfc	fsr1h,f,c
 22500  0039FC  006F FF7B FFE6     	movff	postinc2,postinc1
 22501  003A02  006F FF7B FFE6     	movff	postinc2,postinc1
 22502  003A08  006F FF7B FFE6     	movff	postinc2,postinc1
 22503  003A0E  006F FF7B FFE6     	movff	postinc2,postinc1
 22504  003A14  D7D6               	goto	l9800
 22505  003A16                     __end_of_placeTimer:
 22506                           	opt callstack 0
 22507                           
 22508 ;; *************** function _SYS_TimerStarted *****************
 22509 ;; Defined at:
 22510 ;;		line 102 in file "../sys/sys_src/sysTimer.c"
 22511 ;; Parameters:    Size  Location     Type
 22512 ;;  timer           2    1[COMRAM] PTR struct SYS_Timer_t
 22513 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 22514 ;; Auto vars:     Size  Location     Type
 22515 ;;  t               2    3[COMRAM] PTR struct SYS_Timer_t
 22516 ;;		 -> nwkTxDelayTimer(13), nwkTxAckWaitTimer(13), nwkRxDuplicateRejectionTimer(13), NULL(0), 
 22517 ;; Return value:  Size  Location     Type
 22518 ;;                  1    wreg      _Bool 
 22519 ;; Registers used:
 22520 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22521 ;; Tracked objects:
 22522 ;;		On entry : 0/0
 22523 ;;		On exit  : 0/0
 22524 ;;		Unchanged: 0/0
 22525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22529 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22530 ;;Total ram usage:        4 bytes
 22531 ;; Hardware stack levels used:    1
 22532 ;; Hardware stack levels required when called:    7
 22533 ;; This function calls:
 22534 ;;		Nothing
 22535 ;; This function is called by:
 22536 ;;		_SYS_TimerStart
 22537 ;; This function uses a non-reentrant model
 22538 ;;
 22539                           
 22540                           	psect	text137
 22541  008226                     __ptext137:
 22542                           	opt callstack 0
 22543  008226                     _SYS_TimerStarted:
 22544                           	opt callstack 19
 22545                           
 22546                           ;../sys/sys_src/sysTimer.c: 102: _Bool SYS_TimerStarted(SYS_Timer_t *timer);../sys/sys_s
      +                          rc/sysTimer.c: 103: {;../sys/sys_src/sysTimer.c: 104:   for (SYS_Timer_t *t = timers; t;
      +                           t = t->next)
 22547                           
 22548                           ;incstack = 0
 22549  008226  0060  F2EC  F004   	movff	_timers,SYS_TimerStarted@t
 22550  00822C  0060  F2F0  F005   	movff	_timers+1,SYS_TimerStarted@t+1
 22551  008232  D015               	goto	l9764
 22552  008234                     l9756:
 22553                           
 22554                           ;../sys/sys_src/sysTimer.c: 105:     if (t == timer)
 22555  008234  5002               	movf	SYS_TimerStarted@timer^0,w,c
 22556  008236  1804               	xorwf	SYS_TimerStarted@t^0,w,c
 22557  008238  E106               	bnz	l9762
 22558  00823A  5003               	movf	(SYS_TimerStarted@timer+1)^0,w,c
 22559  00823C  1805               	xorwf	(SYS_TimerStarted@t+1)^0,w,c
 22560  00823E  A4D8               	btfss	status,2,c
 22561  008240  D002               	goto	l9762
 22562                           
 22563                           ;../sys/sys_src/sysTimer.c: 106:       return 1;
 22564  008242  0E01               	movlw	1
 22565  008244  0012               	return	
 22566  008246                     l9762:
 22567  008246  0060  F013  FFD9   	movff	SYS_TimerStarted@t,fsr2l
 22568  00824C  0060  F017  FFDA   	movff	SYS_TimerStarted@t+1,fsr2h
 22569  008252  006F FF78  F004    	movff	postinc2,SYS_TimerStarted@t
 22570  008258  006F FF74  F005    	movff	postdec2,SYS_TimerStarted@t+1
 22571  00825E                     l9764:
 22572  00825E  5004               	movf	SYS_TimerStarted@t^0,w,c
 22573  008260  1005               	iorwf	(SYS_TimerStarted@t+1)^0,w,c
 22574  008262  A4D8               	btfss	status,2,c
 22575  008264  D7E7               	goto	l9756
 22576                           
 22577                           ;../sys/sys_src/sysTimer.c: 107:   return 0;
 22578  008266  0E00               	movlw	0
 22579  008268  0012               	return		;funcret
 22580  00826A                     __end_of_SYS_TimerStarted:
 22581                           	opt callstack 0
 22582                           
 22583 ;; *************** function _nwkRouteFrameReceived *****************
 22584 ;; Defined at:
 22585 ;;		line 194 in file "../nwk/nwk_src/nwkRoute.c"
 22586 ;; Parameters:    Size  Location     Type
 22587 ;;  frame           2   10[COMRAM] PTR struct NwkFrame_t
 22588 ;;		 -> nwkFrameFrames(685), NULL(0), 
 22589 ;; Auto vars:     Size  Location     Type
 22590 ;;  discovery       1   16[COMRAM] _Bool 
 22591 ;;  header          2   20[COMRAM] PTR __pack struct NwkFra
 22592 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 22593 ;;  entry           2   18[COMRAM] PTR struct NWK_RouteTabl
 22594 ;;		 -> nwkRouteTable(70), NULL(0), 
 22595 ;; Return value:  Size  Location     Type
 22596 ;;                  1    wreg      void 
 22597 ;; Registers used:
 22598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22599 ;; Tracked objects:
 22600 ;;		On entry : 3F/1
 22601 ;;		On exit  : 0/0
 22602 ;;		Unchanged: 0/0
 22603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22605 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22606 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22607 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22608 ;;Total ram usage:       12 bytes
 22609 ;; Hardware stack levels used:    1
 22610 ;; Hardware stack levels required when called:    8
 22611 ;; This function calls:
 22612 ;;		_NWK_RouteFindEntry
 22613 ;;		_NWK_RouteNewEntry
 22614 ;; This function is called by:
 22615 ;;		_nwkRxHandleReceivedFrame
 22616 ;; This function uses a non-reentrant model
 22617 ;;
 22618                           
 22619                           	psect	text138
 22620  003694                     __ptext138:
 22621                           	opt callstack 0
 22622  003694                     _nwkRouteFrameReceived:
 22623                           	opt callstack 18
 22624                           
 22625                           ; BSR set to: 1
 22626                           ;../nwk/nwk_src/nwkRoute.c: 194: void nwkRouteFrameReceived(NwkFrame_t *frame);../nwk/nw
      +                          k_src/nwkRoute.c: 195: {;../nwk/nwk_src/nwkRoute.c: 197:   NwkFrameHeader_t *header = &f
      +                          rame->header;
 22627                           
 22628                           ;incstack = 0
 22629  003694  0E02               	movlw	2
 22630  003696  240B               	addwf	nwkRouteFrameReceived@frame^0,w,c
 22631  003698  6E15               	movwf	nwkRouteFrameReceived@header^0,c
 22632  00369A  0E00               	movlw	0
 22633  00369C  200C               	addwfc	(nwkRouteFrameReceived@frame+1)^0,w,c
 22634  00369E  6E16               	movwf	(nwkRouteFrameReceived@header+1)^0,c
 22635                           
 22636                           ; BSR set to: 1
 22637                           ;../nwk/nwk_src/nwkRoute.c: 198:   NWK_RouteTableEntry_t *entry;;../nwk/nwk_src/nwkRoute
      +                          .c: 200:   if ((header->macSrcAddr & 0x8000) &&
 22638  0036A0  EE20 F007          	lfsr	2,7
 22639  0036A4  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22640  0036A6  26D9               	addwf	fsr2l,f,c
 22641  0036A8  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22642  0036AA  22DA               	addwfc	fsr2h,f,c
 22643  0036AC  006F FF78  F00D    	movff	postinc2,??_nwkRouteFrameReceived
 22644  0036B2  006F FF74  F00E    	movff	postdec2,??_nwkRouteFrameReceived+1
 22645  0036B8  AE0E               	btfss	(??_nwkRouteFrameReceived+1)^0,7,c
 22646  0036BA  D015               	goto	l10744
 22647                           
 22648                           ; BSR set to: 1
 22649  0036BC  EE20 F00B          	lfsr	2,11
 22650  0036C0  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22651  0036C2  26D9               	addwf	fsr2l,f,c
 22652  0036C4  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22653  0036C6  22DA               	addwfc	fsr2h,f,c
 22654  0036C8  EE10 F007          	lfsr	1,7
 22655  0036CC  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22656  0036CE  26E1               	addwf	fsr1l,f,c
 22657  0036D0  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22658  0036D2  22E2               	addwfc	fsr1h,f,c
 22659  0036D4  50DE               	movf	postinc2,w,c
 22660  0036D6  18E6               	xorwf	postinc1,w,c
 22661  0036D8  E105               	bnz	u9110
 22662  0036DA  50DE               	movf	postinc2,w,c
 22663  0036DC  18E6               	xorwf	postinc1,w,c
 22664  0036DE  A4D8               	btfss	status,2,c
 22665  0036E0  0012               	return	
 22666  0036E2  D001               	goto	l10744
 22667  0036E4                     u9110:
 22668  0036E4  0012               	return	
 22669  0036E6                     l10744:
 22670                           
 22671                           ; BSR set to: 1
 22672                           ;../nwk/nwk_src/nwkRoute.c: 204:   if (0xffff == header->macDstPanId)
 22673  0036E6  EE20 F003          	lfsr	2,3
 22674  0036EA  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22675  0036EC  26D9               	addwf	fsr2l,f,c
 22676  0036EE  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22677  0036F0  22DA               	addwfc	fsr2h,f,c
 22678  0036F2  28DE               	incf	postinc2,w,c
 22679  0036F4  E103               	bnz	l10748
 22680  0036F6  28DE               	incf	postinc2,w,c
 22681  0036F8  B4D8               	btfsc	status,2,c
 22682  0036FA  0012               	return	
 22683  0036FC                     l10748:
 22684                           
 22685                           ; BSR set to: 1
 22686                           ;../nwk/nwk_src/nwkRoute.c: 207:   entry = NWK_RouteFindEntry(header->nwkSrcAddr, 0);
 22687  0036FC  EE20 F00B          	lfsr	2,11
 22688  003700  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22689  003702  26D9               	addwf	fsr2l,f,c
 22690  003704  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22691  003706  22DA               	addwfc	fsr2h,f,c
 22692  003708  006F FF78  F002    	movff	postinc2,NWK_RouteFindEntry@dst
 22693  00370E  006F FF74  F003    	movff	postdec2,NWK_RouteFindEntry@dst+1
 22694  003714  0E00               	movlw	0
 22695  003716  6E04               	movwf	NWK_RouteFindEntry@multicast^0,c
 22696  003718  EC3E  F03C         	call	_NWK_RouteFindEntry	;wreg free
 22697  00371C  0060  F008  F013   	movff	?_NWK_RouteFindEntry,nwkRouteFrameReceived@entry
 22698  003722  0060  F00C  F014   	movff	?_NWK_RouteFindEntry+1,nwkRouteFrameReceived@entry+1
 22699                           
 22700                           ;../nwk/nwk_src/nwkRoute.c: 209:   if (entry)
 22701  003728  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 22702  00372A  1014               	iorwf	(nwkRouteFrameReceived@entry+1)^0,w,c
 22703  00372C  B4D8               	btfsc	status,2,c
 22704  00372E  D067               	goto	l10770
 22705                           
 22706                           ;../nwk/nwk_src/nwkRoute.c: 210:   {;../nwk/nwk_src/nwkRoute.c: 211:     _Bool discovery
      +                           = (0xffff == header->macDstAddr &&
 22707  003730  0E00               	movlw	0
 22708  003732  6E12               	movwf	_nwkRouteFrameReceived$4265^0,c
 22709  003734  EE20 F005          	lfsr	2,5
 22710  003738  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22711  00373A  26D9               	addwf	fsr2l,f,c
 22712  00373C  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22713  00373E  22DA               	addwfc	fsr2h,f,c
 22714  003740  28DE               	incf	postinc2,w,c
 22715  003742  E113               	bnz	l1986
 22716  003744  28DE               	incf	postinc2,w,c
 22717  003746  A4D8               	btfss	status,2,c
 22718  003748  D010               	goto	l1986
 22719  00374A  EE20 F00D          	lfsr	2,13
 22720  00374E  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22721  003750  26D9               	addwf	fsr2l,f,c
 22722  003752  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22723  003754  22DA               	addwfc	fsr2h,f,c
 22724  003756  0101               	movlb	1	; () banked
 22725  003758  5100               	movf	_nwkIb& (0+255),w,b
 22726  00375A  18DE               	xorwf	postinc2,w,c
 22727  00375C  E106               	bnz	l1986
 22728  00375E  5101               	movf	(_nwkIb+1)& (0+255),w,b
 22729  003760  18DE               	xorwf	postinc2,w,c
 22730  003762  A4D8               	btfss	status,2,c
 22731  003764  D002               	goto	l1986
 22732                           
 22733                           ; BSR set to: 1
 22734  003766  0E01               	movlw	1
 22735  003768  6E12               	movwf	_nwkRouteFrameReceived$4265^0,c
 22736  00376A                     l1986:
 22737  00376A  5012               	movf	_nwkRouteFrameReceived$4265^0,w,c
 22738  00376C  B4D8               	btfsc	status,2,c
 22739  00376E  D002               	goto	u9160
 22740  003770  0E01               	movlw	1
 22741  003772  D001               	goto	u9170
 22742  003774                     u9160:
 22743  003774  0E00               	movlw	0
 22744  003776                     u9170:
 22745  003776  6E11               	movwf	nwkRouteFrameReceived@discovery^0,c
 22746                           
 22747                           ;../nwk/nwk_src/nwkRoute.c: 214:     if ((entry->nextHopAddr != header->macSrcAddr && fr
      +                          ame->rx.lqi > entry->lqi) || discovery)
 22748  003778  EE20 F007          	lfsr	2,7
 22749  00377C  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22750  00377E  26D9               	addwf	fsr2l,f,c
 22751  003780  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22752  003782  22DA               	addwfc	fsr2h,f,c
 22753  003784  EE10 F003          	lfsr	1,3
 22754  003788  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 22755  00378A  26E1               	addwf	fsr1l,f,c
 22756  00378C  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 22757  00378E  22E2               	addwfc	fsr1h,f,c
 22758  003790  50DE               	movf	postinc2,w,c
 22759  003792  18E6               	xorwf	postinc1,w,c
 22760  003794  E104               	bnz	u9180
 22761  003796  50DE               	movf	postinc2,w,c
 22762  003798  18E6               	xorwf	postinc1,w,c
 22763  00379A  B4D8               	btfsc	status,2,c
 22764  00379C  D010               	goto	u9190
 22765  00379E                     u9180:
 22766  00379E  EE20 F083          	lfsr	2,131
 22767  0037A2  500B               	movf	nwkRouteFrameReceived@frame^0,w,c
 22768  0037A4  26D9               	addwf	fsr2l,f,c
 22769  0037A6  500C               	movf	(nwkRouteFrameReceived@frame+1)^0,w,c
 22770  0037A8  22DA               	addwfc	fsr2h,f,c
 22771  0037AA  EE10 F006          	lfsr	1,6
 22772  0037AE  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 22773  0037B0  26E1               	addwf	fsr1l,f,c
 22774  0037B2  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 22775  0037B4  22E2               	addwfc	fsr1h,f,c
 22776  0037B6  50DE               	movf	postinc2,w,c
 22777  0037B8  5CE6               	subwf	postinc1,w,c
 22778  0037BA  A0D8               	btfss	status,0,c
 22779  0037BC  D003               	goto	u9200
 22780  0037BE                     u9190:
 22781  0037BE  5011               	movf	nwkRouteFrameReceived@discovery^0,w,c
 22782  0037C0  B4D8               	btfsc	status,2,c
 22783  0037C2  D049               	goto	l10776
 22784  0037C4                     u9200:
 22785                           
 22786                           ;../nwk/nwk_src/nwkRoute.c: 215:     {;../nwk/nwk_src/nwkRoute.c: 216:       entry->next
      +                          HopAddr = header->macSrcAddr;
 22787  0037C4  EE20 F007          	lfsr	2,7
 22788  0037C8  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22789  0037CA  26D9               	addwf	fsr2l,f,c
 22790  0037CC  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22791  0037CE  22DA               	addwfc	fsr2h,f,c
 22792  0037D0  EE10 F003          	lfsr	1,3
 22793  0037D4  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 22794  0037D6  26E1               	addwf	fsr1l,f,c
 22795  0037D8  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 22796  0037DA  22E2               	addwfc	fsr1h,f,c
 22797  0037DC  006F FF7B FFE6     	movff	postinc2,postinc1
 22798  0037E2  006F FF77 FFE5     	movff	postdec2,postdec1
 22799                           
 22800                           ;../nwk/nwk_src/nwkRoute.c: 217:       entry->score = 3;
 22801  0037E8  0060  F04F  FFD9   	movff	nwkRouteFrameReceived@entry,fsr2l
 22802  0037EE  0060  F053  FFDA   	movff	nwkRouteFrameReceived@entry+1,fsr2h
 22803  0037F4  50DF               	movf	indf2,w,c
 22804  0037F6  0B0F               	andlw	-241
 22805  0037F8  0930               	iorlw	48
 22806  0037FA  6EDF               	movwf	indf2,c
 22807  0037FC  D02C               	goto	l10776
 22808  0037FE                     l10770:
 22809                           
 22810                           ;../nwk/nwk_src/nwkRoute.c: 221:   {;../nwk/nwk_src/nwkRoute.c: 222:     entry = NWK_Rou
      +                          teNewEntry();
 22811  0037FE  EC50  F031         	call	_NWK_RouteNewEntry	;wreg free
 22812  003802  0060  F008  F013   	movff	?_NWK_RouteNewEntry,nwkRouteFrameReceived@entry
 22813  003808  0060  F00C  F014   	movff	?_NWK_RouteNewEntry+1,nwkRouteFrameReceived@entry+1
 22814                           
 22815                           ;../nwk/nwk_src/nwkRoute.c: 224:     entry->dstAddr = header->nwkSrcAddr;
 22816  00380E  EE20 F00B          	lfsr	2,11
 22817  003812  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22818  003814  26D9               	addwf	fsr2l,f,c
 22819  003816  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22820  003818  22DA               	addwfc	fsr2h,f,c
 22821  00381A  EE10 F001          	lfsr	1,1
 22822  00381E  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 22823  003820  26E1               	addwf	fsr1l,f,c
 22824  003822  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 22825  003824  22E2               	addwfc	fsr1h,f,c
 22826  003826  006F FF7B FFE6     	movff	postinc2,postinc1
 22827  00382C  006F FF77 FFE5     	movff	postdec2,postdec1
 22828                           
 22829                           ;../nwk/nwk_src/nwkRoute.c: 225:     entry->nextHopAddr = header->macSrcAddr;
 22830  003832  EE20 F007          	lfsr	2,7
 22831  003836  5015               	movf	nwkRouteFrameReceived@header^0,w,c
 22832  003838  26D9               	addwf	fsr2l,f,c
 22833  00383A  5016               	movf	(nwkRouteFrameReceived@header+1)^0,w,c
 22834  00383C  22DA               	addwfc	fsr2h,f,c
 22835  00383E  EE10 F003          	lfsr	1,3
 22836  003842  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 22837  003844  26E1               	addwf	fsr1l,f,c
 22838  003846  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 22839  003848  22E2               	addwfc	fsr1h,f,c
 22840  00384A  006F FF7B FFE6     	movff	postinc2,postinc1
 22841  003850  006F FF77 FFE5     	movff	postdec2,postdec1
 22842  003856                     l10776:
 22843                           
 22844                           ;../nwk/nwk_src/nwkRoute.c: 228:   entry->lqi = frame->rx.lqi;
 22845  003856  EE20 F083          	lfsr	2,131
 22846  00385A  500B               	movf	nwkRouteFrameReceived@frame^0,w,c
 22847  00385C  26D9               	addwf	fsr2l,f,c
 22848  00385E  500C               	movf	(nwkRouteFrameReceived@frame+1)^0,w,c
 22849  003860  22DA               	addwfc	fsr2h,f,c
 22850  003862  EE10 F006          	lfsr	1,6
 22851  003866  5013               	movf	nwkRouteFrameReceived@entry^0,w,c
 22852  003868  26E1               	addwf	fsr1l,f,c
 22853  00386A  5014               	movf	(nwkRouteFrameReceived@entry+1)^0,w,c
 22854  00386C  22E2               	addwfc	fsr1h,f,c
 22855  00386E  006F FF7F FFE7     	movff	indf2,indf1
 22856  003874  0012               	return		;funcret
 22857  003876                     __end_of_nwkRouteFrameReceived:
 22858                           	opt callstack 0
 22859                           
 22860 ;; *************** function _NWK_RouteNewEntry *****************
 22861 ;; Defined at:
 22862 ;;		line 105 in file "../nwk/nwk_src/nwkRoute.c"
 22863 ;; Parameters:    Size  Location     Type
 22864 ;;		None
 22865 ;; Auto vars:     Size  Location     Type
 22866 ;;  i               1    5[COMRAM] unsigned char 
 22867 ;;  entry           2    8[COMRAM] PTR struct NWK_RouteTabl
 22868 ;;		 -> nwkRouteTable(70), NULL(0), 
 22869 ;;  iter            2    6[COMRAM] PTR struct NWK_RouteTabl
 22870 ;;		 -> nwkRouteTable(70), 
 22871 ;; Return value:  Size  Location     Type
 22872 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
 22873 ;; Registers used:
 22874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 22875 ;; Tracked objects:
 22876 ;;		On entry : 0/1
 22877 ;;		On exit  : 0/0
 22878 ;;		Unchanged: 0/0
 22879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22880 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22881 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22882 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22883 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22884 ;;Total ram usage:        9 bytes
 22885 ;; Hardware stack levels used:    1
 22886 ;; Hardware stack levels required when called:    7
 22887 ;; This function calls:
 22888 ;;		Nothing
 22889 ;; This function is called by:
 22890 ;;		_nwkRouteFrameReceived
 22891 ;; This function uses a non-reentrant model
 22892 ;;
 22893                           
 22894                           	psect	text139
 22895  0062A0                     __ptext139:
 22896                           	opt callstack 0
 22897  0062A0                     _NWK_RouteNewEntry:
 22898                           	opt callstack 18
 22899                           
 22900                           ;../nwk/nwk_src/nwkRoute.c: 107:   NWK_RouteTableEntry_t *iter = nwkRouteTable;
 22901                           
 22902                           ;incstack = 0
 22903  0062A0  0E44               	movlw	low _nwkRouteTable
 22904  0062A2  6E07               	movwf	NWK_RouteNewEntry@iter^0,c
 22905  0062A4  0E02               	movlw	high _nwkRouteTable
 22906  0062A6  6E08               	movwf	(NWK_RouteNewEntry@iter+1)^0,c
 22907                           
 22908                           ;../nwk/nwk_src/nwkRoute.c: 108:   NWK_RouteTableEntry_t *entry = ((void*)0);
 22909  0062A8  0E00               	movlw	0
 22910  0062AA  6E09               	movwf	NWK_RouteNewEntry@entry^0,c
 22911  0062AC  0E00               	movlw	0
 22912  0062AE  6E0A               	movwf	(NWK_RouteNewEntry@entry+1)^0,c
 22913                           
 22914                           ;../nwk/nwk_src/nwkRoute.c: 110:   for (uint8_t i = 0; i < 10; i++, iter++)
 22915  0062B0  0E00               	movlw	0
 22916  0062B2  6E06               	movwf	NWK_RouteNewEntry@i^0,c
 22917  0062B4                     l10036:
 22918                           
 22919                           ;../nwk/nwk_src/nwkRoute.c: 111:   {;../nwk/nwk_src/nwkRoute.c: 112:     if (iter->fixed
      +                          )
 22920  0062B4  0060  F01F  FFD9   	movff	NWK_RouteNewEntry@iter,fsr2l
 22921  0062BA  0060  F023  FFDA   	movff	NWK_RouteNewEntry@iter+1,fsr2h
 22922  0062C0  B0DF               	btfsc	indf2,0,c
 22923  0062C2  D02A               	goto	l10050
 22924                           
 22925                           ;../nwk/nwk_src/nwkRoute.c: 115:     if (0 == iter->rank)
 22926  0062C4  EE20 F005          	lfsr	2,5
 22927  0062C8  5007               	movf	NWK_RouteNewEntry@iter^0,w,c
 22928  0062CA  26D9               	addwf	fsr2l,f,c
 22929  0062CC  5008               	movf	(NWK_RouteNewEntry@iter+1)^0,w,c
 22930  0062CE  22DA               	addwfc	fsr2h,f,c
 22931  0062D0  50DF               	movf	indf2,w,c
 22932  0062D2  A4D8               	btfss	status,2,c
 22933  0062D4  D007               	goto	l10044
 22934                           
 22935                           ;../nwk/nwk_src/nwkRoute.c: 116:     {;../nwk/nwk_src/nwkRoute.c: 117:       entry = ite
      +                          r;
 22936  0062D6  0060  F01C  F009   	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
 22937  0062DC  0060  F020  F00A   	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
 22938                           
 22939                           ;../nwk/nwk_src/nwkRoute.c: 118:       break;
 22940  0062E2  D022               	goto	u8120
 22941  0062E4                     l10044:
 22942                           
 22943                           ;../nwk/nwk_src/nwkRoute.c: 121:     if (((void*)0) == entry || iter->rank < entry->rank
      +                          )
 22944  0062E4  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 22945  0062E6  100A               	iorwf	(NWK_RouteNewEntry@entry+1)^0,w,c
 22946  0062E8  B4D8               	btfsc	status,2,c
 22947  0062EA  D010               	goto	u8110
 22948  0062EC  EE20 F005          	lfsr	2,5
 22949  0062F0  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 22950  0062F2  26D9               	addwf	fsr2l,f,c
 22951  0062F4  500A               	movf	(NWK_RouteNewEntry@entry+1)^0,w,c
 22952  0062F6  22DA               	addwfc	fsr2h,f,c
 22953  0062F8  EE10 F005          	lfsr	1,5
 22954  0062FC  5007               	movf	NWK_RouteNewEntry@iter^0,w,c
 22955  0062FE  26E1               	addwf	fsr1l,f,c
 22956  006300  5008               	movf	(NWK_RouteNewEntry@iter+1)^0,w,c
 22957  006302  22E2               	addwfc	fsr1h,f,c
 22958  006304  50DE               	movf	postinc2,w,c
 22959  006306  5CE6               	subwf	postinc1,w,c
 22960  006308  B0D8               	btfsc	status,0,c
 22961  00630A  D006               	goto	l10050
 22962  00630C                     u8110:
 22963                           
 22964                           ;../nwk/nwk_src/nwkRoute.c: 122:       entry = iter;
 22965  00630C  0060  F01C  F009   	movff	NWK_RouteNewEntry@iter,NWK_RouteNewEntry@entry
 22966  006312  0060  F020  F00A   	movff	NWK_RouteNewEntry@iter+1,NWK_RouteNewEntry@entry+1
 22967  006318                     l10050:
 22968  006318  2A06               	incf	NWK_RouteNewEntry@i^0,f,c
 22969  00631A  0E07               	movlw	7
 22970  00631C  2607               	addwf	NWK_RouteNewEntry@iter^0,f,c
 22971  00631E  0E00               	movlw	0
 22972  006320  2208               	addwfc	(NWK_RouteNewEntry@iter+1)^0,f,c
 22973  006322  0E09               	movlw	9
 22974  006324  6406               	cpfsgt	NWK_RouteNewEntry@i^0,c
 22975  006326  D7C6               	goto	l10036
 22976  006328                     u8120:
 22977                           
 22978                           ;../nwk/nwk_src/nwkRoute.c: 125:   entry->multicast = 0;
 22979  006328  0060  F027  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
 22980  00632E  0060  F02B  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
 22981  006334  92DF               	bcf	indf2,1,c
 22982                           
 22983                           ;../nwk/nwk_src/nwkRoute.c: 126:   entry->score = 3;
 22984  006336  0060  F027  FFD9   	movff	NWK_RouteNewEntry@entry,fsr2l
 22985  00633C  0060  F02B  FFDA   	movff	NWK_RouteNewEntry@entry+1,fsr2h
 22986  006342  50DF               	movf	indf2,w,c
 22987  006344  0B0F               	andlw	-241
 22988  006346  0930               	iorlw	48
 22989  006348  6EDF               	movwf	indf2,c
 22990                           
 22991                           ;../nwk/nwk_src/nwkRoute.c: 127:   entry->rank = 128;
 22992  00634A  EE20 F005          	lfsr	2,5
 22993  00634E  5009               	movf	NWK_RouteNewEntry@entry^0,w,c
 22994  006350  26D9               	addwf	fsr2l,f,c
 22995  006352  500A               	movf	(NWK_RouteNewEntry@entry+1)^0,w,c
 22996  006354  22DA               	addwfc	fsr2h,f,c
 22997  006356  0E80               	movlw	128
 22998  006358  6EDF               	movwf	indf2,c
 22999                           
 23000                           ;../nwk/nwk_src/nwkRoute.c: 129:   return entry;
 23001  00635A  0060  F024  F002   	movff	NWK_RouteNewEntry@entry,?_NWK_RouteNewEntry
 23002  006360  0060  F028  F003   	movff	NWK_RouteNewEntry@entry+1,?_NWK_RouteNewEntry+1
 23003  006366  0012               	return		;funcret
 23004  006368                     __end_of_NWK_RouteNewEntry:
 23005                           	opt callstack 0
 23006                           
 23007 ;; *************** function _nwkRxHandleIndication *****************
 23008 ;; Defined at:
 23009 ;;		line 453 in file "../nwk/nwk_src/nwkRx.c"
 23010 ;; Parameters:    Size  Location     Type
 23011 ;;  frame           2   58[COMRAM] PTR struct NwkFrame_t
 23012 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23013 ;; Auto vars:     Size  Location     Type
 23014 ;;  ack             1   62[COMRAM] _Bool 
 23015 ;; Return value:  Size  Location     Type
 23016 ;;                  1    wreg      void 
 23017 ;; Registers used:
 23018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23019 ;; Tracked objects:
 23020 ;;		On entry : 0/0
 23021 ;;		On exit  : 0/0
 23022 ;;		Unchanged: 0/0
 23023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23024 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23025 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23026 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23027 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23028 ;;Total ram usage:        5 bytes
 23029 ;; Hardware stack levels used:    1
 23030 ;; Hardware stack levels required when called:   12
 23031 ;; This function calls:
 23032 ;;		_nwkRxIndicateFrame
 23033 ;;		_nwkRxSendAck
 23034 ;; This function is called by:
 23035 ;;		_nwkRxTaskHandler
 23036 ;; This function uses a non-reentrant model
 23037 ;;
 23038                           
 23039                           	psect	text140
 23040  006368                     __ptext140:
 23041                           	opt callstack 0
 23042  006368                     _nwkRxHandleIndication:
 23043                           	opt callstack 15
 23044                           
 23045                           ;../nwk/nwk_src/nwkRx.c: 453: static void nwkRxHandleIndication(NwkFrame_t *frame);../nw
      +                          k/nwk_src/nwkRx.c: 454: {;../nwk/nwk_src/nwkRx.c: 455:   _Bool ack;;../nwk/nwk_src/nwkRx
      +                          .c: 457:   nwkRxAckControl = 0;
 23046                           
 23047                           ;incstack = 0
 23048  006368  0E00               	movlw	0
 23049  00636A  0100               	movlb	0	; () banked
 23050  00636C  6FC3               	movwf	_nwkRxAckControl& (0+255),b
 23051                           
 23052                           ; BSR set to: 0
 23053                           ;../nwk/nwk_src/nwkRx.c: 458:   ack = nwkRxIndicateFrame(frame);
 23054  00636E  0060  F0EC  F021   	movff	nwkRxHandleIndication@frame,nwkRxIndicateFrame@frame
 23055  006374  0060  F0F0  F022   	movff	nwkRxHandleIndication@frame+1,nwkRxIndicateFrame@frame+1
 23056  00637A  EC56  F018         	call	_nwkRxIndicateFrame	;wreg free
 23057  00637E  6E3F               	movwf	nwkRxHandleIndication@ack^0,c
 23058                           
 23059                           ;../nwk/nwk_src/nwkRx.c: 460:   if (0 == frame->header.nwkFcf.ackRequest)
 23060  006380  EE20 F00B          	lfsr	2,11
 23061  006384  503B               	movf	nwkRxHandleIndication@frame^0,w,c
 23062  006386  26D9               	addwf	fsr2l,f,c
 23063  006388  503C               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
 23064  00638A  22DA               	addwfc	fsr2h,f,c
 23065  00638C  B0DF               	btfsc	indf2,0,c
 23066  00638E  D002               	goto	l15656
 23067                           
 23068                           ;../nwk/nwk_src/nwkRx.c: 461:     ack = 0;
 23069  006390  0E00               	movlw	0
 23070  006392  6E3F               	movwf	nwkRxHandleIndication@ack^0,c
 23071  006394                     l15656:
 23072                           
 23073                           ;../nwk/nwk_src/nwkRx.c: 463:   if (0xffff == frame->header.macDstAddr &&
 23074  006394  EE20 F007          	lfsr	2,7
 23075  006398  503B               	movf	nwkRxHandleIndication@frame^0,w,c
 23076  00639A  26D9               	addwf	fsr2l,f,c
 23077  00639C  503C               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
 23078  00639E  22DA               	addwfc	fsr2h,f,c
 23079  0063A0  28DE               	incf	postinc2,w,c
 23080  0063A2  E11B               	bnz	l15664
 23081  0063A4  28DE               	incf	postinc2,w,c
 23082  0063A6  A4D8               	btfss	status,2,c
 23083  0063A8  D018               	goto	l15664
 23084  0063AA  EE20 F00F          	lfsr	2,15
 23085  0063AE  503B               	movf	nwkRxHandleIndication@frame^0,w,c
 23086  0063B0  26D9               	addwf	fsr2l,f,c
 23087  0063B2  503C               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
 23088  0063B4  22DA               	addwfc	fsr2h,f,c
 23089  0063B6  0101               	movlb	1	; () banked
 23090  0063B8  5100               	movf	_nwkIb& (0+255),w,b
 23091  0063BA  18DE               	xorwf	postinc2,w,c
 23092  0063BC  E10E               	bnz	l15664
 23093  0063BE  5101               	movf	(_nwkIb+1)& (0+255),w,b
 23094  0063C0  18DE               	xorwf	postinc2,w,c
 23095  0063C2  A4D8               	btfss	status,2,c
 23096  0063C4  D00A               	goto	l15664
 23097                           
 23098                           ; BSR set to: 1
 23099  0063C6  EE20 F00B          	lfsr	2,11
 23100  0063CA  503B               	movf	nwkRxHandleIndication@frame^0,w,c
 23101  0063CC  26D9               	addwf	fsr2l,f,c
 23102  0063CE  503C               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
 23103  0063D0  22DA               	addwfc	fsr2h,f,c
 23104  0063D2  B6DF               	btfsc	indf2,3,c
 23105  0063D4  D002               	goto	l15664
 23106                           
 23107                           ; BSR set to: 1
 23108                           ;../nwk/nwk_src/nwkRx.c: 466:     ack = 1;
 23109  0063D6  0E01               	movlw	1
 23110  0063D8  6E3F               	movwf	nwkRxHandleIndication@ack^0,c
 23111  0063DA                     l15664:
 23112                           
 23113                           ;../nwk/nwk_src/nwkRx.c: 468:   if (0xffff == frame->header.macDstPanId)
 23114  0063DA  EE20 F005          	lfsr	2,5
 23115  0063DE  503B               	movf	nwkRxHandleIndication@frame^0,w,c
 23116  0063E0  26D9               	addwf	fsr2l,f,c
 23117  0063E2  503C               	movf	(nwkRxHandleIndication@frame+1)^0,w,c
 23118  0063E4  22DA               	addwfc	fsr2h,f,c
 23119  0063E6  28DE               	incf	postinc2,w,c
 23120  0063E8  E105               	bnz	l15668
 23121  0063EA  28DE               	incf	postinc2,w,c
 23122  0063EC  A4D8               	btfss	status,2,c
 23123  0063EE  D002               	goto	l15668
 23124                           
 23125                           ;../nwk/nwk_src/nwkRx.c: 469:     ack = 0;
 23126  0063F0  0E00               	movlw	0
 23127  0063F2  6E3F               	movwf	nwkRxHandleIndication@ack^0,c
 23128  0063F4                     l15668:
 23129                           
 23130                           ;../nwk/nwk_src/nwkRx.c: 471:   if (0xffff == nwkIb.addr)
 23131  0063F4  0101               	movlb	1	; () banked
 23132  0063F6  2900               	incf	_nwkIb& (0+255),w,b
 23133  0063F8  E105               	bnz	l2237
 23134  0063FA  2901               	incf	(_nwkIb+1)& (0+255),w,b
 23135  0063FC  A4D8               	btfss	status,2,c
 23136  0063FE  D002               	goto	l2237
 23137                           
 23138                           ; BSR set to: 1
 23139                           ;../nwk/nwk_src/nwkRx.c: 472:     ack = 0;
 23140  006400  0E00               	movlw	0
 23141  006402  6E3F               	movwf	nwkRxHandleIndication@ack^0,c
 23142  006404                     l2237:
 23143                           
 23144                           ; BSR set to: 1
 23145                           ;../nwk/nwk_src/nwkRx.c: 474:   if (ack)
 23146  006404  503F               	movf	nwkRxHandleIndication@ack^0,w,c
 23147  006406  B4D8               	btfsc	status,2,c
 23148  006408  D008               	goto	l15674
 23149                           
 23150                           ; BSR set to: 1
 23151                           ;../nwk/nwk_src/nwkRx.c: 475:     nwkRxSendAck(frame);
 23152  00640A  0060  F0EC  F02A   	movff	nwkRxHandleIndication@frame,nwkRxSendAck@frame
 23153  006410  0060  F0F0  F02B   	movff	nwkRxHandleIndication@frame+1,nwkRxSendAck@frame+1
 23154  006416  ECE9  F029         	call	_nwkRxSendAck	;wreg free
 23155  00641A                     l15674:
 23156                           
 23157                           ;../nwk/nwk_src/nwkRx.c: 477:   frame->state = NWK_RX_STATE_FINISH;
 23158  00641A  0060  F0EF  FFD9   	movff	nwkRxHandleIndication@frame,fsr2l
 23159  006420  0060  F0F3  FFDA   	movff	nwkRxHandleIndication@frame+1,fsr2h
 23160  006426  0E24               	movlw	36
 23161  006428  6EDF               	movwf	indf2,c
 23162  00642A  0012               	return		;funcret
 23163  00642C                     __end_of_nwkRxHandleIndication:
 23164                           	opt callstack 0
 23165                           
 23166 ;; *************** function _nwkRxSendAck *****************
 23167 ;; Defined at:
 23168 ;;		line 136 in file "../nwk/nwk_src/nwkRx.c"
 23169 ;; Parameters:    Size  Location     Type
 23170 ;;  frame           2   41[COMRAM] PTR struct NwkFrame_t
 23171 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23172 ;; Auto vars:     Size  Location     Type
 23173 ;;  ack             2   45[COMRAM] PTR struct NwkFrame_t
 23174 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23175 ;;  command         2   43[COMRAM] PTR __pack struct NwkCom
 23176 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 23177 ;; Return value:  Size  Location     Type
 23178 ;;                  1    wreg      void 
 23179 ;; Registers used:
 23180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23181 ;; Tracked objects:
 23182 ;;		On entry : 3F/1
 23183 ;;		On exit  : 0/0
 23184 ;;		Unchanged: 0/0
 23185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23187 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23189 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23190 ;;Total ram usage:        6 bytes
 23191 ;; Hardware stack levels used:    1
 23192 ;; Hardware stack levels required when called:   11
 23193 ;; This function calls:
 23194 ;;		_nwkFrameAlloc
 23195 ;;		_nwkFrameCommandInit
 23196 ;;		_nwkTxFrame
 23197 ;; This function is called by:
 23198 ;;		_nwkRxHandleIndication
 23199 ;; This function uses a non-reentrant model
 23200 ;;
 23201                           
 23202                           	psect	text141
 23203  0053D2                     __ptext141:
 23204                           	opt callstack 0
 23205  0053D2                     _nwkRxSendAck:
 23206                           	opt callstack 15
 23207                           
 23208                           ; BSR set to: 1
 23209                           ;../nwk/nwk_src/nwkRx.c: 136: static void nwkRxSendAck(NwkFrame_t *frame);../nwk/nwk_src
      +                          /nwkRx.c: 137: {;../nwk/nwk_src/nwkRx.c: 138:   NwkFrame_t *ack;;../nwk/nwk_src/nwkRx.c:
      +                           139:   NwkCommandAck_t *command;;../nwk/nwk_src/nwkRx.c: 141:   if (((void*)0) == (ack 
      +                          = nwkFrameAlloc()))
 23210                           
 23211                           ;incstack = 0
 23212  0053D2  ECE8  F033         	call	_nwkFrameAlloc	;wreg free
 23213  0053D6  0060  F038  F02E   	movff	?_nwkFrameAlloc,nwkRxSendAck@ack
 23214  0053DC  0060  F03C  F02F   	movff	?_nwkFrameAlloc+1,nwkRxSendAck@ack+1
 23215  0053E2  502E               	movf	nwkRxSendAck@ack^0,w,c
 23216  0053E4  102F               	iorwf	(nwkRxSendAck@ack+1)^0,w,c
 23217  0053E6  B4D8               	btfsc	status,2,c
 23218  0053E8  0012               	return	
 23219                           
 23220                           ;../nwk/nwk_src/nwkRx.c: 144:   nwkFrameCommandInit(ack);
 23221  0053EA  0060  F0B8  F002   	movff	nwkRxSendAck@ack,nwkFrameCommandInit@frame
 23222  0053F0  0060  F0BC  F003   	movff	nwkRxSendAck@ack+1,nwkFrameCommandInit@frame+1
 23223  0053F6  ECB8  F041         	call	_nwkFrameCommandInit	;wreg free
 23224                           
 23225                           ; BSR set to: 1
 23226                           ;../nwk/nwk_src/nwkRx.c: 146:   ack->size += sizeof(NwkCommandAck_t);
 23227  0053FA  EE20 F001          	lfsr	2,1
 23228  0053FE  502E               	movf	nwkRxSendAck@ack^0,w,c
 23229  005400  26D9               	addwf	fsr2l,f,c
 23230  005402  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 23231  005404  22DA               	addwfc	fsr2h,f,c
 23232  005406  0E03               	movlw	3
 23233  005408  26DF               	addwf	indf2,f,c
 23234                           
 23235                           ; BSR set to: 1
 23236                           ;../nwk/nwk_src/nwkRx.c: 147:   ack->tx.confirm = ((void*)0);
 23237  00540A  EE20 F087          	lfsr	2,135
 23238  00540E  502E               	movf	nwkRxSendAck@ack^0,w,c
 23239  005410  26D9               	addwf	fsr2l,f,c
 23240  005412  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 23241  005414  22DA               	addwfc	fsr2h,f,c
 23242  005416  0E00               	movlw	0
 23243  005418  6EDE               	movwf	postinc2,c
 23244  00541A  0E00               	movlw	0
 23245  00541C  6EDD               	movwf	postdec2,c
 23246                           
 23247                           ; BSR set to: 1
 23248                           ;../nwk/nwk_src/nwkRx.c: 149:   ack->header.nwkFcf.security = frame->header.nwkFcf.secur
      +                          ity;
 23249  00541E  EE20 F00B          	lfsr	2,11
 23250  005422  502A               	movf	nwkRxSendAck@frame^0,w,c
 23251  005424  26D9               	addwf	fsr2l,f,c
 23252  005426  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 23253  005428  22DA               	addwfc	fsr2h,f,c
 23254  00542A  EE10 F00B          	lfsr	1,11
 23255  00542E  502E               	movf	nwkRxSendAck@ack^0,w,c
 23256  005430  26E1               	addwf	fsr1l,f,c
 23257  005432  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 23258  005434  22E2               	addwfc	fsr1h,f,c
 23259  005436  B2DF               	btfsc	indf2,1,c
 23260  005438  D002               	bra	u14465
 23261  00543A  92E7               	bcf	indf1,1,c
 23262  00543C  D001               	bra	u14466
 23263  00543E                     u14465:
 23264  00543E  82E7               	bsf	indf1,1,c
 23265  005440                     u14466:
 23266                           
 23267                           ;../nwk/nwk_src/nwkRx.c: 150:   ack->header.nwkDstAddr = frame->header.nwkSrcAddr;
 23268  005440  EE20 F00D          	lfsr	2,13
 23269  005444  502A               	movf	nwkRxSendAck@frame^0,w,c
 23270  005446  26D9               	addwf	fsr2l,f,c
 23271  005448  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 23272  00544A  22DA               	addwfc	fsr2h,f,c
 23273  00544C  EE10 F00F          	lfsr	1,15
 23274  005450  502E               	movf	nwkRxSendAck@ack^0,w,c
 23275  005452  26E1               	addwf	fsr1l,f,c
 23276  005454  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 23277  005456  22E2               	addwfc	fsr1h,f,c
 23278  005458  006F FF7B FFE6     	movff	postinc2,postinc1
 23279  00545E  006F FF77 FFE5     	movff	postdec2,postdec1
 23280                           
 23281                           ;../nwk/nwk_src/nwkRx.c: 152:   command = (NwkCommandAck_t *)ack->payload;
 23282  005464  EE20 F081          	lfsr	2,129
 23283  005468  502E               	movf	nwkRxSendAck@ack^0,w,c
 23284  00546A  26D9               	addwf	fsr2l,f,c
 23285  00546C  502F               	movf	(nwkRxSendAck@ack+1)^0,w,c
 23286  00546E  22DA               	addwfc	fsr2h,f,c
 23287  005470  006F FF78  F02C    	movff	postinc2,nwkRxSendAck@command
 23288  005476  006F FF74  F02D    	movff	postdec2,nwkRxSendAck@command+1
 23289                           
 23290                           ;../nwk/nwk_src/nwkRx.c: 153:   command->id = NWK_COMMAND_ACK;
 23291  00547C  0060  F0B3  FFD9   	movff	nwkRxSendAck@command,fsr2l
 23292  005482  0060  F0B7  FFDA   	movff	nwkRxSendAck@command+1,fsr2h
 23293  005488  0E00               	movlw	0
 23294  00548A  6EDF               	movwf	indf2,c
 23295                           
 23296                           ;../nwk/nwk_src/nwkRx.c: 154:   command->control = nwkRxAckControl;
 23297  00548C  EE20 F002          	lfsr	2,2
 23298  005490  502C               	movf	nwkRxSendAck@command^0,w,c
 23299  005492  26D9               	addwf	fsr2l,f,c
 23300  005494  502D               	movf	(nwkRxSendAck@command+1)^0,w,c
 23301  005496  22DA               	addwfc	fsr2h,f,c
 23302  005498  0060  F30F  FFDF   	movff	_nwkRxAckControl,indf2
 23303                           
 23304                           ;../nwk/nwk_src/nwkRx.c: 155:   command->seq = frame->header.nwkSeq;
 23305  00549E  EE20 F00C          	lfsr	2,12
 23306  0054A2  502A               	movf	nwkRxSendAck@frame^0,w,c
 23307  0054A4  26D9               	addwf	fsr2l,f,c
 23308  0054A6  502B               	movf	(nwkRxSendAck@frame+1)^0,w,c
 23309  0054A8  22DA               	addwfc	fsr2h,f,c
 23310  0054AA  EE10 F001          	lfsr	1,1
 23311  0054AE  502C               	movf	nwkRxSendAck@command^0,w,c
 23312  0054B0  26E1               	addwf	fsr1l,f,c
 23313  0054B2  502D               	movf	(nwkRxSendAck@command+1)^0,w,c
 23314  0054B4  22E2               	addwfc	fsr1h,f,c
 23315  0054B6  006F FF7F FFE7     	movff	indf2,indf1
 23316                           
 23317                           ;../nwk/nwk_src/nwkRx.c: 157:   nwkTxFrame(ack);
 23318  0054BC  0060  F0B8  F024   	movff	nwkRxSendAck@ack,nwkTxFrame@frame
 23319  0054C2  0060  F0BC  F025   	movff	nwkRxSendAck@ack+1,nwkTxFrame@frame+1
 23320  0054C8  ECD0  F01D         	call	_nwkTxFrame	;wreg free
 23321  0054CC  0012               	return		;funcret
 23322  0054CE                     __end_of_nwkRxSendAck:
 23323                           	opt callstack 0
 23324                           
 23325 ;; *************** function _nwkRxIndicateFrame *****************
 23326 ;; Defined at:
 23327 ;;		line 423 in file "../nwk/nwk_src/nwkRx.c"
 23328 ;; Parameters:    Size  Location     Type
 23329 ;;  frame           2   32[COMRAM] PTR struct NwkFrame_t
 23330 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23331 ;; Auto vars:     Size  Location     Type
 23332 ;;  ind            12   46[COMRAM] struct NWK_DataInd_t
 23333 ;;  header          2   44[COMRAM] PTR __pack struct NwkFra
 23334 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 23335 ;; Return value:  Size  Location     Type
 23336 ;;                  1    wreg      _Bool 
 23337 ;; Registers used:
 23338 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23339 ;; Tracked objects:
 23340 ;;		On entry : 3F/0
 23341 ;;		On exit  : 0/0
 23342 ;;		Unchanged: 0/0
 23343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23345 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23346 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23347 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23348 ;;Total ram usage:       26 bytes
 23349 ;; Hardware stack levels used:    1
 23350 ;; Hardware stack levels required when called:   11
 23351 ;; This function calls:
 23352 ;;		_appDataInd
 23353 ;;		_nwkRxServiceDataInd
 23354 ;;		nwkFrame@nwkFramePayloadSize
 23355 ;; This function is called by:
 23356 ;;		_nwkRxHandleIndication
 23357 ;; This function uses a non-reentrant model
 23358 ;;
 23359                           
 23360                           	psect	text142
 23361  0030AC                     __ptext142:
 23362                           	opt callstack 0
 23363  0030AC                     _nwkRxIndicateFrame:
 23364                           	opt callstack 15
 23365                           
 23366                           ; BSR set to: 0
 23367                           ;../nwk/nwk_src/nwkRx.c: 423: static _Bool nwkRxIndicateFrame(NwkFrame_t *frame);../nwk/
      +                          nwk_src/nwkRx.c: 424: {;../nwk/nwk_src/nwkRx.c: 425:   NwkFrameHeader_t *header = &frame
      +                          ->header;
 23368                           
 23369                           ;incstack = 0
 23370  0030AC  0E02               	movlw	2
 23371  0030AE  2421               	addwf	nwkRxIndicateFrame@frame^0,w,c
 23372  0030B0  6E2D               	movwf	nwkRxIndicateFrame@header^0,c
 23373  0030B2  0E00               	movlw	0
 23374  0030B4  2022               	addwfc	(nwkRxIndicateFrame@frame+1)^0,w,c
 23375  0030B6  6E2E               	movwf	(nwkRxIndicateFrame@header+1)^0,c
 23376                           
 23377                           ; BSR set to: 0
 23378                           ;../nwk/nwk_src/nwkRx.c: 426:   NWK_DataInd_t ind;;../nwk/nwk_src/nwkRx.c: 428:   if (((
      +                          void*)0) == nwkIb.endpoint[header->nwkDstEndpoint])
 23379  0030B8  EE20 F00F          	lfsr	2,15
 23380  0030BC  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 23381  0030BE  26D9               	addwf	fsr2l,f,c
 23382  0030C0  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23383  0030C2  22DA               	addwfc	fsr2h,f,c
 23384  0030C4  38DF               	swapf	indf2,w,c
 23385  0030C6  0B0F               	andlw	15
 23386  0030C8  6E23               	movwf	??_nwkRxIndicateFrame^0,c
 23387  0030CA  5023               	movf	??_nwkRxIndicateFrame^0,w,c
 23388  0030CC  0D02               	mullw	2
 23389  0030CE  0E06               	movlw	low (_nwkIb+6)
 23390  0030D0  24F3               	addwf	243,w,c
 23391  0030D2  6ED9               	movwf	fsr2l,c
 23392  0030D4  0E01               	movlw	high (_nwkIb+6)
 23393  0030D6  20F4               	addwfc	prodh,w,c
 23394  0030D8  6EDA               	movwf	fsr2h,c
 23395  0030DA  50DE               	movf	postinc2,w,c
 23396  0030DC  10DE               	iorwf	postinc2,w,c
 23397  0030DE  A4D8               	btfss	status,2,c
 23398  0030E0  D002               	goto	l14940
 23399                           
 23400                           ; BSR set to: 0
 23401                           ;../nwk/nwk_src/nwkRx.c: 429:     return 0;
 23402  0030E2  0E00               	movlw	0
 23403  0030E4  0012               	return	
 23404  0030E6                     l14940:
 23405                           
 23406                           ; BSR set to: 0
 23407                           ;../nwk/nwk_src/nwkRx.c: 431:   ind.srcAddr = header->nwkSrcAddr;
 23408  0030E6  EE20 F00B          	lfsr	2,11
 23409  0030EA  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 23410  0030EC  26D9               	addwf	fsr2l,f,c
 23411  0030EE  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23412  0030F0  22DA               	addwfc	fsr2h,f,c
 23413  0030F2  006F FF78  F02F    	movff	postinc2,nwkRxIndicateFrame@ind
 23414  0030F8  006F FF74  F030    	movff	postdec2,nwkRxIndicateFrame@ind+1
 23415                           
 23416                           ;../nwk/nwk_src/nwkRx.c: 432:   ind.dstAddr = header->nwkDstAddr;
 23417  0030FE  EE20 F00D          	lfsr	2,13
 23418  003102  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 23419  003104  26D9               	addwf	fsr2l,f,c
 23420  003106  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23421  003108  22DA               	addwfc	fsr2h,f,c
 23422  00310A  006F FF78  F031    	movff	postinc2,nwkRxIndicateFrame@ind+2
 23423  003110  006F FF74  F032    	movff	postdec2,nwkRxIndicateFrame@ind+3
 23424                           
 23425                           ;../nwk/nwk_src/nwkRx.c: 433:   ind.srcEndpoint = header->nwkSrcEndpoint;
 23426  003116  EE20 F00F          	lfsr	2,15
 23427  00311A  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 23428  00311C  26D9               	addwf	fsr2l,f,c
 23429  00311E  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23430  003120  22DA               	addwfc	fsr2h,f,c
 23431  003122  50DF               	movf	indf2,w,c
 23432  003124  0B0F               	andlw	15
 23433  003126  6E33               	movwf	(nwkRxIndicateFrame@ind+4)^0,c
 23434                           
 23435                           ;../nwk/nwk_src/nwkRx.c: 434:   ind.dstEndpoint = header->nwkDstEndpoint;
 23436  003128  EE20 F00F          	lfsr	2,15
 23437  00312C  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 23438  00312E  26D9               	addwf	fsr2l,f,c
 23439  003130  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23440  003132  22DA               	addwfc	fsr2h,f,c
 23441  003134  38DF               	swapf	indf2,w,c
 23442  003136  0B0F               	andlw	15
 23443  003138  6E34               	movwf	(nwkRxIndicateFrame@ind+5)^0,c
 23444                           
 23445                           ;../nwk/nwk_src/nwkRx.c: 435:   ind.data = frame->payload;
 23446  00313A  EE20 F081          	lfsr	2,129
 23447  00313E  5021               	movf	nwkRxIndicateFrame@frame^0,w,c
 23448  003140  26D9               	addwf	fsr2l,f,c
 23449  003142  5022               	movf	(nwkRxIndicateFrame@frame+1)^0,w,c
 23450  003144  22DA               	addwfc	fsr2h,f,c
 23451  003146  006F FF78  F036    	movff	postinc2,nwkRxIndicateFrame@ind+7
 23452  00314C  006F FF74  F037    	movff	postdec2,nwkRxIndicateFrame@ind+8
 23453                           
 23454                           ; BSR set to: 0
 23455                           ;../nwk/nwk_src/nwkRx.c: 436:   ind.size = nwkFramePayloadSize(frame);
 23456  003152  0060  F084  F002   	movff	nwkRxIndicateFrame@frame,nwkFrame@nwkFramePayloadSize@frame_4851
 23457  003158  0060  F088  F003   	movff	nwkRxIndicateFrame@frame+1,nwkFrame@nwkFramePayloadSize@frame_4851+1
 23458  00315E  EC02  F045         	call	nwkFrame@nwkFramePayloadSize	;wreg free
 23459  003162  6E38               	movwf	(nwkRxIndicateFrame@ind+9)^0,c
 23460                           
 23461                           ; BSR set to: 0
 23462                           ;../nwk/nwk_src/nwkRx.c: 437:   ind.lqi = frame->rx.lqi;
 23463  003164  EE20 F083          	lfsr	2,131
 23464  003168  5021               	movf	nwkRxIndicateFrame@frame^0,w,c
 23465  00316A  26D9               	addwf	fsr2l,f,c
 23466  00316C  5022               	movf	(nwkRxIndicateFrame@frame+1)^0,w,c
 23467  00316E  22DA               	addwfc	fsr2h,f,c
 23468  003170  50DF               	movf	indf2,w,c
 23469  003172  6E39               	movwf	(nwkRxIndicateFrame@ind+10)^0,c
 23470                           
 23471                           ; BSR set to: 0
 23472                           ;../nwk/nwk_src/nwkRx.c: 438:   ind.rssi = frame->rx.rssi;
 23473  003174  EE20 F084          	lfsr	2,132
 23474  003178  5021               	movf	nwkRxIndicateFrame@frame^0,w,c
 23475  00317A  26D9               	addwf	fsr2l,f,c
 23476  00317C  5022               	movf	(nwkRxIndicateFrame@frame+1)^0,w,c
 23477  00317E  22DA               	addwfc	fsr2h,f,c
 23478  003180  50DF               	movf	indf2,w,c
 23479  003182  6E3A               	movwf	(nwkRxIndicateFrame@ind+11)^0,c
 23480                           
 23481                           ; BSR set to: 0
 23482                           ;../nwk/nwk_src/nwkRx.c: 440:   ind.options = (header->nwkFcf.ackRequest) ? NWK_IND_OPT_
      +                          ACK_REQUESTED : 0;
 23483  003184  EE20 F009          	lfsr	2,9
 23484  003188  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 23485  00318A  26D9               	addwf	fsr2l,f,c
 23486  00318C  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23487  00318E  22DA               	addwfc	fsr2h,f,c
 23488  003190  0E00               	movlw	0
 23489  003192  B0DF               	btfsc	indf2,0,c
 23490  003194  0E01               	movlw	1
 23491  003196  6E35               	movwf	(nwkRxIndicateFrame@ind+6)^0,c
 23492                           
 23493                           ; BSR set to: 0
 23494                           ;../nwk/nwk_src/nwkRx.c: 441:   ind.options |= (header->nwkFcf.security) ? NWK_IND_OPT_S
      +                          ECURED : 0;
 23495  003198  EE20 F009          	lfsr	2,9
 23496  00319C  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 23497  00319E  26D9               	addwf	fsr2l,f,c
 23498  0031A0  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23499  0031A2  22DA               	addwfc	fsr2h,f,c
 23500  0031A4  B2DF               	btfsc	indf2,1,c
 23501  0031A6  D002               	goto	l14954
 23502                           
 23503                           ; BSR set to: 0
 23504  0031A8  0E00               	movlw	0
 23505  0031AA  D001               	goto	L19
 23506  0031AC                     l14954:
 23507                           
 23508                           ; BSR set to: 0
 23509  0031AC  0E02               	movlw	2
 23510  0031AE                     L19:
 23511  0031AE  6E27               	movwf	_nwkRxIndicateFrame$5298^0,c
 23512                           
 23513                           ; BSR set to: 0
 23514  0031B0  5027               	movf	_nwkRxIndicateFrame$5298^0,w,c
 23515  0031B2  1235               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
 23516                           
 23517                           ; BSR set to: 0
 23518                           ;../nwk/nwk_src/nwkRx.c: 442:   ind.options |= (header->nwkFcf.linkLocal) ? NWK_IND_OPT_
      +                          LINK_LOCAL : 0;
 23519  0031B4  EE20 F009          	lfsr	2,9
 23520  0031B8  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 23521  0031BA  26D9               	addwf	fsr2l,f,c
 23522  0031BC  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23523  0031BE  22DA               	addwfc	fsr2h,f,c
 23524  0031C0  B4DF               	btfsc	indf2,2,c
 23525  0031C2  D002               	goto	l14962
 23526                           
 23527                           ; BSR set to: 0
 23528  0031C4  0E00               	movlw	0
 23529  0031C6  D001               	goto	L20
 23530  0031C8                     l14962:
 23531                           
 23532                           ; BSR set to: 0
 23533  0031C8  0E20               	movlw	32
 23534  0031CA                     L20:
 23535  0031CA  6E28               	movwf	_nwkRxIndicateFrame$5299^0,c
 23536                           
 23537                           ; BSR set to: 0
 23538  0031CC  5028               	movf	_nwkRxIndicateFrame$5299^0,w,c
 23539  0031CE  1235               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
 23540                           
 23541                           ; BSR set to: 0
 23542                           ;../nwk/nwk_src/nwkRx.c: 443:   ind.options |= (header->nwkFcf.multicast) ? NWK_IND_OPT_
      +                          MULTICAST : 0;
 23543  0031D0  EE20 F009          	lfsr	2,9
 23544  0031D4  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 23545  0031D6  26D9               	addwf	fsr2l,f,c
 23546  0031D8  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23547  0031DA  22DA               	addwfc	fsr2h,f,c
 23548  0031DC  B6DF               	btfsc	indf2,3,c
 23549  0031DE  D002               	goto	l14970
 23550                           
 23551                           ; BSR set to: 0
 23552  0031E0  0E00               	movlw	0
 23553  0031E2  D001               	goto	L21
 23554  0031E4                     l14970:
 23555                           
 23556                           ; BSR set to: 0
 23557  0031E4  0E40               	movlw	64
 23558  0031E6                     L21:
 23559  0031E6  6E29               	movwf	_nwkRxIndicateFrame$5300^0,c
 23560                           
 23561                           ; BSR set to: 0
 23562  0031E8  5029               	movf	_nwkRxIndicateFrame$5300^0,w,c
 23563  0031EA  1235               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
 23564                           
 23565                           ; BSR set to: 0
 23566                           ;../nwk/nwk_src/nwkRx.c: 444:   ind.options |= (0xffff == header->nwkDstAddr) ? NWK_IND_
      +                          OPT_BROADCAST : 0;
 23567  0031EC  EE20 F00D          	lfsr	2,13
 23568  0031F0  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 23569  0031F2  26D9               	addwf	fsr2l,f,c
 23570  0031F4  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23571  0031F6  22DA               	addwfc	fsr2h,f,c
 23572  0031F8  28DE               	incf	postinc2,w,c
 23573  0031FA  E103               	bnz	u14520
 23574  0031FC  28DE               	incf	postinc2,w,c
 23575  0031FE  B4D8               	btfsc	status,2,c
 23576  003200  D002               	goto	l14978
 23577  003202                     u14520:
 23578                           
 23579                           ; BSR set to: 0
 23580  003202  0E00               	movlw	0
 23581  003204  D001               	goto	L22
 23582  003206                     l14978:
 23583                           
 23584                           ; BSR set to: 0
 23585  003206  0E04               	movlw	4
 23586  003208                     L22:
 23587  003208  6E2A               	movwf	_nwkRxIndicateFrame$5301^0,c
 23588                           
 23589                           ; BSR set to: 0
 23590  00320A  502A               	movf	_nwkRxIndicateFrame$5301^0,w,c
 23591  00320C  1235               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
 23592                           
 23593                           ; BSR set to: 0
 23594                           ;../nwk/nwk_src/nwkRx.c: 445:   ind.options |= (header->nwkSrcAddr == header->macSrcAddr
      +                          ) ? NWK_IND_OPT_LOCAL : 0;
 23595  00320E  EE20 F007          	lfsr	2,7
 23596  003212  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 23597  003214  26D9               	addwf	fsr2l,f,c
 23598  003216  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23599  003218  22DA               	addwfc	fsr2h,f,c
 23600  00321A  EE10 F00B          	lfsr	1,11
 23601  00321E  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 23602  003220  26E1               	addwf	fsr1l,f,c
 23603  003222  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23604  003224  22E2               	addwfc	fsr1h,f,c
 23605  003226  50DE               	movf	postinc2,w,c
 23606  003228  18E6               	xorwf	postinc1,w,c
 23607  00322A  E104               	bnz	u14530
 23608  00322C  50DE               	movf	postinc2,w,c
 23609  00322E  18E6               	xorwf	postinc1,w,c
 23610  003230  B4D8               	btfsc	status,2,c
 23611  003232  D002               	goto	l14986
 23612  003234                     u14530:
 23613                           
 23614                           ; BSR set to: 0
 23615  003234  0E00               	movlw	0
 23616  003236  D001               	goto	L23
 23617  003238                     l14986:
 23618                           
 23619                           ; BSR set to: 0
 23620  003238  0E08               	movlw	8
 23621  00323A                     L23:
 23622  00323A  6E2B               	movwf	_nwkRxIndicateFrame$5302^0,c
 23623                           
 23624                           ; BSR set to: 0
 23625  00323C  502B               	movf	_nwkRxIndicateFrame$5302^0,w,c
 23626  00323E  1235               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
 23627                           
 23628                           ; BSR set to: 0
 23629                           ;../nwk/nwk_src/nwkRx.c: 446:   ind.options |= (0xffff == header->macDstPanId) ? NWK_IND
      +                          _OPT_BROADCAST_PAN_ID : 0;
 23630  003240  EE20 F003          	lfsr	2,3
 23631  003244  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 23632  003246  26D9               	addwf	fsr2l,f,c
 23633  003248  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23634  00324A  22DA               	addwfc	fsr2h,f,c
 23635  00324C  28DE               	incf	postinc2,w,c
 23636  00324E  E103               	bnz	u14540
 23637  003250  28DE               	incf	postinc2,w,c
 23638  003252  B4D8               	btfsc	status,2,c
 23639  003254  D002               	goto	l14994
 23640  003256                     u14540:
 23641                           
 23642                           ; BSR set to: 0
 23643  003256  0E00               	movlw	0
 23644  003258  D001               	goto	L24
 23645  00325A                     l14994:
 23646                           
 23647                           ; BSR set to: 0
 23648  00325A  0E10               	movlw	16
 23649  00325C                     L24:
 23650  00325C  6E2C               	movwf	_nwkRxIndicateFrame$5303^0,c
 23651                           
 23652                           ; BSR set to: 0
 23653  00325E  502C               	movf	_nwkRxIndicateFrame$5303^0,w,c
 23654  003260  1235               	iorwf	(nwkRxIndicateFrame@ind+6)^0,f,c
 23655                           
 23656                           ; BSR set to: 0
 23657                           ;../nwk/nwk_src/nwkRx.c: 448:   return nwkIb.endpoint[header->nwkDstEndpoint](&ind);
 23658  003262  0E2F               	movlw	low nwkRxIndicateFrame@ind
 23659  003264  6E1C               	movwf	nwkRxServiceDataInd@ind^0,c
 23660  003266  EE20 F00F          	lfsr	2,15
 23661  00326A  502D               	movf	nwkRxIndicateFrame@header^0,w,c
 23662  00326C  26D9               	addwf	fsr2l,f,c
 23663  00326E  502E               	movf	(nwkRxIndicateFrame@header+1)^0,w,c
 23664  003270  22DA               	addwfc	fsr2h,f,c
 23665  003272  38DF               	swapf	indf2,w,c
 23666  003274  0B0F               	andlw	15
 23667  003276  6E23               	movwf	??_nwkRxIndicateFrame^0,c
 23668  003278  5023               	movf	??_nwkRxIndicateFrame^0,w,c
 23669  00327A  0D02               	mullw	2
 23670  00327C  0E06               	movlw	low (_nwkIb+6)
 23671  00327E  24F3               	addwf	243,w,c
 23672  003280  6ED9               	movwf	fsr2l,c
 23673  003282  0E01               	movlw	high (_nwkIb+6)
 23674  003284  20F4               	addwfc	prodh,w,c
 23675  003286  6EDA               	movwf	fsr2h,c
 23676  003288  006F FF78  F024    	movff	postinc2,??_nwkRxIndicateFrame+1
 23677  00328E  006F FF74  F025    	movff	postdec2,??_nwkRxIndicateFrame+2
 23678  003294  D801               	call	u14558
 23679  003296  0012               	return	
 23680  003298                     u14558:
 23681  003298  0005               	push	
 23682  00329A  6EFA               	movwf	pclath,c
 23683  00329C  5024               	movf	(??_nwkRxIndicateFrame+1)^0,w,c
 23684  00329E  6EFD               	movwf	tosl,c
 23685  0032A0  5025               	movf	(??_nwkRxIndicateFrame+2)^0,w,c
 23686  0032A2  6EFE               	movwf	tosh,c
 23687  0032A4  6AFF               	clrf	tosu,c
 23688  0032A6  50FA               	movf	pclath,w,c
 23689  0032A8  0012               	return		;indir
 23690  0032AA                     __end_of_nwkRxIndicateFrame:
 23691                           	opt callstack 0
 23692                           
 23693 ;; *************** function nwkFrame@nwkFramePayloadSize *****************
 23694 ;; Defined at:
 23695 ;;		line 134 in file "../nwk/nwk_inc\nwkFrame.h"
 23696 ;; Parameters:    Size  Location     Type
 23697 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 23698 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23699 ;; Auto vars:     Size  Location     Type
 23700 ;;		None
 23701 ;; Return value:  Size  Location     Type
 23702 ;;                  1    wreg      unsigned char 
 23703 ;; Registers used:
 23704 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23705 ;; Tracked objects:
 23706 ;;		On entry : 3F/0
 23707 ;;		On exit  : 3F/0
 23708 ;;		Unchanged: 3F/0
 23709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23712 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23713 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23714 ;;Total ram usage:        4 bytes
 23715 ;; Hardware stack levels used:    1
 23716 ;; Hardware stack levels required when called:    7
 23717 ;; This function calls:
 23718 ;;		Nothing
 23719 ;; This function is called by:
 23720 ;;		_nwkRxIndicateFrame
 23721 ;; This function uses a non-reentrant model
 23722 ;;
 23723                           
 23724                           	psect	text143
 23725  008A04                     __ptext143:
 23726                           	opt callstack 0
 23727  008A04                     nwkFrame@nwkFramePayloadSize:
 23728                           	opt callstack 18
 23729                           
 23730                           ; BSR set to: 0
 23731                           
 23732                           ;incstack = 0
 23733  008A04  EE20 F081          	lfsr	2,129
 23734  008A08  5002               	movf	nwkFrame@nwkFramePayloadSize@frame_4851^0,w,c
 23735  008A0A  26D9               	addwf	fsr2l,f,c
 23736  008A0C  5003               	movf	(nwkFrame@nwkFramePayloadSize@frame_4851+1)^0,w,c
 23737  008A0E  22DA               	addwfc	fsr2h,f,c
 23738  008A10  50DF               	movf	indf2,w,c
 23739  008A12  6E04               	movwf	??strspn@nwkFrame@nwkFramePayloadSize^0,c
 23740  008A14  EE20 F001          	lfsr	2,1
 23741  008A18  5002               	movf	nwkFrame@nwkFramePayloadSize@frame_4851^0,w,c
 23742  008A1A  26D9               	addwf	fsr2l,f,c
 23743  008A1C  5003               	movf	(nwkFrame@nwkFramePayloadSize@frame_4851+1)^0,w,c
 23744  008A1E  22DA               	addwfc	fsr2h,f,c
 23745  008A20  50DF               	movf	indf2,w,c
 23746  008A22  6E05               	movwf	(??strspn@nwkFrame@nwkFramePayloadSize+1)^0,c
 23747  008A24  5004               	movf	??strspn@nwkFrame@nwkFramePayloadSize^0,w,c
 23748  008A26  5C05               	subwf	(??strspn@nwkFrame@nwkFramePayloadSize+1)^0,w,c
 23749  008A28  2402               	addwf	nwkFrame@nwkFramePayloadSize@frame_4851^0,w,c
 23750  008A2A  0F02               	addlw	2
 23751                           
 23752                           ; BSR set to: 0
 23753  008A2C  0012               	return		;funcret
 23754  008A2E                     __end_ofnwkFrame@nwkFramePayloadSize:
 23755                           	opt callstack 0
 23756                           
 23757 ;; *************** function _appDataInd *****************
 23758 ;; Defined at:
 23759 ;;		line 47 in file "../app/app_src/application.c"
 23760 ;; Parameters:    Size  Location     Type
 23761 ;;  ind             1   27[COMRAM] PTR struct NWK_DataInd_t
 23762 ;;		 -> nwkRxIndicateFrame@ind(12), 
 23763 ;; Auto vars:     Size  Location     Type
 23764 ;;  dataptr         2   29[COMRAM] PTR unsigned char 
 23765 ;;		 -> nwkFrameFrames(685), NULL(0), 
 23766 ;;  buf_id          1   31[COMRAM] unsigned char 
 23767 ;; Return value:  Size  Location     Type
 23768 ;;                  1    wreg      _Bool 
 23769 ;; Registers used:
 23770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23771 ;; Tracked objects:
 23772 ;;		On entry : 3F/0
 23773 ;;		On exit  : 0/0
 23774 ;;		Unchanged: 0/0
 23775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23776 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23777 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23778 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23779 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23780 ;;Total ram usage:        5 bytes
 23781 ;; Hardware stack levels used:    1
 23782 ;; Hardware stack levels required when called:    9
 23783 ;; This function calls:
 23784 ;;		_CircularBufferPushBack
 23785 ;;		_get_free_rx_buffer
 23786 ;;		_memcpy
 23787 ;;		_memset
 23788 ;; This function is called by:
 23789 ;;		_bootLoadApplication
 23790 ;;		_nwkRxIndicateFrame
 23791 ;; This function uses a non-reentrant model
 23792 ;;
 23793                           
 23794                           	psect	text144
 23795  006884                     __ptext144:
 23796                           	opt callstack 0
 23797  006884                     _appDataInd:
 23798                           	opt callstack 16
 23799                           
 23800                           ; BSR set to: 0
 23801                           ;../app/app_src/application.c: 47: static _Bool appDataInd(NWK_DataInd_t *ind);../app/ap
      +                          p_src/application.c: 48: {;../app/app_src/application.c: 50:     uint8_t buf_id;;../app/
      +                          app_src/application.c: 51:     if(get_free_rx_buffer(&buf_id)){
 23802                           
 23803                           ; BSR set to: 0
 23804                           ;incstack = 0
 23805  006884  0E20               	movlw	low appDataInd@buf_id
 23806  006886  6E02               	movwf	get_free_rx_buffer@buf_id^0,c
 23807  006888  ECA3  F03C         	call	_get_free_rx_buffer	;wreg free
 23808  00688C  0900               	iorlw	0
 23809  00688E  B4D8               	btfsc	status,2,c
 23810  006890  D050               	goto	l14570
 23811                           
 23812                           ; BSR set to: 0
 23813                           ;../app/app_src/application.c: 52:        uint8_t* dataptr = ind->data;
 23814  006892  501C               	movf	appDataInd@ind^0,w,c
 23815  006894  6ED9               	movwf	fsr2l,c
 23816  006896  6ADA               	clrf	fsr2h,c
 23817  006898  0E07               	movlw	7
 23818  00689A  26D9               	addwf	fsr2l,f,c
 23819  00689C  006F FF78  F01E    	movff	postinc2,appDataInd@dataptr
 23820  0068A2  006F FF74  F01F    	movff	postdec2,appDataInd@dataptr+1
 23821                           
 23822                           ; BSR set to: 0
 23823                           ;../app/app_src/application.c: 53:        memset(rx_buffer[buf_id].payload, 0 , sizeof((
      +                          127 - 16 - 2 )));
 23824  0068A8  5020               	movf	appDataInd@buf_id^0,w,c
 23825  0068AA  0D7A               	mullw	122
 23826  0068AC  0E83               	movlw	low (_rx_buffer+13)
 23827  0068AE  24F3               	addwf	243,w,c
 23828  0068B0  6E02               	movwf	memset@dest^0,c
 23829  0068B2  0E0A               	movlw	high (_rx_buffer+13)
 23830  0068B4  20F4               	addwfc	prodh,w,c
 23831  0068B6  6E03               	movwf	(memset@dest+1)^0,c
 23832  0068B8  0E00               	movlw	0
 23833  0068BA  6E05               	movwf	(memset@c+1)^0,c
 23834  0068BC  0E00               	movlw	0
 23835  0068BE  6E04               	movwf	memset@c^0,c
 23836  0068C0  0E00               	movlw	0
 23837  0068C2  6E07               	movwf	(memset@n+1)^0,c
 23838  0068C4  0E02               	movlw	2
 23839  0068C6  6E06               	movwf	memset@n^0,c
 23840  0068C8  EC10  F022         	call	_memset	;wreg free
 23841                           
 23842                           ;../app/app_src/application.c: 54:        rx_buffer[buf_id].rx_ind = *ind;
 23843  0068CC  501C               	movf	appDataInd@ind^0,w,c
 23844  0068CE  6ED9               	movwf	fsr2l,c
 23845  0068D0  6ADA               	clrf	fsr2h,c
 23846  0068D2  5020               	movf	appDataInd@buf_id^0,w,c
 23847  0068D4  0D7A               	mullw	122
 23848  0068D6  0E77               	movlw	low (_rx_buffer+1)
 23849  0068D8  24F3               	addwf	243,w,c
 23850  0068DA  6EE1               	movwf	fsr1l,c
 23851  0068DC  0E0A               	movlw	high (_rx_buffer+1)
 23852  0068DE  20F4               	addwfc	prodh,w,c
 23853  0068E0  6EE2               	movwf	fsr1h,c
 23854  0068E2  0E0B               	movlw	11
 23855  0068E4                     u14061:
 23856  0068E4  006F FF6F FFE3     	movff	plusw2,plusw1
 23857  0068EA  06E8               	decf	wreg,f,c
 23858  0068EC  E2FB               	bc	u14061
 23859                           
 23860                           ;../app/app_src/application.c: 55:        memcpy(rx_buffer[buf_id].payload,dataptr, ind-
      +                          >size);
 23861  0068EE  5020               	movf	appDataInd@buf_id^0,w,c
 23862  0068F0  0D7A               	mullw	122
 23863  0068F2  0E83               	movlw	low (_rx_buffer+13)
 23864  0068F4  24F3               	addwf	243,w,c
 23865  0068F6  6E08               	movwf	memcpy@d1^0,c
 23866  0068F8  0E0A               	movlw	high (_rx_buffer+13)
 23867  0068FA  20F4               	addwfc	prodh,w,c
 23868  0068FC  6E09               	movwf	(memcpy@d1+1)^0,c
 23869  0068FE  0060  F078  F00A   	movff	appDataInd@dataptr,memcpy@s1
 23870  006904  0060  F07C  F00B   	movff	appDataInd@dataptr+1,memcpy@s1+1
 23871  00690A  501C               	movf	appDataInd@ind^0,w,c
 23872  00690C  6ED9               	movwf	fsr2l,c
 23873  00690E  6ADA               	clrf	fsr2h,c
 23874  006910  0E09               	movlw	9
 23875  006912  26D9               	addwf	fsr2l,f,c
 23876  006914  50DF               	movf	indf2,w,c
 23877  006916  6E1D               	movwf	??_appDataInd^0,c
 23878  006918  501D               	movf	??_appDataInd^0,w,c
 23879  00691A  6E0C               	movwf	memcpy@n^0,c
 23880  00691C  6A0D               	clrf	(memcpy@n+1)^0,c
 23881  00691E  ECF6  F03A         	call	_memcpy	;wreg free
 23882                           
 23883                           ;../app/app_src/application.c: 56:        CircularBufferPushBack(&rx_buffer_queue_contex
      +                          t, &buf_id);
 23884  006922  0ED8               	movlw	low _rx_buffer_queue_context
 23885  006924  6E13               	movwf	CircularBufferPushBack@ctx^0,c
 23886  006926  0E01               	movlw	high _rx_buffer_queue_context
 23887  006928  6E14               	movwf	(CircularBufferPushBack@ctx+1)^0,c
 23888  00692A  0E20               	movlw	low appDataInd@buf_id
 23889  00692C  6E15               	movwf	CircularBufferPushBack@val^0,c
 23890  00692E  EC67  F02A         	call	_CircularBufferPushBack	;wreg free
 23891  006932                     l14570:
 23892                           
 23893                           ;../app/app_src/application.c: 58:     return 1;
 23894  006932  0E01               	movlw	1
 23895  006934  0012               	return		;funcret
 23896  006936                     __end_of_appDataInd:
 23897                           	opt callstack 0
 23898                           
 23899 ;; *************** function _nwkRxServiceDataInd *****************
 23900 ;; Defined at:
 23901 ;;		line 257 in file "../nwk/nwk_src/nwkRx.c"
 23902 ;; Parameters:    Size  Location     Type
 23903 ;;  ind             1   27[COMRAM] PTR struct NWK_DataInd_t
 23904 ;;		 -> nwkRxIndicateFrame@ind(12), 
 23905 ;; Auto vars:     Size  Location     Type
 23906 ;;		None
 23907 ;; Return value:  Size  Location     Type
 23908 ;;                  1    wreg      _Bool 
 23909 ;; Registers used:
 23910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23911 ;; Tracked objects:
 23912 ;;		On entry : 3F/0
 23913 ;;		On exit  : 0/0
 23914 ;;		Unchanged: 0/0
 23915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23916 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23918 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23919 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23920 ;;Total ram usage:        5 bytes
 23921 ;; Hardware stack levels used:    1
 23922 ;; Hardware stack levels required when called:   10
 23923 ;; This function calls:
 23924 ;;		_nwkRouteErrorReceived
 23925 ;;		_nwkTxAckReceived
 23926 ;; This function is called by:
 23927 ;;		_nwkRxInit
 23928 ;;		_nwkRxIndicateFrame
 23929 ;; This function uses a non-reentrant model
 23930 ;;
 23931                           
 23932                           	psect	text145
 23933  0077A4                     __ptext145:
 23934                           	opt callstack 0
 23935  0077A4                     _nwkRxServiceDataInd:
 23936                           	opt callstack 15
 23937                           
 23938                           ; BSR set to: 0
 23939                           ;../nwk/nwk_src/nwkRx.c: 257: static _Bool nwkRxServiceDataInd(NWK_DataInd_t *ind);../nw
      +                          k/nwk_src/nwkRx.c: 258: {;../nwk/nwk_src/nwkRx.c: 264:   if (ind->size < 1)
 23940                           
 23941                           ;incstack = 0
 23942  0077A4  501C               	movf	nwkRxServiceDataInd@ind^0,w,c
 23943  0077A6  6ED9               	movwf	fsr2l,c
 23944  0077A8  6ADA               	clrf	fsr2h,c
 23945  0077AA  0E09               	movlw	9
 23946  0077AC  26D9               	addwf	fsr2l,f,c
 23947  0077AE  50DF               	movf	indf2,w,c
 23948  0077B0  A4D8               	btfss	status,2,c
 23949  0077B2  D00E               	goto	l10094
 23950  0077B4                     u8140:
 23951                           
 23952                           ; BSR set to: 0
 23953                           ;../nwk/nwk_src/nwkRx.c: 265:     return 0;
 23954  0077B4  0E00               	movlw	0
 23955  0077B6  0012               	return	
 23956  0077B8                     l10080:
 23957                           
 23958                           ; BSR set to: 0
 23959                           ;../nwk/nwk_src/nwkRx.c: 270:       return nwkTxAckReceived(ind);
 23960  0077B8  0060  F070  F008   	movff	nwkRxServiceDataInd@ind,nwkTxAckReceived@ind
 23961  0077BE  EC16  F032         	call	_nwkTxAckReceived	;wreg free
 23962  0077C2  0012               	return	
 23963  0077C4                     l10084:
 23964                           
 23965                           ; BSR set to: 0
 23966                           ;../nwk/nwk_src/nwkRx.c: 274:       return nwkRouteErrorReceived(ind);
 23967  0077C4  0060  F070  F00D   	movff	nwkRxServiceDataInd@ind,nwkRouteErrorReceived@ind
 23968  0077CA  EC50  F03E         	call	_nwkRouteErrorReceived	;wreg free
 23969  0077CE  0012               	return	
 23970  0077D0                     l10094:
 23971                           
 23972                           ; BSR set to: 0
 23973  0077D0  501C               	movf	nwkRxServiceDataInd@ind^0,w,c
 23974  0077D2  6ED9               	movwf	fsr2l,c
 23975  0077D4  6ADA               	clrf	fsr2h,c
 23976  0077D6  0E07               	movlw	7
 23977  0077D8  26D9               	addwf	fsr2l,f,c
 23978  0077DA  006F FF78  F01D    	movff	postinc2,??_nwkRxServiceDataInd
 23979  0077E0  006F FF74  F01E    	movff	postdec2,??_nwkRxServiceDataInd+1
 23980  0077E6  0060  F077  FFD9   	movff	??_nwkRxServiceDataInd,fsr2l
 23981  0077EC  0060  F07B  FFDA   	movff	??_nwkRxServiceDataInd+1,fsr2h
 23982  0077F2  50DF               	movf	indf2,w,c
 23983  0077F4  6E1F               	movwf	(??_nwkRxServiceDataInd+2)^0,c
 23984  0077F6  6A20               	clrf	(??_nwkRxServiceDataInd+3)^0,c
 23985                           
 23986                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23987                           ; Switch size 1, requested type "simple"
 23988                           ; Number of cases is 1, Range of values is 0 to 0
 23989                           ; switch strategies available:
 23990                           ; Name         Instructions Cycles
 23991                           ; simple_byte            4     3 (average)
 23992                           ;	Chosen strategy is simple_byte
 23993  0077F8  5020               	movf	(??_nwkRxServiceDataInd+3)^0,w,c
 23994  0077FA  0A00               	xorlw	0	; case 0
 23995  0077FC  A4D8               	btfss	status,2,c
 23996  0077FE  D7DA               	goto	u8140
 23997                           
 23998                           ; BSR set to: 0
 23999                           ; Switch size 1, requested type "simple"
 24000                           ; Number of cases is 2, Range of values is 0 to 1
 24001                           ; switch strategies available:
 24002                           ; Name         Instructions Cycles
 24003                           ; simple_byte            7     4 (average)
 24004                           ;	Chosen strategy is simple_byte
 24005  007800  501F               	movf	(??_nwkRxServiceDataInd+2)^0,w,c
 24006  007802  0A00               	xorlw	0	; case 0
 24007  007804  B4D8               	btfsc	status,2,c
 24008  007806  D7D8               	goto	l10080
 24009  007808  0A01               	xorlw	1	; case 1
 24010  00780A  B4D8               	btfsc	status,2,c
 24011  00780C  D7DB               	goto	l10084
 24012  00780E  D7D2               	goto	u8140
 24013  007810                     __end_of_nwkRxServiceDataInd:
 24014                           	opt callstack 0
 24015                           
 24016 ;; *************** function _nwkTxAckReceived *****************
 24017 ;; Defined at:
 24018 ;;		line 182 in file "../nwk/nwk_src/nwkTx.c"
 24019 ;; Parameters:    Size  Location     Type
 24020 ;;  ind             1    7[COMRAM] PTR struct NWK_DataInd_t
 24021 ;;		 -> nwkRxIndicateFrame@ind(12), 
 24022 ;; Auto vars:     Size  Location     Type
 24023 ;;  frame           2   12[COMRAM] PTR struct NwkFrame_t
 24024 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24025 ;;  command         2   10[COMRAM] PTR __pack struct NwkCom
 24026 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 24027 ;; Return value:  Size  Location     Type
 24028 ;;                  1    wreg      _Bool 
 24029 ;; Registers used:
 24030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24031 ;; Tracked objects:
 24032 ;;		On entry : 3F/0
 24033 ;;		On exit  : 0/0
 24034 ;;		Unchanged: 0/0
 24035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24036 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24037 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24038 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24039 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24040 ;;Total ram usage:        7 bytes
 24041 ;; Hardware stack levels used:    1
 24042 ;; Hardware stack levels required when called:    8
 24043 ;; This function calls:
 24044 ;;		_nwkFrameNext
 24045 ;; This function is called by:
 24046 ;;		_nwkRxServiceDataInd
 24047 ;; This function uses a non-reentrant model
 24048 ;;
 24049                           
 24050                           	psect	text146
 24051  00642C                     __ptext146:
 24052                           	opt callstack 0
 24053  00642C                     _nwkTxAckReceived:
 24054                           	opt callstack 16
 24055                           
 24056                           ; BSR set to: 0
 24057                           ;../nwk/nwk_src/nwkTx.c: 182: _Bool nwkTxAckReceived(NWK_DataInd_t *ind);../nwk/nwk_src/
      +                          nwkTx.c: 183: {;../nwk/nwk_src/nwkTx.c: 184:   NwkCommandAck_t *command = (NwkCommandAck
      +                          _t *)ind->data;
 24058                           
 24059                           ;incstack = 0
 24060  00642C  5008               	movf	nwkTxAckReceived@ind^0,w,c
 24061  00642E  6ED9               	movwf	fsr2l,c
 24062  006430  6ADA               	clrf	fsr2h,c
 24063  006432  0E07               	movlw	7
 24064  006434  26D9               	addwf	fsr2l,f,c
 24065  006436  006F FF78  F00B    	movff	postinc2,nwkTxAckReceived@command
 24066  00643C  006F FF74  F00C    	movff	postdec2,nwkTxAckReceived@command+1
 24067                           
 24068                           ; BSR set to: 0
 24069                           ;../nwk/nwk_src/nwkTx.c: 185:   NwkFrame_t *frame = ((void*)0);
 24070  006442  0E00               	movlw	0
 24071  006444  6E0D               	movwf	nwkTxAckReceived@frame^0,c
 24072  006446  0E00               	movlw	0
 24073  006448  6E0E               	movwf	(nwkTxAckReceived@frame+1)^0,c
 24074                           
 24075                           ; BSR set to: 0
 24076                           ;../nwk/nwk_src/nwkTx.c: 187:   if (sizeof(NwkCommandAck_t) != ind->size)
 24077  00644A  5008               	movf	nwkTxAckReceived@ind^0,w,c
 24078  00644C  6ED9               	movwf	fsr2l,c
 24079  00644E  6ADA               	clrf	fsr2h,c
 24080  006450  0E09               	movlw	9
 24081  006452  26D9               	addwf	fsr2l,f,c
 24082  006454  0E03               	movlw	3
 24083  006456  18DE               	xorwf	postinc2,w,c
 24084  006458  B4D8               	btfsc	status,2,c
 24085  00645A  D035               	goto	l9734
 24086  00645C                     u7720:
 24087                           
 24088                           ;../nwk/nwk_src/nwkTx.c: 188:     return 0;
 24089  00645C  0E00               	movlw	0
 24090  00645E  0012               	return	
 24091  006460                     l9722:
 24092                           
 24093                           ;../nwk/nwk_src/nwkTx.c: 191:   {;../nwk/nwk_src/nwkTx.c: 192:     if (NWK_TX_STATE_WAIT
      +                          _ACK == frame->state && frame->header.nwkSeq == command->seq)
 24094  006460  0060  F037  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
 24095  006466  0060  F03B  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
 24096  00646C  0E16               	movlw	22
 24097  00646E  18DE               	xorwf	postinc2,w,c
 24098  006470  A4D8               	btfss	status,2,c
 24099  006472  D029               	goto	l9734
 24100  006474  EE20 F001          	lfsr	2,1
 24101  006478  500B               	movf	nwkTxAckReceived@command^0,w,c
 24102  00647A  26D9               	addwf	fsr2l,f,c
 24103  00647C  500C               	movf	(nwkTxAckReceived@command+1)^0,w,c
 24104  00647E  22DA               	addwfc	fsr2h,f,c
 24105  006480  EE10 F00C          	lfsr	1,12
 24106  006484  500D               	movf	nwkTxAckReceived@frame^0,w,c
 24107  006486  26E1               	addwf	fsr1l,f,c
 24108  006488  500E               	movf	(nwkTxAckReceived@frame+1)^0,w,c
 24109  00648A  22E2               	addwfc	fsr1h,f,c
 24110  00648C  50DE               	movf	postinc2,w,c
 24111  00648E  18E6               	xorwf	postinc1,w,c
 24112  006490  A4D8               	btfss	status,2,c
 24113  006492  D019               	goto	l9734
 24114                           
 24115                           ;../nwk/nwk_src/nwkTx.c: 193:     {;../nwk/nwk_src/nwkTx.c: 194:       frame->state = NW
      +                          K_TX_STATE_CONFIRM;
 24116  006494  0060  F037  FFD9   	movff	nwkTxAckReceived@frame,fsr2l
 24117  00649A  0060  F03B  FFDA   	movff	nwkTxAckReceived@frame+1,fsr2h
 24118  0064A0  0E17               	movlw	23
 24119  0064A2  6EDF               	movwf	indf2,c
 24120                           
 24121                           ;../nwk/nwk_src/nwkTx.c: 195:       frame->tx.control = command->control;
 24122  0064A4  EE20 F002          	lfsr	2,2
 24123  0064A8  500B               	movf	nwkTxAckReceived@command^0,w,c
 24124  0064AA  26D9               	addwf	fsr2l,f,c
 24125  0064AC  500C               	movf	(nwkTxAckReceived@command+1)^0,w,c
 24126  0064AE  22DA               	addwfc	fsr2h,f,c
 24127  0064B0  EE10 F086          	lfsr	1,134
 24128  0064B4  500D               	movf	nwkTxAckReceived@frame^0,w,c
 24129  0064B6  26E1               	addwf	fsr1l,f,c
 24130  0064B8  500E               	movf	(nwkTxAckReceived@frame+1)^0,w,c
 24131  0064BA  22E2               	addwfc	fsr1h,f,c
 24132  0064BC  006F FF7F FFE7     	movff	indf2,indf1
 24133                           
 24134                           ;../nwk/nwk_src/nwkTx.c: 196:       return 1;
 24135  0064C2  0E01               	movlw	1
 24136  0064C4  0012               	return	
 24137  0064C6                     l9734:
 24138                           
 24139                           ;../nwk/nwk_src/nwkTx.c: 190:   while (((void*)0) != (frame = nwkFrameNext(frame)))
 24140  0064C6  0060  F034  F002   	movff	nwkTxAckReceived@frame,nwkFrameNext@frame
 24141  0064CC  0060  F038  F003   	movff	nwkTxAckReceived@frame+1,nwkFrameNext@frame+1
 24142  0064D2  ECE5  F038         	call	_nwkFrameNext	;wreg free
 24143  0064D6  0060  F008  F00D   	movff	?_nwkFrameNext,nwkTxAckReceived@frame
 24144  0064DC  0060  F00C  F00E   	movff	?_nwkFrameNext+1,nwkTxAckReceived@frame+1
 24145  0064E2  500D               	movf	nwkTxAckReceived@frame^0,w,c
 24146  0064E4  100E               	iorwf	(nwkTxAckReceived@frame+1)^0,w,c
 24147  0064E6  B4D8               	btfsc	status,2,c
 24148  0064E8  D7B9               	goto	u7720
 24149  0064EA  D7BA               	goto	l9722
 24150  0064EC                     __end_of_nwkTxAckReceived:
 24151                           	opt callstack 0
 24152                           
 24153 ;; *************** function _nwkFrameNext *****************
 24154 ;; Defined at:
 24155 ;;		line 111 in file "../nwk/nwk_src/nwkFrame.c"
 24156 ;; Parameters:    Size  Location     Type
 24157 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 24158 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24159 ;; Auto vars:     Size  Location     Type
 24160 ;;		None
 24161 ;; Return value:  Size  Location     Type
 24162 ;;                  2    1[COMRAM] PTR struct NwkFrame_t
 24163 ;; Registers used:
 24164 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24165 ;; Tracked objects:
 24166 ;;		On entry : 0/0
 24167 ;;		On exit  : 0/0
 24168 ;;		Unchanged: 0/0
 24169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24172 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24173 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24174 ;;Total ram usage:        6 bytes
 24175 ;; Hardware stack levels used:    1
 24176 ;; Hardware stack levels required when called:    7
 24177 ;; This function calls:
 24178 ;;		Nothing
 24179 ;; This function is called by:
 24180 ;;		_nwkRxTaskHandler
 24181 ;;		_nwkTxAckReceived
 24182 ;;		_nwkTxAckWaitTimerHandler
 24183 ;;		_nwkTxDelayTimerHandler
 24184 ;;		_nwkTxTaskHandler
 24185 ;; This function uses a non-reentrant model
 24186 ;;
 24187                           
 24188                           	psect	text147
 24189  0071CA                     __ptext147:
 24190                           	opt callstack 0
 24191  0071CA                     _nwkFrameNext:
 24192                           	opt callstack 20
 24193                           
 24194                           ;../nwk/nwk_src/nwkFrame.c: 111: NwkFrame_t *nwkFrameNext(NwkFrame_t *frame);../nwk/nwk_
      +                          src/nwkFrame.c: 112: {;../nwk/nwk_src/nwkFrame.c: 113:   if (((void*)0) == frame)
 24195                           
 24196                           ;incstack = 0
 24197  0071CA  5002               	movf	nwkFrameNext@frame^0,w,c
 24198  0071CC  1003               	iorwf	(nwkFrameNext@frame+1)^0,w,c
 24199  0071CE  A4D8               	btfss	status,2,c
 24200  0071D0  D026               	goto	l9356
 24201                           
 24202                           ;../nwk/nwk_src/nwkFrame.c: 114:     frame = nwkFrameFrames;
 24203  0071D2  0EBD               	movlw	low _nwkFrameFrames
 24204  0071D4  6E02               	movwf	nwkFrameNext@frame^0,c
 24205  0071D6  0E05               	movlw	high _nwkFrameFrames
 24206  0071D8  6E03               	movwf	(nwkFrameNext@frame+1)^0,c
 24207                           
 24208                           ;../nwk/nwk_src/nwkFrame.c: 118:   for (; frame < &nwkFrameFrames[5]; frame++)
 24209                           
 24210                           ;../nwk/nwk_src/nwkFrame.c: 116:     frame++;
 24211  0071DA  0EAD               	movlw	173
 24212  0071DC  6E04               	movwf	??_nwkFrameNext^0,c
 24213  0071DE  0E02               	movlw	2
 24214  0071E0  6E05               	movwf	(??_nwkFrameNext+1)^0,c
 24215  0071E2  0EBD               	movlw	low _nwkFrameFrames
 24216  0071E4  6E06               	movwf	(??_nwkFrameNext+2)^0,c
 24217  0071E6  0E05               	movlw	high _nwkFrameFrames
 24218  0071E8  6E07               	movwf	(??_nwkFrameNext+3)^0,c
 24219  0071EA  5004               	movf	??_nwkFrameNext^0,w,c
 24220  0071EC  2606               	addwf	(??_nwkFrameNext+2)^0,f,c
 24221  0071EE  5005               	movf	(??_nwkFrameNext+1)^0,w,c
 24222  0071F0  2207               	addwfc	(??_nwkFrameNext+3)^0,f,c
 24223  0071F2  5006               	movf	(??_nwkFrameNext+2)^0,w,c
 24224  0071F4  5C02               	subwf	nwkFrameNext@frame^0,w,c
 24225  0071F6  5007               	movf	(??_nwkFrameNext+3)^0,w,c
 24226  0071F8  5803               	subwfb	(nwkFrameNext@frame+1)^0,w,c
 24227  0071FA  B0D8               	btfsc	status,0,c
 24228  0071FC  D026               	goto	u7050
 24229  0071FE                     l9350:
 24230                           
 24231                           ;../nwk/nwk_src/nwkFrame.c: 119:   {;../nwk/nwk_src/nwkFrame.c: 120:     if (NWK_FRAME_S
      +                          TATE_FREE != frame->state)
 24232  0071FE  0060  F00B  FFD9   	movff	nwkFrameNext@frame,fsr2l
 24233  007204  0060  F00F  FFDA   	movff	nwkFrameNext@frame+1,fsr2h
 24234  00720A  50DF               	movf	indf2,w,c
 24235  00720C  B4D8               	btfsc	status,2,c
 24236  00720E  D007               	goto	l9356
 24237                           
 24238                           ;../nwk/nwk_src/nwkFrame.c: 121:       return frame;
 24239  007210  0060  F008  F002   	movff	nwkFrameNext@frame,?_nwkFrameNext
 24240  007216  0060  F00C  F003   	movff	nwkFrameNext@frame+1,?_nwkFrameNext+1
 24241  00721C  0012               	return	
 24242  00721E                     l9356:
 24243                           
 24244                           ;../nwk/nwk_src/nwkFrame.c: 122:   }
 24245  00721E  0E89               	movlw	137
 24246  007220  2602               	addwf	nwkFrameNext@frame^0,f,c
 24247  007222  0E00               	movlw	0
 24248  007224  2203               	addwfc	(nwkFrameNext@frame+1)^0,f,c
 24249  007226  0EAD               	movlw	173
 24250  007228  6E04               	movwf	??_nwkFrameNext^0,c
 24251  00722A  0E02               	movlw	2
 24252  00722C  6E05               	movwf	(??_nwkFrameNext+1)^0,c
 24253  00722E  0EBD               	movlw	low _nwkFrameFrames
 24254  007230  6E06               	movwf	(??_nwkFrameNext+2)^0,c
 24255  007232  0E05               	movlw	high _nwkFrameFrames
 24256  007234  6E07               	movwf	(??_nwkFrameNext+3)^0,c
 24257  007236  5004               	movf	??_nwkFrameNext^0,w,c
 24258  007238  2606               	addwf	(??_nwkFrameNext+2)^0,f,c
 24259  00723A  5005               	movf	(??_nwkFrameNext+1)^0,w,c
 24260  00723C  2207               	addwfc	(??_nwkFrameNext+3)^0,f,c
 24261  00723E  5006               	movf	(??_nwkFrameNext+2)^0,w,c
 24262  007240  5C02               	subwf	nwkFrameNext@frame^0,w,c
 24263  007242  5007               	movf	(??_nwkFrameNext+3)^0,w,c
 24264  007244  5803               	subwfb	(nwkFrameNext@frame+1)^0,w,c
 24265  007246  A0D8               	btfss	status,0,c
 24266  007248  D7DA               	goto	l9350
 24267  00724A                     u7050:
 24268                           
 24269                           ;../nwk/nwk_src/nwkFrame.c: 124:   return ((void*)0);
 24270  00724A  0E00               	movlw	0
 24271  00724C  6E02               	movwf	?_nwkFrameNext^0,c
 24272  00724E  0E00               	movlw	0
 24273  007250  6E03               	movwf	(?_nwkFrameNext+1)^0,c
 24274  007252  0012               	return		;funcret
 24275  007254                     __end_of_nwkFrameNext:
 24276                           	opt callstack 0
 24277                           
 24278 ;; *************** function _nwkRouteErrorReceived *****************
 24279 ;; Defined at:
 24280 ;;		line 344 in file "../nwk/nwk_src/nwkRoute.c"
 24281 ;; Parameters:    Size  Location     Type
 24282 ;;  ind             1   12[COMRAM] PTR struct NWK_DataInd_t
 24283 ;;		 -> nwkRxIndicateFrame@ind(12), 
 24284 ;; Auto vars:     Size  Location     Type
 24285 ;;  command         2   14[COMRAM] PTR __pack struct NwkCom
 24286 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24287 ;; Return value:  Size  Location     Type
 24288 ;;                  1    wreg      _Bool 
 24289 ;; Registers used:
 24290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24291 ;; Tracked objects:
 24292 ;;		On entry : 3F/0
 24293 ;;		On exit  : 0/0
 24294 ;;		Unchanged: 0/0
 24295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24296 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24297 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24298 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24299 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24300 ;;Total ram usage:        4 bytes
 24301 ;; Hardware stack levels used:    1
 24302 ;; Hardware stack levels required when called:    9
 24303 ;; This function calls:
 24304 ;;		_nwkRouteRemove
 24305 ;; This function is called by:
 24306 ;;		_nwkRxServiceDataInd
 24307 ;; This function uses a non-reentrant model
 24308 ;;
 24309                           
 24310                           	psect	text148
 24311  007CA0                     __ptext148:
 24312                           	opt callstack 0
 24313  007CA0                     _nwkRouteErrorReceived:
 24314                           	opt callstack 15
 24315                           
 24316                           ; BSR set to: 0
 24317                           ;../nwk/nwk_src/nwkRoute.c: 344: _Bool nwkRouteErrorReceived(NWK_DataInd_t *ind);../nwk/
      +                          nwk_src/nwkRoute.c: 345: {;../nwk/nwk_src/nwkRoute.c: 346:   NwkCommandRouteError_t *com
      +                          mand = (NwkCommandRouteError_t *)ind->data;
 24318                           
 24319                           ;incstack = 0
 24320  007CA0  500D               	movf	nwkRouteErrorReceived@ind^0,w,c
 24321  007CA2  6ED9               	movwf	fsr2l,c
 24322  007CA4  6ADA               	clrf	fsr2h,c
 24323  007CA6  0E07               	movlw	7
 24324  007CA8  26D9               	addwf	fsr2l,f,c
 24325  007CAA  006F FF78  F00F    	movff	postinc2,nwkRouteErrorReceived@command
 24326  007CB0  006F FF74  F010    	movff	postdec2,nwkRouteErrorReceived@command+1
 24327                           
 24328                           ;../nwk/nwk_src/nwkRoute.c: 348:   if (sizeof(NwkCommandRouteError_t) != ind->size)
 24329  007CB6  500D               	movf	nwkRouteErrorReceived@ind^0,w,c
 24330  007CB8  6ED9               	movwf	fsr2l,c
 24331  007CBA  6ADA               	clrf	fsr2h,c
 24332  007CBC  0E09               	movlw	9
 24333  007CBE  26D9               	addwf	fsr2l,f,c
 24334  007CC0  0E06               	movlw	6
 24335  007CC2  18DE               	xorwf	postinc2,w,c
 24336  007CC4  B4D8               	btfsc	status,2,c
 24337  007CC6  D002               	goto	l9706
 24338                           
 24339                           ; BSR set to: 0
 24340                           ;../nwk/nwk_src/nwkRoute.c: 349:     return 0;
 24341  007CC8  0E00               	movlw	0
 24342  007CCA  0012               	return	
 24343  007CCC                     l9706:
 24344                           
 24345                           ; BSR set to: 0
 24346                           ;../nwk/nwk_src/nwkRoute.c: 351:   nwkRouteRemove(command->dstAddr, command->multicast);
 24347  007CCC  EE20 F003          	lfsr	2,3
 24348  007CD0  500F               	movf	nwkRouteErrorReceived@command^0,w,c
 24349  007CD2  26D9               	addwf	fsr2l,f,c
 24350  007CD4  5010               	movf	(nwkRouteErrorReceived@command+1)^0,w,c
 24351  007CD6  22DA               	addwfc	fsr2h,f,c
 24352  007CD8  006F FF78  F008    	movff	postinc2,nwkRouteRemove@dst
 24353  007CDE  006F FF74  F009    	movff	postdec2,nwkRouteRemove@dst+1
 24354  007CE4  EE20 F005          	lfsr	2,5
 24355  007CE8  500F               	movf	nwkRouteErrorReceived@command^0,w,c
 24356  007CEA  26D9               	addwf	fsr2l,f,c
 24357  007CEC  5010               	movf	(nwkRouteErrorReceived@command+1)^0,w,c
 24358  007CEE  22DA               	addwfc	fsr2h,f,c
 24359  007CF0  50DF               	movf	indf2,w,c
 24360  007CF2  6E0A               	movwf	nwkRouteRemove@multicast^0,c
 24361  007CF4  ECEE  F042         	call	_nwkRouteRemove	;wreg free
 24362                           
 24363                           ;../nwk/nwk_src/nwkRoute.c: 353:   return 1;
 24364  007CF8  0E01               	movlw	1
 24365  007CFA  0012               	return		;funcret
 24366  007CFC                     __end_of_nwkRouteErrorReceived:
 24367                           	opt callstack 0
 24368                           
 24369 ;; *************** function _nwkRouteRemove *****************
 24370 ;; Defined at:
 24371 ;;		line 183 in file "../nwk/nwk_src/nwkRoute.c"
 24372 ;; Parameters:    Size  Location     Type
 24373 ;;  dst             2    7[COMRAM] unsigned short 
 24374 ;;  multicast       1    9[COMRAM] unsigned char 
 24375 ;; Auto vars:     Size  Location     Type
 24376 ;;  entry           2   10[COMRAM] PTR struct NWK_RouteTabl
 24377 ;;		 -> nwkRouteTable(70), NULL(0), 
 24378 ;; Return value:  Size  Location     Type
 24379 ;;                  1    wreg      void 
 24380 ;; Registers used:
 24381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24382 ;; Tracked objects:
 24383 ;;		On entry : 3E/1
 24384 ;;		On exit  : 0/0
 24385 ;;		Unchanged: 0/0
 24386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24387 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24388 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24390 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24391 ;;Total ram usage:        5 bytes
 24392 ;; Hardware stack levels used:    1
 24393 ;; Hardware stack levels required when called:    8
 24394 ;; This function calls:
 24395 ;;		_NWK_RouteFindEntry
 24396 ;;		_NWK_RouteFreeEntry
 24397 ;; This function is called by:
 24398 ;;		_nwkRouteErrorReceived
 24399 ;;		_nwkRxRejectDuplicate
 24400 ;; This function uses a non-reentrant model
 24401 ;;
 24402                           
 24403                           	psect	text149
 24404  0085DC                     __ptext149:
 24405                           	opt callstack 0
 24406  0085DC                     _nwkRouteRemove:
 24407                           	opt callstack 17
 24408                           
 24409                           ;../nwk/nwk_src/nwkRoute.c: 183: void nwkRouteRemove(uint16_t dst, uint8_t multicast);..
      +                          /nwk/nwk_src/nwkRoute.c: 184: {;../nwk/nwk_src/nwkRoute.c: 185:   NWK_RouteTableEntry_t 
      +                          *entry;;../nwk/nwk_src/nwkRoute.c: 187:   entry = NWK_RouteFindEntry(dst, multicast);
 24410                           
 24411                           ;incstack = 0
 24412  0085DC  0060  F020  F002   	movff	nwkRouteRemove@dst,NWK_RouteFindEntry@dst
 24413  0085E2  0060  F024  F003   	movff	nwkRouteRemove@dst+1,NWK_RouteFindEntry@dst+1
 24414  0085E8  0060  F028  F004   	movff	nwkRouteRemove@multicast,NWK_RouteFindEntry@multicast
 24415  0085EE  EC3E  F03C         	call	_NWK_RouteFindEntry	;wreg free
 24416  0085F2  0060  F008  F00B   	movff	?_NWK_RouteFindEntry,nwkRouteRemove@entry
 24417  0085F8  0060  F00C  F00C   	movff	?_NWK_RouteFindEntry+1,nwkRouteRemove@entry+1
 24418                           
 24419                           ;../nwk/nwk_src/nwkRoute.c: 188:   if (entry)
 24420  0085FE  500B               	movf	nwkRouteRemove@entry^0,w,c
 24421  008600  100C               	iorwf	(nwkRouteRemove@entry+1)^0,w,c
 24422  008602  B4D8               	btfsc	status,2,c
 24423  008604  0012               	return	
 24424                           
 24425                           ;../nwk/nwk_src/nwkRoute.c: 189:     NWK_RouteFreeEntry(entry);
 24426  008606  0060  F02C  F002   	movff	nwkRouteRemove@entry,NWK_RouteFreeEntry@entry
 24427  00860C  0060  F030  F003   	movff	nwkRouteRemove@entry+1,NWK_RouteFreeEntry@entry+1
 24428  008612  ECD2  F043         	call	_NWK_RouteFreeEntry	;wreg free
 24429  008616  0012               	return		;funcret
 24430  008618                     __end_of_nwkRouteRemove:
 24431                           	opt callstack 0
 24432                           
 24433 ;; *************** function _NWK_RouteFreeEntry *****************
 24434 ;; Defined at:
 24435 ;;		line 134 in file "../nwk/nwk_src/nwkRoute.c"
 24436 ;; Parameters:    Size  Location     Type
 24437 ;;  entry           2    1[COMRAM] PTR struct NWK_RouteTabl
 24438 ;;		 -> nwkRouteTable(70), NULL(0), 
 24439 ;; Auto vars:     Size  Location     Type
 24440 ;;		None
 24441 ;; Return value:  Size  Location     Type
 24442 ;;                  1    wreg      void 
 24443 ;; Registers used:
 24444 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24445 ;; Tracked objects:
 24446 ;;		On entry : 0/0
 24447 ;;		On exit  : 0/0
 24448 ;;		Unchanged: 0/0
 24449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24453 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24454 ;;Total ram usage:        2 bytes
 24455 ;; Hardware stack levels used:    1
 24456 ;; Hardware stack levels required when called:    7
 24457 ;; This function calls:
 24458 ;;		Nothing
 24459 ;; This function is called by:
 24460 ;;		_nwkRouteRemove
 24461 ;;		_nwkRouteFrameSent
 24462 ;; This function uses a non-reentrant model
 24463 ;;
 24464                           
 24465                           	psect	text150
 24466  0087A4                     __ptext150:
 24467                           	opt callstack 0
 24468  0087A4                     _NWK_RouteFreeEntry:
 24469                           	opt callstack 19
 24470                           
 24471                           ;../nwk/nwk_src/nwkRoute.c: 134: void NWK_RouteFreeEntry(NWK_RouteTableEntry_t *entry);.
      +                          ./nwk/nwk_src/nwkRoute.c: 135: {;../nwk/nwk_src/nwkRoute.c: 136:   if (entry->fixed)
 24472                           
 24473                           ;incstack = 0
 24474  0087A4  0060  F00B  FFD9   	movff	NWK_RouteFreeEntry@entry,fsr2l
 24475  0087AA  0060  F00F  FFDA   	movff	NWK_RouteFreeEntry@entry+1,fsr2h
 24476  0087B0  B0DF               	btfsc	indf2,0,c
 24477  0087B2  0012               	return	
 24478                           
 24479                           ;../nwk/nwk_src/nwkRoute.c: 138:   entry->dstAddr = 0xffff;
 24480  0087B4  EE20 F001          	lfsr	2,1
 24481  0087B8  5002               	movf	NWK_RouteFreeEntry@entry^0,w,c
 24482  0087BA  26D9               	addwf	fsr2l,f,c
 24483  0087BC  5003               	movf	(NWK_RouteFreeEntry@entry+1)^0,w,c
 24484  0087BE  22DA               	addwfc	fsr2h,f,c
 24485  0087C0  0EFF               	movlw	255
 24486  0087C2  6EDE               	movwf	postinc2,c
 24487  0087C4  0EFF               	movlw	255
 24488  0087C6  6EDD               	movwf	postdec2,c
 24489                           
 24490                           ;../nwk/nwk_src/nwkRoute.c: 139:   entry->rank = 0;
 24491  0087C8  EE20 F005          	lfsr	2,5
 24492  0087CC  5002               	movf	NWK_RouteFreeEntry@entry^0,w,c
 24493  0087CE  26D9               	addwf	fsr2l,f,c
 24494  0087D0  5003               	movf	(NWK_RouteFreeEntry@entry+1)^0,w,c
 24495  0087D2  22DA               	addwfc	fsr2h,f,c
 24496  0087D4  0E00               	movlw	0
 24497  0087D6  6EDF               	movwf	indf2,c
 24498  0087D8  0012               	return		;funcret
 24499  0087DA                     __end_of_NWK_RouteFreeEntry:
 24500                           	opt callstack 0
 24501                           
 24502 ;; *************** function _get_free_rx_buffer *****************
 24503 ;; Defined at:
 24504 ;;		line 86 in file "../app/app_src/application.c"
 24505 ;; Parameters:    Size  Location     Type
 24506 ;;  buf_id          1    1[COMRAM] PTR unsigned char 
 24507 ;;		 -> appDataInd@buf_id(1), 
 24508 ;; Auto vars:     Size  Location     Type
 24509 ;;		None
 24510 ;; Return value:  Size  Location     Type
 24511 ;;                  1    wreg      _Bool 
 24512 ;; Registers used:
 24513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24514 ;; Tracked objects:
 24515 ;;		On entry : 3F/0
 24516 ;;		On exit  : 3F/0
 24517 ;;		Unchanged: 3F/0
 24518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24519 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24522 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24523 ;;Total ram usage:        2 bytes
 24524 ;; Hardware stack levels used:    1
 24525 ;; Hardware stack levels required when called:    7
 24526 ;; This function calls:
 24527 ;;		Nothing
 24528 ;; This function is called by:
 24529 ;;		_appDataInd
 24530 ;; This function uses a non-reentrant model
 24531 ;;
 24532                           
 24533                           	psect	text151
 24534  007946                     __ptext151:
 24535                           	opt callstack 0
 24536  007946                     _get_free_rx_buffer:
 24537                           	opt callstack 17
 24538                           
 24539                           ; BSR set to: 0
 24540                           ;../app/app_src/application.c: 87:     *buf_id = 0;
 24541                           
 24542                           ;incstack = 0
 24543  007946  5002               	movf	get_free_rx_buffer@buf_id^0,w,c
 24544  007948  6ED9               	movwf	fsr2l,c
 24545  00794A  6ADA               	clrf	fsr2h,c
 24546  00794C  0E00               	movlw	0
 24547  00794E  6EDF               	movwf	indf2,c
 24548                           
 24549                           ;../app/app_src/application.c: 88:     while(*buf_id < 4){
 24550  007950  D023               	goto	l239
 24551  007952                     l9626:
 24552                           
 24553                           ; BSR set to: 0
 24554                           ;../app/app_src/application.c: 89:         if(rx_buffer[*buf_id].free){
 24555  007952  5002               	movf	get_free_rx_buffer@buf_id^0,w,c
 24556  007954  6ED9               	movwf	fsr2l,c
 24557  007956  6ADA               	clrf	fsr2h,c
 24558  007958  50DF               	movf	indf2,w,c
 24559  00795A  6E03               	movwf	??_get_free_rx_buffer^0,c
 24560  00795C  5003               	movf	??_get_free_rx_buffer^0,w,c
 24561  00795E  0D7A               	mullw	122
 24562  007960  0E76               	movlw	low _rx_buffer
 24563  007962  24F3               	addwf	243,w,c
 24564  007964  6ED9               	movwf	fsr2l,c
 24565  007966  0E0A               	movlw	high _rx_buffer
 24566  007968  20F4               	addwfc	prodh,w,c
 24567  00796A  6EDA               	movwf	fsr2h,c
 24568  00796C  A0DF               	btfss	indf2,0,c
 24569  00796E  D010               	goto	l9634
 24570                           
 24571                           ; BSR set to: 0
 24572                           ;../app/app_src/application.c: 90:             rx_buffer[*buf_id].free = 0;
 24573  007970  5002               	movf	get_free_rx_buffer@buf_id^0,w,c
 24574  007972  6ED9               	movwf	fsr2l,c
 24575  007974  6ADA               	clrf	fsr2h,c
 24576  007976  50DF               	movf	indf2,w,c
 24577  007978  6E03               	movwf	??_get_free_rx_buffer^0,c
 24578  00797A  5003               	movf	??_get_free_rx_buffer^0,w,c
 24579  00797C  0D7A               	mullw	122
 24580  00797E  0E76               	movlw	low _rx_buffer
 24581  007980  24F3               	addwf	243,w,c
 24582  007982  6ED9               	movwf	fsr2l,c
 24583  007984  0E0A               	movlw	high _rx_buffer
 24584  007986  20F4               	addwfc	prodh,w,c
 24585  007988  6EDA               	movwf	fsr2h,c
 24586  00798A  90DF               	bcf	indf2,0,c
 24587                           
 24588                           ; BSR set to: 0
 24589                           ;../app/app_src/application.c: 91:             return 1;
 24590  00798C  0E01               	movlw	1
 24591  00798E  0012               	return	
 24592  007990                     l9634:
 24593                           
 24594                           ; BSR set to: 0
 24595                           ;../app/app_src/application.c: 93:         (*buf_id)++;
 24596  007990  5002               	movf	get_free_rx_buffer@buf_id^0,w,c
 24597  007992  6ED9               	movwf	fsr2l,c
 24598  007994  6ADA               	clrf	fsr2h,c
 24599  007996  2ADF               	incf	indf2,f,c
 24600  007998                     l239:
 24601                           
 24602                           ; BSR set to: 0
 24603                           ;../app/app_src/application.c: 88:     while(*buf_id < 4){
 24604  007998  5002               	movf	get_free_rx_buffer@buf_id^0,w,c
 24605  00799A  6ED9               	movwf	fsr2l,c
 24606  00799C  6ADA               	clrf	fsr2h,c
 24607  00799E  0E03               	movlw	3
 24608  0079A0  64DF               	cpfsgt	indf2,c
 24609  0079A2  D7D7               	goto	l9626
 24610                           
 24611                           ; BSR set to: 0
 24612                           ;../app/app_src/application.c: 95:     return 0;
 24613  0079A4  0E00               	movlw	0
 24614                           
 24615                           ; BSR set to: 0
 24616  0079A6  0012               	return		;funcret
 24617  0079A8                     __end_of_get_free_rx_buffer:
 24618                           	opt callstack 0
 24619                           
 24620 ;; *************** function _CircularBufferPushBack *****************
 24621 ;; Defined at:
 24622 ;;		line 71 in file "../app/app_src/circular buffer.c"
 24623 ;; Parameters:    Size  Location     Type
 24624 ;;  ctx             2   18[COMRAM] PTR struct .
 24625 ;;		 -> ledtasksbuf(10), rx_buffer_queue_context(10), 
 24626 ;;  val             1   20[COMRAM] PTR void 
 24627 ;;		 -> queueLedEvent@temp(3), appDataInd@buf_id(1), 
 24628 ;; Auto vars:     Size  Location     Type
 24629 ;;  write_pos       2   25[COMRAM] unsigned int 
 24630 ;; Return value:  Size  Location     Type
 24631 ;;                  1    wreg      char 
 24632 ;; Registers used:
 24633 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24634 ;; Tracked objects:
 24635 ;;		On entry : 0/0
 24636 ;;		On exit  : 0/0
 24637 ;;		Unchanged: 0/0
 24638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24639 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24641 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24642 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24643 ;;Total ram usage:        9 bytes
 24644 ;; Hardware stack levels used:    1
 24645 ;; Hardware stack levels required when called:    8
 24646 ;; This function calls:
 24647 ;;		___wmul
 24648 ;;		_memcpy
 24649 ;; This function is called by:
 24650 ;;		_appDataInd
 24651 ;;		_queueLedEvent
 24652 ;; This function uses a non-reentrant model
 24653 ;;
 24654                           
 24655                           	psect	text152
 24656  0054CE                     __ptext152:
 24657                           	opt callstack 0
 24658  0054CE                     _CircularBufferPushBack:
 24659                           	opt callstack 19
 24660                           
 24661                           ;../app/app_src/circular buffer.c: 72:     size_t write_pos = (ctx->write_pos + 1) & ctx
      +                          ->max_size;
 24662                           
 24663                           ; BSR set to: 0
 24664                           ;incstack = 0
 24665  0054CE  EE20 F008          	lfsr	2,8
 24666  0054D2  5013               	movf	CircularBufferPushBack@ctx^0,w,c
 24667  0054D4  26D9               	addwf	fsr2l,f,c
 24668  0054D6  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
 24669  0054D8  22DA               	addwfc	fsr2h,f,c
 24670  0054DA  006F FF78  F016    	movff	postinc2,??_CircularBufferPushBack
 24671  0054E0  006F FF74  F017    	movff	postdec2,??_CircularBufferPushBack+1
 24672  0054E6  EE20 F002          	lfsr	2,2
 24673  0054EA  5013               	movf	CircularBufferPushBack@ctx^0,w,c
 24674  0054EC  26D9               	addwf	fsr2l,f,c
 24675  0054EE  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
 24676  0054F0  22DA               	addwfc	fsr2h,f,c
 24677  0054F2  006F FF78  F018    	movff	postinc2,??_CircularBufferPushBack+2
 24678  0054F8  006F FF74  F019    	movff	postdec2,??_CircularBufferPushBack+3
 24679  0054FE  0E01               	movlw	1
 24680  005500  2618               	addwf	(??_CircularBufferPushBack+2)^0,f,c
 24681  005502  0E00               	movlw	0
 24682  005504  2219               	addwfc	(??_CircularBufferPushBack+3)^0,f,c
 24683  005506  5016               	movf	??_CircularBufferPushBack^0,w,c
 24684  005508  1418               	andwf	(??_CircularBufferPushBack+2)^0,w,c
 24685  00550A  6E1A               	movwf	CircularBufferPushBack@write_pos^0,c
 24686  00550C  5017               	movf	(??_CircularBufferPushBack+1)^0,w,c
 24687  00550E  1419               	andwf	(??_CircularBufferPushBack+3)^0,w,c
 24688  005510  6E1B               	movwf	(CircularBufferPushBack@write_pos+1)^0,c
 24689                           
 24690                           ;../app/app_src/circular buffer.c: 75:     if (write_pos == ctx->read_pos) {
 24691  005512  EE20 F004          	lfsr	2,4
 24692  005516  5013               	movf	CircularBufferPushBack@ctx^0,w,c
 24693  005518  26D9               	addwf	fsr2l,f,c
 24694  00551A  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
 24695  00551C  22DA               	addwfc	fsr2h,f,c
 24696  00551E  501A               	movf	CircularBufferPushBack@write_pos^0,w,c
 24697  005520  18DE               	xorwf	postinc2,w,c
 24698  005522  E104               	bnz	l14420
 24699  005524  501B               	movf	(CircularBufferPushBack@write_pos+1)^0,w,c
 24700  005526  18DE               	xorwf	postinc2,w,c
 24701  005528  B4D8               	btfsc	status,2,c
 24702  00552A  0012               	return	
 24703  00552C                     l14420:
 24704                           
 24705                           ;../app/app_src/circular buffer.c: 80:     memcpy(&ctx->buf[ctx->write_pos * ctx->elemen
      +                          t_size], val,
 24706  00552C  EE20 F002          	lfsr	2,2
 24707  005530  5013               	movf	CircularBufferPushBack@ctx^0,w,c
 24708  005532  26D9               	addwf	fsr2l,f,c
 24709  005534  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
 24710  005536  22DA               	addwfc	fsr2h,f,c
 24711  005538  006F FF78  F002    	movff	postinc2,___wmul@multiplier
 24712  00553E  006F FF74  F003    	movff	postdec2,___wmul@multiplier+1
 24713  005544  EE20 F006          	lfsr	2,6
 24714  005548  5013               	movf	CircularBufferPushBack@ctx^0,w,c
 24715  00554A  26D9               	addwf	fsr2l,f,c
 24716  00554C  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
 24717  00554E  22DA               	addwfc	fsr2h,f,c
 24718  005550  006F FF78  F004    	movff	postinc2,___wmul@multiplicand
 24719  005556  006F FF74  F005    	movff	postdec2,___wmul@multiplicand+1
 24720  00555C  ECD6  F044         	call	___wmul	;wreg free
 24721  005560  0060  F04F  FFD9   	movff	CircularBufferPushBack@ctx,fsr2l
 24722  005566  0060  F053  FFDA   	movff	CircularBufferPushBack@ctx+1,fsr2h
 24723  00556C  006F FF78  F016    	movff	postinc2,??_CircularBufferPushBack
 24724  005572  006F FF74  F017    	movff	postdec2,??_CircularBufferPushBack+1
 24725  005578  5002               	movf	?___wmul^0,w,c
 24726  00557A  2416               	addwf	??_CircularBufferPushBack^0,w,c
 24727  00557C  6E08               	movwf	memcpy@d1^0,c
 24728  00557E  5003               	movf	(?___wmul+1)^0,w,c
 24729  005580  2017               	addwfc	(??_CircularBufferPushBack+1)^0,w,c
 24730  005582  6E09               	movwf	(memcpy@d1+1)^0,c
 24731  005584  0060  F054  F00A   	movff	CircularBufferPushBack@val,memcpy@s1
 24732  00558A  6A0B               	clrf	(memcpy@s1+1)^0,c
 24733  00558C  EE20 F006          	lfsr	2,6
 24734  005590  5013               	movf	CircularBufferPushBack@ctx^0,w,c
 24735  005592  26D9               	addwf	fsr2l,f,c
 24736  005594  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
 24737  005596  22DA               	addwfc	fsr2h,f,c
 24738  005598  006F FF78  F00C    	movff	postinc2,memcpy@n
 24739  00559E  006F FF74  F00D    	movff	postdec2,memcpy@n+1
 24740  0055A4  ECF6  F03A         	call	_memcpy	;wreg free
 24741                           
 24742                           ;../app/app_src/circular buffer.c: 82:     ctx->write_pos = write_pos;
 24743  0055A8  EE20 F002          	lfsr	2,2
 24744  0055AC  5013               	movf	CircularBufferPushBack@ctx^0,w,c
 24745  0055AE  26D9               	addwf	fsr2l,f,c
 24746  0055B0  5014               	movf	(CircularBufferPushBack@ctx+1)^0,w,c
 24747  0055B2  22DA               	addwfc	fsr2h,f,c
 24748  0055B4  0060  F06B  FFDE   	movff	CircularBufferPushBack@write_pos,postinc2
 24749  0055BA  0060  F06F  FFDD   	movff	CircularBufferPushBack@write_pos+1,postdec2
 24750  0055C0  0012               	return		;funcret
 24751  0055C2                     __end_of_CircularBufferPushBack:
 24752                           	opt callstack 0
 24753                           
 24754 ;; *************** function ___wmul *****************
 24755 ;; Defined at:
 24756 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 24757 ;; Parameters:    Size  Location     Type
 24758 ;;  multiplier      2    1[COMRAM] unsigned int 
 24759 ;;  multiplicand    2    3[COMRAM] unsigned int 
 24760 ;; Auto vars:     Size  Location     Type
 24761 ;;  product         2    5[COMRAM] unsigned int 
 24762 ;; Return value:  Size  Location     Type
 24763 ;;                  2    1[COMRAM] unsigned int 
 24764 ;; Registers used:
 24765 ;;		wreg, status,2, status,0, prodl, prodh
 24766 ;; Tracked objects:
 24767 ;;		On entry : 0/0
 24768 ;;		On exit  : 0/0
 24769 ;;		Unchanged: 0/0
 24770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24771 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24772 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24774 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24775 ;;Total ram usage:        6 bytes
 24776 ;; Hardware stack levels used:    1
 24777 ;; Hardware stack levels required when called:    7
 24778 ;; This function calls:
 24779 ;;		Nothing
 24780 ;; This function is called by:
 24781 ;;		_atoi
 24782 ;;		_CircularBufferPopFront
 24783 ;;		_CircularBufferPushBack
 24784 ;; This function uses a non-reentrant model
 24785 ;;
 24786                           
 24787                           	psect	text153
 24788  0089AC                     __ptext153:
 24789                           	opt callstack 0
 24790  0089AC                     ___wmul:
 24791                           	opt callstack 19
 24792                           
 24793                           ;incstack = 0
 24794  0089AC  5002               	movf	___wmul@multiplier^0,w,c
 24795  0089AE  0204               	mulwf	___wmul@multiplicand^0,c
 24796  0089B0  006F FFCC  F006    	movff	prodl,___wmul@product
 24797  0089B6  006F FFD0  F007    	movff	prodh,___wmul@product+1
 24798  0089BC  5002               	movf	___wmul@multiplier^0,w,c
 24799  0089BE  0205               	mulwf	(___wmul@multiplicand+1)^0,c
 24800  0089C0  50F3               	movf	243,w,c
 24801  0089C2  2607               	addwf	(___wmul@product+1)^0,f,c
 24802  0089C4  5003               	movf	(___wmul@multiplier+1)^0,w,c
 24803  0089C6  0204               	mulwf	___wmul@multiplicand^0,c
 24804  0089C8  50F3               	movf	243,w,c
 24805  0089CA  2607               	addwf	(___wmul@product+1)^0,f,c
 24806  0089CC  0060  F018  F002   	movff	___wmul@product,?___wmul
 24807  0089D2  0060  F01C  F003   	movff	___wmul@product+1,?___wmul+1
 24808  0089D8  0012               	return		;funcret
 24809  0089DA                     __end_of___wmul:
 24810                           	opt callstack 0
 24811                           
 24812 ;; *************** function _nwkRouteFrame *****************
 24813 ;; Defined at:
 24814 ;;		line 299 in file "../nwk/nwk_src/nwkRoute.c"
 24815 ;; Parameters:    Size  Location     Type
 24816 ;;  frame           2   50[COMRAM] PTR struct NwkFrame_t
 24817 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24818 ;; Auto vars:     Size  Location     Type
 24819 ;;  header          2   52[COMRAM] PTR __pack struct NwkFra
 24820 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 24821 ;; Return value:  Size  Location     Type
 24822 ;;                  1    wreg      void 
 24823 ;; Registers used:
 24824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24825 ;; Tracked objects:
 24826 ;;		On entry : 0/0
 24827 ;;		On exit  : 3E/0
 24828 ;;		Unchanged: 0/0
 24829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24830 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24833 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24834 ;;Total ram usage:        4 bytes
 24835 ;; Hardware stack levels used:    1
 24836 ;; Hardware stack levels required when called:   12
 24837 ;; This function calls:
 24838 ;;		_NWK_RouteNextHop
 24839 ;;		_nwkFrameFree
 24840 ;;		_nwkRouteSendRouteError
 24841 ;;		_nwkTxFrame
 24842 ;; This function is called by:
 24843 ;;		_nwkRxTaskHandler
 24844 ;; This function uses a non-reentrant model
 24845 ;;
 24846                           
 24847                           	psect	text154
 24848  005E92                     __ptext154:
 24849                           	opt callstack 0
 24850  005E92                     _nwkRouteFrame:
 24851                           	opt callstack 15
 24852                           
 24853                           ;../nwk/nwk_src/nwkRoute.c: 299: void nwkRouteFrame(NwkFrame_t *frame);../nwk/nwk_src/nw
      +                          kRoute.c: 300: {;../nwk/nwk_src/nwkRoute.c: 301:   NwkFrameHeader_t *header = &frame->he
      +                          ader;
 24854                           
 24855                           ;incstack = 0
 24856  005E92  0E02               	movlw	2
 24857  005E94  2433               	addwf	nwkRouteFrame@frame^0,w,c
 24858  005E96  6E35               	movwf	nwkRouteFrame@header^0,c
 24859  005E98  0E00               	movlw	0
 24860  005E9A  2034               	addwfc	(nwkRouteFrame@frame+1)^0,w,c
 24861  005E9C  6E36               	movwf	(nwkRouteFrame@header+1)^0,c
 24862                           
 24863                           ;../nwk/nwk_src/nwkRoute.c: 303:   if (0xffff != NWK_RouteNextHop(header->nwkDstAddr, he
      +                          ader->nwkFcf.multicast))
 24864  005E9E  EE20 F00D          	lfsr	2,13
 24865  005EA2  5035               	movf	nwkRouteFrame@header^0,w,c
 24866  005EA4  26D9               	addwf	fsr2l,f,c
 24867  005EA6  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24868  005EA8  22DA               	addwfc	fsr2h,f,c
 24869  005EAA  006F FF78  F008    	movff	postinc2,NWK_RouteNextHop@dst
 24870  005EB0  006F FF74  F009    	movff	postdec2,NWK_RouteNextHop@dst+1
 24871  005EB6  EE20 F009          	lfsr	2,9
 24872  005EBA  5035               	movf	nwkRouteFrame@header^0,w,c
 24873  005EBC  26D9               	addwf	fsr2l,f,c
 24874  005EBE  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24875  005EC0  22DA               	addwfc	fsr2h,f,c
 24876  005EC2  0E00               	movlw	0
 24877  005EC4  B6DF               	btfsc	indf2,3,c
 24878  005EC6  0E01               	movlw	1
 24879  005EC8  6E0A               	movwf	NWK_RouteNextHop@multicast^0,c
 24880  005ECA  EC64  F040         	call	_NWK_RouteNextHop	;wreg free
 24881  005ECE  2808               	incf	?_NWK_RouteNextHop^0,w,c
 24882  005ED0  E103               	bnz	u15520
 24883  005ED2  2809               	incf	(?_NWK_RouteNextHop+1)^0,w,c
 24884  005ED4  B4D8               	btfsc	status,2,c
 24885  005ED6  D01B               	goto	l15554
 24886  005ED8                     u15520:
 24887                           
 24888                           ;../nwk/nwk_src/nwkRoute.c: 304:   {;../nwk/nwk_src/nwkRoute.c: 305:     frame->tx.confi
      +                          rm = ((void*)0);
 24889  005ED8  EE20 F087          	lfsr	2,135
 24890  005EDC  5033               	movf	nwkRouteFrame@frame^0,w,c
 24891  005EDE  26D9               	addwf	fsr2l,f,c
 24892  005EE0  5034               	movf	(nwkRouteFrame@frame+1)^0,w,c
 24893  005EE2  22DA               	addwfc	fsr2h,f,c
 24894  005EE4  0E00               	movlw	0
 24895  005EE6  6EDE               	movwf	postinc2,c
 24896  005EE8  0E00               	movlw	0
 24897  005EEA  6EDD               	movwf	postdec2,c
 24898                           
 24899                           ;../nwk/nwk_src/nwkRoute.c: 306:     frame->tx.control = NWK_TX_CONTROL_ROUTING;
 24900  005EEC  EE20 F086          	lfsr	2,134
 24901  005EF0  5033               	movf	nwkRouteFrame@frame^0,w,c
 24902  005EF2  26D9               	addwf	fsr2l,f,c
 24903  005EF4  5034               	movf	(nwkRouteFrame@frame+1)^0,w,c
 24904  005EF6  22DA               	addwfc	fsr2h,f,c
 24905  005EF8  0E02               	movlw	2
 24906  005EFA  6EDF               	movwf	indf2,c
 24907                           
 24908                           ;../nwk/nwk_src/nwkRoute.c: 307:     nwkTxFrame(frame);
 24909  005EFC  0060  F0CC  F024   	movff	nwkRouteFrame@frame,nwkTxFrame@frame
 24910  005F02  0060  F0D0  F025   	movff	nwkRouteFrame@frame+1,nwkTxFrame@frame+1
 24911  005F08  ECD0  F01D         	call	_nwkTxFrame	;wreg free
 24912                           
 24913                           ;../nwk/nwk_src/nwkRoute.c: 308:   }
 24914  005F0C  0012               	return	
 24915  005F0E                     l15554:
 24916                           
 24917                           ;../nwk/nwk_src/nwkRoute.c: 310:   {;../nwk/nwk_src/nwkRoute.c: 311:     nwkRouteSendRou
      +                          teError(header->nwkSrcAddr, header->nwkDstAddr, header->nwkFcf.multicast);
 24918  005F0E  EE20 F00B          	lfsr	2,11
 24919  005F12  5035               	movf	nwkRouteFrame@header^0,w,c
 24920  005F14  26D9               	addwf	fsr2l,f,c
 24921  005F16  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24922  005F18  22DA               	addwfc	fsr2h,f,c
 24923  005F1A  006F FF78  F02A    	movff	postinc2,nwkRouteSendRouteError@src
 24924  005F20  006F FF74  F02B    	movff	postdec2,nwkRouteSendRouteError@src+1
 24925  005F26  EE20 F00D          	lfsr	2,13
 24926  005F2A  5035               	movf	nwkRouteFrame@header^0,w,c
 24927  005F2C  26D9               	addwf	fsr2l,f,c
 24928  005F2E  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24929  005F30  22DA               	addwfc	fsr2h,f,c
 24930  005F32  006F FF78  F02C    	movff	postinc2,nwkRouteSendRouteError@dst
 24931  005F38  006F FF74  F02D    	movff	postdec2,nwkRouteSendRouteError@dst+1
 24932  005F3E  EE20 F009          	lfsr	2,9
 24933  005F42  5035               	movf	nwkRouteFrame@header^0,w,c
 24934  005F44  26D9               	addwf	fsr2l,f,c
 24935  005F46  5036               	movf	(nwkRouteFrame@header+1)^0,w,c
 24936  005F48  22DA               	addwfc	fsr2h,f,c
 24937  005F4A  0E00               	movlw	0
 24938  005F4C  B6DF               	btfsc	indf2,3,c
 24939  005F4E  0E01               	movlw	1
 24940  005F50  6E2E               	movwf	nwkRouteSendRouteError@multicast^0,c
 24941  005F52  EC25  F02D         	call	_nwkRouteSendRouteError	;wreg free
 24942                           
 24943                           ;../nwk/nwk_src/nwkRoute.c: 312:     nwkFrameFree(frame);
 24944  005F56  0060  F0CC  F002   	movff	nwkRouteFrame@frame,nwkFrameFree@frame
 24945  005F5C  0060  F0D0  F003   	movff	nwkRouteFrame@frame+1,nwkFrameFree@frame+1
 24946  005F62  ECE1  F046         	call	_nwkFrameFree	;wreg free
 24947  005F66  0012               	return		;funcret
 24948  005F68                     __end_of_nwkRouteFrame:
 24949                           	opt callstack 0
 24950                           
 24951 ;; *************** function _nwkRouteSendRouteError *****************
 24952 ;; Defined at:
 24953 ;;		line 318 in file "../nwk/nwk_src/nwkRoute.c"
 24954 ;; Parameters:    Size  Location     Type
 24955 ;;  src             2   41[COMRAM] unsigned short 
 24956 ;;  dst             2   43[COMRAM] unsigned short 
 24957 ;;  multicast       1   45[COMRAM] unsigned char 
 24958 ;; Auto vars:     Size  Location     Type
 24959 ;;  frame           2   48[COMRAM] PTR struct NwkFrame_t
 24960 ;;		 -> nwkFrameFrames(685), NULL(0), 
 24961 ;;  command         2   46[COMRAM] PTR __pack struct NwkCom
 24962 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 24963 ;; Return value:  Size  Location     Type
 24964 ;;                  1    wreg      void 
 24965 ;; Registers used:
 24966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24967 ;; Tracked objects:
 24968 ;;		On entry : 0/0
 24969 ;;		On exit  : 0/0
 24970 ;;		Unchanged: 0/0
 24971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24972 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24973 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24975 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24976 ;;Total ram usage:        9 bytes
 24977 ;; Hardware stack levels used:    1
 24978 ;; Hardware stack levels required when called:   11
 24979 ;; This function calls:
 24980 ;;		_nwkFrameAlloc
 24981 ;;		_nwkFrameCommandInit
 24982 ;;		_nwkTxFrame
 24983 ;; This function is called by:
 24984 ;;		_nwkRouteFrame
 24985 ;; This function uses a non-reentrant model
 24986 ;;
 24987                           
 24988                           	psect	text155
 24989  005A4A                     __ptext155:
 24990                           	opt callstack 0
 24991  005A4A                     _nwkRouteSendRouteError:
 24992                           	opt callstack 15
 24993                           
 24994                           ;../nwk/nwk_src/nwkRoute.c: 318: static void nwkRouteSendRouteError(uint16_t src, uint16
      +                          _t dst, uint8_t multicast);../nwk/nwk_src/nwkRoute.c: 319: {;../nwk/nwk_src/nwkRoute.c: 
      +                          320:   NwkFrame_t *frame;;../nwk/nwk_src/nwkRoute.c: 321:   NwkCommandRouteError_t *comm
      +                          and;;../nwk/nwk_src/nwkRoute.c: 323:   if (((void*)0) == (frame = nwkFrameAlloc()))
 24995                           
 24996                           ;incstack = 0
 24997  005A4A  ECE8  F033         	call	_nwkFrameAlloc	;wreg free
 24998  005A4E  0060  F038  F031   	movff	?_nwkFrameAlloc,nwkRouteSendRouteError@frame
 24999  005A54  0060  F03C  F032   	movff	?_nwkFrameAlloc+1,nwkRouteSendRouteError@frame+1
 25000  005A5A  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 25001  005A5C  1032               	iorwf	(nwkRouteSendRouteError@frame+1)^0,w,c
 25002  005A5E  B4D8               	btfsc	status,2,c
 25003  005A60  0012               	return	
 25004                           
 25005                           ;../nwk/nwk_src/nwkRoute.c: 326:   nwkFrameCommandInit(frame);
 25006  005A62  0060  F0C4  F002   	movff	nwkRouteSendRouteError@frame,nwkFrameCommandInit@frame
 25007  005A68  0060  F0C8  F003   	movff	nwkRouteSendRouteError@frame+1,nwkFrameCommandInit@frame+1
 25008  005A6E  ECB8  F041         	call	_nwkFrameCommandInit	;wreg free
 25009                           
 25010                           ; BSR set to: 1
 25011                           ;../nwk/nwk_src/nwkRoute.c: 328:   frame->size += sizeof(NwkCommandRouteError_t);
 25012  005A72  EE20 F001          	lfsr	2,1
 25013  005A76  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 25014  005A78  26D9               	addwf	fsr2l,f,c
 25015  005A7A  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 25016  005A7C  22DA               	addwfc	fsr2h,f,c
 25017  005A7E  0E06               	movlw	6
 25018  005A80  26DF               	addwf	indf2,f,c
 25019                           
 25020                           ; BSR set to: 1
 25021                           ;../nwk/nwk_src/nwkRoute.c: 329:   frame->tx.confirm = ((void*)0);
 25022  005A82  EE20 F087          	lfsr	2,135
 25023  005A86  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 25024  005A88  26D9               	addwf	fsr2l,f,c
 25025  005A8A  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 25026  005A8C  22DA               	addwfc	fsr2h,f,c
 25027  005A8E  0E00               	movlw	0
 25028  005A90  6EDE               	movwf	postinc2,c
 25029  005A92  0E00               	movlw	0
 25030  005A94  6EDD               	movwf	postdec2,c
 25031                           
 25032                           ; BSR set to: 1
 25033                           ;../nwk/nwk_src/nwkRoute.c: 331:   frame->header.nwkDstAddr = src;
 25034  005A96  EE20 F00F          	lfsr	2,15
 25035  005A9A  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 25036  005A9C  26D9               	addwf	fsr2l,f,c
 25037  005A9E  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 25038  005AA0  22DA               	addwfc	fsr2h,f,c
 25039  005AA2  0060  F0AB  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
 25040  005AA8  0060  F0AF  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
 25041                           
 25042                           ; BSR set to: 1
 25043                           ;../nwk/nwk_src/nwkRoute.c: 333:   command = (NwkCommandRouteError_t *)frame->payload;
 25044  005AAE  EE20 F081          	lfsr	2,129
 25045  005AB2  5031               	movf	nwkRouteSendRouteError@frame^0,w,c
 25046  005AB4  26D9               	addwf	fsr2l,f,c
 25047  005AB6  5032               	movf	(nwkRouteSendRouteError@frame+1)^0,w,c
 25048  005AB8  22DA               	addwfc	fsr2h,f,c
 25049  005ABA  006F FF78  F02F    	movff	postinc2,nwkRouteSendRouteError@command
 25050  005AC0  006F FF74  F030    	movff	postdec2,nwkRouteSendRouteError@command+1
 25051                           
 25052                           ; BSR set to: 1
 25053                           ;../nwk/nwk_src/nwkRoute.c: 334:   command->id = NWK_COMMAND_ROUTE_ERROR;
 25054  005AC6  0060  F0BF  FFD9   	movff	nwkRouteSendRouteError@command,fsr2l
 25055  005ACC  0060  F0C3  FFDA   	movff	nwkRouteSendRouteError@command+1,fsr2h
 25056  005AD2  0E01               	movlw	1
 25057  005AD4  6EDF               	movwf	indf2,c
 25058                           
 25059                           ; BSR set to: 1
 25060                           ;../nwk/nwk_src/nwkRoute.c: 335:   command->srcAddr = src;
 25061  005AD6  EE20 F001          	lfsr	2,1
 25062  005ADA  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 25063  005ADC  26D9               	addwf	fsr2l,f,c
 25064  005ADE  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 25065  005AE0  22DA               	addwfc	fsr2h,f,c
 25066  005AE2  0060  F0AB  FFDE   	movff	nwkRouteSendRouteError@src,postinc2
 25067  005AE8  0060  F0AF  FFDD   	movff	nwkRouteSendRouteError@src+1,postdec2
 25068                           
 25069                           ; BSR set to: 1
 25070                           ;../nwk/nwk_src/nwkRoute.c: 336:   command->dstAddr = dst;
 25071  005AEE  EE20 F003          	lfsr	2,3
 25072  005AF2  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 25073  005AF4  26D9               	addwf	fsr2l,f,c
 25074  005AF6  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 25075  005AF8  22DA               	addwfc	fsr2h,f,c
 25076  005AFA  0060  F0B3  FFDE   	movff	nwkRouteSendRouteError@dst,postinc2
 25077  005B00  0060  F0B7  FFDD   	movff	nwkRouteSendRouteError@dst+1,postdec2
 25078                           
 25079                           ; BSR set to: 1
 25080                           ;../nwk/nwk_src/nwkRoute.c: 337:   command->multicast = multicast;
 25081  005B06  EE20 F005          	lfsr	2,5
 25082  005B0A  502F               	movf	nwkRouteSendRouteError@command^0,w,c
 25083  005B0C  26D9               	addwf	fsr2l,f,c
 25084  005B0E  5030               	movf	(nwkRouteSendRouteError@command+1)^0,w,c
 25085  005B10  22DA               	addwfc	fsr2h,f,c
 25086  005B12  0060  F0BB  FFDF   	movff	nwkRouteSendRouteError@multicast,indf2
 25087                           
 25088                           ; BSR set to: 1
 25089                           ;../nwk/nwk_src/nwkRoute.c: 339:   nwkTxFrame(frame);
 25090  005B18  0060  F0C4  F024   	movff	nwkRouteSendRouteError@frame,nwkTxFrame@frame
 25091  005B1E  0060  F0C8  F025   	movff	nwkRouteSendRouteError@frame+1,nwkTxFrame@frame+1
 25092  005B24  ECD0  F01D         	call	_nwkTxFrame	;wreg free
 25093  005B28  0012               	return		;funcret
 25094  005B2A                     __end_of_nwkRouteSendRouteError:
 25095                           	opt callstack 0
 25096                           
 25097 ;; *************** function _nwkFrameCommandInit *****************
 25098 ;; Defined at:
 25099 ;;		line 131 in file "../nwk/nwk_src/nwkFrame.c"
 25100 ;; Parameters:    Size  Location     Type
 25101 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 25102 ;;		 -> nwkFrameFrames(685), NULL(0), 
 25103 ;; Auto vars:     Size  Location     Type
 25104 ;;		None
 25105 ;; Return value:  Size  Location     Type
 25106 ;;                  1    wreg      void 
 25107 ;; Registers used:
 25108 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25109 ;; Tracked objects:
 25110 ;;		On entry : 0/1
 25111 ;;		On exit  : 3F/1
 25112 ;;		Unchanged: 0/0
 25113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25117 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25118 ;;Total ram usage:        2 bytes
 25119 ;; Hardware stack levels used:    1
 25120 ;; Hardware stack levels required when called:    7
 25121 ;; This function calls:
 25122 ;;		Nothing
 25123 ;; This function is called by:
 25124 ;;		_nwkRouteSendRouteError
 25125 ;;		_nwkRxSendAck
 25126 ;; This function uses a non-reentrant model
 25127 ;;
 25128                           
 25129                           	psect	text156
 25130  008370                     __ptext156:
 25131                           	opt callstack 0
 25132  008370                     _nwkFrameCommandInit:
 25133                           	opt callstack 18
 25134                           
 25135                           ;../nwk/nwk_src/nwkFrame.c: 131: void nwkFrameCommandInit(NwkFrame_t *frame);../nwk/nwk_
      +                          src/nwkFrame.c: 132: {;../nwk/nwk_src/nwkFrame.c: 133:   frame->tx.status = NWK_SUCCESS_
      +                          STATUS;
 25136                           
 25137                           ;incstack = 0
 25138  008370  EE20 F083          	lfsr	2,131
 25139  008374  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 25140  008376  26D9               	addwf	fsr2l,f,c
 25141  008378  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 25142  00837A  22DA               	addwfc	fsr2h,f,c
 25143  00837C  0E00               	movlw	0
 25144  00837E  6EDF               	movwf	indf2,c
 25145                           
 25146                           ;../nwk/nwk_src/nwkFrame.c: 134:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 25147  008380  0101               	movlb	1	; () banked
 25148  008382  2B04               	incf	(_nwkIb+4)& (0+255),f,b
 25149  008384  EE20 F00C          	lfsr	2,12
 25150  008388  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 25151  00838A  26D9               	addwf	fsr2l,f,c
 25152  00838C  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 25153  00838E  22DA               	addwfc	fsr2h,f,c
 25154  008390  0060  F413  FFDF   	movff	_nwkIb+4,indf2
 25155                           
 25156                           ;../nwk/nwk_src/nwkFrame.c: 135:   frame->header.nwkSrcAddr = nwkIb.addr;
 25157  008396  EE20 F00D          	lfsr	2,13
 25158  00839A  5002               	movf	nwkFrameCommandInit@frame^0,w,c
 25159  00839C  26D9               	addwf	fsr2l,f,c
 25160  00839E  5003               	movf	(nwkFrameCommandInit@frame+1)^0,w,c
 25161  0083A0  22DA               	addwfc	fsr2h,f,c
 25162  0083A2  0060  F403  FFDE   	movff	_nwkIb,postinc2
 25163  0083A8  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 25164                           
 25165                           ; BSR set to: 1
 25166  0083AE  0012               	return		;funcret
 25167  0083B0                     __end_of_nwkFrameCommandInit:
 25168                           	opt callstack 0
 25169                           
 25170 ;; *************** function _nwkFrameFree *****************
 25171 ;; Defined at:
 25172 ;;		line 100 in file "../nwk/nwk_src/nwkFrame.c"
 25173 ;; Parameters:    Size  Location     Type
 25174 ;;  frame           2    1[COMRAM] PTR struct NwkFrame_t
 25175 ;;		 -> nwkFrameFrames(685), NULL(0), 
 25176 ;; Auto vars:     Size  Location     Type
 25177 ;;		None
 25178 ;; Return value:  Size  Location     Type
 25179 ;;                  1    wreg      void 
 25180 ;; Registers used:
 25181 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25182 ;; Tracked objects:
 25183 ;;		On entry : 0/0
 25184 ;;		On exit  : 3F/1
 25185 ;;		Unchanged: 0/0
 25186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25190 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25191 ;;Total ram usage:        2 bytes
 25192 ;; Hardware stack levels used:    1
 25193 ;; Hardware stack levels required when called:    7
 25194 ;; This function calls:
 25195 ;;		Nothing
 25196 ;; This function is called by:
 25197 ;;		_nwkDataReqTxConf
 25198 ;;		_nwkRouteFrame
 25199 ;;		_nwkRxTaskHandler
 25200 ;;		_nwkTxTaskHandler
 25201 ;; This function uses a non-reentrant model
 25202 ;;
 25203                           
 25204                           	psect	text157
 25205  008DC2                     __ptext157:
 25206                           	opt callstack 0
 25207  008DC2                     _nwkFrameFree:
 25208                           	opt callstack 20
 25209                           
 25210                           ;../nwk/nwk_src/nwkFrame.c: 100: void nwkFrameFree(NwkFrame_t *frame);../nwk/nwk_src/nwk
      +                          Frame.c: 101: {;../nwk/nwk_src/nwkFrame.c: 102:   frame->state = NWK_FRAME_STATE_FREE;
 25211                           
 25212                           ; BSR set to: 1
 25213                           ;incstack = 0
 25214  008DC2  0060  F00B  FFD9   	movff	nwkFrameFree@frame,fsr2l
 25215  008DC8  0060  F00F  FFDA   	movff	nwkFrameFree@frame+1,fsr2h
 25216  008DCE  0E00               	movlw	0
 25217  008DD0  6EDF               	movwf	indf2,c
 25218                           
 25219                           ;../nwk/nwk_src/nwkFrame.c: 103:   nwkIb.lock--;
 25220  008DD2  0101               	movlb	1	; () banked
 25221  008DD4  0726               	decf	(_nwkIb+38)& (0+255),f,b
 25222  008DD6  A0D8               	btfss	status,0,c
 25223  008DD8  0727               	decf	(_nwkIb+39)& (0+255),f,b
 25224                           
 25225                           ; BSR set to: 1
 25226  008DDA  0012               	return		;funcret
 25227  008DDC                     __end_of_nwkFrameFree:
 25228                           	opt callstack 0
 25229                           
 25230 ;; *************** function _nwkDataReqTaskHandler *****************
 25231 ;; Defined at:
 25232 ;;		line 209 in file "../nwk/nwk_src/nwkDataReq.c"
 25233 ;; Parameters:    Size  Location     Type
 25234 ;;		None
 25235 ;; Auto vars:     Size  Location     Type
 25236 ;;  req             2   50[COMRAM] PTR struct NWK_DataReq_t
 25237 ;;		 -> NULL(0), tx_buffer.nwkDataReq(22), tx_buffer(524), 
 25238 ;; Return value:  Size  Location     Type
 25239 ;;                  1    wreg      void 
 25240 ;; Registers used:
 25241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 25242 ;; Tracked objects:
 25243 ;;		On entry : 0/0
 25244 ;;		On exit  : 0/0
 25245 ;;		Unchanged: 0/0
 25246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25248 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25249 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25250 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25251 ;;Total ram usage:        4 bytes
 25252 ;; Hardware stack levels used:    1
 25253 ;; Hardware stack levels required when called:   12
 25254 ;; This function calls:
 25255 ;;		_nwkDataReqConfirm
 25256 ;;		_nwkDataReqSendFrame
 25257 ;; This function is called by:
 25258 ;;		_NWK_TaskHandler
 25259 ;; This function uses a non-reentrant model
 25260 ;;
 25261                           
 25262                           	psect	text158
 25263  00746E                     __ptext158:
 25264                           	opt callstack 0
 25265  00746E                     _nwkDataReqTaskHandler:
 25266                           	opt callstack 16
 25267                           
 25268                           ;../nwk/nwk_src/nwkDataReq.c: 211:   for (NWK_DataReq_t *req = nwkDataReqQueue; req; req
      +                           = req->next)
 25269                           
 25270                           ; BSR set to: 1
 25271                           ;incstack = 0
 25272  00746E  0060  F2FC  F033   	movff	_nwkDataReqQueue,nwkDataReqTaskHandler@req
 25273  007474  0060  F300  F034   	movff	_nwkDataReqQueue+1,nwkDataReqTaskHandler@req+1
 25274  00747A  D035               	goto	l16290
 25275  00747C                     l16272:
 25276                           
 25277                           ;../nwk/nwk_src/nwkDataReq.c: 216:       {;../nwk/nwk_src/nwkDataReq.c: 217:         nwk
      +                          DataReqSendFrame(req);
 25278  00747C  0060  F0CC  F02A   	movff	nwkDataReqTaskHandler@req,nwkDataReqSendFrame@req
 25279  007482  0060  F0D0  F02B   	movff	nwkDataReqTaskHandler@req+1,nwkDataReqSendFrame@req+1
 25280  007488  EC74  F00E         	call	_nwkDataReqSendFrame	;wreg free
 25281  00748C  0012               	return	
 25282  00748E                     l16278:
 25283                           
 25284                           ;../nwk/nwk_src/nwkDataReq.c: 225:       {;../nwk/nwk_src/nwkDataReq.c: 226:         nwk
      +                          DataReqConfirm(req);
 25285  00748E  0060  F0CC  F009   	movff	nwkDataReqTaskHandler@req,nwkDataReqConfirm@req
 25286  007494  0060  F0D0  F00A   	movff	nwkDataReqTaskHandler@req+1,nwkDataReqConfirm@req+1
 25287  00749A  ECD0  F02B         	call	_nwkDataReqConfirm	;wreg free
 25288  00749E  0012               	return	
 25289  0074A0                     l16286:
 25290  0074A0  EE20 F004          	lfsr	2,4
 25291  0074A4  5033               	movf	nwkDataReqTaskHandler@req^0,w,c
 25292  0074A6  26D9               	addwf	fsr2l,f,c
 25293  0074A8  5034               	movf	(nwkDataReqTaskHandler@req+1)^0,w,c
 25294  0074AA  22DA               	addwfc	fsr2h,f,c
 25295  0074AC  50DF               	movf	indf2,w,c
 25296  0074AE  6E31               	movwf	??_nwkDataReqTaskHandler^0,c
 25297  0074B0  6A32               	clrf	(??_nwkDataReqTaskHandler+1)^0,c
 25298                           
 25299                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25300                           ; Switch size 1, requested type "simple"
 25301                           ; Number of cases is 1, Range of values is 0 to 0
 25302                           ; switch strategies available:
 25303                           ; Name         Instructions Cycles
 25304                           ; simple_byte            4     3 (average)
 25305                           ;	Chosen strategy is simple_byte
 25306  0074B2  5032               	movf	(??_nwkDataReqTaskHandler+1)^0,w,c
 25307  0074B4  0A00               	xorlw	0	; case 0
 25308  0074B6  A4D8               	btfss	status,2,c
 25309  0074B8  D00A               	goto	l16288
 25310                           
 25311                           ; Switch size 1, requested type "simple"
 25312                           ; Number of cases is 3, Range of values is 0 to 2
 25313                           ; switch strategies available:
 25314                           ; Name         Instructions Cycles
 25315                           ; simple_byte           10     6 (average)
 25316                           ;	Chosen strategy is simple_byte
 25317  0074BA  5031               	movf	??_nwkDataReqTaskHandler^0,w,c
 25318  0074BC  0A00               	xorlw	0	; case 0
 25319  0074BE  B4D8               	btfsc	status,2,c
 25320  0074C0  D7DD               	goto	l16272
 25321  0074C2  0A01               	xorlw	1	; case 1
 25322  0074C4  B4D8               	btfsc	status,2,c
 25323  0074C6  D003               	goto	l16288
 25324  0074C8  0A03               	xorlw	3	; case 2
 25325  0074CA  B4D8               	btfsc	status,2,c
 25326  0074CC  D7E0               	goto	l16278
 25327  0074CE                     l16288:
 25328                           
 25329                           ;../nwk/nwk_src/nwkDataReq.c: 233:   }
 25330  0074CE  0060  F0CF  FFD9   	movff	nwkDataReqTaskHandler@req,fsr2l
 25331  0074D4  0060  F0D3  FFDA   	movff	nwkDataReqTaskHandler@req+1,fsr2h
 25332  0074DA  006F FF78  F033    	movff	postinc2,nwkDataReqTaskHandler@req
 25333  0074E0  006F FF74  F034    	movff	postdec2,nwkDataReqTaskHandler@req+1
 25334  0074E6                     l16290:
 25335  0074E6  5033               	movf	nwkDataReqTaskHandler@req^0,w,c
 25336  0074E8  1034               	iorwf	(nwkDataReqTaskHandler@req+1)^0,w,c
 25337  0074EA  B4D8               	btfsc	status,2,c
 25338  0074EC  0012               	return	
 25339  0074EE  D7D8               	goto	l16286
 25340  0074F0                     __end_of_nwkDataReqTaskHandler:
 25341                           	opt callstack 0
 25342                           
 25343 ;; *************** function _nwkDataReqSendFrame *****************
 25344 ;; Defined at:
 25345 ;;		line 111 in file "../nwk/nwk_src/nwkDataReq.c"
 25346 ;; Parameters:    Size  Location     Type
 25347 ;;  req             2   41[COMRAM] PTR struct NWK_DataReq_t
 25348 ;;		 -> NULL(0), tx_buffer.nwkDataReq(22), tx_buffer(524), 
 25349 ;; Auto vars:     Size  Location     Type
 25350 ;;  mcHeader        2   44[COMRAM] PTR __pack struct NwkFra
 25351 ;;		 -> nwkFrameFrames(685), NULL(0), 
 25352 ;;  frame           2   46[COMRAM] PTR struct NwkFrame_t
 25353 ;;		 -> nwkFrameFrames(685), NULL(0), 
 25354 ;; Return value:  Size  Location     Type
 25355 ;;                  1    wreg      void 
 25356 ;; Registers used:
 25357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25358 ;; Tracked objects:
 25359 ;;		On entry : 0/0
 25360 ;;		On exit  : 0/0
 25361 ;;		Unchanged: 0/0
 25362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25364 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25365 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25366 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25367 ;;Total ram usage:        7 bytes
 25368 ;; Hardware stack levels used:    1
 25369 ;; Hardware stack levels required when called:   11
 25370 ;; This function calls:
 25371 ;;		_memcpy
 25372 ;;		_nwkFrameAlloc
 25373 ;;		_nwkTxFrame
 25374 ;; This function is called by:
 25375 ;;		_nwkDataReqTaskHandler
 25376 ;; This function uses a non-reentrant model
 25377 ;;
 25378                           
 25379                           	psect	text159
 25380  001CE8                     __ptext159:
 25381                           	opt callstack 0
 25382  001CE8                     _nwkDataReqSendFrame:
 25383                           	opt callstack 16
 25384                           
 25385                           ;../nwk/nwk_src/nwkDataReq.c: 111: static void nwkDataReqSendFrame(NWK_DataReq_t *req);.
      +                          ./nwk/nwk_src/nwkDataReq.c: 112: {;../nwk/nwk_src/nwkDataReq.c: 113:   NwkFrame_t *frame
      +                          ;;../nwk/nwk_src/nwkDataReq.c: 115:   if (((void*)0) == (frame = nwkFrameAlloc()))
 25386                           
 25387                           ;incstack = 0
 25388  001CE8  ECE8  F033         	call	_nwkFrameAlloc	;wreg free
 25389  001CEC  0060  F038  F02F   	movff	?_nwkFrameAlloc,nwkDataReqSendFrame@frame
 25390  001CF2  0060  F03C  F030   	movff	?_nwkFrameAlloc+1,nwkDataReqSendFrame@frame+1
 25391  001CF8  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25392  001CFA  1030               	iorwf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25393  001CFC  A4D8               	btfss	status,2,c
 25394  001CFE  D011               	goto	l15520
 25395                           
 25396                           ;../nwk/nwk_src/nwkDataReq.c: 116:   {;../nwk/nwk_src/nwkDataReq.c: 117:     req->state 
      +                          = NWK_DATA_REQ_STATE_CONFIRM;
 25397  001D00  EE20 F004          	lfsr	2,4
 25398  001D04  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25399  001D06  26D9               	addwf	fsr2l,f,c
 25400  001D08  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25401  001D0A  22DA               	addwfc	fsr2h,f,c
 25402  001D0C  0E02               	movlw	2
 25403  001D0E  6EDF               	movwf	indf2,c
 25404                           
 25405                           ;../nwk/nwk_src/nwkDataReq.c: 118:     req->status = NWK_OUT_OF_MEMORY_STATUS;
 25406  001D10  EE20 F011          	lfsr	2,17
 25407  001D14  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25408  001D16  26D9               	addwf	fsr2l,f,c
 25409  001D18  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25410  001D1A  22DA               	addwfc	fsr2h,f,c
 25411  001D1C  0E02               	movlw	2
 25412  001D1E  6EDF               	movwf	indf2,c
 25413  001D20  0012               	return	
 25414  001D22                     l15520:
 25415                           
 25416                           ;../nwk/nwk_src/nwkDataReq.c: 122:   req->frame = frame;
 25417  001D22  EE20 F002          	lfsr	2,2
 25418  001D26  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25419  001D28  26D9               	addwf	fsr2l,f,c
 25420  001D2A  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25421  001D2C  22DA               	addwfc	fsr2h,f,c
 25422  001D2E  0060  F0BF  FFDE   	movff	nwkDataReqSendFrame@frame,postinc2
 25423  001D34  0060  F0C3  FFDD   	movff	nwkDataReqSendFrame@frame+1,postdec2
 25424                           
 25425                           ;../nwk/nwk_src/nwkDataReq.c: 123:   req->state = NWK_DATA_REQ_STATE_WAIT_CONF;
 25426  001D3A  EE20 F004          	lfsr	2,4
 25427  001D3E  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25428  001D40  26D9               	addwf	fsr2l,f,c
 25429  001D42  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25430  001D44  22DA               	addwfc	fsr2h,f,c
 25431  001D46  0E01               	movlw	1
 25432  001D48  6EDF               	movwf	indf2,c
 25433                           
 25434                           ;../nwk/nwk_src/nwkDataReq.c: 125:   frame->tx.confirm = nwkDataReqTxConf;
 25435  001D4A  EE20 F087          	lfsr	2,135
 25436  001D4E  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25437  001D50  26D9               	addwf	fsr2l,f,c
 25438  001D52  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25439  001D54  22DA               	addwfc	fsr2h,f,c
 25440  001D56  0E3E               	movlw	low _nwkDataReqTxConf
 25441  001D58  6EDE               	movwf	postinc2,c
 25442  001D5A  0E6B               	movlw	high _nwkDataReqTxConf
 25443  001D5C  6EDD               	movwf	postdec2,c
 25444                           
 25445                           ;../nwk/nwk_src/nwkDataReq.c: 126:   frame->tx.control = req->options & NWK_OPT_BROADCAS
      +                          T_PAN_ID ? NWK_TX_CONTROL_BROADCAST_PAN_ID : 0;
 25446  001D5E  EE20 F086          	lfsr	2,134
 25447  001D62  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25448  001D64  26D9               	addwf	fsr2l,f,c
 25449  001D66  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25450  001D68  22DA               	addwfc	fsr2h,f,c
 25451  001D6A  EE10 F009          	lfsr	1,9
 25452  001D6E  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25453  001D70  26E1               	addwf	fsr1l,f,c
 25454  001D72  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25455  001D74  22E2               	addwfc	fsr1h,f,c
 25456  001D76  A4E7               	btfss	indf1,2,c
 25457  001D78  D002               	goto	u15430
 25458  001D7A  0E01               	movlw	1
 25459  001D7C  D001               	goto	u15440
 25460  001D7E                     u15430:
 25461  001D7E  0E00               	movlw	0
 25462  001D80                     u15440:
 25463  001D80  6EDF               	movwf	indf2,c
 25464                           
 25465                           ;../nwk/nwk_src/nwkDataReq.c: 128:   frame->header.nwkFcf.ackRequest = req->options & NW
      +                          K_OPT_ACK_REQUEST ? 1 : 0;
 25466  001D82  EE20 F009          	lfsr	2,9
 25467  001D86  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25468  001D88  26D9               	addwf	fsr2l,f,c
 25469  001D8A  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25470  001D8C  22DA               	addwfc	fsr2h,f,c
 25471  001D8E  A0DF               	btfss	indf2,0,c
 25472  001D90  D003               	goto	u15450
 25473  001D92  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 25474  001D94  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 25475  001D96  D001               	goto	u15468
 25476  001D98                     u15450:
 25477  001D98  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 25478  001D9A                     u15468:
 25479  001D9A  EE20 F00B          	lfsr	2,11
 25480  001D9E  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25481  001DA0  26D9               	addwf	fsr2l,f,c
 25482  001DA2  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25483  001DA4  22DA               	addwfc	fsr2h,f,c
 25484  001DA6  50DF               	movf	indf2,w,c
 25485  001DA8  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25486  001DAA  0BFE               	andlw	-2
 25487  001DAC  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25488  001DAE  6EDF               	movwf	indf2,c
 25489                           
 25490                           ;../nwk/nwk_src/nwkDataReq.c: 129:   frame->header.nwkFcf.linkLocal = req->options & NWK
      +                          _OPT_LINK_LOCAL ? 1 : 0;
 25491  001DB0  EE20 F009          	lfsr	2,9
 25492  001DB4  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25493  001DB6  26D9               	addwf	fsr2l,f,c
 25494  001DB8  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25495  001DBA  22DA               	addwfc	fsr2h,f,c
 25496  001DBC  A6DF               	btfss	indf2,3,c
 25497  001DBE  D003               	goto	u15470
 25498  001DC0  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 25499  001DC2  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 25500  001DC4  D001               	goto	u15488
 25501  001DC6                     u15470:
 25502  001DC6  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 25503  001DC8                     u15488:
 25504  001DC8  EE20 F00B          	lfsr	2,11
 25505  001DCC  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25506  001DCE  26D9               	addwf	fsr2l,f,c
 25507  001DD0  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25508  001DD2  22DA               	addwfc	fsr2h,f,c
 25509  001DD4  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 25510  001DD6  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 25511  001DD8  50DF               	movf	indf2,w,c
 25512  001DDA  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25513  001DDC  0BFB               	andlw	-5
 25514  001DDE  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25515  001DE0  6EDF               	movwf	indf2,c
 25516                           
 25517                           ;../nwk/nwk_src/nwkDataReq.c: 136:   frame->header.nwkFcf.multicast = req->options & NWK
      +                          _OPT_MULTICAST ? 1 : 0;
 25518  001DE2  EE20 F009          	lfsr	2,9
 25519  001DE6  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25520  001DE8  26D9               	addwf	fsr2l,f,c
 25521  001DEA  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25522  001DEC  22DA               	addwfc	fsr2h,f,c
 25523  001DEE  A8DF               	btfss	indf2,4,c
 25524  001DF0  D003               	goto	u15490
 25525  001DF2  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 25526  001DF4  2A2C               	incf	??_nwkDataReqSendFrame^0,f,c
 25527  001DF6  D001               	goto	u15508
 25528  001DF8                     u15490:
 25529  001DF8  6A2C               	clrf	??_nwkDataReqSendFrame^0,c
 25530  001DFA                     u15508:
 25531  001DFA  EE20 F00B          	lfsr	2,11
 25532  001DFE  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25533  001E00  26D9               	addwf	fsr2l,f,c
 25534  001E02  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25535  001E04  22DA               	addwfc	fsr2h,f,c
 25536  001E06  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 25537  001E08  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 25538  001E0A  462C               	rlncf	??_nwkDataReqSendFrame^0,f,c
 25539  001E0C  50DF               	movf	indf2,w,c
 25540  001E0E  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25541  001E10  0BF7               	andlw	-9
 25542  001E12  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25543  001E14  6EDF               	movwf	indf2,c
 25544                           
 25545                           ;../nwk/nwk_src/nwkDataReq.c: 138:   if (frame->header.nwkFcf.multicast)
 25546  001E16  EE20 F00B          	lfsr	2,11
 25547  001E1A  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25548  001E1C  26D9               	addwf	fsr2l,f,c
 25549  001E1E  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25550  001E20  22DA               	addwfc	fsr2h,f,c
 25551  001E22  A6DF               	btfss	indf2,3,c
 25552  001E24  D06C               	goto	l1828
 25553                           
 25554                           ;../nwk/nwk_src/nwkDataReq.c: 139:   {;../nwk/nwk_src/nwkDataReq.c: 140:     NwkFrameMul
      +                          ticastHeader_t *mcHeader = (NwkFrameMulticastHeader_t *)frame->payload;
 25555  001E26  EE20 F081          	lfsr	2,129
 25556  001E2A  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25557  001E2C  26D9               	addwf	fsr2l,f,c
 25558  001E2E  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25559  001E30  22DA               	addwfc	fsr2h,f,c
 25560  001E32  006F FF78  F02D    	movff	postinc2,nwkDataReqSendFrame@mcHeader
 25561  001E38  006F FF74  F02E    	movff	postdec2,nwkDataReqSendFrame@mcHeader+1
 25562                           
 25563                           ;../nwk/nwk_src/nwkDataReq.c: 142:     mcHeader->memberRadius = req->memberRadius;
 25564  001E3E  EE20 F00A          	lfsr	2,10
 25565  001E42  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25566  001E44  26D9               	addwf	fsr2l,f,c
 25567  001E46  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25568  001E48  22DA               	addwfc	fsr2h,f,c
 25569  001E4A  50DF               	movf	indf2,w,c
 25570  001E4C  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25571  001E4E  EE20 F001          	lfsr	2,1
 25572  001E52  502D               	movf	nwkDataReqSendFrame@mcHeader^0,w,c
 25573  001E54  26D9               	addwf	fsr2l,f,c
 25574  001E56  502E               	movf	(nwkDataReqSendFrame@mcHeader+1)^0,w,c
 25575  001E58  22DA               	addwfc	fsr2h,f,c
 25576  001E5A  50DF               	movf	indf2,w,c
 25577  001E5C  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25578  001E5E  0BF0               	andlw	-16
 25579  001E60  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25580  001E62  6EDF               	movwf	indf2,c
 25581                           
 25582                           ;../nwk/nwk_src/nwkDataReq.c: 143:     mcHeader->maxMemberRadius = req->memberRadius;
 25583  001E64  EE20 F00A          	lfsr	2,10
 25584  001E68  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25585  001E6A  26D9               	addwf	fsr2l,f,c
 25586  001E6C  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25587  001E6E  22DA               	addwfc	fsr2h,f,c
 25588  001E70  50DF               	movf	indf2,w,c
 25589  001E72  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25590  001E74  EE20 F001          	lfsr	2,1
 25591  001E78  502D               	movf	nwkDataReqSendFrame@mcHeader^0,w,c
 25592  001E7A  26D9               	addwf	fsr2l,f,c
 25593  001E7C  502E               	movf	(nwkDataReqSendFrame@mcHeader+1)^0,w,c
 25594  001E7E  22DA               	addwfc	fsr2h,f,c
 25595  001E80  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 25596  001E82  50DF               	movf	indf2,w,c
 25597  001E84  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25598  001E86  0B0F               	andlw	-241
 25599  001E88  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25600  001E8A  6EDF               	movwf	indf2,c
 25601                           
 25602                           ;../nwk/nwk_src/nwkDataReq.c: 144:     mcHeader->nonMemberRadius = req->nonMemberRadius;
 25603  001E8C  EE20 F00B          	lfsr	2,11
 25604  001E90  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25605  001E92  26D9               	addwf	fsr2l,f,c
 25606  001E94  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25607  001E96  22DA               	addwfc	fsr2h,f,c
 25608  001E98  50DF               	movf	indf2,w,c
 25609  001E9A  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25610  001E9C  0060  F0B7  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
 25611  001EA2  0060  F0BB  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
 25612  001EA8  50DF               	movf	indf2,w,c
 25613  001EAA  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25614  001EAC  0BF0               	andlw	-16
 25615  001EAE  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25616  001EB0  6EDF               	movwf	indf2,c
 25617                           
 25618                           ;../nwk/nwk_src/nwkDataReq.c: 145:     mcHeader->maxNonMemberRadius = req->nonMemberRadi
      +                          us;
 25619  001EB2  EE20 F00B          	lfsr	2,11
 25620  001EB6  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25621  001EB8  26D9               	addwf	fsr2l,f,c
 25622  001EBA  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25623  001EBC  22DA               	addwfc	fsr2h,f,c
 25624  001EBE  50DF               	movf	indf2,w,c
 25625  001EC0  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25626  001EC2  0060  F0B7  FFD9   	movff	nwkDataReqSendFrame@mcHeader,fsr2l
 25627  001EC8  0060  F0BB  FFDA   	movff	nwkDataReqSendFrame@mcHeader+1,fsr2h
 25628  001ECE  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 25629  001ED0  50DF               	movf	indf2,w,c
 25630  001ED2  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25631  001ED4  0B0F               	andlw	-241
 25632  001ED6  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25633  001ED8  6EDF               	movwf	indf2,c
 25634                           
 25635                           ;../nwk/nwk_src/nwkDataReq.c: 147:     frame->payload += sizeof(NwkFrameMulticastHeader_
      +                          t);
 25636  001EDA  EE20 F081          	lfsr	2,129
 25637  001EDE  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25638  001EE0  26D9               	addwf	fsr2l,f,c
 25639  001EE2  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25640  001EE4  22DA               	addwfc	fsr2h,f,c
 25641  001EE6  0E02               	movlw	2
 25642  001EE8  26DE               	addwf	postinc2,f,c
 25643  001EEA  0E00               	movlw	0
 25644  001EEC  22DD               	addwfc	postdec2,f,c
 25645                           
 25646                           ;../nwk/nwk_src/nwkDataReq.c: 148:     frame->size += sizeof(NwkFrameMulticastHeader_t);
 25647  001EEE  EE20 F001          	lfsr	2,1
 25648  001EF2  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25649  001EF4  26D9               	addwf	fsr2l,f,c
 25650  001EF6  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25651  001EF8  22DA               	addwfc	fsr2h,f,c
 25652  001EFA  0E02               	movlw	2
 25653  001EFC  26DF               	addwf	indf2,f,c
 25654  001EFE                     l1828:
 25655                           
 25656                           ;../nwk/nwk_src/nwkDataReq.c: 152:   frame->header.nwkSeq = ++nwkIb.nwkSeqNum;
 25657  001EFE  0101               	movlb	1	; () banked
 25658  001F00  2B04               	incf	(_nwkIb+4)& (0+255),f,b
 25659  001F02  EE20 F00C          	lfsr	2,12
 25660  001F06  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25661  001F08  26D9               	addwf	fsr2l,f,c
 25662  001F0A  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25663  001F0C  22DA               	addwfc	fsr2h,f,c
 25664  001F0E  0060  F413  FFDF   	movff	_nwkIb+4,indf2
 25665                           
 25666                           ;../nwk/nwk_src/nwkDataReq.c: 153:   frame->header.nwkSrcAddr = nwkIb.addr;
 25667  001F14  EE20 F00D          	lfsr	2,13
 25668  001F18  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25669  001F1A  26D9               	addwf	fsr2l,f,c
 25670  001F1C  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25671  001F1E  22DA               	addwfc	fsr2h,f,c
 25672  001F20  0060  F403  FFDE   	movff	_nwkIb,postinc2
 25673  001F26  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 25674                           
 25675                           ; BSR set to: 1
 25676                           ;../nwk/nwk_src/nwkDataReq.c: 154:   frame->header.nwkDstAddr = req->dstAddr;
 25677  001F2C  EE20 F005          	lfsr	2,5
 25678  001F30  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25679  001F32  26D9               	addwf	fsr2l,f,c
 25680  001F34  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25681  001F36  22DA               	addwfc	fsr2h,f,c
 25682  001F38  EE10 F00F          	lfsr	1,15
 25683  001F3C  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25684  001F3E  26E1               	addwf	fsr1l,f,c
 25685  001F40  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25686  001F42  22E2               	addwfc	fsr1h,f,c
 25687  001F44  006F FF7B FFE6     	movff	postinc2,postinc1
 25688  001F4A  006F FF77 FFE5     	movff	postdec2,postdec1
 25689                           
 25690                           ; BSR set to: 1
 25691                           ;../nwk/nwk_src/nwkDataReq.c: 155:   frame->header.nwkSrcEndpoint = req->srcEndpoint;
 25692  001F50  EE20 F008          	lfsr	2,8
 25693  001F54  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25694  001F56  26D9               	addwf	fsr2l,f,c
 25695  001F58  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25696  001F5A  22DA               	addwfc	fsr2h,f,c
 25697  001F5C  50DF               	movf	indf2,w,c
 25698  001F5E  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25699  001F60  EE20 F011          	lfsr	2,17
 25700  001F64  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25701  001F66  26D9               	addwf	fsr2l,f,c
 25702  001F68  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25703  001F6A  22DA               	addwfc	fsr2h,f,c
 25704  001F6C  50DF               	movf	indf2,w,c
 25705  001F6E  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25706  001F70  0BF0               	andlw	-16
 25707  001F72  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25708  001F74  6EDF               	movwf	indf2,c
 25709                           
 25710                           ; BSR set to: 1
 25711                           ;../nwk/nwk_src/nwkDataReq.c: 156:   frame->header.nwkDstEndpoint = req->dstEndpoint;
 25712  001F76  EE20 F007          	lfsr	2,7
 25713  001F7A  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25714  001F7C  26D9               	addwf	fsr2l,f,c
 25715  001F7E  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25716  001F80  22DA               	addwfc	fsr2h,f,c
 25717  001F82  50DF               	movf	indf2,w,c
 25718  001F84  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25719  001F86  EE20 F011          	lfsr	2,17
 25720  001F8A  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25721  001F8C  26D9               	addwf	fsr2l,f,c
 25722  001F8E  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25723  001F90  22DA               	addwfc	fsr2h,f,c
 25724  001F92  3A2C               	swapf	??_nwkDataReqSendFrame^0,f,c
 25725  001F94  50DF               	movf	indf2,w,c
 25726  001F96  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25727  001F98  0B0F               	andlw	-241
 25728  001F9A  182C               	xorwf	??_nwkDataReqSendFrame^0,w,c
 25729  001F9C  6EDF               	movwf	indf2,c
 25730                           
 25731                           ; BSR set to: 1
 25732                           ;../nwk/nwk_src/nwkDataReq.c: 158:   memcpy(frame->payload, req->data, req->size);
 25733  001F9E  EE20 F081          	lfsr	2,129
 25734  001FA2  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25735  001FA4  26D9               	addwf	fsr2l,f,c
 25736  001FA6  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25737  001FA8  22DA               	addwfc	fsr2h,f,c
 25738  001FAA  006F FF78  F008    	movff	postinc2,memcpy@d1
 25739  001FB0  006F FF74  F009    	movff	postdec2,memcpy@d1+1
 25740  001FB6  EE20 F00C          	lfsr	2,12
 25741  001FBA  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25742  001FBC  26D9               	addwf	fsr2l,f,c
 25743  001FBE  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25744  001FC0  22DA               	addwfc	fsr2h,f,c
 25745  001FC2  006F FF78  F00A    	movff	postinc2,memcpy@s1
 25746  001FC8  006F FF74  F00B    	movff	postdec2,memcpy@s1+1
 25747  001FCE  EE20 F00E          	lfsr	2,14
 25748  001FD2  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25749  001FD4  26D9               	addwf	fsr2l,f,c
 25750  001FD6  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25751  001FD8  22DA               	addwfc	fsr2h,f,c
 25752  001FDA  50DF               	movf	indf2,w,c
 25753  001FDC  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25754  001FDE  502C               	movf	??_nwkDataReqSendFrame^0,w,c
 25755  001FE0  6E0C               	movwf	memcpy@n^0,c
 25756  001FE2  6A0D               	clrf	(memcpy@n+1)^0,c
 25757  001FE4  ECF6  F03A         	call	_memcpy	;wreg free
 25758                           
 25759                           ;../nwk/nwk_src/nwkDataReq.c: 159:   frame->size += req->size;
 25760  001FE8  EE20 F00E          	lfsr	2,14
 25761  001FEC  502A               	movf	nwkDataReqSendFrame@req^0,w,c
 25762  001FEE  26D9               	addwf	fsr2l,f,c
 25763  001FF0  502B               	movf	(nwkDataReqSendFrame@req+1)^0,w,c
 25764  001FF2  22DA               	addwfc	fsr2h,f,c
 25765  001FF4  50DF               	movf	indf2,w,c
 25766  001FF6  6E2C               	movwf	??_nwkDataReqSendFrame^0,c
 25767  001FF8  EE20 F001          	lfsr	2,1
 25768  001FFC  502F               	movf	nwkDataReqSendFrame@frame^0,w,c
 25769  001FFE  26D9               	addwf	fsr2l,f,c
 25770  002000  5030               	movf	(nwkDataReqSendFrame@frame+1)^0,w,c
 25771  002002  22DA               	addwfc	fsr2h,f,c
 25772  002004  502C               	movf	??_nwkDataReqSendFrame^0,w,c
 25773  002006  26DF               	addwf	indf2,f,c
 25774                           
 25775                           ;../nwk/nwk_src/nwkDataReq.c: 161:   nwkTxFrame(frame);
 25776  002008  0060  F0BC  F024   	movff	nwkDataReqSendFrame@frame,nwkTxFrame@frame
 25777  00200E  0060  F0C0  F025   	movff	nwkDataReqSendFrame@frame+1,nwkTxFrame@frame+1
 25778  002014  ECD0  F01D         	call	_nwkTxFrame	;wreg free
 25779  002018  0012               	return		;funcret
 25780  00201A                     __end_of_nwkDataReqSendFrame:
 25781                           	opt callstack 0
 25782                           
 25783 ;; *************** function _nwkTxFrame *****************
 25784 ;; Defined at:
 25785 ;;		line 109 in file "../nwk/nwk_src/nwkTx.c"
 25786 ;; Parameters:    Size  Location     Type
 25787 ;;  frame           2   35[COMRAM] PTR struct NwkFrame_t
 25788 ;;		 -> nwkFrameFrames(685), NULL(0), 
 25789 ;; Auto vars:     Size  Location     Type
 25790 ;;  header          2   39[COMRAM] PTR __pack struct NwkFra
 25791 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 25792 ;; Return value:  Size  Location     Type
 25793 ;;                  1    wreg      void 
 25794 ;; Registers used:
 25795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25796 ;; Tracked objects:
 25797 ;;		On entry : 0/1
 25798 ;;		On exit  : 3E/0
 25799 ;;		Unchanged: 0/0
 25800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25802 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25803 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25804 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25805 ;;Total ram usage:        6 bytes
 25806 ;; Hardware stack levels used:    1
 25807 ;; Hardware stack levels required when called:   10
 25808 ;; This function calls:
 25809 ;;		_nwkRoutePrepareTx
 25810 ;;		_rand
 25811 ;; This function is called by:
 25812 ;;		_nwkDataReqSendFrame
 25813 ;;		_nwkRouteFrame
 25814 ;;		_nwkRouteSendRouteError
 25815 ;;		_nwkRxSendAck
 25816 ;; This function uses a non-reentrant model
 25817 ;;
 25818                           
 25819                           	psect	text160
 25820  003BA0                     __ptext160:
 25821                           	opt callstack 0
 25822  003BA0                     _nwkTxFrame:
 25823                           	opt callstack 15
 25824                           
 25825                           ;../nwk/nwk_src/nwkTx.c: 109: void nwkTxFrame(NwkFrame_t *frame);../nwk/nwk_src/nwkTx.c:
      +                           110: {;../nwk/nwk_src/nwkTx.c: 111:   NwkFrameHeader_t *header = &frame->header;
 25826                           
 25827                           ;incstack = 0
 25828  003BA0  0E02               	movlw	2
 25829  003BA2  2424               	addwf	nwkTxFrame@frame^0,w,c
 25830  003BA4  6E28               	movwf	nwkTxFrame@header^0,c
 25831  003BA6  0E00               	movlw	0
 25832  003BA8  2025               	addwfc	(nwkTxFrame@frame+1)^0,w,c
 25833  003BAA  6E29               	movwf	(nwkTxFrame@header+1)^0,c
 25834                           
 25835                           ;../nwk/nwk_src/nwkTx.c: 113:   if (frame->tx.control & NWK_TX_CONTROL_ROUTING)
 25836  003BAC  EE20 F086          	lfsr	2,134
 25837  003BB0  5024               	movf	nwkTxFrame@frame^0,w,c
 25838  003BB2  26D9               	addwf	fsr2l,f,c
 25839  003BB4  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25840  003BB6  22DA               	addwfc	fsr2h,f,c
 25841  003BB8  A2DF               	btfss	indf2,1,c
 25842  003BBA  D000               	goto	u8030
 25843  003BBC                     u8030:
 25844                           
 25845                           ;../nwk/nwk_src/nwkTx.c: 118:   {;../nwk/nwk_src/nwkTx.c: 124:       frame->state = NWK_
      +                          TX_STATE_DELAY;
 25846                           
 25847                           ;../nwk/nwk_src/nwkTx.c: 116:   }
 25848                           
 25849                           ;../nwk/nwk_src/nwkTx.c: 114:   {;../nwk/nwk_src/nwkTx.c: 115:     frame->state = NWK_TX
      +                          _STATE_DELAY;
 25850  003BBC  0060  F093  FFD9   	movff	nwkTxFrame@frame,fsr2l
 25851  003BC2  0060  F097  FFDA   	movff	nwkTxFrame@frame+1,fsr2h
 25852  003BC8  0E12               	movlw	18
 25853  003BCA  6EDF               	movwf	indf2,c
 25854                           
 25855                           ;../nwk/nwk_src/nwkTx.c: 127:   frame->tx.status = NWK_SUCCESS_STATUS;
 25856  003BCC  EE20 F083          	lfsr	2,131
 25857  003BD0  5024               	movf	nwkTxFrame@frame^0,w,c
 25858  003BD2  26D9               	addwf	fsr2l,f,c
 25859  003BD4  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25860  003BD6  22DA               	addwfc	fsr2h,f,c
 25861  003BD8  0E00               	movlw	0
 25862  003BDA  6EDF               	movwf	indf2,c
 25863                           
 25864                           ;../nwk/nwk_src/nwkTx.c: 129:   if (frame->tx.control & NWK_TX_CONTROL_BROADCAST_PAN_ID)
 25865  003BDC  EE20 F086          	lfsr	2,134
 25866  003BE0  5024               	movf	nwkTxFrame@frame^0,w,c
 25867  003BE2  26D9               	addwf	fsr2l,f,c
 25868  003BE4  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25869  003BE6  22DA               	addwfc	fsr2h,f,c
 25870  003BE8  A0DF               	btfss	indf2,0,c
 25871  003BEA  D00B               	goto	l10004
 25872                           
 25873                           ;../nwk/nwk_src/nwkTx.c: 130:     header->macDstPanId = 0xffff;
 25874  003BEC  EE20 F003          	lfsr	2,3
 25875  003BF0  5028               	movf	nwkTxFrame@header^0,w,c
 25876  003BF2  26D9               	addwf	fsr2l,f,c
 25877  003BF4  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25878  003BF6  22DA               	addwfc	fsr2h,f,c
 25879  003BF8  0EFF               	movlw	255
 25880  003BFA  6EDE               	movwf	postinc2,c
 25881  003BFC  0EFF               	movlw	255
 25882  003BFE  6EDD               	movwf	postdec2,c
 25883  003C00  D00C               	goto	l2346
 25884  003C02                     l10004:
 25885                           
 25886                           ;../nwk/nwk_src/nwkTx.c: 132:     header->macDstPanId = nwkIb.panId;
 25887  003C02  EE20 F003          	lfsr	2,3
 25888  003C06  5028               	movf	nwkTxFrame@header^0,w,c
 25889  003C08  26D9               	addwf	fsr2l,f,c
 25890  003C0A  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25891  003C0C  22DA               	addwfc	fsr2h,f,c
 25892  003C0E  0060  F40B  FFDE   	movff	_nwkIb+2,postinc2
 25893  003C14  0060  F40F  FFDD   	movff	_nwkIb+3,postdec2
 25894  003C1A                     l2346:
 25895                           
 25896                           ;../nwk/nwk_src/nwkTx.c: 135:   if (0 == (frame->tx.control & NWK_TX_CONTROL_DIRECT_LINK
      +                          ) &&
 25897  003C1A  EE20 F086          	lfsr	2,134
 25898  003C1E  5024               	movf	nwkTxFrame@frame^0,w,c
 25899  003C20  26D9               	addwf	fsr2l,f,c
 25900  003C22  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25901  003C24  22DA               	addwfc	fsr2h,f,c
 25902  003C26  B4DF               	btfsc	indf2,2,c
 25903  003C28  D011               	goto	l10010
 25904  003C2A  EE20 F086          	lfsr	2,134
 25905  003C2E  5024               	movf	nwkTxFrame@frame^0,w,c
 25906  003C30  26D9               	addwf	fsr2l,f,c
 25907  003C32  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25908  003C34  22DA               	addwfc	fsr2h,f,c
 25909  003C36  B0DF               	btfsc	indf2,0,c
 25910  003C38  D009               	goto	l10010
 25911                           
 25912                           ;../nwk/nwk_src/nwkTx.c: 137:     nwkRoutePrepareTx(frame);
 25913  003C3A  0060  F090  F00D   	movff	nwkTxFrame@frame,nwkRoutePrepareTx@frame
 25914  003C40  0060  F094  F00E   	movff	nwkTxFrame@frame+1,nwkRoutePrepareTx@frame+1
 25915  003C46  ECE3  F027         	call	_nwkRoutePrepareTx	;wreg free
 25916  003C4A  D012               	goto	l10012
 25917  003C4C                     l10010:
 25918                           
 25919                           ;../nwk/nwk_src/nwkTx.c: 140:     header->macDstAddr = header->nwkDstAddr;
 25920  003C4C  EE20 F00D          	lfsr	2,13
 25921  003C50  5028               	movf	nwkTxFrame@header^0,w,c
 25922  003C52  26D9               	addwf	fsr2l,f,c
 25923  003C54  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25924  003C56  22DA               	addwfc	fsr2h,f,c
 25925  003C58  EE10 F005          	lfsr	1,5
 25926  003C5C  5028               	movf	nwkTxFrame@header^0,w,c
 25927  003C5E  26E1               	addwf	fsr1l,f,c
 25928  003C60  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25929  003C62  22E2               	addwfc	fsr1h,f,c
 25930  003C64  006F FF7B FFE6     	movff	postinc2,postinc1
 25931  003C6A  006F FF77 FFE5     	movff	postdec2,postdec1
 25932  003C70                     l10012:
 25933                           
 25934                           ;../nwk/nwk_src/nwkTx.c: 142:   header->macSrcAddr = nwkIb.addr;
 25935  003C70  EE20 F007          	lfsr	2,7
 25936  003C74  5028               	movf	nwkTxFrame@header^0,w,c
 25937  003C76  26D9               	addwf	fsr2l,f,c
 25938  003C78  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25939  003C7A  22DA               	addwfc	fsr2h,f,c
 25940  003C7C  0060  F403  FFDE   	movff	_nwkIb,postinc2
 25941  003C82  0060  F407  FFDD   	movff	_nwkIb+1,postdec2
 25942                           
 25943                           ;../nwk/nwk_src/nwkTx.c: 143:   header->macSeq = ++nwkIb.macSeqNum;
 25944  003C88  0101               	movlb	1	; () banked
 25945  003C8A  2B05               	incf	(_nwkIb+5)& (0+255),f,b
 25946  003C8C  EE20 F002          	lfsr	2,2
 25947  003C90  5028               	movf	nwkTxFrame@header^0,w,c
 25948  003C92  26D9               	addwf	fsr2l,f,c
 25949  003C94  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25950  003C96  22DA               	addwfc	fsr2h,f,c
 25951  003C98  0060  F417  FFDF   	movff	_nwkIb+5,indf2
 25952                           
 25953                           ; BSR set to: 1
 25954                           ;../nwk/nwk_src/nwkTx.c: 145:   if (0xffff == header->macDstAddr)
 25955  003C9E  EE20 F005          	lfsr	2,5
 25956  003CA2  5028               	movf	nwkTxFrame@header^0,w,c
 25957  003CA4  26D9               	addwf	fsr2l,f,c
 25958  003CA6  5029               	movf	(nwkTxFrame@header+1)^0,w,c
 25959  003CA8  22DA               	addwfc	fsr2h,f,c
 25960  003CAA  28DE               	incf	postinc2,w,c
 25961  003CAC  E124               	bnz	l10022
 25962  003CAE  28DE               	incf	postinc2,w,c
 25963  003CB0  A4D8               	btfss	status,2,c
 25964  003CB2  D021               	goto	l10022
 25965                           
 25966                           ; BSR set to: 1
 25967                           ;../nwk/nwk_src/nwkTx.c: 146:   {;../nwk/nwk_src/nwkTx.c: 147:     header->macFcf = 0x88
      +                          41;
 25968  003CB4  0060  F0A3  FFD9   	movff	nwkTxFrame@header,fsr2l
 25969  003CBA  0060  F0A7  FFDA   	movff	nwkTxFrame@header+1,fsr2h
 25970  003CC0  0E41               	movlw	65
 25971  003CC2  6EDE               	movwf	postinc2,c
 25972  003CC4  0E88               	movlw	136
 25973  003CC6  6EDD               	movwf	postdec2,c
 25974                           
 25975                           ; BSR set to: 1
 25976                           ;../nwk/nwk_src/nwkTx.c: 148:     frame->tx.timeout = (rand() & 0x07) + 1;
 25977  003CC8  EC5C  F027         	call	_rand	;wreg free
 25978  003CCC  0E07               	movlw	7
 25979  003CCE  161A               	andwf	?_rand^0,f,c
 25980  003CD0  0E00               	movlw	0
 25981  003CD2  161B               	andwf	(?_rand+1)^0,f,c
 25982  003CD4  0E01               	movlw	1
 25983  003CD6  261A               	addwf	?_rand^0,f,c
 25984  003CD8  0E00               	movlw	0
 25985  003CDA  221B               	addwfc	(?_rand+1)^0,f,c
 25986  003CDC  EE20 F084          	lfsr	2,132
 25987  003CE0  5024               	movf	nwkTxFrame@frame^0,w,c
 25988  003CE2  26D9               	addwf	fsr2l,f,c
 25989  003CE4  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 25990  003CE6  22DA               	addwfc	fsr2h,f,c
 25991  003CE8  0060  F06B  FFDE   	movff	?_rand,postinc2
 25992  003CEE  0060  F06F  FFDD   	movff	?_rand+1,postdec2
 25993                           
 25994                           ;../nwk/nwk_src/nwkTx.c: 149:   }
 25995  003CF4  0012               	return	
 25996  003CF6                     l10022:
 25997                           
 25998                           ; BSR set to: 1
 25999                           ;../nwk/nwk_src/nwkTx.c: 151:   {;../nwk/nwk_src/nwkTx.c: 152:     header->macFcf = 0x88
      +                          61;
 26000  003CF6  0060  F0A3  FFD9   	movff	nwkTxFrame@header,fsr2l
 26001  003CFC  0060  F0A7  FFDA   	movff	nwkTxFrame@header+1,fsr2h
 26002  003D02  0E61               	movlw	97
 26003  003D04  6EDE               	movwf	postinc2,c
 26004  003D06  0E88               	movlw	136
 26005  003D08  6EDD               	movwf	postdec2,c
 26006                           
 26007                           ; BSR set to: 1
 26008                           ;../nwk/nwk_src/nwkTx.c: 153:     frame->tx.timeout = 0;
 26009  003D0A  EE20 F084          	lfsr	2,132
 26010  003D0E  5024               	movf	nwkTxFrame@frame^0,w,c
 26011  003D10  26D9               	addwf	fsr2l,f,c
 26012  003D12  5025               	movf	(nwkTxFrame@frame+1)^0,w,c
 26013  003D14  22DA               	addwfc	fsr2h,f,c
 26014  003D16  0E00               	movlw	0
 26015  003D18  6EDE               	movwf	postinc2,c
 26016  003D1A  0E00               	movlw	0
 26017  003D1C  6EDD               	movwf	postdec2,c
 26018  003D1E  0012               	return		;funcret
 26019  003D20                     __end_of_nwkTxFrame:
 26020                           	opt callstack 0
 26021                           
 26022 ;; *************** function _rand *****************
 26023 ;; Defined at:
 26024 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
 26025 ;; Parameters:    Size  Location     Type
 26026 ;;		None
 26027 ;; Auto vars:     Size  Location     Type
 26028 ;;		None
 26029 ;; Return value:  Size  Location     Type
 26030 ;;                  2   25[COMRAM] int 
 26031 ;; Registers used:
 26032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26033 ;; Tracked objects:
 26034 ;;		On entry : 0/1
 26035 ;;		On exit  : 3F/0
 26036 ;;		Unchanged: 0/0
 26037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26040 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26041 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26042 ;;Total ram usage:       10 bytes
 26043 ;; Hardware stack levels used:    1
 26044 ;; Hardware stack levels required when called:    8
 26045 ;; This function calls:
 26046 ;;		___omul
 26047 ;; This function is called by:
 26048 ;;		_nwkTxFrame
 26049 ;;		_nwkTxBroadcastFrame
 26050 ;; This function uses a non-reentrant model
 26051 ;;
 26052                           
 26053                           	psect	text161
 26054  004EB8                     __ptext161:
 26055                           	opt callstack 0
 26056  004EB8                     _rand:
 26057                           	opt callstack 17
 26058                           
 26059                           ;incstack = 0
 26060  004EB8  0060  F390  F002   	movff	_seed,___omul@multiplier
 26061  004EBE  0060  F394  F003   	movff	_seed+1,___omul@multiplier+1
 26062  004EC4  0060  F398  F004   	movff	_seed+2,___omul@multiplier+2
 26063  004ECA  0060  F39C  F005   	movff	_seed+3,___omul@multiplier+3
 26064  004ED0  0060  F3A0  F006   	movff	_seed+4,___omul@multiplier+4
 26065  004ED6  0060  F3A4  F007   	movff	_seed+5,___omul@multiplier+5
 26066  004EDC  0060  F3A8  F008   	movff	_seed+6,___omul@multiplier+6
 26067  004EE2  0060  F3AC  F009   	movff	_seed+7,___omul@multiplier+7
 26068  004EE8  0E2D               	movlw	45
 26069  004EEA  6E0A               	movwf	___omul@multiplicand^0,c
 26070  004EEC  0E7F               	movlw	127
 26071  004EEE  6E0B               	movwf	(___omul@multiplicand+1)^0,c
 26072  004EF0  0E95               	movlw	149
 26073  004EF2  6E0C               	movwf	(___omul@multiplicand+2)^0,c
 26074  004EF4  0E4C               	movlw	76
 26075  004EF6  6E0D               	movwf	(___omul@multiplicand+3)^0,c
 26076  004EF8  0E2D               	movlw	45
 26077  004EFA  6E0E               	movwf	(___omul@multiplicand+4)^0,c
 26078  004EFC  0EF4               	movlw	244
 26079  004EFE  6E0F               	movwf	(___omul@multiplicand+5)^0,c
 26080  004F00  0E51               	movlw	81
 26081  004F02  6E10               	movwf	(___omul@multiplicand+6)^0,c
 26082  004F04  0E58               	movlw	88
 26083  004F06  6E11               	movwf	(___omul@multiplicand+7)^0,c
 26084  004F08  ECE4  F036         	call	___omul	;wreg free
 26085  004F0C  0060  F008  F01C   	movff	?___omul,??_rand
 26086  004F12  0060  F00C  F01D   	movff	?___omul+1,??_rand+1
 26087  004F18  0060  F010  F01E   	movff	?___omul+2,??_rand+2
 26088  004F1E  0060  F014  F01F   	movff	?___omul+3,??_rand+3
 26089  004F24  0060  F018  F020   	movff	?___omul+4,??_rand+4
 26090  004F2A  0060  F01C  F021   	movff	?___omul+5,??_rand+5
 26091  004F30  0060  F020  F022   	movff	?___omul+6,??_rand+6
 26092  004F36  0060  F024  F023   	movff	?___omul+7,??_rand+7
 26093  004F3C  0E01               	movlw	1
 26094  004F3E  241C               	addwf	??_rand^0,w,c
 26095  004F40  0100               	movlb	0	; () banked
 26096  004F42  6FE4               	movwf	_seed& (0+255),b
 26097  004F44  0E00               	movlw	0
 26098  004F46  201D               	addwfc	(??_rand+1)^0,w,c
 26099  004F48  6FE5               	movwf	(_seed+1)& (0+255),b
 26100  004F4A  0E00               	movlw	0
 26101  004F4C  201E               	addwfc	(??_rand+2)^0,w,c
 26102  004F4E  6FE6               	movwf	(_seed+2)& (0+255),b
 26103  004F50  0E00               	movlw	0
 26104  004F52  201F               	addwfc	(??_rand+3)^0,w,c
 26105  004F54  6FE7               	movwf	(_seed+3)& (0+255),b
 26106  004F56  0E00               	movlw	0
 26107  004F58  2020               	addwfc	(??_rand+4)^0,w,c
 26108  004F5A  6FE8               	movwf	(_seed+4)& (0+255),b
 26109  004F5C  0E00               	movlw	0
 26110  004F5E  2021               	addwfc	(??_rand+5)^0,w,c
 26111  004F60  6FE9               	movwf	(_seed+5)& (0+255),b
 26112  004F62  0E00               	movlw	0
 26113  004F64  2022               	addwfc	(??_rand+6)^0,w,c
 26114  004F66  6FEA               	movwf	(_seed+6)& (0+255),b
 26115  004F68  0E00               	movlw	0
 26116  004F6A  2023               	addwfc	(??_rand+7)^0,w,c
 26117  004F6C  6FEB               	movwf	(_seed+7)& (0+255),b
 26118                           
 26119                           ; BSR set to: 0
 26120  004F6E  0060  F390  F01C   	movff	_seed,??_rand
 26121  004F74  0060  F394  F01D   	movff	_seed+1,??_rand+1
 26122  004F7A  0060  F398  F01E   	movff	_seed+2,??_rand+2
 26123  004F80  0060  F39C  F01F   	movff	_seed+3,??_rand+3
 26124  004F86  0060  F3A0  F020   	movff	_seed+4,??_rand+4
 26125  004F8C  0060  F3A4  F021   	movff	_seed+5,??_rand+5
 26126  004F92  0060  F3A8  F022   	movff	_seed+6,??_rand+6
 26127  004F98  0060  F3AC  F023   	movff	_seed+7,??_rand+7
 26128  004F9E  0E32               	movlw	50
 26129  004FA0  D009               	goto	u7760
 26130  004FA2                     u7765:
 26131  004FA2  90D8               	bcf	status,0,c
 26132  004FA4  3223               	rrcf	(??_rand+7)^0,f,c
 26133  004FA6  3222               	rrcf	(??_rand+6)^0,f,c
 26134  004FA8  3221               	rrcf	(??_rand+5)^0,f,c
 26135  004FAA  3220               	rrcf	(??_rand+4)^0,f,c
 26136  004FAC  321F               	rrcf	(??_rand+3)^0,f,c
 26137  004FAE  321E               	rrcf	(??_rand+2)^0,f,c
 26138  004FB0  321D               	rrcf	(??_rand+1)^0,f,c
 26139  004FB2  321C               	rrcf	??_rand^0,f,c
 26140  004FB4                     u7760:
 26141  004FB4  2EE8               	decfsz	wreg,f,c
 26142  004FB6  D7F5               	goto	u7765
 26143  004FB8  0060  F070  F01A   	movff	??_rand,?_rand
 26144  004FBE  0060  F078  F01B   	movff	??_rand+2,?_rand+1
 26145                           
 26146                           ; BSR set to: 0
 26147  004FC4  0012               	return		;funcret
 26148  004FC6                     __end_of_rand:
 26149                           	opt callstack 0
 26150                           
 26151 ;; *************** function ___omul *****************
 26152 ;; Defined at:
 26153 ;;		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul64.c"
 26154 ;; Parameters:    Size  Location     Type
 26155 ;;  multiplier      8    1[COMRAM] unsigned long long 
 26156 ;;  multiplicand    8    9[COMRAM] unsigned long long 
 26157 ;; Auto vars:     Size  Location     Type
 26158 ;;  product         8   17[COMRAM] unsigned long long 
 26159 ;; Return value:  Size  Location     Type
 26160 ;;                  8    1[COMRAM] unsigned long long 
 26161 ;; Registers used:
 26162 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26163 ;; Tracked objects:
 26164 ;;		On entry : 0/1
 26165 ;;		On exit  : 0/0
 26166 ;;		Unchanged: 0/0
 26167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26168 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26169 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26171 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26172 ;;Total ram usage:       24 bytes
 26173 ;; Hardware stack levels used:    1
 26174 ;; Hardware stack levels required when called:    7
 26175 ;; This function calls:
 26176 ;;		Nothing
 26177 ;; This function is called by:
 26178 ;;		_rand
 26179 ;; This function uses a non-reentrant model
 26180 ;;
 26181                           
 26182                           	psect	text162
 26183  006DC8                     __ptext162:
 26184                           	opt callstack 0
 26185  006DC8                     ___omul:
 26186                           	opt callstack 17
 26187                           
 26188                           ; BSR set to: 0
 26189                           ;incstack = 0
 26190  006DC8  EE20  F012         	lfsr	2,___omul@product
 26191  006DCC  0E07               	movlw	7
 26192  006DCE                     u7561:
 26193  006DCE  6ADE               	clrf	postinc2,c
 26194  006DD0  06E8               	decf	wreg,f,c
 26195  006DD2  E2FD               	bc	u7561
 26196  006DD4                     l9616:
 26197  006DD4  A002               	btfss	___omul@multiplier^0,0,c
 26198  006DD6  D010               	goto	l9620
 26199  006DD8  500A               	movf	___omul@multiplicand^0,w,c
 26200  006DDA  2612               	addwf	___omul@product^0,f,c
 26201  006DDC  500B               	movf	(___omul@multiplicand+1)^0,w,c
 26202  006DDE  2213               	addwfc	(___omul@product+1)^0,f,c
 26203  006DE0  500C               	movf	(___omul@multiplicand+2)^0,w,c
 26204  006DE2  2214               	addwfc	(___omul@product+2)^0,f,c
 26205  006DE4  500D               	movf	(___omul@multiplicand+3)^0,w,c
 26206  006DE6  2215               	addwfc	(___omul@product+3)^0,f,c
 26207  006DE8  500E               	movf	(___omul@multiplicand+4)^0,w,c
 26208  006DEA  2216               	addwfc	(___omul@product+4)^0,f,c
 26209  006DEC  500F               	movf	(___omul@multiplicand+5)^0,w,c
 26210  006DEE  2217               	addwfc	(___omul@product+5)^0,f,c
 26211  006DF0  5010               	movf	(___omul@multiplicand+6)^0,w,c
 26212  006DF2  2218               	addwfc	(___omul@product+6)^0,f,c
 26213  006DF4  5011               	movf	(___omul@multiplicand+7)^0,w,c
 26214  006DF6  2219               	addwfc	(___omul@product+7)^0,f,c
 26215  006DF8                     l9620:
 26216  006DF8  90D8               	bcf	status,0,c
 26217  006DFA  360A               	rlcf	___omul@multiplicand^0,f,c
 26218  006DFC  360B               	rlcf	(___omul@multiplicand+1)^0,f,c
 26219  006DFE  360C               	rlcf	(___omul@multiplicand+2)^0,f,c
 26220  006E00  360D               	rlcf	(___omul@multiplicand+3)^0,f,c
 26221  006E02  360E               	rlcf	(___omul@multiplicand+4)^0,f,c
 26222  006E04  360F               	rlcf	(___omul@multiplicand+5)^0,f,c
 26223  006E06  3610               	rlcf	(___omul@multiplicand+6)^0,f,c
 26224  006E08  3611               	rlcf	(___omul@multiplicand+7)^0,f,c
 26225  006E0A  90D8               	bcf	status,0,c
 26226  006E0C  3209               	rrcf	(___omul@multiplier+7)^0,f,c
 26227  006E0E  3208               	rrcf	(___omul@multiplier+6)^0,f,c
 26228  006E10  3207               	rrcf	(___omul@multiplier+5)^0,f,c
 26229  006E12  3206               	rrcf	(___omul@multiplier+4)^0,f,c
 26230  006E14  3205               	rrcf	(___omul@multiplier+3)^0,f,c
 26231  006E16  3204               	rrcf	(___omul@multiplier+2)^0,f,c
 26232  006E18  3203               	rrcf	(___omul@multiplier+1)^0,f,c
 26233  006E1A  3202               	rrcf	___omul@multiplier^0,f,c
 26234  006E1C  5002               	movf	___omul@multiplier^0,w,c
 26235  006E1E  1003               	iorwf	(___omul@multiplier+1)^0,w,c
 26236  006E20  1004               	iorwf	(___omul@multiplier+2)^0,w,c
 26237  006E22  1005               	iorwf	(___omul@multiplier+3)^0,w,c
 26238  006E24  1006               	iorwf	(___omul@multiplier+4)^0,w,c
 26239  006E26  1007               	iorwf	(___omul@multiplier+5)^0,w,c
 26240  006E28  1008               	iorwf	(___omul@multiplier+6)^0,w,c
 26241  006E2A  1009               	iorwf	(___omul@multiplier+7)^0,w,c
 26242  006E2C  A4D8               	btfss	status,2,c
 26243  006E2E  D7D2               	goto	l9616
 26244  006E30  0060  F048  F002   	movff	___omul@product,?___omul
 26245  006E36  0060  F04C  F003   	movff	___omul@product+1,?___omul+1
 26246  006E3C  0060  F050  F004   	movff	___omul@product+2,?___omul+2
 26247  006E42  0060  F054  F005   	movff	___omul@product+3,?___omul+3
 26248  006E48  0060  F058  F006   	movff	___omul@product+4,?___omul+4
 26249  006E4E  0060  F05C  F007   	movff	___omul@product+5,?___omul+5
 26250  006E54  0060  F060  F008   	movff	___omul@product+6,?___omul+6
 26251  006E5A  0060  F064  F009   	movff	___omul@product+7,?___omul+7
 26252  006E60  0012               	return		;funcret
 26253  006E62                     __end_of___omul:
 26254                           	opt callstack 0
 26255                           
 26256 ;; *************** function _nwkRoutePrepareTx *****************
 26257 ;; Defined at:
 26258 ;;		line 264 in file "../nwk/nwk_src/nwkRoute.c"
 26259 ;; Parameters:    Size  Location     Type
 26260 ;;  frame           2   12[COMRAM] PTR struct NwkFrame_t
 26261 ;;		 -> nwkFrameFrames(685), NULL(0), 
 26262 ;; Auto vars:     Size  Location     Type
 26263 ;;  header          2   16[COMRAM] PTR __pack struct NwkFra
 26264 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 26265 ;; Return value:  Size  Location     Type
 26266 ;;                  1    wreg      void 
 26267 ;; Registers used:
 26268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26269 ;; Tracked objects:
 26270 ;;		On entry : 0/1
 26271 ;;		On exit  : 0/0
 26272 ;;		Unchanged: 0/0
 26273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26275 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26276 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26277 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26278 ;;Total ram usage:        6 bytes
 26279 ;; Hardware stack levels used:    1
 26280 ;; Hardware stack levels required when called:    9
 26281 ;; This function calls:
 26282 ;;		_NWK_GroupIsMember
 26283 ;;		_NWK_RouteNextHop
 26284 ;; This function is called by:
 26285 ;;		_nwkTxFrame
 26286 ;; This function uses a non-reentrant model
 26287 ;;
 26288                           
 26289                           	psect	text163
 26290  004FC6                     __ptext163:
 26291                           	opt callstack 0
 26292  004FC6                     _nwkRoutePrepareTx:
 26293                           	opt callstack 15
 26294                           
 26295                           ;../nwk/nwk_src/nwkRoute.c: 264: void nwkRoutePrepareTx(NwkFrame_t *frame);../nwk/nwk_sr
      +                          c/nwkRoute.c: 265: {;../nwk/nwk_src/nwkRoute.c: 266:   NwkFrameHeader_t *header = &frame
      +                          ->header;
 26296                           
 26297                           ;incstack = 0
 26298  004FC6  0E02               	movlw	2
 26299  004FC8  240D               	addwf	nwkRoutePrepareTx@frame^0,w,c
 26300  004FCA  6E11               	movwf	nwkRoutePrepareTx@header^0,c
 26301  004FCC  0E00               	movlw	0
 26302  004FCE  200E               	addwfc	(nwkRoutePrepareTx@frame+1)^0,w,c
 26303  004FD0  6E12               	movwf	(nwkRoutePrepareTx@header+1)^0,c
 26304                           
 26305                           ;../nwk/nwk_src/nwkRoute.c: 268:   if (0xffff == header->nwkDstAddr)
 26306  004FD2  EE20 F00D          	lfsr	2,13
 26307  004FD6  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 26308  004FD8  26D9               	addwf	fsr2l,f,c
 26309  004FDA  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 26310  004FDC  22DA               	addwfc	fsr2h,f,c
 26311  004FDE  28DE               	incf	postinc2,w,c
 26312  004FE0  E10E               	bnz	l9688
 26313  004FE2  28DE               	incf	postinc2,w,c
 26314  004FE4  A4D8               	btfss	status,2,c
 26315  004FE6  D00B               	goto	l9688
 26316                           
 26317                           ;../nwk/nwk_src/nwkRoute.c: 269:   {;../nwk/nwk_src/nwkRoute.c: 270:     header->macDstA
      +                          ddr = 0xffff;
 26318  004FE8  EE20 F005          	lfsr	2,5
 26319  004FEC  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 26320  004FEE  26D9               	addwf	fsr2l,f,c
 26321  004FF0  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 26322  004FF2  22DA               	addwfc	fsr2h,f,c
 26323  004FF4  0EFF               	movlw	255
 26324  004FF6  6EDE               	movwf	postinc2,c
 26325  004FF8  0EFF               	movlw	255
 26326  004FFA  6EDD               	movwf	postdec2,c
 26327                           
 26328                           ;../nwk/nwk_src/nwkRoute.c: 271:   }
 26329  004FFC  0012               	return	
 26330  004FFE                     l9688:
 26331  004FFE  EE20 F009          	lfsr	2,9
 26332  005002  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 26333  005004  26D9               	addwf	fsr2l,f,c
 26334  005006  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 26335  005008  22DA               	addwfc	fsr2h,f,c
 26336  00500A  A4DF               	btfss	indf2,2,c
 26337  00500C  D013               	goto	l9692
 26338                           
 26339                           ;../nwk/nwk_src/nwkRoute.c: 274:   {;../nwk/nwk_src/nwkRoute.c: 275:     header->macDstA
      +                          ddr = header->nwkDstAddr;
 26340  00500E  EE20 F00D          	lfsr	2,13
 26341  005012  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 26342  005014  26D9               	addwf	fsr2l,f,c
 26343  005016  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 26344  005018  22DA               	addwfc	fsr2h,f,c
 26345  00501A  EE10 F005          	lfsr	1,5
 26346  00501E  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 26347  005020  26E1               	addwf	fsr1l,f,c
 26348  005022  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 26349  005024  22E2               	addwfc	fsr1h,f,c
 26350  005026  006F FF7B FFE6     	movff	postinc2,postinc1
 26351  00502C  006F FF77 FFE5     	movff	postdec2,postdec1
 26352                           
 26353                           ;../nwk/nwk_src/nwkRoute.c: 276:   }
 26354  005032  0012               	return	
 26355  005034                     l9692:
 26356  005034  EE20 F009          	lfsr	2,9
 26357  005038  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 26358  00503A  26D9               	addwf	fsr2l,f,c
 26359  00503C  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 26360  00503E  22DA               	addwfc	fsr2h,f,c
 26361  005040  A6DF               	btfss	indf2,3,c
 26362  005042  D023               	goto	l9698
 26363  005044  EE20 F00D          	lfsr	2,13
 26364  005048  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 26365  00504A  26D9               	addwf	fsr2l,f,c
 26366  00504C  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 26367  00504E  22DA               	addwfc	fsr2h,f,c
 26368  005050  006F FF78  F002    	movff	postinc2,NWK_GroupIsMember@group
 26369  005056  006F FF74  F003    	movff	postdec2,NWK_GroupIsMember@group+1
 26370  00505C  ECA6  F044         	call	_NWK_GroupIsMember	;wreg free
 26371  005060  0900               	iorlw	0
 26372  005062  B4D8               	btfsc	status,2,c
 26373  005064  D012               	goto	l9698
 26374                           
 26375                           ;../nwk/nwk_src/nwkRoute.c: 280:   {;../nwk/nwk_src/nwkRoute.c: 281:     header->macDstA
      +                          ddr = 0xffff;
 26376  005066  EE20 F005          	lfsr	2,5
 26377  00506A  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 26378  00506C  26D9               	addwf	fsr2l,f,c
 26379  00506E  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 26380  005070  22DA               	addwfc	fsr2h,f,c
 26381  005072  0EFF               	movlw	255
 26382  005074  6EDE               	movwf	postinc2,c
 26383  005076  0EFF               	movlw	255
 26384  005078  6EDD               	movwf	postdec2,c
 26385                           
 26386                           ;../nwk/nwk_src/nwkRoute.c: 282:     header->nwkFcf.linkLocal = 1;
 26387  00507A  EE20 F009          	lfsr	2,9
 26388  00507E  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 26389  005080  26D9               	addwf	fsr2l,f,c
 26390  005082  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 26391  005084  22DA               	addwfc	fsr2h,f,c
 26392  005086  84DF               	bsf	indf2,2,c
 26393                           
 26394                           ;../nwk/nwk_src/nwkRoute.c: 283:   }
 26395  005088  0012               	return	
 26396  00508A                     l9698:
 26397                           
 26398                           ;../nwk/nwk_src/nwkRoute.c: 287:   {;../nwk/nwk_src/nwkRoute.c: 288:     header->macDstA
      +                          ddr = NWK_RouteNextHop(header->nwkDstAddr, header->nwkFcf.multicast);
 26399  00508A  EE20 F00D          	lfsr	2,13
 26400  00508E  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 26401  005090  26D9               	addwf	fsr2l,f,c
 26402  005092  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 26403  005094  22DA               	addwfc	fsr2h,f,c
 26404  005096  006F FF78  F008    	movff	postinc2,NWK_RouteNextHop@dst
 26405  00509C  006F FF74  F009    	movff	postdec2,NWK_RouteNextHop@dst+1
 26406  0050A2  EE20 F009          	lfsr	2,9
 26407  0050A6  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 26408  0050A8  26D9               	addwf	fsr2l,f,c
 26409  0050AA  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 26410  0050AC  22DA               	addwfc	fsr2h,f,c
 26411  0050AE  0E00               	movlw	0
 26412  0050B0  B6DF               	btfsc	indf2,3,c
 26413  0050B2  0E01               	movlw	1
 26414  0050B4  6E0A               	movwf	NWK_RouteNextHop@multicast^0,c
 26415  0050B6  EC64  F040         	call	_NWK_RouteNextHop	;wreg free
 26416  0050BA  EE20 F005          	lfsr	2,5
 26417  0050BE  5011               	movf	nwkRoutePrepareTx@header^0,w,c
 26418  0050C0  26D9               	addwf	fsr2l,f,c
 26419  0050C2  5012               	movf	(nwkRoutePrepareTx@header+1)^0,w,c
 26420  0050C4  22DA               	addwfc	fsr2h,f,c
 26421  0050C6  0060  F023  FFDE   	movff	?_NWK_RouteNextHop,postinc2
 26422  0050CC  0060  F027  FFDD   	movff	?_NWK_RouteNextHop+1,postdec2
 26423  0050D2  0012               	return		;funcret
 26424  0050D4                     __end_of_nwkRoutePrepareTx:
 26425                           	opt callstack 0
 26426                           
 26427 ;; *************** function _NWK_RouteNextHop *****************
 26428 ;; Defined at:
 26429 ;;		line 144 in file "../nwk/nwk_src/nwkRoute.c"
 26430 ;; Parameters:    Size  Location     Type
 26431 ;;  dst             2    7[COMRAM] unsigned short 
 26432 ;;  multicast       1    9[COMRAM] unsigned char 
 26433 ;; Auto vars:     Size  Location     Type
 26434 ;;  entry           2   10[COMRAM] PTR struct NWK_RouteTabl
 26435 ;;		 -> nwkRouteTable(70), NULL(0), 
 26436 ;; Return value:  Size  Location     Type
 26437 ;;                  2    7[COMRAM] unsigned short 
 26438 ;; Registers used:
 26439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26440 ;; Tracked objects:
 26441 ;;		On entry : 0/0
 26442 ;;		On exit  : 0/0
 26443 ;;		Unchanged: 0/0
 26444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26445 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26446 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26448 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26449 ;;Total ram usage:        5 bytes
 26450 ;; Hardware stack levels used:    1
 26451 ;; Hardware stack levels required when called:    8
 26452 ;; This function calls:
 26453 ;;		_NWK_RouteFindEntry
 26454 ;; This function is called by:
 26455 ;;		_nwkRoutePrepareTx
 26456 ;;		_nwkRouteFrame
 26457 ;; This function uses a non-reentrant model
 26458 ;;
 26459                           
 26460                           	psect	text164
 26461  0080C8                     __ptext164:
 26462                           	opt callstack 0
 26463  0080C8                     _NWK_RouteNextHop:
 26464                           	opt callstack 15
 26465                           
 26466                           ;../nwk/nwk_src/nwkRoute.c: 144: uint16_t NWK_RouteNextHop(uint16_t dst, uint8_t multica
      +                          st);../nwk/nwk_src/nwkRoute.c: 145: {;../nwk/nwk_src/nwkRoute.c: 146:   NWK_RouteTableEn
      +                          try_t *entry;;../nwk/nwk_src/nwkRoute.c: 148:   entry = NWK_RouteFindEntry(dst, multicas
      +                          t);
 26467                           
 26468                           ;incstack = 0
 26469  0080C8  0060  F020  F002   	movff	NWK_RouteNextHop@dst,NWK_RouteFindEntry@dst
 26470  0080CE  0060  F024  F003   	movff	NWK_RouteNextHop@dst+1,NWK_RouteFindEntry@dst+1
 26471  0080D4  0060  F028  F004   	movff	NWK_RouteNextHop@multicast,NWK_RouteFindEntry@multicast
 26472  0080DA  EC3E  F03C         	call	_NWK_RouteFindEntry	;wreg free
 26473  0080DE  0060  F008  F00B   	movff	?_NWK_RouteFindEntry,NWK_RouteNextHop@entry
 26474  0080E4  0060  F00C  F00C   	movff	?_NWK_RouteFindEntry+1,NWK_RouteNextHop@entry+1
 26475                           
 26476                           ;../nwk/nwk_src/nwkRoute.c: 149:   if (entry)
 26477  0080EA  500B               	movf	NWK_RouteNextHop@entry^0,w,c
 26478  0080EC  100C               	iorwf	(NWK_RouteNextHop@entry+1)^0,w,c
 26479  0080EE  B4D8               	btfsc	status,2,c
 26480  0080F0  D00D               	goto	l1966
 26481                           
 26482                           ;../nwk/nwk_src/nwkRoute.c: 150:     return entry->nextHopAddr;
 26483  0080F2  EE20 F003          	lfsr	2,3
 26484  0080F6  500B               	movf	NWK_RouteNextHop@entry^0,w,c
 26485  0080F8  26D9               	addwf	fsr2l,f,c
 26486  0080FA  500C               	movf	(NWK_RouteNextHop@entry+1)^0,w,c
 26487  0080FC  22DA               	addwfc	fsr2h,f,c
 26488  0080FE  006F FF78  F008    	movff	postinc2,?_NWK_RouteNextHop
 26489  008104  006F FF74  F009    	movff	postdec2,?_NWK_RouteNextHop+1
 26490  00810A  0012               	return	
 26491  00810C                     l1966:
 26492                           
 26493                           ;../nwk/nwk_src/nwkRoute.c: 152:   return 0xffff;
 26494  00810C  6808               	setf	?_NWK_RouteNextHop^0,c
 26495  00810E  6809               	setf	(?_NWK_RouteNextHop+1)^0,c
 26496  008110  0012               	return		;funcret
 26497  008112                     __end_of_NWK_RouteNextHop:
 26498                           	opt callstack 0
 26499                           
 26500 ;; *************** function _NWK_RouteFindEntry *****************
 26501 ;; Defined at:
 26502 ;;		line 91 in file "../nwk/nwk_src/nwkRoute.c"
 26503 ;; Parameters:    Size  Location     Type
 26504 ;;  dst             2    1[COMRAM] unsigned short 
 26505 ;;  multicast       1    3[COMRAM] unsigned char 
 26506 ;; Auto vars:     Size  Location     Type
 26507 ;;  i               1    6[COMRAM] unsigned char 
 26508 ;; Return value:  Size  Location     Type
 26509 ;;                  2    1[COMRAM] PTR struct NWK_RouteTabl
 26510 ;; Registers used:
 26511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26512 ;; Tracked objects:
 26513 ;;		On entry : 0/0
 26514 ;;		On exit  : 0/0
 26515 ;;		Unchanged: 0/0
 26516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26517 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26519 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26520 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26521 ;;Total ram usage:        6 bytes
 26522 ;; Hardware stack levels used:    1
 26523 ;; Hardware stack levels required when called:    7
 26524 ;; This function calls:
 26525 ;;		Nothing
 26526 ;; This function is called by:
 26527 ;;		_NWK_RouteNextHop
 26528 ;;		_nwkRouteRemove
 26529 ;;		_nwkRouteFrameReceived
 26530 ;;		_nwkRouteFrameSent
 26531 ;; This function uses a non-reentrant model
 26532 ;;
 26533                           
 26534                           	psect	text165
 26535  00787C                     __ptext165:
 26536                           	opt callstack 0
 26537  00787C                     _NWK_RouteFindEntry:
 26538                           	opt callstack 19
 26539                           
 26540                           ;../nwk/nwk_src/nwkRoute.c: 91: NWK_RouteTableEntry_t *NWK_RouteFindEntry(uint16_t dst, 
      +                          uint8_t multicast);../nwk/nwk_src/nwkRoute.c: 92: {;../nwk/nwk_src/nwkRoute.c: 93:   for
      +                           (uint8_t i = 0; i < 10; i++)
 26541                           
 26542                           ;incstack = 0
 26543  00787C  0E00               	movlw	0
 26544  00787E  6E07               	movwf	NWK_RouteFindEntry@i^0,c
 26545  007880                     l9124:
 26546                           
 26547                           ;../nwk/nwk_src/nwkRoute.c: 94:   {;../nwk/nwk_src/nwkRoute.c: 95:     if (nwkRouteTable
      +                          [i].dstAddr == dst &&
 26548  007880  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 26549  007882  0D07               	mullw	7
 26550  007884  0E45               	movlw	low (_nwkRouteTable+1)
 26551  007886  24F3               	addwf	243,w,c
 26552  007888  6ED9               	movwf	fsr2l,c
 26553  00788A  0E02               	movlw	high (_nwkRouteTable+1)
 26554  00788C  20F4               	addwfc	prodh,w,c
 26555  00788E  6EDA               	movwf	fsr2h,c
 26556  007890  5002               	movf	NWK_RouteFindEntry@dst^0,w,c
 26557  007892  18DE               	xorwf	postinc2,w,c
 26558  007894  E11E               	bnz	l9132
 26559  007896  5003               	movf	(NWK_RouteFindEntry@dst+1)^0,w,c
 26560  007898  18DE               	xorwf	postinc2,w,c
 26561  00789A  A4D8               	btfss	status,2,c
 26562  00789C  D01A               	goto	l9132
 26563  00789E  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 26564  0078A0  0D07               	mullw	7
 26565  0078A2  0E44               	movlw	low _nwkRouteTable
 26566  0078A4  24F3               	addwf	243,w,c
 26567  0078A6  6ED9               	movwf	fsr2l,c
 26568  0078A8  0E02               	movlw	high _nwkRouteTable
 26569  0078AA  20F4               	addwfc	prodh,w,c
 26570  0078AC  6EDA               	movwf	fsr2h,c
 26571  0078AE  0102               	movlb	2	; () banked
 26572  0078B0  A2DF               	btfss	indf2,1,c
 26573  0078B2  D002               	goto	u6600
 26574  0078B4  0E01               	movlw	1
 26575  0078B6  D001               	goto	u6606
 26576  0078B8                     u6600:
 26577  0078B8  0E00               	movlw	0
 26578  0078BA                     u6606:
 26579  0078BA  1804               	xorwf	NWK_RouteFindEntry@multicast^0,w,c
 26580  0078BC  A4D8               	btfss	status,2,c
 26581  0078BE  D009               	goto	l9132
 26582                           
 26583                           ; BSR set to: 2
 26584                           ;../nwk/nwk_src/nwkRoute.c: 97:       return &nwkRouteTable[i];
 26585  0078C0  5007               	movf	NWK_RouteFindEntry@i^0,w,c
 26586  0078C2  0D07               	mullw	7
 26587  0078C4  0E44               	movlw	low _nwkRouteTable
 26588  0078C6  24F3               	addwf	243,w,c
 26589  0078C8  6E02               	movwf	?_NWK_RouteFindEntry^0,c
 26590  0078CA  0E02               	movlw	high _nwkRouteTable
 26591  0078CC  20F4               	addwfc	prodh,w,c
 26592  0078CE  6E03               	movwf	(?_NWK_RouteFindEntry+1)^0,c
 26593  0078D0  0012               	return	
 26594  0078D2                     l9132:
 26595                           
 26596                           ;../nwk/nwk_src/nwkRoute.c: 98:   }
 26597  0078D2  2A07               	incf	NWK_RouteFindEntry@i^0,f,c
 26598  0078D4  0E09               	movlw	9
 26599  0078D6  6407               	cpfsgt	NWK_RouteFindEntry@i^0,c
 26600  0078D8  D7D3               	goto	l9124
 26601                           
 26602                           ;../nwk/nwk_src/nwkRoute.c: 100:   return ((void*)0);
 26603  0078DA  0E00               	movlw	0
 26604  0078DC  6E02               	movwf	?_NWK_RouteFindEntry^0,c
 26605  0078DE  0E00               	movlw	0
 26606  0078E0  6E03               	movwf	(?_NWK_RouteFindEntry+1)^0,c
 26607  0078E2  0012               	return		;funcret
 26608  0078E4                     __end_of_NWK_RouteFindEntry:
 26609                           	opt callstack 0
 26610                           
 26611 ;; *************** function _NWK_GroupIsMember *****************
 26612 ;; Defined at:
 26613 ;;		line 101 in file "../nwk/nwk_src/nwkGroup.c"
 26614 ;; Parameters:    Size  Location     Type
 26615 ;;  group           2    1[COMRAM] unsigned short 
 26616 ;; Auto vars:     Size  Location     Type
 26617 ;;  i               1    5[COMRAM] unsigned char 
 26618 ;; Return value:  Size  Location     Type
 26619 ;;                  1    wreg      _Bool 
 26620 ;; Registers used:
 26621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26622 ;; Tracked objects:
 26623 ;;		On entry : 0/1
 26624 ;;		On exit  : 0/0
 26625 ;;		Unchanged: 0/0
 26626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26629 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26630 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26631 ;;Total ram usage:        5 bytes
 26632 ;; Hardware stack levels used:    1
 26633 ;; Hardware stack levels required when called:    7
 26634 ;; This function calls:
 26635 ;;		Nothing
 26636 ;; This function is called by:
 26637 ;;		_nwkRoutePrepareTx
 26638 ;;		_nwkRxHandleReceivedFrame
 26639 ;; This function uses a non-reentrant model
 26640 ;;
 26641                           
 26642                           	psect	text166
 26643  00894C                     __ptext166:
 26644                           	opt callstack 0
 26645  00894C                     _NWK_GroupIsMember:
 26646                           	opt callstack 19
 26647                           
 26648                           ;../nwk/nwk_src/nwkGroup.c: 101: _Bool NWK_GroupIsMember(uint16_t group);../nwk/nwk_src/
      +                          nwkGroup.c: 102: {;../nwk/nwk_src/nwkGroup.c: 103:   for (uint8_t i = 0; i < 10; i++)
 26649                           
 26650                           ;incstack = 0
 26651  00894C  0E00               	movlw	0
 26652  00894E  6E06               	movwf	NWK_GroupIsMember@i^0,c
 26653  008950                     l9368:
 26654                           
 26655                           ;../nwk/nwk_src/nwkGroup.c: 104:     if (group == nwkGroups[i])
 26656  008950  5006               	movf	NWK_GroupIsMember@i^0,w,c
 26657  008952  0D02               	mullw	2
 26658  008954  0E00               	movlw	low _nwkGroups
 26659  008956  24F3               	addwf	243,w,c
 26660  008958  6ED9               	movwf	fsr2l,c
 26661  00895A  0E02               	movlw	high _nwkGroups
 26662  00895C  20F4               	addwfc	prodh,w,c
 26663  00895E  6EDA               	movwf	fsr2h,c
 26664  008960  5002               	movf	NWK_GroupIsMember@group^0,w,c
 26665  008962  18DE               	xorwf	postinc2,w,c
 26666  008964  E106               	bnz	l9374
 26667  008966  5003               	movf	(NWK_GroupIsMember@group+1)^0,w,c
 26668  008968  18DE               	xorwf	postinc2,w,c
 26669  00896A  A4D8               	btfss	status,2,c
 26670  00896C  D002               	goto	l9374
 26671                           
 26672                           ;../nwk/nwk_src/nwkGroup.c: 105:       return 1;
 26673  00896E  0E01               	movlw	1
 26674  008970  0012               	return	
 26675  008972                     l9374:
 26676  008972  2A06               	incf	NWK_GroupIsMember@i^0,f,c
 26677  008974  0E09               	movlw	9
 26678  008976  6406               	cpfsgt	NWK_GroupIsMember@i^0,c
 26679  008978  D7EB               	goto	l9368
 26680                           
 26681                           ;../nwk/nwk_src/nwkGroup.c: 106:   return 0;
 26682  00897A  0E00               	movlw	0
 26683  00897C  0012               	return		;funcret
 26684  00897E                     __end_of_NWK_GroupIsMember:
 26685                           	opt callstack 0
 26686                           
 26687 ;; *************** function _nwkFrameAlloc *****************
 26688 ;; Defined at:
 26689 ;;		line 80 in file "../nwk/nwk_src/nwkFrame.c"
 26690 ;; Parameters:    Size  Location     Type
 26691 ;;		None
 26692 ;; Auto vars:     Size  Location     Type
 26693 ;;  i               1   17[COMRAM] unsigned char 
 26694 ;; Return value:  Size  Location     Type
 26695 ;;                  2   13[COMRAM] PTR struct NwkFrame_t
 26696 ;; Registers used:
 26697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26698 ;; Tracked objects:
 26699 ;;		On entry : 0/0
 26700 ;;		On exit  : 0/0
 26701 ;;		Unchanged: 0/0
 26702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26706 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26707 ;;Total ram usage:        5 bytes
 26708 ;; Hardware stack levels used:    1
 26709 ;; Hardware stack levels required when called:    8
 26710 ;; This function calls:
 26711 ;;		_memset
 26712 ;; This function is called by:
 26713 ;;		_nwkDataReqSendFrame
 26714 ;;		_nwkRouteSendRouteError
 26715 ;;		_PHY_DataInd
 26716 ;;		_nwkRxSendAck
 26717 ;;		_nwkTxBroadcastFrame
 26718 ;; This function uses a non-reentrant model
 26719 ;;
 26720                           
 26721                           	psect	text167
 26722  0067D0                     __ptext167:
 26723                           	opt callstack 0
 26724  0067D0                     _nwkFrameAlloc:
 26725                           	opt callstack 17
 26726                           
 26727                           ;../nwk/nwk_src/nwkFrame.c: 82:   for (uint8_t i = 0; i < 5; i++)
 26728                           
 26729                           ;incstack = 0
 26730  0067D0  0E00               	movlw	0
 26731  0067D2  6E12               	movwf	nwkFrameAlloc@i^0,c
 26732  0067D4                     l14580:
 26733                           
 26734                           ;../nwk/nwk_src/nwkFrame.c: 83:   {;../nwk/nwk_src/nwkFrame.c: 84:     if (NWK_FRAME_STA
      +                          TE_FREE == nwkFrameFrames[i].state)
 26735  0067D4  5012               	movf	nwkFrameAlloc@i^0,w,c
 26736  0067D6  0D89               	mullw	137
 26737  0067D8  0EBD               	movlw	low _nwkFrameFrames
 26738  0067DA  24F3               	addwf	243,w,c
 26739  0067DC  6ED9               	movwf	fsr2l,c
 26740  0067DE  0E05               	movlw	high _nwkFrameFrames
 26741  0067E0  20F4               	addwfc	prodh,w,c
 26742  0067E2  6EDA               	movwf	fsr2h,c
 26743  0067E4  50DF               	movf	indf2,w,c
 26744  0067E6  A4D8               	btfss	status,2,c
 26745  0067E8  D044               	goto	l14594
 26746                           
 26747                           ;../nwk/nwk_src/nwkFrame.c: 85:     {;../nwk/nwk_src/nwkFrame.c: 86:       memset(&nwkFr
      +                          ameFrames[i], 0, sizeof(NwkFrame_t));
 26748  0067EA  5012               	movf	nwkFrameAlloc@i^0,w,c
 26749  0067EC  0D89               	mullw	137
 26750  0067EE  0EBD               	movlw	low _nwkFrameFrames
 26751  0067F0  24F3               	addwf	243,w,c
 26752  0067F2  6E02               	movwf	memset@dest^0,c
 26753  0067F4  0E05               	movlw	high _nwkFrameFrames
 26754  0067F6  20F4               	addwfc	prodh,w,c
 26755  0067F8  6E03               	movwf	(memset@dest+1)^0,c
 26756  0067FA  0E00               	movlw	0
 26757  0067FC  6E05               	movwf	(memset@c+1)^0,c
 26758  0067FE  0E00               	movlw	0
 26759  006800  6E04               	movwf	memset@c^0,c
 26760  006802  0E00               	movlw	0
 26761  006804  6E07               	movwf	(memset@n+1)^0,c
 26762  006806  0E89               	movlw	137
 26763  006808  6E06               	movwf	memset@n^0,c
 26764  00680A  EC10  F022         	call	_memset	;wreg free
 26765                           
 26766                           ;../nwk/nwk_src/nwkFrame.c: 87:       nwkFrameFrames[i].size = sizeof(NwkFrameHeader_t);
 26767  00680E  5012               	movf	nwkFrameAlloc@i^0,w,c
 26768  006810  0D89               	mullw	137
 26769  006812  0EBE               	movlw	low (_nwkFrameFrames+1)
 26770  006814  24F3               	addwf	243,w,c
 26771  006816  6ED9               	movwf	fsr2l,c
 26772  006818  0E05               	movlw	high (_nwkFrameFrames+1)
 26773  00681A  20F4               	addwfc	prodh,w,c
 26774  00681C  6EDA               	movwf	fsr2h,c
 26775  00681E  0E10               	movlw	16
 26776  006820  6EDF               	movwf	indf2,c
 26777                           
 26778                           ;../nwk/nwk_src/nwkFrame.c: 88:       nwkFrameFrames[i].payload = nwkFrameFrames[i].data
      +                           + sizeof(NwkFrameHeader_t);
 26779  006822  5012               	movf	nwkFrameAlloc@i^0,w,c
 26780  006824  0D89               	mullw	137
 26781  006826  0EBD               	movlw	low _nwkFrameFrames
 26782  006828  6E10               	movwf	??_nwkFrameAlloc^0,c
 26783  00682A  0E05               	movlw	high _nwkFrameFrames
 26784  00682C  6E11               	movwf	(??_nwkFrameAlloc+1)^0,c
 26785  00682E  0E12               	movlw	18
 26786  006830  2610               	addwf	??_nwkFrameAlloc^0,f,c
 26787  006832  0E00               	movlw	0
 26788  006834  2211               	addwfc	(??_nwkFrameAlloc+1)^0,f,c
 26789  006836  50F3               	movf	243,w,c
 26790  006838  2610               	addwf	??_nwkFrameAlloc^0,f,c
 26791  00683A  50F4               	movf	244,w,c
 26792  00683C  2211               	addwfc	(??_nwkFrameAlloc+1)^0,f,c
 26793  00683E  5012               	movf	nwkFrameAlloc@i^0,w,c
 26794  006840  0D89               	mullw	137
 26795  006842  0E3E               	movlw	low (_nwkFrameFrames+129)
 26796  006844  24F3               	addwf	243,w,c
 26797  006846  6ED9               	movwf	fsr2l,c
 26798  006848  0E06               	movlw	high (_nwkFrameFrames+129)
 26799  00684A  20F4               	addwfc	prodh,w,c
 26800  00684C  6EDA               	movwf	fsr2h,c
 26801  00684E  0060  F043  FFDE   	movff	??_nwkFrameAlloc,postinc2
 26802  006854  0060  F047  FFDD   	movff	??_nwkFrameAlloc+1,postdec2
 26803                           
 26804                           ;../nwk/nwk_src/nwkFrame.c: 89:       nwkIb.lock++;
 26805  00685A  0101               	movlb	1	; () banked
 26806  00685C  4B26               	infsnz	(_nwkIb+38)& (0+255),f,b
 26807  00685E  2B27               	incf	(_nwkIb+39)& (0+255),f,b
 26808                           
 26809                           ; BSR set to: 1
 26810                           ;../nwk/nwk_src/nwkFrame.c: 90:       return &nwkFrameFrames[i];
 26811  006860  5012               	movf	nwkFrameAlloc@i^0,w,c
 26812  006862  0D89               	mullw	137
 26813  006864  0EBD               	movlw	low _nwkFrameFrames
 26814  006866  24F3               	addwf	243,w,c
 26815  006868  6E0E               	movwf	?_nwkFrameAlloc^0,c
 26816  00686A  0E05               	movlw	high _nwkFrameFrames
 26817  00686C  20F4               	addwfc	prodh,w,c
 26818  00686E  6E0F               	movwf	(?_nwkFrameAlloc+1)^0,c
 26819  006870  0012               	return	
 26820  006872                     l14594:
 26821                           
 26822                           ;../nwk/nwk_src/nwkFrame.c: 92:   }
 26823  006872  2A12               	incf	nwkFrameAlloc@i^0,f,c
 26824  006874  0E04               	movlw	4
 26825  006876  6412               	cpfsgt	nwkFrameAlloc@i^0,c
 26826  006878  D7AD               	goto	l14580
 26827                           
 26828                           ;../nwk/nwk_src/nwkFrame.c: 93:   return ((void*)0);
 26829  00687A  0E00               	movlw	0
 26830  00687C  6E0E               	movwf	?_nwkFrameAlloc^0,c
 26831  00687E  0E00               	movlw	0
 26832  006880  6E0F               	movwf	(?_nwkFrameAlloc+1)^0,c
 26833  006882  0012               	return		;funcret
 26834  006884                     __end_of_nwkFrameAlloc:
 26835                           	opt callstack 0
 26836                           
 26837 ;; *************** function _memset *****************
 26838 ;; Defined at:
 26839 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memset.c"
 26840 ;; Parameters:    Size  Location     Type
 26841 ;;  dest            2    1[COMRAM] PTR void 
 26842 ;;		 -> nwkFrameFrames(685), cmdSetTX@CHstr(3), atCommand(80), tx_buffer.payload(109), 
 26843 ;;		 -> tx_buffer(524), rx_buffer.payload(109), rx_buffer(488), 
 26844 ;;  c               2    3[COMRAM] int 
 26845 ;;  n               2    5[COMRAM] unsigned int 
 26846 ;; Auto vars:     Size  Location     Type
 26847 ;;  s               2   11[COMRAM] PTR unsigned char 
 26848 ;;		 -> nwkFrameFrames(685), cmdSetTX@CHstr(3), atCommand(80), tx_buffer.payload(109), 
 26849 ;;		 -> tx_buffer(524), rx_buffer.payload(109), rx_buffer(488), 
 26850 ;;  k               2    9[COMRAM] unsigned int 
 26851 ;; Return value:  Size  Location     Type
 26852 ;;                  2    1[COMRAM] PTR void 
 26853 ;; Registers used:
 26854 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26855 ;; Tracked objects:
 26856 ;;		On entry : 0/0
 26857 ;;		On exit  : 0/0
 26858 ;;		Unchanged: 0/0
 26859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26860 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26861 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26862 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26863 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26864 ;;Total ram usage:       12 bytes
 26865 ;; Hardware stack levels used:    1
 26866 ;; Hardware stack levels required when called:    7
 26867 ;; This function calls:
 26868 ;;		Nothing
 26869 ;; This function is called by:
 26870 ;;		_appDataInd
 26871 ;;		_cmdSend
 26872 ;;		_cmdBcast
 26873 ;;		_cmdSetTX
 26874 ;;		_processATCommand
 26875 ;;		_nwkFrameAlloc
 26876 ;; This function uses a non-reentrant model
 26877 ;;
 26878                           
 26879                           	psect	text168
 26880  004420                     __ptext168:
 26881                           	opt callstack 0
 26882  004420                     _memset:
 26883                           	opt callstack 22
 26884                           
 26885                           ;incstack = 0
 26886  004420  0060  F008  F00C   	movff	memset@dest,memset@s
 26887  004426  0060  F00C  F00D   	movff	memset@dest+1,memset@s+1
 26888  00442C  5006               	movf	memset@n^0,w,c
 26889  00442E  1007               	iorwf	(memset@n+1)^0,w,c
 26890  004430  B4D8               	btfsc	status,2,c
 26891  004432  0012               	return	
 26892  004434  0060  F033  FFD9   	movff	memset@s,fsr2l
 26893  00443A  0060  F037  FFDA   	movff	memset@s+1,fsr2h
 26894  004440  0060  F013  FFDF   	movff	memset@c,indf2
 26895  004446  5006               	movf	memset@n^0,w,c
 26896  004448  240C               	addwf	memset@s^0,w,c
 26897  00444A  6E08               	movwf	??_memset^0,c
 26898  00444C  5007               	movf	(memset@n+1)^0,w,c
 26899  00444E  200D               	addwfc	(memset@s+1)^0,w,c
 26900  004450  6E09               	movwf	(??_memset+1)^0,c
 26901  004452  0EFF               	movlw	255
 26902  004454  2408               	addwf	??_memset^0,w,c
 26903  004456  6ED9               	movwf	fsr2l,c
 26904  004458  0EFF               	movlw	255
 26905  00445A  2009               	addwfc	(??_memset+1)^0,w,c
 26906  00445C  6EDA               	movwf	fsr2h,c
 26907  00445E  0060  F013  FFDF   	movff	memset@c,indf2
 26908  004464  5007               	movf	(memset@n+1)^0,w,c
 26909  004466  E104               	bnz	l14394
 26910  004468  0E03               	movlw	3
 26911  00446A  5C06               	subwf	memset@n^0,w,c
 26912  00446C  A0D8               	btfss	status,0,c
 26913  00446E  0012               	return	
 26914  004470                     l14394:
 26915  004470  EE20 F001          	lfsr	2,1
 26916  004474  500C               	movf	memset@s^0,w,c
 26917  004476  26D9               	addwf	fsr2l,f,c
 26918  004478  500D               	movf	(memset@s+1)^0,w,c
 26919  00447A  22DA               	addwfc	fsr2h,f,c
 26920  00447C  0060  F013  FFDF   	movff	memset@c,indf2
 26921  004482  EE20 F002          	lfsr	2,2
 26922  004486  500C               	movf	memset@s^0,w,c
 26923  004488  26D9               	addwf	fsr2l,f,c
 26924  00448A  500D               	movf	(memset@s+1)^0,w,c
 26925  00448C  22DA               	addwfc	fsr2h,f,c
 26926  00448E  0060  F013  FFDF   	movff	memset@c,indf2
 26927  004494  5006               	movf	memset@n^0,w,c
 26928  004496  240C               	addwf	memset@s^0,w,c
 26929  004498  6E08               	movwf	??_memset^0,c
 26930  00449A  5007               	movf	(memset@n+1)^0,w,c
 26931  00449C  200D               	addwfc	(memset@s+1)^0,w,c
 26932  00449E  6E09               	movwf	(??_memset+1)^0,c
 26933  0044A0  0EFE               	movlw	254
 26934  0044A2  2408               	addwf	??_memset^0,w,c
 26935  0044A4  6ED9               	movwf	fsr2l,c
 26936  0044A6  0EFF               	movlw	255
 26937  0044A8  2009               	addwfc	(??_memset+1)^0,w,c
 26938  0044AA  6EDA               	movwf	fsr2h,c
 26939  0044AC  0060  F013  FFDF   	movff	memset@c,indf2
 26940  0044B2  5006               	movf	memset@n^0,w,c
 26941  0044B4  240C               	addwf	memset@s^0,w,c
 26942  0044B6  6E08               	movwf	??_memset^0,c
 26943  0044B8  5007               	movf	(memset@n+1)^0,w,c
 26944  0044BA  200D               	addwfc	(memset@s+1)^0,w,c
 26945  0044BC  6E09               	movwf	(??_memset+1)^0,c
 26946  0044BE  0EFD               	movlw	253
 26947  0044C0  2408               	addwf	??_memset^0,w,c
 26948  0044C2  6ED9               	movwf	fsr2l,c
 26949  0044C4  0EFF               	movlw	255
 26950  0044C6  2009               	addwfc	(??_memset+1)^0,w,c
 26951  0044C8  6EDA               	movwf	fsr2h,c
 26952  0044CA  0060  F013  FFDF   	movff	memset@c,indf2
 26953  0044D0  5007               	movf	(memset@n+1)^0,w,c
 26954  0044D2  E104               	bnz	l14400
 26955  0044D4  0E07               	movlw	7
 26956  0044D6  5C06               	subwf	memset@n^0,w,c
 26957  0044D8  A0D8               	btfss	status,0,c
 26958  0044DA  0012               	return	
 26959  0044DC                     l14400:
 26960  0044DC  EE20 F003          	lfsr	2,3
 26961  0044E0  500C               	movf	memset@s^0,w,c
 26962  0044E2  26D9               	addwf	fsr2l,f,c
 26963  0044E4  500D               	movf	(memset@s+1)^0,w,c
 26964  0044E6  22DA               	addwfc	fsr2h,f,c
 26965  0044E8  0060  F013  FFDF   	movff	memset@c,indf2
 26966  0044EE  5006               	movf	memset@n^0,w,c
 26967  0044F0  240C               	addwf	memset@s^0,w,c
 26968  0044F2  6E08               	movwf	??_memset^0,c
 26969  0044F4  5007               	movf	(memset@n+1)^0,w,c
 26970  0044F6  200D               	addwfc	(memset@s+1)^0,w,c
 26971  0044F8  6E09               	movwf	(??_memset+1)^0,c
 26972  0044FA  0EFC               	movlw	252
 26973  0044FC  2408               	addwf	??_memset^0,w,c
 26974  0044FE  6ED9               	movwf	fsr2l,c
 26975  004500  0EFF               	movlw	255
 26976  004502  2009               	addwfc	(??_memset+1)^0,w,c
 26977  004504  6EDA               	movwf	fsr2h,c
 26978  004506  0060  F013  FFDF   	movff	memset@c,indf2
 26979  00450C  5007               	movf	(memset@n+1)^0,w,c
 26980  00450E  E104               	bnz	l14406
 26981  004510  0E09               	movlw	9
 26982  004512  5C06               	subwf	memset@n^0,w,c
 26983  004514  A0D8               	btfss	status,0,c
 26984  004516  0012               	return	
 26985  004518                     l14406:
 26986  004518  0060  F030  F008   	movff	memset@s,??_memset
 26987  00451E  0060  F034  F009   	movff	memset@s+1,??_memset+1
 26988  004524  1E08               	comf	??_memset^0,f,c
 26989  004526  1E09               	comf	(??_memset+1)^0,f,c
 26990  004528  4A08               	infsnz	??_memset^0,f,c
 26991  00452A  2A09               	incf	(??_memset+1)^0,f,c
 26992  00452C  0E03               	movlw	3
 26993  00452E  1408               	andwf	??_memset^0,w,c
 26994  004530  6E0A               	movwf	memset@k^0,c
 26995  004532  6A0B               	clrf	(memset@k+1)^0,c
 26996  004534  500A               	movf	memset@k^0,w,c
 26997  004536  260C               	addwf	memset@s^0,f,c
 26998  004538  500B               	movf	(memset@k+1)^0,w,c
 26999  00453A  220D               	addwfc	(memset@s+1)^0,f,c
 27000  00453C  500A               	movf	memset@k^0,w,c
 27001  00453E  5E06               	subwf	memset@n^0,f,c
 27002  004540  500B               	movf	(memset@k+1)^0,w,c
 27003  004542  5A07               	subwfb	(memset@n+1)^0,f,c
 27004  004544  0EFC               	movlw	252
 27005  004546  1606               	andwf	memset@n^0,f,c
 27006  004548  0EFF               	movlw	255
 27007  00454A  1607               	andwf	(memset@n+1)^0,f,c
 27008  00454C  D00E               	goto	l14414
 27009  00454E                     l14408:
 27010  00454E  0060  F033  FFD9   	movff	memset@s,fsr2l
 27011  004554  0060  F037  FFDA   	movff	memset@s+1,fsr2h
 27012  00455A  0060  F013  FFDF   	movff	memset@c,indf2
 27013  004560  0606               	decf	memset@n^0,f,c
 27014  004562  A0D8               	btfss	status,0,c
 27015  004564  0607               	decf	(memset@n+1)^0,f,c
 27016  004566  4A0C               	infsnz	memset@s^0,f,c
 27017  004568  2A0D               	incf	(memset@s+1)^0,f,c
 27018  00456A                     l14414:
 27019  00456A  5006               	movf	memset@n^0,w,c
 27020  00456C  1007               	iorwf	(memset@n+1)^0,w,c
 27021  00456E  B4D8               	btfsc	status,2,c
 27022  004570  0012               	return	
 27023  004572  D7ED               	goto	l14408
 27024  004574                     __end_of_memset:
 27025                           	opt callstack 0
 27026                           
 27027 ;; *************** function _memcpy *****************
 27028 ;; Defined at:
 27029 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memcpy.c"
 27030 ;; Parameters:    Size  Location     Type
 27031 ;;  d1              2    7[COMRAM] PTR void 
 27032 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), handle_led_events@temp(3), ledqueue(96), 
 27033 ;;		 -> rx_buffer_queue(4), cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), cmdSetTX@CHstr(3), 
 27034 ;;		 -> cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), cmdSetAES@AESstr(32), cmdRecv@buf_id(1), 
 27035 ;;		 -> NULL(0), tx_buffer.payload(109), cmdSend@destaddr(5), tx_buffer(524), 
 27036 ;;		 -> rx_buffer.payload(109), rx_buffer(488), 
 27037 ;;  s1              2    9[COMRAM] PTR const void 
 27038 ;;		 -> phyRxBuffer(128), nwkFrameFrames..(127), nwkFrameFrames(685), queueLedEvent@temp(3), 
 27039 ;;		 -> ledqueue(96), rx_buffer_queue(4), STR_58(2), STR_57(2), 
 27040 ;;		 -> cmdSetAES@AESstr(32), atCommand(80), NULL(0), tx_buffer(524), 
 27041 ;;		 -> appDataInd@buf_id(1), 
 27042 ;;  n               2   11[COMRAM] unsigned int 
 27043 ;; Auto vars:     Size  Location     Type
 27044 ;;  s               2   16[COMRAM] PTR const unsigned char 
 27045 ;;		 -> phyRxBuffer(128), nwkFrameFrames..(127), nwkFrameFrames(685), queueLedEvent@temp(3), 
 27046 ;;		 -> ledqueue(96), rx_buffer_queue(4), STR_58(2), STR_57(2), 
 27047 ;;		 -> cmdSetAES@AESstr(32), atCommand(80), NULL(0), tx_buffer(524), 
 27048 ;;		 -> appDataInd@buf_id(1), 
 27049 ;;  d               2   14[COMRAM] PTR unsigned char 
 27050 ;;		 -> nwkFrameFrames..(127), nwkFrameFrames(685), handle_led_events@temp(3), ledqueue(96), 
 27051 ;;		 -> rx_buffer_queue(4), cmdSetSF@CHstr(3), cmdSetCADRSSI@CHstr(3), cmdSetTX@CHstr(3), 
 27052 ;;		 -> cmdSetRFCH@CHstr(3), cmdSetAES@temp(3), cmdSetAES@AESstr(32), cmdRecv@buf_id(1), 
 27053 ;;		 -> NULL(0), tx_buffer.payload(109), cmdSend@destaddr(5), tx_buffer(524), 
 27054 ;;		 -> rx_buffer.payload(109), rx_buffer(488), 
 27055 ;;  tmp             1   13[COMRAM] unsigned char 
 27056 ;; Return value:  Size  Location     Type
 27057 ;;                  2    7[COMRAM] PTR void 
 27058 ;; Registers used:
 27059 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 27060 ;; Tracked objects:
 27061 ;;		On entry : 0/0
 27062 ;;		On exit  : 0/0
 27063 ;;		Unchanged: 0/0
 27064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27065 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27066 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27068 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27069 ;;Total ram usage:       11 bytes
 27070 ;; Hardware stack levels used:    1
 27071 ;; Hardware stack levels required when called:    7
 27072 ;; This function calls:
 27073 ;;		Nothing
 27074 ;; This function is called by:
 27075 ;;		_appDataInd
 27076 ;;		_cmdSend
 27077 ;;		_cmdBcast
 27078 ;;		_cmdSetAES
 27079 ;;		_cmdSetRFCH
 27080 ;;		_cmdSetTX
 27081 ;;		_cmdSetCADRSSI
 27082 ;;		_cmdSetSF
 27083 ;;		_CircularBufferPushBack
 27084 ;;		_CircularBufferPopFront
 27085 ;;		_nwkDataReqSendFrame
 27086 ;;		_PHY_DataInd
 27087 ;;		_nwkTxBroadcastFrame
 27088 ;; This function uses a non-reentrant model
 27089 ;;
 27090                           
 27091                           	psect	text169
 27092  0075EC                     __ptext169:
 27093                           	opt callstack 0
 27094  0075EC                     _memcpy:
 27095                           	opt callstack 19
 27096                           
 27097                           ;incstack = 0
 27098  0075EC  0060  F028  F011   	movff	memcpy@s1,memcpy@s
 27099  0075F2  0060  F02C  F012   	movff	memcpy@s1+1,memcpy@s+1
 27100  0075F8  0060  F020  F00F   	movff	memcpy@d1,memcpy@d
 27101  0075FE  0060  F024  F010   	movff	memcpy@d1+1,memcpy@d+1
 27102  007604  D023               	goto	l14162
 27103  007606                     l14154:
 27104  007606  0060  F047  FFF6   	movff	memcpy@s,tblptrl
 27105  00760C  0060  F04B  FFF7   	movff	memcpy@s+1,tblptrh
 27106  007612  0E00               	movlw	low (__mediumconst shr (0+16))
 27107  007614  6EF8               	movwf	tblptru,c
 27108  007616  0E0F               	movlw	(high __ramtop+-1)
 27109  007618  64F7               	cpfsgt	tblptrh,c
 27110  00761A  D003               	bra	u13377
 27111  00761C  0008               	tblrd		*
 27112  00761E  50F5               	movf	tablat,w,c
 27113  007620  D007               	bra	u13370
 27114  007622                     u13377:
 27115  007622  006F FFDB FFE9     	movff	tblptrl,fsr0l
 27116  007628  006F FFDF FFEA     	movff	tblptrh,fsr0h
 27117  00762E  50EF               	movf	indf0,w,c
 27118  007630                     u13370:
 27119  007630  6E0E               	movwf	memcpy@tmp^0,c
 27120  007632  4A11               	infsnz	memcpy@s^0,f,c
 27121  007634  2A12               	incf	(memcpy@s+1)^0,f,c
 27122  007636  0060  F03F  FFD9   	movff	memcpy@d,fsr2l
 27123  00763C  0060  F043  FFDA   	movff	memcpy@d+1,fsr2h
 27124  007642  0060  F03B  FFDF   	movff	memcpy@tmp,indf2
 27125  007648  4A0F               	infsnz	memcpy@d^0,f,c
 27126  00764A  2A10               	incf	(memcpy@d+1)^0,f,c
 27127  00764C                     l14162:
 27128  00764C  060C               	decf	memcpy@n^0,f,c
 27129  00764E  A0D8               	btfss	status,0,c
 27130  007650  060D               	decf	(memcpy@n+1)^0,f,c
 27131  007652  280C               	incf	memcpy@n^0,w,c
 27132  007654  E1D8               	bnz	l14154
 27133  007656  280D               	incf	(memcpy@n+1)^0,w,c
 27134  007658  B4D8               	btfsc	status,2,c
 27135  00765A  0012               	return	
 27136  00765C  D7D4               	goto	l14154
 27137  00765E                     __end_of_memcpy:
 27138                           	opt callstack 0
 27139                           
 27140 ;; *************** function _nwkDataReqConfirm *****************
 27141 ;; Defined at:
 27142 ;;		line 188 in file "../nwk/nwk_src/nwkDataReq.c"
 27143 ;; Parameters:    Size  Location     Type
 27144 ;;  req             2    8[COMRAM] PTR struct NWK_DataReq_t
 27145 ;;		 -> NULL(0), tx_buffer.nwkDataReq(22), tx_buffer(524), 
 27146 ;; Auto vars:     Size  Location     Type
 27147 ;;  prev            2   12[COMRAM] PTR struct NWK_DataReq_t
 27148 ;;		 -> NULL(0), tx_buffer.nwkDataReq(22), tx_buffer(524), 
 27149 ;; Return value:  Size  Location     Type
 27150 ;;                  1    wreg      void 
 27151 ;; Registers used:
 27152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 27153 ;; Tracked objects:
 27154 ;;		On entry : 0/0
 27155 ;;		On exit  : 0/0
 27156 ;;		Unchanged: 0/0
 27157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27160 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27161 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27162 ;;Total ram usage:        6 bytes
 27163 ;; Hardware stack levels used:    1
 27164 ;; Hardware stack levels required when called:    9
 27165 ;; This function calls:
 27166 ;;		_appDataConf
 27167 ;; This function is called by:
 27168 ;;		_nwkDataReqTaskHandler
 27169 ;; This function uses a non-reentrant model
 27170 ;;
 27171                           
 27172                           	psect	text170
 27173  0057A0                     __ptext170:
 27174                           	opt callstack 0
 27175  0057A0                     _nwkDataReqConfirm:
 27176                           	opt callstack 18
 27177                           
 27178                           ;../nwk/nwk_src/nwkDataReq.c: 188: static void nwkDataReqConfirm(NWK_DataReq_t *req);../
      +                          nwk/nwk_src/nwkDataReq.c: 189: {;../nwk/nwk_src/nwkDataReq.c: 190:   if (nwkDataReqQueue
      +                           == req)
 27179                           
 27180                           ;incstack = 0
 27181  0057A0  5009               	movf	nwkDataReqConfirm@req^0,w,c
 27182  0057A2  0100               	movlb	0	; () banked
 27183  0057A4  19BF               	xorwf	_nwkDataReqQueue& (0+255),w,b
 27184  0057A6  E111               	bnz	l11638
 27185  0057A8  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 27186  0057AA  19C0               	xorwf	(_nwkDataReqQueue+1)& (0+255),w,b
 27187  0057AC  A4D8               	btfss	status,2,c
 27188  0057AE  D00D               	goto	l11638
 27189                           
 27190                           ; BSR set to: 0
 27191                           ;../nwk/nwk_src/nwkDataReq.c: 191:   {;../nwk/nwk_src/nwkDataReq.c: 192:     nwkDataReqQ
      +                          ueue = nwkDataReqQueue->next;
 27192  0057B0  0060  F2FF  FFD9   	movff	_nwkDataReqQueue,fsr2l
 27193  0057B6  0060  F303  FFDA   	movff	_nwkDataReqQueue+1,fsr2h
 27194  0057BC  006F FF78  F0BF    	movff	postinc2,_nwkDataReqQueue
 27195  0057C2  006F FF74  F0C0    	movff	postdec2,_nwkDataReqQueue+1
 27196                           
 27197                           ;../nwk/nwk_src/nwkDataReq.c: 193:   }
 27198  0057C8  D03E               	goto	l11646
 27199  0057CA                     l11638:
 27200                           
 27201                           ; BSR set to: 0
 27202                           ;../nwk/nwk_src/nwkDataReq.c: 195:   {;../nwk/nwk_src/nwkDataReq.c: 196:     NWK_DataReq
      +                          _t *prev = nwkDataReqQueue;
 27203  0057CA  0060  F2FC  F00D   	movff	_nwkDataReqQueue,nwkDataReqConfirm@prev
 27204  0057D0  0060  F300  F00E   	movff	_nwkDataReqQueue+1,nwkDataReqConfirm@prev+1
 27205                           
 27206                           ;../nwk/nwk_src/nwkDataReq.c: 197:     while (prev->next != req)
 27207  0057D6  D00C               	goto	l11642
 27208  0057D8                     l11640:
 27209                           
 27210                           ;../nwk/nwk_src/nwkDataReq.c: 198:       prev = prev->next;
 27211  0057D8  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 27212  0057DE  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 27213  0057E4  006F FF78  F00D    	movff	postinc2,nwkDataReqConfirm@prev
 27214  0057EA  006F FF74  F00E    	movff	postdec2,nwkDataReqConfirm@prev+1
 27215  0057F0                     l11642:
 27216                           
 27217                           ;../nwk/nwk_src/nwkDataReq.c: 197:     while (prev->next != req)
 27218  0057F0  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 27219  0057F6  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 27220  0057FC  5009               	movf	nwkDataReqConfirm@req^0,w,c
 27221  0057FE  18DE               	xorwf	postinc2,w,c
 27222  005800  E1EB               	bnz	l11640
 27223  005802  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 27224  005804  18DE               	xorwf	postinc2,w,c
 27225  005806  A4D8               	btfss	status,2,c
 27226  005808  D7E7               	goto	l11640
 27227                           
 27228                           ;../nwk/nwk_src/nwkDataReq.c: 199:     prev->next = ((NWK_DataReq_t *)prev->next)->next;
 27229  00580A  0060  F037  FFD9   	movff	nwkDataReqConfirm@prev,fsr2l
 27230  005810  0060  F03B  FFDA   	movff	nwkDataReqConfirm@prev+1,fsr2h
 27231  005816  006F FF78  F00B    	movff	postinc2,??_nwkDataReqConfirm
 27232  00581C  006F FF74  F00C    	movff	postdec2,??_nwkDataReqConfirm+1
 27233  005822  0060  F02F  FFD9   	movff	??_nwkDataReqConfirm,fsr2l
 27234  005828  0060  F033  FFDA   	movff	??_nwkDataReqConfirm+1,fsr2h
 27235  00582E  0060  F037  FFE1   	movff	nwkDataReqConfirm@prev,fsr1l
 27236  005834  0060  F03B  FFE2   	movff	nwkDataReqConfirm@prev+1,fsr1h
 27237  00583A  006F FF7B FFE6     	movff	postinc2,postinc1
 27238  005840  006F FF77 FFE5     	movff	postdec2,postdec1
 27239  005846                     l11646:
 27240                           
 27241                           ;../nwk/nwk_src/nwkDataReq.c: 202:   nwkIb.lock--;
 27242  005846  0101               	movlb	1	; () banked
 27243  005848  0726               	decf	(_nwkIb+38)& (0+255),f,b
 27244  00584A  A0D8               	btfss	status,0,c
 27245  00584C  0727               	decf	(_nwkIb+39)& (0+255),f,b
 27246                           
 27247                           ; BSR set to: 1
 27248                           ;../nwk/nwk_src/nwkDataReq.c: 203:   req->confirm(req);
 27249  00584E  0060  F024  F007   	movff	nwkDataReqConfirm@req,appDataConf@req
 27250  005854  0060  F028  F008   	movff	nwkDataReqConfirm@req+1,appDataConf@req+1
 27251  00585A  EE20 F00F          	lfsr	2,15
 27252  00585E  5009               	movf	nwkDataReqConfirm@req^0,w,c
 27253  005860  26D9               	addwf	fsr2l,f,c
 27254  005862  500A               	movf	(nwkDataReqConfirm@req+1)^0,w,c
 27255  005864  22DA               	addwfc	fsr2h,f,c
 27256  005866  006F FF78  F00B    	movff	postinc2,??_nwkDataReqConfirm
 27257  00586C  006F FF74  F00C    	movff	postdec2,??_nwkDataReqConfirm+1
 27258  005872  D801               	call	u10548
 27259  005874  0012               	return	
 27260  005876                     u10548:
 27261  005876  0005               	push	
 27262  005878  6EFA               	movwf	pclath,c
 27263  00587A  500B               	movf	??_nwkDataReqConfirm^0,w,c
 27264  00587C  6EFD               	movwf	tosl,c
 27265  00587E  500C               	movf	(??_nwkDataReqConfirm+1)^0,w,c
 27266  005880  6EFE               	movwf	tosh,c
 27267  005882  6AFF               	clrf	tosu,c
 27268  005884  50FA               	movf	pclath,w,c
 27269  005886  0012               	return		;indir
 27270  005888                     __end_of_nwkDataReqConfirm:
 27271                           	opt callstack 0
 27272                           
 27273 ;; *************** function _appDataConf *****************
 27274 ;; Defined at:
 27275 ;;		line 34 in file "../app/app_src/application.c"
 27276 ;; Parameters:    Size  Location     Type
 27277 ;;  req             2    6[COMRAM] PTR struct NWK_DataReq_t
 27278 ;;		 -> NULL(0), tx_buffer.nwkDataReq(22), tx_buffer(524), 
 27279 ;; Auto vars:     Size  Location     Type
 27280 ;;		None
 27281 ;; Return value:  Size  Location     Type
 27282 ;;                  1    wreg      void 
 27283 ;; Registers used:
 27284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27285 ;; Tracked objects:
 27286 ;;		On entry : 3F/1
 27287 ;;		On exit  : 0/0
 27288 ;;		Unchanged: 0/0
 27289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27290 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27293 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27294 ;;Total ram usage:        2 bytes
 27295 ;; Hardware stack levels used:    1
 27296 ;; Hardware stack levels required when called:    8
 27297 ;; This function calls:
 27298 ;;		_free_tx_buffer
 27299 ;; This function is called by:
 27300 ;;		_cmdSend
 27301 ;;		_cmdBcast
 27302 ;;		_nwkDataReqConfirm
 27303 ;; This function uses a non-reentrant model
 27304 ;;
 27305                           
 27306                           	psect	text171
 27307  008BCC                     __ptext171:
 27308                           	opt callstack 0
 27309  008BCC                     _appDataConf:
 27310                           	opt callstack 18
 27311                           
 27312                           ; BSR set to: 1
 27313                           ;../app/app_src/application.c: 34: void appDataConf(NWK_DataReq_t *req);../app/app_src/a
      +                          pplication.c: 35: {;../app/app_src/application.c: 36:  if (NWK_SUCCESS_STATUS == req->st
      +                          atus){
 27314                           
 27315                           ;incstack = 0
 27316  008BCC  EE20 F011          	lfsr	2,17
 27317  008BD0  5007               	movf	appDataConf@req^0,w,c
 27318  008BD2  26D9               	addwf	fsr2l,f,c
 27319  008BD4  5008               	movf	(appDataConf@req+1)^0,w,c
 27320  008BD6  22DA               	addwfc	fsr2h,f,c
 27321  008BD8  50DF               	movf	indf2,w,c
 27322                           
 27323                           ; BSR set to: 1
 27324                           
 27325                           ;../app/app_src/application.c: 40:  else{
 27326                           
 27327                           ;../app/app_src/application.c: 39:  }
 27328                           
 27329                           ; BSR set to: 1
 27330  008BDA  F000               	nop		;# 
 27331                           
 27332                           ;../app/app_src/application.c: 44:  free_tx_buffer(req);
 27333  008BDC  0060  F01C  F002   	movff	appDataConf@req,free_tx_buffer@req
 27334  008BE2  0060  F020  F003   	movff	appDataConf@req+1,free_tx_buffer@req+1
 27335  008BE8  EC77  F041         	call	_free_tx_buffer	;wreg free
 27336  008BEC  0012               	return		;funcret
 27337  008BEE                     __end_of_appDataConf:
 27338                           	opt callstack 0
 27339                           
 27340 ;; *************** function _free_tx_buffer *****************
 27341 ;; Defined at:
 27342 ;;		line 73 in file "../app/app_src/application.c"
 27343 ;; Parameters:    Size  Location     Type
 27344 ;;  req             2    1[COMRAM] PTR struct NWK_DataReq_t
 27345 ;;		 -> NULL(0), tx_buffer.nwkDataReq(22), tx_buffer(524), 
 27346 ;; Auto vars:     Size  Location     Type
 27347 ;;  buf_id          1    5[COMRAM] unsigned char 
 27348 ;; Return value:  Size  Location     Type
 27349 ;;                  1    wreg      void 
 27350 ;; Registers used:
 27351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27352 ;; Tracked objects:
 27353 ;;		On entry : 0/1
 27354 ;;		On exit  : 0/0
 27355 ;;		Unchanged: 0/0
 27356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27358 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27359 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27360 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27361 ;;Total ram usage:        5 bytes
 27362 ;; Hardware stack levels used:    1
 27363 ;; Hardware stack levels required when called:    7
 27364 ;; This function calls:
 27365 ;;		Nothing
 27366 ;; This function is called by:
 27367 ;;		_appDataConf
 27368 ;; This function uses a non-reentrant model
 27369 ;;
 27370                           
 27371                           	psect	text172
 27372  0082EE                     __ptext172:
 27373                           	opt callstack 0
 27374  0082EE                     _free_tx_buffer:
 27375                           	opt callstack 18
 27376                           
 27377                           ;../app/app_src/application.c: 74:     uint8_t buf_id = 0;
 27378                           
 27379                           ;incstack = 0
 27380  0082EE  0E00               	movlw	0
 27381  0082F0  6E06               	movwf	free_tx_buffer@buf_id^0,c
 27382                           
 27383                           ;../app/app_src/application.c: 76:     while(buf_id < 4){
 27384  0082F2  D01A               	goto	l9944
 27385  0082F4                     l9936:
 27386                           
 27387                           ;../app/app_src/application.c: 77:         if(req == &tx_buffer[buf_id].nwkDataReq){
 27388  0082F4  5006               	movf	free_tx_buffer@buf_id^0,w,c
 27389  0082F6  0D83               	mullw	131
 27390  0082F8  0E6D               	movlw	low (_tx_buffer+3)
 27391  0082FA  24F3               	addwf	243,w,c
 27392  0082FC  6E04               	movwf	??_free_tx_buffer^0,c
 27393  0082FE  0E08               	movlw	high (_tx_buffer+3)
 27394  008300  20F4               	addwfc	prodh,w,c
 27395  008302  6E05               	movwf	(??_free_tx_buffer+1)^0,c
 27396  008304  5004               	movf	??_free_tx_buffer^0,w,c
 27397  008306  1802               	xorwf	free_tx_buffer@req^0,w,c
 27398  008308  E10E               	bnz	l9942
 27399  00830A  5005               	movf	(??_free_tx_buffer+1)^0,w,c
 27400  00830C  1803               	xorwf	(free_tx_buffer@req+1)^0,w,c
 27401  00830E  A4D8               	btfss	status,2,c
 27402  008310  D00A               	goto	l9942
 27403                           
 27404                           ;../app/app_src/application.c: 79:             tx_buffer[buf_id].free = 1;
 27405  008312  5006               	movf	free_tx_buffer@buf_id^0,w,c
 27406  008314  0D83               	mullw	131
 27407  008316  0E6A               	movlw	low _tx_buffer
 27408  008318  24F3               	addwf	243,w,c
 27409  00831A  6ED9               	movwf	fsr2l,c
 27410  00831C  0E08               	movlw	high _tx_buffer
 27411  00831E  20F4               	addwfc	prodh,w,c
 27412  008320  6EDA               	movwf	fsr2h,c
 27413  008322  84DF               	bsf	indf2,2,c
 27414  008324  0012               	return	
 27415  008326                     l9942:
 27416                           
 27417                           ;../app/app_src/application.c: 82:         buf_id++;
 27418  008326  2A06               	incf	free_tx_buffer@buf_id^0,f,c
 27419  008328                     l9944:
 27420                           
 27421                           ;../app/app_src/application.c: 76:     while(buf_id < 4){
 27422  008328  0E03               	movlw	3
 27423  00832A  6406               	cpfsgt	free_tx_buffer@buf_id^0,c
 27424  00832C  D7E3               	goto	l9936
 27425  00832E  0012               	return	
 27426  008330                     __end_of_free_tx_buffer:
 27427                           	opt callstack 0
 27428                           
 27429 ;; *************** function _SYS_Init *****************
 27430 ;; Defined at:
 27431 ;;		line 58 in file "../sys/sys_src/sys.c"
 27432 ;; Parameters:    Size  Location     Type
 27433 ;;		None
 27434 ;; Auto vars:     Size  Location     Type
 27435 ;;		None
 27436 ;; Return value:  Size  Location     Type
 27437 ;;                  1    wreg      void 
 27438 ;; Registers used:
 27439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27440 ;; Tracked objects:
 27441 ;;		On entry : 3B/3D
 27442 ;;		On exit  : 3F/2
 27443 ;;		Unchanged: 0/0
 27444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27449 ;;Total ram usage:        0 bytes
 27450 ;; Hardware stack levels used:    1
 27451 ;; Hardware stack levels required when called:   15
 27452 ;; This function calls:
 27453 ;;		_NWK_Init
 27454 ;;		_PHY_Init
 27455 ;;		_SYS_TimerInit
 27456 ;; This function is called by:
 27457 ;;		_main
 27458 ;; This function uses a non-reentrant model
 27459 ;;
 27460                           
 27461                           	psect	text173
 27462  008FC4                     __ptext173:
 27463                           	opt callstack 0
 27464  008FC4                     _SYS_Init:
 27465                           	opt callstack 15
 27466                           
 27467                           ;../sys/sys_src/sys.c: 60:   SYS_TimerInit();
 27468                           
 27469                           ;incstack = 0
 27470  008FC4  EC19  F048         	call	_SYS_TimerInit	;wreg free
 27471                           
 27472                           ; BSR set to: 0
 27473                           ;../sys/sys_src/sys.c: 61:   PHY_Init();
 27474  008FC8  EC45  F048         	call	_PHY_Init	;wreg free
 27475                           
 27476                           ; BSR set to: 0
 27477                           ;../sys/sys_src/sys.c: 62:   NWK_Init();
 27478  008FCC  ECAA  F03E         	call	_NWK_Init	;wreg free
 27479                           
 27480                           ; BSR set to: 2
 27481  008FD0  0012               	return		;funcret
 27482  008FD2                     __end_of_SYS_Init:
 27483                           	opt callstack 0
 27484                           
 27485 ;; *************** function _SYS_TimerInit *****************
 27486 ;; Defined at:
 27487 ;;		line 63 in file "../sys/sys_src/sysTimer.c"
 27488 ;; Parameters:    Size  Location     Type
 27489 ;;		None
 27490 ;; Auto vars:     Size  Location     Type
 27491 ;;		None
 27492 ;; Return value:  Size  Location     Type
 27493 ;;                  1    wreg      void 
 27494 ;; Registers used:
 27495 ;;		wreg, status,2, status,0
 27496 ;; Tracked objects:
 27497 ;;		On entry : 3B/3D
 27498 ;;		On exit  : 3F/0
 27499 ;;		Unchanged: 0/0
 27500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27505 ;;Total ram usage:        0 bytes
 27506 ;; Hardware stack levels used:    1
 27507 ;; Hardware stack levels required when called:    7
 27508 ;; This function calls:
 27509 ;;		Nothing
 27510 ;; This function is called by:
 27511 ;;		_SYS_Init
 27512 ;; This function uses a non-reentrant model
 27513 ;;
 27514                           
 27515                           	psect	text174
 27516  009032                     __ptext174:
 27517                           	opt callstack 0
 27518  009032                     _SYS_TimerInit:
 27519                           	opt callstack 22
 27520                           
 27521                           ;../sys/sys_src/sysTimer.c: 65:   timers = ((void*)0);
 27522                           
 27523                           ; BSR set to: 2
 27524                           ;incstack = 0
 27525  009032  0E00               	movlw	0
 27526  009034  0100               	movlb	0	; () banked
 27527  009036  6FBB               	movwf	_timers& (0+255),b
 27528  009038  0E00               	movlw	0
 27529  00903A  6FBC               	movwf	(_timers+1)& (0+255),b
 27530                           
 27531                           ; BSR set to: 0
 27532  00903C  0012               	return		;funcret
 27533  00903E                     __end_of_SYS_TimerInit:
 27534                           	opt callstack 0
 27535                           
 27536 ;; *************** function _PHY_Init *****************
 27537 ;; Defined at:
 27538 ;;		line 810 in file "../phy/sx1216/phy_src/phy.c"
 27539 ;; Parameters:    Size  Location     Type
 27540 ;;		None
 27541 ;; Auto vars:     Size  Location     Type
 27542 ;;		None
 27543 ;; Return value:  Size  Location     Type
 27544 ;;                  1    wreg      void 
 27545 ;; Registers used:
 27546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27547 ;; Tracked objects:
 27548 ;;		On entry : 3F/0
 27549 ;;		On exit  : 3F/0
 27550 ;;		Unchanged: 0/0
 27551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27556 ;;Total ram usage:        0 bytes
 27557 ;; Hardware stack levels used:    1
 27558 ;; Hardware stack levels required when called:   14
 27559 ;; This function calls:
 27560 ;;		_initRadio
 27561 ;; This function is called by:
 27562 ;;		_SYS_Init
 27563 ;; This function uses a non-reentrant model
 27564 ;;
 27565                           
 27566                           	psect	text175
 27567  00908A                     __ptext175:
 27568                           	opt callstack 0
 27569  00908A                     _PHY_Init:
 27570                           	opt callstack 15
 27571                           
 27572                           ; BSR set to: 0
 27573                           ;../phy/sx1216/phy_src/phy.c: 811:     initRadio();
 27574                           
 27575                           ; BSR set to: 0
 27576                           ;incstack = 0
 27577  00908A  ECB5  F020         	call	_initRadio	;wreg free
 27578                           
 27579                           ; BSR set to: 0
 27580  00908E  0012               	return		;funcret
 27581  009090                     __end_of_PHY_Init:
 27582                           	opt callstack 0
 27583                           
 27584 ;; *************** function _initRadio *****************
 27585 ;; Defined at:
 27586 ;;		line 444 in file "../phy/sx1216/phy_src/phy.c"
 27587 ;; Parameters:    Size  Location     Type
 27588 ;;		None
 27589 ;; Auto vars:     Size  Location     Type
 27590 ;;  BWset           4    0        unsigned long 
 27591 ;;  wideRSSI        2   55[COMRAM] unsigned short 
 27592 ;;  version         1   54[COMRAM] unsigned char 
 27593 ;; Return value:  Size  Location     Type
 27594 ;;                  1    wreg      void 
 27595 ;; Registers used:
 27596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27597 ;; Tracked objects:
 27598 ;;		On entry : 0/0
 27599 ;;		On exit  : 3F/0
 27600 ;;		Unchanged: 0/0
 27601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27603 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27604 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27605 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27606 ;;Total ram usage:        7 bytes
 27607 ;; Hardware stack levels used:    1
 27608 ;; Hardware stack levels required when called:   13
 27609 ;; This function calls:
 27610 ;;		_SX1276Read
 27611 ;;		_SX1276Write
 27612 ;;		_computeFRF
 27613 ;;		_enableCrc
 27614 ;;		_explicitHeaderMode
 27615 ;;		_receive
 27616 ;;		_setCodingRate4
 27617 ;;		_setFrequency
 27618 ;;		_setPreambleLength
 27619 ;;		_setSignalBandwidth
 27620 ;;		_setSpreadingFactor
 27621 ;;		_setTxPower
 27622 ;;		_srand
 27623 ;; This function is called by:
 27624 ;;		_cmdSetNaddr
 27625 ;;		_cmdSetRFCH
 27626 ;;		_cmdSetTX
 27627 ;;		_cmdSetCADRSSI
 27628 ;;		_cmdSetSF
 27629 ;;		_radio_engine
 27630 ;;		_PHY_Init
 27631 ;; This function uses a non-reentrant model
 27632 ;;
 27633                           
 27634                           	psect	text176
 27635  00416A                     __ptext176:
 27636                           	opt callstack 0
 27637  00416A                     _initRadio:
 27638                           	opt callstack 14
 27639                           
 27640                           ; BSR set to: 0
 27641                           ;incstack = 0
 27642                           ;../phy/sx1216/phy_src/phy.c: 446:     uint8_t version;;../phy/sx1216/phy_src/phy.c: 447
      +                          :     uint32_t BWset;;../phy/sx1216/phy_src/phy.c: 448:     uint16_t wideRSSI;;../phy/sx
      +                          1216/phy_src/phy.c: 450:     do { LATCbits.LATC5 = 0; } while(0);
 27643  00416A  9ABC               	bcf	188,5,c	;volatile
 27644                           
 27645                           ;../phy/sx1216/phy_src/phy.c: 451:     _delay((unsigned long)((100)*(64000000/4000.0)));
 27646  00416C  0E09               	movlw	9
 27647  00416E  6E34               	movwf	(??_initRadio+1)^0,c
 27648  004170  0E1E               	movlw	30
 27649  004172  6E33               	movwf	??_initRadio^0,c
 27650  004174  0EE4               	movlw	228
 27651  004176                     u17197:
 27652  004176  2EE8               	decfsz	wreg,f,c
 27653  004178  D7FE               	bra	u17197
 27654  00417A  2E33               	decfsz	??_initRadio^0,f,c
 27655  00417C  D7FC               	bra	u17197
 27656  00417E  2E34               	decfsz	(??_initRadio+1)^0,f,c
 27657  004180  D7FA               	bra	u17197
 27658  004182  D000               	nop2	
 27659  004184  8ABC               	bsf	188,5,c	;volatile
 27660                           
 27661                           ;../phy/sx1216/phy_src/phy.c: 453:     computeFRF();
 27662  004186  EC0B  F01D         	call	_computeFRF	;wreg free
 27663                           
 27664                           ;../phy/sx1216/phy_src/phy.c: 454:     _delay((unsigned long)((500)*(64000000/4000.0)));
 27665  00418A  0E29               	movlw	41
 27666  00418C  6E34               	movwf	(??_initRadio+1)^0,c
 27667  00418E  0E96               	movlw	150
 27668  004190  6E33               	movwf	??_initRadio^0,c
 27669  004192  0E7F               	movlw	127
 27670  004194                     u17207:
 27671  004194  2EE8               	decfsz	wreg,f,c
 27672  004196  D7FE               	bra	u17207
 27673  004198  2E33               	decfsz	??_initRadio^0,f,c
 27674  00419A  D7FC               	bra	u17207
 27675  00419C  2E34               	decfsz	(??_initRadio+1)^0,f,c
 27676  00419E  D7FA               	bra	u17207
 27677  0041A0  F000               	nop	
 27678                           
 27679                           ;../phy/sx1216/phy_src/phy.c: 456:     version = SX1276Read(0x42);
 27680  0041A2  0E42               	movlw	66
 27681  0041A4  EC76  F047         	call	_SX1276Read
 27682  0041A8  6E37               	movwf	initRadio@version^0,c
 27683                           
 27684                           ; BSR set to: 61
 27685                           ;../phy/sx1216/phy_src/phy.c: 457:     version++;
 27686  0041AA  2A37               	incf	initRadio@version^0,f,c
 27687                           
 27688                           ; BSR set to: 61
 27689                           ;../phy/sx1216/phy_src/phy.c: 458:     SX1276Write(0x01,0x00);
 27690  0041AC  0E00               	movlw	0
 27691  0041AE  6E0F               	movwf	SX1276Write@data^0,c
 27692  0041B0  0E01               	movlw	1
 27693  0041B2  EC94  F047         	call	_SX1276Write
 27694                           
 27695                           ; BSR set to: 61
 27696                           ;../phy/sx1216/phy_src/phy.c: 459:     SX1276Write(0x01,0x80);
 27697  0041B6  0E80               	movlw	128
 27698  0041B8  6E0F               	movwf	SX1276Write@data^0,c
 27699  0041BA  0E01               	movlw	1
 27700  0041BC  EC94  F047         	call	_SX1276Write
 27701                           
 27702                           ; BSR set to: 61
 27703                           ;../phy/sx1216/phy_src/phy.c: 461:     setFrequency(fhssList[0]);
 27704  0041C0  0EAB               	movlw	low _fhssList
 27705  0041C2  6EF6               	movwf	tblptrl,c
 27706  0041C4                     	if	1	;There is more than 1 active tblptr byte
 27707  0041C4  0EFC               	movlw	high _fhssList
 27708  0041C6  6EF7               	movwf	tblptrh,c
 27709  0041C8                     	endif
 27710  0041C8                     	if	1	;There are 3 active tblptr bytes
 27711  0041C8  0E00               	movlw	low (_fhssList shr (0+16))
 27712  0041CA  6EF8               	movwf	tblptru,c
 27713  0041CC                     	endif
 27714  0041CC  0009               	tblrd		*+
 27715  0041CE  006F FFD4  F023    	movff	tablat,setFrequency@frequency
 27716  0041D4  0009               	tblrd		*+
 27717  0041D6  006F FFD4  F024    	movff	tablat,setFrequency@frequency+1
 27718  0041DC  0009               	tblrd		*+
 27719  0041DE  006F FFD4  F025    	movff	tablat,setFrequency@frequency+2
 27720  0041E4  000A               	tblrd		*-
 27721  0041E6  006F FFD4  F026    	movff	tablat,setFrequency@frequency+3
 27722  0041EC  EC8C  F024         	call	_setFrequency	;wreg free
 27723                           
 27724                           ; BSR set to: 61
 27725                           ;../phy/sx1216/phy_src/phy.c: 462:     setSpreadingFactor(7);
 27726  0041F0  0E07               	movlw	7
 27727  0041F2  EC6A  F028         	call	_setSpreadingFactor
 27728                           
 27729                           ;../phy/sx1216/phy_src/phy.c: 463:     setTxPower(17);
 27730  0041F6  0E11               	movlw	17
 27731  0041F8  EC17  F045         	call	_setTxPower
 27732                           
 27733                           ; BSR set to: 61
 27734                           ;../phy/sx1216/phy_src/phy.c: 464:     setSignalBandwidth(500E3);
 27735  0041FC  0E20               	movlw	32
 27736  0041FE  6E23               	movwf	setSignalBandwidth@sbw^0,c
 27737  004200  0EA1               	movlw	161
 27738  004202  6E24               	movwf	(setSignalBandwidth@sbw+1)^0,c
 27739  004204  0E07               	movlw	7
 27740  004206  6E25               	movwf	(setSignalBandwidth@sbw+2)^0,c
 27741  004208  0E00               	movlw	0
 27742  00420A  6E26               	movwf	(setSignalBandwidth@sbw+3)^0,c
 27743  00420C  EC74  F007         	call	_setSignalBandwidth	;wreg free
 27744                           
 27745                           ;../phy/sx1216/phy_src/phy.c: 465:     explicitHeaderMode();
 27746  004210  EC5E  F047         	call	_explicitHeaderMode	;wreg free
 27747                           
 27748                           ; BSR set to: 61
 27749                           ;../phy/sx1216/phy_src/phy.c: 466:     setCodingRate4(4);
 27750  004214  0E04               	movlw	4
 27751  004216  ECED  F043         	call	_setCodingRate4
 27752                           
 27753                           ; BSR set to: 61
 27754                           ;../phy/sx1216/phy_src/phy.c: 467:     setPreambleLength(12);
 27755  00421A  0E00               	movlw	0
 27756  00421C  6E12               	movwf	(setPreambleLength@length+1)^0,c
 27757  00421E  0E0C               	movlw	12
 27758  004220  6E11               	movwf	setPreambleLength@length^0,c
 27759  004222  ECFB  F046         	call	_setPreambleLength	;wreg free
 27760                           
 27761                           ; BSR set to: 61
 27762                           ;../phy/sx1216/phy_src/phy.c: 468:     enableCrc();
 27763  004226  EC8B  F047         	call	_enableCrc	;wreg free
 27764                           
 27765                           ; BSR set to: 61
 27766                           ;../phy/sx1216/phy_src/phy.c: 469:     SX1276Write(0x0E, 0x0);
 27767  00422A  0E00               	movlw	0
 27768  00422C  6E0F               	movwf	SX1276Write@data^0,c
 27769  00422E  0E0E               	movlw	14
 27770  004230  EC94  F047         	call	_SX1276Write
 27771                           
 27772                           ; BSR set to: 61
 27773                           ;../phy/sx1216/phy_src/phy.c: 470:     SX1276Write(0x0F, 0);
 27774  004234  0E00               	movlw	0
 27775  004236  6E0F               	movwf	SX1276Write@data^0,c
 27776  004238  0E0F               	movlw	15
 27777  00423A  EC94  F047         	call	_SX1276Write
 27778                           
 27779                           ; BSR set to: 61
 27780                           ;../phy/sx1216/phy_src/phy.c: 473:     SX1276Write(0x0C, SX1276Read(0x0C) | 0x03);
 27781  00423E  0E0C               	movlw	12
 27782  004240  EC76  F047         	call	_SX1276Read
 27783  004244  0903               	iorlw	3
 27784  004246  6E0F               	movwf	SX1276Write@data^0,c
 27785  004248  0E0C               	movlw	12
 27786  00424A  EC94  F047         	call	_SX1276Write
 27787                           
 27788                           ; BSR set to: 61
 27789                           ;../phy/sx1216/phy_src/phy.c: 476:     SX1276Write(0x26, 0x04);
 27790  00424E  0E04               	movlw	4
 27791  004250  6E0F               	movwf	SX1276Write@data^0,c
 27792  004252  0E26               	movlw	38
 27793  004254  EC94  F047         	call	_SX1276Write
 27794                           
 27795                           ; BSR set to: 61
 27796                           ;../phy/sx1216/phy_src/phy.c: 479:     SX1276Write(0x36,0x02);
 27797  004258  0E02               	movlw	2
 27798  00425A  6E0F               	movwf	SX1276Write@data^0,c
 27799  00425C  0E36               	movlw	54
 27800  00425E  EC94  F047         	call	_SX1276Write
 27801                           
 27802                           ; BSR set to: 61
 27803                           ;../phy/sx1216/phy_src/phy.c: 480:     SX1276Write(0x3A,0x64);
 27804  004262  0E64               	movlw	100
 27805  004264  6E0F               	movwf	SX1276Write@data^0,c
 27806  004266  0E3A               	movlw	58
 27807  004268  EC94  F047         	call	_SX1276Write
 27808                           
 27809                           ; BSR set to: 61
 27810                           ;../phy/sx1216/phy_src/phy.c: 492:     SX1276Write(0x1F,255);
 27811  00426C  0EFF               	movlw	255
 27812  00426E  6E0F               	movwf	SX1276Write@data^0,c
 27813  004270  0E1F               	movlw	31
 27814  004272  EC94  F047         	call	_SX1276Write
 27815                           
 27816                           ; BSR set to: 61
 27817                           ;../phy/sx1216/phy_src/phy.c: 494:     receive(0);
 27818  004276  0E00               	movlw	0
 27819  004278  EC74  F042         	call	_receive
 27820                           
 27821                           ; BSR set to: 61
 27822                           ;../phy/sx1216/phy_src/phy.c: 496:     _delay((unsigned long)((100)*(64000000/4000.0)));
 27823  00427C  0E09               	movlw	9
 27824  00427E  6E34               	movwf	(??_initRadio+1)^0,c
 27825  004280  0E1E               	movlw	30
 27826  004282  6E33               	movwf	??_initRadio^0,c
 27827  004284  0EE4               	movlw	228
 27828  004286                     u17217:
 27829  004286  2EE8               	decfsz	wreg,f,c
 27830  004288  D7FE               	bra	u17217
 27831  00428A  2E33               	decfsz	??_initRadio^0,f,c
 27832  00428C  D7FC               	bra	u17217
 27833  00428E  2E34               	decfsz	(??_initRadio+1)^0,f,c
 27834  004290  D7FA               	bra	u17217
 27835  004292  D000               	nop2	
 27836                           
 27837                           ;../phy/sx1216/phy_src/phy.c: 498:     wideRSSI = (SX1276Read(0x2C)<<8) + SX1276Read(0x2
      +                          C);
 27838  004294  0E2C               	movlw	44
 27839  004296  EC76  F047         	call	_SX1276Read
 27840  00429A  6E33               	movwf	??_initRadio^0,c
 27841  00429C  0E2C               	movlw	44
 27842  00429E  EC76  F047         	call	_SX1276Read
 27843  0042A2  6E34               	movwf	(??_initRadio+1)^0,c
 27844  0042A4  5034               	movf	(??_initRadio+1)^0,w,c
 27845  0042A6  6E36               	movwf	(??_initRadio+3)^0,c
 27846  0042A8  6A35               	clrf	(??_initRadio+2)^0,c
 27847  0042AA  5033               	movf	??_initRadio^0,w,c
 27848  0042AC  2435               	addwf	(??_initRadio+2)^0,w,c
 27849  0042AE  6E38               	movwf	initRadio@wideRSSI^0,c
 27850  0042B0  0E00               	movlw	0
 27851  0042B2  2036               	addwfc	(??_initRadio+3)^0,w,c
 27852  0042B4  6E39               	movwf	(initRadio@wideRSSI+1)^0,c
 27853                           
 27854                           ; BSR set to: 61
 27855                           ;../phy/sx1216/phy_src/phy.c: 500:     srand(wideRSSI);
 27856  0042B6  0060  F0E0  F002   	movff	initRadio@wideRSSI,srand@s
 27857  0042BC  0060  F0E4  F003   	movff	initRadio@wideRSSI+1,srand@s+1
 27858  0042C2  EC7F  F043         	call	_srand	;wreg free
 27859                           
 27860                           ; BSR set to: 0
 27861  0042C6  0012               	return		;funcret
 27862  0042C8                     __end_of_initRadio:
 27863                           	opt callstack 0
 27864                           
 27865 ;; *************** function _srand *****************
 27866 ;; Defined at:
 27867 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\rand.c"
 27868 ;; Parameters:    Size  Location     Type
 27869 ;;  s               2    1[COMRAM] unsigned int 
 27870 ;; Auto vars:     Size  Location     Type
 27871 ;;		None
 27872 ;; Return value:  Size  Location     Type
 27873 ;;                  1    wreg      void 
 27874 ;; Registers used:
 27875 ;;		wreg, status,2, status,0
 27876 ;; Tracked objects:
 27877 ;;		On entry : 3F/3D
 27878 ;;		On exit  : 3F/0
 27879 ;;		Unchanged: 0/0
 27880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27881 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27883 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27884 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27885 ;;Total ram usage:        6 bytes
 27886 ;; Hardware stack levels used:    1
 27887 ;; Hardware stack levels required when called:    7
 27888 ;; This function calls:
 27889 ;;		Nothing
 27890 ;; This function is called by:
 27891 ;;		_initRadio
 27892 ;; This function uses a non-reentrant model
 27893 ;;
 27894                           
 27895                           	psect	text177
 27896  0086FE                     __ptext177:
 27897                           	opt callstack 0
 27898  0086FE                     _srand:
 27899                           	opt callstack 19
 27900                           
 27901                           ; BSR set to: 61
 27902                           
 27903                           ; BSR set to: 0
 27904                           ;incstack = 0
 27905  0086FE  0EFF               	movlw	255
 27906  008700  6E04               	movwf	??_srand^0,c
 27907  008702  0EFF               	movlw	255
 27908  008704  6E05               	movwf	(??_srand+1)^0,c
 27909  008706  0060  F008  F006   	movff	srand@s,??_srand+2
 27910  00870C  0060  F00C  F007   	movff	srand@s+1,??_srand+3
 27911  008712  5004               	movf	??_srand^0,w,c
 27912  008714  2606               	addwf	(??_srand+2)^0,f,c
 27913  008716  5005               	movf	(??_srand+1)^0,w,c
 27914  008718  2207               	addwfc	(??_srand+3)^0,f,c
 27915  00871A  0060  F018  F0E4   	movff	??_srand+2,_seed
 27916  008720  0060  F01C  F0E5   	movff	??_srand+3,_seed+1
 27917  008726  0100               	movlb	0	; () banked
 27918  008728  6BE6               	clrf	(_seed+2)& (0+255),b
 27919  00872A  6BE7               	clrf	(_seed+3)& (0+255),b
 27920  00872C  6BE8               	clrf	(_seed+4)& (0+255),b
 27921  00872E  6BE9               	clrf	(_seed+5)& (0+255),b
 27922  008730  6BEA               	clrf	(_seed+6)& (0+255),b
 27923  008732  6BEB               	clrf	(_seed+7)& (0+255),b
 27924                           
 27925                           ; BSR set to: 0
 27926  008734  0012               	return		;funcret
 27927  008736                     __end_of_srand:
 27928                           	opt callstack 0
 27929                           
 27930 ;; *************** function _setTxPower *****************
 27931 ;; Defined at:
 27932 ;;		line 139 in file "../phy/sx1216/phy_src/phy.c"
 27933 ;; Parameters:    Size  Location     Type
 27934 ;;  power           1    wreg     unsigned char 
 27935 ;; Auto vars:     Size  Location     Type
 27936 ;;  power           1   16[COMRAM] unsigned char 
 27937 ;; Return value:  Size  Location     Type
 27938 ;;                  1    wreg      void 
 27939 ;; Registers used:
 27940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27941 ;; Tracked objects:
 27942 ;;		On entry : 0/3D
 27943 ;;		On exit  : 3F/3D
 27944 ;;		Unchanged: 0/0
 27945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27947 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27949 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27950 ;;Total ram usage:        1 bytes
 27951 ;; Hardware stack levels used:    1
 27952 ;; Hardware stack levels required when called:   11
 27953 ;; This function calls:
 27954 ;;		_SX1276Write
 27955 ;; This function is called by:
 27956 ;;		_initRadio
 27957 ;; This function uses a non-reentrant model
 27958 ;;
 27959                           
 27960                           	psect	text178
 27961  008A2E                     __ptext178:
 27962                           	opt callstack 0
 27963  008A2E                     _setTxPower:
 27964                           	opt callstack 15
 27965                           
 27966                           ; BSR set to: 0
 27967                           ;incstack = 0
 27968                           ;setTxPower@power stored from wreg
 27969  008A2E  6E11               	movwf	setTxPower@power^0,c
 27970                           
 27971                           ;../phy/sx1216/phy_src/phy.c: 139: void setTxPower(uint8_t power);../phy/sx1216/phy_src/
      +                          phy.c: 140: {;../phy/sx1216/phy_src/phy.c: 141:     if(power < 2)
 27972  008A30  0E02               	movlw	2
 27973  008A32  6011               	cpfslt	setTxPower@power^0,c
 27974  008A34  D002               	goto	l15006
 27975                           
 27976                           ;../phy/sx1216/phy_src/phy.c: 142:     {;../phy/sx1216/phy_src/phy.c: 143:         power
      +                           = 2;
 27977  008A36  0E02               	movlw	2
 27978  008A38  6E11               	movwf	setTxPower@power^0,c
 27979  008A3A                     l15006:
 27980                           
 27981                           ;../phy/sx1216/phy_src/phy.c: 145:     if(power > 13)
 27982  008A3A  0E0D               	movlw	13
 27983  008A3C  6411               	cpfsgt	setTxPower@power^0,c
 27984  008A3E  D002               	goto	l15010
 27985                           
 27986                           ;../phy/sx1216/phy_src/phy.c: 146:     {;../phy/sx1216/phy_src/phy.c: 147:         power
      +                           = 13;
 27987  008A40  0E0D               	movlw	13
 27988  008A42  6E11               	movwf	setTxPower@power^0,c
 27989  008A44                     l15010:
 27990                           
 27991                           ;../phy/sx1216/phy_src/phy.c: 149:     power = power -2;
 27992  008A44  5011               	movf	setTxPower@power^0,w,c
 27993  008A46  0FFE               	addlw	254
 27994  008A48  6E11               	movwf	setTxPower@power^0,c
 27995                           
 27996                           ;../phy/sx1216/phy_src/phy.c: 150:     SX1276Write(0x09, 0x70 | power | 0x80);
 27997  008A4A  5011               	movf	setTxPower@power^0,w,c
 27998  008A4C  09F0               	iorlw	240
 27999  008A4E  6E0F               	movwf	SX1276Write@data^0,c
 28000  008A50  0E09               	movlw	9
 28001  008A52  EC94  F047         	call	_SX1276Write
 28002                           
 28003                           ; BSR set to: 61
 28004  008A56  0012               	return		;funcret
 28005  008A58                     __end_of_setTxPower:
 28006                           	opt callstack 0
 28007                           
 28008 ;; *************** function _setSpreadingFactor *****************
 28009 ;; Defined at:
 28010 ;;		line 198 in file "../phy/sx1216/phy_src/phy.c"
 28011 ;; Parameters:    Size  Location     Type
 28012 ;;  sf              1    wreg     unsigned char 
 28013 ;; Auto vars:     Size  Location     Type
 28014 ;;  sf              1   42[COMRAM] unsigned char 
 28015 ;; Return value:  Size  Location     Type
 28016 ;;                  1    wreg      void 
 28017 ;; Registers used:
 28018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28019 ;; Tracked objects:
 28020 ;;		On entry : 3F/3D
 28021 ;;		On exit  : 0/0
 28022 ;;		Unchanged: 0/0
 28023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28025 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28026 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28027 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28028 ;;Total ram usage:        9 bytes
 28029 ;; Hardware stack levels used:    1
 28030 ;; Hardware stack levels required when called:   12
 28031 ;; This function calls:
 28032 ;;		_SX1276Read
 28033 ;;		_SX1276Write
 28034 ;;		___lldiv
 28035 ;;		_getSignalBandwidth
 28036 ;;		_getSpreadingFactor
 28037 ;; This function is called by:
 28038 ;;		_initRadio
 28039 ;; This function uses a non-reentrant model
 28040 ;;
 28041                           
 28042                           	psect	text179
 28043  0050D4                     __ptext179:
 28044                           	opt callstack 0
 28045  0050D4                     _setSpreadingFactor:
 28046                           	opt callstack 14
 28047                           
 28048                           ; BSR set to: 61
 28049                           ;incstack = 0
 28050                           ;setSpreadingFactor@sf stored from wreg
 28051  0050D4  6E2B               	movwf	setSpreadingFactor@sf^0,c
 28052                           
 28053                           ;../phy/sx1216/phy_src/phy.c: 198: void setSpreadingFactor(uint8_t sf);../phy/sx1216/phy
      +                          _src/phy.c: 199: {;../phy/sx1216/phy_src/phy.c: 200:     if (sf < 7)
 28054  0050D6  0E07               	movlw	7
 28055  0050D8  602B               	cpfslt	setSpreadingFactor@sf^0,c
 28056  0050DA  D002               	goto	l15034
 28057                           
 28058                           ;../phy/sx1216/phy_src/phy.c: 201:     {;../phy/sx1216/phy_src/phy.c: 202:         sf = 
      +                          7;
 28059  0050DC  0E07               	movlw	7
 28060  0050DE  D004               	goto	L25
 28061  0050E0                     l15034:
 28062  0050E0  0E0C               	movlw	12
 28063  0050E2  642B               	cpfsgt	setSpreadingFactor@sf^0,c
 28064  0050E4  D002               	goto	l15038
 28065                           
 28066                           ;../phy/sx1216/phy_src/phy.c: 205:     {;../phy/sx1216/phy_src/phy.c: 206:         sf = 
      +                          12;
 28067  0050E6  0E0C               	movlw	12
 28068  0050E8                     L25:
 28069  0050E8  6E2B               	movwf	setSpreadingFactor@sf^0,c
 28070  0050EA                     l15038:
 28071                           
 28072                           ;../phy/sx1216/phy_src/phy.c: 209:     SX1276Write(0x31, 0xc3);
 28073  0050EA  0EC3               	movlw	195
 28074  0050EC  6E0F               	movwf	SX1276Write@data^0,c
 28075  0050EE  0E31               	movlw	49
 28076  0050F0  EC94  F047         	call	_SX1276Write
 28077                           
 28078                           ; BSR set to: 61
 28079                           ;../phy/sx1216/phy_src/phy.c: 210:     SX1276Write(0x37, 0x0a);
 28080  0050F4  0E0A               	movlw	10
 28081  0050F6  6E0F               	movwf	SX1276Write@data^0,c
 28082  0050F8  0E37               	movlw	55
 28083  0050FA  EC94  F047         	call	_SX1276Write
 28084                           
 28085                           ; BSR set to: 61
 28086                           ;../phy/sx1216/phy_src/phy.c: 211:     SX1276Write(0x1E, (SX1276Read(0x1E) & 0x0f) | ((s
      +                          f << 4) & 0xf0));
 28087  0050FE  0060  F0AC  F023   	movff	setSpreadingFactor@sf,??_setSpreadingFactor
 28088  005104  3A23               	swapf	??_setSpreadingFactor^0,f,c
 28089  005106  0EF0               	movlw	240
 28090  005108  1623               	andwf	??_setSpreadingFactor^0,f,c
 28091  00510A  0EF0               	movlw	240
 28092  00510C  1623               	andwf	??_setSpreadingFactor^0,f,c
 28093  00510E  0E1E               	movlw	30
 28094  005110  EC76  F047         	call	_SX1276Read
 28095  005114  0B0F               	andlw	15
 28096  005116  1023               	iorwf	??_setSpreadingFactor^0,w,c
 28097  005118  6E0F               	movwf	SX1276Write@data^0,c
 28098  00511A  0E1E               	movlw	30
 28099  00511C  EC94  F047         	call	_SX1276Write
 28100                           
 28101                           ; BSR set to: 61
 28102                           ;../phy/sx1216/phy_src/phy.c: 213:     symbolDuration = 1000 / ( getSignalBandwidth() / 
      +                          (1L << getSpreadingFactor()) ) ;
 28103  005120  ECEE  F046         	call	_getSpreadingFactor	;wreg free
 28104  005124  0E01               	movlw	1
 28105  005126  6E23               	movwf	??_setSpreadingFactor^0,c
 28106  005128  6A24               	clrf	(??_setSpreadingFactor+1)^0,c
 28107  00512A  6A25               	clrf	(??_setSpreadingFactor+2)^0,c
 28108  00512C  6A26               	clrf	(??_setSpreadingFactor+3)^0,c
 28109  00512E  2A0F               	incf	?_getSpreadingFactor^0,f,c
 28110  005130  D005               	goto	u14600
 28111  005132                     u14605:
 28112  005132  90D8               	bcf	status,0,c
 28113  005134  3623               	rlcf	??_setSpreadingFactor^0,f,c
 28114  005136  3624               	rlcf	(??_setSpreadingFactor+1)^0,f,c
 28115  005138  3625               	rlcf	(??_setSpreadingFactor+2)^0,f,c
 28116  00513A  3626               	rlcf	(??_setSpreadingFactor+3)^0,f,c
 28117  00513C                     u14600:
 28118  00513C  2E0F               	decfsz	?_getSpreadingFactor^0,f,c
 28119  00513E  D7F9               	goto	u14605
 28120  005140  0060  F08C  F01A   	movff	??_setSpreadingFactor,___lldiv@divisor
 28121  005146  0060  F090  F01B   	movff	??_setSpreadingFactor+1,___lldiv@divisor+1
 28122  00514C  0060  F094  F01C   	movff	??_setSpreadingFactor+2,___lldiv@divisor+2
 28123  005152  0060  F098  F01D   	movff	??_setSpreadingFactor+3,___lldiv@divisor+3
 28124  005158  EC21  F025         	call	_getSignalBandwidth	;wreg free
 28125  00515C  0060  F03C  F016   	movff	?_getSignalBandwidth,___lldiv@dividend
 28126  005162  0060  F040  F017   	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 28127  005168  0060  F044  F018   	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 28128  00516E  0060  F048  F019   	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 28129  005174  EC2A  F039         	call	___lldiv	;wreg free
 28130  005178  0060  F058  F027   	movff	?___lldiv,_setSpreadingFactor$8781
 28131  00517E  0060  F05C  F028   	movff	?___lldiv+1,_setSpreadingFactor$8781+1
 28132  005184  0060  F060  F029   	movff	?___lldiv+2,_setSpreadingFactor$8781+2
 28133  00518A  0060  F064  F02A   	movff	?___lldiv+3,_setSpreadingFactor$8781+3
 28134                           
 28135                           ;../phy/sx1216/phy_src/phy.c: 213:     symbolDuration = 1000 / ( getSignalBandwidth() / 
      +                          (1L << getSpreadingFactor()) ) ;
 28136  005190  0EE8               	movlw	232
 28137  005192  6E16               	movwf	___lldiv@dividend^0,c
 28138  005194  0E03               	movlw	3
 28139  005196  6E17               	movwf	(___lldiv@dividend+1)^0,c
 28140  005198  0E00               	movlw	0
 28141  00519A  6E18               	movwf	(___lldiv@dividend+2)^0,c
 28142  00519C  0E00               	movlw	0
 28143  00519E  6E19               	movwf	(___lldiv@dividend+3)^0,c
 28144  0051A0  0060  F09C  F01A   	movff	_setSpreadingFactor$8781,___lldiv@divisor
 28145  0051A6  0060  F0A0  F01B   	movff	_setSpreadingFactor$8781+1,___lldiv@divisor+1
 28146  0051AC  0060  F0A4  F01C   	movff	_setSpreadingFactor$8781+2,___lldiv@divisor+2
 28147  0051B2  0060  F0A8  F01D   	movff	_setSpreadingFactor$8781+3,___lldiv@divisor+3
 28148  0051B8  EC2A  F039         	call	___lldiv	;wreg free
 28149  0051BC  0060  F058  F13E   	movff	?___lldiv,_symbolDuration
 28150  0051C2  0060  F05C  F13F   	movff	?___lldiv+1,_symbolDuration+1
 28151  0051C8  0060  F060  F140   	movff	?___lldiv+2,_symbolDuration+2
 28152  0051CE  0060  F064  F141   	movff	?___lldiv+3,_symbolDuration+3
 28153  0051D4  0012               	return		;funcret
 28154  0051D6                     __end_of_setSpreadingFactor:
 28155                           	opt callstack 0
 28156                           
 28157 ;; *************** function _setSignalBandwidth *****************
 28158 ;; Defined at:
 28159 ;;		line 223 in file "../phy/sx1216/phy_src/phy.c"
 28160 ;; Parameters:    Size  Location     Type
 28161 ;;  sbw             4   34[COMRAM] unsigned long 
 28162 ;; Auto vars:     Size  Location     Type
 28163 ;;  bw              4   46[COMRAM] unsigned long 
 28164 ;; Return value:  Size  Location     Type
 28165 ;;                  1    wreg      void 
 28166 ;; Registers used:
 28167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28168 ;; Tracked objects:
 28169 ;;		On entry : 3F/3D
 28170 ;;		On exit  : 0/0
 28171 ;;		Unchanged: 0/0
 28172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28173 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28174 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28175 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28176 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28177 ;;Total ram usage:       16 bytes
 28178 ;; Hardware stack levels used:    1
 28179 ;; Hardware stack levels required when called:   12
 28180 ;; This function calls:
 28181 ;;		_SX1276Read
 28182 ;;		_SX1276Write
 28183 ;;		___flge
 28184 ;;		___lldiv
 28185 ;;		___xxtofl
 28186 ;;		_getSignalBandwidth
 28187 ;;		_getSpreadingFactor
 28188 ;; This function is called by:
 28189 ;;		_initRadio
 28190 ;; This function uses a non-reentrant model
 28191 ;;
 28192                           
 28193                           	psect	text180
 28194  000EE8                     __ptext180:
 28195                           	opt callstack 0
 28196  000EE8                     _setSignalBandwidth:
 28197                           	opt callstack 14
 28198                           
 28199                           ; BSR set to: 61
 28200                           ;../phy/sx1216/phy_src/phy.c: 223: void setSignalBandwidth(uint32_t sbw);../phy/sx1216/p
      +                          hy_src/phy.c: 224: {;../phy/sx1216/phy_src/phy.c: 225:   uint32_t bw;;../phy/sx1216/phy_
      +                          src/phy.c: 227:   if (sbw <= 7.8E3) {
 28201                           
 28202                           ;incstack = 0
 28203  000EE8  0E00               	movlw	0
 28204  000EEA  6E10               	movwf	___flge@ff1^0,c
 28205  000EEC  0EC0               	movlw	192
 28206  000EEE  6E11               	movwf	(___flge@ff1+1)^0,c
 28207  000EF0  0EF3               	movlw	243
 28208  000EF2  6E12               	movwf	(___flge@ff1+2)^0,c
 28209  000EF4  0E45               	movlw	69
 28210  000EF6  6E13               	movwf	(___flge@ff1+3)^0,c
 28211  000EF8  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 28212  000EFE  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 28213  000F04  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 28214  000F0A  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 28215  000F10  0E00               	movlw	0
 28216  000F12  EC03  F020         	call	___xxtofl
 28217  000F16  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 28218  000F1C  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 28219  000F22  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 28220  000F28  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 28221  000F2E  EC1C  F030         	call	___flge	;wreg free
 28222  000F32  A0D8               	btfss	status,0,c
 28223  000F34  D002               	goto	l15052
 28224                           
 28225                           ;../phy/sx1216/phy_src/phy.c: 228:     bw = 0;
 28226  000F36  0E00               	movlw	0
 28227  000F38  D149               	goto	L26
 28228  000F3A                     l15052:
 28229  000F3A  0E00               	movlw	0
 28230  000F3C  6E10               	movwf	___flge@ff1^0,c
 28231  000F3E  0E80               	movlw	128
 28232  000F40  6E11               	movwf	(___flge@ff1+1)^0,c
 28233  000F42  0E22               	movlw	34
 28234  000F44  6E12               	movwf	(___flge@ff1+2)^0,c
 28235  000F46  0E46               	movlw	70
 28236  000F48  6E13               	movwf	(___flge@ff1+3)^0,c
 28237  000F4A  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 28238  000F50  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 28239  000F56  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 28240  000F5C  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 28241  000F62  0E00               	movlw	0
 28242  000F64  EC03  F020         	call	___xxtofl
 28243  000F68  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 28244  000F6E  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 28245  000F74  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 28246  000F7A  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 28247  000F80  EC1C  F030         	call	___flge	;wreg free
 28248  000F84  A0D8               	btfss	status,0,c
 28249  000F86  D002               	goto	l15056
 28250                           
 28251                           ;../phy/sx1216/phy_src/phy.c: 230:     bw = 1;
 28252  000F88  0E01               	movlw	1
 28253  000F8A  D120               	goto	L26
 28254  000F8C                     l15056:
 28255  000F8C  0E00               	movlw	0
 28256  000F8E  6E10               	movwf	___flge@ff1^0,c
 28257  000F90  0EC0               	movlw	192
 28258  000F92  6E11               	movwf	(___flge@ff1+1)^0,c
 28259  000F94  0E73               	movlw	115
 28260  000F96  6E12               	movwf	(___flge@ff1+2)^0,c
 28261  000F98  0E46               	movlw	70
 28262  000F9A  6E13               	movwf	(___flge@ff1+3)^0,c
 28263  000F9C  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 28264  000FA2  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 28265  000FA8  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 28266  000FAE  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 28267  000FB4  0E00               	movlw	0
 28268  000FB6  EC03  F020         	call	___xxtofl
 28269  000FBA  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 28270  000FC0  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 28271  000FC6  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 28272  000FCC  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 28273  000FD2  EC1C  F030         	call	___flge	;wreg free
 28274  000FD6  A0D8               	btfss	status,0,c
 28275  000FD8  D002               	goto	l15060
 28276                           
 28277                           ;../phy/sx1216/phy_src/phy.c: 232:     bw = 2;
 28278  000FDA  0E02               	movlw	2
 28279  000FDC  D0F7               	goto	L26
 28280  000FDE                     l15060:
 28281  000FDE  0E00               	movlw	0
 28282  000FE0  6E10               	movwf	___flge@ff1^0,c
 28283  000FE2  0E80               	movlw	128
 28284  000FE4  6E11               	movwf	(___flge@ff1+1)^0,c
 28285  000FE6  0EA2               	movlw	162
 28286  000FE8  6E12               	movwf	(___flge@ff1+2)^0,c
 28287  000FEA  0E46               	movlw	70
 28288  000FEC  6E13               	movwf	(___flge@ff1+3)^0,c
 28289  000FEE  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 28290  000FF4  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 28291  000FFA  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 28292  001000  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 28293  001006  0E00               	movlw	0
 28294  001008  EC03  F020         	call	___xxtofl
 28295  00100C  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 28296  001012  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 28297  001018  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 28298  00101E  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 28299  001024  EC1C  F030         	call	___flge	;wreg free
 28300  001028  A0D8               	btfss	status,0,c
 28301  00102A  D002               	goto	l15064
 28302                           
 28303                           ;../phy/sx1216/phy_src/phy.c: 234:     bw = 3;
 28304  00102C  0E03               	movlw	3
 28305  00102E  D0CE               	goto	L26
 28306  001030                     l15064:
 28307  001030  0E00               	movlw	0
 28308  001032  6E10               	movwf	___flge@ff1^0,c
 28309  001034  0E24               	movlw	36
 28310  001036  6E11               	movwf	(___flge@ff1+1)^0,c
 28311  001038  0EF4               	movlw	244
 28312  00103A  6E12               	movwf	(___flge@ff1+2)^0,c
 28313  00103C  0E46               	movlw	70
 28314  00103E  6E13               	movwf	(___flge@ff1+3)^0,c
 28315  001040  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 28316  001046  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 28317  00104C  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 28318  001052  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 28319  001058  0E00               	movlw	0
 28320  00105A  EC03  F020         	call	___xxtofl
 28321  00105E  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 28322  001064  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 28323  00106A  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 28324  001070  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 28325  001076  EC1C  F030         	call	___flge	;wreg free
 28326  00107A  A0D8               	btfss	status,0,c
 28327  00107C  D002               	goto	l15068
 28328                           
 28329                           ;../phy/sx1216/phy_src/phy.c: 236:     bw = 4;
 28330  00107E  0E04               	movlw	4
 28331  001080  D0A5               	goto	L26
 28332  001082                     l15068:
 28333  001082  0E00               	movlw	0
 28334  001084  6E10               	movwf	___flge@ff1^0,c
 28335  001086  0EE4               	movlw	228
 28336  001088  6E11               	movwf	(___flge@ff1+1)^0,c
 28337  00108A  0E22               	movlw	34
 28338  00108C  6E12               	movwf	(___flge@ff1+2)^0,c
 28339  00108E  0E47               	movlw	71
 28340  001090  6E13               	movwf	(___flge@ff1+3)^0,c
 28341  001092  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 28342  001098  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 28343  00109E  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 28344  0010A4  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 28345  0010AA  0E00               	movlw	0
 28346  0010AC  EC03  F020         	call	___xxtofl
 28347  0010B0  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 28348  0010B6  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 28349  0010BC  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 28350  0010C2  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 28351  0010C8  EC1C  F030         	call	___flge	;wreg free
 28352  0010CC  A0D8               	btfss	status,0,c
 28353  0010CE  D002               	goto	l15072
 28354                           
 28355                           ;../phy/sx1216/phy_src/phy.c: 238:     bw = 5;
 28356  0010D0  0E05               	movlw	5
 28357  0010D2  D07C               	goto	L26
 28358  0010D4                     l15072:
 28359  0010D4  0E00               	movlw	0
 28360  0010D6  6E10               	movwf	___flge@ff1^0,c
 28361  0010D8  0E24               	movlw	36
 28362  0010DA  6E11               	movwf	(___flge@ff1+1)^0,c
 28363  0010DC  0E74               	movlw	116
 28364  0010DE  6E12               	movwf	(___flge@ff1+2)^0,c
 28365  0010E0  0E47               	movlw	71
 28366  0010E2  6E13               	movwf	(___flge@ff1+3)^0,c
 28367  0010E4  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 28368  0010EA  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 28369  0010F0  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 28370  0010F6  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 28371  0010FC  0E00               	movlw	0
 28372  0010FE  EC03  F020         	call	___xxtofl
 28373  001102  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 28374  001108  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 28375  00110E  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 28376  001114  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 28377  00111A  EC1C  F030         	call	___flge	;wreg free
 28378  00111E  A0D8               	btfss	status,0,c
 28379  001120  D002               	goto	l15076
 28380                           
 28381                           ;../phy/sx1216/phy_src/phy.c: 240:     bw = 6;
 28382  001122  0E06               	movlw	6
 28383  001124  D053               	goto	L26
 28384  001126                     l15076:
 28385  001126  0E00               	movlw	0
 28386  001128  6E10               	movwf	___flge@ff1^0,c
 28387  00112A  0E24               	movlw	36
 28388  00112C  6E11               	movwf	(___flge@ff1+1)^0,c
 28389  00112E  0EF4               	movlw	244
 28390  001130  6E12               	movwf	(___flge@ff1+2)^0,c
 28391  001132  0E47               	movlw	71
 28392  001134  6E13               	movwf	(___flge@ff1+3)^0,c
 28393  001136  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 28394  00113C  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 28395  001142  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 28396  001148  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 28397  00114E  0E00               	movlw	0
 28398  001150  EC03  F020         	call	___xxtofl
 28399  001154  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 28400  00115A  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 28401  001160  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 28402  001166  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 28403  00116C  EC1C  F030         	call	___flge	;wreg free
 28404  001170  A0D8               	btfss	status,0,c
 28405  001172  D002               	goto	l15080
 28406                           
 28407                           ;../phy/sx1216/phy_src/phy.c: 242:     bw = 7;
 28408  001174  0E07               	movlw	7
 28409  001176  D02A               	goto	L26
 28410  001178                     l15080:
 28411  001178  0E00               	movlw	0
 28412  00117A  6E10               	movwf	___flge@ff1^0,c
 28413  00117C  0E24               	movlw	36
 28414  00117E  6E11               	movwf	(___flge@ff1+1)^0,c
 28415  001180  0E74               	movlw	116
 28416  001182  6E12               	movwf	(___flge@ff1+2)^0,c
 28417  001184  0E48               	movlw	72
 28418  001186  6E13               	movwf	(___flge@ff1+3)^0,c
 28419  001188  0060  F08C  F002   	movff	setSignalBandwidth@sbw,___xxtofl@val
 28420  00118E  0060  F090  F003   	movff	setSignalBandwidth@sbw+1,___xxtofl@val+1
 28421  001194  0060  F094  F004   	movff	setSignalBandwidth@sbw+2,___xxtofl@val+2
 28422  00119A  0060  F098  F005   	movff	setSignalBandwidth@sbw+3,___xxtofl@val+3
 28423  0011A0  0E00               	movlw	0
 28424  0011A2  EC03  F020         	call	___xxtofl
 28425  0011A6  0060  F008  F014   	movff	?___xxtofl,___flge@ff2
 28426  0011AC  0060  F00C  F015   	movff	?___xxtofl+1,___flge@ff2+1
 28427  0011B2  0060  F010  F016   	movff	?___xxtofl+2,___flge@ff2+2
 28428  0011B8  0060  F014  F017   	movff	?___xxtofl+3,___flge@ff2+3
 28429  0011BE  EC1C  F030         	call	___flge	;wreg free
 28430  0011C2  A0D8               	btfss	status,0,c
 28431  0011C4  D002               	goto	l15084
 28432                           
 28433                           ;../phy/sx1216/phy_src/phy.c: 244:     bw = 8;
 28434  0011C6  0E08               	movlw	8
 28435  0011C8  D001               	goto	L26
 28436  0011CA                     l15084:
 28437                           
 28438                           ;../phy/sx1216/phy_src/phy.c: 246:     bw = 9;
 28439  0011CA  0E09               	movlw	9
 28440  0011CC                     L26:
 28441  0011CC  6E2F               	movwf	setSignalBandwidth@bw^0,c
 28442  0011CE  0E00               	movlw	0
 28443  0011D0  6E30               	movwf	(setSignalBandwidth@bw+1)^0,c
 28444  0011D2  0E00               	movlw	0
 28445  0011D4  6E31               	movwf	(setSignalBandwidth@bw+2)^0,c
 28446  0011D6  0E00               	movlw	0
 28447  0011D8  6E32               	movwf	(setSignalBandwidth@bw+3)^0,c
 28448                           
 28449                           ;../phy/sx1216/phy_src/phy.c: 249:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0x0f) | (bw <
      +                          < 4));
 28450  0011DA  0060  F0BC  F027   	movff	setSignalBandwidth@bw,??_setSignalBandwidth
 28451  0011E0  3A27               	swapf	??_setSignalBandwidth^0,f,c
 28452  0011E2  0EF0               	movlw	240
 28453  0011E4  1627               	andwf	??_setSignalBandwidth^0,f,c
 28454  0011E6  0E1D               	movlw	29
 28455  0011E8  EC76  F047         	call	_SX1276Read
 28456  0011EC  0B0F               	andlw	15
 28457  0011EE  1027               	iorwf	??_setSignalBandwidth^0,w,c
 28458  0011F0  6E0F               	movwf	SX1276Write@data^0,c
 28459  0011F2  0E1D               	movlw	29
 28460  0011F4  EC94  F047         	call	_SX1276Write
 28461                           
 28462                           ; BSR set to: 61
 28463                           ;../phy/sx1216/phy_src/phy.c: 250:   symbolDuration = 1000 / ( getSignalBandwidth() / (1
      +                          L << getSpreadingFactor()) ) ;
 28464  0011F8  ECEE  F046         	call	_getSpreadingFactor	;wreg free
 28465  0011FC  0E01               	movlw	1
 28466  0011FE  6E27               	movwf	??_setSignalBandwidth^0,c
 28467  001200  6A28               	clrf	(??_setSignalBandwidth+1)^0,c
 28468  001202  6A29               	clrf	(??_setSignalBandwidth+2)^0,c
 28469  001204  6A2A               	clrf	(??_setSignalBandwidth+3)^0,c
 28470  001206  2A0F               	incf	?_getSpreadingFactor^0,f,c
 28471  001208  D005               	goto	u14700
 28472  00120A                     u14705:
 28473  00120A  90D8               	bcf	status,0,c
 28474  00120C  3627               	rlcf	??_setSignalBandwidth^0,f,c
 28475  00120E  3628               	rlcf	(??_setSignalBandwidth+1)^0,f,c
 28476  001210  3629               	rlcf	(??_setSignalBandwidth+2)^0,f,c
 28477  001212  362A               	rlcf	(??_setSignalBandwidth+3)^0,f,c
 28478  001214                     u14700:
 28479  001214  2E0F               	decfsz	?_getSpreadingFactor^0,f,c
 28480  001216  D7F9               	goto	u14705
 28481  001218  0060  F09C  F01A   	movff	??_setSignalBandwidth,___lldiv@divisor
 28482  00121E  0060  F0A0  F01B   	movff	??_setSignalBandwidth+1,___lldiv@divisor+1
 28483  001224  0060  F0A4  F01C   	movff	??_setSignalBandwidth+2,___lldiv@divisor+2
 28484  00122A  0060  F0A8  F01D   	movff	??_setSignalBandwidth+3,___lldiv@divisor+3
 28485  001230  EC21  F025         	call	_getSignalBandwidth	;wreg free
 28486  001234  0060  F03C  F016   	movff	?_getSignalBandwidth,___lldiv@dividend
 28487  00123A  0060  F040  F017   	movff	?_getSignalBandwidth+1,___lldiv@dividend+1
 28488  001240  0060  F044  F018   	movff	?_getSignalBandwidth+2,___lldiv@dividend+2
 28489  001246  0060  F048  F019   	movff	?_getSignalBandwidth+3,___lldiv@dividend+3
 28490  00124C  EC2A  F039         	call	___lldiv	;wreg free
 28491  001250  0060  F058  F02B   	movff	?___lldiv,_setSignalBandwidth$8782
 28492  001256  0060  F05C  F02C   	movff	?___lldiv+1,_setSignalBandwidth$8782+1
 28493  00125C  0060  F060  F02D   	movff	?___lldiv+2,_setSignalBandwidth$8782+2
 28494  001262  0060  F064  F02E   	movff	?___lldiv+3,_setSignalBandwidth$8782+3
 28495                           
 28496                           ;../phy/sx1216/phy_src/phy.c: 250:   symbolDuration = 1000 / ( getSignalBandwidth() / (1
      +                          L << getSpreadingFactor()) ) ;
 28497  001268  0EE8               	movlw	232
 28498  00126A  6E16               	movwf	___lldiv@dividend^0,c
 28499  00126C  0E03               	movlw	3
 28500  00126E  6E17               	movwf	(___lldiv@dividend+1)^0,c
 28501  001270  0E00               	movlw	0
 28502  001272  6E18               	movwf	(___lldiv@dividend+2)^0,c
 28503  001274  0E00               	movlw	0
 28504  001276  6E19               	movwf	(___lldiv@dividend+3)^0,c
 28505  001278  0060  F0AC  F01A   	movff	_setSignalBandwidth$8782,___lldiv@divisor
 28506  00127E  0060  F0B0  F01B   	movff	_setSignalBandwidth$8782+1,___lldiv@divisor+1
 28507  001284  0060  F0B4  F01C   	movff	_setSignalBandwidth$8782+2,___lldiv@divisor+2
 28508  00128A  0060  F0B8  F01D   	movff	_setSignalBandwidth$8782+3,___lldiv@divisor+3
 28509  001290  EC2A  F039         	call	___lldiv	;wreg free
 28510  001294  0060  F058  F13E   	movff	?___lldiv,_symbolDuration
 28511  00129A  0060  F05C  F13F   	movff	?___lldiv+1,_symbolDuration+1
 28512  0012A0  0060  F060  F140   	movff	?___lldiv+2,_symbolDuration+2
 28513  0012A6  0060  F064  F141   	movff	?___lldiv+3,_symbolDuration+3
 28514  0012AC  0012               	return		;funcret
 28515  0012AE                     __end_of_setSignalBandwidth:
 28516                           	opt callstack 0
 28517                           
 28518 ;; *************** function _getSpreadingFactor *****************
 28519 ;; Defined at:
 28520 ;;		line 261 in file "../phy/sx1216/phy_src/phy.c"
 28521 ;; Parameters:    Size  Location     Type
 28522 ;;		None
 28523 ;; Auto vars:     Size  Location     Type
 28524 ;;		None
 28525 ;; Return value:  Size  Location     Type
 28526 ;;                  4   14[COMRAM] unsigned long 
 28527 ;; Registers used:
 28528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28529 ;; Tracked objects:
 28530 ;;		On entry : 3F/3D
 28531 ;;		On exit  : 3F/3D
 28532 ;;		Unchanged: 0/0
 28533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28534 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28536 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28537 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28538 ;;Total ram usage:        5 bytes
 28539 ;; Hardware stack levels used:    1
 28540 ;; Hardware stack levels required when called:   11
 28541 ;; This function calls:
 28542 ;;		_SX1276Read
 28543 ;; This function is called by:
 28544 ;;		_setSpreadingFactor
 28545 ;;		_setSignalBandwidth
 28546 ;; This function uses a non-reentrant model
 28547 ;;
 28548                           
 28549                           	psect	text181
 28550  008DDC                     __ptext181:
 28551                           	opt callstack 0
 28552  008DDC                     _getSpreadingFactor:
 28553                           	opt callstack 14
 28554                           
 28555                           ; BSR set to: 61
 28556                           ;../phy/sx1216/phy_src/phy.c: 263:   return SX1276Read(0x1E) >> 4;
 28557                           
 28558                           ;incstack = 0
 28559  008DDC  0E1E               	movlw	30
 28560  008DDE  EC76  F047         	call	_SX1276Read
 28561  008DE2  6E13               	movwf	??_getSpreadingFactor^0,c
 28562  008DE4  3A13               	swapf	??_getSpreadingFactor^0,f,c
 28563  008DE6  0E0F               	movlw	15
 28564  008DE8  1613               	andwf	??_getSpreadingFactor^0,f,c
 28565  008DEA  5013               	movf	??_getSpreadingFactor^0,w,c
 28566  008DEC  6E0F               	movwf	?_getSpreadingFactor^0,c
 28567  008DEE  6A10               	clrf	(?_getSpreadingFactor+1)^0,c
 28568  008DF0  6A11               	clrf	(?_getSpreadingFactor+2)^0,c
 28569  008DF2  6A12               	clrf	(?_getSpreadingFactor+3)^0,c
 28570                           
 28571                           ; BSR set to: 61
 28572  008DF4  0012               	return		;funcret
 28573  008DF6                     __end_of_getSpreadingFactor:
 28574                           	opt callstack 0
 28575                           
 28576 ;; *************** function _getSignalBandwidth *****************
 28577 ;; Defined at:
 28578 ;;		line 272 in file "../phy/sx1216/phy_src/phy.c"
 28579 ;; Parameters:    Size  Location     Type
 28580 ;;		None
 28581 ;; Auto vars:     Size  Location     Type
 28582 ;;  bw              1   20[COMRAM] unsigned char 
 28583 ;; Return value:  Size  Location     Type
 28584 ;;                  4   14[COMRAM] unsigned long 
 28585 ;; Registers used:
 28586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28587 ;; Tracked objects:
 28588 ;;		On entry : 3F/3D
 28589 ;;		On exit  : 3F/3D
 28590 ;;		Unchanged: 0/0
 28591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28592 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28593 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28594 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28595 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28596 ;;Total ram usage:        7 bytes
 28597 ;; Hardware stack levels used:    1
 28598 ;; Hardware stack levels required when called:   11
 28599 ;; This function calls:
 28600 ;;		_SX1276Read
 28601 ;; This function is called by:
 28602 ;;		_setSpreadingFactor
 28603 ;;		_setSignalBandwidth
 28604 ;; This function uses a non-reentrant model
 28605 ;;
 28606                           
 28607                           	psect	text182
 28608  004A42                     __ptext182:
 28609                           	opt callstack 0
 28610  004A42                     _getSignalBandwidth:
 28611                           	opt callstack 14
 28612                           
 28613                           ; BSR set to: 61
 28614                           ;../phy/sx1216/phy_src/phy.c: 274:   uint8_t bw = (SX1276Read(0x1D) >> 4);
 28615                           
 28616                           ; BSR set to: 61
 28617                           ;incstack = 0
 28618  004A42  0E1D               	movlw	29
 28619  004A44  EC76  F047         	call	_SX1276Read
 28620  004A48  6E13               	movwf	??_getSignalBandwidth^0,c
 28621  004A4A  3813               	swapf	??_getSignalBandwidth^0,w,c
 28622  004A4C  0B0F               	andlw	15
 28623  004A4E  6E15               	movwf	getSignalBandwidth@bw^0,c
 28624                           
 28625                           ;../phy/sx1216/phy_src/phy.c: 275:   switch (bw) {
 28626  004A50  D05A               	goto	l14648
 28627  004A52                     l14606:
 28628                           
 28629                           ; BSR set to: 61
 28630  004A52  0E78               	movlw	120
 28631  004A54  6E0F               	movwf	?_getSignalBandwidth^0,c
 28632  004A56  0E1E               	movlw	30
 28633  004A58  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28634  004A5A  0E00               	movlw	0
 28635  004A5C  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28636  004A5E  0E00               	movlw	0
 28637  004A60  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28638  004A62  0012               	return	
 28639  004A64                     l14610:
 28640                           
 28641                           ; BSR set to: 61
 28642  004A64  0EA0               	movlw	160
 28643  004A66  6E0F               	movwf	?_getSignalBandwidth^0,c
 28644  004A68  0E28               	movlw	40
 28645  004A6A  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28646  004A6C  0E00               	movlw	0
 28647  004A6E  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28648  004A70  0E00               	movlw	0
 28649  004A72  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28650  004A74  0012               	return	
 28651  004A76                     l14614:
 28652                           
 28653                           ; BSR set to: 61
 28654  004A76  0EF0               	movlw	240
 28655  004A78  6E0F               	movwf	?_getSignalBandwidth^0,c
 28656  004A7A  0E3C               	movlw	60
 28657  004A7C  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28658  004A7E  0E00               	movlw	0
 28659  004A80  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28660  004A82  0E00               	movlw	0
 28661  004A84  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28662  004A86  0012               	return	
 28663  004A88                     l14618:
 28664                           
 28665                           ; BSR set to: 61
 28666  004A88  0E40               	movlw	64
 28667  004A8A  6E0F               	movwf	?_getSignalBandwidth^0,c
 28668  004A8C  0E51               	movlw	81
 28669  004A8E  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28670  004A90  0E00               	movlw	0
 28671  004A92  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28672  004A94  0E00               	movlw	0
 28673  004A96  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28674  004A98  0012               	return	
 28675  004A9A                     l14622:
 28676                           
 28677                           ; BSR set to: 61
 28678  004A9A  0E12               	movlw	18
 28679  004A9C  6E0F               	movwf	?_getSignalBandwidth^0,c
 28680  004A9E  0E7A               	movlw	122
 28681  004AA0  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28682  004AA2  0E00               	movlw	0
 28683  004AA4  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28684  004AA6  0E00               	movlw	0
 28685  004AA8  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28686  004AAA  0012               	return	
 28687  004AAC                     l14626:
 28688                           
 28689                           ; BSR set to: 61
 28690  004AAC  0EE4               	movlw	228
 28691  004AAE  6E0F               	movwf	?_getSignalBandwidth^0,c
 28692  004AB0  0EA2               	movlw	162
 28693  004AB2  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28694  004AB4  0E00               	movlw	0
 28695  004AB6  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28696  004AB8  0E00               	movlw	0
 28697  004ABA  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28698  004ABC  0012               	return	
 28699  004ABE                     l14630:
 28700                           
 28701                           ; BSR set to: 61
 28702  004ABE  0E24               	movlw	36
 28703  004AC0  6E0F               	movwf	?_getSignalBandwidth^0,c
 28704  004AC2  0EF4               	movlw	244
 28705  004AC4  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28706  004AC6  0E00               	movlw	0
 28707  004AC8  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28708  004ACA  0E00               	movlw	0
 28709  004ACC  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28710  004ACE  0012               	return	
 28711  004AD0                     l14634:
 28712                           
 28713                           ; BSR set to: 61
 28714  004AD0  0E48               	movlw	72
 28715  004AD2  6E0F               	movwf	?_getSignalBandwidth^0,c
 28716  004AD4  0EE8               	movlw	232
 28717  004AD6  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28718  004AD8  0E01               	movlw	1
 28719  004ADA  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28720  004ADC  0E00               	movlw	0
 28721  004ADE  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28722  004AE0  0012               	return	
 28723  004AE2                     l14638:
 28724                           
 28725                           ; BSR set to: 61
 28726  004AE2  0E90               	movlw	144
 28727  004AE4  6E0F               	movwf	?_getSignalBandwidth^0,c
 28728  004AE6  0ED0               	movlw	208
 28729  004AE8  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28730  004AEA  0E03               	movlw	3
 28731  004AEC  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28732  004AEE  0E00               	movlw	0
 28733  004AF0  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28734  004AF2  0012               	return	
 28735  004AF4                     l14642:
 28736                           
 28737                           ; BSR set to: 61
 28738  004AF4  0E20               	movlw	32
 28739  004AF6  6E0F               	movwf	?_getSignalBandwidth^0,c
 28740  004AF8  0EA1               	movlw	161
 28741  004AFA  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28742  004AFC  0E07               	movlw	7
 28743  004AFE  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28744  004B00  0E00               	movlw	0
 28745  004B02  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28746  004B04  0012               	return	
 28747  004B06                     l14648:
 28748                           
 28749                           ; BSR set to: 61
 28750  004B06  5015               	movf	getSignalBandwidth@bw^0,w,c
 28751  004B08  6E13               	movwf	??_getSignalBandwidth^0,c
 28752  004B0A  6A14               	clrf	(??_getSignalBandwidth+1)^0,c
 28753                           
 28754                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28755                           ; Switch size 1, requested type "simple"
 28756                           ; Number of cases is 1, Range of values is 0 to 0
 28757                           ; switch strategies available:
 28758                           ; Name         Instructions Cycles
 28759                           ; simple_byte            4     3 (average)
 28760                           ;	Chosen strategy is simple_byte
 28761  004B0C  5014               	movf	(??_getSignalBandwidth+1)^0,w,c
 28762  004B0E  0A00               	xorlw	0	; case 0
 28763  004B10  A4D8               	btfss	status,2,c
 28764  004B12  D01F               	goto	l14650
 28765                           
 28766                           ; BSR set to: 61
 28767                           ; Switch size 1, requested type "simple"
 28768                           ; Number of cases is 10, Range of values is 0 to 9
 28769                           ; switch strategies available:
 28770                           ; Name         Instructions Cycles
 28771                           ; simple_byte           31    16 (average)
 28772                           ;	Chosen strategy is simple_byte
 28773  004B14  5013               	movf	??_getSignalBandwidth^0,w,c
 28774  004B16  0A00               	xorlw	0	; case 0
 28775  004B18  B4D8               	btfsc	status,2,c
 28776  004B1A  D79B               	goto	l14606
 28777  004B1C  0A01               	xorlw	1	; case 1
 28778  004B1E  B4D8               	btfsc	status,2,c
 28779  004B20  D7A1               	goto	l14610
 28780  004B22  0A03               	xorlw	3	; case 2
 28781  004B24  B4D8               	btfsc	status,2,c
 28782  004B26  D7A7               	goto	l14614
 28783  004B28  0A01               	xorlw	1	; case 3
 28784  004B2A  B4D8               	btfsc	status,2,c
 28785  004B2C  D7AD               	goto	l14618
 28786  004B2E  0A07               	xorlw	7	; case 4
 28787  004B30  B4D8               	btfsc	status,2,c
 28788  004B32  D7B3               	goto	l14622
 28789  004B34  0A01               	xorlw	1	; case 5
 28790  004B36  B4D8               	btfsc	status,2,c
 28791  004B38  D7B9               	goto	l14626
 28792  004B3A  0A03               	xorlw	3	; case 6
 28793  004B3C  B4D8               	btfsc	status,2,c
 28794  004B3E  D7BF               	goto	l14630
 28795  004B40  0A01               	xorlw	1	; case 7
 28796  004B42  B4D8               	btfsc	status,2,c
 28797  004B44  D7C5               	goto	l14634
 28798  004B46  0A0F               	xorlw	15	; case 8
 28799  004B48  B4D8               	btfsc	status,2,c
 28800  004B4A  D7CB               	goto	l14638
 28801  004B4C  0A01               	xorlw	1	; case 9
 28802  004B4E  B4D8               	btfsc	status,2,c
 28803  004B50  D7D1               	goto	l14642
 28804  004B52                     l14650:
 28805                           
 28806                           ; BSR set to: 61
 28807                           ;../phy/sx1216/phy_src/phy.c: 287:   return 0;
 28808  004B52  0E00               	movlw	0
 28809  004B54  6E0F               	movwf	?_getSignalBandwidth^0,c
 28810  004B56  0E00               	movlw	0
 28811  004B58  6E10               	movwf	(?_getSignalBandwidth+1)^0,c
 28812  004B5A  0E00               	movlw	0
 28813  004B5C  6E11               	movwf	(?_getSignalBandwidth+2)^0,c
 28814  004B5E  0E00               	movlw	0
 28815  004B60  6E12               	movwf	(?_getSignalBandwidth+3)^0,c
 28816                           
 28817                           ; BSR set to: 61
 28818  004B62  0012               	return		;funcret
 28819  004B64                     __end_of_getSignalBandwidth:
 28820                           	opt callstack 0
 28821                           
 28822 ;; *************** function ___xxtofl *****************
 28823 ;; Defined at:
 28824 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 28825 ;; Parameters:    Size  Location     Type
 28826 ;;  sign            1    wreg     unsigned char 
 28827 ;;  val             4    1[COMRAM] long 
 28828 ;; Auto vars:     Size  Location     Type
 28829 ;;  sign            1    9[COMRAM] unsigned char 
 28830 ;;  arg             4   11[COMRAM] unsigned long 
 28831 ;;  exp             1   10[COMRAM] unsigned char 
 28832 ;; Return value:  Size  Location     Type
 28833 ;;                  4    1[COMRAM] unsigned char 
 28834 ;; Registers used:
 28835 ;;		wreg, status,2, status,0
 28836 ;; Tracked objects:
 28837 ;;		On entry : 0/0
 28838 ;;		On exit  : 0/0
 28839 ;;		Unchanged: 0/0
 28840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28841 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28842 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28843 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28844 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28845 ;;Total ram usage:       14 bytes
 28846 ;; Hardware stack levels used:    1
 28847 ;; Hardware stack levels required when called:    7
 28848 ;; This function calls:
 28849 ;;		Nothing
 28850 ;; This function is called by:
 28851 ;;		_setSignalBandwidth
 28852 ;;		_get_lqi
 28853 ;; This function uses a non-reentrant model
 28854 ;;
 28855                           
 28856                           	psect	text183
 28857  004006                     __ptext183:
 28858                           	opt callstack 0
 28859  004006                     ___xxtofl:
 28860                           	opt callstack 18
 28861                           
 28862                           ; BSR set to: 61
 28863                           ;incstack = 0
 28864                           ;___xxtofl@sign stored from wreg
 28865  004006  6E0A               	movwf	___xxtofl@sign^0,c
 28866  004008  500A               	movf	___xxtofl@sign^0,w,c
 28867  00400A  A4D8               	btfss	status,2,c
 28868  00400C  AE05               	btfss	(___xxtofl@val+3)^0,7,c
 28869  00400E  D022               	goto	l3886
 28870  004010  0060  F008  F006   	movff	___xxtofl@val,??___xxtofl
 28871  004016  0060  F00C  F007   	movff	___xxtofl@val+1,??___xxtofl+1
 28872  00401C  0060  F010  F008   	movff	___xxtofl@val+2,??___xxtofl+2
 28873  004022  0060  F014  F009   	movff	___xxtofl@val+3,??___xxtofl+3
 28874  004028  1E06               	comf	??___xxtofl^0,f,c
 28875  00402A  1E07               	comf	(??___xxtofl+1)^0,f,c
 28876  00402C  1E08               	comf	(??___xxtofl+2)^0,f,c
 28877  00402E  1E09               	comf	(??___xxtofl+3)^0,f,c
 28878  004030  2A06               	incf	??___xxtofl^0,f,c
 28879  004032  0E00               	movlw	0
 28880  004034  2207               	addwfc	(??___xxtofl+1)^0,f,c
 28881  004036  2208               	addwfc	(??___xxtofl+2)^0,f,c
 28882  004038  2209               	addwfc	(??___xxtofl+3)^0,f,c
 28883  00403A  0060  F018  F00C   	movff	??___xxtofl,___xxtofl@arg
 28884  004040  0060  F01C  F00D   	movff	??___xxtofl+1,___xxtofl@arg+1
 28885  004046  0060  F020  F00E   	movff	??___xxtofl+2,___xxtofl@arg+2
 28886  00404C  0060  F024  F00F   	movff	??___xxtofl+3,___xxtofl@arg+3
 28887  004052  D00C               	goto	l14754
 28888  004054                     l3886:
 28889  004054  0060  F008  F00C   	movff	___xxtofl@val,___xxtofl@arg
 28890  00405A  0060  F00C  F00D   	movff	___xxtofl@val+1,___xxtofl@arg+1
 28891  004060  0060  F010  F00E   	movff	___xxtofl@val+2,___xxtofl@arg+2
 28892  004066  0060  F014  F00F   	movff	___xxtofl@val+3,___xxtofl@arg+3
 28893  00406C                     l14754:
 28894  00406C  5002               	movf	___xxtofl@val^0,w,c
 28895  00406E  1003               	iorwf	(___xxtofl@val+1)^0,w,c
 28896  004070  1004               	iorwf	(___xxtofl@val+2)^0,w,c
 28897  004072  1005               	iorwf	(___xxtofl@val+3)^0,w,c
 28898  004074  A4D8               	btfss	status,2,c
 28899  004076  D009               	goto	l14760
 28900  004078  0E00               	movlw	0
 28901  00407A  6E02               	movwf	?___xxtofl^0,c
 28902  00407C  0E00               	movlw	0
 28903  00407E  6E03               	movwf	(?___xxtofl+1)^0,c
 28904  004080  0E00               	movlw	0
 28905  004082  6E04               	movwf	(?___xxtofl+2)^0,c
 28906  004084  0E00               	movlw	0
 28907  004086  6E05               	movwf	(?___xxtofl+3)^0,c
 28908  004088  0012               	return	
 28909  00408A                     l14760:
 28910  00408A  0E96               	movlw	150
 28911  00408C  6E0B               	movwf	___xxtofl@exp^0,c
 28912  00408E  D006               	goto	l14764
 28913  004090                     l14762:
 28914  004090  2A0B               	incf	___xxtofl@exp^0,f,c
 28915  004092  90D8               	bcf	status,0,c
 28916  004094  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 28917  004096  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 28918  004098  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 28919  00409A  320C               	rrcf	___xxtofl@arg^0,f,c
 28920  00409C                     l14764:
 28921  00409C  0E00               	movlw	0
 28922  00409E  140C               	andwf	___xxtofl@arg^0,w,c
 28923  0040A0  6E06               	movwf	??___xxtofl^0,c
 28924  0040A2  0E00               	movlw	0
 28925  0040A4  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 28926  0040A6  6E07               	movwf	(??___xxtofl+1)^0,c
 28927  0040A8  0E00               	movlw	0
 28928  0040AA  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 28929  0040AC  6E08               	movwf	(??___xxtofl+2)^0,c
 28930  0040AE  0EFE               	movlw	254
 28931  0040B0  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 28932  0040B2  6E09               	movwf	(??___xxtofl+3)^0,c
 28933  0040B4  5006               	movf	??___xxtofl^0,w,c
 28934  0040B6  1007               	iorwf	(??___xxtofl+1)^0,w,c
 28935  0040B8  1008               	iorwf	(??___xxtofl+2)^0,w,c
 28936  0040BA  1009               	iorwf	(??___xxtofl+3)^0,w,c
 28937  0040BC  B4D8               	btfsc	status,2,c
 28938  0040BE  D00D               	goto	l3893
 28939  0040C0  D7E7               	goto	l14762
 28940  0040C2                     l14766:
 28941  0040C2  2A0B               	incf	___xxtofl@exp^0,f,c
 28942  0040C4  0E01               	movlw	1
 28943  0040C6  260C               	addwf	___xxtofl@arg^0,f,c
 28944  0040C8  0E00               	movlw	0
 28945  0040CA  220D               	addwfc	(___xxtofl@arg+1)^0,f,c
 28946  0040CC  220E               	addwfc	(___xxtofl@arg+2)^0,f,c
 28947  0040CE  220F               	addwfc	(___xxtofl@arg+3)^0,f,c
 28948  0040D0  90D8               	bcf	status,0,c
 28949  0040D2  320F               	rrcf	(___xxtofl@arg+3)^0,f,c
 28950  0040D4  320E               	rrcf	(___xxtofl@arg+2)^0,f,c
 28951  0040D6  320D               	rrcf	(___xxtofl@arg+1)^0,f,c
 28952  0040D8  320C               	rrcf	___xxtofl@arg^0,f,c
 28953  0040DA                     l3893:
 28954  0040DA  0E00               	movlw	0
 28955  0040DC  140C               	andwf	___xxtofl@arg^0,w,c
 28956  0040DE  6E06               	movwf	??___xxtofl^0,c
 28957  0040E0  0E00               	movlw	0
 28958  0040E2  140D               	andwf	(___xxtofl@arg+1)^0,w,c
 28959  0040E4  6E07               	movwf	(??___xxtofl+1)^0,c
 28960  0040E6  0E00               	movlw	0
 28961  0040E8  140E               	andwf	(___xxtofl@arg+2)^0,w,c
 28962  0040EA  6E08               	movwf	(??___xxtofl+2)^0,c
 28963  0040EC  0EFF               	movlw	255
 28964  0040EE  140F               	andwf	(___xxtofl@arg+3)^0,w,c
 28965  0040F0  6E09               	movwf	(??___xxtofl+3)^0,c
 28966  0040F2  5006               	movf	??___xxtofl^0,w,c
 28967  0040F4  1007               	iorwf	(??___xxtofl+1)^0,w,c
 28968  0040F6  1008               	iorwf	(??___xxtofl+2)^0,w,c
 28969  0040F8  1009               	iorwf	(??___xxtofl+3)^0,w,c
 28970  0040FA  B4D8               	btfsc	status,2,c
 28971  0040FC  D007               	goto	l14774
 28972  0040FE  D7E1               	goto	l14766
 28973  004100                     l14772:
 28974  004100  060B               	decf	___xxtofl@exp^0,f,c
 28975  004102  90D8               	bcf	status,0,c
 28976  004104  360C               	rlcf	___xxtofl@arg^0,f,c
 28977  004106  360D               	rlcf	(___xxtofl@arg+1)^0,f,c
 28978  004108  360E               	rlcf	(___xxtofl@arg+2)^0,f,c
 28979  00410A  360F               	rlcf	(___xxtofl@arg+3)^0,f,c
 28980  00410C                     l14774:
 28981  00410C  BE0E               	btfsc	(___xxtofl@arg+2)^0,7,c
 28982  00410E  D003               	goto	u14290
 28983  004110  0E02               	movlw	2
 28984  004112  600B               	cpfslt	___xxtofl@exp^0,c
 28985  004114  D7F5               	goto	l14772
 28986  004116                     u14290:
 28987  004116  A00B               	btfss	___xxtofl@exp^0,0,c
 28988  004118  9E0E               	bcf	(___xxtofl@arg+2)^0,7,c
 28989  00411A  90D8               	bcf	status,0,c
 28990  00411C  320B               	rrcf	___xxtofl@exp^0,f,c
 28991  00411E  0060  F02C  F006   	movff	___xxtofl@exp,??___xxtofl
 28992  004124  6A07               	clrf	(??___xxtofl+1)^0,c
 28993  004126  6A08               	clrf	(??___xxtofl+2)^0,c
 28994  004128  6A09               	clrf	(??___xxtofl+3)^0,c
 28995  00412A  0060  F018  F009   	movff	??___xxtofl,??___xxtofl+3
 28996  004130  6A08               	clrf	(??___xxtofl+2)^0,c
 28997  004132  6A07               	clrf	(??___xxtofl+1)^0,c
 28998  004134  6A06               	clrf	??___xxtofl^0,c
 28999  004136  5006               	movf	??___xxtofl^0,w,c
 29000  004138  120C               	iorwf	___xxtofl@arg^0,f,c
 29001  00413A  5007               	movf	(??___xxtofl+1)^0,w,c
 29002  00413C  120D               	iorwf	(___xxtofl@arg+1)^0,f,c
 29003  00413E  5008               	movf	(??___xxtofl+2)^0,w,c
 29004  004140  120E               	iorwf	(___xxtofl@arg+2)^0,f,c
 29005  004142  5009               	movf	(??___xxtofl+3)^0,w,c
 29006  004144  120F               	iorwf	(___xxtofl@arg+3)^0,f,c
 29007  004146  500A               	movf	___xxtofl@sign^0,w,c
 29008  004148  A4D8               	btfss	status,2,c
 29009  00414A  AE05               	btfss	(___xxtofl@val+3)^0,7,c
 29010  00414C  D001               	goto	l14790
 29011  00414E  8E0F               	bsf	(___xxtofl@arg+3)^0,7,c
 29012  004150                     l14790:
 29013  004150  0060  F030  F002   	movff	___xxtofl@arg,?___xxtofl
 29014  004156  0060  F034  F003   	movff	___xxtofl@arg+1,?___xxtofl+1
 29015  00415C  0060  F038  F004   	movff	___xxtofl@arg+2,?___xxtofl+2
 29016  004162  0060  F03C  F005   	movff	___xxtofl@arg+3,?___xxtofl+3
 29017  004168  0012               	return		;funcret
 29018  00416A                     __end_of___xxtofl:
 29019                           	opt callstack 0
 29020                           
 29021 ;; *************** function ___flge *****************
 29022 ;; Defined at:
 29023 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 29024 ;; Parameters:    Size  Location     Type
 29025 ;;  ff1             4   15[COMRAM] unsigned char 
 29026 ;;  ff2             4   19[COMRAM] unsigned char 
 29027 ;; Auto vars:     Size  Location     Type
 29028 ;;		None
 29029 ;; Return value:  Size  Location     Type
 29030 ;;		None               void
 29031 ;; Registers used:
 29032 ;;		wreg, status,2, status,0
 29033 ;; Tracked objects:
 29034 ;;		On entry : 0/3D
 29035 ;;		On exit  : 0/0
 29036 ;;		Unchanged: 0/0
 29037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29038 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29040 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29041 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29042 ;;Total ram usage:       12 bytes
 29043 ;; Hardware stack levels used:    1
 29044 ;; Hardware stack levels required when called:    7
 29045 ;; This function calls:
 29046 ;;		Nothing
 29047 ;; This function is called by:
 29048 ;;		_setSignalBandwidth
 29049 ;; This function uses a non-reentrant model
 29050 ;;
 29051                           
 29052                           	psect	text184
 29053  006038                     __ptext184:
 29054                           	opt callstack 0
 29055  006038                     ___flge:
 29056                           	opt callstack 18
 29057                           
 29058                           ;incstack = 0
 29059  006038  0E00               	movlw	0
 29060  00603A  1410               	andwf	___flge@ff1^0,w,c
 29061  00603C  6E18               	movwf	??___flge^0,c
 29062  00603E  0E00               	movlw	0
 29063  006040  1411               	andwf	(___flge@ff1+1)^0,w,c
 29064  006042  6E19               	movwf	(??___flge+1)^0,c
 29065  006044  0E80               	movlw	128
 29066  006046  1412               	andwf	(___flge@ff1+2)^0,w,c
 29067  006048  6E1A               	movwf	(??___flge+2)^0,c
 29068  00604A  0E7F               	movlw	127
 29069  00604C  1413               	andwf	(___flge@ff1+3)^0,w,c
 29070  00604E  6E1B               	movwf	(??___flge+3)^0,c
 29071  006050  5018               	movf	??___flge^0,w,c
 29072  006052  1019               	iorwf	(??___flge+1)^0,w,c
 29073  006054  101A               	iorwf	(??___flge+2)^0,w,c
 29074  006056  101B               	iorwf	(??___flge+3)^0,w,c
 29075  006058  A4D8               	btfss	status,2,c
 29076  00605A  D008               	goto	l14714
 29077  00605C  0E00               	movlw	0
 29078  00605E  6E10               	movwf	___flge@ff1^0,c
 29079  006060  0E00               	movlw	0
 29080  006062  6E11               	movwf	(___flge@ff1+1)^0,c
 29081  006064  0E00               	movlw	0
 29082  006066  6E12               	movwf	(___flge@ff1+2)^0,c
 29083  006068  0E00               	movlw	0
 29084  00606A  6E13               	movwf	(___flge@ff1+3)^0,c
 29085  00606C                     l14714:
 29086  00606C  0E00               	movlw	0
 29087  00606E  1414               	andwf	___flge@ff2^0,w,c
 29088  006070  6E18               	movwf	??___flge^0,c
 29089  006072  0E00               	movlw	0
 29090  006074  1415               	andwf	(___flge@ff2+1)^0,w,c
 29091  006076  6E19               	movwf	(??___flge+1)^0,c
 29092  006078  0E80               	movlw	128
 29093  00607A  1416               	andwf	(___flge@ff2+2)^0,w,c
 29094  00607C  6E1A               	movwf	(??___flge+2)^0,c
 29095  00607E  0E7F               	movlw	127
 29096  006080  1417               	andwf	(___flge@ff2+3)^0,w,c
 29097  006082  6E1B               	movwf	(??___flge+3)^0,c
 29098  006084  5018               	movf	??___flge^0,w,c
 29099  006086  1019               	iorwf	(??___flge+1)^0,w,c
 29100  006088  101A               	iorwf	(??___flge+2)^0,w,c
 29101  00608A  101B               	iorwf	(??___flge+3)^0,w,c
 29102  00608C  A4D8               	btfss	status,2,c
 29103  00608E  D008               	goto	l14718
 29104  006090  0E00               	movlw	0
 29105  006092  6E14               	movwf	___flge@ff2^0,c
 29106  006094  0E00               	movlw	0
 29107  006096  6E15               	movwf	(___flge@ff2+1)^0,c
 29108  006098  0E00               	movlw	0
 29109  00609A  6E16               	movwf	(___flge@ff2+2)^0,c
 29110  00609C  0E00               	movlw	0
 29111  00609E  6E17               	movwf	(___flge@ff2+3)^0,c
 29112  0060A0                     l14718:
 29113  0060A0  AE13               	btfss	(___flge@ff1+3)^0,7,c
 29114  0060A2  D009               	goto	l14722
 29115  0060A4  6C10               	negf	___flge@ff1^0,c
 29116  0060A6  1E11               	comf	(___flge@ff1+1)^0,f,c
 29117  0060A8  B0D8               	btfsc	status,0,c
 29118  0060AA  2A11               	incf	(___flge@ff1+1)^0,f,c
 29119  0060AC  1E12               	comf	(___flge@ff1+2)^0,f,c
 29120  0060AE  B0D8               	btfsc	status,0,c
 29121  0060B0  2A12               	incf	(___flge@ff1+2)^0,f,c
 29122  0060B2  0E80               	movlw	128
 29123  0060B4  5613               	subfwb	(___flge@ff1+3)^0,f,c
 29124  0060B6                     l14722:
 29125  0060B6  AE17               	btfss	(___flge@ff2+3)^0,7,c
 29126  0060B8  D009               	goto	l3496
 29127  0060BA  6C14               	negf	___flge@ff2^0,c
 29128  0060BC  1E15               	comf	(___flge@ff2+1)^0,f,c
 29129  0060BE  B0D8               	btfsc	status,0,c
 29130  0060C0  2A15               	incf	(___flge@ff2+1)^0,f,c
 29131  0060C2  1E16               	comf	(___flge@ff2+2)^0,f,c
 29132  0060C4  B0D8               	btfsc	status,0,c
 29133  0060C6  2A16               	incf	(___flge@ff2+2)^0,f,c
 29134  0060C8  0E80               	movlw	128
 29135  0060CA  5617               	subfwb	(___flge@ff2+3)^0,f,c
 29136  0060CC                     l3496:
 29137  0060CC  0E00               	movlw	0
 29138  0060CE  1A10               	xorwf	___flge@ff1^0,f,c
 29139  0060D0  0E00               	movlw	0
 29140  0060D2  1A11               	xorwf	(___flge@ff1+1)^0,f,c
 29141  0060D4  0E00               	movlw	0
 29142  0060D6  1A12               	xorwf	(___flge@ff1+2)^0,f,c
 29143  0060D8  0E80               	movlw	128
 29144  0060DA  1A13               	xorwf	(___flge@ff1+3)^0,f,c
 29145  0060DC  0E00               	movlw	0
 29146  0060DE  1A14               	xorwf	___flge@ff2^0,f,c
 29147  0060E0  0E00               	movlw	0
 29148  0060E2  1A15               	xorwf	(___flge@ff2+1)^0,f,c
 29149  0060E4  0E00               	movlw	0
 29150  0060E6  1A16               	xorwf	(___flge@ff2+2)^0,f,c
 29151  0060E8  0E80               	movlw	128
 29152  0060EA  1A17               	xorwf	(___flge@ff2+3)^0,f,c
 29153  0060EC  5014               	movf	___flge@ff2^0,w,c
 29154  0060EE  5C10               	subwf	___flge@ff1^0,w,c
 29155  0060F0  5015               	movf	(___flge@ff2+1)^0,w,c
 29156  0060F2  5811               	subwfb	(___flge@ff1+1)^0,w,c
 29157  0060F4  5016               	movf	(___flge@ff2+2)^0,w,c
 29158  0060F6  5812               	subwfb	(___flge@ff1+2)^0,w,c
 29159  0060F8  5017               	movf	(___flge@ff2+3)^0,w,c
 29160  0060FA  5813               	subwfb	(___flge@ff1+3)^0,w,c
 29161  0060FC  B0D8               	btfsc	status,0,c
 29162  0060FE  D002               	goto	l14728
 29163  006100  90D8               	bcf	status,0,c
 29164  006102  0012               	return	
 29165  006104                     l14728:
 29166  006104  80D8               	bsf	status,0,c
 29167  006106  0012               	return		;funcret
 29168  006108                     __end_of___flge:
 29169                           	opt callstack 0
 29170                           
 29171 ;; *************** function _setPreambleLength *****************
 29172 ;; Defined at:
 29173 ;;		line 316 in file "../phy/sx1216/phy_src/phy.c"
 29174 ;; Parameters:    Size  Location     Type
 29175 ;;  length          2   16[COMRAM] unsigned short 
 29176 ;; Auto vars:     Size  Location     Type
 29177 ;;		None
 29178 ;; Return value:  Size  Location     Type
 29179 ;;                  1    wreg      void 
 29180 ;; Registers used:
 29181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29182 ;; Tracked objects:
 29183 ;;		On entry : 3F/3D
 29184 ;;		On exit  : 3F/3D
 29185 ;;		Unchanged: 0/0
 29186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29190 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29191 ;;Total ram usage:        2 bytes
 29192 ;; Hardware stack levels used:    1
 29193 ;; Hardware stack levels required when called:   11
 29194 ;; This function calls:
 29195 ;;		_SX1276Write
 29196 ;; This function is called by:
 29197 ;;		_initRadio
 29198 ;; This function uses a non-reentrant model
 29199 ;;
 29200                           
 29201                           	psect	text185
 29202  008DF6                     __ptext185:
 29203                           	opt callstack 0
 29204  008DF6                     _setPreambleLength:
 29205                           	opt callstack 15
 29206                           
 29207                           ; BSR set to: 61
 29208                           ;../phy/sx1216/phy_src/phy.c: 316: void setPreambleLength(uint16_t length);../phy/sx1216
      +                          /phy_src/phy.c: 317: {;../phy/sx1216/phy_src/phy.c: 318:   SX1276Write(0x20, (uint8_t)(l
      +                          ength >> 8));
 29209                           
 29210                           ;incstack = 0
 29211  008DF6  0060  F048  F00F   	movff	setPreambleLength@length+1,SX1276Write@data
 29212  008DFC  0E20               	movlw	32
 29213  008DFE  EC94  F047         	call	_SX1276Write
 29214                           
 29215                           ;../phy/sx1216/phy_src/phy.c: 319:   SX1276Write(0x21, (uint8_t)(length >> 0));
 29216  008E02  0060  F044  F00F   	movff	setPreambleLength@length,SX1276Write@data
 29217  008E08  0E21               	movlw	33
 29218  008E0A  EC94  F047         	call	_SX1276Write
 29219                           
 29220                           ; BSR set to: 61
 29221  008E0E  0012               	return		;funcret
 29222  008E10                     __end_of_setPreambleLength:
 29223                           	opt callstack 0
 29224                           
 29225 ;; *************** function _setFrequency *****************
 29226 ;; Defined at:
 29227 ;;		line 160 in file "../phy/sx1216/phy_src/phy.c"
 29228 ;; Parameters:    Size  Location     Type
 29229 ;;  frequency       4   34[COMRAM] unsigned long 
 29230 ;; Auto vars:     Size  Location     Type
 29231 ;;  num             4   42[COMRAM] unsigned long 
 29232 ;;  num_mod         4   38[COMRAM] unsigned long 
 29233 ;; Return value:  Size  Location     Type
 29234 ;;                  4   34[COMRAM] unsigned long 
 29235 ;; Registers used:
 29236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29237 ;; Tracked objects:
 29238 ;;		On entry : 0/0
 29239 ;;		On exit  : 3F/3D
 29240 ;;		Unchanged: 0/0
 29241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29242 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29243 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29245 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29246 ;;Total ram usage:       12 bytes
 29247 ;; Hardware stack levels used:    1
 29248 ;; Hardware stack levels required when called:   11
 29249 ;; This function calls:
 29250 ;;		_SX1276Write
 29251 ;;		___lldiv
 29252 ;;		___llmod
 29253 ;; This function is called by:
 29254 ;;		_initRadio
 29255 ;;		_PHY_SetChannel
 29256 ;; This function uses a non-reentrant model
 29257 ;;
 29258                           
 29259                           	psect	text186
 29260  004918                     __ptext186:
 29261                           	opt callstack 0
 29262  004918                     _setFrequency:
 29263                           	opt callstack 15
 29264                           
 29265                           ;../phy/sx1216/phy_src/phy.c: 160: uint32_t setFrequency(uint32_t frequency);../phy/sx12
      +                          16/phy_src/phy.c: 161: {;../phy/sx1216/phy_src/phy.c: 162:     uint32_t num, num_mod;;..
      +                          /phy/sx1216/phy_src/phy.c: 170:     num = frequency / 15625;
 29266                           
 29267                           ; BSR set to: 61
 29268                           ;incstack = 0
 29269  004918  0060  F08C  F016   	movff	setFrequency@frequency,___lldiv@dividend
 29270  00491E  0060  F090  F017   	movff	setFrequency@frequency+1,___lldiv@dividend+1
 29271  004924  0060  F094  F018   	movff	setFrequency@frequency+2,___lldiv@dividend+2
 29272  00492A  0060  F098  F019   	movff	setFrequency@frequency+3,___lldiv@dividend+3
 29273  004930  0E09               	movlw	9
 29274  004932  6E1A               	movwf	___lldiv@divisor^0,c
 29275  004934  0E3D               	movlw	61
 29276  004936  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 29277  004938  0E00               	movlw	0
 29278  00493A  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 29279  00493C  0E00               	movlw	0
 29280  00493E  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 29281  004940  EC2A  F039         	call	___lldiv	;wreg free
 29282  004944  0060  F058  F02B   	movff	?___lldiv,setFrequency@num
 29283  00494A  0060  F05C  F02C   	movff	?___lldiv+1,setFrequency@num+1
 29284  004950  0060  F060  F02D   	movff	?___lldiv+2,setFrequency@num+2
 29285  004956  0060  F064  F02E   	movff	?___lldiv+3,setFrequency@num+3
 29286                           
 29287                           ;../phy/sx1216/phy_src/phy.c: 171:     num_mod = frequency % 15625;
 29288  00495C  0060  F08C  F002   	movff	setFrequency@frequency,___llmod@dividend
 29289  004962  0060  F090  F003   	movff	setFrequency@frequency+1,___llmod@dividend+1
 29290  004968  0060  F094  F004   	movff	setFrequency@frequency+2,___llmod@dividend+2
 29291  00496E  0060  F098  F005   	movff	setFrequency@frequency+3,___llmod@dividend+3
 29292  004974  0E09               	movlw	9
 29293  004976  6E06               	movwf	___llmod@divisor^0,c
 29294  004978  0E3D               	movlw	61
 29295  00497A  6E07               	movwf	(___llmod@divisor+1)^0,c
 29296  00497C  0E00               	movlw	0
 29297  00497E  6E08               	movwf	(___llmod@divisor+2)^0,c
 29298  004980  0E00               	movlw	0
 29299  004982  6E09               	movwf	(___llmod@divisor+3)^0,c
 29300  004984  EC2F  F03B         	call	___llmod	;wreg free
 29301  004988  0060  F008  F027   	movff	?___llmod,setFrequency@num_mod
 29302  00498E  0060  F00C  F028   	movff	?___llmod+1,setFrequency@num_mod+1
 29303  004994  0060  F010  F029   	movff	?___llmod+2,setFrequency@num_mod+2
 29304  00499A  0060  F014  F02A   	movff	?___llmod+3,setFrequency@num_mod+3
 29305                           
 29306                           ;../phy/sx1216/phy_src/phy.c: 175:     num <<= 8;
 29307  0049A0  0060  F0B4  F02E   	movff	setFrequency@num+2,setFrequency@num+3
 29308  0049A6  0060  F0B0  F02D   	movff	setFrequency@num+1,setFrequency@num+2
 29309  0049AC  0060  F0AC  F02C   	movff	setFrequency@num,setFrequency@num+1
 29310  0049B2  6A2B               	clrf	setFrequency@num^0,c
 29311                           
 29312                           ;../phy/sx1216/phy_src/phy.c: 176:     num_mod <<= 8;
 29313  0049B4  0060  F0A4  F02A   	movff	setFrequency@num_mod+2,setFrequency@num_mod+3
 29314  0049BA  0060  F0A0  F029   	movff	setFrequency@num_mod+1,setFrequency@num_mod+2
 29315  0049C0  0060  F09C  F028   	movff	setFrequency@num_mod,setFrequency@num_mod+1
 29316  0049C6  6A27               	clrf	setFrequency@num_mod^0,c
 29317                           
 29318                           ;../phy/sx1216/phy_src/phy.c: 180:     num_mod = num_mod / 15625;
 29319  0049C8  0060  F09C  F016   	movff	setFrequency@num_mod,___lldiv@dividend
 29320  0049CE  0060  F0A0  F017   	movff	setFrequency@num_mod+1,___lldiv@dividend+1
 29321  0049D4  0060  F0A4  F018   	movff	setFrequency@num_mod+2,___lldiv@dividend+2
 29322  0049DA  0060  F0A8  F019   	movff	setFrequency@num_mod+3,___lldiv@dividend+3
 29323  0049E0  0E09               	movlw	9
 29324  0049E2  6E1A               	movwf	___lldiv@divisor^0,c
 29325  0049E4  0E3D               	movlw	61
 29326  0049E6  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 29327  0049E8  0E00               	movlw	0
 29328  0049EA  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 29329  0049EC  0E00               	movlw	0
 29330  0049EE  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 29331  0049F0  EC2A  F039         	call	___lldiv	;wreg free
 29332  0049F4  0060  F058  F027   	movff	?___lldiv,setFrequency@num_mod
 29333  0049FA  0060  F05C  F028   	movff	?___lldiv+1,setFrequency@num_mod+1
 29334  004A00  0060  F060  F029   	movff	?___lldiv+2,setFrequency@num_mod+2
 29335  004A06  0060  F064  F02A   	movff	?___lldiv+3,setFrequency@num_mod+3
 29336                           
 29337                           ;../phy/sx1216/phy_src/phy.c: 181:     num += num_mod;
 29338  004A0C  5027               	movf	setFrequency@num_mod^0,w,c
 29339  004A0E  262B               	addwf	setFrequency@num^0,f,c
 29340  004A10  5028               	movf	(setFrequency@num_mod+1)^0,w,c
 29341  004A12  222C               	addwfc	(setFrequency@num+1)^0,f,c
 29342  004A14  5029               	movf	(setFrequency@num_mod+2)^0,w,c
 29343  004A16  222D               	addwfc	(setFrequency@num+2)^0,f,c
 29344  004A18  502A               	movf	(setFrequency@num_mod+3)^0,w,c
 29345  004A1A  222E               	addwfc	(setFrequency@num+3)^0,f,c
 29346                           
 29347                           ;../phy/sx1216/phy_src/phy.c: 184:     SX1276Write(0x06, (uint8_t)(num >> 16));
 29348  004A1C  0060  F0B4  F00F   	movff	setFrequency@num+2,SX1276Write@data
 29349  004A22  0E06               	movlw	6
 29350  004A24  EC94  F047         	call	_SX1276Write
 29351                           
 29352                           ; BSR set to: 61
 29353                           ;../phy/sx1216/phy_src/phy.c: 185:     SX1276Write(0x07, (uint8_t)(num >> 8));
 29354  004A28  0060  F0B0  F00F   	movff	setFrequency@num+1,SX1276Write@data
 29355  004A2E  0E07               	movlw	7
 29356  004A30  EC94  F047         	call	_SX1276Write
 29357                           
 29358                           ; BSR set to: 61
 29359                           ;../phy/sx1216/phy_src/phy.c: 186:     SX1276Write(0x08, (uint8_t)(num));
 29360  004A34  0060  F0AC  F00F   	movff	setFrequency@num,SX1276Write@data
 29361  004A3A  0E08               	movlw	8
 29362  004A3C  EC94  F047         	call	_SX1276Write
 29363                           
 29364                           ; BSR set to: 61
 29365  004A40  0012               	return		;funcret
 29366  004A42                     __end_of_setFrequency:
 29367                           	opt callstack 0
 29368                           
 29369 ;; *************** function _setCodingRate4 *****************
 29370 ;; Defined at:
 29371 ;;		line 297 in file "../phy/sx1216/phy_src/phy.c"
 29372 ;; Parameters:    Size  Location     Type
 29373 ;;  denominator     1    wreg     unsigned char 
 29374 ;; Auto vars:     Size  Location     Type
 29375 ;;  denominator     1   18[COMRAM] unsigned char 
 29376 ;;  cr              1   17[COMRAM] unsigned char 
 29377 ;; Return value:  Size  Location     Type
 29378 ;;                  1    wreg      void 
 29379 ;; Registers used:
 29380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29381 ;; Tracked objects:
 29382 ;;		On entry : 3F/3D
 29383 ;;		On exit  : 3F/3D
 29384 ;;		Unchanged: 0/0
 29385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29387 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29388 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29389 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29390 ;;Total ram usage:        3 bytes
 29391 ;; Hardware stack levels used:    1
 29392 ;; Hardware stack levels required when called:   11
 29393 ;; This function calls:
 29394 ;;		_SX1276Read
 29395 ;;		_SX1276Write
 29396 ;; This function is called by:
 29397 ;;		_initRadio
 29398 ;; This function uses a non-reentrant model
 29399 ;;
 29400                           
 29401                           	psect	text187
 29402  0087DA                     __ptext187:
 29403                           	opt callstack 0
 29404  0087DA                     _setCodingRate4:
 29405                           	opt callstack 15
 29406                           
 29407                           ; BSR set to: 61
 29408                           ;incstack = 0
 29409                           ;setCodingRate4@denominator stored from wreg
 29410  0087DA  6E13               	movwf	setCodingRate4@denominator^0,c
 29411                           
 29412                           ;../phy/sx1216/phy_src/phy.c: 297: void setCodingRate4(uint8_t denominator);../phy/sx121
      +                          6/phy_src/phy.c: 298: {;../phy/sx1216/phy_src/phy.c: 299:   if (denominator < 5) {
 29413  0087DC  0E05               	movlw	5
 29414  0087DE  6013               	cpfslt	setCodingRate4@denominator^0,c
 29415  0087E0  D002               	goto	l15096
 29416                           
 29417                           ;../phy/sx1216/phy_src/phy.c: 300:     denominator = 5;
 29418  0087E2  0E05               	movlw	5
 29419  0087E4  D004               	goto	L27
 29420  0087E6                     l15096:
 29421  0087E6  0E08               	movlw	8
 29422  0087E8  6413               	cpfsgt	setCodingRate4@denominator^0,c
 29423  0087EA  D002               	goto	l15100
 29424                           
 29425                           ;../phy/sx1216/phy_src/phy.c: 302:     denominator = 8;
 29426  0087EC  0E08               	movlw	8
 29427  0087EE                     L27:
 29428  0087EE  6E13               	movwf	setCodingRate4@denominator^0,c
 29429  0087F0                     l15100:
 29430                           
 29431                           ;../phy/sx1216/phy_src/phy.c: 305:   uint8_t cr = denominator - 4;
 29432  0087F0  5013               	movf	setCodingRate4@denominator^0,w,c
 29433  0087F2  0FFC               	addlw	252
 29434  0087F4  6E12               	movwf	setCodingRate4@cr^0,c
 29435                           
 29436                           ;../phy/sx1216/phy_src/phy.c: 307:   SX1276Write(0x1D, (SX1276Read(0x1D) & 0xf1) | (cr <
      +                          < 1));
 29437  0087F6  90D8               	bcf	status,0,c
 29438  0087F8  3412               	rlcf	setCodingRate4@cr^0,w,c
 29439  0087FA  6E11               	movwf	??_setCodingRate4^0,c
 29440  0087FC  0E1D               	movlw	29
 29441  0087FE  EC76  F047         	call	_SX1276Read
 29442  008802  0BF1               	andlw	241
 29443  008804  1011               	iorwf	??_setCodingRate4^0,w,c
 29444  008806  6E0F               	movwf	SX1276Write@data^0,c
 29445  008808  0E1D               	movlw	29
 29446  00880A  EC94  F047         	call	_SX1276Write
 29447                           
 29448                           ; BSR set to: 61
 29449  00880E  0012               	return		;funcret
 29450  008810                     __end_of_setCodingRate4:
 29451                           	opt callstack 0
 29452                           
 29453 ;; *************** function _receive *****************
 29454 ;; Defined at:
 29455 ;;		line 402 in file "../phy/sx1216/phy_src/phy.c"
 29456 ;; Parameters:    Size  Location     Type
 29457 ;;  size            1    wreg     unsigned char 
 29458 ;; Auto vars:     Size  Location     Type
 29459 ;;  size            1   16[COMRAM] unsigned char 
 29460 ;; Return value:  Size  Location     Type
 29461 ;;                  1    wreg      void 
 29462 ;; Registers used:
 29463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29464 ;; Tracked objects:
 29465 ;;		On entry : 0/3D
 29466 ;;		On exit  : 3F/3D
 29467 ;;		Unchanged: 0/0
 29468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29472 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29473 ;;Total ram usage:        1 bytes
 29474 ;; Hardware stack levels used:    1
 29475 ;; Hardware stack levels required when called:   12
 29476 ;; This function calls:
 29477 ;;		_SX1276Write
 29478 ;;		_explicitHeaderMode
 29479 ;;		_implicitHeaderMode
 29480 ;; This function is called by:
 29481 ;;		_initRadio
 29482 ;;		_DIO0_Receive_ISR
 29483 ;;		_radio_engine
 29484 ;;		_PHY_SetRxState
 29485 ;; This function uses a non-reentrant model
 29486 ;;
 29487                           
 29488                           	psect	text188
 29489  0084E8                     __ptext188:
 29490                           	opt callstack 0
 29491  0084E8                     _receive:
 29492                           	opt callstack 14
 29493                           
 29494                           ; BSR set to: 61
 29495                           ;incstack = 0
 29496                           ;receive@size stored from wreg
 29497  0084E8  6E11               	movwf	receive@size^0,c
 29498                           
 29499                           ;../phy/sx1216/phy_src/phy.c: 402: void receive(uint8_t size);../phy/sx1216/phy_src/phy.
      +                          c: 403: {;../phy/sx1216/phy_src/phy.c: 404:   if (size > 0) {
 29500  0084EA  5011               	movf	receive@size^0,w,c
 29501  0084EC  B4D8               	btfsc	status,2,c
 29502  0084EE  D009               	goto	l15112
 29503                           
 29504                           ;../phy/sx1216/phy_src/phy.c: 405:     implicitHeaderMode();
 29505  0084F0  EC52  F047         	call	_implicitHeaderMode	;wreg free
 29506                           
 29507                           ;../phy/sx1216/phy_src/phy.c: 407:     SX1276Write(0x22, size & 0xff);
 29508  0084F4  0060  F044  F00F   	movff	receive@size,SX1276Write@data
 29509  0084FA  0E22               	movlw	34
 29510  0084FC  EC94  F047         	call	_SX1276Write
 29511                           
 29512                           ;../phy/sx1216/phy_src/phy.c: 408:   } else {
 29513  008500  D002               	goto	l2624
 29514  008502                     l15112:
 29515                           
 29516                           ;../phy/sx1216/phy_src/phy.c: 409:     explicitHeaderMode();
 29517  008502  EC5E  F047         	call	_explicitHeaderMode	;wreg free
 29518  008506                     l2624:
 29519                           
 29520                           ; BSR set to: 61
 29521                           ;../phy/sx1216/phy_src/phy.c: 412:   SX1276Write(0x0D, 0);
 29522  008506  0E00               	movlw	0
 29523  008508  6E0F               	movwf	SX1276Write@data^0,c
 29524  00850A  0E0D               	movlw	13
 29525  00850C  EC94  F047         	call	_SX1276Write
 29526                           
 29527                           ;../phy/sx1216/phy_src/phy.c: 413:   SX1276Write(0x12, 0xFF);
 29528  008510  0EFF               	movlw	255
 29529  008512  6E0F               	movwf	SX1276Write@data^0,c
 29530  008514  0E12               	movlw	18
 29531  008516  EC94  F047         	call	_SX1276Write
 29532                           
 29533                           ;../phy/sx1216/phy_src/phy.c: 414:   SX1276Write(0x01,0x80 | 0x05);
 29534  00851A  0E85               	movlw	133
 29535  00851C  6E0F               	movwf	SX1276Write@data^0,c
 29536  00851E  0E01               	movlw	1
 29537  008520  EC94  F047         	call	_SX1276Write
 29538                           
 29539                           ; BSR set to: 61
 29540  008524  0012               	return		;funcret
 29541  008526                     __end_of_receive:
 29542                           	opt callstack 0
 29543                           
 29544 ;; *************** function _implicitHeaderMode *****************
 29545 ;; Defined at:
 29546 ;;		line 388 in file "../phy/sx1216/phy_src/phy.c"
 29547 ;; Parameters:    Size  Location     Type
 29548 ;;		None
 29549 ;; Auto vars:     Size  Location     Type
 29550 ;;		None
 29551 ;; Return value:  Size  Location     Type
 29552 ;;                  1    wreg      void 
 29553 ;; Registers used:
 29554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29555 ;; Tracked objects:
 29556 ;;		On entry : 0/3D
 29557 ;;		On exit  : 3F/3D
 29558 ;;		Unchanged: 0/0
 29559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29564 ;;Total ram usage:        0 bytes
 29565 ;; Hardware stack levels used:    1
 29566 ;; Hardware stack levels required when called:   11
 29567 ;; This function calls:
 29568 ;;		_SX1276Read
 29569 ;;		_SX1276Write
 29570 ;; This function is called by:
 29571 ;;		_receive
 29572 ;; This function uses a non-reentrant model
 29573 ;;
 29574                           
 29575                           	psect	text189
 29576  008EA4                     __ptext189:
 29577                           	opt callstack 0
 29578  008EA4                     _implicitHeaderMode:
 29579                           	opt callstack 14
 29580                           
 29581                           ;../phy/sx1216/phy_src/phy.c: 390:   _implicitHeaderMode = 1;
 29582                           
 29583                           ; BSR set to: 61
 29584                           ;incstack = 0
 29585  008EA4  0E01               	movlw	1
 29586  008EA6  0100               	movlb	0	; () banked
 29587  008EA8  6FD7               	movwf	__implicitHeaderMode& (0+255),b
 29588                           
 29589                           ; BSR set to: 0
 29590                           ;../phy/sx1216/phy_src/phy.c: 392:   SX1276Write(0x1D, SX1276Read(0x1D) | 0x01);
 29591  008EAA  0E1D               	movlw	29
 29592  008EAC  EC76  F047         	call	_SX1276Read
 29593  008EB0  0901               	iorlw	1
 29594  008EB2  6E0F               	movwf	SX1276Write@data^0,c
 29595  008EB4  0E1D               	movlw	29
 29596  008EB6  EC94  F047         	call	_SX1276Write
 29597                           
 29598                           ; BSR set to: 61
 29599  008EBA  0012               	return		;funcret
 29600  008EBC                     __end_of_implicitHeaderMode:
 29601                           	opt callstack 0
 29602                           
 29603 ;; *************** function _explicitHeaderMode *****************
 29604 ;; Defined at:
 29605 ;;		line 374 in file "../phy/sx1216/phy_src/phy.c"
 29606 ;; Parameters:    Size  Location     Type
 29607 ;;		None
 29608 ;; Auto vars:     Size  Location     Type
 29609 ;;		None
 29610 ;; Return value:  Size  Location     Type
 29611 ;;                  1    wreg      void 
 29612 ;; Registers used:
 29613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29614 ;; Tracked objects:
 29615 ;;		On entry : 0/3D
 29616 ;;		On exit  : 3F/3D
 29617 ;;		Unchanged: 0/0
 29618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29623 ;;Total ram usage:        0 bytes
 29624 ;; Hardware stack levels used:    1
 29625 ;; Hardware stack levels required when called:   11
 29626 ;; This function calls:
 29627 ;;		_SX1276Read
 29628 ;;		_SX1276Write
 29629 ;; This function is called by:
 29630 ;;		_receive
 29631 ;;		_initRadio
 29632 ;;		_PHY_DataReq
 29633 ;; This function uses a non-reentrant model
 29634 ;;
 29635                           
 29636                           	psect	text190
 29637  008EBC                     __ptext190:
 29638                           	opt callstack 0
 29639  008EBC                     _explicitHeaderMode:
 29640                           	opt callstack 14
 29641                           
 29642                           ;../phy/sx1216/phy_src/phy.c: 376:   _implicitHeaderMode = 0;
 29643                           
 29644                           ; BSR set to: 61
 29645                           ;incstack = 0
 29646  008EBC  0E00               	movlw	0
 29647  008EBE  0100               	movlb	0	; () banked
 29648  008EC0  6FD7               	movwf	__implicitHeaderMode& (0+255),b
 29649                           
 29650                           ; BSR set to: 0
 29651                           ;../phy/sx1216/phy_src/phy.c: 378:   SX1276Write(0x1D, SX1276Read(0x1D) & 0xfe);
 29652  008EC2  0E1D               	movlw	29
 29653  008EC4  EC76  F047         	call	_SX1276Read
 29654  008EC8  0BFE               	andlw	254
 29655  008ECA  6E0F               	movwf	SX1276Write@data^0,c
 29656  008ECC  0E1D               	movlw	29
 29657  008ECE  EC94  F047         	call	_SX1276Write
 29658                           
 29659                           ; BSR set to: 61
 29660  008ED2  0012               	return		;funcret
 29661  008ED4                     __end_of_explicitHeaderMode:
 29662                           	opt callstack 0
 29663                           
 29664 ;; *************** function _enableCrc *****************
 29665 ;; Defined at:
 29666 ;;		line 351 in file "../phy/sx1216/phy_src/phy.c"
 29667 ;; Parameters:    Size  Location     Type
 29668 ;;		None
 29669 ;; Auto vars:     Size  Location     Type
 29670 ;;		None
 29671 ;; Return value:  Size  Location     Type
 29672 ;;                  1    wreg      void 
 29673 ;; Registers used:
 29674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29675 ;; Tracked objects:
 29676 ;;		On entry : 3F/3D
 29677 ;;		On exit  : 3F/3D
 29678 ;;		Unchanged: 0/0
 29679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29684 ;;Total ram usage:        0 bytes
 29685 ;; Hardware stack levels used:    1
 29686 ;; Hardware stack levels required when called:   11
 29687 ;; This function calls:
 29688 ;;		_SX1276Read
 29689 ;;		_SX1276Write
 29690 ;; This function is called by:
 29691 ;;		_initRadio
 29692 ;; This function uses a non-reentrant model
 29693 ;;
 29694                           
 29695                           	psect	text191
 29696  008F16                     __ptext191:
 29697                           	opt callstack 0
 29698  008F16                     _enableCrc:
 29699                           	opt callstack 15
 29700                           
 29701                           ; BSR set to: 61
 29702                           ;../phy/sx1216/phy_src/phy.c: 353:   SX1276Write(0x1E, SX1276Read(0x1E) | 0x04);
 29703                           
 29704                           ; BSR set to: 61
 29705                           ;incstack = 0
 29706  008F16  0E1E               	movlw	30
 29707  008F18  EC76  F047         	call	_SX1276Read
 29708  008F1C  0904               	iorlw	4
 29709  008F1E  6E0F               	movwf	SX1276Write@data^0,c
 29710  008F20  0E1E               	movlw	30
 29711  008F22  EC94  F047         	call	_SX1276Write
 29712                           
 29713                           ; BSR set to: 61
 29714  008F26  0012               	return		;funcret
 29715  008F28                     __end_of_enableCrc:
 29716                           	opt callstack 0
 29717                           
 29718 ;; *************** function _SX1276Write *****************
 29719 ;; Defined at:
 29720 ;;		line 45 in file "../phy/sx1216/phy_src/phy.c"
 29721 ;; Parameters:    Size  Location     Type
 29722 ;;  addr            1    wreg     unsigned char 
 29723 ;;  data            1   14[COMRAM] unsigned char 
 29724 ;; Auto vars:     Size  Location     Type
 29725 ;;  addr            1   15[COMRAM] unsigned char 
 29726 ;; Return value:  Size  Location     Type
 29727 ;;                  1    wreg      void 
 29728 ;; Registers used:
 29729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29730 ;; Tracked objects:
 29731 ;;		On entry : 0/0
 29732 ;;		On exit  : 3F/3D
 29733 ;;		Unchanged: 0/0
 29734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29735 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29738 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29739 ;;Total ram usage:        2 bytes
 29740 ;; Hardware stack levels used:    1
 29741 ;; Hardware stack levels required when called:   10
 29742 ;; This function calls:
 29743 ;;		_SX1276WriteBuffer
 29744 ;; This function is called by:
 29745 ;;		_idle
 29746 ;;		_setTxPower
 29747 ;;		_setFrequency
 29748 ;;		_setSpreadingFactor
 29749 ;;		_setSignalBandwidth
 29750 ;;		_setCodingRate4
 29751 ;;		_setPreambleLength
 29752 ;;		_setSyncWord
 29753 ;;		_enableCrc
 29754 ;;		_explicitHeaderMode
 29755 ;;		_implicitHeaderMode
 29756 ;;		_receive
 29757 ;;		_initRadio
 29758 ;;		_cad
 29759 ;;		_start_radio_cad
 29760 ;;		_DIO0_Receive_ISR
 29761 ;;		_PHY_DataReq
 29762 ;; This function uses a non-reentrant model
 29763 ;;
 29764                           
 29765                           	psect	text192
 29766  008F28                     __ptext192:
 29767                           	opt callstack 0
 29768  008F28                     _SX1276Write:
 29769                           	opt callstack 15
 29770                           
 29771                           ; BSR set to: 61
 29772                           ;incstack = 0
 29773                           ;SX1276Write@addr stored from wreg
 29774  008F28  6E10               	movwf	SX1276Write@addr^0,c
 29775                           
 29776                           ;../phy/sx1216/phy_src/phy.c: 45: static void SX1276Write( uint8_t addr, uint8_t data );
      +                          ../phy/sx1216/phy_src/phy.c: 46: {;../phy/sx1216/phy_src/phy.c: 47:     SX1276WriteBuffe
      +                          r( addr, &data, 1 );
 29777  008F2A  0E0F               	movlw	low SX1276Write@data
 29778  008F2C  6E09               	movwf	SX1276WriteBuffer@buffer^0,c
 29779  008F2E  0E01               	movlw	1
 29780  008F30  6E0A               	movwf	SX1276WriteBuffer@size^0,c
 29781  008F32  5010               	movf	SX1276Write@addr^0,w,c
 29782  008F34  ECA0  F045         	call	_SX1276WriteBuffer
 29783                           
 29784                           ; BSR set to: 61
 29785  008F38  0012               	return		;funcret
 29786  008F3A                     __end_of_SX1276Write:
 29787                           	opt callstack 0
 29788                           
 29789 ;; *************** function _SX1276WriteBuffer *****************
 29790 ;; Defined at:
 29791 ;;		line 75 in file "../phy/sx1216/phy_src/phy.c"
 29792 ;; Parameters:    Size  Location     Type
 29793 ;;  addr            1    wreg     unsigned char 
 29794 ;;  buffer          1    8[COMRAM] PTR unsigned char 
 29795 ;;		 -> SX1276Write@data(1), 
 29796 ;;  size            1    9[COMRAM] unsigned char 
 29797 ;; Auto vars:     Size  Location     Type
 29798 ;;  addr            1   10[COMRAM] unsigned char 
 29799 ;;  i               1    0        unsigned char 
 29800 ;; Return value:  Size  Location     Type
 29801 ;;                  1    wreg      void 
 29802 ;; Registers used:
 29803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29804 ;; Tracked objects:
 29805 ;;		On entry : 0/0
 29806 ;;		On exit  : 3F/3D
 29807 ;;		Unchanged: 0/0
 29808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29812 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29813 ;;Total ram usage:        3 bytes
 29814 ;; Hardware stack levels used:    1
 29815 ;; Hardware stack levels required when called:    9
 29816 ;; This function calls:
 29817 ;;		_SPI1_ExchangeByte
 29818 ;;		_SPI1_WriteBlock
 29819 ;; This function is called by:
 29820 ;;		_SX1276Write
 29821 ;; This function uses a non-reentrant model
 29822 ;;
 29823                           
 29824                           	psect	text193
 29825  008B40                     __ptext193:
 29826                           	opt callstack 0
 29827  008B40                     _SX1276WriteBuffer:
 29828                           	opt callstack 15
 29829                           
 29830                           ; BSR set to: 61
 29831                           ;incstack = 0
 29832                           ;SX1276WriteBuffer@addr stored from wreg
 29833  008B40  6E0B               	movwf	SX1276WriteBuffer@addr^0,c
 29834                           
 29835                           ;../phy/sx1216/phy_src/phy.c: 75: static void SX1276WriteBuffer( uint8_t addr, uint8_t *
      +                          buffer, uint8_t size );../phy/sx1216/phy_src/phy.c: 76: {;../phy/sx1216/phy_src/phy.c: 7
      +                          7:     uint8_t i;;../phy/sx1216/phy_src/phy.c: 79:     do { LATCbits.LATC6 = 0; } while(
      +                          0);
 29836  008B42  9CBC               	bcf	188,6,c	;volatile
 29837                           
 29838                           ;../phy/sx1216/phy_src/phy.c: 80:     SPI1_ExchangeByte(addr | 0x80);
 29839  008B44  500B               	movf	SX1276WriteBuffer@addr^0,w,c
 29840  008B46  0980               	iorlw	128
 29841  008B48  EC08  F047         	call	_SPI1_ExchangeByte
 29842                           
 29843                           ; BSR set to: 61
 29844                           ;../phy/sx1216/phy_src/phy.c: 81:     SPI1_WriteBlock(buffer, size);
 29845  008B4C  0060  F024  F003   	movff	SX1276WriteBuffer@buffer,SPI1_WriteBlock@block
 29846  008B52  6A04               	clrf	(SPI1_WriteBlock@block+1)^0,c
 29847  008B54  0060  F028  F005   	movff	SX1276WriteBuffer@size,SPI1_WriteBlock@blockSize
 29848  008B5A  6A06               	clrf	(SPI1_WriteBlock@blockSize+1)^0,c
 29849  008B5C  EC08  F044         	call	_SPI1_WriteBlock	;wreg free
 29850                           
 29851                           ; BSR set to: 61
 29852  008B60  8CBC               	bsf	188,6,c	;volatile
 29853                           
 29854                           ; BSR set to: 61
 29855  008B62  0012               	return		;funcret
 29856  008B64                     __end_of_SX1276WriteBuffer:
 29857                           	opt callstack 0
 29858                           
 29859 ;; *************** function _SPI1_WriteBlock *****************
 29860 ;; Defined at:
 29861 ;;		line 121 in file "mcc_generated_files/spi1.c"
 29862 ;; Parameters:    Size  Location     Type
 29863 ;;  block           2    2[COMRAM] PTR void 
 29864 ;;		 -> SX1276Write@data(1), nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 29865 ;;  blockSize       2    4[COMRAM] unsigned int 
 29866 ;; Auto vars:     Size  Location     Type
 29867 ;;  data            2    6[COMRAM] PTR unsigned char 
 29868 ;;		 -> SX1276Write@data(1), nwkFrameFrames..(127), nwkFrameFrames(685), NULL(0), 
 29869 ;; Return value:  Size  Location     Type
 29870 ;;                  1    wreg      void 
 29871 ;; Registers used:
 29872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29873 ;; Tracked objects:
 29874 ;;		On entry : 3F/3D
 29875 ;;		On exit  : 3F/3D
 29876 ;;		Unchanged: 0/0
 29877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29879 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29881 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29882 ;;Total ram usage:        6 bytes
 29883 ;; Hardware stack levels used:    1
 29884 ;; Hardware stack levels required when called:    8
 29885 ;; This function calls:
 29886 ;;		_SPI1_ExchangeByte
 29887 ;; This function is called by:
 29888 ;;		_SX1276WriteBuffer
 29889 ;;		_PHY_DataReq
 29890 ;; This function uses a non-reentrant model
 29891 ;;
 29892                           
 29893                           	psect	text194
 29894  008810                     __ptext194:
 29895                           	opt callstack 0
 29896  008810                     _SPI1_WriteBlock:
 29897                           	opt callstack 15
 29898                           
 29899                           ; BSR set to: 61
 29900                           ;mcc_generated_files/spi1.c: 121: void SPI1_WriteBlock(void *block, size_t blockSize);mc
      +                          c_generated_files/spi1.c: 122: {;mcc_generated_files/spi1.c: 123:     uint8_t *data = bl
      +                          ock;
 29901                           
 29902                           ; BSR set to: 61
 29903                           ;incstack = 0
 29904  008810  0060  F00C  F007   	movff	SPI1_WriteBlock@block,SPI1_WriteBlock@data
 29905  008816  0060  F010  F008   	movff	SPI1_WriteBlock@block+1,SPI1_WriteBlock@data+1
 29906                           
 29907                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 29908  00881C  D00B               	goto	l13958
 29909  00881E                     l13954:
 29910                           
 29911                           ; BSR set to: 61
 29912                           ;mcc_generated_files/spi1.c: 125:     {;mcc_generated_files/spi1.c: 126:         SPI1_Ex
      +                          changeByte(*data++);
 29913  00881E  0060  F01F  FFD9   	movff	SPI1_WriteBlock@data,fsr2l
 29914  008824  0060  F023  FFDA   	movff	SPI1_WriteBlock@data+1,fsr2h
 29915  00882A  50DF               	movf	indf2,w,c
 29916  00882C  EC08  F047         	call	_SPI1_ExchangeByte
 29917                           
 29918                           ; BSR set to: 61
 29919  008830  4A07               	infsnz	SPI1_WriteBlock@data^0,f,c
 29920  008832  2A08               	incf	(SPI1_WriteBlock@data+1)^0,f,c
 29921  008834                     l13958:
 29922                           
 29923                           ; BSR set to: 61
 29924                           ;mcc_generated_files/spi1.c: 124:     while(blockSize--)
 29925  008834  0605               	decf	SPI1_WriteBlock@blockSize^0,f,c
 29926  008836  A0D8               	btfss	status,0,c
 29927  008838  0606               	decf	(SPI1_WriteBlock@blockSize+1)^0,f,c
 29928  00883A  2805               	incf	SPI1_WriteBlock@blockSize^0,w,c
 29929  00883C  E1F0               	bnz	l13954
 29930  00883E  2806               	incf	(SPI1_WriteBlock@blockSize+1)^0,w,c
 29931  008840  B4D8               	btfsc	status,2,c
 29932  008842  0012               	return	
 29933  008844  D7EC               	goto	l13954
 29934  008846                     __end_of_SPI1_WriteBlock:
 29935                           	opt callstack 0
 29936                           
 29937 ;; *************** function _SX1276Read *****************
 29938 ;; Defined at:
 29939 ;;		line 32 in file "../phy/sx1216/phy_src/phy.c"
 29940 ;; Parameters:    Size  Location     Type
 29941 ;;  addr            1    wreg     unsigned char 
 29942 ;; Auto vars:     Size  Location     Type
 29943 ;;  addr            1   12[COMRAM] unsigned char 
 29944 ;;  data            1   13[COMRAM] unsigned char 
 29945 ;; Return value:  Size  Location     Type
 29946 ;;                  1    wreg      unsigned char 
 29947 ;; Registers used:
 29948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29949 ;; Tracked objects:
 29950 ;;		On entry : 0/39
 29951 ;;		On exit  : 3F/3D
 29952 ;;		Unchanged: 0/0
 29953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29955 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29957 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29958 ;;Total ram usage:        2 bytes
 29959 ;; Hardware stack levels used:    1
 29960 ;; Hardware stack levels required when called:   10
 29961 ;; This function calls:
 29962 ;;		_SX1276ReadBuffer
 29963 ;; This function is called by:
 29964 ;;		_setSpreadingFactor
 29965 ;;		_setSignalBandwidth
 29966 ;;		_getSpreadingFactor
 29967 ;;		_getSignalBandwidth
 29968 ;;		_setCodingRate4
 29969 ;;		_enableCrc
 29970 ;;		_explicitHeaderMode
 29971 ;;		_implicitHeaderMode
 29972 ;;		_initRadio
 29973 ;;		_cad
 29974 ;;		_DIO0_Receive_ISR
 29975 ;;		_radio_engine
 29976 ;; This function uses a non-reentrant model
 29977 ;;
 29978                           
 29979                           	psect	text195
 29980  008EEC                     __ptext195:
 29981                           	opt callstack 0
 29982  008EEC                     _SX1276Read:
 29983                           	opt callstack 14
 29984                           
 29985                           ; BSR set to: 61
 29986                           ;incstack = 0
 29987                           ;SX1276Read@addr stored from wreg
 29988  008EEC  6E0D               	movwf	SX1276Read@addr^0,c
 29989                           
 29990                           ;../phy/sx1216/phy_src/phy.c: 32: static uint8_t SX1276Read( uint8_t addr );../phy/sx121
      +                          6/phy_src/phy.c: 33: {;../phy/sx1216/phy_src/phy.c: 34:     uint8_t data;;../phy/sx1216/
      +                          phy_src/phy.c: 35:     SX1276ReadBuffer( addr, &data, 1 );
 29991  008EEE  0E0E               	movlw	low SX1276Read@data
 29992  008EF0  6E09               	movwf	SX1276ReadBuffer@buffer^0,c
 29993  008EF2  6A0A               	clrf	(SX1276ReadBuffer@buffer+1)^0,c
 29994  008EF4  0E01               	movlw	1
 29995  008EF6  6E0B               	movwf	SX1276ReadBuffer@size^0,c
 29996  008EF8  500D               	movf	SX1276Read@addr^0,w,c
 29997  008EFA  EC54  F045         	call	_SX1276ReadBuffer
 29998                           
 29999                           ; BSR set to: 61
 30000                           ;../phy/sx1216/phy_src/phy.c: 36:     return data;
 30001  008EFE  500E               	movf	SX1276Read@data^0,w,c
 30002                           
 30003                           ; BSR set to: 61
 30004  008F00  0012               	return		;funcret
 30005  008F02                     __end_of_SX1276Read:
 30006                           	opt callstack 0
 30007                           
 30008 ;; *************** function _SX1276ReadBuffer *****************
 30009 ;; Defined at:
 30010 ;;		line 57 in file "../phy/sx1216/phy_src/phy.c"
 30011 ;; Parameters:    Size  Location     Type
 30012 ;;  addr            1    wreg     unsigned char 
 30013 ;;  buffer          2    8[COMRAM] PTR unsigned char 
 30014 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 30015 ;;  size            1   10[COMRAM] unsigned char 
 30016 ;; Auto vars:     Size  Location     Type
 30017 ;;  addr            1   11[COMRAM] unsigned char 
 30018 ;;  i               1    0        unsigned char 
 30019 ;; Return value:  Size  Location     Type
 30020 ;;                  1    wreg      void 
 30021 ;; Registers used:
 30022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30023 ;; Tracked objects:
 30024 ;;		On entry : 0/3D
 30025 ;;		On exit  : 3F/3D
 30026 ;;		Unchanged: 0/0
 30027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30028 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30031 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30032 ;;Total ram usage:        4 bytes
 30033 ;; Hardware stack levels used:    1
 30034 ;; Hardware stack levels required when called:    9
 30035 ;; This function calls:
 30036 ;;		_SPI1_ExchangeByte
 30037 ;;		_SPI1_ReadBlock
 30038 ;; This function is called by:
 30039 ;;		_SX1276Read
 30040 ;;		_DIO0_Receive_ISR
 30041 ;; This function uses a non-reentrant model
 30042 ;;
 30043                           
 30044                           	psect	text196
 30045  008AA8                     __ptext196:
 30046                           	opt callstack 0
 30047  008AA8                     _SX1276ReadBuffer:
 30048                           	opt callstack 14
 30049                           
 30050                           ; BSR set to: 61
 30051                           ;incstack = 0
 30052                           ;SX1276ReadBuffer@addr stored from wreg
 30053  008AA8  6E0C               	movwf	SX1276ReadBuffer@addr^0,c
 30054                           
 30055                           ;../phy/sx1216/phy_src/phy.c: 57: static void SX1276ReadBuffer( uint8_t addr, uint8_t *b
      +                          uffer, uint8_t size );../phy/sx1216/phy_src/phy.c: 58: {;../phy/sx1216/phy_src/phy.c: 59
      +                          :     uint8_t i;;../phy/sx1216/phy_src/phy.c: 61:     do { LATCbits.LATC6 = 0; } while(0
      +                          );
 30056  008AAA  9CBC               	bcf	188,6,c	;volatile
 30057                           
 30058                           ;../phy/sx1216/phy_src/phy.c: 62:     SPI1_ExchangeByte(addr & 0x7F);
 30059  008AAC  500C               	movf	SX1276ReadBuffer@addr^0,w,c
 30060  008AAE  0B7F               	andlw	127
 30061  008AB0  EC08  F047         	call	_SPI1_ExchangeByte
 30062                           
 30063                           ; BSR set to: 61
 30064                           ;../phy/sx1216/phy_src/phy.c: 63:     SPI1_ReadBlock(buffer, size);
 30065  008AB4  0060  F024  F003   	movff	SX1276ReadBuffer@buffer,SPI1_ReadBlock@block
 30066  008ABA  0060  F028  F004   	movff	SX1276ReadBuffer@buffer+1,SPI1_ReadBlock@block+1
 30067  008AC0  0060  F02C  F005   	movff	SX1276ReadBuffer@size,SPI1_ReadBlock@blockSize
 30068  008AC6  6A06               	clrf	(SPI1_ReadBlock@blockSize+1)^0,c
 30069  008AC8  EC9B  F043         	call	_SPI1_ReadBlock	;wreg free
 30070                           
 30071                           ; BSR set to: 61
 30072  008ACC  8CBC               	bsf	188,6,c	;volatile
 30073                           
 30074                           ; BSR set to: 61
 30075  008ACE  0012               	return		;funcret
 30076  008AD0                     __end_of_SX1276ReadBuffer:
 30077                           	opt callstack 0
 30078                           
 30079 ;; *************** function _SPI1_ReadBlock *****************
 30080 ;; Defined at:
 30081 ;;		line 130 in file "mcc_generated_files/spi1.c"
 30082 ;; Parameters:    Size  Location     Type
 30083 ;;  block           2    2[COMRAM] PTR void 
 30084 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 30085 ;;  blockSize       2    4[COMRAM] unsigned int 
 30086 ;; Auto vars:     Size  Location     Type
 30087 ;;  data            2    6[COMRAM] PTR unsigned char 
 30088 ;;		 -> phyRxBuffer(128), SX1276Read@data(1), 
 30089 ;; Return value:  Size  Location     Type
 30090 ;;                  1    wreg      void 
 30091 ;; Registers used:
 30092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30093 ;; Tracked objects:
 30094 ;;		On entry : 3F/3D
 30095 ;;		On exit  : 3F/3D
 30096 ;;		Unchanged: 0/0
 30097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30098 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30099 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30101 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30102 ;;Total ram usage:        6 bytes
 30103 ;; Hardware stack levels used:    1
 30104 ;; Hardware stack levels required when called:    8
 30105 ;; This function calls:
 30106 ;;		_SPI1_ExchangeByte
 30107 ;; This function is called by:
 30108 ;;		_SX1276ReadBuffer
 30109 ;; This function uses a non-reentrant model
 30110 ;;
 30111                           
 30112                           	psect	text197
 30113  008736                     __ptext197:
 30114                           	opt callstack 0
 30115  008736                     _SPI1_ReadBlock:
 30116                           	opt callstack 14
 30117                           
 30118                           ; BSR set to: 61
 30119                           ;mcc_generated_files/spi1.c: 130: void SPI1_ReadBlock(void *block, size_t blockSize);mcc
      +                          _generated_files/spi1.c: 131: {;mcc_generated_files/spi1.c: 132:     uint8_t *data = blo
      +                          ck;
 30120                           
 30121                           ; BSR set to: 61
 30122                           ;incstack = 0
 30123  008736  0060  F00C  F007   	movff	SPI1_ReadBlock@block,SPI1_ReadBlock@data
 30124  00873C  0060  F010  F008   	movff	SPI1_ReadBlock@block+1,SPI1_ReadBlock@data+1
 30125                           
 30126                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 30127  008742  D00C               	goto	l13966
 30128  008744                     l13962:
 30129                           
 30130                           ; BSR set to: 61
 30131                           ;mcc_generated_files/spi1.c: 134:     {;mcc_generated_files/spi1.c: 135:         *data++
      +                           = SPI1_ExchangeByte(0);
 30132  008744  0E00               	movlw	0
 30133  008746  EC08  F047         	call	_SPI1_ExchangeByte
 30134  00874A  0060  F01F  FFD9   	movff	SPI1_ReadBlock@data,fsr2l
 30135  008750  0060  F023  FFDA   	movff	SPI1_ReadBlock@data+1,fsr2h
 30136  008756  6EDF               	movwf	indf2,c
 30137                           
 30138                           ; BSR set to: 61
 30139  008758  4A07               	infsnz	SPI1_ReadBlock@data^0,f,c
 30140  00875A  2A08               	incf	(SPI1_ReadBlock@data+1)^0,f,c
 30141  00875C                     l13966:
 30142                           
 30143                           ; BSR set to: 61
 30144                           ;mcc_generated_files/spi1.c: 133:     while(blockSize--)
 30145  00875C  0605               	decf	SPI1_ReadBlock@blockSize^0,f,c
 30146  00875E  A0D8               	btfss	status,0,c
 30147  008760  0606               	decf	(SPI1_ReadBlock@blockSize+1)^0,f,c
 30148  008762  2805               	incf	SPI1_ReadBlock@blockSize^0,w,c
 30149  008764  E1EF               	bnz	l13962
 30150  008766  2806               	incf	(SPI1_ReadBlock@blockSize+1)^0,w,c
 30151  008768  B4D8               	btfsc	status,2,c
 30152  00876A  0012               	return	
 30153  00876C  D7EB               	goto	l13962
 30154  00876E                     __end_of_SPI1_ReadBlock:
 30155                           	opt callstack 0
 30156                           
 30157 ;; *************** function _SPI1_ExchangeByte *****************
 30158 ;; Defined at:
 30159 ;;		line 100 in file "mcc_generated_files/spi1.c"
 30160 ;; Parameters:    Size  Location     Type
 30161 ;;  data            1    wreg     unsigned char 
 30162 ;; Auto vars:     Size  Location     Type
 30163 ;;  data            1    1[COMRAM] unsigned char 
 30164 ;; Return value:  Size  Location     Type
 30165 ;;                  1    wreg      unsigned char 
 30166 ;; Registers used:
 30167 ;;		wreg, status,2
 30168 ;; Tracked objects:
 30169 ;;		On entry : 0/3D
 30170 ;;		On exit  : 3F/3D
 30171 ;;		Unchanged: 0/0
 30172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30176 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30177 ;;Total ram usage:        1 bytes
 30178 ;; Hardware stack levels used:    1
 30179 ;; Hardware stack levels required when called:    7
 30180 ;; This function calls:
 30181 ;;		Nothing
 30182 ;; This function is called by:
 30183 ;;		_SPI1_WriteBlock
 30184 ;;		_SPI1_ReadBlock
 30185 ;;		_SX1276ReadBuffer
 30186 ;;		_SX1276WriteBuffer
 30187 ;;		_PHY_DataReq
 30188 ;; This function uses a non-reentrant model
 30189 ;;
 30190                           
 30191                           	psect	text198
 30192  008E10                     __ptext198:
 30193                           	opt callstack 0
 30194  008E10                     _SPI1_ExchangeByte:
 30195                           	opt callstack 15
 30196                           
 30197                           ; BSR set to: 61
 30198                           ;incstack = 0
 30199                           ;SPI1_ExchangeByte@data stored from wreg
 30200  008E10  6E02               	movwf	SPI1_ExchangeByte@data^0,c
 30201                           
 30202                           ;mcc_generated_files/spi1.c: 100: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_
      +                          files/spi1.c: 101: {;mcc_generated_files/spi1.c: 102:     SPI1TCNTL = 1;
 30203  008E12  0E01               	movlw	1
 30204  008E14  013D               	movlb	61	; () banked
 30205  008E16  6F12               	movwf	18,b	;volatile
 30206                           
 30207                           ; BSR set to: 61
 30208                           ;mcc_generated_files/spi1.c: 103:     SPI1TXB = data;
 30209  008E18  0060  F00B  FD11   	movff	SPI1_ExchangeByte@data,15633	;volatile
 30210  008E1E                     l1093:
 30211  008E1E  0139               	movlb	57	; () banked
 30212  008E20  A9A2               	btfss	162,4,b	;volatile
 30213  008E22  D7FD               	goto	l1093
 30214                           
 30215                           ; BSR set to: 57
 30216                           ;mcc_generated_files/spi1.c: 105:     return SPI1RXB;
 30217  008E24  013D               	movlb	61	; () banked
 30218  008E26  5110               	movf	16,w,b	;volatile
 30219                           
 30220                           ; BSR set to: 61
 30221  008E28  0012               	return		;funcret
 30222  008E2A                     __end_of_SPI1_ExchangeByte:
 30223                           	opt callstack 0
 30224                           
 30225 ;; *************** function _computeFRF *****************
 30226 ;; Defined at:
 30227 ;;		line 705 in file "../phy/sx1216/phy_src/phy.c"
 30228 ;; Parameters:    Size  Location     Type
 30229 ;;		None
 30230 ;; Auto vars:     Size  Location     Type
 30231 ;;  num             4   42[COMRAM] unsigned long 
 30232 ;;  num_mod         4   38[COMRAM] unsigned long 
 30233 ;;  frequency       4   34[COMRAM] unsigned long 
 30234 ;;  i               1   46[COMRAM] unsigned char 
 30235 ;; Return value:  Size  Location     Type
 30236 ;;                  1    wreg      void 
 30237 ;; Registers used:
 30238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30239 ;; Tracked objects:
 30240 ;;		On entry : 0/0
 30241 ;;		On exit  : 0/0
 30242 ;;		Unchanged: 0/0
 30243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30245 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30247 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30248 ;;Total ram usage:       13 bytes
 30249 ;; Hardware stack levels used:    1
 30250 ;; Hardware stack levels required when called:    8
 30251 ;; This function calls:
 30252 ;;		___lldiv
 30253 ;;		___llmod
 30254 ;; This function is called by:
 30255 ;;		_initRadio
 30256 ;; This function uses a non-reentrant model
 30257 ;;
 30258                           
 30259                           	psect	text199
 30260  003A16                     __ptext199:
 30261                           	opt callstack 0
 30262  003A16                     _computeFRF:
 30263                           	opt callstack 18
 30264                           
 30265                           ;../phy/sx1216/phy_src/phy.c: 707:     for(uint8_t i = 0; i < (sizeof(fhssList)/4);i++)
 30266                           
 30267                           ; BSR set to: 61
 30268                           ;incstack = 0
 30269  003A16  0E00               	movlw	0
 30270  003A18  6E2F               	movwf	computeFRF@i^0,c
 30271  003A1A                     l15120:
 30272                           
 30273                           ;../phy/sx1216/phy_src/phy.c: 708:     {;../phy/sx1216/phy_src/phy.c: 709:         uint3
      +                          2_t num, num_mod, frequency;;../phy/sx1216/phy_src/phy.c: 710:         frequency = fhssL
      +                          ist[i];
 30274  003A1A  502F               	movf	computeFRF@i^0,w,c
 30275  003A1C  0D04               	mullw	4
 30276  003A1E  0EAB               	movlw	low _fhssList
 30277  003A20  24F3               	addwf	243,w,c
 30278  003A22  6EF6               	movwf	tblptrl,c
 30279  003A24  0EFC               	movlw	high _fhssList
 30280  003A26  20F4               	addwfc	244,w,c
 30281  003A28  6EF7               	movwf	tblptrh,c
 30282  003A2A                     	if	1	;There are 3 active tblptr bytes
 30283  003A2A  6AF8               	clrf	tblptru,c
 30284  003A2C  0E00               	movlw	low (__mediumconst shr (0+16))
 30285  003A2E  22F8               	addwfc	tblptru,f,c
 30286  003A30                     	endif
 30287  003A30  0009               	tblrd		*+
 30288  003A32  006F FFD4  F023    	movff	tablat,computeFRF@frequency
 30289  003A38  0009               	tblrd		*+
 30290  003A3A  006F FFD4  F024    	movff	tablat,computeFRF@frequency+1
 30291  003A40  0009               	tblrd		*+
 30292  003A42  006F FFD4  F025    	movff	tablat,computeFRF@frequency+2
 30293  003A48  000A               	tblrd		*-
 30294  003A4A  006F FFD4  F026    	movff	tablat,computeFRF@frequency+3
 30295                           
 30296                           ;../phy/sx1216/phy_src/phy.c: 717:         num = frequency / 15625;
 30297  003A50  0060  F08C  F016   	movff	computeFRF@frequency,___lldiv@dividend
 30298  003A56  0060  F090  F017   	movff	computeFRF@frequency+1,___lldiv@dividend+1
 30299  003A5C  0060  F094  F018   	movff	computeFRF@frequency+2,___lldiv@dividend+2
 30300  003A62  0060  F098  F019   	movff	computeFRF@frequency+3,___lldiv@dividend+3
 30301  003A68  0E09               	movlw	9
 30302  003A6A  6E1A               	movwf	___lldiv@divisor^0,c
 30303  003A6C  0E3D               	movlw	61
 30304  003A6E  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 30305  003A70  0E00               	movlw	0
 30306  003A72  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 30307  003A74  0E00               	movlw	0
 30308  003A76  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 30309  003A78  EC2A  F039         	call	___lldiv	;wreg free
 30310  003A7C  0060  F058  F02B   	movff	?___lldiv,computeFRF@num
 30311  003A82  0060  F05C  F02C   	movff	?___lldiv+1,computeFRF@num+1
 30312  003A88  0060  F060  F02D   	movff	?___lldiv+2,computeFRF@num+2
 30313  003A8E  0060  F064  F02E   	movff	?___lldiv+3,computeFRF@num+3
 30314                           
 30315                           ;../phy/sx1216/phy_src/phy.c: 718:         num_mod = frequency % 15625;
 30316  003A94  0060  F08C  F002   	movff	computeFRF@frequency,___llmod@dividend
 30317  003A9A  0060  F090  F003   	movff	computeFRF@frequency+1,___llmod@dividend+1
 30318  003AA0  0060  F094  F004   	movff	computeFRF@frequency+2,___llmod@dividend+2
 30319  003AA6  0060  F098  F005   	movff	computeFRF@frequency+3,___llmod@dividend+3
 30320  003AAC  0E09               	movlw	9
 30321  003AAE  6E06               	movwf	___llmod@divisor^0,c
 30322  003AB0  0E3D               	movlw	61
 30323  003AB2  6E07               	movwf	(___llmod@divisor+1)^0,c
 30324  003AB4  0E00               	movlw	0
 30325  003AB6  6E08               	movwf	(___llmod@divisor+2)^0,c
 30326  003AB8  0E00               	movlw	0
 30327  003ABA  6E09               	movwf	(___llmod@divisor+3)^0,c
 30328  003ABC  EC2F  F03B         	call	___llmod	;wreg free
 30329  003AC0  0060  F008  F027   	movff	?___llmod,computeFRF@num_mod
 30330  003AC6  0060  F00C  F028   	movff	?___llmod+1,computeFRF@num_mod+1
 30331  003ACC  0060  F010  F029   	movff	?___llmod+2,computeFRF@num_mod+2
 30332  003AD2  0060  F014  F02A   	movff	?___llmod+3,computeFRF@num_mod+3
 30333                           
 30334                           ;../phy/sx1216/phy_src/phy.c: 722:         num <<= 8;
 30335  003AD8  0060  F0B4  F02E   	movff	computeFRF@num+2,computeFRF@num+3
 30336  003ADE  0060  F0B0  F02D   	movff	computeFRF@num+1,computeFRF@num+2
 30337  003AE4  0060  F0AC  F02C   	movff	computeFRF@num,computeFRF@num+1
 30338  003AEA  6A2B               	clrf	computeFRF@num^0,c
 30339                           
 30340                           ;../phy/sx1216/phy_src/phy.c: 723:         num_mod <<= 8;
 30341  003AEC  0060  F0A4  F02A   	movff	computeFRF@num_mod+2,computeFRF@num_mod+3
 30342  003AF2  0060  F0A0  F029   	movff	computeFRF@num_mod+1,computeFRF@num_mod+2
 30343  003AF8  0060  F09C  F028   	movff	computeFRF@num_mod,computeFRF@num_mod+1
 30344  003AFE  6A27               	clrf	computeFRF@num_mod^0,c
 30345                           
 30346                           ;../phy/sx1216/phy_src/phy.c: 727:         num_mod = num_mod / 15625;
 30347  003B00  0060  F09C  F016   	movff	computeFRF@num_mod,___lldiv@dividend
 30348  003B06  0060  F0A0  F017   	movff	computeFRF@num_mod+1,___lldiv@dividend+1
 30349  003B0C  0060  F0A4  F018   	movff	computeFRF@num_mod+2,___lldiv@dividend+2
 30350  003B12  0060  F0A8  F019   	movff	computeFRF@num_mod+3,___lldiv@dividend+3
 30351  003B18  0E09               	movlw	9
 30352  003B1A  6E1A               	movwf	___lldiv@divisor^0,c
 30353  003B1C  0E3D               	movlw	61
 30354  003B1E  6E1B               	movwf	(___lldiv@divisor+1)^0,c
 30355  003B20  0E00               	movlw	0
 30356  003B22  6E1C               	movwf	(___lldiv@divisor+2)^0,c
 30357  003B24  0E00               	movlw	0
 30358  003B26  6E1D               	movwf	(___lldiv@divisor+3)^0,c
 30359  003B28  EC2A  F039         	call	___lldiv	;wreg free
 30360  003B2C  0060  F058  F027   	movff	?___lldiv,computeFRF@num_mod
 30361  003B32  0060  F05C  F028   	movff	?___lldiv+1,computeFRF@num_mod+1
 30362  003B38  0060  F060  F029   	movff	?___lldiv+2,computeFRF@num_mod+2
 30363  003B3E  0060  F064  F02A   	movff	?___lldiv+3,computeFRF@num_mod+3
 30364                           
 30365                           ;../phy/sx1216/phy_src/phy.c: 728:         num += num_mod;
 30366  003B44  5027               	movf	computeFRF@num_mod^0,w,c
 30367  003B46  262B               	addwf	computeFRF@num^0,f,c
 30368  003B48  5028               	movf	(computeFRF@num_mod+1)^0,w,c
 30369  003B4A  222C               	addwfc	(computeFRF@num+1)^0,f,c
 30370  003B4C  5029               	movf	(computeFRF@num_mod+2)^0,w,c
 30371  003B4E  222D               	addwfc	(computeFRF@num+2)^0,f,c
 30372  003B50  502A               	movf	(computeFRF@num_mod+3)^0,w,c
 30373  003B52  222E               	addwfc	(computeFRF@num+3)^0,f,c
 30374                           
 30375                           ;../phy/sx1216/phy_src/phy.c: 730:         fhssReg[i][0] = (num >> 16);
 30376  003B54  502F               	movf	computeFRF@i^0,w,c
 30377  003B56  0D03               	mullw	3
 30378  003B58  0E00               	movlw	low _fhssReg
 30379  003B5A  24F3               	addwf	243,w,c
 30380  003B5C  6ED9               	movwf	fsr2l,c
 30381  003B5E  0E05               	movlw	high _fhssReg
 30382  003B60  20F4               	addwfc	prodh,w,c
 30383  003B62  6EDA               	movwf	fsr2h,c
 30384  003B64  0060  F0B7  FFDF   	movff	computeFRF@num+2,indf2
 30385                           
 30386                           ;../phy/sx1216/phy_src/phy.c: 731:         fhssReg[i][1] = (num >> 8);
 30387  003B6A  502F               	movf	computeFRF@i^0,w,c
 30388  003B6C  0D03               	mullw	3
 30389  003B6E  0E01               	movlw	low (_fhssReg+1)
 30390  003B70  24F3               	addwf	243,w,c
 30391  003B72  6ED9               	movwf	fsr2l,c
 30392  003B74  0E05               	movlw	high (_fhssReg+1)
 30393  003B76  20F4               	addwfc	prodh,w,c
 30394  003B78  6EDA               	movwf	fsr2h,c
 30395  003B7A  0060  F0B3  FFDF   	movff	computeFRF@num+1,indf2
 30396                           
 30397                           ;../phy/sx1216/phy_src/phy.c: 732:         fhssReg[i][2] = (num);
 30398  003B80  502F               	movf	computeFRF@i^0,w,c
 30399  003B82  0D03               	mullw	3
 30400  003B84  0E02               	movlw	low (_fhssReg+2)
 30401  003B86  24F3               	addwf	243,w,c
 30402  003B88  6ED9               	movwf	fsr2l,c
 30403  003B8A  0E05               	movlw	high (_fhssReg+2)
 30404  003B8C  20F4               	addwfc	prodh,w,c
 30405  003B8E  6EDA               	movwf	fsr2h,c
 30406  003B90  0060  F0AF  FFDF   	movff	computeFRF@num,indf2
 30407                           
 30408                           ;../phy/sx1216/phy_src/phy.c: 733:     }
 30409  003B96  2A2F               	incf	computeFRF@i^0,f,c
 30410  003B98  0E3E               	movlw	62
 30411  003B9A  642F               	cpfsgt	computeFRF@i^0,c
 30412  003B9C  D73E               	goto	l15120
 30413  003B9E  0012               	return	
 30414  003BA0                     __end_of_computeFRF:
 30415                           	opt callstack 0
 30416                           
 30417 ;; *************** function ___llmod *****************
 30418 ;; Defined at:
 30419 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\llmod.c"
 30420 ;; Parameters:    Size  Location     Type
 30421 ;;  dividend        4    1[COMRAM] unsigned long 
 30422 ;;  divisor         4    5[COMRAM] unsigned long 
 30423 ;; Auto vars:     Size  Location     Type
 30424 ;;  counter         1    9[COMRAM] unsigned char 
 30425 ;; Return value:  Size  Location     Type
 30426 ;;                  4    1[COMRAM] unsigned long 
 30427 ;; Registers used:
 30428 ;;		wreg, status,2, status,0
 30429 ;; Tracked objects:
 30430 ;;		On entry : 0/0
 30431 ;;		On exit  : 0/0
 30432 ;;		Unchanged: 0/0
 30433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30434 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30437 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30438 ;;Total ram usage:        9 bytes
 30439 ;; Hardware stack levels used:    1
 30440 ;; Hardware stack levels required when called:    7
 30441 ;; This function calls:
 30442 ;;		Nothing
 30443 ;; This function is called by:
 30444 ;;		_setFrequency
 30445 ;;		_computeFRF
 30446 ;; This function uses a non-reentrant model
 30447 ;;
 30448                           
 30449                           	psect	text200
 30450  00765E                     __ptext200:
 30451                           	opt callstack 0
 30452  00765E                     ___llmod:
 30453                           	opt callstack 18
 30454                           
 30455                           ;incstack = 0
 30456  00765E  5006               	movf	___llmod@divisor^0,w,c
 30457  007660  1007               	iorwf	(___llmod@divisor+1)^0,w,c
 30458  007662  1008               	iorwf	(___llmod@divisor+2)^0,w,c
 30459  007664  1009               	iorwf	(___llmod@divisor+3)^0,w,c
 30460  007666  B4D8               	btfsc	status,2,c
 30461  007668  D024               	goto	l3651
 30462  00766A  0E01               	movlw	1
 30463  00766C  6E0A               	movwf	___llmod@counter^0,c
 30464  00766E  D006               	goto	l14738
 30465  007670                     l14736:
 30466  007670  90D8               	bcf	status,0,c
 30467  007672  3606               	rlcf	___llmod@divisor^0,f,c
 30468  007674  3607               	rlcf	(___llmod@divisor+1)^0,f,c
 30469  007676  3608               	rlcf	(___llmod@divisor+2)^0,f,c
 30470  007678  3609               	rlcf	(___llmod@divisor+3)^0,f,c
 30471  00767A  2A0A               	incf	___llmod@counter^0,f,c
 30472  00767C                     l14738:
 30473  00767C  AE09               	btfss	(___llmod@divisor+3)^0,7,c
 30474  00767E  D7F8               	goto	l14736
 30475  007680                     u14210:
 30476  007680  5006               	movf	___llmod@divisor^0,w,c
 30477  007682  5C02               	subwf	___llmod@dividend^0,w,c
 30478  007684  5007               	movf	(___llmod@divisor+1)^0,w,c
 30479  007686  5803               	subwfb	(___llmod@dividend+1)^0,w,c
 30480  007688  5008               	movf	(___llmod@divisor+2)^0,w,c
 30481  00768A  5804               	subwfb	(___llmod@dividend+2)^0,w,c
 30482  00768C  5009               	movf	(___llmod@divisor+3)^0,w,c
 30483  00768E  5805               	subwfb	(___llmod@dividend+3)^0,w,c
 30484  007690  A0D8               	btfss	status,0,c
 30485  007692  D008               	goto	l14744
 30486  007694  5006               	movf	___llmod@divisor^0,w,c
 30487  007696  5E02               	subwf	___llmod@dividend^0,f,c
 30488  007698  5007               	movf	(___llmod@divisor+1)^0,w,c
 30489  00769A  5A03               	subwfb	(___llmod@dividend+1)^0,f,c
 30490  00769C  5008               	movf	(___llmod@divisor+2)^0,w,c
 30491  00769E  5A04               	subwfb	(___llmod@dividend+2)^0,f,c
 30492  0076A0  5009               	movf	(___llmod@divisor+3)^0,w,c
 30493  0076A2  5A05               	subwfb	(___llmod@dividend+3)^0,f,c
 30494  0076A4                     l14744:
 30495  0076A4  90D8               	bcf	status,0,c
 30496  0076A6  3209               	rrcf	(___llmod@divisor+3)^0,f,c
 30497  0076A8  3208               	rrcf	(___llmod@divisor+2)^0,f,c
 30498  0076AA  3207               	rrcf	(___llmod@divisor+1)^0,f,c
 30499  0076AC  3206               	rrcf	___llmod@divisor^0,f,c
 30500  0076AE  2E0A               	decfsz	___llmod@counter^0,f,c
 30501  0076B0  D7E7               	goto	u14210
 30502  0076B2                     l3651:
 30503  0076B2  0060  F008  F002   	movff	___llmod@dividend,?___llmod
 30504  0076B8  0060  F00C  F003   	movff	___llmod@dividend+1,?___llmod+1
 30505  0076BE  0060  F010  F004   	movff	___llmod@dividend+2,?___llmod+2
 30506  0076C4  0060  F014  F005   	movff	___llmod@dividend+3,?___llmod+3
 30507  0076CA  0012               	return		;funcret
 30508  0076CC                     __end_of___llmod:
 30509                           	opt callstack 0
 30510                           
 30511 ;; *************** function ___lldiv *****************
 30512 ;; Defined at:
 30513 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 30514 ;; Parameters:    Size  Location     Type
 30515 ;;  dividend        4   21[COMRAM] unsigned long 
 30516 ;;  divisor         4   25[COMRAM] unsigned long 
 30517 ;; Auto vars:     Size  Location     Type
 30518 ;;  quotient        4   29[COMRAM] unsigned long 
 30519 ;;  counter         1   33[COMRAM] unsigned char 
 30520 ;; Return value:  Size  Location     Type
 30521 ;;                  4   21[COMRAM] unsigned long 
 30522 ;; Registers used:
 30523 ;;		wreg, status,2, status,0
 30524 ;; Tracked objects:
 30525 ;;		On entry : 0/3D
 30526 ;;		On exit  : 0/0
 30527 ;;		Unchanged: 0/0
 30528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30529 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30530 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30532 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30533 ;;Total ram usage:       13 bytes
 30534 ;; Hardware stack levels used:    1
 30535 ;; Hardware stack levels required when called:    7
 30536 ;; This function calls:
 30537 ;;		Nothing
 30538 ;; This function is called by:
 30539 ;;		_setFrequency
 30540 ;;		_setSpreadingFactor
 30541 ;;		_setSignalBandwidth
 30542 ;;		_computeFRF
 30543 ;; This function uses a non-reentrant model
 30544 ;;
 30545                           
 30546                           	psect	text201
 30547  007254                     __ptext201:
 30548                           	opt callstack 0
 30549  007254                     ___lldiv:
 30550                           	opt callstack 18
 30551                           
 30552                           ;incstack = 0
 30553  007254  0E00               	movlw	0
 30554  007256  6E1E               	movwf	___lldiv@quotient^0,c
 30555  007258  0E00               	movlw	0
 30556  00725A  6E1F               	movwf	(___lldiv@quotient+1)^0,c
 30557  00725C  0E00               	movlw	0
 30558  00725E  6E20               	movwf	(___lldiv@quotient+2)^0,c
 30559  007260  0E00               	movlw	0
 30560  007262  6E21               	movwf	(___lldiv@quotient+3)^0,c
 30561  007264  501A               	movf	___lldiv@divisor^0,w,c
 30562  007266  101B               	iorwf	(___lldiv@divisor+1)^0,w,c
 30563  007268  101C               	iorwf	(___lldiv@divisor+2)^0,w,c
 30564  00726A  101D               	iorwf	(___lldiv@divisor+3)^0,w,c
 30565  00726C  B4D8               	btfsc	status,2,c
 30566  00726E  D02A               	goto	l3258
 30567  007270  0E01               	movlw	1
 30568  007272  6E22               	movwf	___lldiv@counter^0,c
 30569  007274  D006               	goto	l14696
 30570  007276                     l14694:
 30571  007276  90D8               	bcf	status,0,c
 30572  007278  361A               	rlcf	___lldiv@divisor^0,f,c
 30573  00727A  361B               	rlcf	(___lldiv@divisor+1)^0,f,c
 30574  00727C  361C               	rlcf	(___lldiv@divisor+2)^0,f,c
 30575  00727E  361D               	rlcf	(___lldiv@divisor+3)^0,f,c
 30576  007280  2A22               	incf	___lldiv@counter^0,f,c
 30577  007282                     l14696:
 30578  007282  AE1D               	btfss	(___lldiv@divisor+3)^0,7,c
 30579  007284  D7F8               	goto	l14694
 30580  007286                     u14130:
 30581  007286  90D8               	bcf	status,0,c
 30582  007288  361E               	rlcf	___lldiv@quotient^0,f,c
 30583  00728A  361F               	rlcf	(___lldiv@quotient+1)^0,f,c
 30584  00728C  3620               	rlcf	(___lldiv@quotient+2)^0,f,c
 30585  00728E  3621               	rlcf	(___lldiv@quotient+3)^0,f,c
 30586  007290  501A               	movf	___lldiv@divisor^0,w,c
 30587  007292  5C16               	subwf	___lldiv@dividend^0,w,c
 30588  007294  501B               	movf	(___lldiv@divisor+1)^0,w,c
 30589  007296  5817               	subwfb	(___lldiv@dividend+1)^0,w,c
 30590  007298  501C               	movf	(___lldiv@divisor+2)^0,w,c
 30591  00729A  5818               	subwfb	(___lldiv@dividend+2)^0,w,c
 30592  00729C  501D               	movf	(___lldiv@divisor+3)^0,w,c
 30593  00729E  5819               	subwfb	(___lldiv@dividend+3)^0,w,c
 30594  0072A0  A0D8               	btfss	status,0,c
 30595  0072A2  D009               	goto	l14706
 30596  0072A4  501A               	movf	___lldiv@divisor^0,w,c
 30597  0072A6  5E16               	subwf	___lldiv@dividend^0,f,c
 30598  0072A8  501B               	movf	(___lldiv@divisor+1)^0,w,c
 30599  0072AA  5A17               	subwfb	(___lldiv@dividend+1)^0,f,c
 30600  0072AC  501C               	movf	(___lldiv@divisor+2)^0,w,c
 30601  0072AE  5A18               	subwfb	(___lldiv@dividend+2)^0,f,c
 30602  0072B0  501D               	movf	(___lldiv@divisor+3)^0,w,c
 30603  0072B2  5A19               	subwfb	(___lldiv@dividend+3)^0,f,c
 30604  0072B4  801E               	bsf	___lldiv@quotient^0,0,c
 30605  0072B6                     l14706:
 30606  0072B6  90D8               	bcf	status,0,c
 30607  0072B8  321D               	rrcf	(___lldiv@divisor+3)^0,f,c
 30608  0072BA  321C               	rrcf	(___lldiv@divisor+2)^0,f,c
 30609  0072BC  321B               	rrcf	(___lldiv@divisor+1)^0,f,c
 30610  0072BE  321A               	rrcf	___lldiv@divisor^0,f,c
 30611  0072C0  2E22               	decfsz	___lldiv@counter^0,f,c
 30612  0072C2  D7E1               	goto	u14130
 30613  0072C4                     l3258:
 30614  0072C4  0060  F078  F016   	movff	___lldiv@quotient,?___lldiv
 30615  0072CA  0060  F07C  F017   	movff	___lldiv@quotient+1,?___lldiv+1
 30616  0072D0  0060  F080  F018   	movff	___lldiv@quotient+2,?___lldiv+2
 30617  0072D6  0060  F084  F019   	movff	___lldiv@quotient+3,?___lldiv+3
 30618  0072DC  0012               	return		;funcret
 30619  0072DE                     __end_of___lldiv:
 30620                           	opt callstack 0
 30621                           
 30622 ;; *************** function _NWK_Init *****************
 30623 ;; Defined at:
 30624 ;;		line 70 in file "../nwk/nwk_src/nwk.c"
 30625 ;; Parameters:    Size  Location     Type
 30626 ;;		None
 30627 ;; Auto vars:     Size  Location     Type
 30628 ;;  i               1    5[COMRAM] unsigned char 
 30629 ;; Return value:  Size  Location     Type
 30630 ;;                  1    wreg      void 
 30631 ;; Registers used:
 30632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30633 ;; Tracked objects:
 30634 ;;		On entry : 3F/0
 30635 ;;		On exit  : 3F/2
 30636 ;;		Unchanged: 0/0
 30637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30639 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30641 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30642 ;;Total ram usage:        1 bytes
 30643 ;; Hardware stack levels used:    1
 30644 ;; Hardware stack levels required when called:    9
 30645 ;; This function calls:
 30646 ;;		_nwkDataReqInit
 30647 ;;		_nwkFrameInit
 30648 ;;		_nwkGroupInit
 30649 ;;		_nwkRouteInit
 30650 ;;		_nwkRxInit
 30651 ;;		_nwkTxInit
 30652 ;; This function is called by:
 30653 ;;		_SYS_Init
 30654 ;; This function uses a non-reentrant model
 30655 ;;
 30656                           
 30657                           	psect	text202
 30658  007D54                     __ptext202:
 30659                           	opt callstack 0
 30660  007D54                     _NWK_Init:
 30661                           	opt callstack 20
 30662                           
 30663                           ; BSR set to: 0
 30664                           ;../nwk/nwk_src/nwk.c: 72:   nwkIb.nwkSeqNum = 0;
 30665                           
 30666                           ;incstack = 0
 30667  007D54  0E00               	movlw	0
 30668  007D56  0101               	movlb	1	; () banked
 30669  007D58  6F04               	movwf	(_nwkIb+4)& (0+255),b
 30670                           
 30671                           ;../nwk/nwk_src/nwk.c: 73:   nwkIb.macSeqNum = 0;
 30672  007D5A  0E00               	movlw	0
 30673  007D5C  6F05               	movwf	(_nwkIb+5)& (0+255),b
 30674                           
 30675                           ;../nwk/nwk_src/nwk.c: 74:   nwkIb.addr = 0;
 30676  007D5E  0E00               	movlw	0
 30677  007D60  6F01               	movwf	(_nwkIb+1)& (0+255),b
 30678  007D62  0E00               	movlw	0
 30679  007D64  6F00               	movwf	_nwkIb& (0+255),b
 30680                           
 30681                           ;../nwk/nwk_src/nwk.c: 75:   nwkIb.lock = 0;
 30682  007D66  0E00               	movlw	0
 30683  007D68  6F27               	movwf	(_nwkIb+39)& (0+255),b
 30684  007D6A  0E00               	movlw	0
 30685  007D6C  6F26               	movwf	(_nwkIb+38)& (0+255),b
 30686                           
 30687                           ;../nwk/nwk_src/nwk.c: 77:   for (uint8_t i = 0; i < 16; i++)
 30688  007D6E  0E00               	movlw	0
 30689  007D70  6E06               	movwf	NWK_Init@i^0,c
 30690  007D72                     l13198:
 30691                           
 30692                           ;../nwk/nwk_src/nwk.c: 78:     nwkIb.endpoint[i] = ((void*)0);
 30693  007D72  5006               	movf	NWK_Init@i^0,w,c
 30694  007D74  0D02               	mullw	2
 30695  007D76  0E06               	movlw	low (_nwkIb+6)
 30696  007D78  24F3               	addwf	243,w,c
 30697  007D7A  6ED9               	movwf	fsr2l,c
 30698  007D7C  0E01               	movlw	high (_nwkIb+6)
 30699  007D7E  20F4               	addwfc	prodh,w,c
 30700  007D80  6EDA               	movwf	fsr2h,c
 30701  007D82  0E00               	movlw	0
 30702  007D84  6EDE               	movwf	postinc2,c
 30703  007D86  0E00               	movlw	0
 30704  007D88  6EDD               	movwf	postdec2,c
 30705  007D8A  2A06               	incf	NWK_Init@i^0,f,c
 30706  007D8C  0E0F               	movlw	15
 30707  007D8E  6406               	cpfsgt	NWK_Init@i^0,c
 30708  007D90  D7F0               	goto	l13198
 30709                           
 30710                           ;../nwk/nwk_src/nwk.c: 80:   nwkTxInit();
 30711  007D92  ECAC  F040         	call	_nwkTxInit	;wreg free
 30712                           
 30713                           ; BSR set to: 1
 30714                           ;../nwk/nwk_src/nwk.c: 81:   nwkRxInit();
 30715  007D96  ECF4  F03F         	call	_nwkRxInit	;wreg free
 30716                           
 30717                           ;../nwk/nwk_src/nwk.c: 82:   nwkFrameInit();
 30718  007D9A  ECF7  F045         	call	_nwkFrameInit	;wreg free
 30719                           
 30720                           ;../nwk/nwk_src/nwk.c: 83:   nwkDataReqInit();
 30721  007D9E  EC1F  F048         	call	_nwkDataReqInit	;wreg free
 30722                           
 30723                           ; BSR set to: 0
 30724                           ;../nwk/nwk_src/nwk.c: 86:   nwkRouteInit();
 30725  007DA2  ECA6  F03F         	call	_nwkRouteInit	;wreg free
 30726                           
 30727                           ; BSR set to: 2
 30728                           ;../nwk/nwk_src/nwk.c: 94:   nwkGroupInit();
 30729  007DA6  EC7B  F045         	call	_nwkGroupInit	;wreg free
 30730                           
 30731                           ; BSR set to: 2
 30732  007DAA  0012               	return		;funcret
 30733  007DAC                     __end_of_NWK_Init:
 30734                           	opt callstack 0
 30735                           
 30736 ;; *************** function _nwkTxInit *****************
 30737 ;; Defined at:
 30738 ;;		line 94 in file "../nwk/nwk_src/nwkTx.c"
 30739 ;; Parameters:    Size  Location     Type
 30740 ;;		None
 30741 ;; Auto vars:     Size  Location     Type
 30742 ;;		None
 30743 ;; Return value:  Size  Location     Type
 30744 ;;                  1    wreg      void 
 30745 ;; Registers used:
 30746 ;;		wreg, status,2, status,0
 30747 ;; Tracked objects:
 30748 ;;		On entry : 3E/1
 30749 ;;		On exit  : 3F/1
 30750 ;;		Unchanged: 0/0
 30751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30756 ;;Total ram usage:        0 bytes
 30757 ;; Hardware stack levels used:    1
 30758 ;; Hardware stack levels required when called:    7
 30759 ;; This function calls:
 30760 ;;		Nothing
 30761 ;; This function is called by:
 30762 ;;		_NWK_Init
 30763 ;; This function uses a non-reentrant model
 30764 ;;
 30765                           
 30766                           	psect	text203
 30767  008158                     __ptext203:
 30768                           	opt callstack 0
 30769  008158                     _nwkTxInit:
 30770                           	opt callstack 21
 30771                           
 30772                           ;../nwk/nwk_src/nwkTx.c: 96:   nwkTxPhyActiveFrame = ((void*)0);
 30773                           
 30774                           ; BSR set to: 2
 30775                           ;incstack = 0
 30776  008158  0E00               	movlw	0
 30777  00815A  0100               	movlb	0	; () banked
 30778  00815C  6FBD               	movwf	_nwkTxPhyActiveFrame& (0+255),b
 30779  00815E  0E00               	movlw	0
 30780  008160  6FBE               	movwf	(_nwkTxPhyActiveFrame+1)& (0+255),b
 30781                           
 30782                           ; BSR set to: 0
 30783                           ;../nwk/nwk_src/nwkTx.c: 98:   nwkTxAckWaitTimer.interval = 200;
 30784  008162  0EC8               	movlw	200
 30785  008164  0101               	movlb	1	; () banked
 30786  008166  6FAE               	movwf	(_nwkTxAckWaitTimer+6)& (0+255),b
 30787  008168  0E00               	movlw	0
 30788  00816A  6FAF               	movwf	(_nwkTxAckWaitTimer+7)& (0+255),b
 30789  00816C  0E00               	movlw	0
 30790  00816E  6FB0               	movwf	(_nwkTxAckWaitTimer+8)& (0+255),b
 30791  008170  0E00               	movlw	0
 30792  008172  6FB1               	movwf	(_nwkTxAckWaitTimer+9)& (0+255),b
 30793                           
 30794                           ; BSR set to: 1
 30795                           ;../nwk/nwk_src/nwkTx.c: 99:   nwkTxAckWaitTimer.mode = SYS_TIMER_INTERVAL_MODE;
 30796  008174  0E00               	movlw	0
 30797  008176  6FB2               	movwf	(_nwkTxAckWaitTimer+10)& (0+255),b
 30798                           
 30799                           ;../nwk/nwk_src/nwkTx.c: 100:   nwkTxAckWaitTimer.handler = nwkTxAckWaitTimerHandler;
 30800  008178  0E22               	movlw	low _nwkTxAckWaitTimerHandler
 30801  00817A  6FB3               	movwf	(_nwkTxAckWaitTimer+11)& (0+255),b
 30802  00817C  0E70               	movlw	high _nwkTxAckWaitTimerHandler
 30803  00817E  6FB4               	movwf	(_nwkTxAckWaitTimer+12)& (0+255),b
 30804                           
 30805                           ; BSR set to: 1
 30806                           ;../nwk/nwk_src/nwkTx.c: 102:   nwkTxDelayTimer.interval = 20;
 30807  008180  0E14               	movlw	20
 30808  008182  6FA1               	movwf	(_nwkTxDelayTimer+6)& (0+255),b
 30809  008184  0E00               	movlw	0
 30810  008186  6FA2               	movwf	(_nwkTxDelayTimer+7)& (0+255),b
 30811  008188  0E00               	movlw	0
 30812  00818A  6FA3               	movwf	(_nwkTxDelayTimer+8)& (0+255),b
 30813  00818C  0E00               	movlw	0
 30814  00818E  6FA4               	movwf	(_nwkTxDelayTimer+9)& (0+255),b
 30815                           
 30816                           ; BSR set to: 1
 30817                           ;../nwk/nwk_src/nwkTx.c: 103:   nwkTxDelayTimer.mode = SYS_TIMER_INTERVAL_MODE;
 30818  008190  0E00               	movlw	0
 30819  008192  6FA5               	movwf	(_nwkTxDelayTimer+10)& (0+255),b
 30820                           
 30821                           ;../nwk/nwk_src/nwkTx.c: 104:   nwkTxDelayTimer.handler = nwkTxDelayTimerHandler;
 30822  008194  0E3E               	movlw	low _nwkTxDelayTimerHandler
 30823  008196  6FA6               	movwf	(_nwkTxDelayTimer+11)& (0+255),b
 30824  008198  0E71               	movlw	high _nwkTxDelayTimerHandler
 30825  00819A  6FA7               	movwf	(_nwkTxDelayTimer+12)& (0+255),b
 30826                           
 30827                           ; BSR set to: 1
 30828  00819C  0012               	return		;funcret
 30829  00819E                     __end_of_nwkTxInit:
 30830                           	opt callstack 0
 30831                           
 30832 ;; *************** function _nwkRxInit *****************
 30833 ;; Defined at:
 30834 ;;		line 102 in file "../nwk/nwk_src/nwkRx.c"
 30835 ;; Parameters:    Size  Location     Type
 30836 ;;		None
 30837 ;; Auto vars:     Size  Location     Type
 30838 ;;  i               1    4[COMRAM] unsigned char 
 30839 ;; Return value:  Size  Location     Type
 30840 ;;                  1    wreg      void 
 30841 ;; Registers used:
 30842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30843 ;; Tracked objects:
 30844 ;;		On entry : 3F/1
 30845 ;;		On exit  : 0/0
 30846 ;;		Unchanged: 0/0
 30847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30851 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30852 ;;Total ram usage:        1 bytes
 30853 ;; Hardware stack levels used:    1
 30854 ;; Hardware stack levels required when called:    8
 30855 ;; This function calls:
 30856 ;;		_NWK_OpenEndpoint
 30857 ;; This function is called by:
 30858 ;;		_NWK_Init
 30859 ;; This function uses a non-reentrant model
 30860 ;;
 30861                           
 30862                           	psect	text204
 30863  007FE8                     __ptext204:
 30864                           	opt callstack 0
 30865  007FE8                     _nwkRxInit:
 30866                           	opt callstack 20
 30867                           
 30868                           ; BSR set to: 1
 30869                           ;../nwk/nwk_src/nwkRx.c: 104:   for (uint8_t i = 0; i < 10; i++)
 30870                           
 30871                           ; BSR set to: 1
 30872                           ;incstack = 0
 30873  007FE8  0E00               	movlw	0
 30874  007FEA  6E05               	movwf	nwkRxInit@i^0,c
 30875  007FEC                     l12432:
 30876                           
 30877                           ; BSR set to: 1
 30878                           ;../nwk/nwk_src/nwkRx.c: 105:     nwkRxDuplicateRejectionTable[i].ttl = 0;
 30879  007FEC  5005               	movf	nwkRxInit@i^0,w,c
 30880  007FEE  0D05               	mullw	5
 30881  007FF0  0E8E               	movlw	low (_nwkRxDuplicateRejectionTable+4)
 30882  007FF2  24F3               	addwf	243,w,c
 30883  007FF4  6ED9               	movwf	fsr2l,c
 30884  007FF6  0E02               	movlw	high (_nwkRxDuplicateRejectionTable+4)
 30885  007FF8  20F4               	addwfc	prodh,w,c
 30886  007FFA  6EDA               	movwf	fsr2h,c
 30887  007FFC  0E00               	movlw	0
 30888  007FFE  6EDF               	movwf	indf2,c
 30889                           
 30890                           ; BSR set to: 1
 30891  008000  2A05               	incf	nwkRxInit@i^0,f,c
 30892                           
 30893                           ; BSR set to: 1
 30894  008002  0E09               	movlw	9
 30895  008004  6405               	cpfsgt	nwkRxInit@i^0,c
 30896  008006  D7F2               	goto	l12432
 30897                           
 30898                           ; BSR set to: 1
 30899                           ;../nwk/nwk_src/nwkRx.c: 107:   nwkRxDuplicateRejectionTimer.interval = 5000;
 30900  008008  0E88               	movlw	136
 30901  00800A  6FBB               	movwf	(_nwkRxDuplicateRejectionTimer+6)& (0+255),b
 30902  00800C  0E13               	movlw	19
 30903  00800E  6FBC               	movwf	(_nwkRxDuplicateRejectionTimer+7)& (0+255),b
 30904  008010  0E00               	movlw	0
 30905  008012  6FBD               	movwf	(_nwkRxDuplicateRejectionTimer+8)& (0+255),b
 30906  008014  0E00               	movlw	0
 30907  008016  6FBE               	movwf	(_nwkRxDuplicateRejectionTimer+9)& (0+255),b
 30908                           
 30909                           ;../nwk/nwk_src/nwkRx.c: 108:   nwkRxDuplicateRejectionTimer.mode = SYS_TIMER_INTERVAL_M
      +                          ODE;
 30910  008018  0E00               	movlw	0
 30911  00801A  6FBF               	movwf	(_nwkRxDuplicateRejectionTimer+10)& (0+255),b
 30912                           
 30913                           ; BSR set to: 1
 30914                           ;../nwk/nwk_src/nwkRx.c: 109:   nwkRxDuplicateRejectionTimer.handler = nwkRxDuplicateRej
      +                          ectionTimerHandler;
 30915  00801C  0E56               	movlw	low _nwkRxDuplicateRejectionTimerHandler
 30916  00801E  6FC0               	movwf	(_nwkRxDuplicateRejectionTimer+11)& (0+255),b
 30917  008020  0E7E               	movlw	high _nwkRxDuplicateRejectionTimerHandler
 30918  008022  6FC1               	movwf	(_nwkRxDuplicateRejectionTimer+12)& (0+255),b
 30919                           
 30920                           ; BSR set to: 1
 30921                           ;../nwk/nwk_src/nwkRx.c: 111:   NWK_OpenEndpoint(0, nwkRxServiceDataInd);
 30922  008024  0EA4               	movlw	low _nwkRxServiceDataInd
 30923  008026  6E02               	movwf	NWK_OpenEndpoint@handler^0,c
 30924  008028  0E77               	movlw	high _nwkRxServiceDataInd
 30925  00802A  6E03               	movwf	(NWK_OpenEndpoint@handler+1)^0,c
 30926  00802C  0E00               	movlw	0
 30927  00802E  EC4B  F046         	call	_NWK_OpenEndpoint
 30928  008032  0012               	return		;funcret
 30929  008034                     __end_of_nwkRxInit:
 30930                           	opt callstack 0
 30931                           
 30932 ;; *************** function _NWK_OpenEndpoint *****************
 30933 ;; Defined at:
 30934 ;;		line 127 in file "../nwk/nwk_src/nwk.c"
 30935 ;; Parameters:    Size  Location     Type
 30936 ;;  id              1    wreg     unsigned char 
 30937 ;;  handler         2    1[COMRAM] PTR FTN(PTR struct NWK_D
 30938 ;;		 -> nwkRxServiceDataInd(1), appDataInd(1), 
 30939 ;; Auto vars:     Size  Location     Type
 30940 ;;  id              1    3[COMRAM] unsigned char 
 30941 ;; Return value:  Size  Location     Type
 30942 ;;                  1    wreg      void 
 30943 ;; Registers used:
 30944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30945 ;; Tracked objects:
 30946 ;;		On entry : 3/3D
 30947 ;;		On exit  : 0/0
 30948 ;;		Unchanged: 0/0
 30949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30950 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30953 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30954 ;;Total ram usage:        3 bytes
 30955 ;; Hardware stack levels used:    1
 30956 ;; Hardware stack levels required when called:    7
 30957 ;; This function calls:
 30958 ;;		Nothing
 30959 ;; This function is called by:
 30960 ;;		_bootLoadApplication
 30961 ;;		_nwkRxInit
 30962 ;; This function uses a non-reentrant model
 30963 ;;
 30964                           
 30965                           	psect	text205
 30966  008C96                     __ptext205:
 30967                           	opt callstack 0
 30968  008C96                     _NWK_OpenEndpoint:
 30969                           	opt callstack 22
 30970                           
 30971                           ;incstack = 0
 30972                           ;NWK_OpenEndpoint@id stored from wreg
 30973  008C96  6E04               	movwf	NWK_OpenEndpoint@id^0,c
 30974                           
 30975                           ;../nwk/nwk_src/nwk.c: 127: void NWK_OpenEndpoint(uint8_t id, _Bool (*handler)(NWK_DataI
      +                          nd_t *ind));../nwk/nwk_src/nwk.c: 128: {;../nwk/nwk_src/nwk.c: 129:   nwkIb.endpoint[id]
      +                           = handler;
 30976  008C98  5004               	movf	NWK_OpenEndpoint@id^0,w,c
 30977  008C9A  0D02               	mullw	2
 30978  008C9C  0E06               	movlw	low (_nwkIb+6)
 30979  008C9E  24F3               	addwf	243,w,c
 30980  008CA0  6ED9               	movwf	fsr2l,c
 30981  008CA2  0E01               	movlw	high (_nwkIb+6)
 30982  008CA4  20F4               	addwfc	prodh,w,c
 30983  008CA6  6EDA               	movwf	fsr2h,c
 30984  008CA8  0060  F00B  FFDE   	movff	NWK_OpenEndpoint@handler,postinc2
 30985  008CAE  0060  F00F  FFDD   	movff	NWK_OpenEndpoint@handler+1,postdec2
 30986  008CB4  0012               	return		;funcret
 30987  008CB6                     __end_of_NWK_OpenEndpoint:
 30988                           	opt callstack 0
 30989                           
 30990 ;; *************** function _nwkRouteInit *****************
 30991 ;; Defined at:
 30992 ;;		line 79 in file "../nwk/nwk_src/nwkRoute.c"
 30993 ;; Parameters:    Size  Location     Type
 30994 ;;		None
 30995 ;; Auto vars:     Size  Location     Type
 30996 ;;  i               1    1[COMRAM] unsigned char 
 30997 ;; Return value:  Size  Location     Type
 30998 ;;                  1    wreg      void 
 30999 ;; Registers used:
 31000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31001 ;; Tracked objects:
 31002 ;;		On entry : 3F/0
 31003 ;;		On exit  : 3F/2
 31004 ;;		Unchanged: 0/0
 31005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31009 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31010 ;;Total ram usage:        1 bytes
 31011 ;; Hardware stack levels used:    1
 31012 ;; Hardware stack levels required when called:    7
 31013 ;; This function calls:
 31014 ;;		Nothing
 31015 ;; This function is called by:
 31016 ;;		_NWK_Init
 31017 ;; This function uses a non-reentrant model
 31018 ;;
 31019                           
 31020                           	psect	text206
 31021  007F4C                     __ptext206:
 31022                           	opt callstack 0
 31023  007F4C                     _nwkRouteInit:
 31024                           	opt callstack 21
 31025                           
 31026                           ; BSR set to: 0
 31027                           ;../nwk/nwk_src/nwkRoute.c: 81:   for (uint8_t i = 0; i < 10; i++)
 31028                           
 31029                           ;incstack = 0
 31030  007F4C  0E00               	movlw	0
 31031  007F4E  6E02               	movwf	nwkRouteInit@i^0,c
 31032  007F50                     l12464:
 31033                           
 31034                           ;../nwk/nwk_src/nwkRoute.c: 82:   {;../nwk/nwk_src/nwkRoute.c: 83:     nwkRouteTable[i].
      +                          dstAddr = 0xffff;
 31035  007F50  5002               	movf	nwkRouteInit@i^0,w,c
 31036  007F52  0D07               	mullw	7
 31037  007F54  0E45               	movlw	low (_nwkRouteTable+1)
 31038  007F56  24F3               	addwf	243,w,c
 31039  007F58  6ED9               	movwf	fsr2l,c
 31040  007F5A  0E02               	movlw	high (_nwkRouteTable+1)
 31041  007F5C  20F4               	addwfc	prodh,w,c
 31042  007F5E  6EDA               	movwf	fsr2h,c
 31043  007F60  0EFF               	movlw	255
 31044  007F62  6EDE               	movwf	postinc2,c
 31045  007F64  0EFF               	movlw	255
 31046  007F66  6EDD               	movwf	postdec2,c
 31047                           
 31048                           ;../nwk/nwk_src/nwkRoute.c: 84:     nwkRouteTable[i].fixed = 0;
 31049  007F68  5002               	movf	nwkRouteInit@i^0,w,c
 31050  007F6A  0D07               	mullw	7
 31051  007F6C  0E44               	movlw	low _nwkRouteTable
 31052  007F6E  24F3               	addwf	243,w,c
 31053  007F70  6ED9               	movwf	fsr2l,c
 31054  007F72  0E02               	movlw	high _nwkRouteTable
 31055  007F74  20F4               	addwfc	prodh,w,c
 31056  007F76  6EDA               	movwf	fsr2h,c
 31057  007F78  0102               	movlb	2	; () banked
 31058  007F7A  90DF               	bcf	indf2,0,c
 31059                           
 31060                           ;../nwk/nwk_src/nwkRoute.c: 85:     nwkRouteTable[i].rank = 0;
 31061  007F7C  5002               	movf	nwkRouteInit@i^0,w,c
 31062  007F7E  0D07               	mullw	7
 31063  007F80  0E49               	movlw	low (_nwkRouteTable+5)
 31064  007F82  24F3               	addwf	243,w,c
 31065  007F84  6ED9               	movwf	fsr2l,c
 31066  007F86  0E02               	movlw	high (_nwkRouteTable+5)
 31067  007F88  20F4               	addwfc	prodh,w,c
 31068  007F8A  6EDA               	movwf	fsr2h,c
 31069  007F8C  0E00               	movlw	0
 31070  007F8E  6EDF               	movwf	indf2,c
 31071                           
 31072                           ; BSR set to: 2
 31073                           ;../nwk/nwk_src/nwkRoute.c: 86:   }
 31074  007F90  2A02               	incf	nwkRouteInit@i^0,f,c
 31075                           
 31076                           ; BSR set to: 2
 31077  007F92  0E09               	movlw	9
 31078  007F94  6402               	cpfsgt	nwkRouteInit@i^0,c
 31079  007F96  D7DC               	goto	l12464
 31080  007F98  0012               	return	
 31081  007F9A                     __end_of_nwkRouteInit:
 31082                           	opt callstack 0
 31083                           
 31084 ;; *************** function _nwkGroupInit *****************
 31085 ;; Defined at:
 31086 ;;		line 70 in file "../nwk/nwk_src/nwkGroup.c"
 31087 ;; Parameters:    Size  Location     Type
 31088 ;;		None
 31089 ;; Auto vars:     Size  Location     Type
 31090 ;;  i               1    1[COMRAM] unsigned char 
 31091 ;; Return value:  Size  Location     Type
 31092 ;;                  1    wreg      void 
 31093 ;; Registers used:
 31094 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31095 ;; Tracked objects:
 31096 ;;		On entry : 3F/2
 31097 ;;		On exit  : 3F/2
 31098 ;;		Unchanged: 3F/0
 31099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31101 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31104 ;;Total ram usage:        1 bytes
 31105 ;; Hardware stack levels used:    1
 31106 ;; Hardware stack levels required when called:    7
 31107 ;; This function calls:
 31108 ;;		Nothing
 31109 ;; This function is called by:
 31110 ;;		_NWK_Init
 31111 ;; This function uses a non-reentrant model
 31112 ;;
 31113                           
 31114                           	psect	text207
 31115  008AF6                     __ptext207:
 31116                           	opt callstack 0
 31117  008AF6                     _nwkGroupInit:
 31118                           	opt callstack 21
 31119                           
 31120                           ; BSR set to: 2
 31121                           ;../nwk/nwk_src/nwkGroup.c: 72:   for (uint8_t i = 0; i < 10; i++)
 31122                           
 31123                           ; BSR set to: 2
 31124                           ;incstack = 0
 31125  008AF6  0E00               	movlw	0
 31126  008AF8  6E02               	movwf	nwkGroupInit@i^0,c
 31127  008AFA                     l12476:
 31128                           
 31129                           ; BSR set to: 2
 31130                           ;../nwk/nwk_src/nwkGroup.c: 73:     nwkGroups[i] = 0xffff;
 31131  008AFA  5002               	movf	nwkGroupInit@i^0,w,c
 31132  008AFC  0D02               	mullw	2
 31133  008AFE  0E00               	movlw	low _nwkGroups
 31134  008B00  24F3               	addwf	243,w,c
 31135  008B02  6ED9               	movwf	fsr2l,c
 31136  008B04  0E02               	movlw	high _nwkGroups
 31137  008B06  20F4               	addwfc	prodh,w,c
 31138  008B08  6EDA               	movwf	fsr2h,c
 31139  008B0A  0EFF               	movlw	255
 31140  008B0C  6EDE               	movwf	postinc2,c
 31141  008B0E  0EFF               	movlw	255
 31142  008B10  6EDD               	movwf	postdec2,c
 31143                           
 31144                           ; BSR set to: 2
 31145  008B12  2A02               	incf	nwkGroupInit@i^0,f,c
 31146                           
 31147                           ; BSR set to: 2
 31148  008B14  0E09               	movlw	9
 31149  008B16  6402               	cpfsgt	nwkGroupInit@i^0,c
 31150  008B18  D7F0               	goto	l12476
 31151  008B1A  0012               	return	
 31152  008B1C                     __end_of_nwkGroupInit:
 31153                           	opt callstack 0
 31154                           
 31155 ;; *************** function _nwkFrameInit *****************
 31156 ;; Defined at:
 31157 ;;		line 70 in file "../nwk/nwk_src/nwkFrame.c"
 31158 ;; Parameters:    Size  Location     Type
 31159 ;;		None
 31160 ;; Auto vars:     Size  Location     Type
 31161 ;;  i               1    1[COMRAM] unsigned char 
 31162 ;; Return value:  Size  Location     Type
 31163 ;;                  1    wreg      void 
 31164 ;; Registers used:
 31165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31166 ;; Tracked objects:
 31167 ;;		On entry : 0/1
 31168 ;;		On exit  : 0/0
 31169 ;;		Unchanged: 0/0
 31170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31174 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31175 ;;Total ram usage:        1 bytes
 31176 ;; Hardware stack levels used:    1
 31177 ;; Hardware stack levels required when called:    7
 31178 ;; This function calls:
 31179 ;;		Nothing
 31180 ;; This function is called by:
 31181 ;;		_NWK_Init
 31182 ;; This function uses a non-reentrant model
 31183 ;;
 31184                           
 31185                           	psect	text208
 31186  008BEE                     __ptext208:
 31187                           	opt callstack 0
 31188  008BEE                     _nwkFrameInit:
 31189                           	opt callstack 21
 31190                           
 31191                           ;../nwk/nwk_src/nwkFrame.c: 72:   for (uint8_t i = 0; i < 5; i++)
 31192                           
 31193                           ; BSR set to: 2
 31194                           ;incstack = 0
 31195  008BEE  0E00               	movlw	0
 31196  008BF0  6E02               	movwf	nwkFrameInit@i^0,c
 31197  008BF2                     l12450:
 31198                           
 31199                           ;../nwk/nwk_src/nwkFrame.c: 73:     nwkFrameFrames[i].state = NWK_FRAME_STATE_FREE;
 31200  008BF2  5002               	movf	nwkFrameInit@i^0,w,c
 31201  008BF4  0D89               	mullw	137
 31202  008BF6  0EBD               	movlw	low _nwkFrameFrames
 31203  008BF8  24F3               	addwf	243,w,c
 31204  008BFA  6ED9               	movwf	fsr2l,c
 31205  008BFC  0E05               	movlw	high _nwkFrameFrames
 31206  008BFE  20F4               	addwfc	prodh,w,c
 31207  008C00  6EDA               	movwf	fsr2h,c
 31208  008C02  0E00               	movlw	0
 31209  008C04  6EDF               	movwf	indf2,c
 31210  008C06  2A02               	incf	nwkFrameInit@i^0,f,c
 31211  008C08  0E04               	movlw	4
 31212  008C0A  6402               	cpfsgt	nwkFrameInit@i^0,c
 31213  008C0C  D7F2               	goto	l12450
 31214  008C0E  0012               	return	
 31215  008C10                     __end_of_nwkFrameInit:
 31216                           	opt callstack 0
 31217                           
 31218 ;; *************** function _nwkDataReqInit *****************
 31219 ;; Defined at:
 31220 ;;		line 78 in file "../nwk/nwk_src/nwkDataReq.c"
 31221 ;; Parameters:    Size  Location     Type
 31222 ;;		None
 31223 ;; Auto vars:     Size  Location     Type
 31224 ;;		None
 31225 ;; Return value:  Size  Location     Type
 31226 ;;                  1    wreg      void 
 31227 ;; Registers used:
 31228 ;;		wreg, status,2, status,0
 31229 ;; Tracked objects:
 31230 ;;		On entry : 0/1
 31231 ;;		On exit  : 3F/0
 31232 ;;		Unchanged: 0/0
 31233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31238 ;;Total ram usage:        0 bytes
 31239 ;; Hardware stack levels used:    1
 31240 ;; Hardware stack levels required when called:    7
 31241 ;; This function calls:
 31242 ;;		Nothing
 31243 ;; This function is called by:
 31244 ;;		_NWK_Init
 31245 ;; This function uses a non-reentrant model
 31246 ;;
 31247                           
 31248                           	psect	text209
 31249  00903E                     __ptext209:
 31250                           	opt callstack 0
 31251  00903E                     _nwkDataReqInit:
 31252                           	opt callstack 21
 31253                           
 31254                           ;../nwk/nwk_src/nwkDataReq.c: 80:   nwkDataReqQueue = ((void*)0);
 31255                           
 31256                           ;incstack = 0
 31257  00903E  0E00               	movlw	0
 31258  009040  0100               	movlb	0	; () banked
 31259  009042  6FBF               	movwf	_nwkDataReqQueue& (0+255),b
 31260  009044  0E00               	movlw	0
 31261  009046  6FC0               	movwf	(_nwkDataReqQueue+1)& (0+255),b
 31262                           
 31263                           ; BSR set to: 0
 31264  009048  0012               	return		;funcret
 31265  00904A                     __end_of_nwkDataReqInit:
 31266                           	opt callstack 0
 31267                           
 31268 ;; *************** function _SYSTEM_Initialize *****************
 31269 ;; Defined at:
 31270 ;;		line 50 in file "mcc_generated_files/mcc.c"
 31271 ;; Parameters:    Size  Location     Type
 31272 ;;		None
 31273 ;; Auto vars:     Size  Location     Type
 31274 ;;		None
 31275 ;; Return value:  Size  Location     Type
 31276 ;;                  1    wreg      void 
 31277 ;; Registers used:
 31278 ;;		wreg, status,2, status,0, cstack
 31279 ;; Tracked objects:
 31280 ;;		On entry : 0/0
 31281 ;;		On exit  : 3F/3D
 31282 ;;		Unchanged: 0/0
 31283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31288 ;;Total ram usage:        0 bytes
 31289 ;; Hardware stack levels used:    1
 31290 ;; Hardware stack levels required when called:    9
 31291 ;; This function calls:
 31292 ;;		_CRC_Initialize
 31293 ;;		_INTERRUPT_Initialize
 31294 ;;		_OSCILLATOR_Initialize
 31295 ;;		_PIN_MANAGER_Initialize
 31296 ;;		_PMD_Initialize
 31297 ;;		_SPI1_Initialize
 31298 ;;		_TMR0_Initialize
 31299 ;;		_UART1_Initialize
 31300 ;; This function is called by:
 31301 ;;		_main
 31302 ;; This function uses a non-reentrant model
 31303 ;;
 31304                           
 31305                           	psect	text210
 31306  008C10                     __ptext210:
 31307                           	opt callstack 0
 31308  008C10                     _SYSTEM_Initialize:
 31309                           	opt callstack 21
 31310                           
 31311                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 31312                           
 31313                           ; BSR set to: 0
 31314                           ;incstack = 0
 31315  008C10  ECD8  F041         	call	_INTERRUPT_Initialize	;wreg free
 31316                           
 31317                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 31318  008C14  EC19  F046         	call	_PMD_Initialize	;wreg free
 31319                           
 31320                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 31321  008C18  EC6F  F039         	call	_PIN_MANAGER_Initialize	;wreg free
 31322                           
 31323                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 31324  008C1C  EC6A  F047         	call	_OSCILLATOR_Initialize	;wreg free
 31325                           
 31326                           ; BSR set to: 57
 31327                           ;mcc_generated_files/mcc.c: 56:     CRC_Initialize();
 31328  008C20  EC08  F03C         	call	_CRC_Initialize	;wreg free
 31329                           
 31330                           ; BSR set to: 0
 31331                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
 31332  008C24  EC93  F042         	call	_TMR0_Initialize	;wreg free
 31333                           
 31334                           ;mcc_generated_files/mcc.c: 58:     UART1_Initialize();
 31335  008C28  ECF3  F035         	call	_UART1_Initialize	;wreg free
 31336                           
 31337                           ; BSR set to: 57
 31338                           ;mcc_generated_files/mcc.c: 59:     SPI1_Initialize();
 31339  008C2C  EC15  F047         	call	_SPI1_Initialize	;wreg free
 31340                           
 31341                           ; BSR set to: 61
 31342  008C30  0012               	return		;funcret
 31343  008C32                     __end_of_SYSTEM_Initialize:
 31344                           	opt callstack 0
 31345                           
 31346 ;; *************** function _UART1_Initialize *****************
 31347 ;; Defined at:
 31348 ;;		line 95 in file "mcc_generated_files/uart1.c"
 31349 ;; Parameters:    Size  Location     Type
 31350 ;;		None
 31351 ;; Auto vars:     Size  Location     Type
 31352 ;;		None
 31353 ;; Return value:  Size  Location     Type
 31354 ;;                  1    wreg      void 
 31355 ;; Registers used:
 31356 ;;		wreg, status,2, status,0, cstack
 31357 ;; Tracked objects:
 31358 ;;		On entry : 3B/39
 31359 ;;		On exit  : 3F/39
 31360 ;;		Unchanged: 0/0
 31361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31366 ;;Total ram usage:        0 bytes
 31367 ;; Hardware stack levels used:    1
 31368 ;; Hardware stack levels required when called:    8
 31369 ;; This function calls:
 31370 ;;		_UART1_SetErrorHandler
 31371 ;;		_UART1_SetFramingErrorHandler
 31372 ;;		_UART1_SetOverrunErrorHandler
 31373 ;;		_UART1_SetRxInterruptHandler
 31374 ;;		_UART1_SetTxInterruptHandler
 31375 ;; This function is called by:
 31376 ;;		_SYSTEM_Initialize
 31377 ;; This function uses a non-reentrant model
 31378 ;;
 31379                           
 31380                           	psect	text211
 31381  006BE6                     __ptext211:
 31382                           	opt callstack 0
 31383  006BE6                     _UART1_Initialize:
 31384                           	opt callstack 21
 31385                           
 31386                           ;mcc_generated_files/uart1.c: 98:     PIE3bits.U1RXIE = 0;
 31387                           
 31388                           ; BSR set to: 61
 31389                           ;incstack = 0
 31390  006BE6  0139               	movlb	57	; () banked
 31391  006BE8  9793               	bcf	147,3,b	;volatile
 31392                           
 31393                           ; BSR set to: 57
 31394                           ;mcc_generated_files/uart1.c: 99:     UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 31395  006BEA  0E62               	movlw	low _UART1_Receive_ISR
 31396  006BEC  6E02               	movwf	UART1_SetRxInterruptHandler@InterruptHandler^0,c
 31397  006BEE  0E6E               	movlw	high _UART1_Receive_ISR
 31398  006BF0  6E03               	movwf	(UART1_SetRxInterruptHandler@InterruptHandler+1)^0,c
 31399  006BF2  ECF0  F047         	call	_UART1_SetRxInterruptHandler	;wreg free
 31400                           
 31401                           ; BSR set to: 57
 31402                           ;mcc_generated_files/uart1.c: 100:     PIE3bits.U1TXIE = 0;
 31403  006BF6  9993               	bcf	147,4,b	;volatile
 31404                           
 31405                           ;mcc_generated_files/uart1.c: 101:     UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 31406  006BF8  0E46               	movlw	low _UART1_Transmit_ISR
 31407  006BFA  6E02               	movwf	UART1_SetTxInterruptHandler@InterruptHandler^0,c
 31408  006BFC  0E88               	movlw	high _UART1_Transmit_ISR
 31409  006BFE  6E03               	movwf	(UART1_SetTxInterruptHandler@InterruptHandler+1)^0,c
 31410  006C00  ECE9  F047         	call	_UART1_SetTxInterruptHandler	;wreg free
 31411                           
 31412                           ; BSR set to: 57
 31413                           ;mcc_generated_files/uart1.c: 106:     U1P1L = 0x00;
 31414  006C04  0E00               	movlw	0
 31415  006C06  013D               	movlb	61	; () banked
 31416  006C08  6FEC               	movwf	236,b	;volatile
 31417                           
 31418                           ; BSR set to: 61
 31419                           ;mcc_generated_files/uart1.c: 109:     U1P1H = 0x00;
 31420  006C0A  0E00               	movlw	0
 31421  006C0C  6FED               	movwf	237,b	;volatile
 31422                           
 31423                           ; BSR set to: 61
 31424                           ;mcc_generated_files/uart1.c: 112:     U1P2L = 0x00;
 31425  006C0E  0E00               	movlw	0
 31426  006C10  6FEE               	movwf	238,b	;volatile
 31427                           
 31428                           ; BSR set to: 61
 31429                           ;mcc_generated_files/uart1.c: 115:     U1P2H = 0x00;
 31430  006C12  0E00               	movlw	0
 31431  006C14  6FEF               	movwf	239,b	;volatile
 31432                           
 31433                           ; BSR set to: 61
 31434                           ;mcc_generated_files/uart1.c: 118:     U1P3L = 0x00;
 31435  006C16  0E00               	movlw	0
 31436  006C18  6FF0               	movwf	240,b	;volatile
 31437                           
 31438                           ; BSR set to: 61
 31439                           ;mcc_generated_files/uart1.c: 121:     U1P3H = 0x00;
 31440  006C1A  0E00               	movlw	0
 31441  006C1C  6FF1               	movwf	241,b	;volatile
 31442                           
 31443                           ; BSR set to: 61
 31444                           ;mcc_generated_files/uart1.c: 124:     U1CON0 = 0xB3;
 31445  006C1E  0EB3               	movlw	179
 31446  006C20  6FF2               	movwf	242,b	;volatile
 31447                           
 31448                           ; BSR set to: 61
 31449                           ;mcc_generated_files/uart1.c: 127:     U1CON1 = 0x00;
 31450  006C22  0E00               	movlw	0
 31451  006C24  6FF3               	movwf	243,b	;volatile
 31452                           
 31453                           ; BSR set to: 61
 31454                           ;mcc_generated_files/uart1.c: 130:     U1CON2 = 0x82;
 31455  006C26  0E82               	movlw	130
 31456  006C28  6FF4               	movwf	244,b	;volatile
 31457                           
 31458                           ; BSR set to: 61
 31459                           ;mcc_generated_files/uart1.c: 133:     U1BRGL = 0x40;
 31460  006C2A  0E40               	movlw	64
 31461  006C2C  6FF5               	movwf	245,b	;volatile
 31462                           
 31463                           ; BSR set to: 61
 31464                           ;mcc_generated_files/uart1.c: 136:     U1BRGH = 0x03;
 31465  006C2E  0E03               	movlw	3
 31466  006C30  6FF6               	movwf	246,b	;volatile
 31467                           
 31468                           ; BSR set to: 61
 31469                           ;mcc_generated_files/uart1.c: 139:     U1FIFO = 0x00;
 31470  006C32  0E00               	movlw	0
 31471  006C34  6FF7               	movwf	247,b	;volatile
 31472                           
 31473                           ; BSR set to: 61
 31474                           ;mcc_generated_files/uart1.c: 142:     U1UIR = 0x00;
 31475  006C36  0E00               	movlw	0
 31476  006C38  6FF8               	movwf	248,b	;volatile
 31477                           
 31478                           ; BSR set to: 61
 31479                           ;mcc_generated_files/uart1.c: 145:     U1ERRIR = 0x00;
 31480  006C3A  0E00               	movlw	0
 31481  006C3C  6FF9               	movwf	249,b	;volatile
 31482                           
 31483                           ; BSR set to: 61
 31484                           ;mcc_generated_files/uart1.c: 148:     U1ERRIE = 0x00;
 31485  006C3E  0E00               	movlw	0
 31486  006C40  6FFA               	movwf	250,b	;volatile
 31487                           
 31488                           ; BSR set to: 61
 31489                           ;mcc_generated_files/uart1.c: 151:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
 31490  006C42  0EAC               	movlw	low _UART1_DefaultFramingErrorHandler
 31491  006C44  6E02               	movwf	UART1_SetFramingErrorHandler@interruptHandler^0,c
 31492  006C46  0E90               	movlw	high _UART1_DefaultFramingErrorHandler
 31493  006C48  6E03               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^0,c
 31494  006C4A  ECFE  F047         	call	_UART1_SetFramingErrorHandler	;wreg free
 31495                           
 31496                           ; BSR set to: 61
 31497                           ;mcc_generated_files/uart1.c: 152:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
 31498  006C4E  0EAA               	movlw	low _UART1_DefaultOverrunErrorHandler
 31499  006C50  6E02               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^0,c
 31500  006C52  0E90               	movlw	high _UART1_DefaultOverrunErrorHandler
 31501  006C54  6E03               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
 31502  006C56  ECF7  F047         	call	_UART1_SetOverrunErrorHandler	;wreg free
 31503                           
 31504                           ; BSR set to: 61
 31505                           ;mcc_generated_files/uart1.c: 153:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
 31506  006C5A  0E90               	movlw	low _UART1_DefaultErrorHandler
 31507  006C5C  6E02               	movwf	UART1_SetErrorHandler@interruptHandler^0,c
 31508  006C5E  0E90               	movlw	high _UART1_DefaultErrorHandler
 31509  006C60  6E03               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^0,c
 31510  006C62  EC05  F048         	call	_UART1_SetErrorHandler	;wreg free
 31511                           
 31512                           ;mcc_generated_files/uart1.c: 155:     uart1RxLastError.status = 0;
 31513  006C66  0E00               	movlw	0
 31514  006C68  0100               	movlb	0	; () banked
 31515  006C6A  6FC4               	movwf	_uart1RxLastError& (0+255),b	;volatile
 31516                           
 31517                           ;mcc_generated_files/uart1.c: 158:     uart1TxHead = 0;
 31518  006C6C  0E00               	movlw	0
 31519  006C6E  6FC8               	movwf	_uart1TxHead& (0+255),b	;volatile
 31520                           
 31521                           ;mcc_generated_files/uart1.c: 159:     uart1TxTail = 0;
 31522  006C70  0E00               	movlw	0
 31523  006C72  6FC7               	movwf	_uart1TxTail& (0+255),b	;volatile
 31524                           
 31525                           ;mcc_generated_files/uart1.c: 160:     uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 31526  006C74  0E40               	movlw	64
 31527  006C76  6FFF               	movwf	_uart1TxBufferRemaining& (0+255),b	;volatile
 31528                           
 31529                           ;mcc_generated_files/uart1.c: 161:     uart1RxHead = 0;
 31530  006C78  0E00               	movlw	0
 31531  006C7A  6E5E               	movwf	_uart1RxHead^0,c	;volatile
 31532                           
 31533                           ;mcc_generated_files/uart1.c: 162:     uart1RxTail = 0;
 31534  006C7C  0E00               	movlw	0
 31535  006C7E  6FC6               	movwf	_uart1RxTail& (0+255),b	;volatile
 31536                           
 31537                           ;mcc_generated_files/uart1.c: 163:     uart1RxCount = 0;
 31538  006C80  0E00               	movlw	0
 31539  006C82  6FC5               	movwf	_uart1RxCount& (0+255),b	;volatile
 31540                           
 31541                           ; BSR set to: 0
 31542                           ;mcc_generated_files/uart1.c: 166:     PIE3bits.U1RXIE = 1;
 31543  006C84  0139               	movlb	57	; () banked
 31544  006C86  8793               	bsf	147,3,b	;volatile
 31545                           
 31546                           ; BSR set to: 57
 31547  006C88  0012               	return		;funcret
 31548  006C8A                     __end_of_UART1_Initialize:
 31549                           	opt callstack 0
 31550                           
 31551 ;; *************** function _UART1_SetTxInterruptHandler *****************
 31552 ;; Defined at:
 31553 ;;		line 352 in file "mcc_generated_files/uart1.c"
 31554 ;; Parameters:    Size  Location     Type
 31555 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 31556 ;;		 -> UART1_Transmit_ISR(1), 
 31557 ;; Auto vars:     Size  Location     Type
 31558 ;;		None
 31559 ;; Return value:  Size  Location     Type
 31560 ;;                  1    wreg      void 
 31561 ;; Registers used:
 31562 ;;		wreg, status,2, status,0
 31563 ;; Tracked objects:
 31564 ;;		On entry : 3F/39
 31565 ;;		On exit  : 3F/39
 31566 ;;		Unchanged: 3E/0
 31567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31572 ;;Total ram usage:        2 bytes
 31573 ;; Hardware stack levels used:    1
 31574 ;; Hardware stack levels required when called:    7
 31575 ;; This function calls:
 31576 ;;		Nothing
 31577 ;; This function is called by:
 31578 ;;		_UART1_Initialize
 31579 ;; This function uses a non-reentrant model
 31580 ;;
 31581                           
 31582                           	psect	text212
 31583  008FD2                     __ptext212:
 31584                           	opt callstack 0
 31585  008FD2                     _UART1_SetTxInterruptHandler:
 31586                           	opt callstack 21
 31587                           
 31588                           ; BSR set to: 57
 31589                           ;mcc_generated_files/uart1.c: 353:     UART1_TxInterruptHandler = InterruptHandler;
 31590                           
 31591                           ; BSR set to: 57
 31592                           ;incstack = 0
 31593  008FD2  0060  F008  F1EE   	movff	UART1_SetTxInterruptHandler@InterruptHandler,_UART1_TxInterruptHandler
 31594  008FD8  0060  F00C  F1EF   	movff	UART1_SetTxInterruptHandler@InterruptHandler+1,_UART1_TxInterruptHandler+1
 31595                           
 31596                           ; BSR set to: 57
 31597  008FDE  0012               	return		;funcret
 31598  008FE0                     __end_of_UART1_SetTxInterruptHandler:
 31599                           	opt callstack 0
 31600                           
 31601 ;; *************** function _UART1_SetRxInterruptHandler *****************
 31602 ;; Defined at:
 31603 ;;		line 348 in file "mcc_generated_files/uart1.c"
 31604 ;; Parameters:    Size  Location     Type
 31605 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 31606 ;;		 -> UART1_Receive_ISR(1), 
 31607 ;; Auto vars:     Size  Location     Type
 31608 ;;		None
 31609 ;; Return value:  Size  Location     Type
 31610 ;;                  1    wreg      void 
 31611 ;; Registers used:
 31612 ;;		wreg, status,2, status,0
 31613 ;; Tracked objects:
 31614 ;;		On entry : 3F/39
 31615 ;;		On exit  : 3F/39
 31616 ;;		Unchanged: 3E/0
 31617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31618 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31621 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31622 ;;Total ram usage:        2 bytes
 31623 ;; Hardware stack levels used:    1
 31624 ;; Hardware stack levels required when called:    7
 31625 ;; This function calls:
 31626 ;;		Nothing
 31627 ;; This function is called by:
 31628 ;;		_UART1_Initialize
 31629 ;; This function uses a non-reentrant model
 31630 ;;
 31631                           
 31632                           	psect	text213
 31633  008FE0                     __ptext213:
 31634                           	opt callstack 0
 31635  008FE0                     _UART1_SetRxInterruptHandler:
 31636                           	opt callstack 21
 31637                           
 31638                           ; BSR set to: 57
 31639                           ;mcc_generated_files/uart1.c: 349:     UART1_RxInterruptHandler = InterruptHandler;
 31640                           
 31641                           ; BSR set to: 57
 31642                           ;incstack = 0
 31643  008FE0  0060  F008  F1F0   	movff	UART1_SetRxInterruptHandler@InterruptHandler,_UART1_RxInterruptHandler
 31644  008FE6  0060  F00C  F1F1   	movff	UART1_SetRxInterruptHandler@InterruptHandler+1,_UART1_RxInterruptHandler+1
 31645                           
 31646                           ; BSR set to: 57
 31647  008FEC  0012               	return		;funcret
 31648  008FEE                     __end_of_UART1_SetRxInterruptHandler:
 31649                           	opt callstack 0
 31650                           
 31651 ;; *************** function _UART1_SetOverrunErrorHandler *****************
 31652 ;; Defined at:
 31653 ;;		line 338 in file "mcc_generated_files/uart1.c"
 31654 ;; Parameters:    Size  Location     Type
 31655 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 31656 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
 31657 ;; Auto vars:     Size  Location     Type
 31658 ;;		None
 31659 ;; Return value:  Size  Location     Type
 31660 ;;                  1    wreg      void 
 31661 ;; Registers used:
 31662 ;;		wreg, status,2, status,0
 31663 ;; Tracked objects:
 31664 ;;		On entry : 3F/3D
 31665 ;;		On exit  : 3F/3D
 31666 ;;		Unchanged: 3E/0
 31667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31671 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31672 ;;Total ram usage:        2 bytes
 31673 ;; Hardware stack levels used:    1
 31674 ;; Hardware stack levels required when called:    7
 31675 ;; This function calls:
 31676 ;;		Nothing
 31677 ;; This function is called by:
 31678 ;;		_UART1_Initialize
 31679 ;; This function uses a non-reentrant model
 31680 ;;
 31681                           
 31682                           	psect	text214
 31683  008FEE                     __ptext214:
 31684                           	opt callstack 0
 31685  008FEE                     _UART1_SetOverrunErrorHandler:
 31686                           	opt callstack 21
 31687                           
 31688                           ; BSR set to: 61
 31689                           ;mcc_generated_files/uart1.c: 339:     UART1_OverrunErrorHandler = interruptHandler;
 31690                           
 31691                           ; BSR set to: 57
 31692                           ;incstack = 0
 31693  008FEE  0060  F008  F1E8   	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
 31694  008FF4  0060  F00C  F1E9   	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
 31695                           
 31696                           ; BSR set to: 61
 31697  008FFA  0012               	return		;funcret
 31698  008FFC                     __end_of_UART1_SetOverrunErrorHandler:
 31699                           	opt callstack 0
 31700                           
 31701 ;; *************** function _UART1_SetFramingErrorHandler *****************
 31702 ;; Defined at:
 31703 ;;		line 334 in file "mcc_generated_files/uart1.c"
 31704 ;; Parameters:    Size  Location     Type
 31705 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 31706 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
 31707 ;; Auto vars:     Size  Location     Type
 31708 ;;		None
 31709 ;; Return value:  Size  Location     Type
 31710 ;;                  1    wreg      void 
 31711 ;; Registers used:
 31712 ;;		wreg, status,2, status,0
 31713 ;; Tracked objects:
 31714 ;;		On entry : 3F/3D
 31715 ;;		On exit  : 3F/3D
 31716 ;;		Unchanged: 3E/0
 31717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31722 ;;Total ram usage:        2 bytes
 31723 ;; Hardware stack levels used:    1
 31724 ;; Hardware stack levels required when called:    7
 31725 ;; This function calls:
 31726 ;;		Nothing
 31727 ;; This function is called by:
 31728 ;;		_UART1_Initialize
 31729 ;; This function uses a non-reentrant model
 31730 ;;
 31731                           
 31732                           	psect	text215
 31733  008FFC                     __ptext215:
 31734                           	opt callstack 0
 31735  008FFC                     _UART1_SetFramingErrorHandler:
 31736                           	opt callstack 21
 31737                           
 31738                           ; BSR set to: 61
 31739                           ;mcc_generated_files/uart1.c: 335:     UART1_FramingErrorHandler = interruptHandler;
 31740                           
 31741                           ; BSR set to: 61
 31742                           ;incstack = 0
 31743  008FFC  0060  F008  F1EA   	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
 31744  009002  0060  F00C  F1EB   	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
 31745                           
 31746                           ; BSR set to: 61
 31747  009008  0012               	return		;funcret
 31748  00900A                     __end_of_UART1_SetFramingErrorHandler:
 31749                           	opt callstack 0
 31750                           
 31751 ;; *************** function _UART1_SetErrorHandler *****************
 31752 ;; Defined at:
 31753 ;;		line 342 in file "mcc_generated_files/uart1.c"
 31754 ;; Parameters:    Size  Location     Type
 31755 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
 31756 ;;		 -> UART1_DefaultErrorHandler(1), 
 31757 ;; Auto vars:     Size  Location     Type
 31758 ;;		None
 31759 ;; Return value:  Size  Location     Type
 31760 ;;                  1    wreg      void 
 31761 ;; Registers used:
 31762 ;;		wreg, status,2, status,0
 31763 ;; Tracked objects:
 31764 ;;		On entry : 3F/3D
 31765 ;;		On exit  : 3F/3D
 31766 ;;		Unchanged: 3E/0
 31767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31768 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31771 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31772 ;;Total ram usage:        2 bytes
 31773 ;; Hardware stack levels used:    1
 31774 ;; Hardware stack levels required when called:    7
 31775 ;; This function calls:
 31776 ;;		Nothing
 31777 ;; This function is called by:
 31778 ;;		_UART1_Initialize
 31779 ;; This function uses a non-reentrant model
 31780 ;;
 31781                           
 31782                           	psect	text216
 31783  00900A                     __ptext216:
 31784                           	opt callstack 0
 31785  00900A                     _UART1_SetErrorHandler:
 31786                           	opt callstack 21
 31787                           
 31788                           ; BSR set to: 61
 31789                           ;mcc_generated_files/uart1.c: 343:     UART1_ErrorHandler = interruptHandler;
 31790                           
 31791                           ; BSR set to: 61
 31792                           ;incstack = 0
 31793  00900A  0060  F008  F1E6   	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
 31794  009010  0060  F00C  F1E7   	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
 31795                           
 31796                           ; BSR set to: 61
 31797  009016  0012               	return		;funcret
 31798  009018                     __end_of_UART1_SetErrorHandler:
 31799                           	opt callstack 0
 31800                           
 31801 ;; *************** function _TMR0_Initialize *****************
 31802 ;; Defined at:
 31803 ;;		line 67 in file "mcc_generated_files/tmr0.c"
 31804 ;; Parameters:    Size  Location     Type
 31805 ;;		None
 31806 ;; Auto vars:     Size  Location     Type
 31807 ;;		None
 31808 ;; Return value:  Size  Location     Type
 31809 ;;                  1    wreg      void 
 31810 ;; Registers used:
 31811 ;;		wreg, status,2, status,0, cstack
 31812 ;; Tracked objects:
 31813 ;;		On entry : 3F/0
 31814 ;;		On exit  : 3B/39
 31815 ;;		Unchanged: 0/0
 31816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31819 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31820 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31821 ;;Total ram usage:        2 bytes
 31822 ;; Hardware stack levels used:    1
 31823 ;; Hardware stack levels required when called:    8
 31824 ;; This function calls:
 31825 ;;		_TMR0_SetInterruptHandler
 31826 ;; This function is called by:
 31827 ;;		_SYSTEM_Initialize
 31828 ;; This function uses a non-reentrant model
 31829 ;;
 31830                           
 31831                           	psect	text217
 31832  008526                     __ptext217:
 31833                           	opt callstack 0
 31834  008526                     _TMR0_Initialize:
 31835                           	opt callstack 21
 31836                           
 31837                           ; BSR set to: 0
 31838                           ;mcc_generated_files/tmr0.c: 72:     T0CON1 = 0x40;
 31839                           
 31840                           ; BSR set to: 61
 31841                           ;incstack = 0
 31842  008526  0E40               	movlw	64
 31843  008528  6EB9               	movwf	185,c	;volatile
 31844                           
 31845                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0xC1;
 31846  00852A  0EC1               	movlw	193
 31847  00852C  6EB7               	movwf	183,c	;volatile
 31848                           
 31849                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x80;
 31850  00852E  0E80               	movlw	128
 31851  008530  6EB6               	movwf	182,c	;volatile
 31852                           
 31853                           ; BSR set to: 0
 31854                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal16bit = (TMR0H << 8) | TMR0L;
 31855  008532  50B6               	movf	182,w,c	;volatile
 31856  008534  006F FEDC  F004    	movff	16311,??_TMR0_Initialize	;volatile
 31857  00853A  6A05               	clrf	(??_TMR0_Initialize+1)^0,c
 31858  00853C  0060  F010  F005   	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
 31859  008542  6A04               	clrf	??_TMR0_Initialize^0,c
 31860  008544  1004               	iorwf	??_TMR0_Initialize^0,w,c
 31861  008546  6FFD               	movwf	_timer0ReloadVal16bit& (0+255),b	;volatile
 31862  008548  5005               	movf	(??_TMR0_Initialize+1)^0,w,c
 31863  00854A  6FFE               	movwf	(_timer0ReloadVal16bit+1)& (0+255),b	;volatile
 31864                           
 31865                           ; BSR set to: 0
 31866                           ;mcc_generated_files/tmr0.c: 84:     PIR3bits.TMR0IF = 0;
 31867  00854C  0139               	movlb	57	; () banked
 31868  00854E  9FA3               	bcf	163,7,b	;volatile
 31869                           
 31870                           ; BSR set to: 57
 31871                           ;mcc_generated_files/tmr0.c: 87:     PIE3bits.TMR0IE = 1;
 31872  008550  8F93               	bsf	147,7,b	;volatile
 31873                           
 31874                           ; BSR set to: 57
 31875                           ;mcc_generated_files/tmr0.c: 90:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 31876  008552  0EA4               	movlw	low _TMR0_DefaultInterruptHandler
 31877  008554  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
 31878  008556  0E90               	movlw	high _TMR0_DefaultInterruptHandler
 31879  008558  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
 31880  00855A  EC0C  F048         	call	_TMR0_SetInterruptHandler	;wreg free
 31881                           
 31882                           ;mcc_generated_files/tmr0.c: 93:     T0CON0 = 0x90;
 31883  00855E  0E90               	movlw	144
 31884  008560  6EB8               	movwf	184,c	;volatile
 31885  008562  0012               	return		;funcret
 31886  008564                     __end_of_TMR0_Initialize:
 31887                           	opt callstack 0
 31888                           
 31889 ;; *************** function _TMR0_SetInterruptHandler *****************
 31890 ;; Defined at:
 31891 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 31892 ;; Parameters:    Size  Location     Type
 31893 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
 31894 ;;		 -> TMR0_DefaultInterruptHandler(1), Timer0Handler(1), 
 31895 ;; Auto vars:     Size  Location     Type
 31896 ;;		None
 31897 ;; Return value:  Size  Location     Type
 31898 ;;                  1    wreg      void 
 31899 ;; Registers used:
 31900 ;;		wreg, status,2, status,0
 31901 ;; Tracked objects:
 31902 ;;		On entry : 3B/3D
 31903 ;;		On exit  : 3B/39
 31904 ;;		Unchanged: 3A/0
 31905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31906 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31909 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31910 ;;Total ram usage:        2 bytes
 31911 ;; Hardware stack levels used:    1
 31912 ;; Hardware stack levels required when called:    7
 31913 ;; This function calls:
 31914 ;;		Nothing
 31915 ;; This function is called by:
 31916 ;;		_TMR0_Initialize
 31917 ;;		_main
 31918 ;; This function uses a non-reentrant model
 31919 ;;
 31920                           
 31921                           	psect	text218
 31922  009018                     __ptext218:
 31923                           	opt callstack 0
 31924  009018                     _TMR0_SetInterruptHandler:
 31925                           	opt callstack 23
 31926                           
 31927                           ;mcc_generated_files/tmr0.c: 161:     TMR0_InterruptHandler = InterruptHandler;
 31928                           
 31929                           ;incstack = 0
 31930  009018  0060  F008  F1EC   	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
 31931  00901E  0060  F00C  F1ED   	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
 31932  009024  0012               	return		;funcret
 31933  009026                     __end_of_TMR0_SetInterruptHandler:
 31934                           	opt callstack 0
 31935                           
 31936 ;; *************** function _SPI1_Initialize *****************
 31937 ;; Defined at:
 31938 ;;		line 64 in file "mcc_generated_files/spi1.c"
 31939 ;; Parameters:    Size  Location     Type
 31940 ;;		None
 31941 ;; Auto vars:     Size  Location     Type
 31942 ;;		None
 31943 ;; Return value:  Size  Location     Type
 31944 ;;                  1    wreg      void 
 31945 ;; Registers used:
 31946 ;;		wreg, status,2
 31947 ;; Tracked objects:
 31948 ;;		On entry : 3F/39
 31949 ;;		On exit  : 3F/3D
 31950 ;;		Unchanged: 0/0
 31951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31956 ;;Total ram usage:        0 bytes
 31957 ;; Hardware stack levels used:    1
 31958 ;; Hardware stack levels required when called:    7
 31959 ;; This function calls:
 31960 ;;		Nothing
 31961 ;; This function is called by:
 31962 ;;		_SYSTEM_Initialize
 31963 ;; This function uses a non-reentrant model
 31964 ;;
 31965                           
 31966                           	psect	text219
 31967  008E2A                     __ptext219:
 31968                           	opt callstack 0
 31969  008E2A                     _SPI1_Initialize:
 31970                           	opt callstack 22
 31971                           
 31972                           ; BSR set to: 57
 31973                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x82;
 31974                           
 31975                           ;incstack = 0
 31976  008E2A  0E82               	movlw	130
 31977  008E2C  013D               	movlb	61	; () banked
 31978  008E2E  6F14               	movwf	20,b	;volatile
 31979                           
 31980                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0xC0;
 31981  008E30  0EC0               	movlw	192
 31982  008E32  6F15               	movwf	21,b	;volatile
 31983                           
 31984                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x03;
 31985  008E34  0E03               	movlw	3
 31986  008E36  6F16               	movwf	22,b	;volatile
 31987                           
 31988                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x01;
 31989  008E38  0E01               	movlw	1
 31990  008E3A  6F1C               	movwf	28,b	;volatile
 31991                           
 31992                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x03;
 31993  008E3C  0E03               	movlw	3
 31994  008E3E  6F19               	movwf	25,b	;volatile
 31995                           
 31996                           ; BSR set to: 61
 31997                           ;mcc_generated_files/spi1.c: 76:     TRISBbits.TRISB2 = 0;
 31998  008E40  94C3               	bcf	195,2,c	;volatile
 31999                           
 32000                           ; BSR set to: 61
 32001  008E42  0012               	return		;funcret
 32002  008E44                     __end_of_SPI1_Initialize:
 32003                           	opt callstack 0
 32004                           
 32005 ;; *************** function _PMD_Initialize *****************
 32006 ;; Defined at:
 32007 ;;		line 76 in file "mcc_generated_files/mcc.c"
 32008 ;; Parameters:    Size  Location     Type
 32009 ;;		None
 32010 ;; Auto vars:     Size  Location     Type
 32011 ;;		None
 32012 ;; Return value:  Size  Location     Type
 32013 ;;                  1    wreg      void 
 32014 ;; Registers used:
 32015 ;;		wreg, status,2
 32016 ;; Tracked objects:
 32017 ;;		On entry : 3F/39
 32018 ;;		On exit  : 3F/39
 32019 ;;		Unchanged: 0/0
 32020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32025 ;;Total ram usage:        0 bytes
 32026 ;; Hardware stack levels used:    1
 32027 ;; Hardware stack levels required when called:    7
 32028 ;; This function calls:
 32029 ;;		Nothing
 32030 ;; This function is called by:
 32031 ;;		_SYSTEM_Initialize
 32032 ;; This function uses a non-reentrant model
 32033 ;;
 32034                           
 32035                           	psect	text220
 32036  008C32                     __ptext220:
 32037                           	opt callstack 0
 32038  008C32                     _PMD_Initialize:
 32039                           	opt callstack 22
 32040                           
 32041                           ; BSR set to: 57
 32042                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
 32043                           
 32044                           ; BSR set to: 61
 32045                           ;incstack = 0
 32046  008C32  0E00               	movlw	0
 32047  008C34  6FC0               	movwf	192,b	;volatile
 32048                           
 32049                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
 32050  008C36  0E00               	movlw	0
 32051  008C38  6FC1               	movwf	193,b	;volatile
 32052                           
 32053                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
 32054  008C3A  0E00               	movlw	0
 32055  008C3C  6FC2               	movwf	194,b	;volatile
 32056                           
 32057                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
 32058  008C3E  0E00               	movlw	0
 32059  008C40  6FC3               	movwf	195,b	;volatile
 32060                           
 32061                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
 32062  008C42  0E00               	movlw	0
 32063  008C44  6FC4               	movwf	196,b	;volatile
 32064                           
 32065                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
 32066  008C46  0E00               	movlw	0
 32067  008C48  6FC5               	movwf	197,b	;volatile
 32068                           
 32069                           ;mcc_generated_files/mcc.c: 91:     PMD6 = 0x00;
 32070  008C4A  0E00               	movlw	0
 32071  008C4C  6FC6               	movwf	198,b	;volatile
 32072                           
 32073                           ;mcc_generated_files/mcc.c: 93:     PMD7 = 0x00;
 32074  008C4E  0E00               	movlw	0
 32075  008C50  6FC7               	movwf	199,b	;volatile
 32076                           
 32077                           ; BSR set to: 57
 32078  008C52  0012               	return		;funcret
 32079  008C54                     __end_of_PMD_Initialize:
 32080                           	opt callstack 0
 32081                           
 32082 ;; *************** function _PIN_MANAGER_Initialize *****************
 32083 ;; Defined at:
 32084 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 32085 ;; Parameters:    Size  Location     Type
 32086 ;;		None
 32087 ;; Auto vars:     Size  Location     Type
 32088 ;;		None
 32089 ;; Return value:  Size  Location     Type
 32090 ;;                  1    wreg      void 
 32091 ;; Registers used:
 32092 ;;		wreg, status,2
 32093 ;; Tracked objects:
 32094 ;;		On entry : 3F/39
 32095 ;;		On exit  : 3F/3A
 32096 ;;		Unchanged: 0/0
 32097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32102 ;;Total ram usage:        0 bytes
 32103 ;; Hardware stack levels used:    1
 32104 ;; Hardware stack levels required when called:    7
 32105 ;; This function calls:
 32106 ;;		Nothing
 32107 ;; This function is called by:
 32108 ;;		_SYSTEM_Initialize
 32109 ;; This function uses a non-reentrant model
 32110 ;;
 32111                           
 32112                           	psect	text221
 32113  0072DE                     __ptext221:
 32114                           	opt callstack 0
 32115  0072DE                     _PIN_MANAGER_Initialize:
 32116                           	opt callstack 22
 32117                           
 32118                           ; BSR set to: 57
 32119                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x08;
 32120                           
 32121                           ; BSR set to: 57
 32122                           ;incstack = 0
 32123  0072DE  0E08               	movlw	8
 32124  0072E0  6EBA               	movwf	186,c	;volatile
 32125                           
 32126                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 32127  0072E2  0E00               	movlw	0
 32128  0072E4  6EBB               	movwf	187,c	;volatile
 32129                           
 32130                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x40;
 32131  0072E6  0E40               	movlw	64
 32132  0072E8  6EBC               	movwf	188,c	;volatile
 32133                           
 32134                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xF7;
 32135  0072EA  0EF7               	movlw	247
 32136  0072EC  6EC2               	movwf	194,c	;volatile
 32137                           
 32138                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFE;
 32139  0072EE  0EFE               	movlw	254
 32140  0072F0  6EC3               	movwf	195,c	;volatile
 32141                           
 32142                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x1C;
 32143  0072F2  0E1C               	movlw	28
 32144  0072F4  6EC4               	movwf	196,c	;volatile
 32145                           
 32146                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x29;
 32147  0072F6  0E29               	movlw	41
 32148  0072F8  013A               	movlb	58	; () banked
 32149  0072FA  6F60               	movwf	96,b	;volatile
 32150                           
 32151                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xCD;
 32152  0072FC  0ECD               	movlw	205
 32153  0072FE  6F50               	movwf	80,b	;volatile
 32154                           
 32155                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xF2;
 32156  007300  0EF2               	movlw	242
 32157  007302  6F40               	movwf	64,b	;volatile
 32158                           
 32159                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
 32160  007304  0E00               	movlw	0
 32161  007306  6F81               	movwf	129,b	;volatile
 32162                           
 32163                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
 32164  007308  0E00               	movlw	0
 32165  00730A  6F51               	movwf	81,b	;volatile
 32166                           
 32167                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
 32168  00730C  0E00               	movlw	0
 32169  00730E  6F41               	movwf	65,b	;volatile
 32170                           
 32171                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x08;
 32172  007310  0E08               	movlw	8
 32173  007312  6F61               	movwf	97,b	;volatile
 32174                           
 32175                           ;mcc_generated_files/pin_manager.c: 89:     RB1I2C = 0x00;
 32176  007314  0E00               	movlw	0
 32177  007316  6F5A               	movwf	90,b	;volatile
 32178                           
 32179                           ;mcc_generated_files/pin_manager.c: 90:     RB2I2C = 0x00;
 32180  007318  0E00               	movlw	0
 32181  00731A  6F5B               	movwf	91,b	;volatile
 32182                           
 32183                           ;mcc_generated_files/pin_manager.c: 91:     RC3I2C = 0x00;
 32184  00731C  0E00               	movlw	0
 32185  00731E  6F6A               	movwf	106,b	;volatile
 32186                           
 32187                           ;mcc_generated_files/pin_manager.c: 92:     RC4I2C = 0x00;
 32188  007320  0E00               	movlw	0
 32189  007322  6F6B               	movwf	107,b	;volatile
 32190                           
 32191                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 32192  007324  0E00               	movlw	0
 32193  007326  6F42               	movwf	66,b	;volatile
 32194                           
 32195                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x06;
 32196  007328  0E06               	movlw	6
 32197  00732A  6F52               	movwf	82,b	;volatile
 32198                           
 32199                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x18;
 32200  00732C  0E18               	movlw	24
 32201  00732E  6F62               	movwf	98,b	;volatile
 32202                           
 32203                           ; BSR set to: 58
 32204                           ;mcc_generated_files/pin_manager.c: 104:     SLRCONA = 0xFF;
 32205  007330  6943               	setf	67,b	;volatile
 32206                           
 32207                           ; BSR set to: 58
 32208                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONB = 0xFF;
 32209  007332  6953               	setf	83,b	;volatile
 32210                           
 32211                           ; BSR set to: 58
 32212                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONC = 0xFF;
 32213  007334  6963               	setf	99,b	;volatile
 32214                           
 32215                           ; BSR set to: 58
 32216                           ;mcc_generated_files/pin_manager.c: 111:     INLVLA = 0xFF;
 32217  007336  6944               	setf	68,b	;volatile
 32218                           
 32219                           ; BSR set to: 58
 32220                           ;mcc_generated_files/pin_manager.c: 112:     INLVLB = 0xFF;
 32221  007338  6954               	setf	84,b	;volatile
 32222                           
 32223                           ; BSR set to: 58
 32224                           ;mcc_generated_files/pin_manager.c: 113:     INLVLC = 0xFF;
 32225  00733A  6964               	setf	100,b	;volatile
 32226                           
 32227                           ;mcc_generated_files/pin_manager.c: 114:     INLVLE = 0x08;
 32228  00733C  0E08               	movlw	8
 32229  00733E  6F84               	movwf	132,b	;volatile
 32230                           
 32231                           ;mcc_generated_files/pin_manager.c: 123:     RC0PPS = 0x13;
 32232  007340  0E13               	movlw	19
 32233  007342  6F10               	movwf	16,b	;volatile
 32234                           
 32235                           ;mcc_generated_files/pin_manager.c: 124:     SPI1SCKPPS = 0x17;
 32236  007344  0E17               	movlw	23
 32237  007346  6FDE               	movwf	222,b	;volatile
 32238                           
 32239                           ;mcc_generated_files/pin_manager.c: 125:     SPI1SSPPS = 0x05;
 32240  007348  0E05               	movlw	5
 32241  00734A  6FE0               	movwf	224,b	;volatile
 32242                           
 32243                           ;mcc_generated_files/pin_manager.c: 126:     RB0PPS = 0x1F;
 32244  00734C  0E1F               	movlw	31
 32245  00734E  6F08               	movwf	8,b	;volatile
 32246                           
 32247                           ;mcc_generated_files/pin_manager.c: 127:     RC1PPS = 0x14;
 32248  007350  0E14               	movlw	20
 32249  007352  6F11               	movwf	17,b	;volatile
 32250                           
 32251                           ;mcc_generated_files/pin_manager.c: 128:     U1RXPPS = 0x12;
 32252  007354  0E12               	movlw	18
 32253  007356  6FE5               	movwf	229,b	;volatile
 32254                           
 32255                           ;mcc_generated_files/pin_manager.c: 129:     U1CTSPPS = 0x1F;
 32256  007358  0E1F               	movlw	31
 32257  00735A  6FE6               	movwf	230,b	;volatile
 32258                           
 32259                           ;mcc_generated_files/pin_manager.c: 130:     RC7PPS = 0x1E;
 32260  00735C  0E1E               	movlw	30
 32261  00735E  6F17               	movwf	23,b	;volatile
 32262                           
 32263                           ;mcc_generated_files/pin_manager.c: 131:     SPI1SDIPPS = 0x09;
 32264  007360  0E09               	movlw	9
 32265  007362  6FDF               	movwf	223,b	;volatile
 32266                           
 32267                           ; BSR set to: 58
 32268  007364  0012               	return		;funcret
 32269  007366                     __end_of_PIN_MANAGER_Initialize:
 32270                           	opt callstack 0
 32271                           
 32272 ;; *************** function _OSCILLATOR_Initialize *****************
 32273 ;; Defined at:
 32274 ;;		line 62 in file "mcc_generated_files/mcc.c"
 32275 ;; Parameters:    Size  Location     Type
 32276 ;;		None
 32277 ;; Auto vars:     Size  Location     Type
 32278 ;;		None
 32279 ;; Return value:  Size  Location     Type
 32280 ;;                  1    wreg      void 
 32281 ;; Registers used:
 32282 ;;		wreg, status,2
 32283 ;; Tracked objects:
 32284 ;;		On entry : 3F/3A
 32285 ;;		On exit  : 3F/39
 32286 ;;		Unchanged: 0/0
 32287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32292 ;;Total ram usage:        0 bytes
 32293 ;; Hardware stack levels used:    1
 32294 ;; Hardware stack levels required when called:    7
 32295 ;; This function calls:
 32296 ;;		Nothing
 32297 ;; This function is called by:
 32298 ;;		_SYSTEM_Initialize
 32299 ;; This function uses a non-reentrant model
 32300 ;;
 32301                           
 32302                           	psect	text222
 32303  008ED4                     __ptext222:
 32304                           	opt callstack 0
 32305  008ED4                     _OSCILLATOR_Initialize:
 32306                           	opt callstack 22
 32307                           
 32308                           ; BSR set to: 58
 32309                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
 32310                           
 32311                           ; BSR set to: 58
 32312                           ;incstack = 0
 32313  008ED4  0E60               	movlw	96
 32314  008ED6  0139               	movlb	57	; () banked
 32315  008ED8  6FD9               	movwf	217,b	;volatile
 32316                           
 32317                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
 32318  008EDA  0E00               	movlw	0
 32319  008EDC  6FDB               	movwf	219,b	;volatile
 32320                           
 32321                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
 32322  008EDE  0E00               	movlw	0
 32323  008EE0  6FDD               	movwf	221,b	;volatile
 32324                           
 32325                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x08;
 32326  008EE2  0E08               	movlw	8
 32327  008EE4  6FDF               	movwf	223,b	;volatile
 32328                           
 32329                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
 32330  008EE6  0E00               	movlw	0
 32331  008EE8  6FDE               	movwf	222,b	;volatile
 32332                           
 32333                           ; BSR set to: 57
 32334  008EEA  0012               	return		;funcret
 32335  008EEC                     __end_of_OSCILLATOR_Initialize:
 32336                           	opt callstack 0
 32337                           
 32338 ;; *************** function _INTERRUPT_Initialize *****************
 32339 ;; Defined at:
 32340 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 32341 ;; Parameters:    Size  Location     Type
 32342 ;;		None
 32343 ;; Auto vars:     Size  Location     Type
 32344 ;;  state           1    1[COMRAM] _Bool 
 32345 ;; Return value:  Size  Location     Type
 32346 ;;                  1    wreg      void 
 32347 ;; Registers used:
 32348 ;;		wreg, status,2
 32349 ;; Tracked objects:
 32350 ;;		On entry : 0/0
 32351 ;;		On exit  : 3F/39
 32352 ;;		Unchanged: 0/0
 32353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32357 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32358 ;;Total ram usage:        1 bytes
 32359 ;; Hardware stack levels used:    1
 32360 ;; Hardware stack levels required when called:    7
 32361 ;; This function calls:
 32362 ;;		Nothing
 32363 ;; This function is called by:
 32364 ;;		_SYSTEM_Initialize
 32365 ;; This function uses a non-reentrant model
 32366 ;;
 32367                           
 32368                           	psect	text223
 32369  0083B0                     __ptext223:
 32370                           	opt callstack 0
 32371  0083B0                     _INTERRUPT_Initialize:
 32372                           	opt callstack 22
 32373                           
 32374                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 32375                           
 32376                           ; BSR set to: 57
 32377                           ;incstack = 0
 32378  0083B0  8AD2               	bsf	210,5,c	;volatile
 32379                           
 32380                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 32381  0083B2  0E00               	movlw	0
 32382  0083B4  BED2               	btfsc	16338,7,c	;volatile
 32383  0083B6  0E01               	movlw	1
 32384  0083B8  6E02               	movwf	INTERRUPT_Initialize@state^0,c
 32385                           
 32386                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 32387  0083BA  9ED2               	bcf	16338,7,c	;volatile
 32388                           
 32389                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 32390  0083BC  0E55               	movlw	85
 32391  0083BE  6ED4               	movwf	212,c	;volatile
 32392                           
 32393                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 32394  0083C0  0EAA               	movlw	170
 32395  0083C2  6ED4               	movwf	212,c	;volatile
 32396                           
 32397                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 32398  0083C4  90D4               	bcf	212,0,c	;volatile
 32399                           
 32400                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTBASEU = 0;
 32401  0083C6  0E00               	movlw	0
 32402  0083C8  6ED7               	movwf	215,c	;volatile
 32403                           
 32404                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTBASEH = 0;
 32405  0083CA  0E00               	movlw	0
 32406  0083CC  6ED6               	movwf	214,c	;volatile
 32407                           
 32408                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTBASEL = 8;
 32409  0083CE  0E08               	movlw	8
 32410  0083D0  6ED5               	movwf	213,c	;volatile
 32411                           
 32412                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 32413  0083D2  0E55               	movlw	85
 32414  0083D4  6ED4               	movwf	212,c	;volatile
 32415                           
 32416                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 32417  0083D6  0EAA               	movlw	170
 32418  0083D8  6ED4               	movwf	212,c	;volatile
 32419                           
 32420                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 32421  0083DA  80D4               	bsf	212,0,c	;volatile
 32422                           
 32423                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 32424  0083DC  B002               	btfsc	INTERRUPT_Initialize@state^0,0,c
 32425  0083DE  D002               	bra	u5935
 32426  0083E0  9ED2               	bcf	16338,7,c	;volatile
 32427  0083E2  D001               	bra	u5936
 32428  0083E4                     u5935:
 32429  0083E4  8ED2               	bsf	16338,7,c	;volatile
 32430  0083E6                     u5936:
 32431                           
 32432                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR3bits.U1TXIP = 1;
 32433  0083E6  0139               	movlb	57	; () banked
 32434  0083E8  8983               	bsf	131,4,b	;volatile
 32435                           
 32436                           ; BSR set to: 57
 32437                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR3bits.U1RXIP = 1;
 32438  0083EA  8783               	bsf	131,3,b	;volatile
 32439                           
 32440                           ; BSR set to: 57
 32441                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR3bits.TMR0IP = 0;
 32442  0083EC  9F83               	bcf	131,7,b	;volatile
 32443                           
 32444                           ; BSR set to: 57
 32445  0083EE  0012               	return		;funcret
 32446  0083F0                     __end_of_INTERRUPT_Initialize:
 32447                           	opt callstack 0
 32448                           
 32449 ;; *************** function _CRC_Initialize *****************
 32450 ;; Defined at:
 32451 ;;		line 76 in file "mcc_generated_files/crc.c"
 32452 ;; Parameters:    Size  Location     Type
 32453 ;;		None
 32454 ;; Auto vars:     Size  Location     Type
 32455 ;;  seed            2    4[COMRAM] unsigned short 
 32456 ;;  poly            2    2[COMRAM] unsigned short 
 32457 ;; Return value:  Size  Location     Type
 32458 ;;                  1    wreg      void 
 32459 ;; Registers used:
 32460 ;;		wreg, status,2, status,0
 32461 ;; Tracked objects:
 32462 ;;		On entry : 3F/39
 32463 ;;		On exit  : 3F/0
 32464 ;;		Unchanged: 0/0
 32465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32467 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32469 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32470 ;;Total ram usage:        5 bytes
 32471 ;; Hardware stack levels used:    1
 32472 ;; Hardware stack levels required when called:    7
 32473 ;; This function calls:
 32474 ;;		Nothing
 32475 ;; This function is called by:
 32476 ;;		_SYSTEM_Initialize
 32477 ;; This function uses a non-reentrant model
 32478 ;;
 32479                           
 32480                           	psect	text224
 32481  007810                     __ptext224:
 32482                           	opt callstack 0
 32483  007810                     _CRC_Initialize:
 32484                           	opt callstack 22
 32485                           
 32486                           ; BSR set to: 57
 32487                           ;mcc_generated_files/crc.c: 78:     uint16_t poly;;mcc_generated_files/crc.c: 79:     ui
      +                          nt16_t seed;;mcc_generated_files/crc.c: 82:     CRCCON0 = 0x80;
 32488                           
 32489                           ; BSR set to: 57
 32490                           ;incstack = 0
 32491  007810  0E80               	movlw	128
 32492  007812  6F68               	movwf	104,b	;volatile
 32493                           
 32494                           ;mcc_generated_files/crc.c: 84:     CRCCON1 = (7 << 4) | (15);
 32495  007814  0E7F               	movlw	127
 32496  007816  6F69               	movwf	105,b	;volatile
 32497                           
 32498                           ;mcc_generated_files/crc.c: 86:     CRCACCL = 0x00;
 32499  007818  0E00               	movlw	0
 32500  00781A  6F62               	movwf	98,b	;volatile
 32501                           
 32502                           ;mcc_generated_files/crc.c: 88:     CRCACCH = 0x00;
 32503  00781C  0E00               	movlw	0
 32504  00781E  6F63               	movwf	99,b	;volatile
 32505                           
 32506                           ;mcc_generated_files/crc.c: 90:     SCANCON0 = 0x00;
 32507  007820  0E00               	movlw	0
 32508  007822  6F7C               	movwf	124,b	;volatile
 32509                           
 32510                           ;mcc_generated_files/crc.c: 92:     SCANLADRU = 0x00;
 32511  007824  0E00               	movlw	0
 32512  007826  6F78               	movwf	120,b	;volatile
 32513                           
 32514                           ;mcc_generated_files/crc.c: 94:     SCANLADRH = 0x00;
 32515  007828  0E00               	movlw	0
 32516  00782A  6F77               	movwf	119,b	;volatile
 32517                           
 32518                           ;mcc_generated_files/crc.c: 96:     SCANLADRL = 0x00;
 32519  00782C  0E00               	movlw	0
 32520  00782E  6F76               	movwf	118,b	;volatile
 32521                           
 32522                           ;mcc_generated_files/crc.c: 98:     SCANHADRU = 0x3F;
 32523  007830  0E3F               	movlw	63
 32524  007832  6F7B               	movwf	123,b	;volatile
 32525                           
 32526                           ; BSR set to: 57
 32527                           ;mcc_generated_files/crc.c: 100:     SCANHADRH = 0xFF;
 32528  007834  697A               	setf	122,b	;volatile
 32529                           
 32530                           ; BSR set to: 57
 32531                           ;mcc_generated_files/crc.c: 102:     SCANHADRL = 0xFF;
 32532  007836  6979               	setf	121,b	;volatile
 32533                           
 32534                           ;mcc_generated_files/crc.c: 104:     SCANTRIG = 0x00;
 32535  007838  0E00               	movlw	0
 32536  00783A  6F7D               	movwf	125,b	;volatile
 32537                           
 32538                           ;mcc_generated_files/crc.c: 106:     poly = 32773;
 32539  00783C  0E80               	movlw	128
 32540  00783E  6E04               	movwf	(CRC_Initialize@poly+1)^0,c
 32541  007840  0E05               	movlw	5
 32542  007842  6E03               	movwf	CRC_Initialize@poly^0,c
 32543                           
 32544                           ; BSR set to: 57
 32545                           ;mcc_generated_files/crc.c: 107:     CRCXORH = poly >> 8;
 32546  007844  0060  F013  F967   	movff	CRC_Initialize@poly+1,14695	;volatile
 32547                           
 32548                           ; BSR set to: 57
 32549                           ;mcc_generated_files/crc.c: 108:     CRCXORL = poly;
 32550  00784A  0E05               	movlw	5
 32551  00784C  6F66               	movwf	102,b	;volatile
 32552                           
 32553                           ;mcc_generated_files/crc.c: 110:     seed = 0;
 32554  00784E  0E00               	movlw	0
 32555  007850  6E06               	movwf	(CRC_Initialize@seed+1)^0,c
 32556  007852  0E00               	movlw	0
 32557  007854  6E05               	movwf	CRC_Initialize@seed^0,c
 32558                           
 32559                           ; BSR set to: 57
 32560                           ;mcc_generated_files/crc.c: 112:     CRCACCH = seed >> 8;
 32561  007856  0060  F01B  F963   	movff	CRC_Initialize@seed+1,14691	;volatile
 32562                           
 32563                           ; BSR set to: 57
 32564                           ;mcc_generated_files/crc.c: 113:     CRCACCL = seed;
 32565  00785C  0E00               	movlw	0
 32566  00785E  6F62               	movwf	98,b	;volatile
 32567                           
 32568                           ; BSR set to: 57
 32569                           ;mcc_generated_files/crc.c: 115:     crcObj.dataWidth = (uint8_t)(CRCCON1bits.DLEN + 1);
 32570  007860  3969               	swapf	105,w,b	;volatile
 32571  007862  0B0F               	andlw	15
 32572  007864  6E02               	movwf	??_CRC_Initialize^0,c
 32573  007866  2802               	incf	??_CRC_Initialize^0,w,c
 32574  007868  0100               	movlb	0	; () banked
 32575  00786A  6FEC               	movwf	_crcObj& (0+255),b
 32576                           
 32577                           ; BSR set to: 0
 32578                           ;mcc_generated_files/crc.c: 116:     crcObj.polyWidth = (uint8_t)(CRCCON1bits.PLEN + 1);
 32579  00786C  0139               	movlb	57	; () banked
 32580  00786E  5169               	movf	105,w,b	;volatile
 32581  007870  0B0F               	andlw	15
 32582  007872  6E02               	movwf	??_CRC_Initialize^0,c
 32583  007874  2802               	incf	??_CRC_Initialize^0,w,c
 32584  007876  0100               	movlb	0	; () banked
 32585  007878  6FED               	movwf	(_crcObj+1)& (0+255),b
 32586                           
 32587                           ; BSR set to: 0
 32588  00787A  0012               	return		;funcret
 32589  00787C                     __end_of_CRC_Initialize:
 32590                           	opt callstack 0
 32591                           
 32592 ;; *************** function _TMR0_ISR *****************
 32593 ;; Defined at:
 32594 ;;		line 135 in file "mcc_generated_files/tmr0.c"
 32595 ;; Parameters:    Size  Location     Type
 32596 ;;		None
 32597 ;; Auto vars:     Size  Location     Type
 32598 ;;		None
 32599 ;; Return value:  Size  Location     Type
 32600 ;;                  1    wreg      void 
 32601 ;; Registers used:
 32602 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 32603 ;; Tracked objects:
 32604 ;;		On entry : 0/0
 32605 ;;		On exit  : 0/0
 32606 ;;		Unchanged: 0/0
 32607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32610 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32611 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32612 ;;Total ram usage:        1 bytes
 32613 ;; Hardware stack levels used:    1
 32614 ;; Hardware stack levels required when called:    6
 32615 ;; This function calls:
 32616 ;;		_TMR0_CallBack
 32617 ;; This function is called by:
 32618 ;;		Interrupt level 1
 32619 ;; This function uses a non-reentrant model
 32620 ;;
 32621                           
 32622                           	psect	text225
 32623  008C54                     __ptext225:
 32624                           	opt callstack 0
 32625  008C54                     _TMR0_ISR:
 32626                           	opt callstack 11
 32627                           
 32628                           ; BSR set to: 0
 32629                           ;incstack = 0
 32630  008C54  006F FF60  F001    	movff	status,??_TMR0_ISR
 32631                           
 32632                           ;mcc_generated_files/tmr0.c: 138:     PIR3bits.TMR0IF = 0;
 32633  008C5A  0139               	movlb	57	; () banked
 32634  008C5C  9FA3               	bcf	163,7,b	;volatile
 32635                           
 32636                           ;mcc_generated_files/tmr0.c: 140:     TMR0H = timer0ReloadVal16bit >> 8;
 32637  008C5E  0060  F3FB  FFB7   	movff	_timer0ReloadVal16bit+1,16311	;volatile
 32638                           
 32639                           ;mcc_generated_files/tmr0.c: 141:     TMR0L = (uint8_t) timer0ReloadVal16bit;
 32640  008C64  0060  F3F7  FFB6   	movff	_timer0ReloadVal16bit,16310	;volatile
 32641                           
 32642                           ; BSR set to: 57
 32643                           ;mcc_generated_files/tmr0.c: 145:     TMR0_CallBack();
 32644  008C6A  EC5B  F046         	call	_TMR0_CallBack	;wreg free
 32645  008C6E  0060  F007  FFD8   	movff	??_TMR0_ISR,status
 32646  008C74  0011               	retfie		f
 32647  008C76                     __end_of_TMR0_ISR:
 32648                           	opt callstack 0
 32649                           
 32650 ;; *************** function _TMR0_CallBack *****************
 32651 ;; Defined at:
 32652 ;;		line 150 in file "mcc_generated_files/tmr0.c"
 32653 ;; Parameters:    Size  Location     Type
 32654 ;;		None
 32655 ;; Auto vars:     Size  Location     Type
 32656 ;;		None
 32657 ;; Return value:  Size  Location     Type
 32658 ;;                  1    wreg      void 
 32659 ;; Registers used:
 32660 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 32661 ;; Tracked objects:
 32662 ;;		On entry : 3F/39
 32663 ;;		On exit  : 0/0
 32664 ;;		Unchanged: 0/0
 32665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32670 ;;Total ram usage:        0 bytes
 32671 ;; Hardware stack levels used:    1
 32672 ;; Hardware stack levels required when called:    5
 32673 ;; This function calls:
 32674 ;;		Absolute function
 32675 ;;		_TMR0_DefaultInterruptHandler
 32676 ;;		_Timer0Handler
 32677 ;; This function is called by:
 32678 ;;		_TMR0_ISR
 32679 ;; This function uses a non-reentrant model
 32680 ;;
 32681                           
 32682                           	psect	text226
 32683  008CB6                     __ptext226:
 32684                           	opt callstack 0
 32685  008CB6                     _TMR0_CallBack:
 32686                           	opt callstack 11
 32687                           
 32688                           ; BSR set to: 57
 32689                           ;mcc_generated_files/tmr0.c: 154:     if(TMR0_InterruptHandler)
 32690                           
 32691                           ;incstack = 0
 32692  008CB6  0101               	movlb	1	; () banked
 32693  008CB8  51EC               	movf	_TMR0_InterruptHandler& (0+255),w,b
 32694  008CBA  11ED               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 32695  008CBC  B4D8               	btfsc	status,2,c
 32696  008CBE  0012               	return	
 32697                           
 32698                           ; BSR set to: 1
 32699                           ;mcc_generated_files/tmr0.c: 155:     {;mcc_generated_files/tmr0.c: 156:         TMR0_In
      +                          terruptHandler();
 32700  008CC0  D801               	call	i1u1273_28
 32701  008CC2  0012               	return	
 32702  008CC4                     i1u1273_28:
 32703  008CC4  0005               	push	
 32704  008CC6  6EFA               	movwf	pclath,c
 32705  008CC8  51EC               	movf	_TMR0_InterruptHandler& (0+255),w,b
 32706  008CCA  6EFD               	movwf	tosl,c
 32707  008CCC  51ED               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
 32708  008CCE  6EFE               	movwf	tosh,c
 32709  008CD0  6AFF               	clrf	tosu,c
 32710  008CD2  50FA               	movf	pclath,w,c
 32711  008CD4  0012               	return		;indir
 32712  008CD6                     __end_of_TMR0_CallBack:
 32713                           	opt callstack 0
 32714                           
 32715 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 32716 ;; Defined at:
 32717 ;;		line 164 in file "mcc_generated_files/tmr0.c"
 32718 ;; Parameters:    Size  Location     Type
 32719 ;;		None
 32720 ;; Auto vars:     Size  Location     Type
 32721 ;;		None
 32722 ;; Return value:  Size  Location     Type
 32723 ;;                  1    wreg      void 
 32724 ;; Registers used:
 32725 ;;		None
 32726 ;; Tracked objects:
 32727 ;;		On entry : 3F/1
 32728 ;;		On exit  : 3F/1
 32729 ;;		Unchanged: 3F/0
 32730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32735 ;;Total ram usage:        0 bytes
 32736 ;; Hardware stack levels used:    1
 32737 ;; Hardware stack levels required when called:    4
 32738 ;; This function calls:
 32739 ;;		Nothing
 32740 ;; This function is called by:
 32741 ;;		_TMR0_Initialize
 32742 ;;		_TMR0_CallBack
 32743 ;; This function uses a non-reentrant model
 32744 ;;
 32745                           
 32746                           	psect	text227
 32747  0090A4                     __ptext227:
 32748                           	opt callstack 0
 32749  0090A4                     _TMR0_DefaultInterruptHandler:
 32750                           	opt callstack 11
 32751                           
 32752                           ; BSR set to: 1
 32753                           
 32754                           ;incstack = 0
 32755  0090A4  0012               	return		;funcret
 32756  0090A6                     __end_of_TMR0_DefaultInterruptHandler:
 32757                           	opt callstack 0
 32758                           
 32759 ;; *************** function _Timer0Handler *****************
 32760 ;; Defined at:
 32761 ;;		line 7 in file "../hal/hal_src/Timers.c"
 32762 ;; Parameters:    Size  Location     Type
 32763 ;;		None
 32764 ;; Auto vars:     Size  Location     Type
 32765 ;;		None
 32766 ;; Return value:  Size  Location     Type
 32767 ;;                  1    wreg      void 
 32768 ;; Registers used:
 32769 ;;		wreg, status,2, status,0
 32770 ;; Tracked objects:
 32771 ;;		On entry : 3F/1
 32772 ;;		On exit  : 3F/0
 32773 ;;		Unchanged: 0/0
 32774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32779 ;;Total ram usage:        0 bytes
 32780 ;; Hardware stack levels used:    1
 32781 ;; Hardware stack levels required when called:    4
 32782 ;; This function calls:
 32783 ;;		Nothing
 32784 ;; This function is called by:
 32785 ;;		_main
 32786 ;;		_TMR0_CallBack
 32787 ;; This function uses a non-reentrant model
 32788 ;;
 32789                           
 32790                           	psect	text228
 32791  007F9A                     __ptext228:
 32792                           	opt callstack 0
 32793  007F9A                     _Timer0Handler:
 32794                           	opt callstack 11
 32795                           
 32796                           ; BSR set to: 1
 32797                           ;../hal/hal_src/Timers.c: 9:     if(txTimeOut){
 32798                           
 32799                           ; BSR set to: 1
 32800                           ;incstack = 0
 32801  007F9A  0100               	movlb	0	; () banked
 32802  007F9C  51F1               	movf	_txTimeOut& (0+255),w,b	;volatile
 32803  007F9E  11F2               	iorwf	(_txTimeOut+1)& (0+255),w,b	;volatile
 32804  007FA0  B4D8               	btfsc	status,2,c
 32805  007FA2  D003               	goto	i1l13100
 32806                           
 32807                           ; BSR set to: 0
 32808                           ;../hal/hal_src/Timers.c: 10:         txTimeOut--;
 32809  007FA4  07F1               	decf	_txTimeOut& (0+255),f,b	;volatile
 32810  007FA6  A0D8               	btfss	status,0,c
 32811  007FA8  07F2               	decf	(_txTimeOut+1)& (0+255),f,b	;volatile
 32812  007FAA                     i1l13100:
 32813                           
 32814                           ; BSR set to: 0
 32815                           ;../hal/hal_src/Timers.c: 12:     if(ATTimeoutTimer){
 32816  007FAA  51FB               	movf	_ATTimeoutTimer& (0+255),w,b	;volatile
 32817  007FAC  11FC               	iorwf	(_ATTimeoutTimer+1)& (0+255),w,b	;volatile
 32818  007FAE  B4D8               	btfsc	status,2,c
 32819  007FB0  D003               	goto	i1l13104
 32820                           
 32821                           ; BSR set to: 0
 32822                           ;../hal/hal_src/Timers.c: 13:         ATTimeoutTimer--;
 32823  007FB2  07FB               	decf	_ATTimeoutTimer& (0+255),f,b	;volatile
 32824  007FB4  A0D8               	btfss	status,0,c
 32825  007FB6  07FC               	decf	(_ATTimeoutTimer+1)& (0+255),f,b	;volatile
 32826  007FB8                     i1l13104:
 32827                           
 32828                           ; BSR set to: 0
 32829                           ;../hal/hal_src/Timers.c: 15:     if(cadTimeOut){
 32830  007FB8  51F3               	movf	_cadTimeOut& (0+255),w,b	;volatile
 32831  007FBA  11F4               	iorwf	(_cadTimeOut+1)& (0+255),w,b	;volatile
 32832  007FBC  B4D8               	btfsc	status,2,c
 32833  007FBE  D003               	goto	i1l13108
 32834                           
 32835                           ; BSR set to: 0
 32836                           ;../hal/hal_src/Timers.c: 16:         cadTimeOut--;
 32837  007FC0  07F3               	decf	_cadTimeOut& (0+255),f,b	;volatile
 32838  007FC2  A0D8               	btfss	status,0,c
 32839  007FC4  07F4               	decf	(_cadTimeOut+1)& (0+255),f,b	;volatile
 32840  007FC6                     i1l13108:
 32841                           
 32842                           ; BSR set to: 0
 32843                           ;../hal/hal_src/Timers.c: 18:     if(_cadBackoffTimer){
 32844  007FC6  51F5               	movf	__cadBackoffTimer& (0+255),w,b	;volatile
 32845  007FC8  11F6               	iorwf	(__cadBackoffTimer+1)& (0+255),w,b	;volatile
 32846  007FCA  B4D8               	btfsc	status,2,c
 32847  007FCC  D003               	goto	i1l13112
 32848                           
 32849                           ; BSR set to: 0
 32850                           ;../hal/hal_src/Timers.c: 19:         _cadBackoffTimer--;
 32851  007FCE  07F5               	decf	__cadBackoffTimer& (0+255),f,b	;volatile
 32852  007FD0  A0D8               	btfss	status,0,c
 32853  007FD2  07F6               	decf	(__cadBackoffTimer+1)& (0+255),f,b	;volatile
 32854  007FD4                     i1l13112:
 32855                           
 32856                           ; BSR set to: 0
 32857                           ;../hal/hal_src/Timers.c: 21:     if(ledtimer){
 32858  007FD4  51EF               	movf	_ledtimer& (0+255),w,b	;volatile
 32859  007FD6  11F0               	iorwf	(_ledtimer+1)& (0+255),w,b	;volatile
 32860  007FD8  B4D8               	btfsc	status,2,c
 32861  007FDA  D003               	goto	i1l1049
 32862                           
 32863                           ; BSR set to: 0
 32864                           ;../hal/hal_src/Timers.c: 22:         ledtimer--;
 32865  007FDC  07EF               	decf	_ledtimer& (0+255),f,b	;volatile
 32866  007FDE  A0D8               	btfss	status,0,c
 32867  007FE0  07F0               	decf	(_ledtimer+1)& (0+255),f,b	;volatile
 32868  007FE2                     i1l1049:
 32869                           
 32870                           ; BSR set to: 0
 32871                           ;../hal/hal_src/Timers.c: 24:     halTimerIrqCount++;
 32872  007FE2  4BC1               	infsnz	_halTimerIrqCount& (0+255),f,b	;volatile
 32873  007FE4  2BC2               	incf	(_halTimerIrqCount+1)& (0+255),f,b	;volatile
 32874                           
 32875                           ; BSR set to: 0
 32876  007FE6  0012               	return		;funcret
 32877  007FE8                     __end_of_Timer0Handler:
 32878                           	opt callstack 0
 32879                           
 32880 ;; *************** function _Default_ISR *****************
 32881 ;; Defined at:
 32882 ;;		line 77 in file "mcc_generated_files/interrupt_manager.c"
 32883 ;; Parameters:    Size  Location     Type
 32884 ;;		None
 32885 ;; Auto vars:     Size  Location     Type
 32886 ;;		None
 32887 ;; Return value:  Size  Location     Type
 32888 ;;                  1    wreg      void 
 32889 ;; Registers used:
 32890 ;;		None
 32891 ;; Tracked objects:
 32892 ;;		On entry : 0/0
 32893 ;;		On exit  : 0/0
 32894 ;;		Unchanged: 0/0
 32895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32900 ;;Total ram usage:        0 bytes
 32901 ;; Hardware stack levels used:    1
 32902 ;; This function calls:
 32903 ;;		Nothing
 32904 ;; This function is called by:
 32905 ;;		Interrupt level 2
 32906 ;; This function uses a non-reentrant model
 32907 ;;
 32908                           
 32909                           	psect	text229
 32910  0090A8                     __ptext229:
 32911                           	opt callstack 0
 32912  0090A8                     _Default_ISR:
 32913                           	opt callstack 14
 32914                           
 32915                           ; BSR set to: 0
 32916                           ;incstack = 0
 32917  0090A8  0011               	retfie		f
 32918  0090AA                     __end_of_Default_ISR:
 32919                           	opt callstack 0
 32920                           
 32921 ;; *************** function _UART1_tx_vect_isr *****************
 32922 ;; Defined at:
 32923 ;;		line 247 in file "mcc_generated_files/uart1.c"
 32924 ;; Parameters:    Size  Location     Type
 32925 ;;		None
 32926 ;; Auto vars:     Size  Location     Type
 32927 ;;		None
 32928 ;; Return value:  Size  Location     Type
 32929 ;;                  1    wreg      void 
 32930 ;; Registers used:
 32931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 32932 ;; Tracked objects:
 32933 ;;		On entry : 0/0
 32934 ;;		On exit  : 0/0
 32935 ;;		Unchanged: 0/0
 32936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32941 ;;Total ram usage:        0 bytes
 32942 ;; Hardware stack levels used:    1
 32943 ;; Hardware stack levels required when called:    1
 32944 ;; This function calls:
 32945 ;;		Absolute function
 32946 ;;		_UART1_Transmit_ISR
 32947 ;; This function is called by:
 32948 ;;		Interrupt level 2
 32949 ;; This function uses a non-reentrant model
 32950 ;;
 32951                           
 32952                           	psect	text230
 32953  008CD8                     __ptext230:
 32954                           	opt callstack 0
 32955  008CD8                     _UART1_tx_vect_isr:
 32956                           	opt callstack 13
 32957                           
 32958                           ;mcc_generated_files/uart1.c: 249:     if(UART1_TxInterruptHandler)
 32959                           
 32960                           ;incstack = 0
 32961  008CD8  0101               	movlb	1	; () banked
 32962  008CDA  51EE               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 32963  008CDC  11EF               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 32964  008CDE  B4D8               	btfsc	status,2,c
 32965  008CE0  0011               	retfie		f
 32966                           
 32967                           ; BSR set to: 1
 32968                           ;mcc_generated_files/uart1.c: 250:     {;mcc_generated_files/uart1.c: 251:         UART1
      +                          _TxInterruptHandler();
 32969  008CE2  D801               	call	i2u1283_48
 32970  008CE4  0011               	retfie		f
 32971  008CE6                     i2u1283_48:
 32972  008CE6  0005               	push	
 32973  008CE8  6EFA               	movwf	pclath,c
 32974  008CEA  51EE               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 32975  008CEC  6EFD               	movwf	tosl,c
 32976  008CEE  51EF               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 32977  008CF0  6EFE               	movwf	tosh,c
 32978  008CF2  6AFF               	clrf	tosu,c
 32979  008CF4  50FA               	movf	pclath,w,c
 32980  008CF6  0012               	return		;indir
 32981  008CF8                     __end_of_UART1_tx_vect_isr:
 32982                           	opt callstack 0
 32983                           
 32984 ;; *************** function _UART1_Transmit_ISR *****************
 32985 ;; Defined at:
 32986 ;;		line 265 in file "mcc_generated_files/uart1.c"
 32987 ;; Parameters:    Size  Location     Type
 32988 ;;		None
 32989 ;; Auto vars:     Size  Location     Type
 32990 ;;		None
 32991 ;; Return value:  Size  Location     Type
 32992 ;;                  1    wreg      void 
 32993 ;; Registers used:
 32994 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32995 ;; Tracked objects:
 32996 ;;		On entry : 3F/1
 32997 ;;		On exit  : 6/0
 32998 ;;		Unchanged: 0/0
 32999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33004 ;;Total ram usage:        0 bytes
 33005 ;; Hardware stack levels used:    1
 33006 ;; This function calls:
 33007 ;;		Nothing
 33008 ;; This function is called by:
 33009 ;;		_UART1_Initialize
 33010 ;;		_UART1_tx_vect_isr
 33011 ;; This function uses a non-reentrant model
 33012 ;;
 33013                           
 33014                           	psect	text231
 33015  008846                     __ptext231:
 33016                           	opt callstack 0
 33017  008846                     _UART1_Transmit_ISR:
 33018                           	opt callstack 13
 33019                           
 33020                           ; BSR set to: 1
 33021                           ;mcc_generated_files/uart1.c: 268:     if(sizeof(uart1TxBuffer) > uart1TxBufferRemaining
      +                          )
 33022                           
 33023                           ;incstack = 0
 33024  008846  0E40               	movlw	64
 33025  008848  0100               	movlb	0	; () banked
 33026  00884A  61FF               	cpfslt	_uart1TxBufferRemaining& (0+255),b
 33027  00884C  D012               	goto	i2l13498
 33028                           
 33029                           ; BSR set to: 0
 33030                           ;mcc_generated_files/uart1.c: 269:     {;mcc_generated_files/uart1.c: 273:        U1TXB 
      +                          = uart1TxBuffer[uart1TxTail++];
 33031  00884E  0E00               	movlw	low _uart1TxBuffer
 33032  008850  25C7               	addwf	_uart1TxTail& (0+255),w,b	;volatile
 33033  008852  6ED9               	movwf	fsr2l,c
 33034  008854  6ADA               	clrf	fsr2h,c
 33035  008856  0E03               	movlw	high _uart1TxBuffer
 33036  008858  22DA               	addwfc	fsr2h,f,c
 33037  00885A  50DF               	movf	indf2,w,c
 33038  00885C  013D               	movlb	61	; () banked
 33039  00885E  6FEA               	movwf	234,b	;volatile
 33040                           
 33041                           ; BSR set to: 61
 33042  008860  0100               	movlb	0	; () banked
 33043  008862  2BC7               	incf	_uart1TxTail& (0+255),f,b	;volatile
 33044                           
 33045                           ; BSR set to: 0
 33046                           ;mcc_generated_files/uart1.c: 274:        if(sizeof(uart1TxBuffer) <= uart1TxTail)
 33047  008864  0E3F               	movlw	63
 33048  008866  65C7               	cpfsgt	_uart1TxTail& (0+255),b
 33049  008868  D002               	goto	i2l13496
 33050                           
 33051                           ; BSR set to: 0
 33052                           ;mcc_generated_files/uart1.c: 275:         {;mcc_generated_files/uart1.c: 276:          
      +                             uart1TxTail = 0;
 33053  00886A  0E00               	movlw	0
 33054  00886C  6FC7               	movwf	_uart1TxTail& (0+255),b	;volatile
 33055  00886E                     i2l13496:
 33056                           
 33057                           ; BSR set to: 0
 33058                           ;mcc_generated_files/uart1.c: 278:         uart1TxBufferRemaining++;
 33059  00886E  2BFF               	incf	_uart1TxBufferRemaining& (0+255),f,b	;volatile
 33060                           
 33061                           ;mcc_generated_files/uart1.c: 279:     }
 33062  008870  0012               	return	
 33063  008872                     i2l13498:
 33064                           
 33065                           ; BSR set to: 0
 33066                           ;mcc_generated_files/uart1.c: 281:     {;mcc_generated_files/uart1.c: 284:         tx_do
      +                          ne = 1;
 33067  008872  0E01               	movlw	1
 33068  008874  6FDA               	movwf	_tx_done& (0+255),b	;volatile
 33069                           
 33070                           ; BSR set to: 0
 33071                           ;mcc_generated_files/uart1.c: 286:         PIE3bits.U1TXIE = 0;
 33072  008876  0139               	movlb	57	; () banked
 33073  008878  9993               	bcf	147,4,b	;volatile
 33074  00887A  0012               	return		;funcret
 33075  00887C                     __end_of_UART1_Transmit_ISR:
 33076                           	opt callstack 0
 33077                           
 33078 ;; *************** function _UART1_rx_vect_isr *****************
 33079 ;; Defined at:
 33080 ;;		line 255 in file "mcc_generated_files/uart1.c"
 33081 ;; Parameters:    Size  Location     Type
 33082 ;;		None
 33083 ;; Auto vars:     Size  Location     Type
 33084 ;;		None
 33085 ;; Return value:  Size  Location     Type
 33086 ;;                  1    wreg      void 
 33087 ;; Registers used:
 33088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 33089 ;; Tracked objects:
 33090 ;;		On entry : 0/0
 33091 ;;		On exit  : 0/0
 33092 ;;		Unchanged: 0/0
 33093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33098 ;;Total ram usage:        0 bytes
 33099 ;; Hardware stack levels used:    1
 33100 ;; Hardware stack levels required when called:    3
 33101 ;; This function calls:
 33102 ;;		Absolute function
 33103 ;;		_UART1_Receive_ISR
 33104 ;; This function is called by:
 33105 ;;		Interrupt level 2
 33106 ;; This function uses a non-reentrant model
 33107 ;;
 33108                           
 33109                           	psect	text232
 33110  008CF8                     __ptext232:
 33111                           	opt callstack 0
 33112  008CF8                     _UART1_rx_vect_isr:
 33113                           	opt callstack 11
 33114                           
 33115                           ;mcc_generated_files/uart1.c: 257:     if(UART1_RxInterruptHandler)
 33116                           
 33117                           ;incstack = 0
 33118  008CF8  0101               	movlb	1	; () banked
 33119  008CFA  51F0               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33120  008CFC  11F1               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33121  008CFE  B4D8               	btfsc	status,2,c
 33122  008D00  0011               	retfie		f
 33123                           
 33124                           ; BSR set to: 1
 33125                           ;mcc_generated_files/uart1.c: 258:     {;mcc_generated_files/uart1.c: 259:         UART1
      +                          _RxInterruptHandler();
 33126  008D02  D801               	call	i2u1285_48
 33127  008D04  0011               	retfie		f
 33128  008D06                     i2u1285_48:
 33129  008D06  0005               	push	
 33130  008D08  6EFA               	movwf	pclath,c
 33131  008D0A  51F0               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33132  008D0C  6EFD               	movwf	tosl,c
 33133  008D0E  51F1               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33134  008D10  6EFE               	movwf	tosh,c
 33135  008D12  6AFF               	clrf	tosu,c
 33136  008D14  50FA               	movf	pclath,w,c
 33137  008D16  0012               	return		;indir
 33138  008D18                     __end_of_UART1_rx_vect_isr:
 33139                           	opt callstack 0
 33140                           
 33141 ;; *************** function _UART1_Receive_ISR *****************
 33142 ;; Defined at:
 33143 ;;		line 292 in file "mcc_generated_files/uart1.c"
 33144 ;; Parameters:    Size  Location     Type
 33145 ;;		None
 33146 ;; Auto vars:     Size  Location     Type
 33147 ;;		None
 33148 ;; Return value:  Size  Location     Type
 33149 ;;                  1    wreg      void 
 33150 ;; Registers used:
 33151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 33152 ;; Tracked objects:
 33153 ;;		On entry : 3F/1
 33154 ;;		On exit  : 0/0
 33155 ;;		Unchanged: 0/0
 33156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33161 ;;Total ram usage:        0 bytes
 33162 ;; Hardware stack levels used:    1
 33163 ;; Hardware stack levels required when called:    2
 33164 ;; This function calls:
 33165 ;;		Absolute function
 33166 ;;		_UART1_DefaultErrorHandler
 33167 ;;		_UART1_DefaultFramingErrorHandler
 33168 ;;		_UART1_DefaultOverrunErrorHandler
 33169 ;;		_UART1_RxDataHandler
 33170 ;; This function is called by:
 33171 ;;		_UART1_Initialize
 33172 ;;		_UART1_rx_vect_isr
 33173 ;; This function uses a non-reentrant model
 33174 ;;
 33175                           
 33176                           	psect	text233
 33177  006E62                     __ptext233:
 33178                           	opt callstack 0
 33179  006E62                     _UART1_Receive_ISR:
 33180                           	opt callstack 11
 33181                           
 33182                           ; BSR set to: 1
 33183                           ;mcc_generated_files/uart1.c: 295:     uart1RxStatusBuffer[uart1RxHead].status = 0;
 33184                           
 33185                           ;incstack = 0
 33186  006E62  0E28               	movlw	low _uart1RxStatusBuffer
 33187  006E64  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 33188  006E66  6ED9               	movwf	fsr2l,c
 33189  006E68  6ADA               	clrf	fsr2h,c
 33190  006E6A  0E01               	movlw	high _uart1RxStatusBuffer
 33191  006E6C  22DA               	addwfc	fsr2h,f,c
 33192  006E6E  0E00               	movlw	0
 33193  006E70  6EDF               	movwf	indf2,c
 33194                           
 33195                           ; BSR set to: 1
 33196                           ;mcc_generated_files/uart1.c: 297:     if(U1ERRIRbits.FERIF){
 33197  006E72  013D               	movlb	61	; () banked
 33198  006E74  A7F9               	btfss	249,3,b	;volatile
 33199  006E76  D013               	goto	i2u1277_49
 33200                           
 33201                           ; BSR set to: 61
 33202                           ;mcc_generated_files/uart1.c: 298:         uart1RxStatusBuffer[uart1RxHead].ferr = 1;
 33203  006E78  0E28               	movlw	low _uart1RxStatusBuffer
 33204  006E7A  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 33205  006E7C  6ED9               	movwf	fsr2l,c
 33206  006E7E  6ADA               	clrf	fsr2h,c
 33207  006E80  0E01               	movlw	high _uart1RxStatusBuffer
 33208  006E82  22DA               	addwfc	fsr2h,f,c
 33209  006E84  0101               	movlb	1	; () banked
 33210  006E86  82DF               	bsf	indf2,1,c
 33211                           
 33212                           ; BSR set to: 1
 33213                           ;mcc_generated_files/uart1.c: 299:         UART1_FramingErrorHandler();
 33214  006E88  D801               	call	i2u1277_48
 33215  006E8A  D009               	goto	i2u1277_49
 33216  006E8C                     i2u1277_48:
 33217  006E8C  0005               	push	
 33218  006E8E  6EFA               	movwf	pclath,c
 33219  006E90  51EA               	movf	_UART1_FramingErrorHandler& (0+255),w,b
 33220  006E92  6EFD               	movwf	tosl,c
 33221  006E94  51EB               	movf	(_UART1_FramingErrorHandler+1)& (0+255),w,b
 33222  006E96  6EFE               	movwf	tosh,c
 33223  006E98  6AFF               	clrf	tosu,c
 33224  006E9A  50FA               	movf	pclath,w,c
 33225  006E9C  0012               	return		;indir
 33226  006E9E                     i2u1277_49:
 33227                           
 33228                           ;mcc_generated_files/uart1.c: 302:     if(U1ERRIRbits.RXFOIF){
 33229  006E9E  013D               	movlb	61	; () banked
 33230  006EA0  A3F9               	btfss	249,1,b	;volatile
 33231  006EA2  D013               	goto	i2u1279_49
 33232                           
 33233                           ; BSR set to: 61
 33234                           ;mcc_generated_files/uart1.c: 303:         uart1RxStatusBuffer[uart1RxHead].oerr = 1;
 33235  006EA4  0E28               	movlw	low _uart1RxStatusBuffer
 33236  006EA6  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 33237  006EA8  6ED9               	movwf	fsr2l,c
 33238  006EAA  6ADA               	clrf	fsr2h,c
 33239  006EAC  0E01               	movlw	high _uart1RxStatusBuffer
 33240  006EAE  22DA               	addwfc	fsr2h,f,c
 33241  006EB0  0101               	movlb	1	; () banked
 33242  006EB2  84DF               	bsf	indf2,2,c
 33243                           
 33244                           ; BSR set to: 1
 33245                           ;mcc_generated_files/uart1.c: 304:         UART1_OverrunErrorHandler();
 33246  006EB4  D801               	call	i2u1279_48
 33247  006EB6  D009               	goto	i2u1279_49
 33248  006EB8                     i2u1279_48:
 33249  006EB8  0005               	push	
 33250  006EBA  6EFA               	movwf	pclath,c
 33251  006EBC  51E8               	movf	_UART1_OverrunErrorHandler& (0+255),w,b
 33252  006EBE  6EFD               	movwf	tosl,c
 33253  006EC0  51E9               	movf	(_UART1_OverrunErrorHandler+1)& (0+255),w,b
 33254  006EC2  6EFE               	movwf	tosh,c
 33255  006EC4  6AFF               	clrf	tosu,c
 33256  006EC6  50FA               	movf	pclath,w,c
 33257  006EC8  0012               	return		;indir
 33258  006ECA                     i2u1279_49:
 33259                           
 33260                           ;mcc_generated_files/uart1.c: 307:     if(uart1RxStatusBuffer[uart1RxHead].status){
 33261  006ECA  0E28               	movlw	low _uart1RxStatusBuffer
 33262  006ECC  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 33263  006ECE  6ED9               	movwf	fsr2l,c
 33264  006ED0  6ADA               	clrf	fsr2h,c
 33265  006ED2  0E01               	movlw	high _uart1RxStatusBuffer
 33266  006ED4  22DA               	addwfc	fsr2h,f,c
 33267  006ED6  50DF               	movf	indf2,w,c
 33268  006ED8  B4D8               	btfsc	status,2,c
 33269  006EDA  D00C               	goto	i2l13520
 33270                           
 33271                           ;mcc_generated_files/uart1.c: 308:         UART1_ErrorHandler();
 33272  006EDC  D801               	call	i2u1281_48
 33273  006EDE  0012               	return	
 33274  006EE0                     i2u1281_48:
 33275  006EE0  0005               	push	
 33276  006EE2  6EFA               	movwf	pclath,c
 33277  006EE4  0101               	movlb	1	; () banked
 33278  006EE6  51E6               	movf	_UART1_ErrorHandler& (0+255),w,b
 33279  006EE8  6EFD               	movwf	tosl,c
 33280  006EEA  51E7               	movf	(_UART1_ErrorHandler+1)& (0+255),w,b
 33281  006EEC  6EFE               	movwf	tosh,c
 33282  006EEE  6AFF               	clrf	tosu,c
 33283  006EF0  50FA               	movf	pclath,w,c
 33284  006EF2  0012               	return		;indir
 33285  006EF4                     i2l13520:
 33286                           
 33287                           ;mcc_generated_files/uart1.c: 310:         UART1_RxDataHandler();
 33288  006EF4  ECB2  F045         	call	_UART1_RxDataHandler	;wreg free
 33289  006EF8  0012               	return		;funcret
 33290  006EFA                     __end_of_UART1_Receive_ISR:
 33291                           	opt callstack 0
 33292                           
 33293 ;; *************** function _UART1_DefaultOverrunErrorHandler *****************
 33294 ;; Defined at:
 33295 ;;		line 328 in file "mcc_generated_files/uart1.c"
 33296 ;; Parameters:    Size  Location     Type
 33297 ;;		None
 33298 ;; Auto vars:     Size  Location     Type
 33299 ;;		None
 33300 ;; Return value:  Size  Location     Type
 33301 ;;                  1    wreg      void 
 33302 ;; Registers used:
 33303 ;;		None
 33304 ;; Tracked objects:
 33305 ;;		On entry : 3F/1
 33306 ;;		On exit  : 3F/1
 33307 ;;		Unchanged: 3F/0
 33308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33313 ;;Total ram usage:        0 bytes
 33314 ;; Hardware stack levels used:    1
 33315 ;; This function calls:
 33316 ;;		Nothing
 33317 ;; This function is called by:
 33318 ;;		_UART1_Initialize
 33319 ;;		_UART1_Receive_ISR
 33320 ;; This function uses a non-reentrant model
 33321 ;;
 33322                           
 33323                           	psect	text234
 33324  0090AA                     __ptext234:
 33325                           	opt callstack 0
 33326  0090AA                     _UART1_DefaultOverrunErrorHandler:
 33327                           	opt callstack 12
 33328                           
 33329                           ; BSR set to: 1
 33330                           
 33331                           ;incstack = 0
 33332  0090AA  0012               	return		;funcret
 33333  0090AC                     __end_of_UART1_DefaultOverrunErrorHandler:
 33334                           	opt callstack 0
 33335                           
 33336 ;; *************** function _UART1_DefaultFramingErrorHandler *****************
 33337 ;; Defined at:
 33338 ;;		line 326 in file "mcc_generated_files/uart1.c"
 33339 ;; Parameters:    Size  Location     Type
 33340 ;;		None
 33341 ;; Auto vars:     Size  Location     Type
 33342 ;;		None
 33343 ;; Return value:  Size  Location     Type
 33344 ;;                  1    wreg      void 
 33345 ;; Registers used:
 33346 ;;		None
 33347 ;; Tracked objects:
 33348 ;;		On entry : 3F/1
 33349 ;;		On exit  : 3F/1
 33350 ;;		Unchanged: 3F/0
 33351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33356 ;;Total ram usage:        0 bytes
 33357 ;; Hardware stack levels used:    1
 33358 ;; This function calls:
 33359 ;;		Nothing
 33360 ;; This function is called by:
 33361 ;;		_UART1_Initialize
 33362 ;;		_UART1_Receive_ISR
 33363 ;; This function uses a non-reentrant model
 33364 ;;
 33365                           
 33366                           	psect	text235
 33367  0090AC                     __ptext235:
 33368                           	opt callstack 0
 33369  0090AC                     _UART1_DefaultFramingErrorHandler:
 33370                           	opt callstack 12
 33371                           
 33372                           ; BSR set to: 1
 33373                           
 33374                           ; BSR set to: 1
 33375                           ;incstack = 0
 33376  0090AC  0012               	return		;funcret
 33377  0090AE                     __end_of_UART1_DefaultFramingErrorHandler:
 33378                           	opt callstack 0
 33379                           
 33380 ;; *************** function _UART1_DefaultErrorHandler *****************
 33381 ;; Defined at:
 33382 ;;		line 330 in file "mcc_generated_files/uart1.c"
 33383 ;; Parameters:    Size  Location     Type
 33384 ;;		None
 33385 ;; Auto vars:     Size  Location     Type
 33386 ;;		None
 33387 ;; Return value:  Size  Location     Type
 33388 ;;                  1    wreg      void 
 33389 ;; Registers used:
 33390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33391 ;; Tracked objects:
 33392 ;;		On entry : 3F/1
 33393 ;;		On exit  : 3F/0
 33394 ;;		Unchanged: 0/0
 33395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33400 ;;Total ram usage:        0 bytes
 33401 ;; Hardware stack levels used:    1
 33402 ;; Hardware stack levels required when called:    1
 33403 ;; This function calls:
 33404 ;;		_UART1_RxDataHandler
 33405 ;; This function is called by:
 33406 ;;		_UART1_Initialize
 33407 ;;		_UART1_Receive_ISR
 33408 ;; This function uses a non-reentrant model
 33409 ;;
 33410                           
 33411                           	psect	text236
 33412  009090                     __ptext236:
 33413                           	opt callstack 0
 33414  009090                     _UART1_DefaultErrorHandler:
 33415                           	opt callstack 11
 33416                           
 33417                           ; BSR set to: 1
 33418                           ;mcc_generated_files/uart1.c: 331:     UART1_RxDataHandler();
 33419                           
 33420                           ; BSR set to: 1
 33421                           ;incstack = 0
 33422  009090  ECB2  F045         	call	_UART1_RxDataHandler	;wreg free
 33423                           
 33424                           ; BSR set to: 0
 33425  009094  0012               	return		;funcret
 33426  009096                     __end_of_UART1_DefaultErrorHandler:
 33427                           	opt callstack 0
 33428                           
 33429 ;; *************** function _UART1_RxDataHandler *****************
 33430 ;; Defined at:
 33431 ;;		line 316 in file "mcc_generated_files/uart1.c"
 33432 ;; Parameters:    Size  Location     Type
 33433 ;;		None
 33434 ;; Auto vars:     Size  Location     Type
 33435 ;;		None
 33436 ;; Return value:  Size  Location     Type
 33437 ;;                  1    wreg      void 
 33438 ;; Registers used:
 33439 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33440 ;; Tracked objects:
 33441 ;;		On entry : 0/3D
 33442 ;;		On exit  : 3F/0
 33443 ;;		Unchanged: 0/0
 33444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33449 ;;Total ram usage:        0 bytes
 33450 ;; Hardware stack levels used:    1
 33451 ;; This function calls:
 33452 ;;		Nothing
 33453 ;; This function is called by:
 33454 ;;		_UART1_Receive_ISR
 33455 ;;		_UART1_DefaultErrorHandler
 33456 ;; This function uses a non-reentrant model
 33457 ;;
 33458                           
 33459                           	psect	text237
 33460  008B64                     __ptext237:
 33461                           	opt callstack 0
 33462  008B64                     _UART1_RxDataHandler:
 33463                           	opt callstack 12
 33464                           
 33465                           ;mcc_generated_files/uart1.c: 318:     uart1RxBuffer[uart1RxHead++] = U1RXB;
 33466                           
 33467                           ; BSR set to: 0
 33468                           ;incstack = 0
 33469  008B64  0E14               	movlw	low _uart1RxBuffer
 33470  008B66  245E               	addwf	_uart1RxHead^0,w,c	;volatile
 33471  008B68  6ED9               	movwf	fsr2l,c
 33472  008B6A  6ADA               	clrf	fsr2h,c
 33473  008B6C  0E02               	movlw	high _uart1RxBuffer
 33474  008B6E  22DA               	addwfc	fsr2h,f,c
 33475  008B70  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 33476  008B76  2A5E               	incf	_uart1RxHead^0,f,c	;volatile
 33477                           
 33478                           ;mcc_generated_files/uart1.c: 319:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 33479  008B78  0E0F               	movlw	15
 33480  008B7A  645E               	cpfsgt	_uart1RxHead^0,c
 33481  008B7C  D002               	goto	i2l12414
 33482                           
 33483                           ;mcc_generated_files/uart1.c: 320:     {;mcc_generated_files/uart1.c: 321:         uart1
      +                          RxHead = 0;
 33484  008B7E  0E00               	movlw	0
 33485  008B80  6E5E               	movwf	_uart1RxHead^0,c	;volatile
 33486  008B82                     i2l12414:
 33487                           
 33488                           ;mcc_generated_files/uart1.c: 323:     uart1RxCount++;
 33489  008B82  0100               	movlb	0	; () banked
 33490  008B84  2BC5               	incf	_uart1RxCount& (0+255),f,b	;volatile
 33491                           
 33492                           ; BSR set to: 0
 33493  008B86  0012               	return		;funcret
 33494  008B88                     __end_of_UART1_RxDataHandler:
 33495                           	opt callstack 0
 33496                           
 33497                           ;
 33498                           ; Interrupt Vector Table @ 0x8
 33499                           ;
 33500                           
 33501                           	psect	ivt0x8
 33502  000008                     __pivt0x8:
 33503                           	opt callstack 0
 33504  000008                     ivt0x8_base:
 33505                           	opt callstack 0
 33506                           
 33507                           ; Vector 0 : SWINT
 33508  000008  242A               	dw	_Default_ISR shr (0+2)
 33509                           
 33510                           ; Vector 1 : HLVD
 33511  00000A  242A               	dw	_Default_ISR shr (0+2)
 33512                           
 33513                           ; Vector 2 : OSF
 33514  00000C  242A               	dw	_Default_ISR shr (0+2)
 33515                           
 33516                           ; Vector 3 : CSW
 33517  00000E  242A               	dw	_Default_ISR shr (0+2)
 33518                           
 33519                           ; Vector 4 : NVM
 33520  000010  242A               	dw	_Default_ISR shr (0+2)
 33521                           
 33522                           ; Vector 5 : SCAN
 33523  000012  242A               	dw	_Default_ISR shr (0+2)
 33524                           
 33525                           ; Vector 6 : CRC
 33526  000014  242A               	dw	_Default_ISR shr (0+2)
 33527                           
 33528                           ; Vector 7 : IOC
 33529  000016  242A               	dw	_Default_ISR shr (0+2)
 33530                           
 33531                           ; Vector 8 : INT0
 33532  000018  242A               	dw	_Default_ISR shr (0+2)
 33533                           
 33534                           ; Vector 9 : ZCD
 33535  00001A  242A               	dw	_Default_ISR shr (0+2)
 33536                           
 33537                           ; Vector 10 : AD
 33538  00001C  242A               	dw	_Default_ISR shr (0+2)
 33539                           
 33540                           ; Vector 11 : ADT
 33541  00001E  242A               	dw	_Default_ISR shr (0+2)
 33542                           
 33543                           ; Vector 12 : CMP1
 33544  000020  242A               	dw	_Default_ISR shr (0+2)
 33545                           
 33546                           ; Vector 13 : SMT1
 33547  000022  242A               	dw	_Default_ISR shr (0+2)
 33548                           
 33549                           ; Vector 14 : SMT1PRA
 33550  000024  242A               	dw	_Default_ISR shr (0+2)
 33551                           
 33552                           ; Vector 15 : SMT1PRW
 33553  000026  242A               	dw	_Default_ISR shr (0+2)
 33554                           
 33555                           ; Vector 16 : DMA1SCNT
 33556  000028  242A               	dw	_Default_ISR shr (0+2)
 33557                           
 33558                           ; Vector 17 : DMA1DCNT
 33559  00002A  242A               	dw	_Default_ISR shr (0+2)
 33560                           
 33561                           ; Vector 18 : DMA1OR
 33562  00002C  242A               	dw	_Default_ISR shr (0+2)
 33563                           
 33564                           ; Vector 19 : DMA1A
 33565  00002E  242A               	dw	_Default_ISR shr (0+2)
 33566                           
 33567                           ; Vector 20 : SPI1RX
 33568  000030  242A               	dw	_Default_ISR shr (0+2)
 33569                           
 33570                           ; Vector 21 : SPI1TX
 33571  000032  242A               	dw	_Default_ISR shr (0+2)
 33572                           
 33573                           ; Vector 22 : SPI1
 33574  000034  242A               	dw	_Default_ISR shr (0+2)
 33575                           
 33576                           ; Vector 23 : I2C1RX
 33577  000036  242A               	dw	_Default_ISR shr (0+2)
 33578                           
 33579                           ; Vector 24 : I2C1TX
 33580  000038  242A               	dw	_Default_ISR shr (0+2)
 33581                           
 33582                           ; Vector 25 : I2C1
 33583  00003A  242A               	dw	_Default_ISR shr (0+2)
 33584                           
 33585                           ; Vector 26 : I2C1E
 33586  00003C  242A               	dw	_Default_ISR shr (0+2)
 33587                           
 33588                           ; Vector 27 : U1RX
 33589  00003E  233E               	dw	_UART1_rx_vect_isr shr (0+2)
 33590                           
 33591                           ; Vector 28 : U1TX
 33592  000040  2336               	dw	_UART1_tx_vect_isr shr (0+2)
 33593                           
 33594                           ; Vector 29 : U1E
 33595  000042  242A               	dw	_Default_ISR shr (0+2)
 33596                           
 33597                           ; Vector 30 : U1
 33598  000044  242A               	dw	_Default_ISR shr (0+2)
 33599                           
 33600                           ; Vector 31 : TMR0
 33601  000046  2315               	dw	_TMR0_ISR shr (0+2)
 33602                           
 33603                           ; Vector 32 : TMR1
 33604  000048  242A               	dw	_Default_ISR shr (0+2)
 33605                           
 33606                           ; Vector 33 : TMR1G
 33607  00004A  242A               	dw	_Default_ISR shr (0+2)
 33608                           
 33609                           ; Vector 34 : TMR2
 33610  00004C  242A               	dw	_Default_ISR shr (0+2)
 33611                           
 33612                           ; Vector 35 : CCP1
 33613  00004E  242A               	dw	_Default_ISR shr (0+2)
 33614                           
 33615                           ; Vector 36 : Undefined
 33616  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 33617                           
 33618                           ; Vector 37 : NCO1
 33619  000052  242A               	dw	_Default_ISR shr (0+2)
 33620                           
 33621                           ; Vector 38 : CWG1
 33622  000054  242A               	dw	_Default_ISR shr (0+2)
 33623                           
 33624                           ; Vector 39 : CLC1
 33625  000056  242A               	dw	_Default_ISR shr (0+2)
 33626                           
 33627                           ; Vector 40 : INT1
 33628  000058  242A               	dw	_Default_ISR shr (0+2)
 33629                           
 33630                           ; Vector 41 : CMP2
 33631  00005A  242A               	dw	_Default_ISR shr (0+2)
 33632                           
 33633                           ; Vector 42 : DMA2SCNT
 33634  00005C  242A               	dw	_Default_ISR shr (0+2)
 33635                           
 33636                           ; Vector 43 : DMA2DCNT
 33637  00005E  242A               	dw	_Default_ISR shr (0+2)
 33638                           
 33639                           ; Vector 44 : DMA2OR
 33640  000060  242A               	dw	_Default_ISR shr (0+2)
 33641                           
 33642                           ; Vector 45 : DMA2A
 33643  000062  242A               	dw	_Default_ISR shr (0+2)
 33644                           
 33645                           ; Vector 46 : I2C2RX
 33646  000064  242A               	dw	_Default_ISR shr (0+2)
 33647                           
 33648                           ; Vector 47 : I2C2TX
 33649  000066  242A               	dw	_Default_ISR shr (0+2)
 33650                           
 33651                           ; Vector 48 : I2C2
 33652  000068  242A               	dw	_Default_ISR shr (0+2)
 33653                           
 33654                           ; Vector 49 : I2C2E
 33655  00006A  242A               	dw	_Default_ISR shr (0+2)
 33656                           
 33657                           ; Vector 50 : U2RX
 33658  00006C  242A               	dw	_Default_ISR shr (0+2)
 33659                           
 33660                           ; Vector 51 : U2TX
 33661  00006E  242A               	dw	_Default_ISR shr (0+2)
 33662                           
 33663                           ; Vector 52 : U2E
 33664  000070  242A               	dw	_Default_ISR shr (0+2)
 33665                           
 33666                           ; Vector 53 : U2
 33667  000072  242A               	dw	_Default_ISR shr (0+2)
 33668                           
 33669                           ; Vector 54 : TMR3
 33670  000074  242A               	dw	_Default_ISR shr (0+2)
 33671                           
 33672                           ; Vector 55 : TMR3G
 33673  000076  242A               	dw	_Default_ISR shr (0+2)
 33674                           
 33675                           ; Vector 56 : TMR4
 33676  000078  242A               	dw	_Default_ISR shr (0+2)
 33677                           
 33678                           ; Vector 57 : CCP2
 33679  00007A  242A               	dw	_Default_ISR shr (0+2)
 33680                           
 33681                           ; Vector 58 : Undefined
 33682  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 33683                           
 33684                           ; Vector 59 : CWG2
 33685  00007E  242A               	dw	_Default_ISR shr (0+2)
 33686                           
 33687                           ; Vector 60 : CLC2
 33688  000080  242A               	dw	_Default_ISR shr (0+2)
 33689                           
 33690                           ; Vector 61 : INT2
 33691  000082  242A               	dw	_Default_ISR shr (0+2)
 33692                           
 33693                           ; Vector 62 : Undefined
 33694  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 33695                           
 33696                           ; Vector 63 : Undefined
 33697  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 33698                           
 33699                           ; Vector 64 : Undefined
 33700  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 33701                           
 33702                           ; Vector 65 : Undefined
 33703  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 33704                           
 33705                           ; Vector 66 : Undefined
 33706  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 33707                           
 33708                           ; Vector 67 : Undefined
 33709  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 33710                           
 33711                           ; Vector 68 : Undefined
 33712  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 33713                           
 33714                           ; Vector 69 : Undefined
 33715  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 33716                           
 33717                           ; Vector 70 : TMR5
 33718  000094  242A               	dw	_Default_ISR shr (0+2)
 33719                           
 33720                           ; Vector 71 : TMR5G
 33721  000096  242A               	dw	_Default_ISR shr (0+2)
 33722                           
 33723                           ; Vector 72 : TMR6
 33724  000098  242A               	dw	_Default_ISR shr (0+2)
 33725                           
 33726                           ; Vector 73 : CCP3
 33727  00009A  242A               	dw	_Default_ISR shr (0+2)
 33728                           
 33729                           ; Vector 74 : CWG3
 33730  00009C  242A               	dw	_Default_ISR shr (0+2)
 33731                           
 33732                           ; Vector 75 : CLC3
 33733  00009E  242A               	dw	_Default_ISR shr (0+2)
 33734                           
 33735                           ; Vector 76 : Undefined
 33736  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 33737                           
 33738                           ; Vector 77 : Undefined
 33739  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 33740                           
 33741                           ; Vector 78 : Undefined
 33742  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 33743                           
 33744                           ; Vector 79 : Undefined
 33745  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 33746                           
 33747                           ; Vector 80 : CCP4
 33748  0000A8  242A               	dw	_Default_ISR shr (0+2)
 33749                           
 33750                           ; Vector 81 : CLC4
 33751  0000AA  242A               	dw	_Default_ISR shr (0+2)
 33752  0000AC                     ivt0x8_undefint:
 33753                           	opt callstack 0
 33754  0000AC  00FF               	reset	
 33755                           
 33756                           	psect	text238
 33757  000000                     __ptext238:
 33758                           	opt callstack 0
 33759                           
 33760                           	psect	rparam
 33761  0000                     tosu	equ	0x3FFF
 33762                           tosh	equ	0x3FFE
 33763                           tosl	equ	0x3FFD
 33764                           stkptr	equ	0x3FFC
 33765                           pclatu	equ	0x3FFB
 33766                           pclath	equ	0x3FFA
 33767                           pcl	equ	0x3FF9
 33768                           tblptru	equ	0x3FF8
 33769                           tblptrh	equ	0x3FF7
 33770                           tblptrl	equ	0x3FF6
 33771                           tablat	equ	0x3FF5
 33772                           prodh	equ	0x3FF4
 33773                           prodl	equ	0x3FF3
 33774                           indf0	equ	0x3FEF
 33775                           postinc0	equ	0x3FEE
 33776                           postdec0	equ	0x3FED
 33777                           preinc0	equ	0x3FEC
 33778                           plusw0	equ	0x3FEB
 33779                           fsr0h	equ	0x3FEA
 33780                           fsr0l	equ	0x3FE9
 33781                           wreg	equ	0x3FE8
 33782                           indf1	equ	0x3FE7
 33783                           postinc1	equ	0x3FE6
 33784                           postdec1	equ	0x3FE5
 33785                           preinc1	equ	0x3FE4
 33786                           plusw1	equ	0x3FE3
 33787                           fsr1h	equ	0x3FE2
 33788                           fsr1l	equ	0x3FE1
 33789                           bsr	equ	0x3FE0
 33790                           indf2	equ	0x3FDF
 33791                           postinc2	equ	0x3FDE
 33792                           postdec2	equ	0x3FDD
 33793                           preinc2	equ	0x3FDC
 33794                           plusw2	equ	0x3FDB
 33795                           fsr2h	equ	0x3FDA
 33796                           fsr2l	equ	0x3FD9
 33797                           status	equ	0x3FD8


Data Sizes:
    Strings     581
    Constant    270
    Data        23
    BSS         2695
    Persistent  15
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      94
    BANK0           160     81     160
    BANK1           256      0     249
    BANK2           256      0     230
    BANK3           256      0     192
    BANK4           256      0      96
    BANK5           256      0     189
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    nwkRxDuplicateRejectionTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxDelayTimer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 0
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 0
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrameFrames...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    tx_buffer.frame.payload	PTR unsigned char  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.nwkDataReq.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    tx_buffer.nwkDataReq.next.data	PTR unsigned char  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[524]), 

    tx_buffer.nwkDataReq.next.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.nwkDataReq.next.next	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    tx_buffer.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    tx_buffer.next.data	PTR unsigned char  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[524]), 

    tx_buffer.next.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.next.next	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    tx_buffer.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 0
		 -> appDataConf(), 

    tx_buffer.data	PTR unsigned char  size(2) Largest target is 0
		 -> tx_buffer(BIGRAM[524]), 

    tx_buffer.frame	PTR void  size(2) Largest target is 0
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.next	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    handler$0	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    S4715$4$0	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    S84$3$0	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S2892$4$0	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    ?_nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    ?_nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    ?_nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S115$11$0	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    cmdSetTX@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdGetRxCnt@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSetRFCH@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSetNaddr@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    set_hop_table_ttl@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSetTTL@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSetAES@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSetAddr@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    print_hop_table@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSendSink@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    strspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_58(CODE[2]), STR_57(CODE[2]), 

    strspn@s	PTR const unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), NULL(NULL[0]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_133(CODE[10]), STR_131(CODE[10]), STR_129(CODE[6]), STR_127(CODE[6]), 
		 -> STR_125(CODE[7]), STR_123(CODE[5]), STR_121(CODE[7]), STR_119(CODE[7]), 
		 -> STR_117(CODE[6]), STR_115(CODE[9]), STR_113(CODE[8]), STR_111(CODE[8]), 
		 -> STR_109(CODE[7]), STR_107(CODE[6]), STR_105(CODE[3]), STR_103(CODE[9]), 
		 -> STR_101(CODE[7]), STR_99(CODE[7]), STR_97(CODE[10]), STR_95(CODE[10]), 
		 -> STR_93(CODE[15]), STR_91(CODE[13]), STR_89(CODE[9]), STR_87(CODE[7]), 
		 -> STR_85(CODE[7]), STR_83(CODE[10]), STR_81(CODE[7]), STR_79(CODE[8]), 
		 -> STR_77(CODE[11]), STR_75(CODE[5]), STR_73(CODE[5]), STR_71(CODE[7]), 
		 -> STR_69(CODE[9]), STR_67(CODE[7]), STR_60(CODE[2]), STR_54(CODE[6]), 
		 -> STR_52(CODE[6]), STR_50(CODE[5]), STR_46(CODE[2]), STR_41(CODE[2]), 
		 -> STR_37(CODE[2]), STR_28(CODE[2]), STR_25(CODE[2]), STR_15(CODE[2]), 
		 -> STR_11(CODE[2]), STR_6(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_133(CODE[10]), STR_131(CODE[10]), STR_129(CODE[6]), STR_127(CODE[6]), 
		 -> STR_125(CODE[7]), STR_123(CODE[5]), STR_121(CODE[7]), STR_119(CODE[7]), 
		 -> STR_117(CODE[6]), STR_115(CODE[9]), STR_113(CODE[8]), STR_111(CODE[8]), 
		 -> STR_109(CODE[7]), STR_107(CODE[6]), STR_105(CODE[3]), STR_103(CODE[9]), 
		 -> STR_101(CODE[7]), STR_99(CODE[7]), STR_97(CODE[10]), STR_95(CODE[10]), 
		 -> STR_93(CODE[15]), STR_91(CODE[13]), STR_89(CODE[9]), STR_87(CODE[7]), 
		 -> STR_85(CODE[7]), STR_83(CODE[10]), STR_81(CODE[7]), STR_79(CODE[8]), 
		 -> STR_77(CODE[11]), STR_75(CODE[5]), STR_73(CODE[5]), STR_71(CODE[7]), 
		 -> STR_69(CODE[9]), STR_67(CODE[7]), STR_60(CODE[2]), STR_54(CODE[6]), 
		 -> STR_52(CODE[6]), STR_50(CODE[5]), STR_46(CODE[2]), STR_41(CODE[2]), 
		 -> STR_37(CODE[2]), STR_28(CODE[2]), STR_25(CODE[2]), STR_15(CODE[2]), 
		 -> STR_11(CODE[2]), STR_6(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    strcspn@c	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_58(CODE[2]), STR_57(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    __strtoxl@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cmdSetSF@p2(BANK0[2]), cmdSetCADRSSI@p2(BANK0[2]), cmdSetTX@p2(BANK0[2]), cmdSetRFCH@p2(BANK0[2]), 
		 -> cmdSetAES@p2(BANK0[2]), NULL(NULL[0]), cmdSend@p2(BANK0[2]), 

    __strtoxl@s	PTR const unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_58(CODE[2]), STR_57(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK1[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    __strtoxl@cp	PTR const unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_58(CODE[2]), STR_57(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK1[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    strtoul@endptr	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cmdSetTX@p2(BANK0[2]), cmdSetRFCH@p2(BANK0[2]), cmdSetAES@p2(BANK0[2]), NULL(NULL[0]), 
		 -> cmdSend@p2(BANK0[2]), 

    strtoul@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), 
		 -> cmdSetAES@temp(BANK0[3]), atCommand(BANK1[80]), NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    strtol@endptr	PTR PTR unsigned char  size(1) Largest target is 2
		 -> cmdSetSF@p2(BANK0[2]), cmdSetCADRSSI@p2(BANK0[2]), 

    strtol@s	PTR const unsigned char  size(1) Largest target is 3
		 -> cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), 

    strtok@sep	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_58(CODE[2]), STR_57(CODE[2]), 

    strtok@p	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), NULL(NULL[0]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_133(CODE[10]), STR_131(CODE[10]), STR_129(CODE[6]), STR_127(CODE[6]), 
		 -> STR_125(CODE[7]), STR_123(CODE[5]), STR_121(CODE[7]), STR_119(CODE[7]), 
		 -> STR_117(CODE[6]), STR_115(CODE[9]), STR_113(CODE[8]), STR_111(CODE[8]), 
		 -> STR_109(CODE[7]), STR_107(CODE[6]), STR_105(CODE[3]), STR_103(CODE[9]), 
		 -> STR_101(CODE[7]), STR_99(CODE[7]), STR_97(CODE[10]), STR_95(CODE[10]), 
		 -> STR_93(CODE[15]), STR_91(CODE[13]), STR_89(CODE[9]), STR_87(CODE[7]), 
		 -> STR_85(CODE[7]), STR_83(CODE[10]), STR_81(CODE[7]), STR_79(CODE[8]), 
		 -> STR_77(CODE[11]), STR_75(CODE[5]), STR_73(CODE[5]), STR_71(CODE[7]), 
		 -> STR_69(CODE[9]), STR_67(CODE[7]), STR_60(CODE[2]), STR_54(CODE[6]), 
		 -> STR_52(CODE[6]), STR_50(CODE[5]), STR_46(CODE[2]), STR_41(CODE[2]), 
		 -> STR_37(CODE[2]), STR_28(CODE[2]), STR_25(CODE[2]), STR_15(CODE[2]), 
		 -> STR_11(CODE[2]), STR_6(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[32]), STR_133(CODE[10]), STR_131(CODE[10]), STR_129(CODE[6]), 
		 -> STR_127(CODE[6]), STR_125(CODE[7]), STR_123(CODE[5]), STR_121(CODE[7]), 
		 -> STR_119(CODE[7]), STR_117(CODE[6]), STR_115(CODE[9]), STR_113(CODE[8]), 
		 -> STR_111(CODE[8]), STR_109(CODE[7]), STR_107(CODE[6]), STR_105(CODE[3]), 
		 -> STR_103(CODE[9]), STR_101(CODE[7]), STR_99(CODE[7]), STR_97(CODE[10]), 
		 -> STR_95(CODE[10]), STR_93(CODE[15]), STR_91(CODE[13]), STR_89(CODE[9]), 
		 -> STR_87(CODE[7]), STR_85(CODE[7]), STR_83(CODE[10]), STR_81(CODE[7]), 
		 -> STR_79(CODE[8]), STR_77(CODE[11]), STR_75(CODE[5]), STR_73(CODE[5]), 
		 -> STR_71(CODE[7]), STR_69(CODE[9]), STR_67(CODE[7]), STR_60(CODE[2]), 
		 -> STR_58(CODE[2]), STR_57(CODE[2]), STR_54(CODE[6]), STR_52(CODE[6]), 
		 -> STR_50(CODE[5]), STR_46(CODE[2]), STR_41(CODE[2]), STR_37(CODE[2]), 
		 -> STR_28(CODE[2]), STR_25(CODE[2]), STR_15(CODE[2]), STR_11(CODE[2]), 
		 -> atCommand(BANK1[80]), NULL(NULL[0]), STR_6(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[32]), STR_133(CODE[10]), STR_131(CODE[10]), STR_129(CODE[6]), 
		 -> STR_127(CODE[6]), STR_125(CODE[7]), STR_123(CODE[5]), STR_121(CODE[7]), 
		 -> STR_119(CODE[7]), STR_117(CODE[6]), STR_115(CODE[9]), STR_113(CODE[8]), 
		 -> STR_111(CODE[8]), STR_109(CODE[7]), STR_107(CODE[6]), STR_105(CODE[3]), 
		 -> STR_103(CODE[9]), STR_101(CODE[7]), STR_99(CODE[7]), STR_97(CODE[10]), 
		 -> STR_95(CODE[10]), STR_93(CODE[15]), STR_91(CODE[13]), STR_89(CODE[9]), 
		 -> STR_87(CODE[7]), STR_85(CODE[7]), STR_83(CODE[10]), STR_81(CODE[7]), 
		 -> STR_79(CODE[8]), STR_77(CODE[11]), STR_75(CODE[5]), STR_73(CODE[5]), 
		 -> STR_71(CODE[7]), STR_69(CODE[9]), STR_67(CODE[7]), STR_60(CODE[2]), 
		 -> STR_58(CODE[2]), STR_57(CODE[2]), STR_54(CODE[6]), STR_52(CODE[6]), 
		 -> STR_50(CODE[5]), STR_46(CODE[2]), STR_41(CODE[2]), STR_37(CODE[2]), 
		 -> STR_28(CODE[2]), STR_25(CODE[2]), STR_15(CODE[2]), STR_11(CODE[2]), 
		 -> atCommand(BANK1[80]), NULL(NULL[0]), STR_6(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_139(CODE[5]), STR_138(CODE[8]), STR_137(CODE[28]), STR_136(CODE[26]), 
		 -> STR_135(CODE[12]), STR_134(CODE[12]), STR_65(CODE[5]), STR_64(CODE[34]), 
		 -> STR_63(CODE[14]), STR_62(CODE[5]), STR_61(CODE[12]), STR_59(CODE[8]), 
		 -> STR_56(CODE[5]), STR_55(CODE[12]), STR_48(CODE[5]), STR_47(CODE[12]), 
		 -> STR_45(CODE[13]), STR_44(CODE[5]), STR_43(CODE[12]), STR_42(CODE[12]), 
		 -> STR_40(CODE[14]), STR_39(CODE[5]), STR_38(CODE[12]), STR_36(CODE[13]), 
		 -> STR_35(CODE[18]), STR_34(CODE[18]), STR_33(CODE[5]), STR_32(CODE[21]), 
		 -> STR_31(CODE[5]), STR_30(CODE[12]), STR_29(CODE[12]), STR_27(CODE[12]), 
		 -> STR_26(CODE[12]), STR_24(CODE[5]), STR_23(CODE[3]), STR_22(CODE[5]), 
		 -> STR_21(CODE[5]), STR_20(CODE[12]), STR_19(CODE[12]), STR_18(CODE[3]), 
		 -> STR_17(CODE[6]), STR_16(CODE[5]), STR_14(CODE[13]), STR_13(CODE[12]), 
		 -> STR_12(CODE[5]), STR_10(CODE[16]), STR_9(CODE[8]), STR_8(CODE[12]), 
		 -> STR_7(CODE[12]), STR_5(CODE[8]), STR_4(CODE[12]), STR_3(CODE[12]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S7916_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    memset@dest	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK1[80]), tx_buffer.payload(BIGRAM[109]), 
		 -> tx_buffer(BIGRAM[524]), rx_buffer.payload(BIGRAM[109]), rx_buffer(BIGRAM[488]), 

    memset@s	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK1[80]), tx_buffer.payload(BIGRAM[109]), 
		 -> tx_buffer(BIGRAM[524]), rx_buffer.payload(BIGRAM[109]), rx_buffer(BIGRAM[488]), 

    memcpy@d1	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), 
		 -> rx_buffer_queue(BANK1[4]), cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), 
		 -> cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), cmdRecv@buf_id(COMRAM[1]), 
		 -> NULL(NULL[0]), tx_buffer.payload(BIGRAM[109]), cmdSend@destaddr(BANK0[5]), tx_buffer(BIGRAM[524]), 
		 -> rx_buffer.payload(BIGRAM[109]), rx_buffer(BIGRAM[488]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), 
		 -> rx_buffer_queue(BANK1[4]), cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), 
		 -> cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), cmdRecv@buf_id(COMRAM[1]), 
		 -> NULL(NULL[0]), tx_buffer.payload(BIGRAM[109]), cmdSend@destaddr(BANK0[5]), tx_buffer(BIGRAM[524]), 
		 -> rx_buffer.payload(BIGRAM[109]), rx_buffer(BIGRAM[488]), 

    memcpy@s1	PTR const void  size(2) Largest target is 690
		 -> phyRxBuffer(BANK3[128]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), queueLedEvent@temp(COMRAM[3]), 
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), STR_58(CODE[2]), STR_57(CODE[2]), 
		 -> cmdSetAES@AESstr(BANK0[32]), atCommand(BANK1[80]), NULL(NULL[0]), tx_buffer(BIGRAM[524]), 
		 -> appDataInd@buf_id(COMRAM[1]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 690
		 -> phyRxBuffer(BANK3[128]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), queueLedEvent@temp(COMRAM[3]), 
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), STR_58(CODE[2]), STR_57(CODE[2]), 
		 -> cmdSetAES@AESstr(BANK0[32]), atCommand(BANK1[80]), NULL(NULL[0]), tx_buffer(BIGRAM[524]), 
		 -> appDataInd@buf_id(COMRAM[1]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_139(CODE[5]), STR_138(CODE[8]), STR_137(CODE[28]), STR_136(CODE[26]), 
		 -> STR_135(CODE[12]), STR_134(CODE[12]), STR_65(CODE[5]), STR_64(CODE[34]), 
		 -> STR_63(CODE[14]), STR_62(CODE[5]), STR_61(CODE[12]), STR_59(CODE[8]), 
		 -> STR_56(CODE[5]), STR_55(CODE[12]), STR_48(CODE[5]), STR_47(CODE[12]), 
		 -> STR_45(CODE[13]), STR_44(CODE[5]), STR_43(CODE[12]), STR_42(CODE[12]), 
		 -> STR_40(CODE[14]), STR_39(CODE[5]), STR_38(CODE[12]), STR_36(CODE[13]), 
		 -> STR_35(CODE[18]), STR_34(CODE[18]), STR_33(CODE[5]), STR_32(CODE[21]), 
		 -> STR_31(CODE[5]), STR_30(CODE[12]), STR_29(CODE[12]), STR_27(CODE[12]), 
		 -> STR_26(CODE[12]), STR_24(CODE[5]), STR_23(CODE[3]), STR_22(CODE[5]), 
		 -> STR_21(CODE[5]), STR_20(CODE[12]), STR_19(CODE[12]), STR_18(CODE[3]), 
		 -> STR_17(CODE[6]), STR_16(CODE[5]), STR_14(CODE[13]), STR_13(CODE[12]), 
		 -> STR_12(CODE[5]), STR_10(CODE[16]), STR_9(CODE[8]), STR_8(CODE[12]), 
		 -> STR_7(CODE[12]), STR_5(CODE[8]), STR_4(CODE[12]), STR_3(CODE[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_139(CODE[5]), STR_138(CODE[8]), STR_137(CODE[28]), STR_136(CODE[26]), 
		 -> STR_135(CODE[12]), STR_134(CODE[12]), STR_65(CODE[5]), STR_64(CODE[34]), 
		 -> STR_63(CODE[14]), STR_62(CODE[5]), STR_61(CODE[12]), STR_59(CODE[8]), 
		 -> STR_56(CODE[5]), STR_55(CODE[12]), STR_48(CODE[5]), STR_47(CODE[12]), 
		 -> STR_45(CODE[13]), STR_44(CODE[5]), STR_43(CODE[12]), STR_42(CODE[12]), 
		 -> STR_40(CODE[14]), STR_39(CODE[5]), STR_38(CODE[12]), STR_36(CODE[13]), 
		 -> STR_35(CODE[18]), STR_34(CODE[18]), STR_33(CODE[5]), STR_32(CODE[21]), 
		 -> STR_31(CODE[5]), STR_30(CODE[12]), STR_29(CODE[12]), STR_27(CODE[12]), 
		 -> STR_26(CODE[12]), STR_24(CODE[5]), STR_23(CODE[3]), STR_22(CODE[5]), 
		 -> STR_21(CODE[5]), STR_20(CODE[12]), STR_19(CODE[12]), STR_18(CODE[3]), 
		 -> STR_17(CODE[6]), STR_16(CODE[5]), STR_14(CODE[13]), STR_13(CODE[12]), 
		 -> STR_12(CODE[5]), STR_10(CODE[16]), STR_9(CODE[8]), STR_8(CODE[12]), 
		 -> STR_7(CODE[12]), STR_5(CODE[8]), STR_4(CODE[12]), STR_3(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 34
		 -> STR_139(CODE[5]), STR_138(CODE[8]), STR_137(CODE[28]), STR_136(CODE[26]), 
		 -> STR_135(CODE[12]), STR_134(CODE[12]), STR_65(CODE[5]), STR_64(CODE[34]), 
		 -> STR_63(CODE[14]), STR_62(CODE[5]), STR_61(CODE[12]), STR_59(CODE[8]), 
		 -> STR_56(CODE[5]), STR_55(CODE[12]), STR_48(CODE[5]), STR_47(CODE[12]), 
		 -> STR_45(CODE[13]), STR_44(CODE[5]), STR_43(CODE[12]), STR_42(CODE[12]), 
		 -> STR_40(CODE[14]), STR_39(CODE[5]), STR_38(CODE[12]), STR_36(CODE[13]), 
		 -> STR_35(CODE[18]), STR_34(CODE[18]), STR_33(CODE[5]), STR_32(CODE[21]), 
		 -> STR_31(CODE[5]), STR_30(CODE[12]), STR_29(CODE[12]), STR_27(CODE[12]), 
		 -> STR_26(CODE[12]), STR_24(CODE[5]), STR_23(CODE[3]), STR_22(CODE[5]), 
		 -> STR_21(CODE[5]), STR_20(CODE[12]), STR_19(CODE[12]), STR_18(CODE[3]), 
		 -> STR_17(CODE[6]), STR_16(CODE[5]), STR_14(CODE[13]), STR_13(CODE[12]), 
		 -> STR_12(CODE[5]), STR_10(CODE[16]), STR_9(CODE[8]), STR_8(CODE[12]), 
		 -> STR_7(CODE[12]), STR_5(CODE[8]), STR_4(CODE[12]), STR_3(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    nwkFrame@nwkFramePayloadSize@frame_7224...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_7224.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    placeTimer@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    placeTimer@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    placeTimer@prev	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerTaskHandler@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerTaskHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStarted@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStarted@t	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@timer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@timer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    timers.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    timers.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.next.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@prev.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@prev.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStop@t.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    SYS_TimerStop@t.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    SYS_TimerStart@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    timers	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_6778...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_6778.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataReq@data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    SX1276WriteBuffer@buffer	PTR unsigned char  size(1) Largest target is 1
		 -> SX1276Write@data(COMRAM[1]), 

    SX1276ReadBuffer@buffer	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    nwkTxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxPhyActiveFrame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxConfirm@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxConfirm@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxConfirm@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxConfirm@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckWaitTimerHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxAckReceived@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxAckReceived@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    nwkTxAckReceived@command	PTR __pack struct NwkCommandAck_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxBroadcastFrame@newFrame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkTxFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxPhyActiveFrame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkTxDelayTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxDelayTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkTxAckWaitTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkTxAckWaitTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5694...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5694.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5472...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_5472.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxTaskHandler@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxTaskHandler@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxTaskHandler@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxTaskHandler@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleIndication@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxHandleIndication@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleIndication@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxIndicateFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@mcHeader	PTR __pack struct NwkFrameMulticastHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxHandleReceivedFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxServiceDataInd@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxServiceDataInd@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    nwkRxRejectDuplicate@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxRejectDuplicate@entry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 50
		 -> nwkRxDuplicateRejectionTable(BANK2[50]), 

    nwkRxRejectDuplicate@freeEntry	PTR struct NwkDuplicateRejectionEntry_t size(2) Largest target is 50
		 -> nwkRxDuplicateRejectionTable(BANK2[50]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimerHandler@timer	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkRxSendAck@command	PTR __pack struct NwkCommandAck_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@ack...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRxSendAck@ack.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRxSendAck@ack	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataInd@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    PHY_DataInd@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    PHY_DataInd@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    PHY_DataInd@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S4747PHY_DataInd_t$data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    PHY_DataInd@ind.data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), 

    PHY_DataInd@ind	PTR struct PHY_DataInd_t size(1) Largest target is 6
		 -> DIO0_Receive_ISR@ind(COMRAM[5]), 

    S4715SYS_Timer_t$handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    nwkRxDuplicateRejectionTimer.handler	PTR FTN(PTR struct SYS_Timer_t,)void  size(2) Largest target is 1
		 -> nwkTxDelayTimerHandler(), nwkTxAckWaitTimerHandler(), nwkRxDuplicateRejectionTimerHandler(), 

    S4715SYS_Timer_t$next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkRxDuplicateRejectionTimer.next	PTR struct SYS_Timer_t size(2) Largest target is 14
		 -> nwkTxDelayTimer(BANK1[13]), nwkTxAckWaitTimer(BANK1[13]), nwkRxDuplicateRejectionTimer(BANK1[13]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4851...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4851.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4851	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4616...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4616.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteErrorReceived@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteErrorReceived@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    nwkRouteErrorReceived@command	PTR __pack struct NwkCommandRouteError_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@command	PTR __pack struct NwkCommandRouteError_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteSendRouteError@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrame@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRoutePrepareTx@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameSent@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameSent@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameSent@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteFrameReceived@header	PTR __pack struct NwkFrameHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkRouteRemove@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNextHop@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteFreeEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    sp__NWK_RouteNewEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNewEntry@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    NWK_RouteNewEntry@iter	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    sp__NWK_RouteFindEntry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4064...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_4064.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameCommandInit@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameCommandInit@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameCommandInit@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameCommandInit@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameNext.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    sp__nwkFrameNext...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    sp__nwkFrameNext.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameNext	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameNext@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameNext@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameNext@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFree@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameFree@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFree@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrameFrames...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrameFrames.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3640...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3640.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTaskHandler@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqTaskHandler@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTaskHandler@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTaskHandler@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer.nwkDataReq(BIGRAM[22]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.next.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.next.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqConfirm@prev.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqConfirm@prev.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@prev	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer.nwkDataReq(BIGRAM[22]), tx_buffer(BIGRAM[524]), 

    nwkDataReqConfirm@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer.nwkDataReq(BIGRAM[22]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqTxConf@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqTxConf@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqTxConf@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqTxConf@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqTxConf@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer.nwkDataReq(BIGRAM[22]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@mcHeader	PTR __pack struct NwkFrameMulticastHeader_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame...confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqSendFrame@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer.nwkDataReq(BIGRAM[22]), tx_buffer(BIGRAM[524]), 

    nwkDataReqSendFrame@frame.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    sp__nwkFrameAlloc	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqSendFrame@frame	PTR struct NwkFrame_t size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.next.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.next.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    nwkDataReqQueue.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkDataReqQueue.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    NWK_DataReq@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_DataReq@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    NWK_DataReq@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> tx_buffer.nwkDataReq(BIGRAM[22]), tx_buffer(BIGRAM[524]), 

    nwkDataReqQueue	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer.nwkDataReq(BIGRAM[22]), tx_buffer(BIGRAM[524]), 

    nwkFrame@nwkFramePayloadSize@frame_3194...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_3194.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    NWK_OpenEndpoint@handler	PTR FTN(PTR struct NWK_DataInd_t,)_Bool  size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), appDataInd(), 

    S2892NwkIb_t$endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), NULL(NULL[0]), appDataInd(), 

    nwkIb.endpoint	PTR FTN(PTR struct NWK_DataInd_t,)_Bool [16] size(2) Largest target is 1
		 -> nwkRxServiceDataInd(), NULL(NULL[0]), appDataInd(), 

    nwkFrame@nwkFramePayloadSize@frame_2990...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_2990.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    UART1_SetTxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    UART1_SetRxInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), Timer0Handler(), 

    SPI1_ReadBlock@block	PTR void  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    SPI1_ReadBlock@data	PTR unsigned char  size(2) Largest target is 128
		 -> phyRxBuffer(BANK3[128]), SX1276Read@data(COMRAM[1]), 

    SPI1_WriteBlock@block	PTR void  size(2) Largest target is 690
		 -> SX1276Write@data(COMRAM[1]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    SPI1_WriteBlock@data	PTR unsigned char  size(2) Largest target is 690
		 -> SX1276Write@data(COMRAM[1]), nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    set_timer0base@timer	PTR unsigned short  size(1) Largest target is 2
		 -> _cadBackoffTimer(BANK0[2]), cadTimeOut(BANK0[2]), txTimeOut(BANK0[2]), ledtimer(BANK0[2]), 
		 -> ATTimeoutTimer(BANK0[2]), 

    get_timer0base@timer	PTR unsigned short  size(1) Largest target is 2
		 -> _cadBackoffTimer(BANK0[2]), cadTimeOut(BANK0[2]), txTimeOut(BANK0[2]), ledtimer(BANK0[2]), 
		 -> ATTimeoutTimer(BANK0[2]), 

    nwkFrame@nwkFramePayloadSize@frame_1767...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame_1767.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    ledtasksbuf.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    nwkFrame@nwkFramePayloadSize@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFrame@nwkFramePayloadSize@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    crc16_app@dptr	PTR void  size(2) Largest target is 12
		 -> EUIDbyte(BANK1[12]), 

    crc16_app@ptr	PTR unsigned char  size(2) Largest target is 12
		 -> EUIDbyte(BANK1[12]), 

    CircularBufferEmpty@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    CircularBufferEmpty@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), rx_buffer_queue_context(BANK1[10]), 

    CircularBufferSpace@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    CircularBufferSpace@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferSize@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    CircularBufferSize@ctx	PTR const struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), 

    CircularBufferPeek@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    CircularBufferPopFront@val	PTR void  size(1) Largest target is 3
		 -> handle_led_events@temp(COMRAM[3]), cmdRecv@buf_id(COMRAM[1]), 

    CircularBufferPopFront@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    CircularBufferPopFront@ctx	PTR struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), rx_buffer_queue_context(BANK1[10]), 

    CircularBufferPushBack@val	PTR void  size(1) Largest target is 3
		 -> queueLedEvent@temp(COMRAM[3]), appDataInd@buf_id(COMRAM[1]), 

    CircularBufferPushBack@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    CircularBufferPushBack@ctx	PTR struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), rx_buffer_queue_context(BANK1[10]), 

    CircularBufferClear@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    CircularBufferInit@ctx.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    CircularBufferInit@buf	PTR void  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    CircularBufferInit@ctx	PTR struct . size(2) Largest target is 11
		 -> ledtasksbuf(BANK1[10]), rx_buffer_queue_context(BANK1[10]), 

    executeATCommand@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    sp__NWK_RouteTable	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    print_hop_table@entry	PTR struct NWK_RouteTableEntry_t size(2) Largest target is 70
		 -> nwkRouteTable(BANK2[70]), 

    cmdSetSF@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_58(CODE[2]), STR_57(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK1[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetSF@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSetSF@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdSetBaud@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSetBaud@ptr	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdSetParity@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSetCADRSSI@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_58(CODE[2]), STR_57(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK1[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetCADRSSI@atCommand	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSetCADRSSI@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdSetTX@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_58(CODE[2]), STR_57(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK1[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetTX@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdSetRFCH@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_58(CODE[2]), STR_57(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK1[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetRFCH@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdSetAES@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_58(CODE[2]), STR_57(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK1[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    cmdSetAES@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdSetNaddr@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdSetAddr@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdBcast@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdBcast@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdSend@p2	PTR unsigned char  size(2) Largest target is 80
		 -> cmdSetSF@CHstr(BANK0[3]), STR_58(CODE[2]), STR_57(CODE[2]), cmdSetCADRSSI@CHstr(BANK0[3]), 
		 -> cmdSetTX@CHstr(BANK0[3]), cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), atCommand(BANK1[80]), 
		 -> NULL(NULL[0]), cmdSend@destaddr(BANK0[5]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    cmdSend@cmd	PTR unsigned char  size(2) Largest target is 80
		 -> atCommand(BANK1[80]), 

    cmdSend@p1	PTR unsigned char  size(2) Largest target is 80
		 -> STR_58(CODE[2]), STR_57(CODE[2]), atCommand(BANK1[80]), NULL(NULL[0]), 

    get_free_rx_buffer@buf_id	PTR unsigned char  size(1) Largest target is 1
		 -> appDataInd@buf_id(COMRAM[1]), 

    free_tx_buffer@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer.nwkDataReq(BIGRAM[22]), tx_buffer(BIGRAM[524]), 

    tx_buffer.nwkDataReq.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    tx_buffer.nwkDataReq.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer.payload(BIGRAM[109]), tx_buffer(BIGRAM[524]), 

    tx_buffer.nwkDataReq.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    tx_buffer.nwkDataReq.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    get_free_tx_buffer@buf_id	PTR unsigned char  size(1) Largest target is 1
		 -> cmdBcast@buf_id(BANK0[1]), cmdSend@buf_id(BANK0[1]), 

    sp__memcpy	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames..(BIGRAM[127]), nwkFrameFrames(BIGRAM[685]), handle_led_events@temp(COMRAM[3]), ledqueue(BANK4[96]), 
		 -> rx_buffer_queue(BANK1[4]), cmdSetSF@CHstr(BANK0[3]), cmdSetCADRSSI@CHstr(BANK0[3]), cmdSetTX@CHstr(BANK0[3]), 
		 -> cmdSetRFCH@CHstr(BANK0[3]), cmdSetAES@temp(BANK0[3]), cmdSetAES@AESstr(BANK0[32]), cmdRecv@buf_id(COMRAM[1]), 
		 -> NULL(NULL[0]), tx_buffer.payload(BIGRAM[109]), cmdSend@destaddr(BANK0[5]), tx_buffer(BIGRAM[524]), 
		 -> rx_buffer.payload(BIGRAM[109]), rx_buffer(BIGRAM[488]), 

    sp__memset	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), cmdSetTX@CHstr(BANK0[3]), atCommand(BANK1[80]), tx_buffer.payload(BIGRAM[109]), 
		 -> tx_buffer(BIGRAM[524]), rx_buffer.payload(BIGRAM[109]), rx_buffer(BIGRAM[488]), 

    rx_buffer.rx_ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S143NWK_DataInd_t$data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataInd@ind.data	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataInd@ind	PTR struct NWK_DataInd_t size(1) Largest target is 13
		 -> nwkRxIndicateFrame@ind(COMRAM[12]), 

    appDataInd@dataptr	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S115NWK_DataReq_t$confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    appDataConf@req.confirm	PTR FTN(PTR struct NWK_DataReq_t,)void  size(2) Largest target is 1
		 -> appDataConf(), 

    S115NWK_DataReq_t$data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    appDataConf@req.data	PTR unsigned char  size(2) Largest target is 536
		 -> tx_buffer(BIGRAM[524]), 

    S115NWK_DataReq_t$frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    appDataConf@req.frame	PTR void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    S115NWK_DataReq_t$next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    appDataConf@req.next	PTR void  size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer(BIGRAM[524]), 

    appDataConf@req	PTR struct NWK_DataReq_t size(2) Largest target is 536
		 -> NULL(NULL[0]), tx_buffer.nwkDataReq(BIGRAM[22]), tx_buffer(BIGRAM[524]), 

    S158$buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    rx_buffer_queue_context.buf	PTR unsigned char  size(2) Largest target is 96
		 -> ledqueue(BANK4[96]), rx_buffer_queue(BANK1[4]), 

    S84$confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    nwkFramePayloadSize@frame...tx.confirm	PTR FTN(PTR struct NwkFrame_t,)void  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), nwkDataReqTxConf(), NULL(NULL[0]), 

    S83NwkFrame_t$payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 

    nwkFramePayloadSize@frame.payload	PTR unsigned char  size(2) Largest target is 690
		 -> nwkFrameFrames(BIGRAM[685]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _processATCommand->_executeATCommand
    _queue_serial_led_event->_queueLedEvent
    _queueLedEvent->_CircularBufferPushBack
    _CircularBufferSpace->_CircularBufferSize
    _executeATCommand->_cmdGetRxCnt
    _executeATCommand->_print_hop_table
    _set_hop_table_ttl->_printf
    _print_hop_table->_printf
    _cmdSetTX->_printf
    _cmdSetSink->_printf
    _cmdSetSF->_printf
    _cmdSetRFCH->_printf
    _cmdSetParity->_printf
    _cmdSetNaddr->_printf
    _setSyncWord->_SX1276Write
    _cmdSetCADRSSI->_printf
    _strtol->___strtoxl
    _cmdSetBaud->_strtoul
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _cmdSetAddr->_printf
    _cmdSetAES->_printf
    _cmdSend->_printf
    _strtoul->___strtoxl
    ___strtoxl->_toupper
    _cmdRstCAD->_printf
    _cmdRecv->_printf
    _CircularBufferPopFront->_memcpy
    _cmdNaddr->_printf
    _cmdMac->_printf
    _sendInfo->_printf
    _cmdGetTX->_printf
    _cmdGetSF->_printf
    _cmdGetRxCnt->_printf
    _cmdGetRFCH->_printf
    _cmdGetMode->_printf
    _cmdGetCADRSSI->_printf
    _cmdGetCAD->_printf
    _cmdBootLoad->_printf
    _cmdBcast->_printf
    _strstr->_strncmp
    _cmdAddr->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod
    _atoi->_isspace
    _bootLoadApplication->_PHY_SetChannel
    _loadMACAddr->_DIA_ReadByte
    _crc16_app->_CRC_CalculatedResultGet
    _CRC_CalculatedResultGet->_CRC_ReverseValue
    _PHY_SetRxState->_receive
    _PHY_SetChannel->_setFrequency
    _NWK_SetPanId->_PHY_SetPanId
    _NWK_SetAddr->_PHY_SetShortAddr
    _DATAEE_WriteByte_Platform->_DATAEE_WriteByte
    _DATAEE_ReadByte_Platform->_DATAEE_WriteByte
    _CircularBufferInit->___lwdiv
    _SYS_TimerTaskHandler->_nwkTxAckWaitTimerHandler
    _SYS_TimerTaskHandler->_nwkTxDelayTimerHandler
    _nwkTxDelayTimerHandler->_SYS_TimerStart
    _nwkTxAckWaitTimerHandler->_SYS_TimerStart
    _nwkRxDuplicateRejectionTimerHandler->_SYS_TimerStart
    _PHY_TaskHandler->_radio_engine
    _radio_engine->_DIO0_Receive_ISR
    _cad->_SX1276Write
    _start_radio_cad->_SX1276Write
    _PHY_DataConf->_nwkTxConvertPhyStatus
    _DIO0_Receive_ISR->_get_lqi
    _get_lqi->___fltol
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul
    _PHY_DataInd->_memcpy
    _PHY_DataInd->_nwkFrameAlloc
    _NWK_TaskHandler->_nwkRxTaskHandler
    _nwkTxTaskHandler->_PHY_DataReq
    _nwkRouteFrameSent->_NWK_RouteFindEntry
    _nwkDataReqTxConf->_nwkFrameFree
    _PHY_DataReq->_SX1276Write
    _idle->_SX1276Write
    _nwkRxTaskHandler->_nwkRxHandleIndication
    _nwkRxHandleReceivedFrame->_nwkTxBroadcastFrame
    _nwkTxBroadcastFrame->_rand
    _nwkRxRejectDuplicate->_SYS_TimerStart
    _SYS_TimerStart->_placeTimer
    _nwkRouteFrameReceived->_NWK_RouteNewEntry
    _nwkRxHandleIndication->_nwkRxIndicateFrame
    _nwkRxSendAck->_nwkTxFrame
    _nwkRxIndicateFrame->_appDataInd
    _nwkRxIndicateFrame->_nwkRxServiceDataInd
    _nwkTxAckReceived->_nwkFrameNext
    _nwkRouteErrorReceived->_nwkRouteRemove
    _nwkRouteRemove->_NWK_RouteFindEntry
    _appDataInd->_CircularBufferPushBack
    _CircularBufferPushBack->_memcpy
    _nwkRouteFrame->_nwkRouteSendRouteError
    _nwkRouteSendRouteError->_nwkTxFrame
    _nwkDataReqTaskHandler->_nwkDataReqSendFrame
    _nwkDataReqSendFrame->_nwkTxFrame
    _nwkTxFrame->_rand
    _rand->___omul
    _nwkRoutePrepareTx->_NWK_RouteNextHop
    _NWK_RouteNextHop->_NWK_RouteFindEntry
    _nwkFrameAlloc->_memset
    _memcpy->___wmul
    _nwkDataReqConfirm->_appDataConf
    _appDataConf->_free_tx_buffer
    _PHY_Init->_initRadio
    _initRadio->_setSignalBandwidth
    _setTxPower->_SX1276Write
    _setSpreadingFactor->___lldiv
    _setSignalBandwidth->___lldiv
    _getSpreadingFactor->_SX1276Read
    _getSignalBandwidth->_SX1276Read
    ___flge->___xxtofl
    _setPreambleLength->_SX1276Write
    _setFrequency->___lldiv
    _setCodingRate4->_SX1276Write
    _receive->_SX1276Write
    _implicitHeaderMode->_SX1276Write
    _explicitHeaderMode->_SX1276Write
    _enableCrc->_SX1276Write
    _SX1276Write->_SX1276Read
    _SX1276WriteBuffer->_SPI1_WriteBlock
    _SPI1_WriteBlock->_SPI1_ExchangeByte
    _SX1276Read->_SX1276ReadBuffer
    _SX1276ReadBuffer->_SPI1_ReadBlock
    _SPI1_ReadBlock->_SPI1_ExchangeByte
    _computeFRF->___lldiv
    ___lldiv->_getSignalBandwidth
    _NWK_Init->_nwkRxInit
    _nwkRxInit->_NWK_OpenEndpoint
    _SYSTEM_Initialize->_CRC_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _UART1_Initialize->_UART1_SetRxInterruptHandler
    _UART1_Initialize->_UART1_SetTxInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_processATCommand
    _processATCommand->_executeATCommand
    _executeATCommand->_cmdSetAES
    _set_hop_table_ttl->_printf
    _print_hop_table->_printf
    _cmdSetTX->_printf
    _cmdSetSink->_printf
    _cmdSetSF->_printf
    _cmdSetRFCH->_printf
    _cmdSetParity->_printf
    _cmdSetNaddr->_printf
    _cmdSetCADRSSI->_printf
    _cmdSetAddr->_printf
    _cmdSetAES->_printf
    _cmdSend->_printf
    _cmdRstCAD->_printf
    _cmdRecv->_printf
    _cmdNaddr->_printf
    _cmdMac->_printf
    _sendInfo->_printf
    _cmdGetTX->_printf
    _cmdGetSF->_printf
    _cmdGetRxCnt->_printf
    _cmdGetRFCH->_printf
    _cmdGetMode->_printf
    _cmdGetCADRSSI->_printf
    _cmdGetCAD->_printf
    _cmdBootLoad->_printf
    _cmdBcast->_printf
    _cmdAddr->_printf
    _vfprintf->_vfpfcnvrt

Critical Paths under _TMR0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 2213002
                  _SYSTEM_Initialize
                           _SYS_Init
                    _SYS_TaskHandler
           _TMR0_SetInterruptHandler
                _bootLoadApplication
                   _processATCommand
 ---------------------------------------------------------------------------------
 (1) _processATCommand                                     4     4      0 1782622
                                             77 BANK0      4     4      0
                         _UART1_Read
                  _UART1_is_rx_ready
                   _executeATCommand
                     _get_timer0base
                             _memset
             _queue_serial_led_event
                     _set_timer0base
 ---------------------------------------------------------------------------------
 (2) _queue_serial_led_event                               1     1      0   10005
                                             33 COMRAM     1     1      0
                      _queueLedEvent
 ---------------------------------------------------------------------------------
 (3) _queueLedEvent                                        6     4      2    9937
                                             27 COMRAM     6     4      2
             _CircularBufferPushBack
                _CircularBufferSpace
 ---------------------------------------------------------------------------------
 (4) _CircularBufferSpace                                  4     2      2     363
                                              9 COMRAM     4     2      2
                 _CircularBufferSize
 ---------------------------------------------------------------------------------
 (5) _CircularBufferSize                                   8     6      2     197
                                              1 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (2) _executeATCommand                                     5     3      2 1767864
                                             92 COMRAM     1     1      0
                                             73 BANK0      4     2      2
                            _cmdAddr
                           _cmdBcast
                        _cmdBootLoad
                          _cmdGetCAD
                      _cmdGetCADRSSI
                         _cmdGetMode
                         _cmdGetRFCH
                        _cmdGetRxCnt
                           _cmdGetSF
                          _cmdGetTTL
                           _cmdGetTX
                               _cmdI
                             _cmdMac
                           _cmdNaddr
                            _cmdRecv
                           _cmdReset
                          _cmdRstCAD
                            _cmdSend
                        _cmdSendSink
                          _cmdSetAES
                         _cmdSetAddr
                         _cmdSetBaud
                      _cmdSetCADRSSI
                        _cmdSetNaddr
                       _cmdSetParity
                         _cmdSetRFCH
                           _cmdSetSF
                         _cmdSetSink
                          _cmdSetTTL
                           _cmdSetTX
                    _print_hop_table
                             _printf
                  _set_hop_table_ttl
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _set_hop_table_ttl                                    2     0      2   34256
                                             87 COMRAM     2     0      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _print_hop_table                                     15    13      2   34575
                                             87 COMRAM     5     3      2
                                             31 BANK0     10    10      0
                     _NWK_RouteTable
                             _printf
 ---------------------------------------------------------------------------------
 (4) _NWK_RouteTable                                       2     0      2       0
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSetTX                                            10     8      2  167086
                                             87 COMRAM     2     0      2
                                             31 BANK0      8     8      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _memset
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetTTL                                            2     0      2     208
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSetSink                                           0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdSetSF                                            10     8      2  162583
                                             87 COMRAM     2     0      2
                                             31 BANK0      8     8      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (3) _cmdSetRFCH                                          10     8      2  164050
                                             87 COMRAM     2     0      2
                                             31 BANK0      8     8      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetParity                                         2     0      2   47308
                                             87 COMRAM     2     0      2
                             _printf
                         _set_parity
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _cmdSetNaddr                                          7     5      2  164487
                                             87 COMRAM     2     0      2
                                             31 BANK0      5     5      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _printf
                        _setSyncWord
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _setSyncWord                                          1     1      0    5766
                                             16 COMRAM     1     1      0
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _cmdSetCADRSSI                                       10     8      2  162552
                                             87 COMRAM     2     0      2
                                             31 BANK0      8     8      0
          _DATAEE_WriteByte_Platform
                          _initRadio
                             _memcpy
                             _printf
                             _strstr
                             _strtol
 ---------------------------------------------------------------------------------
 (4) _strtol                                               4     0      4    5690
                                             51 COMRAM     4     0      4
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (3) _cmdSetBaud                                           5     3      2   10276
                                             57 COMRAM     5     3      2
                             _strtok
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _strtok                                               4     0      4    2848
                                             14 COMRAM     4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (5) _strspn                                               7     3      4    1089
                                              7 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (5) _strcspn                                              7     3      4    1089
                                              7 COMRAM     7     3      4
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _cmdSetAddr                                           8     6      2   54536
                                             87 COMRAM     2     0      2
                                             31 BANK0      6     6      0
                             _printf
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSetAES                                           46    44      2   68381
                                             87 COMRAM     4     2      2
                                             31 BANK0     42    42      0
          _DATAEE_WriteByte_Platform
                             _memcpy
                             _printf
                             _strlen
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (3) _cmdSendSink                                          2     0      2     104
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdSend                                             16    14      2   65246
                                             87 COMRAM     4     2      2
                                             31 BANK0     12    12      0
                        _NWK_DataReq
                 _get_free_tx_buffer
                             _memcpy
                             _memset
                             _printf
                             _strlen
                             _strstr
                            _strtoul
 ---------------------------------------------------------------------------------
 (4) _strtoul                                              6     0      6    7250
                                             51 COMRAM     6     0      6
                          ___strtoxl
 ---------------------------------------------------------------------------------
 (5) ___strtoxl                                           36    29      7    4973
                                             15 COMRAM    36    29      7
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     512
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) _cmdRstCAD                                            0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdReset                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdRecv                                              4     4      0   41888
                                             87 COMRAM     4     4      0
                _CircularBufferEmpty
             _CircularBufferPopFront
                             _printf
                              _putch
 ---------------------------------------------------------------------------------
 (4) _CircularBufferPopFront                               7     4      3    7164
                                             18 COMRAM     7     4      3
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _CircularBufferEmpty                                  6     4      2     250
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _cmdNaddr                                             0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdMac                                               2     2      0   34251
                                             87 COMRAM     2     2      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdI                                                 0     0      0   34152
                           _sendInfo
 ---------------------------------------------------------------------------------
 (4) _sendInfo                                             0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetTX                                             0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetTTL                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _cmdGetSF                                             0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetRxCnt                                          5     3      2   34358
                                             87 COMRAM     5     3      2
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetRFCH                                           0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetMode                                           0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetCADRSSI                                        0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdGetCAD                                            0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdBootLoad                                          2     2      0   41060
                                             87 COMRAM     2     2      0
          _DATAEE_WriteByte_Platform
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cmdBcast                                            10     8      2   57762
                                             87 COMRAM     4     2      2
                                             31 BANK0      3     3      0
                        _NWK_DataReq
                 _get_free_tx_buffer
                             _memcpy
                             _memset
                             _printf
                             _strlen
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               6     2      4   12835
                                             12 COMRAM     6     2      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     637
                                              1 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _strchr                                               6     2      4     748
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _get_free_tx_buffer                                   2     1      1     363
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (4) _NWK_DataReq                                          2     0      2     425
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _cmdAddr                                              0     0      0   34152
                             _printf
 ---------------------------------------------------------------------------------
 (4) _printf                                              13     3     10   34152
                                             84 COMRAM     3     3      0
                                             21 BANK0     10     0     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             7     2      5   28645
                                             77 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           44    40      4   28049
                                             69 COMRAM     8     4      4
                                              0 BANK0     21    21      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                39    28     11    7685
                                             30 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              8     6      2     672
                                              7 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              6     4      2     219
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     219
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              6     4      2     323
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _utoa                                                32    22     10    6789
                                             30 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             17     1     16     440
                                              1 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             25     9     16     449
                                              1 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    7657
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    5293
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2    1150
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1705
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               9     5      4    1149
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     1      0      93
                                              2 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (12) _UART1_Write                                         1     1      0      62
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     197
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     641
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     653
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    2673
                                              8 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     391
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     427
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _bootLoadApplication                                  7     7      0   43679
                                             47 COMRAM     7     7      0
                 _CircularBufferInit
           _DATAEE_ReadByte_Platform
          _DATAEE_WriteByte_Platform
                   _NWK_OpenEndpoint
                        _NWK_SetAddr
                       _NWK_SetPanId
                     _PHY_SetChannel
                     _PHY_SetRxState
                          _crc16_app
                        _loadMACAddr
                         _set_parity
                      _set_uart_baud
 ---------------------------------------------------------------------------------
 (2) _set_uart_baud                                        3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _set_parity                                           3     3      0     124
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _loadMACAddr                                          1     1      0     247
                                              5 COMRAM     1     1      0
                       _DIA_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DIA_ReadByte                                         4     0      4     157
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _crc16_app                                           12     6      6     836
                                             18 COMRAM    12     6      6
                  _CRC_8BitDataWrite
            _CRC_CalculatedResultGet
 ---------------------------------------------------------------------------------
 (3) _CRC_CalculatedResultGet                             10     8      2     387
                                              8 COMRAM    10     8      2
                   _CRC_ReverseValue
 ---------------------------------------------------------------------------------
 (4) _CRC_ReverseValue                                     7     5      2     183
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (3) _CRC_8BitDataWrite                                    1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PHY_SetRxState                                       1     1      0   19557
                            _receive
 ---------------------------------------------------------------------------------
 (2) _PHY_SetChannel                                       1     1      0    8775
                                             46 COMRAM     1     1      0
                       _setFrequency
 ---------------------------------------------------------------------------------
 (2) _NWK_SetPanId                                         2     0      2     222
                                              3 COMRAM     2     0      2
                       _PHY_SetPanId
 ---------------------------------------------------------------------------------
 (3) _PHY_SetPanId                                         2     0      2      89
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NWK_SetAddr                                          2     0      2     222
                                              3 COMRAM     2     0      2
                   _PHY_SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _PHY_SetShortAddr                                     2     0      2      89
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _DATAEE_WriteByte_Platform                            3     0      3    6908
                                              5 COMRAM     3     0      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte_Platform                             5     3      2    4313
                                              5 COMRAM     5     3      2
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (5) _DATAEE_WriteByte                                     4     1      3    1794
                                              1 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _DATAEE_ReadByte                                      2     0      2     312
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CircularBufferInit                                  14     6      8    1405
                                              8 COMRAM    14     6      8
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     340
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _SYS_TaskHandler                                      0     0      0  287660
                    _NWK_TaskHandler
                    _PHY_TaskHandler
               _SYS_TimerTaskHandler
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerTaskHandler                                11    11      0    6933
                                             24 COMRAM    11    11      0
_nwkRxDuplicateRejectionTimerHandler *
           _nwkTxAckWaitTimerHandler *
             _nwkTxDelayTimerHandler *
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _nwkTxDelayTimerHandler                               7     5      2    2183
                                             17 COMRAM     7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (3) _nwkTxAckWaitTimerHandler                             7     5      2    2363
                                             17 COMRAM     7     5      2
                     _SYS_TimerStart
                       _nwkFrameNext
                       _nwkTxConfirm
 ---------------------------------------------------------------------------------
 (4) _nwkTxConfirm                                         3     0      3     244
                                              1 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) _nwkRxDuplicateRejectionTimerHandler                  4     2      2    1561
                                             17 COMRAM     4     2      2
                     _SYS_TimerStart
 ---------------------------------------------------------------------------------
 (2) _PHY_TaskHandler                                      0     0      0  183169
                       _radio_engine
 ---------------------------------------------------------------------------------
 (3) _radio_engine                                         2     2      0  183169
                                             74 COMRAM     2     2      0
                   _DIO0_Receive_ISR
                       _PHY_DataConf
                         _SX1276Read
                                _cad
                     _get_timer0base
                          _initRadio
                            _receive
                     _set_timer0base
 ---------------------------------------------------------------------------------
 (4) _cad                                                  4     4      0   20286
                                             16 COMRAM     4     4      0
                         _SX1276Read
                        _SX1276Write
                     _get_timer0base
                     _set_timer0base
                    _start_radio_cad
 ---------------------------------------------------------------------------------
 (5) _start_radio_cad                                      0     0      0   11470
                        _SX1276Write
                               _idle
 ---------------------------------------------------------------------------------
 (2) _set_timer0base                                       3     0      3    1086
                                              1 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _get_timer0base                                       4     2      2     655
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _PHY_DataConf                                         1     1      0      44
                                              4 COMRAM     1     1      0
              _nwkTxConvertPhyStatus
 ---------------------------------------------------------------------------------
 (5) _nwkTxConvertPhyStatus                                3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _DIO0_Receive_ISR                                     7     7      0   43023
                                             67 COMRAM     7     7      0
                        _PHY_DataInd
                         _SX1276Read
                   _SX1276ReadBuffer
                        _SX1276Write
                            _get_lqi
                           _get_rssi
                            _receive
 ---------------------------------------------------------------------------------
 (5) _get_rssi                                             3     3      0      68
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _get_lqi                                              1     1      0    6159
                                             66 COMRAM     1     1      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     318
                                             56 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    1797
                                             15 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2466
                                             40 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _PHY_DataInd                                          6     5      1    8884
                                             18 COMRAM     6     5      1
                             _memcpy
                      _nwkFrameAlloc
 ---------------------------------------------------------------------------------
 (2) _NWK_TaskHandler                                      0     0      0   97558
              _nwkDataReqTaskHandler
                   _nwkRxTaskHandler
                   _nwkTxTaskHandler
 ---------------------------------------------------------------------------------
 (3) _nwkTxTaskHandler                                     4     4      0   24574
                                             19 COMRAM     4     4      0
                        _PHY_DataReq
                     _SYS_TimerStart
                   _nwkDataReqTxConf *
                       _nwkFrameFree
                       _nwkFrameNext
                  _nwkRouteFrameSent
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrameSent                                    6     4      2    1664
                                              7 COMRAM     6     4      2
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
             _nwkRouteNormalizeRanks
 ---------------------------------------------------------------------------------
 (5) _nwkRouteNormalizeRanks                               2     2      0      90
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqTxConf                                     6     4      2     664
                                              3 COMRAM     6     4      2
                       _nwkFrameFree
 ---------------------------------------------------------------------------------
 (4) _PHY_DataReq                                          3     0      3   19228
                                             16 COMRAM     3     0      3
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
                        _SX1276Write
                 _explicitHeaderMode
                               _idle
 ---------------------------------------------------------------------------------
 (6) _idle                                                 0     0      0    5735
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (3) _nwkRxTaskHandler                                     4     4      0   59248
                                             63 COMRAM     4     4      0
                       _nwkFrameFree
                       _nwkFrameNext
                      _nwkRouteFrame
              _nwkRxHandleIndication
           _nwkRxHandleReceivedFrame
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleReceivedFrame                            10     8      2   17068
                                             40 COMRAM    10     8      2
                  _NWK_GroupIsMember
              _nwkRouteFrameReceived
               _nwkRxRejectDuplicate
                _nwkTxBroadcastFrame
 ---------------------------------------------------------------------------------
 (5) _nwkTxBroadcastFrame                                  5     3      2    9441
                                             35 COMRAM     5     3      2
                             _memcpy
                      _nwkFrameAlloc
                               _rand
 ---------------------------------------------------------------------------------
 (5) _nwkRxRejectDuplicate                                13    11      2    3934
                                             17 COMRAM    13    11      2
                     _SYS_TimerStart
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (4) _SYS_TimerStart                                       2     0      2    1425
                                             15 COMRAM     2     0      2
                   _SYS_TimerStarted
                         _placeTimer
 ---------------------------------------------------------------------------------
 (3) _placeTimer                                          14    12      2     668
                                              1 COMRAM    14    12      2
 ---------------------------------------------------------------------------------
 (5) _SYS_TimerStarted                                     4     2      2     179
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _nwkRouteFrameReceived                               12    10      2    1936
                                             10 COMRAM    12    10      2
                 _NWK_RouteFindEntry
                  _NWK_RouteNewEntry
 ---------------------------------------------------------------------------------
 (6) _NWK_RouteNewEntry                                    9     7      2     293
                                              1 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _nwkRxHandleIndication                                5     3      2   27997
                                             58 COMRAM     5     3      2
                 _nwkRxIndicateFrame
                       _nwkRxSendAck
 ---------------------------------------------------------------------------------
 (5) _nwkRxSendAck                                         6     4      2    7228
                                             41 COMRAM     6     4      2
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRxIndicateFrame                                  26    24      2   20371
                                             32 COMRAM    26    24      2
                         _appDataInd *
                _nwkRxServiceDataInd *
        nwkFrame@nwkFramePayloadSize
 ---------------------------------------------------------------------------------
 (6) nwkFrame@nwkFramePayloadSize                          4     2      2     155
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _nwkRxServiceDataInd                                  5     4      1    2887
                                             27 COMRAM     5     4      1
              _nwkRouteErrorReceived
                   _nwkTxAckReceived
 ---------------------------------------------------------------------------------
 (7) _nwkTxAckReceived                                     7     6      1     848
                                              7 COMRAM     7     6      1
                       _nwkFrameNext
 ---------------------------------------------------------------------------------
 (4) _nwkFrameNext                                         6     4      2     558
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _nwkRouteErrorReceived                                4     3      1    1887
                                             12 COMRAM     4     3      1
                     _nwkRouteRemove
 ---------------------------------------------------------------------------------
 (6) _nwkRouteRemove                                       5     2      3    1709
                                              7 COMRAM     5     2      3
                 _NWK_RouteFindEntry
                 _NWK_RouteFreeEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFreeEntry                                   2     0      2     244
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _appDataInd                                           5     4      1   15832
                                             27 COMRAM     5     4      1
             _CircularBufferPushBack
                 _get_free_rx_buffer
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (7) _get_free_rx_buffer                                   2     1      1     199
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (4) _CircularBufferPushBack                               9     6      3    7238
                                             18 COMRAM     9     6      3
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1278
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _nwkRouteFrame                                        4     2      2   13055
                                             50 COMRAM     4     2      2
                   _NWK_RouteNextHop
                       _nwkFrameFree
             _nwkRouteSendRouteError
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (5) _nwkRouteSendRouteError                               9     4      5    7467
                                             41 COMRAM     9     4      5
                      _nwkFrameAlloc
                _nwkFrameCommandInit
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkFrameCommandInit                                  2     0      2     244
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _nwkFrameFree                                         2     0      2     378
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqTaskHandler                                4     4      0   13736
                                             48 COMRAM     4     4      0
                  _nwkDataReqConfirm
                _nwkDataReqSendFrame
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqSendFrame                                  7     5      2   13021
                                             41 COMRAM     7     5      2
                             _memcpy
                      _nwkFrameAlloc
                         _nwkTxFrame
 ---------------------------------------------------------------------------------
 (6) _nwkTxFrame                                           6     4      2    3328
                                             35 COMRAM     6     4      2
                  _nwkRoutePrepareTx
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                10     8      2     422
                                             25 COMRAM    10     8      2
                             ___omul
 ---------------------------------------------------------------------------------
 (7) ___omul                                              24     8     16     422
                                              1 COMRAM    24     8     16
 ---------------------------------------------------------------------------------
 (7) _nwkRoutePrepareTx                                    6     4      2    2109
                                             12 COMRAM     6     4      2
                  _NWK_GroupIsMember
                   _NWK_RouteNextHop
 ---------------------------------------------------------------------------------
 (8) _NWK_RouteNextHop                                     5     2      3    1465
                                              7 COMRAM     5     2      3
                 _NWK_RouteFindEntry
 ---------------------------------------------------------------------------------
 (5) _NWK_RouteFindEntry                                   6     3      3    1020
                                              1 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (5) _NWK_GroupIsMember                                    5     3      2     268
                                              1 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (6) _nwkFrameAlloc                                        5     3      2    3143
                                             13 COMRAM     5     3      2
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    2889
                                              1 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6    5200
                                              7 COMRAM    11     5      6
                             ___wmul (ARG)
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _nwkDataReqConfirm                                    6     4      2     554
                                              8 COMRAM     6     4      2
                        _appDataConf *
 ---------------------------------------------------------------------------------
 (5) _appDataConf                                          2     0      2     287
                                              6 COMRAM     2     0      2
                     _free_tx_buffer
 ---------------------------------------------------------------------------------
 (6) _free_tx_buffer                                       5     3      2     179
                                              1 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _SYS_Init                                             0     0      0   97979
                           _NWK_Init
                           _PHY_Init
                      _SYS_TimerInit
 ---------------------------------------------------------------------------------
 (2) _SYS_TimerInit                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PHY_Init                                             0     0      0   97373
                          _initRadio
 ---------------------------------------------------------------------------------
 (4) _initRadio                                           11    11      0   97373
                                             50 COMRAM     7     7      0
                         _SX1276Read
                        _SX1276Write
                         _computeFRF
                          _enableCrc
                 _explicitHeaderMode
                            _receive
                     _setCodingRate4
                       _setFrequency
                  _setPreambleLength
                 _setSignalBandwidth
                 _setSpreadingFactor
                         _setTxPower
                              _srand
 ---------------------------------------------------------------------------------
 (5) _srand                                                6     4      2     135
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _setTxPower                                           1     1      0    5868
                                             16 COMRAM     1     1      0
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setSpreadingFactor                                   9     9      0   11242
                                             34 COMRAM     9     9      0
                         _SX1276Read
                        _SX1276Write
                            ___lldiv
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (5) _setSignalBandwidth                                  16    12      4   15241
                                             34 COMRAM    16    12      4
                         _SX1276Read
                        _SX1276Write
                             ___flge
                            ___lldiv
                           ___xxtofl
                 _getSignalBandwidth
                 _getSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _getSpreadingFactor                                   5     1      4    1145
                                             14 COMRAM     5     1      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) _getSignalBandwidth                                   7     3      4    1179
                                             14 COMRAM     7     3      4
                         _SX1276Read
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1516
                                              1 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    2138
                                             15 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _setPreambleLength                                    2     0      2    5904
                                             16 COMRAM     2     0      2
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _setFrequency                                        12     8      4    8744
                                             34 COMRAM    12     8      4
                        _SX1276Write
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) _setCodingRate4                                       3     3      0    7013
                                             16 COMRAM     3     3      0
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _receive                                              1     1      0   19557
                                             16 COMRAM     1     1      0
                        _SX1276Write
                 _explicitHeaderMode
                 _implicitHeaderMode
 ---------------------------------------------------------------------------------
 (6) _implicitHeaderMode                                   0     0      0    6880
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (6) _explicitHeaderMode                                   0     0      0    6880
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (5) _enableCrc                                            0     0      0    6880
                         _SX1276Read
                        _SX1276Write
 ---------------------------------------------------------------------------------
 (6) _SX1276Write                                          2     1      1    5735
                                             14 COMRAM     2     1      1
                         _SX1276Read (ARG)
                  _SX1276WriteBuffer
 ---------------------------------------------------------------------------------
 (7) _SX1276WriteBuffer                                    4     2      2    1046
                                              8 COMRAM     3     1      2
                  _SPI1_ExchangeByte
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (8) _SPI1_WriteBlock                                      6     2      4     546
                                              2 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (7) _SX1276Read                                           2     2      0    1145
                                             12 COMRAM     2     2      0
                   _SX1276ReadBuffer
 ---------------------------------------------------------------------------------
 (8) _SX1276ReadBuffer                                     5     2      3    1046
                                              8 COMRAM     4     1      3
                  _SPI1_ExchangeByte
                     _SPI1_ReadBlock
 ---------------------------------------------------------------------------------
 (9) _SPI1_ReadBlock                                       6     2      4     338
                                              2 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (9) _SPI1_ExchangeByte                                    1     1      0      31
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _computeFRF                                          13    13      0    2989
                                             34 COMRAM    13    13      0
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     648
                                              1 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8    1905
                                             21 COMRAM    13     5      8
                 _getSignalBandwidth (ARG)
                 _getSpreadingFactor (ARG)
 ---------------------------------------------------------------------------------
 (2) _NWK_Init                                             1     1      0     606
                                              5 COMRAM     1     1      0
                     _nwkDataReqInit
                       _nwkFrameInit
                       _nwkGroupInit
                       _nwkRouteInit
                          _nwkRxInit
                          _nwkTxInit
 ---------------------------------------------------------------------------------
 (3) _nwkTxInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _nwkRxInit                                            1     1      0     290
                                              4 COMRAM     1     1      0
                   _NWK_OpenEndpoint
 ---------------------------------------------------------------------------------
 (2) _NWK_OpenEndpoint                                     3     1      2     222
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _nwkRouteInit                                         1     1      0     112
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkGroupInit                                         1     1      0      68
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkFrameInit                                         1     1      0      68
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _nwkDataReqInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     862
                     _CRC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR0_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     555
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2     111
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     200
                                              3 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     200
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CRC_Initialize                                       5     5      0      92
                                              1 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR0_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR0_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _Timer0Handler *
 ---------------------------------------------------------------------------------
 (16) _Timer0Handler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
                   Absolute function *
          _UART1_DefaultErrorHandler *
   _UART1_DefaultFramingErrorHandler *
   _UART1_DefaultOverrunErrorHandler *
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (19) _UART1_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _UART1_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _UART1_DefaultErrorHandler                           0     0      0       0
                _UART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (19) _UART1_RxDataHandler                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _CRC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
   _SYS_Init
     _NWK_Init
       _nwkDataReqInit
       _nwkFrameInit
       _nwkGroupInit
       _nwkRouteInit
       _nwkRxInit
         _NWK_OpenEndpoint
       _nwkTxInit
     _PHY_Init
       _initRadio
         _SX1276Read
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         _computeFRF
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___llmod
         _enableCrc
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _explicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _receive
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _implicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _setCodingRate4
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _setFrequency
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___llmod
         _setPreambleLength
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _setSignalBandwidth
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___flge
             ___xxtofl (ARG)
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           ___xxtofl
           _getSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         _setSpreadingFactor
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           ___lldiv
             _getSignalBandwidth (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor (ARG)
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _getSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         _setTxPower
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _srand
     _SYS_TimerInit
   _SYS_TaskHandler
     _NWK_TaskHandler
       _nwkDataReqTaskHandler
         _nwkDataReqConfirm
           _appDataConf *
             _free_tx_buffer
         _nwkDataReqSendFrame
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
           _nwkFrameAlloc
             _memset
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___omul
       _nwkRxTaskHandler
         _nwkFrameFree
         _nwkFrameNext
         _nwkRouteFrame
           _NWK_RouteNextHop
             _NWK_RouteFindEntry
           _nwkFrameFree
           _nwkRouteSendRouteError
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___omul
           _nwkTxFrame
             _nwkRoutePrepareTx
               _NWK_GroupIsMember
               _NWK_RouteNextHop
                 _NWK_RouteFindEntry
             _rand
               ___omul
         _nwkRxHandleIndication
           _nwkRxIndicateFrame
             _appDataInd *
               _CircularBufferPushBack
                 ___wmul
                 _memcpy
                   ___wmul (ARG)
                   _strlen (ARG)
               _get_free_rx_buffer
               _memcpy
                 ___wmul (ARG)
                 _strlen (ARG)
               _memset
             _nwkRxServiceDataInd *
               _nwkRouteErrorReceived
                 _nwkRouteRemove
                   _NWK_RouteFindEntry
                   _NWK_RouteFreeEntry
               _nwkTxAckReceived
                 _nwkFrameNext
             nwkFrame@nwkFramePayloadSize *
           _nwkRxSendAck
             _nwkFrameAlloc
               _memset
             _nwkFrameCommandInit
             _nwkTxFrame
               _nwkRoutePrepareTx
                 _NWK_GroupIsMember
                 _NWK_RouteNextHop
                   _NWK_RouteFindEntry
               _rand
                 ___omul
         _nwkRxHandleReceivedFrame
           _NWK_GroupIsMember
           _nwkRouteFrameReceived
             _NWK_RouteFindEntry
             _NWK_RouteNewEntry
           _nwkRxRejectDuplicate
             _SYS_TimerStart
               _SYS_TimerStarted
               _placeTimer
             _nwkRouteRemove
               _NWK_RouteFindEntry
               _NWK_RouteFreeEntry
           _nwkTxBroadcastFrame
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
             _nwkFrameAlloc
               _memset
             _rand
               ___omul
       _nwkTxTaskHandler
         _PHY_DataReq
           _SPI1_ExchangeByte
           _SPI1_WriteBlock
             _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _idle
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkDataReqTxConf *
           _nwkFrameFree
         _nwkFrameFree *
         _nwkFrameNext *
         _nwkRouteFrameSent *
           _NWK_RouteFindEntry
           _NWK_RouteFreeEntry
           _nwkRouteNormalizeRanks
     _PHY_TaskHandler
       _radio_engine
         _DIO0_Receive_ISR
           _PHY_DataInd
             _memcpy
               ___wmul (ARG)
               _strlen (ARG)
             _nwkFrameAlloc
               _memset
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _get_lqi
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___xxtofl
           _get_rssi
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _PHY_DataConf
           _nwkTxConvertPhyStatus
         _SX1276Read
           _SX1276ReadBuffer
             _SPI1_ExchangeByte
             _SPI1_ReadBlock
               _SPI1_ExchangeByte
         _cad
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _get_timer0base
           _set_timer0base
           _start_radio_cad
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _idle
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
         _get_timer0base
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _receive
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _implicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
         _set_timer0base
     _SYS_TimerTaskHandler
       _nwkRxDuplicateRejectionTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
       _nwkTxAckWaitTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
         _nwkTxConfirm
       _nwkTxDelayTimerHandler *
         _SYS_TimerStart
           _SYS_TimerStarted
           _placeTimer
         _nwkFrameNext
       _placeTimer *
   _TMR0_SetInterruptHandler
   _bootLoadApplication
     _CircularBufferInit
       ___lwdiv
     _DATAEE_ReadByte_Platform
       _DATAEE_ReadByte
       _DATAEE_WriteByte
     _DATAEE_WriteByte_Platform
       _DATAEE_WriteByte
     _NWK_OpenEndpoint
     _NWK_SetAddr
       _PHY_SetShortAddr
     _NWK_SetPanId
       _PHY_SetPanId
     _PHY_SetChannel
       _setFrequency
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         ___lldiv
           _getSignalBandwidth (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
           _getSpreadingFactor (ARG)
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
         ___llmod
     _PHY_SetRxState
       _receive
         _SX1276Write
           _SX1276Read (ARG)
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276WriteBuffer (ARG)
             _SPI1_ExchangeByte
             _SPI1_WriteBlock
               _SPI1_ExchangeByte
         _explicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _implicitHeaderMode
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
     _crc16_app
       _CRC_8BitDataWrite
       _CRC_CalculatedResultGet
         _CRC_ReverseValue
     _loadMACAddr
       _DIA_ReadByte
     _set_parity
     _set_uart_baud
   _processATCommand
     _UART1_Read
     _UART1_is_rx_ready
     _executeATCommand
       _cmdAddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdBcast
         _NWK_DataReq
         _get_free_tx_buffer
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
       _cmdBootLoad
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetCAD
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetCADRSSI
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetMode
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetRFCH
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetRxCnt
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetSF
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdGetTTL
       _cmdGetTX
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdI
         _sendInfo
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _fputc
                   _putch
                     _UART1_Write
                 _isdigit
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _UART1_Write
                     _fputs
                       _fputc
                         _putch
                           _UART1_Write
                     _strlen
                   _toupper
                     _islower
       _cmdMac
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdNaddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdRecv
         _CircularBufferEmpty
         _CircularBufferPopFront
           ___wmul
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _putch
           _UART1_Write
       _cmdReset
       _cmdRstCAD
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdSend
         _NWK_DataReq
         _get_free_tx_buffer
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSendSink
       _cmdSetAES
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strlen
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetAddr
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetBaud
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetCADRSSI
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtol
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetNaddr
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _setSyncWord
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetParity
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _set_parity
         _strstr
           _strchr
           _strlen
           _strncmp
       _cmdSetRFCH
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetSF
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtol
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _cmdSetSink
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _cmdSetTTL
       _cmdSetTX
         _DATAEE_WriteByte_Platform
           _DATAEE_WriteByte
         _initRadio
           _SX1276Read
             _SX1276ReadBuffer
               _SPI1_ExchangeByte
               _SPI1_ReadBlock
                 _SPI1_ExchangeByte
           _SX1276Write
             _SX1276Read (ARG)
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276WriteBuffer (ARG)
               _SPI1_ExchangeByte
               _SPI1_WriteBlock
                 _SPI1_ExchangeByte
           _computeFRF
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _enableCrc
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _explicitHeaderMode
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _receive
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             _explicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
             _implicitHeaderMode
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276Write
                 _SX1276Read (ARG)
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
                 _SX1276WriteBuffer (ARG)
                   _SPI1_ExchangeByte
                   _SPI1_WriteBlock
                     _SPI1_ExchangeByte
           _setCodingRate4
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setFrequency
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___llmod
           _setPreambleLength
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _setSignalBandwidth
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___flge
               ___xxtofl (ARG)
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             ___xxtofl
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setSpreadingFactor
             _SX1276Read
               _SX1276ReadBuffer
                 _SPI1_ExchangeByte
                 _SPI1_ReadBlock
                   _SPI1_ExchangeByte
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
             ___lldiv
               _getSignalBandwidth (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
               _getSpreadingFactor (ARG)
                 _SX1276Read
                   _SX1276ReadBuffer
                     _SPI1_ExchangeByte
                     _SPI1_ReadBlock
                       _SPI1_ExchangeByte
             _getSignalBandwidth
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
             _getSpreadingFactor
               _SX1276Read
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
           _setTxPower
             _SX1276Write
               _SX1276Read (ARG)
                 _SX1276ReadBuffer
                   _SPI1_ExchangeByte
                   _SPI1_ReadBlock
                     _SPI1_ExchangeByte
               _SX1276WriteBuffer (ARG)
                 _SPI1_ExchangeByte
                 _SPI1_WriteBlock
                   _SPI1_ExchangeByte
           _srand
         _memcpy
           ___wmul (ARG)
           _strlen (ARG)
         _memset
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
         _strstr
           _strchr
           _strlen
           _strncmp
         _strtoul
           ___strtoxl
             ___lmul
             _isalpha
             _isdigit
             _isspace
             _toupper
               _islower
       _print_hop_table
         _NWK_RouteTable
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _fputc
               _putch
                 _UART1_Write
             _isdigit
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _UART1_Write
                 _fputs
                   _fputc
                     _putch
                       _UART1_Write
                 _strlen
               _toupper
                 _islower
       _set_hop_table_ttl
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _fputc
                 _putch
                   _UART1_Write
               _isdigit
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _UART1_Write
                   _fputs
                     _fputc
                       _putch
                         _UART1_Write
                   _strlen
                 _toupper
                   _islower
       _strstr
         _strchr
         _strlen
         _strncmp
     _get_timer0base
     _memset
     _queue_serial_led_event
       _queueLedEvent
         _CircularBufferPushBack
           ___wmul
           _memcpy
             ___wmul (ARG)
             _strlen (ARG)
         _CircularBufferSpace
           _CircularBufferSize
     _set_timer0base

 _TMR0_ISR (ROOT)
   _TMR0_CallBack
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _Timer0Handler *

 _Default_ISR (ROOT)

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *
     Absolute function(Fake) *
     _UART1_DefaultErrorHandler *
       _UART1_RxDataHandler
     _UART1_DefaultFramingErrorHandler *
     _UART1_DefaultOverrunErrorHandler *
     _UART1_RxDataHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0     6A1      37       41.4%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      36        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      35        0.0%
BANK12             100      0       0      26        0.0%
BITBANK11          100      0       0      34        0.0%
BANK11             100      0       0      25        0.0%
BITBANK10          100      0       0      33        0.0%
BANK10             100      0       0      24        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      BD      15       73.8%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      60      13       37.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E6       9       89.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F9       7       97.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     51      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5E       1       98.9%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4BA      32        0.0%
DATA                 0      0     B5B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jun 13 19:27:06 2020

                         cmdSetNaddr@tempaddr 0083                nwkRouteFrameReceived@discovery 0011  
                           _SPI1_ExchangeByte 8E10                                    _RSSITarget 00F7  
                              _setCodingRate4 87DA                            _commandByteCounter 00D9  
                                 __CFG_CP$OFF 000000                            ?_SPI1_ExchangeByte 0001  
                     bootLoadApplication@temp 0034                           ___wmul@multiplicand 0004  
                            ??_PHY_SetRxState 0012                             ??_PHY_TaskHandler 004D  
              __end_of_nwkRouteNormalizeRanks 86C6                                _SYS_TimerStart 8A80  
                     ??_nwkDataReqTaskHandler 0031                      __size_of_start_radio_cad 0010  
                                 __CFG_LVP$ON 000000                       ?_nwkTxDelayTimerHandler 0012  
                  __size_of_set_hop_table_ttl 0010                                           l225 7936  
                                         l412 69BA                                           l239 7998  
                                         l362 6D00                                           l371 5A20  
                                         l381 6A68                                           l388 9098  
                                         l647 7412                                           _GIE 01FE97  
                    __end_of_DIO0_Receive_ISR 6F90                                           _SNR 00D0  
                          _CircularBufferInit 671A                            _CircularBufferSize 7B88  
                      __end_of_NWK_RouteTable 905E                          __end_of_cmdSetParity 713E  
                                         _cad 65AA                                           _abs 846C  
                                         _pad 6664                                  ?_loadMACAddr 0001  
                           _NWK_GroupIsMember 894C                            nwkRouteFrame@frame 0033  
                             nwkRxSendAck@ack 002E                       __size_of_PMD_Initialize 0022  
                         ??_SPI1_ExchangeByte 0002                                           prod 003FF3  
                      CircularBufferEmpty@ctx 0002                                           tosl 003FFD  
                                         wreg 003FE8                                   get_lqi@rssi 0043  
                    nwkDataReqSendFrame@frame 002F                                  ___flmul@aexp 001D  
                                ___flmul@bexp 0022                        CircularBufferInit@size 0015  
                        _FirmwareVersionMajor FDB6                      _DATAEE_ReadByte_Platform 55C2  
                          _UART1_Transmit_ISR 8846                          _FirmwareVersionMinor FDB5  
                                ___flmul@sign 001C                                  ___flmul@temp 0027  
                                ___flmul@prod 0023                                 __CFG_BBEN$OFF 000000  
                          ?_NWK_GroupIsMember 0002                                ?_queueLedEvent 001C  
                            _SX1276ReadBuffer 8AA8                         __end_of_SYS_TimerInit 903E  
                       queueLedEvent@LEDState 001E                           ?_CircularBufferInit 0009  
                                 ?_SX1276Read 0001                               PHY_DataReq@data 0011  
                                __CFG_ZCD$OFF 000000                        NWK_GroupIsMember@group 0002  
                         ?_CircularBufferSize 0002                               ?_get_timer0base 0002  
                                ___fltol@exp1 0042                                          ?_cad 0001  
                                        ?_abs 0014                               nwkTxFrame@frame 0024  
                                        l1233 835E                                          l1093 8E1E  
                                        l3112 66A0                                          l3123 2356  
                                        l2237 6404                                          l3125 2362  
                                        l3150 2CC0                                          l1448 8282  
                                        l4112 0CB6                                          l4113 0CE4  
                                        l2346 3C1A                                          l2179 199E  
                                        l3163 25A0                                          l1644 7D3E  
                                        l3148 2CB4                                          l4052 5CD6  
                                        l1645 7D26                                          l1653 5F9C  
                                        l3165 25AC                                          l2366 7076  
                                        l4119 0CEC                                          l2624 8506  
                                        l3258 72C4                                          l4067 7EEE  
                                        l1828 1EFE                                          l3722 7DF4  
                             PHY_DataReq@size 0013                                          l3651 76B2  
                                        l2668 8A00                                          l1966 810C  
                                        l2694 4DC8                                          ?_pad 0014  
                                        l3496 60CC                                          l3760 1B04  
                                        l3761 1AE2                                          l1986 376A  
                                        l3906 849C                                          l3845 132E  
                                        l3669 5BD6                                          l3862 15F4  
                                        l3854 155E                                          l3855 155A  
                                        l3679 6578                                          l3776 1BD6  
                                        l3785 1C3E                                          l3937 3FF8  
                                        l3786 1C3A                                          l3893 40DA  
                                        l3886 4054                                          l9132 78D2  
                                        l9124 7880                                          l9350 71FE  
                                        l9620 6DF8                                          l9356 721E  
                                        l9374 8972                                          l9368 8950  
                                        l9616 6DD4                                          l9800 39C2  
                                        l9634 7990                                          l9626 7952  
                                        l9706 7CCC                                          l9722 6460  
                                        l9802 39D0                          nwkDataReqConfirm@req 0009  
                                        l9734 64C6                          _SYS_TimerTaskHandler 4C84  
                                        l9762 8246                                          l9692 5034  
                                        l9756 8234                                          l9764 825E  
                                        l9942 8326                                          STR_1 FF5F  
                                        l9936 82F4                                          l9944 8328  
                                        l9688 4FFE                                          l9784 38F8  
                                        STR_2 FFDE                                          STR_3 FEC5  
                                        l9698 508A                                          l9778 38BA  
                                        STR_4 FEC5                                          STR_5 FEC9  
                                        l9788 3938                                          STR_6 FFDE  
                                        STR_7 FEC5                                          l9798 39AA  
                                        STR_8 FEC5                                          STR_9 FEC9  
                                        _LATA 003FBA                                          _LATB 003FBB  
                                        _LATC 003FBC                    __end_of_explicitHeaderMode 8ED4  
                                        _PMD0 0039C0                                          _PMD1 0039C1  
                                        _PMD2 0039C2                                          _PMD3 0039C3  
                                        _PMD4 0039C4                                          _PMD5 0039C5  
                                        u7050 724A                                          _PMD6 0039C6  
                                        _PMD7 0039C7                                          u8030 3BBC  
                                        u8110 630C                                          u6600 78B8  
                                        u8120 6328                                          u8140 77B4  
                                        u8300 1AB6                                          u6606 78BA  
                                        u9110 36E4                                          u8310 1AC6  
                                        u9200 37C4                                          u8320 1AC8  
                                        u8500 1C34                                          u8350 1B0C  
                                        u5935 83E4                                          u9311 2AB8  
                                        u5936 83E6                                          u7720 645C  
                                        u9160 3774                                          u7561 6DCE  
                                        u9170 3776                                          u7810 3940  
                                        u9180 379E                                          u9190 37BE  
                                        u9334 2B08                                          u8710 1554  
                                        u9335 2B04                                          u7760 4FB4  
                                        u8560 1CA0                                          u8480 1C1E  
                                        u9364 2B78                                          u7765 4FA2  
                                        u9365 2B74                                          u9374 2BDE  
                                        u8750 15C0                                          u8670 133A  
                                        u8830 61E2                                          u9375 2BDA  
                                        u8760 15DE                                          u8840 621A  
                                        u8845 6210                                          u8880 6270  
                           ?_PHY_SetShortAddr 0002                           _CircularBufferEmpty 897E  
                                        _RSSI 00D2                    _nwkRouteFrameReceived$4265 0012  
                                        _WPUA 003A41                                          _WPUB 003A51  
                                        _WPUC 003A61                                          _WPUE 003A81  
                         _CircularBufferSpace 876E                              PHY_DataInd@frame 0017  
                               __CFG_FCMEN$ON 000000                           ?_UART1_Transmit_ISR 0001  
            __end_of_nwkTxAckWaitTimerHandler 70B2                                          abs@a 0014  
                                        _cmdI 907E                           ??_NWK_GroupIsMember 0004  
                                        _dbuf 02BC                                          _idle 9026  
                                        _atoi 3E96                                          _main 8A58  
                                        _dtoa 22D4                           nwkRouteFrame@header 0035  
                            ?_NWK_TaskHandler 0001                                          _rand 4EB8  
                                        _seed 00E4                                          _prec 00B7  
                                        _nout 00B3                                          pad@i 001B  
                                        pad@p 0018                                          fsr0h 003FEA  
                                        fsr1h 003FE2                                          indf0 003FEF  
                                        fsr2h 003FDA                                          fsr0l 003FE9  
                                        indf1 003FE7                                          indf2 003FDF  
                                        fsr1l 003FE1                                          pad@w 001D  
                                        fsr2l 003FD9                            ??_PHY_SetShortAddr 0004  
                                        _utoa 2C98                                          _xtoa 2584  
                             _rx_buffer_queue 01E2                       __size_of_SPI1_ReadBlock 0038  
                    nwkRxRejectDuplicate@diff 001A                                          prodh 003FF4  
                                        prodl 003FF3                                          start 00AE  
                              NWK_DataReq@req 0002                     __end_of_SPI1_ExchangeByte 8E2A  
               ??_UART1_SetTxInterruptHandler 0004    nwkRxDuplicateRejectionTimerHandler@restart 0014  
                      CircularBufferSpace@ctx 000A                        __end_of_setCodingRate4 8810  
                               __CFG_CSWEN$ON 000000                             _UART1_rx_vect_isr 8CF8  
                                ___param_bank 000000                          __end_of_DIA_ReadByte 8BCC  
                  ??_nwkRxHandleReceivedFrame 002B                             nwkFrameFree@frame 0002  
                   CircularBufferPopFront@ctx 0013                     CircularBufferPopFront@val 0015  
                        ??_CircularBufferInit 0011                    __size_of_UART1_is_rx_ready 000E  
                        ??_CircularBufferSize 0004                                   ?_UART1_Read 0001  
                            _SYS_TimerStarted 8226                       ??_nwkRxHandleIndication 003D  
                          ?_UART1_rx_vect_isr 0001                                         ??_cad 0011  
                                       ??_abs 0016                                         ??_pad 001A  
                   __size_of_DATAEE_WriteByte 0040                        __end_of_SYS_TimerStart 8AA8  
                     __end_of_TMR0_Initialize 8564                          ?_CircularBufferEmpty 0002  
              __end_of_nwkTxDelayTimerHandler 71CA                ??_TMR0_DefaultInterruptHandler 0001  
                        __size_of_cmdGetRxCnt 004A                          ?_CircularBufferSpace 000A  
              __size_of_OSCILLATOR_Initialize 0018                          ??_UART1_Transmit_ISR 0001  
                            nwkTxFrame@header 0028                 __end_of_OSCILLATOR_Initialize 8EEC  
                        __size_of_cmdBootLoad 003A                                         l10010 3C4C  
                                       l10012 3C70                                         l10004 3C02  
                                       l10022 3CF6                      ??_nwkRouteSendRouteError 002F  
                                       l10050 6318                                         l10044 62E4  
                                       l10036 62B4                                         l10300 1AF4  
                                       l10220 19CC                                  ?_SX1276Write 000F  
                                       l10080 77B8                                         l10400 1CC4  
                                       l10224 19D0                                         l11040 86D2  
                                       l11032 86CA                                         l10322 1B4A  
                                       l10314 1B28                                         l11050 86DA  
                                       l10084 77C4                                         l10324 1B4E  
                                       l10332 1B60                                         l10244 1A14  
                                       l11044 86D6                                         l11036 86CE  
                                       l10094 77D0                                         l10350 1BFA  
                                       l10342 1BC6                                         l10422 12DA  
                                       l10360 1C10                                         l10256 1A38  
                                       l10248 1A18                                         l10440 131A  
                                       l10424 12DE                                         l10522 15D0  
                                       l10450 134C                                         l10442 131E  
                                       l10426 12EE                                         l10602 6286  
                                       l10366 1C1A                                         l10286 1A92  
                                       l10534 1614                                         l10518 15B2  
                                       l13006 7430                                         l10394 1CBA  
                                       l10386 1C94                                         l10298 1AF0  
                                       l10492 1506                                         l11622 6B4C  
                                       l11630 6BCC                                         l10398 1CC2  
                                       l14030 42F4                                         l14110 5B64  
                                       l12432 7FEC                                         l11640 57D8  
                                       l10744 36E6                                         l10912 2C18  
                                       l10584 6246                                         l10568 61F4  
                                       l14200 2390                                         l14120 5BC0  
                                       l12450 8BF2                                         l15010 8A44  
                                       l11642 57F0                                         l10770 37FE  
                                       l10498 1524                                         l10594 625E  
                                       l13242 4D14                                         l13234 4CB2  
                                       l12362 6022                                         l12346 5F94  
                                       l14042 4342                                         l14210 24CC  
                                       l14130 651A                                         l15100 87F0  
                                       l10748 36FC                                         l10908 2BFA  
                                       l11628 6BB4                                         l10596 626A  
                                       l10588 6256                                         l14044 4356  
                                       l14036 431C                                         l14108 5B50  
                                       l15006 8A3A                                         l11646 5846  
                                       l11638 57CA                                         l11654 56CA  
                                       l12622 714C                                         l12630 718E  
                                       l12606 7030                                         l12358 6000  
                                       l14062 43EE                                         l14054 43B2  
                                       l14230 2534                                         l12464 7F50  
                                       l15120 3A1A                                         l15112 8502  
                                       l14400 44DC                                         l10776 3856  
                                       l10784 8690                                         l11584 7D32  
                                       l14136 6562                                         l14128 6506  
                                       l14312 26BC                                         l14320 2754  
                                       l16000 3094                                         l15034 50E0  
                                       l14154 7606                                         l14162 764C  
                                       l10890 2B8C                                         l12706 7DC2  
                                       l12802 61A0                                         l14058 43C8  
                                       l14090 477E                                         l14082 4722  
                                       l14074 46E4                                         l14234 254E  
                                       l14250 2D0C                                         l12476 8AFA  
                                       l15060 0FDE                                         l15052 0F3A  
                                       l14420 552C                                         l10884 2B62  
                                       l10868 2A72                                         l11668 575E  
                                       l12708 7DCA                                         l12804 61D0  
                                       l14148 81D8                                         l14084 4736  
                                       l14260 2E38                                         l15300 0E80  
                                       l15204 0B3A                                         l13198 7D72  
                                       l15038 50EA                                         l14414 456A  
                                       l14406 4518                                         l12718 7DEA  
                                       l12750 6110                                         l12734 82DE  
                                       l14342 3EA8                                         l14094 4794  
                                       l14078 4708                                         l14182 233A  
                                       l15214 0B9C                                         l15080 1178  
                                       l15072 10D4                                         l15064 1030  
                                       l15056 0F8C                                         l14408 454E  
                                       l10888 2B66                                         l10896 2B90  
                                       l16200 6AC0                                         l12760 612C  
                                       l14360 3F18                                         l14352 3EFE  
                                       l14344 3EAC                                         l14336 27CE  
                                       l15320 78F0                                         l15312 0EB6  
                                       l15232 0BFE                                         l14610 4A64  
                                       l16202 6AD2                                         l15154 6D3A  
                                       l12594 7E8A                                         l12770 6148  
                                       l14362 3F1E                                         l14098 47BA  
                                       l14290 2604                                         l14530 0A1E  
                                       l14506 0886                                         l15314 0ECE  
                                       l15226 0BC4                                         l15306 0E9C  
                                       l16122 712A                                         l16114 70DA  
                                       l15084 11CA                                         l15076 1126  
                                       l15068 1082                                         l12588 7E5E  
                                       l12780 6164                                         l14364 3F4C  
                                       l14196 2380                                         l14284 25C4  
                                       l14540 0A6A                                         l14516 0932  
                                       l14460 0690                                         l14452 0688  
                                       l14444 0674                                         l15164 4B96  
                                       l15228 0BF6                                         l15180 79B2  
                                       l14630 4ABE                                         l14622 4A9A  
                                       l14614 4A76                                         l14606 4A52  
                                       l16206 6AE4                                         l15350 7B54  
                                       l12790 6180                                         l14358 3F10  
                                       l14446 0676                                         l14470 06E4  
                                       l15166 4BA4                                         l15262 0CD2  
                                       l15254 0CA6                                         l15190 7A1A  
                                       l15182 79BA                                         l15502 5CCE  
                                       l16118 7102                                         l15096 87E6  
                                       l15520 1D22                                         l16208 6B18  
                                       l16224 34DE                                         l16304 4DAE  
                                       l15352 7B5C                                         l14368 3F8A  
                                       l14536 0A60                                         l14464 0694  
                                       l14456 068C                                         l14448 0684  
                                       l15328 792E                                         l14800 73A4  
                                       l16160 8088                                         l15280 0D8C  
                                       l15272 0D54                                         l15248 0C92  
                                       l16064 59A8                                         l14706 72B6  
                                       l14722 60B6                                         l14714 606C  
                                       l14650 4B52                                         l14642 4AF4  
                                       l14634 4AD0                                         l14626 4AAC  
                                       l14618 4A88                                         l14394 4470  
                                       l14570 6932                                         l15610 1808  
                                       l16250 35AC                                         l16226 34EE  
                                       l16218 34AC                                         l16330 4E18  
                                       l16314 4DD2                                         l13906 82A4  
                                       l13930 7F0E                                         l14298 2626  
                                       l14546 0A80                                         l16410 0294  
                                       l16402 0240                                         l14580 67D4  
                                       l15620 189C                                         l15612 1872  
                                       l16252 35BE                                         l16236 353C  
                                       l16316 4DD6                                         l16308 4DBA  
                                       l15348 7B4C                                         l15356 7B64  
                                       l13908 82A6                                         l14484 0746  
                                       l14468 069E                                         l16164 809C  
                                       l15188 7A12                                         l14718 60A0  
                                       l14638 4AE2                                         l15630 18DE  
                                       l16262 362E                                         l16334 4E20  
                                       l16318 4DDE                                         l12982 8568  
                                       l13918 7750                                         l13942 8438  
                                       l14486 076A                                         l15374 5D48  
                                       l16430 0346                                         l16422 02FA  
                                       l16414 02B6                                         l16406 026A  
                                       l16502 05CE                                         l14744 76A4  
                                       l14736 7670                                         l14728 6104  
                                       l14760 408A                                         l14648 4B06  
                                       l16272 747C                                         l15624 18B2  
                                       l16248 35AC                                         l16264 366E  
                                       l15704 65E8                                         l16352 4E7A  
                                       l13928 7F0A                                         l14488 0776  
                                       l15368 5D0A                                         l15376 5D7A  
                                       l14680 7BF6                                         l15296 0E4A  
                                       l16176 589C                                         l14738 767C  
                                       l13962 8744                                         l13954 881E  
                                       l14762 4090                                         l14754 406C  
                                       l14594 6872                                         l16290 74E6  
                                       l15554 5F0E                                         l15618 188C  
                                       l16258 35F4                                         l16338 4E38  
                                       l13946 8454                                         l14674 7ADE  
                                       l16450 0404                                         l16442 03C0  
                                       l16434 0370                                         l16426 0324  
                                       l16418 02D8                                         l16370 0104  
                                       l16362 00B4                                         l16610 3D32  
                                       l14772 4100                                         l14764 409C  
                                       l14940 30E6                                         l15644 1974  
                                       l15572 167E                                         l16196 6A9C  
                                       l15732 663A                                         l16348 4E72  
                                       l16700 2066                                         l13892 826C  
                                       l13972 6686                                         l14676 7B02  
                                       l15396 7548                                         l15468 52FC  
                                       l14684 7C0A                                         l16516 7E14  
                                       l16620 3D62                                         ?_cmdI 0001  
                                       l14694 7276                                         l13966 875C  
                                       l13958 8834                                         l14790 4150  
                                       l14774 410C                                         l14766 40C2  
                                       l16286 74A0                                         l16278 748E  
                                       l15638 1930                                         l15582 16D8  
                                       l16198 6AAE                                         l13982 66C6  
                                       l15398 7556                                         l15822 3308  
                                       l15494 5C7C                                         l15486 5C2E  
                                       l16470 04BC                                         l16462 0478  
                                       l16454 0426                                         l16446 03E2  
                                       l16438 039A                                         l16390 01D2  
                                       l16382 017A                                         l16374 012E  
                                       l16366 00E2                                         l14696 7282  
                                       l16288 74CE                                         l15664 63DA  
                                       l15656 6394                                         l15592 171A  
                                       l16560 565E                                         l16536 560C  
                                       l16712 2090                                         l13976 6698  
                                       l15904 523C                                         l14970 31E4  
                                       l14962 31C8                                         l14954 31AC  
                                       l15674 641A                                         l15762 6F88  
                                       l16298 4DA0                                         l13986 66FC  
                                       l13978 66AA                                         l15914 52A6  
                                       l16482 0532                                         l16474 04E6  
                                       l16466 049A                                         l16458 0450  
                                       l16394 01FC                                         l16386 01A4  
                                       l16378 0150                                         l16634 3DAA  
                                       l16626 3D7C                                         l16618 3D5A  
                                       l15668 63F4                                         l15588 16FE  
                                       l14868 4864                                         l16572 5686  
                                       l16548 5634                                         l16812 229C  
                                       l15828 332A                                         l15908 526C  
                                       l15916 52BE                                         l15780 28C8  
                                       l16636 3DB2                                         l16628 3D8E  
                                       l16726 2102                                         l15950 2EE8  
                                       l16494 058C                                         l16478 0508  
                                       l16398 021E                                         l16736 2134  
                                       l15928 8046                                         l15952 2EEC  
                                       l15960 2F08                                         l15872 7010  
                                       l16672 3E32                                         l16656 3E00  
                                       l16648 3DE4                                         l16680 3E58  
                                       l14994 325A                                         l14986 3238  
                                       l14978 3206                                         l15698 65CC  
                                       l16746 2166                                         l15786 28EA  
                                       l15970 2F8A                                         l15954 2EF4  
                                       l15962 2F4E                                         l16498 05B6  
                                       l16666 3E20                       __end_of_SYS_TaskHandler 8FB6  
                                       l16756 21A0                                         l16782 2206  
                                       l16766 21CE                                         l16846 8A76  
                                       l16776 21FC                                         l15984 2FDC  
                                       l15976 2FB8                                         l16794 2224  
                                       l15996 306C                                 ___fltol@sign1 0041  
                                       ?_idle 0001                               __end_of___aodiv 4420  
                                       ?_atoi 0009                               __end_of___fladd 1CE8  
                   __end_of_NWK_GroupIsMember 897E                                         ?_main 0001  
                                       ?_dtoa 001F                               __end_of___aomod 47EC  
                                       ?_rand 001A                                         STR_10 FE4A  
                                       STR_11 FFDE                                         STR_20 FEC5  
                                       STR_12 FFD6                                         STR_13 FEC5  
                                       STR_21 FFDB                                         STR_30 FEC5  
                                       STR_22 FFF4                                         STR_14 FE85  
                                       STR_23 FFD3                                         STR_31 FFD6  
                                       STR_15 FFDE                                         STR_24 FFD6  
                                       STR_16 FFD6                                         STR_40 FE77  
                                       STR_32 FE11                                         STR_33 FFD6  
                                       STR_25 FF5F                                         STR_41 FFDE  
                                       STR_17 FFA7                                 __CFG_WDTE$OFF 000000  
                                       STR_18 FFD3                                         STR_42 FEC5  
                                       STR_26 FEC5                                         STR_50 FFEA  
                                       STR_34 FE38                                         STR_43 FEC5  
                                       STR_27 FEC5                                         STR_19 FEC5  
                                       STR_51 FFBF                                         STR_35 FE26  
                                       STR_44 FFD6                                         STR_60 FFDE  
                                       STR_28 FFDE                                         STR_52 FFBF  
                                       STR_36 FE9F                                         STR_61 FEC5  
                                       STR_29 FEC5                                         STR_37 FFDE  
                                       STR_53 FFC5                                         STR_45 FE92  
                                       STR_62 FFD6                                         STR_38 FEC5  
                                       STR_46 FFDE                                         STR_54 FFC5  
                                       STR_70 FFA0                                         STR_39 FFD6  
                                       STR_55 FEC5                                         STR_47 FEC5  
                                       STR_71 FFA0                                         STR_63 FE69  
                                       STR_56 FFD6                                         STR_48 FFD6  
                                       STR_72 FFE5                                         STR_80 FF61  
                                       STR_64 FDB9                                         STR_65 FFD6  
                                       STR_57 FFDE                                         STR_81 FF61  
                                       STR_73 FFE5                                         STR_49 FFEA  
                                       STR_58 FFFC                                         STR_74 FFE0  
                                       STR_66 FF5A                                         STR_82 FF04  
                                       STR_90 FEAC                                         STR_67 FF5A  
                                       STR_75 FFE0                                         STR_91 FEAC  
                                       STR_83 FF04                                         STR_59 FF32  
                                       STR_84 FF8B                                         STR_68 FF29  
                                       STR_76 FED1                                         STR_92 FE5A  
                                       STR_85 FF8B                                         STR_77 FED1  
                                       STR_69 FF29                                         STR_93 FE5A  
                                       STR_86 FF6F                                         STR_78 FF4A  
                                       STR_94 FEF0                                         STR_87 FF6F  
                                       STR_79 FF4A                                         STR_95 FEF0  
                                       STR_88 FF0E                                         STR_96 FEDC  
                             __end_of___flmul 1632                                         STR_89 FF0E  
                                       STR_97 FEDC                                         STR_98 FF92  
                                       STR_99 FF92                            _implicitHeaderMode 8EA4  
                             __end_of___fltol 62A0                         nwkDataReqConfirm@prev 000D  
                             __end_of___lldiv 72DE                                         ?_utoa 001F  
                                       u10510 6BD4                                         u10370 7D18  
                                       u12210 743C                               __end_of___lodiv 5C08  
                                       u11404 5FE8                                         u13100 7ED6  
                                       u11405 5FE2                                         u13110 7ED8  
                                       u10375 7D12                                         ?_xtoa 001F  
                                       u14000 07FE                               __end_of___llmod 76CC  
                                       u12410 4D78                                         u13130 8944  
                                       u13050 847A                                         _U1P1H 003DED  
                                       u10548 5876                                         u13140 8946  
                                       u13300 5B68                                         u13060 88DC  
                                       _U1P2H 003DEF                                         u13070 88DE  
                                       u14030 096E                                         _U1P1L 003DEC  
                                       _U1P3H 003DF1                                         u13400 230E  
                                       u13080 8910                                         _U1P2L 003DEE  
                                       u14130 7286                                         u14210 7680  
                                       u13250 473A                                         u13330 651E  
                                       u13090 8912                                         u15010 0C48  
                                       _U1P3L 003DF0                                         u13171 4322  
                                       u11820 8FA4                                         u13500 2510  
                                       u15100 0D34                                         u14061 68E4  
                                       u13190 435A                                         u13430 234C  
                                       u15030 0C58                                         u13360 81D4  
                                       u13520 251E                                         u13600 2E76  
                                       u15200 0E78                                         u15120 0D7A  
                                       u15040 0C8E                                         u13281 5B30  
                                       u13370 7630                                         u13450 237A  
                                       u14330 7390                                         u15130 0D7C  
                                       u14420 4852                                         u11780 7DCE  
                                       u12900 7748                                         u13460 24DA  
                                       u13620 2596                                         u16020 6FF6  
                                       u12398 4D3C                                         u13390 230C  
                                       u13550 2CAA                                         u13710 2720  
                                       u14350 73DA                                         u12399 4D4E  
                                       u15207 0E6A                                         u15047 0C80  
                                       u14600 513C                                         u14520 3202  
                                       u12920 7790                                         u13480 24FC  
                                       u13720 2764                                         u13640 2622  
                                       u15320 5DAC                                         u13377 7622  
                                       u13481 24FA                               __end_of___lomod 65AA  
                                       u14337 7382                                         u14290 4116  
                                       u14530 3234                                         u13810 3FC0  
                                       u12930 7F38                                         u13490 250A  
                                       u13650 2658                                         u15330 5DB2  
                                       u15090 0D32                                         u13715 270E  
                                       u14700 1214                                         u14540 3256  
                                       u13820 3FC2                                         u13580 2E62  
                                       u13740 2786                                         u13660 265A  
                                       u14605 5132                                         u13581 2E60  
                                       u13741 2784                                         u14357 73CC  
                                       u15430 1D7E                                         u17110 218A  
                                       u13590 2E70                                         u13750 2794  
                                       u15350 89A8                                         u15190 0E24  
                                       u16230 69A8                                         u15327 5D9E  
                                       u15440 1D80                                         u15520 5ED8  
                                       u13760 279A                                         u13680 2692  
                                       u16080 2F32                                         u16160 5A0A  
                                       u14705 120A                                         u14465 543E  
                                       u14385 836C                                         u12937 7F2A  
                                       u15450 1D98                                         u14466 5440  
                                       u14386 836E                                         u17130 21BA  
                                       u12970 88A8                                         u13690 2694  
                                       u14810 4C3A                                         u15508 1DFA  
                                       u12980 88AA                                         u14820 4C64  
                                       u14900 0B38                                         u16180 6A56  
                                       u15470 1DC6                                         u14558 3298  
                                       u17070 211E                                         u13790 3EFA  
                                       u14910 0B68                                         u17207 4194  
                                       u14815 4C34                                         u16087 2F24  
                                       u16440 4E54                                         u13960 07B2  
                                       u14840 79FA                                         u17217 4286  
                                       u14817 4C26                                         u15490 1DF8  
                                       u15570 16B0                                         u17090 2150  
                                       u13970 07B4                                         u14770 4BCE  
                                       u14930 0B98                                         u14827 4C56  
                                       u14907 0B2A                                         u15468 1D9A  
                                       u15740 1910                                         u15660 17C0  
                                       u15580 16C6                                         u16380 4DB4  
                                       u13980 07C2                                         u14860 7A5A  
                                       u16620 0340                                         u15581 16C4  
                                       u14917 0B5A                                         u15670 17C2  
                                       u16358 361C                                         u15910 6652  
                                       u16630 0362                                __CFG_DEBUG$OFF 000000  
                                       u15488 1DC8                                         u15760 194C  
                                       u15680 1822                                         u14960 0BF2  
                                       u14880 0B08                                         u14777 4BC0  
                                       u15770 1962                                         u15690 1824  
                                       u17187 867A                                         u15860 65C8  
                                       u16820 5608                                         u17197 4176  
                                       u14990 0C34                                         u14967 0BE4  
                                       u14887 0AFA                                         u15960 28B4  
                                       u16920 3D42                               __end_of___lwdiv 7E02  
                                       u14997 0C26                                         u15990 32F4  
                                       _U1UIR 003DF8                                         _U1RXB 003DE8  
                                 computeFRF@i 002F                                         _U1TXB 003DEA  
                         ??_UART1_rx_vect_isr 0001                             ?_NWK_OpenEndpoint 0002  
                                       _OSCEN 0039DD                               __end_of_cmdAddr 8C96  
                                vfpfcnvrt@fmt 0048                                 strtoul@endptr 0036  
                                       _TMR0H 003FB7                                  vfpfcnvrt@llu 006D  
                                       _TMR0L 003FB6                               ?_NWK_RouteTable 0002  
                                       _TRISA 003FC2                                         _TRISB 003FC3  
                                       _TRISC 003FC4                                   _Default_ISR 90A8  
                             __end_of_cmdRecv 52D6                               __end_of_cmdSend 2A66  
                   ??_CRC_CalculatedResultGet 000B                              print_hop_table@i 005C  
           __size_of_TMR0_SetInterruptHandler 000E                           ___lmul@multiplicand 0006  
                   ?_TMR0_SetInterruptHandler 0002                            ??_NWK_OpenEndpoint 0004  
                            __end_of_TMR0_ISR 8C76                             _UART1_tx_vect_isr 8CD8  
                             __end_of_get_lqi 6DC8                                 __CFG_WRTB$OFF 000000  
                               __CFG_WRTC$OFF 000000                                 __CFG_WRTD$OFF 000000  
                    __end_of_NWK_RouteNextHop 8112                        cmdSetCADRSSI@atCommand 0058  
                             _DATAEE_ReadByte 8D54                           ?_implicitHeaderMode 0001  
                        __size_of_cmdSetNaddr 007C                              __end_of_PHY_Init 9090  
               nwkRouteSendRouteError@command 002F                         __end_of_Timer0Handler 7FE8  
                                       _flags 00B9                          __size_of_cmdSendSink 0002  
                   __size_of_CRC_ReverseValue 0058                                         _errno 0145  
                                       _fputc 7738                               __end_of_isalpha 8918  
                                       _fputs 842E                               __end_of_isdigit 894C  
                       ?_SYS_TimerTaskHandler 0001                                         _nwkIb 0100  
                            __end_of_NWK_Init 7DAC                            __CFG_MCLRE$EXTMCLR 000000  
                          ?_UART1_tx_vect_isr 0001                               __end_of_receive 8526  
                                       _srand 86FE                                         atoi@n 0016  
                                       pad@fp 0014                                         atoi@s 0009  
                                       _width 00B5                                         _putch 905E  
                                       dtoa@d 0021                                         dtoa@i 0041  
                                       dtoa@n 0039                                         dtoa@p 0033  
                                       dtoa@s 0037                                         dtoa@w 0035  
                             __end_of_islower 88B0                               __end_of_isspace 81E2  
                        __size_of_appDataConf 0022                               __end_of_isupper 88E4  
                                       pclath 003FFA                                         tablat 003FF5  
                            _nwkTxTaskHandler 34A2                             nwkRxSendAck@frame 002A  
                                       plusw1 003FE3                                         plusw2 003FDB  
                         nwkDataReqTxConf@req 0008                                         utoa@d 0021  
                                       utoa@i 003D                                         utoa@n 0035  
                                       utoa@p 0031                                         utoa@w 0033  
                 nwkTxConvertPhyStatus@status 0004                                         status 003FD8  
         __end_of_UART1_SetRxInterruptHandler 8FEE                   _UART1_SetRxInterruptHandler 8FE0  
                __size_of_nwkRxServiceDataInd 006C                                         xtoa@c 0044  
                                       xtoa@d 0021                                         xtoa@i 0042  
                                       xtoa@n 003A                                         xtoa@p 0036  
                                       xtoa@w 0038                                         xtoa@x 0029  
             nwkTxAckWaitTimerHandler@restart 0016                               __end_of_strcspn 7A68  
                             __end_of_strncmp 4C84                               __end_of_toupper 7EFC  
                            ___lodiv@dividend 0002      __end_of_UART1_DefaultFramingErrorHandler 90AE  
   __size_of_UART1_DefaultFramingErrorHandler 0002            ??_UART1_DefaultFramingErrorHandler 0001  
           ?_UART1_DefaultFramingErrorHandler 0001              _UART1_DefaultFramingErrorHandler 90AC  
                             __end_of_strtoul 8158                       SX1276WriteBuffer@buffer 0009  
                         ??_UART1_tx_vect_isr 0001                              __end_of_SYS_Init 8FD2  
                   __end_of_UART1_rx_vect_isr 8D18                      __size_of_SPI1_Initialize 001A  
                  __size_of_setPreambleLength 001A                                nwkFrameAlloc@i 0012  
                                _toupper$8027 000E                             nwkTxConfirm@frame 0002  
                             ?_setCodingRate4 0001                               __initialization 5DBC  
                  __end_of_NWK_RouteFindEntry 78E4                          ??_implicitHeaderMode 0011  
                                __end_of_cmdI 9084                                  __end_of_idle 9032  
                                __end_of_atoi 4006                                  __end_of_main 8A80  
                                __end_of_dtoa 2584                                  __end_of_rand 4FC6  
                           nwkFrameNext@frame 0002                   SYS_TimerTaskHandler@elapsed 001E  
                                __end_of_utoa 2EAC                                  __end_of_xtoa 2804  
                              __CFG_SAFEN$OFF 000000                   ??_UART1_DefaultErrorHandler 0001  
                       ??_CircularBufferEmpty 0004                               ?_SYS_TimerStart 0010  
                         __size_of_SX1276Read 0016                         ??_CircularBufferSpace 000C  
                             cmdSend@destaddr 007F                    __end_of_NWK_RouteFreeEntry 87DA  
                            _need_radio_reset 00D3                              ??_CRC_Initialize 0002  
                                ?_UART1_Write 0001                                _free_tx_buffer 82EE  
                                      ??_cmdI 0058                             cmdSetSF@atCommand 0058  
                                      ??_idle 0011                                        ??_atoi 000B  
                                      ??_main 005E                                        ??_dtoa 0029  
                                      ??_rand 001C                                __CFG_PR1WAY$ON 000000  
                                      ??_utoa 0029                                        ??_xtoa 002A  
                    ??_CircularBufferPopFront 0016                                 __activetblptr 000003  
                 __size_of_getSignalBandwidth 0122                   __size_of_setSignalBandwidth 03C6  
        __size_of_UART1_SetTxInterruptHandler 000E                           executeATCommand@cmd 00A9  
                   __end_of_UART1_tx_vect_isr 8CF8                                __CFG_MVECEN$ON 000000  
                  __end_of_nwkRxIndicateFrame 32AA                               ??_queueLedEvent 001E  
                         computeFRF@frequency 0023                              ___lodiv@quotient 0012  
                    __end_of_executeATCommand 062E                           CRC_ReverseValue@crc 0002  
                            _UART1_Initialize 6BE6                      ??_CircularBufferPushBack 0016  
                              _nwkDataReqInit 903E                         queueLedEvent@duration 001C  
                DIO0_Receive_ISR@packetLength 0044                           NWK_RouteNextHop@dst 0008  
                           ??_start_radio_cad 0011                           _bootLoadApplication 201A  
                __end_of_nwkRxRejectDuplicate 2C98                  __size_of_nwkDataReqSendFrame 0332  
                                      ?_fputc 0004                              ___llmod@dividend 0002  
                                      STR_100 FF76                                        STR_101 FF76  
                                      STR_110 FF52                                        STR_102 FF17  
                                      ?_fputs 000D                                        STR_103 FF17  
                                      STR_111 FF52                                        STR_104 FFF9  
                                      STR_120 FF68                                        STR_112 FF42  
                                      STR_121 FF68                                        STR_113 FF42  
                                      STR_105 FFF9                                        STR_122 FFEF  
                                      STR_106 FFB3                                        STR_114 FF20  
                                      STR_130 FEFA                                        STR_115 FF20  
                                      STR_107 FFB3                                        STR_131 FEFA  
                                      STR_123 FFEF                                        STR_116 FFCB  
                                      STR_124 FF99                                        STR_108 FF7D  
                                      STR_132 FEE6                                        STR_133 FEE6  
                                      STR_109 FF7D                                        STR_125 FF99  
                                      STR_117 FFCB                                        STR_134 FEC5  
                                      STR_126 FFB9                                        STR_118 FF84  
                                      STR_119 FF84                                        STR_127 FFB9  
                                      STR_135 FEB9                                        STR_128 FFAD  
                                      STR_136 FDF7                                        STR_129 FFAD  
                                      STR_137 FDDB                                        STR_138 FF3A  
                                      STR_139 FFD1                               cmdSend@tempaddr 0084  
                                      ?_srand 0002                                        _ANSELA 003A40  
                                      ?_putch 0001                                        _ANSELB 003A50  
                                      _ANSELC 003A60                                        _T0CON0 003FB8  
                                      _T0CON1 003FB9                         __end_of_nwkFrameAlloc 6884  
                                      _RB1I2C 003A5A                                        _RB2I2C 003A5B  
                            _processATCommand 3D20                                        _U1CON0 003DF2  
                    nwkRxHandleIndication@ack 003F                                        _U1CON1 003DF3  
                                      _U1CON2 003DF4                                        _RC3I2C 003A6A  
                                      _RC4I2C 003A6B                           __size_of_UART1_Read 0042  
                                      _U1BRGH 003DF6                                        _U1FIFO 003DF7  
                                      _U1BRGL 003DF5                                        _RB0PPS 003A08  
                          __CFG_PWRTS$PWRT_64 000000                                        _RC0PPS 003A10  
                                      _RC1PPS 003A11                                        i1l1049 7FE2  
                                      _ODCONA 003A42                                        _ODCONB 003A52  
                                      _ODCONC 003A62                                        _RC7PPS 003A17  
                              __CFG_WDTCCS$SC 000000                                  loadMACAddr@i 0006  
                                      _INLVLA 003A44                                        _INLVLB 003A54  
                                      _INLVLC 003A64                                        _INLVLE 003A84  
                                      _TABLAT 003FF5                             ?_nwkDataReqTxConf 0004  
                                      _OSCFRQ 0039DF                                 vfpfcnvrt@done 0069  
                            __end_of_cmdBcast 34A2                                        _NVMDAT 0039E3  
                            __end_of_cmdGetSF 8E8C                              __end_of_cmdGetTX 8E74  
                       _UART1_SetErrorHandler 900A                              __end_of_cmdNaddr 8E5C  
                              placeTimer@prev 000C                                  ?_setSyncWord 0001  
                            __end_of___xxtofl 416A                              __end_of_cmdSetSF 69E4  
                            __end_of_cmdSetTX 5A4A                            ??_nwkDataReqTxConf 0006  
                            __end_of_cmdReset 909A                            PHY_DataConf@status 0005  
                            set_parity@parity 0004                    __size_of_SPI1_ExchangeByte 001A  
                              __CFG_XINST$OFF 000000                                  ___strtoxl@cp 0031  
                                vfprintf@cfmt 0053                                 ?_radio_engine 0001  
                                ?_PHY_DataInd 0013                                  ?_PHY_DataReq 0011  
                        ?_bootLoadApplication 0001                                        ___flge 6038  
                            __end_of_get_rssi 8A04                              __end_of_fhssList FDA7  
                                      ___lmul 7BE6                                        ___omul 6DC8  
                                   ??___aodiv 0012                                     ??___fladd 0031  
                                   ??___aomod 0012                                        ___wmul 89AC  
                                      _cmdMac 8034                                __CFG_STVREN$ON 000000  
                                   ??___flmul 0018                                     ??___fltol 003D  
                                      _crcObj 00EC                                     ??___lldiv 001E  
                                   ??___lodiv 0012                                     ??___llmod 000A  
                      __end_of_free_tx_buffer 8330                                     ??___lomod 0012  
                                   ??___lwdiv 0006                         __size_of_cmdSetParity 008C  
                                   ??_cmdAddr 0058                                        _memcpy 75EC  
                            ?_TMR0_Initialize 0001                      __end_of_nwkRxTaskHandler 6B3E  
                                      _memset 4420                                     ??_cmdRecv 0058  
                                   ??_cmdSend 005A                              ___strtoxl@endptr 0012  
                                      clear_0 5E2A                                        clear_1 5E3C  
                                      clear_2 5E48                                        clear_3 5E54  
                                      clear_4 5E60                                        clear_5 5E6C  
                                      clear_6 5E78                              setCodingRate4@cr 0012  
                   CircularBufferPushBack@ctx 0013                     CircularBufferPushBack@val 0015  
               DATAEE_ReadByte_Platform@copy1 000A                 DATAEE_ReadByte_Platform@copy2 0009  
               DATAEE_ReadByte_Platform@copy3 0008                                        _timers 00BB  
                                      _printf 8B88                                        pad@buf 0016  
           __size_of_nwkTxAckWaitTimerHandler 0090                    __size_of_NWK_GroupIsMember 0032  
             __size_of_nwkRouteSendRouteError 00E0                              ?_SYS_TaskHandler 0001  
                                      dtoa@fp 001F                                        _strchr 7366  
                   ?_nwkTxAckWaitTimerHandler 0012                       __end_of_DATAEE_ReadByte 8D72  
                                   ??_get_lqi 0043                              ___strtoxl@prev_a 001B  
                            __end_of_sendInfo 7AC8                                        _strlen 7EFC  
                                      _strtok 5C08                                        _strspn 79A8  
                                      _strtol 83F0                                        _strstr 5CE4  
                               cmdSetAES@byte 00A5                __size_of_nwkTxConvertPhyStatus 0038  
                               cmdSetAES@temp 00A1                 __end_of_nwkTxConvertPhyStatus 86FE  
                                      fputc@c 0004                                _PMD_Initialize 8C32  
                                      fputs@c 0011                                        fputs@i 0012  
                                __packetIndex 00D6                                        fputs@s 000D  
                                   ??_isalpha 0004                                     ??_isdigit 0004  
                      __end_of_nwkDataReqInit 904A                __size_of_nwkRouteFrameReceived 01E2  
                                   ??_receive 0011                 __end_of_nwkRouteFrameReceived 3876  
                     _setSpreadingFactor$8781 0027                                     ??_islower 0004  
                                __mediumconst FCAA                                     ??_isspace 0004  
                                      tblptrh 003FF7                                     ??_isupper 0004  
                                      tblptrl 003FF6                                        tblptru 003FF8  
                 __end_ofNWK_LinearizeLqi@val FDB0                                        srand@s 0002  
                      ??_SYS_TimerTaskHandler 0019                                  ?_NWK_DataReq 0002  
                        __size_of_loadMACAddr 003C                         __end_of_TMR0_CallBack 8CD6  
                            __end_of_vfprintf 7B28                                        utoa@fp 001F  
                        processATCommand@data 00B0   UART1_SetTxInterruptHandler@InterruptHandler 0002  
 UART1_SetRxInterruptHandler@InterruptHandler 0002      TMR0_SetInterruptHandler@InterruptHandler 0002  
        __end_of_UART1_SetOverrunErrorHandler 8FFC         __size_of_UART1_SetOverrunErrorHandler 000E  
                _UART1_SetOverrunErrorHandler 8FEE                                 _curent_parity 00E0  
                   _UART1_DefaultErrorHandler 9090                                        xtoa@fp 001F  
                                   ??_strcspn 000C                                     ??_strncmp 0008  
                                   ??_toupper 000A                                     ??_strtoul 003A  
               __size_of_INTERRUPT_Initialize 0040                  __size_of_UART1_RxDataHandler 0024  
                                  ___flge@ff1 0010                                    ___flge@ff2 0014  
                               cmdSetRFCH@cmd 0058                       ??_nwkRouteErrorReceived 000E  
                                ___xxtofl@arg 000C                                  ___xxtofl@exp 000B  
                           _SYSTEM_Initialize 8C10                            _get_free_rx_buffer 7946  
                                ___xxtofl@val 0002                                 cmdSetSF@CHstr 0081  
                            PHY_SetRxState@rx 0001                                    __accesstop 0060  
                        cmdGetRxCnt@atCommand 0058                       __end_of__initialization 5E8C  
                                ?_NWK_SetAddr 0004                               SX1276Write@addr 0010  
                    __size_of_SPI1_WriteBlock 0036                          bootLoadApplication@i 0036  
                             SX1276Write@data 000F                                _SPI1_ReadBlock 8736  
                          __size_of_crc16_app 0084                         __size_of_DIA_ReadByte 0022  
                          ?_SYSTEM_Initialize 0001                            _get_free_tx_buffer 78E4  
                          _getSpreadingFactor 8DDC                                    _cadCounter 00D4  
                           ?_nwkTxAckReceived 0008                            _setSpreadingFactor 50D4  
                               ___rparam_used 000001                    __size_of_UART1_rx_vect_isr 0020  
                                  ___fltol@f1 0039                               _PHY_TaskHandler 9084  
                                _cmdSetParity 70B2                                 cmdRecv@buf_id 005B  
                    ??_queue_serial_led_event 0022                       SYS_TimerTaskHandler@cnt 001D  
                         ?_get_free_rx_buffer 0002                                ??_radio_engine 004B  
                          ??_nwkTxAckReceived 0009              __end_of_nwkRxHandleReceivedFrame 19A0  
                       ??_bootLoadApplication 0030                            __size_of_cmdGetCAD 0018  
                                  _cadTimeOut 00F3                                __pcstackCOMRAM 0001  
                          CRC_Initialize@seed 0005                            __size_of_cmdGetTTL 0002  
                          __size_of___strtoxl 042E                            CRC_Initialize@poly 0003  
                    __end_of_SX1276ReadBuffer 8AD0                                 cmdSetTX@CHstr 0084  
                __size_of_nwkFrameCommandInit 0040                        __size_of_cmdGetCADRSSI 001A  
                               cmdSetAddr@cmd 0058                                  __pidataBANK0 9077  
                                __pidataBANK1 9070                                  __pidataBANK2 904A  
                          nwkTxConfirm@status 0004                           ??_SYSTEM_Initialize 0007  
                         ?_get_free_tx_buffer 0002                           ?_getSpreadingFactor 000F  
                                 placeTimer@t 000E                CircularBufferInit@element_size 000F  
                                   ?_TMR0_ISR 0001                            __size_of_cmdSetAES 0200  
                         ?_setSpreadingFactor 0001                nwkRxHandleReceivedFrame@header 0031  
                          __size_of_cmdSetTTL 0002                              _DATAEE_WriteByte 8330  
                              ivt0x8_undefint 00AC                               ?_free_tx_buffer 0002  
                           PHY_SetPanId@panId 0002                            __size_of_cmdRstCAD 0014  
                                   ?_PHY_Init 0001                                 __end_of_fputc 77A4  
                               cmdSetBaud@ptr 003D                                 __end_of_fputs 846C  
                           ??_SPI1_Initialize 0002                      nwkRxIndicateFrame@header 002D  
              nwkRxHandleReceivedFrame@member 002E                                 __end_of_srand 8736  
                               __end_of_putch 9068                         SX1276WriteBuffer@addr 000B  
                  ??_DATAEE_ReadByte_Platform 0008                                     ?_NWK_Init 0001  
                                 receive@size 0011                       _rx_buffer_queue_context 01D8  
        __size_ofnwkFrame@nwkFramePayloadSize 002A                         SX1276WriteBuffer@size 000A  
                      __end_of_PMD_Initialize 8C54                         SPI1_ExchangeByte@data 0002  
                               cmdSend@buf_id 008A                      nwkDataReqTaskHandler@req 0033  
                          _spi1_configuration FDB0                            __size_of_enableCrc 0012  
              __size_of_nwkDataReqTaskHandler 0082               __size_of_CircularBufferPopFront 00FC  
                  __size_of_UART1_tx_vect_isr 0020                             ?_DIO0_Receive_ISR 0001  
               __end_of_nwkDataReqTaskHandler 74F0                              ??_get_timer0base 0004  
                        __size_of_SX1276Write 0012                               ?_nwkDataReqInit 0001  
                               cmdSetNaddr@p1 0081                                 cmdSetNaddr@p2 007F  
                        ??_get_free_rx_buffer 0003                                  crc16_app@len 0015  
                                crc16_app@ptr 001B                                     ?_SYS_Init 0001  
                              _nwkFrameFrames 05BD                     _UART1_FramingErrorHandler 01EA  
                                  _cmdGetRFCH 8D72                            ??_DIO0_Receive_ISR 0044  
             __size_of_CircularBufferPushBack 00F4                         __end_of_set_uart_baud 61D6  
                                  _cmdGetMode 8F6A                                  _DIA_ReadByte 8BAA  
                        ??_get_free_tx_buffer 0003                          ??_getSpreadingFactor 0013  
                            _CRC_ReverseValue 7CFC                                  ??_SX1276Read 000D  
                        ??_setSpreadingFactor 0023                                       ??_fputc 0008  
                   __end_of_SYSTEM_Initialize 8C32                                       ??_fputs 0011  
                    __end_of_SYS_TimerStarted 826A                               __CFG_IVT1WAY$ON 000000  
                                     ??_srand 0004                                       ??_putch 0003  
                                  _cmdSetRFCH 6C8A                                 ?_setFrequency 0023  
                      __end_of_SPI1_ReadBlock 876E                                    __pbssBANK0 00B1  
                                  __pbssBANK1 0100                                    __pbssBANK2 0200  
                                  __pbssBANK3 0300                                    __pbssBANK4 0400  
                                  __pbssBANK5 0500                                    _cmdSetAddr 6F90  
                                  _cmdSetBaud 76CC                 ?_UART1_SetOverrunErrorHandler 0002  
                      ?_UART1_SetErrorHandler 0002                                    _cmdSetSink 8F4A  
                       __end_of_nwkRouteFrame 5F68                        _nwkRouteSendRouteError 5A4A  
                                  _appDataInd 6884                            __size_of_initRadio 015E  
                                  crc16_app@i 001D                  __size_of_nwkTxBroadcastFrame 0144  
                                  _atStateVar 00D8                   nwkTxBroadcastFrame@newFrame 0027  
                                     IVTBASEH 003FD6                                       IVTBASEL 003FD5  
                                     IVTBASEU 003FD7                          CRC_ReverseValue@mask 0007  
                             setTxPower@power 0011                       setPreambleLength@length 0011  
                                     ?___flge 0010              __end_of_TMR0_SetInterruptHandler 9026  
                                     ?___lmul 0002                            _explicitHeaderMode 8EBC  
                                     ?___omul 0002                                  ??_UART1_Read 0002  
                    __size_of_print_hop_table 00E2                                       ?___wmul 0002  
                             _nwkDataReqQueue 00BF                                       ?_cmdMac 0001  
                                  ??_TMR0_ISR 0001                               __CFG_PPS1WAY$ON 000000  
                          NWK_OpenEndpoint@id 0004                          _nwkRxRejectDuplicate 2A66  
                           _nwkDataReqConfirm 57A0                       __size_of_set_timer0base 001A  
                                  ??_PHY_Init 003A                     __size_of_PHY_SetShortAddr 0002  
                         nwkTxAckReceived@ind 0008                              ??_NWK_RouteTable 0004  
                                     ?_memcpy 0008                                       ?_memset 0002  
              __size_of_nwkRxHandleIndication 00C4                           ___omul@multiplicand 000A  
                              ___lmul@product 000A                                    ??_NWK_Init 0006  
                          __end_of_SX1276Read 8F02                             _SX1276WriteBuffer 8B40  
               __end_of_nwkRxHandleIndication 642C                      __end_of_nwkTxTaskHandler 3694  
                          ?_nwkDataReqConfirm 0009                                       _CRCACCH 003963  
                                     _CRCACCL 003962                                       ?_printf 0075  
                             ?_PMD_Initialize 0001                                       _CRCDATH 003961  
                                     _CRCDATL 003960                             _UART1_Receive_ISR 6E62  
                                     _CRCCON0 003968                                       _CRCCON1 003969  
                          __size_of_nwkRxInit 004C                           _nwkRxServiceDataInd 77A4  
                          __size_of_nwkTxInit 0046                                       ?_strchr 0002  
                         ?_explicitHeaderMode 0001                                       ?_strlen 0002  
                                     ?_strtok 000F                                       ?_strtol 0034  
                                     ?_strspn 0008                                       ?_strstr 000D  
                                     _CRCXORH 003967                                       _CRCXORL 003966  
                            ?_DATAEE_ReadByte 0002                             __end_of_crc16_app 746E  
                               ?_nwkFrameFree 0002                            ?_SX1276WriteBuffer 0009  
                               ?_nwkFrameInit 0001                                       _U1ERRIE 003DFA  
                                     _U1ERRIR 003DF9                                 ?_nwkFrameNext 0002  
                                   ?_cmdBcast 0058                                       i1l13100 7FAA  
                                     i1l13112 7FD4                                       i1l13104 7FB8  
                                     i1l13108 7FC6                                     ?_cmdGetSF 0001  
                                   ?_cmdGetTX 0001                             _CRC_8BitDataWrite 8F7A  
                                     i2l12414 8B82                                       i2l13520 6EF4  
                                ?_Default_ISR 0001                          __size_of_UART1_Write 0042  
                                     i2l13496 886E                                       i2l13498 8872  
                                   ?_cmdNaddr 0001                            ?_UART1_Receive_ISR 0001  
                                     _U1RXPPS 003AE5                                     ?_cmdSetSF 0058  
                                   ?___xxtofl 0002                                     ?_cmdSetTX 0058  
                               computeFRF@num 002B                                     ?_cmdReset 0001  
                               appDataInd@ind 001C                                    ??_SYS_Init 003A  
                                     _OSCCON1 0039D9                                       _OSCCON3 0039DB  
                     nwkRouteNormalizeRanks@i 0003                           ??_nwkDataReqConfirm 000B  
                                     _IVTLOCK 003FD4                            __size_of_vfpfcnvrt 048C  
                                     _TBLPTRH 003FF7                                       _TBLPTRL 003FF6  
                          ?_CRC_8BitDataWrite 0001                                       _SPI1CLK 003D1C  
                                     _TBLPTRU 003FF8                      print_hop_table@atCommand 0058  
                                     _SPI1RXB 003D10                                       _NVMADRH 0039E1  
                                     _NVMADRL 0039E0                                       _SPI1TXB 003D11  
                                     _OSCTUNE 0039DE                                       _NVMCON2 0039E6  
                           __end_of_cmdGetCAD 8EA4                                       _SLRCONA 003A43  
                                     _SLRCONB 003A53                                       _SLRCONC 003A63  
                               _cmdGetCADRSSI 8D8E                             __end_of_cmdGetTTL 90A0  
                           __end_of___strtoxl 0EE8            __size_of_DATAEE_WriteByte_Platform 0044  
                           ?_NWK_RouteNextHop 0008                           ??_SX1276WriteBuffer 000B  
                      __size_of_cmdSetCADRSSI 00AE                                    cmdBcast@p1 007F  
                              ??_setFrequency 0027                    ?_DATAEE_WriteByte_Platform 0006  
                           __end_of_cmdSetAES 30AC                           ??_UART1_Receive_ISR 0001  
                                   ?_get_rssi 0001                               placeTimer@timer 0002  
                     __end_of_PHY_TaskHandler 908A                              ___lomod@dividend 0002  
                           __end_of_cmdSetTTL 909C                         nwkTxAckReceived@frame 000D  
                           __end_of_cmdRstCAD 8F16                               ?_SPI1_ReadBlock 0003  
                             crc16_app@result 0019                            ??_NWK_RouteNextHop 000B  
                                  _computeFRF 3A16                            __end_of_UART1_Read 82EE  
                                   NWK_Init@i 0006                                 ?_nwkGroupInit 0001  
                         ??_CRC_8BitDataWrite 0002                       __size_of_nwkRouteRemove 003C  
                        DATAEE_WriteByte@bAdd 0002                              ??_setCodingRate4 0011  
                        ?_nwkRxServiceDataInd 001C                          ??_explicitHeaderMode 0011  
                                     _TXPower 00CC                     __size_of_NWK_OpenEndpoint 0020  
                      _CircularBufferPopFront 52D6                     INTERRUPT_Initialize@state 0002  
                           __end_of_enableCrc 8F28                                    _dwellTimer 00CB  
                                   ?_sendInfo 0001                                    _packetRSSI 00D1  
                                     __Hparam 0000                              ??_SYS_TimerStart 0012  
             __size_of_queue_serial_led_event 0054                          __size_of_setSyncWord 0010  
                                     __Lparam 0000                      __end_of_UART1_Initialize 6C8A  
                      _CircularBufferPushBack 54CE                     __end_of_nwkDataReqConfirm 5888  
                  __CFG_RSTOSC$HFINTOSC_64MHZ 000000                             ??_SPI1_WriteBlock 0007  
                               ??_cmdGetRxCnt 005A                                    cmdSetAES@i 00A8  
                               ?_PHY_DataConf 0001                                 ?_nwkRxSendAck 002A  
                               ?_nwkTxConfirm 0002                                       cad@RSSI 0012  
                         _nwkDataReqSendFrame 1CE8                                 ??_cmdBootLoad 0058  
                             __size_of___flge 00D0                         ?_nwkRxRejectDuplicate 0012  
                                     ___aodiv 42C8                                       ___fladd 19A0  
                                     ___aomod 46B8                           nwkRouteRemove@entry 000B  
                    __size_of_NWK_TaskHandler 000E                                       _cadDone 00D5  
                   __end_of_SX1276WriteBuffer 8B64                   __size_of_CircularBufferInit 00B6  
                                  cmdSetSF@p1 007F                               __size_of___lmul 005E  
                                  cmdSetSF@p2 0084                               __size_of___omul 009A  
                                     ___flmul 12AE                                       ___fltol 61D6  
                 __size_of_CircularBufferSize 005E                                       ___lldiv 7254  
                             __size_of___wmul 002E                                       ___lodiv 5B2A  
                                     ___llmod 765E                               __size_of_cmdMac 004A  
                      __size_of_SYS_TimerInit 000C                                       ___lomod 64EC  
                                  cmdSetTX@p1 0081                                    cmdSetTX@p2 007F  
                                     ___lwdiv 7DAC                         nwkRxIndicateFrame@ind 002F  
                   __end_of_UART1_Receive_ISR 6EFA                                     ?_vfprintf 004E  
                                  cmdSend@cmd 0058                                       cad@temp 0014  
                        __size_of_PHY_DataInd 012C                      __end_of_processATCommand 3E96  
                        __size_of_PHY_DataReq 005C                                       _cmdAddr 8C76  
                           cmdSetCADRSSI@temp 0086                                       _aes_key 0234  
                                     _cmdRecv 51D6                                    _current_sf 00CF  
                             _start_radio_cad 8F8A                                       _cmdSend 2804  
                                     _channel 00CE                                       __pcinit 5DBC  
                             __size_of_memcpy 0072                               __size_of_memset 0154  
                                     __ramtop 1000                     __end_of_CRC_8BitDataWrite 8F8A  
                 __size_of_UART1_Transmit_ISR 0036                       __size_of_PHY_SetChannel 003E  
                              ??_nwkFrameFree 0004                                       __ptext0 8A58  
                                     __ptext1 3D20                                       __ptext2 7E02  
                                     __ptext3 8618                                       __ptext4 876E  
                                     __ptext5 7B88                                       __ptext6 00B2  
                                     __ptext7 8F3A                                       __ptext8 5888  
                                     __ptext9 9054                                ??_nwkFrameInit 0002  
                              ??_nwkFrameNext 0004                               __size_of_printf 0022  
                                     _get_lqi 6D2A                      SPI1_WriteBlock@blockSize 0005  
                                     _fhssReg 0500                             __end_of_initRadio 42C8  
                                     cmdMac@i 0059                               __CFG_WRTAPP$OFF 000000  
                             __size_of_strchr 0084                               __size_of_strlen 0050  
                                  ??_cmdBcast 005A                               __size_of_strtok 00DC  
                             __size_of_strspn 0060                               __size_of_strtol 003E  
                             __size_of_strstr 00D8                                    ??_cmdGetSF 0058  
                                  ??_cmdGetTX 0058                         _OSCILLATOR_Initialize 8ED4  
                               ?_nwkRouteInit 0001                                 ??_cmdSetNaddr 005A  
                                __size_of_cad 00BA                                  __size_of_abs 003E  
                                  ??_cmdNaddr 0058                                    _placeTimer 3876  
                                __size_of_pad 00B6                                       _isalpha 88E4  
                                     _isdigit 8918                                 ??_cmdSendSink 0004  
                                  ??_cmdSetSF 005A                                    ??___xxtofl 0006  
                          _NWK_RouteFindEntry 787C                                       _net_key 0224  
                                  ??_cmdSetTX 005A                                       _receive 84E8  
                                  ??_cmdReset 0002                      nwkFrameCommandInit@frame 0002  
        ??strspn@nwkFrame@nwkFramePayloadSize 0004           ?strspn@nwkFrame@nwkFramePayloadSize 0002  
                             _radio_state_var 00CA                                       _islower 887C  
                    ??_PIN_MANAGER_Initialize 0002                                       _isspace 819E  
                             __CFG_WRTSAF$OFF 000000                                   ?_cmdGetRFCH 0001  
                                     _isupper 88B0                                ?_cmdGetCADRSSI 0001  
                           ?_executeATCommand 00A9                                 ??_appDataConf 0009  
           __size_of_nwkRxHandleReceivedFrame 036E                          __end_of_radio_engine 4EB8  
                                 ?_cmdGetMode 0001                     ?_nwkRxHandleReceivedFrame 0029  
                                     _uartmsg 0138                                       atoi@neg 000F  
                        ?_nwkDataReqSendFrame 002A                                 ?_PHY_SetPanId 0002  
                          _NWK_RouteFreeEntry 87A4                       __size_of_PHY_SetRxState 0008  
                                     _tx_done 00DA                    __size_of_SYSTEM_Initialize 0022  
                          ??_executeATCommand 00AB                                       _strcspn 7A08  
                                     _strncmp 4B64                                       _toupper 7EAA  
                                  ??_get_rssi 0002                           SYS_TimerStart@timer 0010  
                        end_of_initialization 5E8C                           ?_NWK_RouteFindEntry 0002  
                                     _strtoul 8112                                   ?_cmdSetRFCH 0058  
                                   _SCANHADRH 00397A                                     _SCANHADRL 003979  
                                   _SCANHADRU 00397B                           __implicitHeaderMode 00D7  
                              ??_nwkGroupInit 0002                          __size_of_NWK_DataReq 0080  
           __end_of_DATAEE_WriteByte_Platform 8226                                   ?_cmdSetAddr 0058  
                                   _SCANLADRH 003977                                     _SCANLADRL 003976  
                                 ?_cmdSetBaud 003A                                     _SCANLADRU 003978  
        nwkRxDuplicateRejectionTimerHandler@i 0015                                   ?_cmdSetSink 0001  
                           queueLedEvent@temp 001F                                ___omul@product 0012  
                       ??_nwkRxServiceDataInd 001D                                       memcpy@d 000F  
                                     memcpy@n 000C                                       memcpy@s 0011  
                                     fputc@fp 0006                                   ?_appDataInd 001C  
                                     memset@c 0004                                       memset@k 000A  
                                     memset@n 0006                                       memset@s 000C  
         __end_of_UART1_SetTxInterruptHandler 8FE0                   _UART1_SetTxInterruptHandler 8FD2  
                                     fputs@fp 000F                                     i1u1273_28 8CC4  
                 CRC_CalculatedResultGet@mask 000E                           ?_NWK_RouteFreeEntry 0002  
                           __end_of_nwkRxInit 8034                            _nwkRxIndicateFrame 30AC  
                 nwkTxDelayTimerHandler@frame 0017                             __end_of_nwkTxInit 819E  
                                  _setTxPower 8A2E                                     i2u1281_48 6EE0  
                                   i2u1283_48 8CE6                         NWK_RouteNewEntry@iter 0007  
                         nwkRxSendAck@command 002C                   nwkTxDelayTimerHandler@timer 0012  
                                   i2u1277_48 6E8C                                     i2u1285_48 8D06  
                                   i2u1277_49 6E9E                                     i2u1279_48 6EB8  
                                   i2u1279_49 6ECA                                    ??_sendInfo 0058  
                        __size_of_NWK_SetAddr 001E                ??_UART1_SetOverrunErrorHandler 0004  
                             ___lldiv@divisor 001A                   __end_of_CircularBufferEmpty 89AC  
                             ___lldiv@counter 0022                   __end_of_CircularBufferSpace 87A4  
               bootLoadApplication@buf_id_954 0033                                ??_PHY_DataConf 0005  
                              ??_nwkRxSendAck 002C                                ??_nwkTxConfirm 0005  
                    ??_nwkRouteNormalizeRanks 0002                             __end_of_vfpfcnvrt 0ABA  
                                  _nwkTxFrame 3BA0                                    _set_parity 7B28  
                                   _SPI1TCNTL 003D12                           ?_nwkRxIndicateFrame 0021  
                 __size_of_implicitHeaderMode 0018                                       postdec1 003FE5  
                                     postdec2 003FDD                                     _SPI1SSPPS 003AE0  
                               _cmdSetCADRSSI 69E4                                       postinc0 003FEE  
                                     postinc1 003FE6                                       postinc2 003FDE  
                       nwkDataReqTxConf@frame 0004                          ??_NWK_RouteFindEntry 0005  
                      __size_of_Timer0Handler 004E                                    ??_vfprintf 0053  
                   __size_of_nwkDataReqTxConf 00A8                                       strchr@c 0004  
                           UART1_Write@txData 0002                           _UART1_RxDataHandler 8B64  
                                     strchr@s 0002                         __CFG_WDTCPS$WDTCPS_31 000000  
                  __end_of_getSignalBandwidth 4B64                                       strlen@a 0004  
                           initRadio@wideRSSI 0038                    __end_of_setSignalBandwidth 12AE  
                                     strlen@s 0002                         nwkTxTaskHandler@frame 0016  
                    ?_CRC_CalculatedResultGet 0009                             ?_nwkRxTaskHandler 0001  
                  nwkRxHandleIndication@frame 003B                                       strspn@c 000A  
                                     strspn@i 000D                                       strtok@p 00B1  
                                     strtok@s 000F                                       strtol@s 0034  
                                     strspn@s 0008                                       strstr@h 000D  
                    _TMR0_SetInterruptHandler 9018                                       strstr@n 000F  
                                   _PORTBbits 003FCB                          ??_NWK_RouteFreeEntry 0004  
                         __end_of_cmdGetRxCnt 80C8                                ??_nwkRouteInit 0002  
                           ??_print_hop_table 007F                           __end_of_cmdBootLoad 868C  
                          ??_nwkRxTaskHandler 0040                                    _test_timer 01F7  
                                 ___fladd@grs 0038                        _queue_serial_led_event 7E02  
                              cmdSetRFCH@temp 0086                         setFrequency@frequency 0023  
                               ___xxtofl@sign 000A                           SPI1_ReadBlock@block 0003  
                                   _TRISBbits 003FC3                                ??_PHY_SetPanId 0004  
                       ??_nwkDataReqSendFrame 002C                                  strtol@endptr 0035  
                       __end_of_queueLedEvent 8652                          ??_nwkRxIndicateFrame 0023  
                         _nwkFrameCommandInit 8370                                 ?_NWK_SetPanId 0004  
                           placeTimer@timeout 0008                         nwkRxRejectDuplicate@i 0019  
                     nwkTxAckReceived@command 000B                                 _SYS_TimerInit 9032  
                            __CFG_FEXTOSC$OFF 000000                      __end_of_DATAEE_WriteByte 8370  
                         __end_of_cmdSetNaddr 75EC                          ?_UART1_RxDataHandler 0001  
                            ?_PHY_TaskHandler 0001                           __end_of_cmdSendSink 909E  
                              PHY_DataInd@ind 0013                     NWK_RouteNextHop@multicast 000A  
                                 ?_computeFRF 0001                         CircularBufferInit@buf 000B  
                       CircularBufferInit@ctx 0009                                   ___flmul@grs 001E  
                     _nwkRxIndicateFrame$5300 0029                       _nwkRxIndicateFrame$5301 002A  
                     _nwkRxIndicateFrame$5302 002B                       _nwkRxIndicateFrame$5303 002C  
                     _nwkRxIndicateFrame$5298 0027                       _nwkRxIndicateFrame$5299 0028  
                         __end_of_appDataConf 8BEE                __size_of_nwkRouteErrorReceived 005C  
                       setSignalBandwidth@sbw 0023                               _SPI1_Initialize 8E2A  
               __end_of_nwkRouteErrorReceived 7CFC                          print_hop_table@entry 005A  
                            ??_free_tx_buffer 0004                             _nwkTxAckWaitTimer 01A8  
                           get_rssi@temp_rssi 0003                      ??_nwkTxDelayTimerHandler 0014  
                     __end_of_start_radio_cad 8F9A                        ??_nwkRxRejectDuplicate 0014  
                  __size_of_nwkDataReqConfirm 00E8                          _timer0ReloadVal16bit 00FD  
                              ?_cmdSetCADRSSI 0058                           __size_of_cmdGetRFCH 001C  
                       CircularBufferSize@ctx 0002                          ?_nwkFrameCommandInit 0002  
                    __end_of_CRC_ReverseValue 7D54                           __size_of_cmdGetMode 0010  
                  __size_of_SX1276WriteBuffer 0024                             ?_SX1276ReadBuffer 0009  
                              _set_timer0base 8DA8                  __end_of_INTERRUPT_Initialize 83F0  
                     queue_serial_led_event@i 0022                       nwkRouteRemove@multicast 000A  
                            _PHY_SetShortAddr 90A2                                __end_of___flge 6108  
                  __size_of_UART1_Receive_ISR 0098                          __end_of_setFrequency 4A42  
                              __end_of___lmul 7C44                                __end_of___omul 6E62  
                                 vfpfcnvrt@ap 0049                                   vfpfcnvrt@fp 0046  
                                 vfpfcnvrt@ll 0060                                __end_of___wmul 89DA  
                            ??_nwkDataReqInit 0002                                __end_of_cmdMac 807E  
                          ??_SX1276ReadBuffer 000C                        __size_of_nwkFrameAlloc 00B4  
                         __size_of_cmdSetRFCH 00A0               CircularBufferPushBack@write_pos 001A  
                           __size_of_TMR0_ISR 0022                    __size_of_CRC_8BitDataWrite 0010  
                         __size_of_cmdSetAddr 0092                           __size_of_cmdSetBaud 006C  
                           __size_of_PHY_Init 0006                                __end_of_memcpy 765E  
                      ?_OSCILLATOR_Initialize 0001                           __size_of_cmdSetSink 0010  
                              __end_of_memset 4574                     __size_of_nwkTxAckReceived 00C0  
                              SX1276Read@addr 000D                               setFrequency@num 002B  
                              SX1276Read@data 000E                           __size_of_appDataInd 00B2  
                          NWK_RouteNewEntry@i 0006                             __size_of_NWK_Init 0058  
                           ??_NWK_TaskHandler 0044                                __end_of_printf 8BAA  
                         _nwkTxBroadcastFrame 4574                                 ??_loadMACAddr 0006  
                             ??_cmdGetCADRSSI 0058                                   ?_placeTimer 0002  
                              __end_of_strchr 73EA                                __end_of_strlen 7F4C  
                              __end_of_strtok 5CE4                                __end_of_strspn 7A08  
                              __end_of_strtol 842E                                __end_of_strstr 5DBC  
                         start_initialization 5DBC                               ___lodiv@divisor 000A  
                             ___lodiv@counter 001A                      __size_of_TMR0_Initialize 003E  
                       _nwkTxConvertPhyStatus 86C6               __size_of_PIN_MANAGER_Initialize 0088  
                           cmdSetAES@key_type 00A4                                ??_NWK_SetPanId 0006  
                                 __end_of_cad 6664                                   __end_of_abs 84AA  
                               nwkFrameInit@i 0002                                   __end_of_pad 671A  
                        __size_of_Default_ISR 0002                       ??_UART1_SetErrorHandler 0004  
                              ?_SYS_TimerInit 0001                         _nwkRouteFrameReceived 3694  
                     __size_of_CRC_Initialize 006C                       ?_nwkRouteSendRouteError 002A  
                    __size_of_SYS_TaskHandler 000E                             __size_of_SYS_Init 000E  
                       ??_UART1_RxDataHandler 0001                                 _Timer0Handler 7F9A  
                                 putch@txData 0003                                    ivt0x8_base 0008  
               __size_of_SYS_TimerTaskHandler 011A                       NWK_RouteFreeEntry@entry 0002  
                           ?_SYS_TimerStarted 0002                                _nwkRouteRemove 85DC  
                               _uart1RxBuffer 0214                                  _msgIDCounter 00DB  
                 __end_of_bootLoadApplication 22D4                            ??_SYS_TimerStarted 0004  
                           ___omul@multiplier 0002                                 _uart1TxBuffer 0300  
                            _NWK_OpenEndpoint 8C96                               ___llmod@divisor 0006  
                        __end_of_nwkFrameFree 8DDC                          __end_of_nwkFrameInit 8C10  
                   __size_of_DIO0_Receive_ISR 0096                                   ?_setTxPower 0001  
                        __end_of_nwkFrameNext 7254                          ?_nwkTxBroadcastFrame 0024  
                             ___llmod@counter 000A                           DATAEE_ReadByte@bAdd 0002  
                              cmdSetNaddr@cmd 0058                        nwkRouteFrameSent@frame 0008  
                               crc16_app@dptr 0013                        nwkRouteFrameSent@entry 000C  
                               crc16_app@seed 0017                              __CFG_LPBOREN$OFF 000000  
                           _nwkRouteFrameSent 56B4                        __end_of_set_timer0base 8DC2  
                                 ___strtoxl@a 002D                                   ___strtoxl@c 0033  
                                 ___strtoxl@s 0010                         ??_nwkFrameCommandInit 0004  
                             NWK_SetAddr@addr 0004                                   vfprintf@fmt 0050  
                                 ?_nwkTxFrame 0024                             nwkRouteRemove@dst 0008  
                                 ?_set_parity 0001               __end_of_CRC_CalculatedResultGet 6038  
                                    ??___flge 0018                 nwkTxDelayTimerHandler@restart 0016  
                            ??_PMD_Initialize 0002               __size_of_nwkRouteNormalizeRanks 003A  
                                    ??___lmul 000A                                      ??___omul 0012  
                                 _cmdGetRxCnt 807E                                      ??___wmul 0006  
             CRC_CalculatedResultGet@xorValue 0009                                      ??_cmdMac 0058  
                          ?_nwkRouteFrameSent 0008                                   _cmdBootLoad 8652  
                    _nwkTxAckWaitTimerHandler 7022                               ___strtoxl@limit 0027  
                      __size_of_TMR0_CallBack 0020                             NWK_SetPanId@panId 0004  
                                cmdSetAES@cmd 0058                                   __pdataBANK0 00F7  
                                 __pdataBANK1 01F2                                   __pdataBANK2 02DC  
                       CRC_8BitDataWrite@data 0002                                      ??_memcpy 000E  
                           SYS_TimerStarted@t 0004                                      ??_memset 0008  
                              cmdSendSink@cmd 0002                                 ??_SX1276Write 0010  
                              _PHY_SetChannel 84AA                          __end_of_nwkGroupInit 8B1C  
                                  memset@dest 0002                                      ??_printf 0055  
                         __size_of_computeFRF 018A                             ?_nwkTxTaskHandler 0001  
                              _uart_baud_rate 00E2                                      ??_strchr 0006  
                       __size_of_radio_engine 011A                                      ??_strlen 0004  
                                    ??_strtok 0013                                      ??_strtol 0038  
                                    ??_strspn 000C                                      ??_strstr 0011  
                         ??_nwkRouteFrameSent 000A                                     ___fladd@a 002D  
                                   ___fladd@b 0029                                  cmdSetRFCH@p1 007F  
                                cmdSetRFCH@p2 0084                         PHY_SetChannel@channel 002F  
                              _symbolDuration 013E                                   __pbssBIGRAM 05BD  
                          ??_nwkTxTaskHandler 0014                                   _cmdSetNaddr 7570  
                                   ___flmul@a 0014                                     ___flmul@b 0010  
                                 __pbssCOMRAM 005E                                set_uart_baud@i 0004  
                                 _cmdSendSink 909C                              ??_SPI1_ReadBlock 0007  
                          _UART1_ErrorHandler 01E6                   __size_of_get_free_rx_buffer 0062  
                               __pcstackBANK0 0060                                  cmdSetSF@temp 0086  
              __end_of_nwkRouteSendRouteError 5B2A                       nwkRoutePrepareTx@header 0011  
                        setSpreadingFactor@sf 002B                              ___aodiv@dividend 0002  
                           __size_of_cmdBcast 01F8                             __size_of_cmdGetSF 0018  
                                 _CRCCON0bits 003968                                   _CRCCON1bits 003969  
                           __size_of_cmdGetTX 0018                     bootLoadApplication@buf_id 0032  
                                cmdSetAddr@p1 0081                                  cmdSetAddr@p2 007F  
                       _nwkDataReqTaskHandler 746E                           cmdSetBaud@atCommand 003A  
                                   _crc16_app 73EA                             __size_of_cmdNaddr 0018  
                        __end_of_PHY_DataConf 85DC                                _PHY_SetRxState 9068  
                        __end_of_nwkRxSendAck 54CE                                   _appDataConf 8BCC  
                        __end_of_nwkTxConfirm 8B40                                  cmdSetTTL@cmd 0002  
                           __size_of___xxtofl 0164                             __size_of_cmdSetSF 00AE  
                           __size_of_cmdSetTX 00E0                                ?_Timer0Handler 0001  
                     __end_of_SPI1_Initialize 8E44                      _UART1_RxInterruptHandler 01F0  
                           __size_of_cmdReset 0004                        __end_of_nwkRouteRemove 8618  
               nwkRxHandleReceivedFrame@frame 0029                   __size_of_get_free_tx_buffer 0062  
                     nwkRxIndicateFrame@frame 0021                   __size_of_getSpreadingFactor 001A  
                   SYS_TimerTaskHandler@timer 0022                   __size_of_setSpreadingFactor 0102  
                                cmdSetTX@temp 0083                   ??_DATAEE_WriteByte_Platform 0009  
                         __end_of_loadMACAddr 85A0             __size_of_DATAEE_ReadByte_Platform 00F2  
                     ?_CircularBufferPopFront 0013                       CRC_ReverseValue@reverse 0005  
                             _SPI1_WriteBlock 8810                                     _atCommand 014B  
                   ?_DATAEE_ReadByte_Platform 0006                                  _currentAddr0 00FA  
                                _currentAddr1 00F9                                 _nwkFrameAlloc 67D0  
                                   _cmdGetCAD 8E8C                                 setSyncWord@sw 0011  
                           _nwkRoutePrepareTx 4FC6                           _nwkTxPhyActiveFrame 00BD  
                                _currentNetID 00F8                                     _cmdGetTTL 909E  
                                   ___strtoxl 0ABA                                  _currentMsgID 00DF  
                           __size_of_get_rssi 002A                         ??_nwkTxBroadcastFrame 0026  
                     ?_CircularBufferPushBack 0013                                     _cmdSetAES 2EAC  
                ?_UART1_SetRxInterruptHandler 0002               nwkRouteSendRouteError@multicast 002E  
                                   _cmdSetTTL 909A                         _TMR0_InterruptHandler 01EC  
                          ?_nwkRoutePrepareTx 000D                     __end_of_nwkRouteFrameSent 57A0  
                                   _atoi$7862 0011                                     _atoi$7863 0015  
                                   _atoi$7864 0013                                     _cmdRstCAD 8F02  
                                   __pnvBANK0 00FD                                     __pnvBANK1 01E6  
                        __end_of_nwkRouteInit 7F9A                               ??_cmdSetCADRSSI 005A  
                              _ATTimeoutTimer 00FB                           __size_of_placeTimer 01A0  
                            ___lwdiv@dividend 0002                        _PIN_MANAGER_Initialize 72DE  
                                   _dtoa$7370 0031                              ?_start_radio_cad 0001  
                             ?_set_timer0base 0002               __size_of_nwkTxDelayTimerHandler 008C  
                           ?_UART1_Initialize 0001                     __size_of_NWK_RouteNextHop 004A  
        __end_of_UART1_SetFramingErrorHandler 900A         __size_of_UART1_SetFramingErrorHandler 000E  
                _UART1_SetFramingErrorHandler 8FFC                             __size_of_sendInfo 0060  
                                _radio_engine 4D9E                          __end_of_PHY_SetPanId 90A2  
                               __pmediumconst FCAA                                     _enableCrc 8F16  
                                    ?___aodiv 0002                                      ?___fladd 0029  
                                    ?___aomod 0002                           UART1_Read@readValue 0002  
                         ??_nwkRoutePrepareTx 000F                                     __ptext100 8D54  
                                   __ptext101 671A                                 nwkGroupInit@i 0002  
                                   __ptext110 4D9E                                     __ptext102 7DAC  
                            ___aodiv@quotient 0014                                     __ptext111 65AA  
                                   __ptext103 8FA8                                     __ptext200 765E  
                                   __ptext120 61D6                                     __ptext112 8F8A  
                                   __ptext104 4C84                                     __ptext201 7254  
                                   __ptext121 12AE                                     __ptext113 8DA8  
                                   __ptext105 7022                                     __ptext210 8C10  
                                   __ptext202 7D54                                     __ptext130 9026  
                                   __ptext122 19A0                                     __ptext114 8AD0  
                                   __ptext106 7E56                                     __ptext211 6BE6  
                                   __ptext203 8158                                     __ptext131 6A92  
                                   __ptext123 47EC                                     __ptext115 85A0  
                                   __ptext107 713E                                     __ptext220 8C32  
                                   __ptext212 8FD2                                     __ptext204 7FE8  
                                   __ptext140 6368                                     __ptext132 1632  
                                   __ptext124 8FB6                                     __ptext116 86C6  
                                   __ptext108 8B1C                                     __ptext221 72DE  
                                   __ptext213 8FE0                                     __ptext205 8C96  
                                   __ptext141 53D2                                     __ptext133 4574  
                                   __ptext125 34A2                                     __ptext117 6EFA  
                                   __ptext109 9084                                     __ptext230 8CD8  
                                   __ptext222 8ED4                                     __ptext214 8FEE  
                                   __ptext206 7F4C                                     __ptext150 87A4  
                                   __ptext142 30AC                                     __ptext134 2A66  
                                   __ptext126 56B4                                     __ptext118 89DA  
                                   __ptext231 8846                                     __ptext223 83B0  
                                   __ptext215 8FFC                                     __ptext207 8AF6  
                                   __ptext151 7946                                     __ptext143 8A04  
                                   __ptext135 8A80                                     __ptext127 868C  
                                   __ptext119 6D2A                                     __ptext232 8CF8  
                                   __ptext224 7810                                     __ptext216 900A  
                                   __ptext208 8BEE                                     __ptext160 3BA0  
                                   __ptext152 54CE                                     __ptext144 6884  
                                   __ptext136 3876                                     __ptext128 6B3E  
                                   __ptext233 6E62                                     __ptext225 8C54  
                                   __ptext217 8526                                     __ptext209 903E  
                                   __ptext161 4EB8                                     __ptext153 89AC  
                                   __ptext145 77A4                                     __ptext137 8226  
                                   __ptext129 7C44                                     __ptext234 90AA  
                                   __ptext226 8CB6                                     __ptext218 9018  
                                   __ptext170 57A0                                     __ptext162 6DC8  
                                   __ptext154 5E92                                     __ptext146 642C  
                                   __ptext138 3694                                     __ptext235 90AC  
                                   __ptext227 90A4                                     __ptext219 8E2A  
                                   __ptext171 8BCC                                     __ptext163 4FC6  
                                   __ptext155 5A4A                                     __ptext147 71CA  
                                   __ptext139 62A0                                     __ptext236 9090  
                                   __ptext228 7F9A                                     __ptext180 0EE8  
                                   __ptext172 82EE                                     __ptext164 80C8  
                                   __ptext156 8370                                     __ptext148 7CA0  
                                   __ptext237 8B64                                     __ptext229 90A8  
                                   __ptext181 8DDC                                     __ptext173 8FC4  
                                   __ptext165 787C                                     __ptext157 8DC2  
                                   __ptext149 85DC                                     __ptext238 0000  
                                   __ptext190 8EBC                                     __ptext182 4A42  
                                   __ptext174 9032                                     __ptext166 894C  
                                   __ptext158 746E                                     __ptext191 8F16  
                                   __ptext183 4006                                     __ptext175 908A  
                                   __ptext167 67D0                                     __ptext159 1CE8  
                                   __ptext192 8F28                                     __ptext184 6038  
                                   __ptext176 416A                                     __ptext168 4420  
                                   __ptext193 8B40                                     __ptext185 8DF6  
                                   __ptext177 86FE                                     __ptext169 75EC  
                                   __ptext194 8810                                     __ptext186 4918  
                                   __ptext178 8A2E                                     __ptext195 8EEC  
                                   __ptext187 87DA                                     __ptext179 50D4  
                                   __ptext196 8AA8                                     __ptext188 84E8  
                                   __ptext197 8736                                     __ptext189 8EA4  
                      __end_of_PHY_SetChannel 84E8                                     __ptext198 8E10  
                      __size_of_set_uart_baud 00CE                                     __ptext199 3A16  
                                    ?___flmul 0010                                      ?___fltol 0039  
                                    ?___lldiv 0016                                      ?___lodiv 0002  
                                    ?___llmod 0002                    CircularBufferInit@buf_size 000D  
                                    ?___lomod 0002                                      ?___lwdiv 0002  
                          ??_UART1_Initialize 0004                              _nwkDataReqTxConf 6B3E  
                                    ?_cmdAddr 0001                         NWK_RouteNextHop@entry 000B  
                                    ?_cmdRecv 0001                                      ?_cmdSend 0058  
                            _uart1RxLastError 00C4                             ?_processATCommand 0001  
                               ??_UART1_Write 0002                             __size_of_vfprintf 0060  
                                    ?_get_lqi 0001                        __size_of_nwkRouteFrame 00D6  
                          ??_processATCommand 00AD                               ___lomod@divisor 000A  
                      __CFG_BBSIZE$BBSIZE_512 000000                         _nwkRxHandleIndication 6368  
                                   _fhssdebug 00CD                               ___lomod@counter 0012  
    __end_of_UART1_DefaultOverrunErrorHandler 90AC     __size_of_UART1_DefaultOverrunErrorHandler 0002  
          ??_UART1_DefaultOverrunErrorHandler 0001             ?_UART1_DefaultOverrunErrorHandler 0001  
            _UART1_DefaultOverrunErrorHandler 90AA                                      ?_isalpha 0002  
                                    ?_isdigit 0002                           __size_of_setTxPower 002A  
                      ?_nwkTxConvertPhyStatus 0001                        __end_of_PHY_SetRxState 9070  
                                    ?_receive 0001                               ??_SYS_TimerInit 0002  
                                ??_cmdGetRFCH 0058                                      ?_islower 0002  
                                    ?_isspace 0002                                      ?_isupper 0002  
                      ?_nwkRouteFrameReceived 000B                           __end_of_SX1276Write 8F3A  
                                ??_cmdGetMode 0058                        _nwkRouteNormalizeRanks 868C  
                                   _initRadio 416A                                    ?_crc16_app 0013  
                       DIA_ReadByte@flashAddr 0002                                     cmdSend@p1 0088  
                                   cmdSend@p2 0086                              ___lwdiv@quotient 0006  
              __end_of_CircularBufferPopFront 53D2                           __size_of_nwkTxFrame 0180  
                             ?_nwkRouteRemove 0008                     nwkRxRejectDuplicate@entry 001D  
                         __size_of_set_parity 0060                                 _TMR0_CallBack 8CB6  
                   __end_of_nwkRoutePrepareTx 50D4                                __size_of_fputc 006C  
                              __size_of_fputs 003E                     nwkRxRejectDuplicate@shift 0018  
                                    ?_strcspn 0008                      __size_of_DATAEE_ReadByte 001E  
                                    ?_strncmp 0002                                      ?_toupper 0008  
                                 _U1ERRIRbits 003DF9                                  ??_cmdSetRFCH 005A  
                              __size_of_srand 0038                                ?_nwkFrameAlloc 000E  
                                    ?_strtoul 0034                                __size_of_putch 000A  
                                ??_cmdSetAddr 005A                                  ??_cmdSetBaud 003C  
                        _INTERRUPT_Initialize 83B0                                      _U1CTSPPS 003AE6  
                            __cadBackoffTimer 00F5                __end_of_CircularBufferPushBack 55C2  
                                ??_cmdSetSink 0058                                    ?_cmdGetCAD 0001  
                        SX1276ReadBuffer@addr 000C                           ___strtoxl@conv_done 0026  
                                  ?_cmdGetTTL 0001                                    ?___strtoxl 0010  
                                ??_appDataInd 001D                                    nwkRxInit@i 0005  
                           ??_TMR0_Initialize 0004                       __size_of_get_timer0base 0026  
                        SX1276ReadBuffer@size 000B                                 ??_setSyncWord 0011  
                           free_tx_buffer@req 0002                                ___wmul@product 0006  
                                    _LATAbits 003FBA         UART1_SetErrorHandler@interruptHandler 0002  
                                    _LATCbits 003FBC      nwkRxDuplicateRejectionTimerHandler@timer 0012  
                 __size_of_explicitHeaderMode 0018                                    ?_cmdSetAES 0058  
                                    _SCANCON0 00397C                                      _EUIDbyte 01C2  
                                  ?_cmdSetTTL 0002                                   _ledTimerVar 0147  
                           ??_SYS_TaskHandler 004D                                    ?_cmdRstCAD 0001  
                                    _IPR3bits 003983                                      _SCANTRIG 00397D  
                                    _PIE3bits 003993                                appDataConf@req 0007  
                          cmdSetAddr@tempaddr 0083                           __CFG_BORV$VBOR_2P45 000000  
                                 _ledStateVar 00C9                                      _IVTBASEH 003FD6  
                                    _IVTBASEL 003FD5                                      _IVTBASEU 003FD7  
                           _NWK_RouteNewEntry 62A0                                     _sinkAddr0 00DE  
                                   _sinkAddr1 00DD                 ??_UART1_SetRxInterruptHandler 0004  
                       __size_of_setFrequency 012A                     __size_of_executeATCommand 057C  
                  __end_of_CircularBufferInit 67D0                    ??_TMR0_SetInterruptHandler 0004  
                                    _PIR0bits 0039A0                                     _nwkGroups 0200  
                  __end_of_CircularBufferSize 7BE6                   nwkRouteFrameReceived@header 0015  
                                    _PIR2bits 0039A2                                      _SPI1BAUD 003D19  
                                    _PIR3bits 0039A3                                      _SPI1CON0 003D14  
                                    _SPI1CON1 003D15                                      _SPI1CON2 003D16  
                               ??_PHY_DataInd 0014                                     _nwkRxInit 7FE8  
                               ??_PHY_DataReq 0014                               _print_hop_table 5888  
                                   _nwkTxInit 8158                           ___strtoxl@is_signed 0016  
                          ?_NWK_RouteNewEntry 0002                       _eeprom_write_flags_enum 00E3  
                              _ATVersionMajor FDB8                          __end_of_NWK_SetPanId 8D36  
                                  ?_enableCrc 0001                                _ATVersionMinor FDB7  
                     _setSignalBandwidth$8782 002B                            __end_of_cmdGetRFCH 8D8E  
                                    _TMR0_ISR 8C54                     _DATAEE_WriteByte_Platform 81E2  
                             ?_PHY_SetChannel 0001                    __end_of_UART1_Transmit_ISR 887C  
                          __end_of_cmdGetMode 8F7A                                      _PHY_Init 908A  
               ?_UART1_SetFramingErrorHandler 0002                              initRadio@version 0037  
                                   _vfpfcnvrt 062E                                      _NWK_Init 7D54  
                                 cmdBcast@cmd 0058                                     _txTimeOut 00F1  
                          SPI1_ReadBlock@data 0007                       ?_queue_serial_led_event 0001  
                                   _xtoa$7388 0032                                     _xtoa$7389 0034  
                                   _rx_buffer 0A76                            NWK_GroupIsMember@i 0006  
                          __end_of_cmdSetRFCH 6D2A                          free_tx_buffer@buf_id 0006  
                         ??_NWK_RouteNewEntry 0004                             ___wmul@multiplier 0002  
                            _nwkTxAckReceived 642C                            __end_of_cmdSetAddr 7022  
                        getSignalBandwidth@bw 0015                            __end_of_cmdSetBaud 7738  
           nwkRxHandleReceivedFrame@broadcast 002D                            __end_of_cmdSetSink 8F5A  
                      nwkDataReqSendFrame@req 002A                                     _tx_buffer 086A  
                          __end_of_appDataInd 6936                          setSignalBandwidth@bw 002F  
                                 _loadMACAddr 8564                               ?_PHY_SetRxState 0001  
                      ?_nwkDataReqTaskHandler 0001                       __end_of_SPI1_WriteBlock 8846  
                             ??_Timer0Handler 0001                        _nwkTxDelayTimerHandler 713E  
                                    _SYS_Init 8FC4                           __end_of_UART1_Write 82AC  
                       DATAEE_WriteByte@bData 0004                                 ??_NWK_DataReq 0004  
                 __end_of_nwkRxServiceDataInd 7810                                    ?_initRadio 0001  
                     __size_of_NWK_RouteTable 000A                                  _isspace$7889 0008  
                              _CRC_Initialize 7810                                ?_TMR0_CallBack 0001  
                                 strtoul@base 0038                                 _set_uart_baud 6108  
                                  vfpfcnvrt@c 0068                              ?_SPI1_Initialize 0001  
                          _getSignalBandwidth 4A42                            _setSignalBandwidth 0EE8  
                                 _INTCON0bits 003FD2                             ___lmul@multiplier 0002  
                       __size_of_nwkFrameFree 001A                                     copy_data0 5DD0  
                                   copy_data1 5DF2                                     copy_data2 5E14  
                       __size_of_nwkFrameInit 0022                         ?_INTERRUPT_Initialize 0001  
                            get_rssi@rssi_reg 0002                         __size_of_nwkFrameNext 008A  
                 nwkDataReqSendFrame@mcHeader 002D              __size_of_CRC_CalculatedResultGet 00D0  
                    __end_of_PHY_SetShortAddr 90A4                                  ??_computeFRF 0023  
               nwkRxRejectDuplicate@freeEntry 001B                             ?_DATAEE_WriteByte 0002  
                                _setFrequency 4918                     __size_of_nwkRxTaskHandler 00AC  
                               ??_NWK_SetAddr 0006                        _uart1TxBufferRemaining 00FF  
                              ___strtoxl$8050 0025                                ___strtoxl$8051 0021  
                              ___strtoxl$8052 0023                                ___strtoxl$8049 001F  
                _nwkRxDuplicateRejectionTable 028A                             cmdGetRxCnt@buf_id 005C  
                _nwkRxDuplicateRejectionTimer 01B5                     __end_of_NWK_RouteNewEntry 6368  
                               _nwkRouteFrame 5E92                            ??_DATAEE_WriteByte 0005  
                                 _ledtasksbuf 01CE                              _DIO0_Receive_ISR 6EFA  
                               _nwkRouteTable 0244                           ?_getSignalBandwidth 000F  
                         ?_setSignalBandwidth 0023                    __size_of_nwkRouteFrameSent 00EC  
                               ?_cmdSetParity 0058                                  _uart1RxCount 00C5  
                  __end_of_implicitHeaderMode 8EBC                                      __Hrparam 0000  
                      __end_of_ATVersionMajor FDB9                        __end_of_ATVersionMinor FDB8  
                           computeFRF@num_mod 0027                                     memcpy@tmp 000E  
                                  ?_nwkRxInit 0001                                    vfprintf@ap 0052  
                                    __Lrparam 0000                                    vfprintf@fp 004E  
                                  ?_nwkTxInit 0001                               _NWK_TaskHandler 8FB6  
                       __size_of_nwkGroupInit 0026                            __CFG_BOREN$SBORDIS 000000  
                              ___strtoxl@base 0014                               _nwkRxAckControl 00C3  
                                 cmdSetAES@p1 00A6                                   cmdSetAES@p2 009F  
                         __end_of_setSyncWord 8F6A                                ___strtoxl@sign 002B  
                              ___strtoxl@skip 002C                            cmdSetCADRSSI@CHstr 0081  
                     ??_OSCILLATOR_Initialize 0002                             ?_CRC_ReverseValue 0002  
                     __size_of_setCodingRate4 0036                             appDataInd@dataptr 001E  
              __end_of_queue_serial_led_event 7E56                              __size_of___aodiv 0158  
                            __size_of___fladd 0348                  nwkRouteErrorReceived@command 000F  
                            __size_of___aomod 0134                   __size_of_NWK_RouteFindEntry 0068  
                            __size_of___flmul 0384                              __size_of___fltol 00CA  
                DATAEE_ReadByte_Platform@addr 0006                              __size_of___lldiv 008A  
                            __size_of___lodiv 00DE                  __size_of_CircularBufferEmpty 002E  
                            __size_of___llmod 006E                      processATCommand@data_930 00AF  
                            __size_of___lomod 00BE                                    ?_vfpfcnvrt 0046  
                       SYS_TimerStarted@timer 0002                         nwkRxTaskHandler@frame 0042  
                            __size_of___lwdiv 0056                  __size_of_CircularBufferSpace 0036  
                            __size_of_cmdAddr 0020                            ??_CRC_ReverseValue 0004  
 __end_of_nwkRxDuplicateRejectionTimerHandler 7EAA  __size_of_nwkRxDuplicateRejectionTimerHandler 0054  
       ??_nwkRxDuplicateRejectionTimerHandler 0014          ?_nwkRxDuplicateRejectionTimerHandler 0012  
         _nwkRxDuplicateRejectionTimerHandler 7E56                        nwkRoutePrepareTx@frame 000D  
                             ___aodiv@divisor 000A                                   _SX1276Write 8F28  
                         __end_of_PHY_DataInd 4918                        ?_nwkRxHandleIndication 003B  
                         __end_of_PHY_DataReq 7CA0                              __size_of_cmdRecv 0100  
                            __size_of_cmdSend 0262                   __end_of_nwkDataReqSendFrame 201A  
                         NWK_LinearizeLqi@val FDA7                               ___aodiv@counter 0012  
                                 cmdSetTX@cmd 0058                       __size_of_SYS_TimerStart 0028  
                        ??_getSignalBandwidth 0013                   __size_of_NWK_RouteFreeEntry 0036  
                    __end_of_NWK_OpenEndpoint 8CB6                          ??_setSignalBandwidth 0027  
                          __end_of_computeFRF 3BA0                         __size_of_PHY_DataConf 003C  
                       __size_of_nwkRxSendAck 00FC                         __size_of_nwkTxConfirm 0024  
                    _nwkRxHandleReceivedFrame 1632                                      _cmdBcast 32AA  
                                _nwkFrameFree 8DC2          __size_of_UART1_SetRxInterruptHandler 000E  
                                _nwkFrameInit 8BEE                                      _cmdGetSF 8E74  
                                ??_placeTimer 0004                                      _cmdGetTX 8E5C  
                                _nwkFrameNext 71CA                              __size_of_get_lqi 009E  
                                 _currentMode 00DC                                      _cmdNaddr 8E44  
                                    ___xxtofl 4006                                      _cmdSetSF 6936  
                      __end_of_CRC_Initialize 787C                                      _cmdSetTX 596A  
                                    _cmdReset 9096                             _set_hop_table_ttl 8F3A  
                            __size_of_isalpha 0034                              __size_of_isdigit 0034  
                                    __pivt0x8 0008                              __size_of_receive 003E  
                             ___lwdiv@divisor 0004                   nwkRouteSendRouteError@frame 0031  
                                 ??_crc16_app 0019                              __size_of_islower 0034  
                              ?_set_uart_baud 0001                              __size_of_isspace 0044  
                             ___lwdiv@counter 0008                                 ?_DIA_ReadByte 0002  
                             ??_nwkFrameAlloc 0010                     __size_of_SX1276ReadBuffer 0028  
                                    __ptext10 596A                                      __ptext11 909A  
                                    __ptext20 76CC                                      __ptext12 8F4A  
                                    __ptext21 5C08                                      __ptext13 6936  
                                    __ptext30 7BE6                                      __ptext22 79A8  
                                    __ptext14 6C8A                                      __ptext31 8F02  
                                    __ptext23 7A08                                      __ptext15 70B2  
                                    __ptext40 8E5C                                      __ptext32 9096  
                                    __ptext24 6F90                                      __ptext16 7570  
                                    __ptext41 909E                                      __ptext33 51D6  
                                    __ptext25 2EAC                                      __ptext17 8F5A  
                                    __ptext50 5CE4                                      __ptext42 8E74  
                                    __ptext34 52D6                                      __ptext26 909C  
                                    __ptext18 69E4                                      __ptext51 4B64  
                                    __ptext43 807E                                      __ptext35 897E  
                                    __ptext27 2804                                      __ptext19 83F0  
                                    __ptext60 7EAA                                      __ptext52 7366  
                                    __ptext44 8D72                                      __ptext36 8E44  
                                    __ptext28 8112                                      __ptext61 887C  
                                    __ptext53 78E4                                      __ptext45 8F6A  
                                    __ptext37 8034                                      __ptext29 0ABA  
                                    __ptext70 842E                                      __ptext62 88B0  
                                    __ptext54 74F0                                      __ptext46 8D8E  
                                    __ptext38 907E                                      __ptext71 7738  
                                    __ptext63 88E4                                      __ptext55 8C76  
                                    __ptext47 8E8C                                      __ptext39 7A68  
                                    __ptext80 8F9A                                      __ptext72 905E  
                                    __ptext64 2C98                                      __ptext56 8B88  
                                    __ptext48 8652                                      __ptext81 82AC  
                                    __ptext73 826A                                      __ptext65 64EC  
                                    __ptext57 7AC8                                      __ptext49 32AA  
                                    __ptext90 8F7A                                      __ptext82 201A  
                                    __ptext74 846C                                      __ptext66 5B2A  
                                    __ptext58 062E                                      __ptext91 9068  
                                    __ptext83 6108                                      __ptext75 46B8  
                                    __ptext67 22D4                                      __ptext59 2584  
                                    __ptext92 84AA                                      __ptext84 7B28  
                                    __ptext76 42C8                                      __ptext68 6664  
                                    __ptext93 8D18                                      __ptext85 8564  
                                    __ptext77 3E96                                      __ptext69 7EFC  
                                    __ptext94 90A0                                      __ptext86 8BAA  
                                    __ptext78 819E                                      __ptext95 8D36  
                                    __ptext87 73EA                                      __ptext79 8918  
                                    __ptext96 90A2                                      __ptext88 5F68  
                                    __ptext97 81E2                                      __ptext89 7CFC  
                                    __ptext98 55C2                                      __ptext99 8330  
                            __size_of_isupper 0034                            ?_set_hop_table_ttl 0058  
                 __size_of_nwkRxIndicateFrame 01FE                    __size_of_nwkRoutePrepareTx 010E  
                        set_hop_table_ttl@cmd 0058                __size_of_UART1_SetErrorHandler 000E  
                                    _get_rssi 89DA                                      _fhssList FCAB  
               __end_of_UART1_SetErrorHandler 9018                         __size_of_nwkRouteInit 004E  
                 DATAEE_WriteByte@GIEBitValue 0005                                 nwkRouteInit@i 0002  
                            __size_of_strcspn 0060                              __size_of_strncmp 0120  
                            __size_of_toupper 0052                      nwkTxBroadcastFrame@frame 0024  
                                 ??_cmdGetCAD 0058                              __size_of_strtoul 0046  
                                    _ledtimer 00EF                                      _ledqueue 0400  
                                 ??_cmdGetTTL 0002                                   ??___strtoxl 0017  
                              ?_nwkRouteFrame 0033                       __end_of_print_hop_table 596A  
                                _nwkGroupInit 8AF6                                      cmdRecv@i 005A  
                             cmdSetCADRSSI@p1 007F                               cmdSetCADRSSI@p2 0084  
                               __size_of_cmdI 0006                           __end_of_NWK_DataReq 7570  
                               __size_of_idle 000C                                 __size_of_atoi 0170  
                               __size_of_main 0028                                 __size_of_dtoa 02B0  
                         ??_set_hop_table_ttl 005A                                 __size_of_rand 010E  
                                 ??_cmdSetAES 005A                    ??_nwkTxAckWaitTimerHandler 0014  
                              ??_cmdSetParity 005A                                 __size_of_utoa 0214  
                                ??_setTxPower 0011                                   ??_cmdSetTTL 0004  
                               __size_of_xtoa 0280                         __size_of_PHY_SetPanId 0002  
                                 ??_cmdRstCAD 0058                               cmdSetAES@AESstr 007F  
        __end_of_TMR0_DefaultInterruptHandler 90A6         __size_of_TMR0_DefaultInterruptHandler 0002  
                _TMR0_DefaultInterruptHandler 90A4                             ??_DATAEE_ReadByte 0004  
                        __CFG_WDTCWS$WDTCWS_7 000000                           get_timer0base@timer 0002  
                                    _sendInfo 7A68                 DATAEE_WriteByte_Platform@addr 0006  
                __end_of_FirmwareVersionMajor FDB7                 DATAEE_WriteByte_Platform@data 0008  
                                 _IVTLOCKbits 003FD4                            cmdSetBaud@tempbaud 003C  
                __end_of_FirmwareVersionMinor FDB6                           set_timer0base@timer 0002  
                       _nwkRouteErrorReceived 7CA0                        SX1276ReadBuffer@buffer 0009  
                    __size_of_PHY_TaskHandler 0006              nwkRxHandleReceivedFrame@mcHeader 002F  
                                ??_nwkTxFrame 0026                    nwkRouteFrameReceived@frame 000B  
                   _UART1_OverrunErrorHandler 01E8                           sendOKMessage@F16691 01F2  
                         __end_of_NWK_SetAddr 8D54                            __end_of_placeTimer 3A16  
                                ??_set_parity 0002                              _NWK_RouteNextHop 80C8  
UART1_SetOverrunErrorHandler@interruptHandler 0002                    nwkRouteFrameReceived@entry 0013  
          __size_of_UART1_DefaultErrorHandler 0006                                  ?_cmdGetRxCnt 0058  
                                 ??_enableCrc 0011                                  _PHY_DataConf 85A0  
                                _nwkRxSendAck 53D2                                  _nwkTxConfirm 8B1C  
                __end_of_SYS_TimerTaskHandler 4D9E                     __size_of_SYS_TimerStarted 0044  
                                ?_cmdBootLoad 0001                    ?_UART1_DefaultErrorHandler 0001  
                      __size_of_queueLedEvent 003A                                    strtol@base 0036  
               __size_of_nwkRxRejectDuplicate 0232                                      _vfprintf 7AC8  
                                   printf@fmt 0075                 nwkTxAckWaitTimerHandler@frame 0017  
                           _UART1_is_rx_ready 8F9A                         cmdSetParity@atCommand 0058  
                                    _syncList 02DC                 nwkTxAckWaitTimerHandler@timer 0012  
                         setFrequency@num_mod 0027                                   _UART1_Write 826A  
            __end_of_DATAEE_ReadByte_Platform 56B4                              ___aomod@dividend 0002  
                   __end_of_set_hop_table_ttl 8F4A                            ?_UART1_is_rx_ready 0001  
                               ??_Default_ISR 0001                ??_UART1_SetFramingErrorHandler 0004  
                 __end_of_UART1_RxDataHandler 8B88                                _vfpfcnvrt$7403 006B  
                            cmdGetRxCnt@count 005B                                  _nwkRouteInit 7F4C  
                                ?_cmdSetNaddr 0058                                   _uart1RxHead 005E  
                                ?_cmdSendSink 0002                     setCodingRate4@denominator 0013  
                             ?_CRC_Initialize 0001                                   _uart1TxHead 00C8  
                             ??_TMR0_CallBack 0001                                   _uart1RxTail 00C6  
                                 _NVMCON1bits 0039E5                                   _phyRxBuffer 0340  
                            ?_SPI1_WriteBlock 0003                                   _uart1TxTail 00C7  
                                    memcpy@d1 0008                            __end_of_setTxPower 8A58  
                                    memcpy@s1 000A                                ??_DIA_ReadByte 0006  
                       __end_of_cmdGetCADRSSI 8DA8                                   ??_initRadio 0033  
                        SPI1_WriteBlock@block 0003                                  ?_appDataConf 0007  
                                    isalpha@c 0002                                      isdigit@c 0002  
                      ??_INTERRUPT_Initialize 0002                           DIO0_Receive_ISR@ind 0046  
                         ??_UART1_is_rx_ready 0002                                  _PHY_SetPanId 90A0  
                            appDataInd@buf_id 0020                                    _SX1276Read 8EEC  
                          __end_of_nwkTxFrame 3D20                            __end_of_set_parity 7B88  
                    __end_of_nwkDataReqTxConf 6BE6                                      intlevel1 0000  
                                    intlevel2 0000                      get_free_rx_buffer@buf_id 0002  
                   nwkRouteSendRouteError@dst 002C                     nwkRouteSendRouteError@src 002A  
                              _get_timer0base 8AD0                     __size_of_nwkTxTaskHandler 01F2  
                      NWK_RouteNewEntry@entry 0009                       __end_of_NWK_TaskHandler 8FC4  
                                    islower@c 0002                              ??_set_timer0base 0005  
                                    isspace@c 0002                   __end_of_nwkFrameCommandInit 83B0  
                            ___lldiv@dividend 0016                       ?_PIN_MANAGER_Initialize 0001  
                  __size_of_NWK_RouteNewEntry 00C8                                   _setSyncWord 8F5A  
                           __CFG_CLKOUTEN$OFF 000000                         __size_of_NWK_SetPanId 001E  
                                    isupper@c 0002                                     strncmp@_l 0002  
                                   strncmp@_r 0004                              _executeATCommand 00B2  
                          get_timer0base@tval 0004                   NWK_RouteFindEntry@multicast 0004  
                      nwkRxServiceDataInd@ind 001C                            set_timer0base@tval 0003  
                     NWK_OpenEndpoint@handler 0002                           _uart1RxStatusBuffer 0128  
               ?_TMR0_DefaultInterruptHandler 0001                                   ??_nwkRxInit 0005  
                                 ??_nwkTxInit 0002                               _nwkTxDelayTimer 019B  
                           _setPreambleLength 8DF6                                   _PHY_DataInd 47EC  
                                 _PHY_DataReq 7C44                          PHY_SetShortAddr@addr 0002  
                __size_of_bootLoadApplication 02BA                                    _SPI1SCKPPS 003ADE  
                                  _SPI1SDIPPS 003ADF                                     strtok@sep 0011  
                                    printf@ap 0057                     __end_of_UART1_is_rx_ready 8FA8  
                                  _UART1_Read 82AC  UART1_SetFramingErrorHandler@interruptHandler 0002  
                          ?_setPreambleLength 0011             __end_of_UART1_DefaultErrorHandler 9096  
                             ___aomod@divisor 000A                      nwkRouteErrorReceived@ind 000D  
                                 ??_vfpfcnvrt 004A                               ___aomod@counter 0012  
                         SPI1_WriteBlock@data 0007                       ??_nwkTxConvertPhyStatus 0002  
                     __size_of_free_tx_buffer 0042                       ??_nwkRouteFrameReceived 000D  
                  __end_of_get_free_rx_buffer 79A8                       ?_nwkRouteNormalizeRanks 0001  
      nwkFrame@nwkFramePayloadSize@frame_4851 0002                              ??_nwkRouteRemove 000B  
                            _halTimerIrqCount 00C1                           ??_setPreambleLength 0013  
                            ___lldiv@quotient 001E                                   _uart_parity 00E1  
                             _TMR0_Initialize 8526                               ??_set_uart_baud 0002  
                                    strcspn@c 000A                                      strcspn@i 000D  
                                    strcspn@s 0008                             _current_baud_rate 0142  
                  __end_of_get_free_tx_buffer 7946                                      strncmp@l 0009  
                                    strncmp@n 0006                    __end_of_getSpreadingFactor 8DF6  
                                    strncmp@r 000B                                      toupper@c 0008  
                  __end_of_setSpreadingFactor 51D6                     __size_of_UART1_Initialize 00A4  
                              _NWK_RouteTable 9054                      DIO0_Receive_ISR@irqFlags 0045  
                             _SYS_TaskHandler 8FA8                                   _NWK_DataReq 74F0  
                                    strstr@nl 0011                       __size_of_nwkDataReqInit 000C  
                                    strtoul@s 0034                       _CRC_CalculatedResultGet 5F68  
                    _UART1_TxInterruptHandler 01EE                   __end_of_nwkTxBroadcastFrame 46B8  
                               _queueLedEvent 8618                                  _NWK_SetPanId 8D18  
                      __end_of_get_timer0base 8AF6                                 ___fladd@signs 0035  
                         __end_of_Default_ISR 90AA                               ??_nwkRouteFrame 0035  
                             cmdSetRFCH@CHstr 0081                     __size_of_processATCommand 0176  
                                ___aodiv@sign 0013                              _nwkRxTaskHandler 6A92  
              __end_of_PIN_MANAGER_Initialize 7366                       SPI1_ReadBlock@blockSize 0005  
                       NWK_RouteFindEntry@dst 0002                                  ___fladd@aexp 0036  
                                ___fladd@bexp 0037                                   _NWK_SetAddr 8D36  
                              cmdBcast@buf_id 0081                              ?_print_hop_table 0058  
         __end_ofnwkFrame@nwkFramePayloadSize 8A2E                   nwkFrame@nwkFramePayloadSize 8A04  
                    __end_of_nwkTxAckReceived 64EC                  ?_UART1_SetTxInterruptHandler 0002  
                      ?_nwkRouteErrorReceived 000D                            _eeprom_write_flags 0149  
                            ??_PHY_SetChannel 002F                     __end_of_setPreambleLength 8E10  
                                ___aomod@sign 0013                           NWK_RouteFindEntry@i 0007  
                    get_free_tx_buffer@buf_id 0002                    __end_of_spi1_configuration FDB5  
                  nwkRxRejectDuplicate@header 0012                CRC_CalculatedResultGet@reverse 0010  
               CRC_CalculatedResultGet@result 0011                         __end_of_cmdSetCADRSSI 6A92  
